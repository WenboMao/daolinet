!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-destdir	debian/rules.modules	/^	dh_builddeb --destdir=$(DEB_DESTDIR)$/;"	m
A	lib/meta-flow.c	2158;"	d	file:
A	lib/meta-flow.c	2171;"	d	file:
AA_REFRESH_INTERVAL	vswitchd/bridge.c	218;"	d	file:
AA_STATUS	lib/ovs-lldp.c	161;"	d	file:
AA_STATUS	lib/ovs-lldp.c	163;"	d	file:
AA_STATUS	lib/ovs-lldp.c	70;"	d	file:
AA_STATUS	lib/ovs-lldp.c	72;"	d	file:
AA_STATUS_MULTIPLE	lib/ovs-lldp.c	/^    AA_STATUS_MULTIPLE$/;"	e	enum:aa_status	file:
AA_STATUS_MULTIPLE	lib/ovs-lldp.c	60;"	d	file:
AA_STATUS_N_MULTIPLE	lib/ovs-lldp.c	/^    AA_STATUS_N_MULTIPLE$/;"	e	enum:aa_status	file:
AA_STRUCTS_H	lib/lldp/aa-structs.h	21;"	d
ABORTED	python/ovs/db/idl.py	/^    ABORTED = "aborted"          # ovsdb_idl_txn_abort() called.$/;"	v	class:Transaction
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing aclocal-1.13$/;"	m
ACLOCAL	datapath/Makefile	/^ACLOCAL = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing aclocal-1.13$/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	datapath/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACS_AUTOPLAY	datapath-windows/ovsext/resource.h	375;"	d
ACS_CENTER	datapath-windows/ovsext/resource.h	81;"	d
ACS_TIMER	datapath-windows/ovsext/resource.h	465;"	d
ACS_TRANSPARENT	datapath-windows/ovsext/resource.h	262;"	d
ACTIVE	lib/netdev-dummy.c	/^    ACTIVE      \/* Connect to listener. *\/$/;"	e	enum:dummy_packet_conn_type	file:
ACTIVE_TIMEOUT	ofproto/ofproto-dpif-ipfix.c	/^    ACTIVE_TIMEOUT = 0x02,$/;"	e	enum:ipfix_flow_end_reason	file:
ADD	ofproto/bond.c	/^    ADD,        \/* Add the rule to ofproto's flow table. *\/$/;"	e	enum:bond_op	file:
ADD	ofproto/in-band.c	/^    ADD,                       \/* Add the rule to ofproto's flow table. *\/$/;"	e	enum:in_band_op	file:
ADD_ALL_VLANS_CMD	utilities/ovs-vlan-bug-workaround.c	34;"	d	file:
ADVERTISED_Asym_Pause	lib/netdev-linux.c	94;"	d	file:
ADVERTISED_Pause	lib/netdev-linux.c	91;"	d	file:
AES128_H	lib/aes128.h	26;"	d
AF_INET	include/sparse/sys/socket.h	/^    AF_INET,$/;"	e	enum:__anon74
AF_INET6	include/sparse/sys/socket.h	/^    AF_INET6,$/;"	e	enum:__anon74
AF_NETLINK	include/sparse/sys/socket.h	/^    AF_NETLINK,$/;"	e	enum:__anon74
AF_PACKET	include/sparse/sys/socket.h	/^    AF_PACKET,$/;"	e	enum:__anon74
AF_UNIX	include/sparse/sys/socket.h	/^    AF_UNIX,$/;"	e	enum:__anon74
AF_UNSPEC	include/sparse/sys/socket.h	/^    AF_UNSPEC,$/;"	e	enum:__anon74
ALIGNED_CAST	lib/util.h	238;"	d
ALL_LOCAL	Makefile	/^ALL_LOCAL = $(am__append_6) config-h-check printf-check static-check \\$/;"	m
ALWAYS_INLINE	lib/compiler.h	25;"	d
ALWAYS_INLINE	lib/compiler.h	30;"	d
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	datapath/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CFLAGS	Makefile	/^AM_CFLAGS = -Wstrict-prototypes $(WARNING_FLAGS) $(OVS_CFLAGS) \\$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = $(SSL_CFLAGS) $(am__append_1) -I $(top_srcdir)\/include \\$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	datapath/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_LDFLAGS	Makefile	/^AM_LDFLAGS = $(SSL_LDFLAGS) $(OVS_LDFLAGS) $(am__append_2)$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	datapath/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	datapath/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	datapath/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	datapath/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
ANSWER_YES_TO_ALL	utilities/bugtool/ovs-bugtool	/^            ANSWER_YES_TO_ALL = True$/;"	v
ANSWER_YES_TO_ALL	utilities/bugtool/ovs-bugtool	/^ANSWER_YES_TO_ALL = False$/;"	v
APT_SOURCES_LIST	utilities/bugtool/ovs-bugtool	/^APT_SOURCES_LIST = "\/etc\/apt\/sources.list"$/;"	v
APT_SOURCES_LIST_D	utilities/bugtool/ovs-bugtool	/^APT_SOURCES_LIST_D = "\/etc\/apt\/sources.list.d"$/;"	v
AR	Makefile	/^AR = ar$/;"	m
AR	datapath/Makefile	/^AR = ar$/;"	m
ARP	utilities/bugtool/ovs-bugtool	/^ARP = 'arp'$/;"	v
ARPOP_REPLY	datapath-windows/ovsext/NetProto.h	111;"	d
ARPOP_REPLY_NBO	datapath-windows/ovsext/NetProto.h	117;"	d
ARPOP_REQUEST	datapath-windows/ovsext/NetProto.h	110;"	d
ARPOP_REQUEST_NBO	datapath-windows/ovsext/NetProto.h	116;"	d
ARP_ENTRY_DEFAULT_IDLE_TIME	lib/tnl-arp-cache.c	46;"	d	file:
ARP_ETH_HEADER_LEN	lib/packets.h	740;"	d
ARP_HRD_ETHERNET	lib/packets.h	734;"	d
ARP_OP_RARP	lib/packets.h	738;"	d
ARP_OP_REPLY	lib/packets.h	737;"	d
ARP_OP_REQUEST	lib/packets.h	736;"	d
ARP_PACKET_SIZE	lib/packets.c	1059;"	d	file:
ARP_PRO_IP	lib/packets.h	735;"	d
ARRAY_SIZE	datapath-windows/ovsext/Util.h	70;"	d
ARRAY_SIZE	lib/util.h	110;"	d
ASSERT_FLOWMAP_NOT_SET	lib/flow.c	136;"	d	file:
ASSERT_OVSL	datapath/datapath.h	150;"	d
ASSERT_SAME_WORD	lib/flow.c	62;"	d	file:
ASSERT_SEQUENTIAL	lib/flow.c	55;"	d	file:
ASSERT_SEQUENTIAL_SAME_WORD	lib/flow.c	68;"	d	file:
ASSIGN_CONTAINER	lib/util.h	226;"	d
ASYNC_APPEND_H	lib/async-append.h	17;"	d
ATOMIC	lib/ovs-atomic-c11.h	26;"	d
ATOMIC	lib/ovs-atomic-clang.h	24;"	d
ATOMIC	lib/ovs-atomic-gcc4+.h	25;"	d
ATOMIC	lib/ovs-atomic-gcc4.7+.h	22;"	d
ATOMIC	lib/ovs-atomic-i586.h	99;"	d
ATOMIC	lib/ovs-atomic-msvc.h	33;"	d
ATOMIC	lib/ovs-atomic-pthreads.h	26;"	d
ATOMIC	lib/ovs-atomic-x86_64.h	100;"	d
ATOMIC_ALWAYS_LOCK_FREE_1B	config.h	10;"	d
ATOMIC_ALWAYS_LOCK_FREE_2B	config.h	15;"	d
ATOMIC_ALWAYS_LOCK_FREE_4B	config.h	20;"	d
ATOMIC_ALWAYS_LOCK_FREE_8B	config.h	25;"	d
ATOMIC_BOOL_LOCK_FREE	lib/ovs-atomic-gcc4+.h	27;"	d
ATOMIC_BOOL_LOCK_FREE	lib/ovs-atomic-i586.h	111;"	d
ATOMIC_BOOL_LOCK_FREE	lib/ovs-atomic-msvc.h	44;"	d
ATOMIC_BOOL_LOCK_FREE	lib/ovs-atomic-pthreads.h	28;"	d
ATOMIC_BOOL_LOCK_FREE	lib/ovs-atomic-x86_64.h	112;"	d
ATOMIC_CHAR_LOCK_FREE	lib/ovs-atomic-gcc4+.h	28;"	d
ATOMIC_CHAR_LOCK_FREE	lib/ovs-atomic-i586.h	112;"	d
ATOMIC_CHAR_LOCK_FREE	lib/ovs-atomic-msvc.h	45;"	d
ATOMIC_CHAR_LOCK_FREE	lib/ovs-atomic-pthreads.h	29;"	d
ATOMIC_CHAR_LOCK_FREE	lib/ovs-atomic-x86_64.h	113;"	d
ATOMIC_COUNT_INIT	lib/ovs-atomic.h	430;"	d
ATOMIC_FLAG_INIT	lib/ovs-atomic-flag-gcc4.7+.h	27;"	d
ATOMIC_FLAG_INIT	lib/ovs-atomic-gcc4+.h	167;"	d
ATOMIC_FLAG_INIT	lib/ovs-atomic-i586.h	474;"	d
ATOMIC_FLAG_INIT	lib/ovs-atomic-msvc.h	393;"	d
ATOMIC_FLAG_INIT	lib/ovs-atomic-pthreads.h	102;"	d
ATOMIC_FLAG_INIT	lib/ovs-atomic-x86_64.h	341;"	d
ATOMIC_INT_LOCK_FREE	lib/ovs-atomic-gcc4+.h	30;"	d
ATOMIC_INT_LOCK_FREE	lib/ovs-atomic-i586.h	114;"	d
ATOMIC_INT_LOCK_FREE	lib/ovs-atomic-msvc.h	47;"	d
ATOMIC_INT_LOCK_FREE	lib/ovs-atomic-pthreads.h	31;"	d
ATOMIC_INT_LOCK_FREE	lib/ovs-atomic-x86_64.h	115;"	d
ATOMIC_ITEM_COUNT	tests/test-atomic.c	187;"	d	file:
ATOMIC_LLONG_LOCK_FREE	lib/ovs-atomic-gcc4+.h	32;"	d
ATOMIC_LLONG_LOCK_FREE	lib/ovs-atomic-i586.h	116;"	d
ATOMIC_LLONG_LOCK_FREE	lib/ovs-atomic-msvc.h	49;"	d
ATOMIC_LLONG_LOCK_FREE	lib/ovs-atomic-pthreads.h	33;"	d
ATOMIC_LLONG_LOCK_FREE	lib/ovs-atomic-x86_64.h	117;"	d
ATOMIC_LONG_LOCK_FREE	lib/ovs-atomic-gcc4+.h	31;"	d
ATOMIC_LONG_LOCK_FREE	lib/ovs-atomic-i586.h	115;"	d
ATOMIC_LONG_LOCK_FREE	lib/ovs-atomic-msvc.h	48;"	d
ATOMIC_LONG_LOCK_FREE	lib/ovs-atomic-pthreads.h	32;"	d
ATOMIC_LONG_LOCK_FREE	lib/ovs-atomic-x86_64.h	116;"	d
ATOMIC_POINTER_LOCK_FREE	lib/ovs-atomic-gcc4+.h	33;"	d
ATOMIC_POINTER_LOCK_FREE	lib/ovs-atomic-i586.h	117;"	d
ATOMIC_POINTER_LOCK_FREE	lib/ovs-atomic-msvc.h	50;"	d
ATOMIC_POINTER_LOCK_FREE	lib/ovs-atomic-pthreads.h	34;"	d
ATOMIC_POINTER_LOCK_FREE	lib/ovs-atomic-x86_64.h	118;"	d
ATOMIC_SHORT_LOCK_FREE	lib/ovs-atomic-gcc4+.h	29;"	d
ATOMIC_SHORT_LOCK_FREE	lib/ovs-atomic-i586.h	113;"	d
ATOMIC_SHORT_LOCK_FREE	lib/ovs-atomic-msvc.h	46;"	d
ATOMIC_SHORT_LOCK_FREE	lib/ovs-atomic-pthreads.h	30;"	d
ATOMIC_SHORT_LOCK_FREE	lib/ovs-atomic-x86_64.h	114;"	d
ATOMIC_TYPES	python/ovs/db/types.py	/^ATOMIC_TYPES = [VoidType, IntegerType, RealType, BooleanType, StringType,$/;"	v
ATOMIC_VAR_INIT	lib/ovs-atomic-clang.h	26;"	d
ATOMIC_VAR_INIT	lib/ovs-atomic-gcc4+.h	46;"	d
ATOMIC_VAR_INIT	lib/ovs-atomic-gcc4.7+.h	33;"	d
ATOMIC_VAR_INIT	lib/ovs-atomic-i586.h	122;"	d
ATOMIC_VAR_INIT	lib/ovs-atomic-msvc.h	55;"	d
ATOMIC_VAR_INIT	lib/ovs-atomic-pthreads.h	45;"	d
ATOMIC_VAR_INIT	lib/ovs-atomic-x86_64.h	123;"	d
ATTR_LEN_INVALID	lib/odp-util.c	62;"	d	file:
ATTR_LEN_NESTED	lib/odp-util.c	64;"	d	file:
ATTR_LEN_VARIABLE	lib/odp-util.c	63;"	d	file:
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing autoconf$/;"	m
AUTOCONF	datapath/Makefile	/^AUTOCONF = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	datapath/Makefile	/^AUTOHEADER = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing autoheader$/;"	m
AUTOM4TE	Makefile	/^AUTOM4TE = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing autom4te$/;"	m
AUTOM4TE	datapath/Makefile	/^AUTOM4TE = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing autom4te$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing automake-1.13$/;"	m
AUTOMAKE	datapath/Makefile	/^AUTOMAKE = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing automake-1.13$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = foreign subdir-objects$/;"	m
AUTOMAKE_OPTIONS	datapath/Makefile	/^AUTOMAKE_OPTIONS = -Wno-portability$/;"	m
AUTOTEST	Makefile	/^AUTOTEST = $(AUTOM4TE) --language=autotest$/;"	m
AUTOTEST	tests/automake.mk	/^AUTOTEST = $(AUTOM4TE) --language=autotest$/;"	m
AUTOTEST_PATH	Makefile	/^AUTOTEST_PATH = utilities:vswitchd:ovsdb:vtep:tests:$(PTHREAD_WIN32_DIR_DLL):ovn:ovn\/controller-vtep:ovn\/northd:ovn\/utilities:ovn\/controller$/;"	m
AUTOTEST_PATH	tests/automake.mk	/^AUTOTEST_PATH = utilities:vswitchd:ovsdb:vtep:tests:$(PTHREAD_WIN32_DIR_DLL):ovn:ovn\/controller-vtep:ovn\/northd:ovn\/utilities:ovn\/controller$/;"	m
AVERAGE	utilities/ovs-dpctl-top	/^    AVERAGE = "average"$/;"	v	class:Columns
AWK	Makefile	/^AWK = gawk$/;"	m
AWK	datapath/Makefile	/^AWK = gawk$/;"	m
ActivateHandler	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def ActivateHandler(cls):$/;"	m	class:XSFeatureVSwitch
Active	python/ovs/reconnect.py	/^    class Active(object):$/;"	c	class:Reconnect
AddFlow	datapath-windows/ovsext/Flow.c	/^AddFlow(OVS_DATAPATH *datapath, OvsFlow *flow)$/;"	f
ArpHdr	datapath-windows/ovsext/NetProto.h	/^struct ArpHdr {$/;"	s
ArpKey	datapath-windows/ovsext/DpInternal.h	/^typedef struct ArpKey {$/;"	s
ArpKey	datapath-windows/ovsext/DpInternal.h	/^} ArpKey; \/* Size of 24 byte. *\/$/;"	t	typeref:struct:ArpKey
AssignNicNameSpecial	datapath-windows/ovsext/Vport.c	/^AssignNicNameSpecial(POVS_VPORT_ENTRY vport)$/;"	f	file:
Atom	python/ovs/db/data.py	/^class Atom(object):$/;"	c
AtomicType	python/ovs/db/types.py	/^class AtomicType(object):$/;"	c
BACKTRACE_H	lib/backtrace.h	18;"	d
BACKTRACE_MAX_FRAMES	lib/backtrace.h	64;"	d
BADARG	lib/getopt_long.c	56;"	d	file:
BADCH	lib/getopt_long.c	55;"	d	file:
BAD_UPCALL	ofproto/ofproto-dpif-upcall.c	/^    BAD_UPCALL,                 \/* Some kind of bug somewhere. *\/$/;"	e	enum:upcall_type	file:
BASE_10	tests/dpdk/ring_client.c	54;"	d	file:
BCSIF_GLYPH	datapath-windows/ovsext/resource.h	86;"	d
BCSIF_IMAGE	datapath-windows/ovsext/resource.h	267;"	d
BCSIF_SIZE	datapath-windows/ovsext/resource.h	468;"	d
BCSIF_STYLE	datapath-windows/ovsext/resource.h	380;"	d
BCSS_ALIGNLEFT	datapath-windows/ovsext/resource.h	381;"	d
BCSS_IMAGE	datapath-windows/ovsext/resource.h	469;"	d
BCSS_NOSPLIT	datapath-windows/ovsext/resource.h	87;"	d
BCSS_STRETCH	datapath-windows/ovsext/resource.h	268;"	d
BE16	datapath-windows/ovsext/Types.h	/^typedef UINT16 BE16;$/;"	t
BE16S_TO_BE32	lib/byte-order.h	103;"	d
BE16S_TO_BE32	lib/byte-order.h	98;"	d
BE32	datapath-windows/ovsext/Types.h	/^typedef UINT32 BE32;$/;"	t
BE64	datapath-windows/ovsext/Types.h	/^typedef UINT64 BE64;$/;"	t
BE8	datapath-windows/ovsext/Types.h	/^typedef UINT8 BE8;$/;"	t
BFD_DEST_PORT	lib/bfd.h	19;"	d
BFD_H	lib/bfd.h	16;"	d
BFD_PACKET_LEN	lib/bfd.h	18;"	d
BFD_VERSION	lib/bfd.c	86;"	d	file:
BIT16	datapath-windows/ovsext/Util.h	89;"	d
BIT32	datapath-windows/ovsext/Util.h	90;"	d
BITMAP_FOR_EACH_1	lib/bitmap.h	269;"	d
BITMAP_FOR_EACH_1_RANGE	lib/bitmap.h	266;"	d
BITMAP_H	lib/bitmap.h	18;"	d
BITMAP_N_LONGS	lib/bitmap.h	38;"	d
BITMAP_ULONG_BITS	lib/bitmap.h	24;"	d
BM_AB	ofproto/bond.h	/^    BM_AB   \/* Active Backup. *\/$/;"	e	enum:bond_mode
BM_CLICK	datapath-windows/ovsext/resource.h	1010;"	d
BM_GETCHECK	datapath-windows/ovsext/resource.h	1000;"	d
BM_GETIMAGE	datapath-windows/ovsext/resource.h	1012;"	d
BM_GETSTATE	datapath-windows/ovsext/resource.h	1004;"	d
BM_SETCHECK	datapath-windows/ovsext/resource.h	1002;"	d
BM_SETDONTCLICK	datapath-windows/ovsext/resource.h	1016;"	d
BM_SETIMAGE	datapath-windows/ovsext/resource.h	1014;"	d
BM_SETSTATE	datapath-windows/ovsext/resource.h	1006;"	d
BM_SETSTYLE	datapath-windows/ovsext/resource.h	1008;"	d
BM_SLB	ofproto/bond.h	/^    BM_SLB, \/* Source Load Balance. *\/$/;"	e	enum:bond_mode
BM_TCP	ofproto/bond.h	/^    BM_TCP, \/* Transport Layer Load Balance. *\/$/;"	e	enum:bond_mode
BN_CLICKED	datapath-windows/ovsext/resource.h	13;"	d
BN_DISABLE	datapath-windows/ovsext/resource.h	362;"	d
BN_DOUBLECLICKED	datapath-windows/ovsext/resource.h	404;"	d
BN_HILITE	datapath-windows/ovsext/resource.h	249;"	d
BN_KILLFOCUS	datapath-windows/ovsext/resource.h	437;"	d
BN_PAINT	datapath-windows/ovsext/resource.h	69;"	d
BN_SETFOCUS	datapath-windows/ovsext/resource.h	422;"	d
BN_UNHILITE	datapath-windows/ovsext/resource.h	331;"	d
BOND_BUCKETS	ofproto/bond.c	60;"	d	file:
BOND_H	ofproto/bond.h	18;"	d
BOND_MASK	ofproto/bond.c	59;"	d	file:
BOOT_INITRD	utilities/bugtool/ovs-bugtool	/^BOOT_INITRD = '\/boot\/initrd-' + OS_RELEASE + '.img'$/;"	v
BOOT_KERNEL	utilities/bugtool/ovs-bugtool	/^BOOT_KERNEL = '\/boot\/vmlinuz-' + OS_RELEASE$/;"	v
BPDU_FLAG_AGREEMENT	lib/rstp-common.h	/^    BPDU_FLAG_AGREEMENT = 0x40,$/;"	e	enum:rstp_bpdu_flag
BPDU_FLAG_FORWARDING	lib/rstp-common.h	/^    BPDU_FLAG_FORWARDING = 0x20,$/;"	e	enum:rstp_bpdu_flag
BPDU_FLAG_LEARNING	lib/rstp-common.h	/^    BPDU_FLAG_LEARNING = 0x10,$/;"	e	enum:rstp_bpdu_flag
BPDU_FLAG_PROPOSAL	lib/rstp-common.h	/^    BPDU_FLAG_PROPOSAL = 0x02,$/;"	e	enum:rstp_bpdu_flag
BPDU_FLAG_TOPCHANGE	lib/rstp-common.h	/^    BPDU_FLAG_TOPCHANGE = 0x01,$/;"	e	enum:rstp_bpdu_flag
BPDU_FLAG_TOPCHANGEACK	lib/rstp-common.h	/^    BPDU_FLAG_TOPCHANGEACK = 0x80$/;"	e	enum:rstp_bpdu_flag
BRIDGE_AA_VLAN_OPER_ADD	lib/ovs-lldp.h	/^   BRIDGE_AA_VLAN_OPER_ADD,$/;"	e	enum:bridge_aa_vlan_oper
BRIDGE_AA_VLAN_OPER_REMOVE	lib/ovs-lldp.h	/^   BRIDGE_AA_VLAN_OPER_REMOVE$/;"	e	enum:bridge_aa_vlan_oper
BRIDGE_AA_VLAN_OPER_UNDEF	lib/ovs-lldp.h	/^   BRIDGE_AA_VLAN_OPER_UNDEF,$/;"	e	enum:bridge_aa_vlan_oper
BRIDGE_DETECTION_SM_EDGE	lib/rstp-common.h	/^    BRIDGE_DETECTION_SM_EDGE,$/;"	e	enum:bridge_detection_state_machine
BRIDGE_DETECTION_SM_EDGE_EXEC	lib/rstp-common.h	/^    BRIDGE_DETECTION_SM_EDGE_EXEC,$/;"	e	enum:bridge_detection_state_machine
BRIDGE_DETECTION_SM_INIT	lib/rstp-common.h	/^    BRIDGE_DETECTION_SM_INIT,$/;"	e	enum:bridge_detection_state_machine
BRIDGE_DETECTION_SM_NOT_EDGE	lib/rstp-common.h	/^    BRIDGE_DETECTION_SM_NOT_EDGE$/;"	e	enum:bridge_detection_state_machine
BRIDGE_DETECTION_SM_NOT_EDGE_EXEC	lib/rstp-common.h	/^    BRIDGE_DETECTION_SM_NOT_EDGE_EXEC,$/;"	e	enum:bridge_detection_state_machine
BST_CHECKED	datapath-windows/ovsext/resource.h	70;"	d
BST_FOCUS	datapath-windows/ovsext/resource.h	454;"	d
BST_INDETERMINATE	datapath-windows/ovsext/resource.h	250;"	d
BST_PUSHED	datapath-windows/ovsext/resource.h	363;"	d
BST_UNCHECKED	datapath-windows/ovsext/resource.h	14;"	d
BS_CLOSED	ofproto/bundles.h	/^    BS_CLOSED$/;"	e	enum:bundle_state
BS_OPEN	ofproto/bundles.h	/^    BS_OPEN,$/;"	e	enum:bundle_state
BTNS_SHOWTEXT	datapath-windows/ovsext/resource.h	719;"	d
BTNS_WHOLEDROPDOWN	datapath-windows/ovsext/resource.h	849;"	d
BUFFER_SIZE	lib/async-append-aio.c	/^enum { BUFFER_SIZE = 65536 };$/;"	e	enum:__anon81	file:
BUF_SIZE	tests/test-ofpbuf.c	24;"	d	file:
BUG_DIR	utilities/bugtool/ovs-bugtool	/^BUG_DIR = "\/var\/log\/ovs-bugtool"$/;"	v
BUILD_ASSERT	datapath-windows/ovsext/Netlink/NetlinkProto.h	32;"	d
BUILD_ASSERT	lib/util.h	43;"	d
BUILD_ASSERT	lib/util.h	51;"	d
BUILD_ASSERT	lib/util.h	58;"	d
BUILD_ASSERT_DECL	datapath-windows/ovsext/Netlink/NetlinkProto.h	34;"	d
BUILD_ASSERT_DECL	lib/util.h	44;"	d
BUILD_ASSERT_DECL	lib/util.h	54;"	d
BUILD_ASSERT_DECL	lib/util.h	59;"	d
BUILD_ASSERT_DECL_GCCONLY	lib/util.h	64;"	d
BUILD_ASSERT_DECL_GCCONLY	lib/util.h	67;"	d
BUILD_ASSERT_GCCONLY	lib/util.h	63;"	d
BUILD_ASSERT_GCCONLY	lib/util.h	66;"	d
BUILD_ASSERT__	lib/util.h	47;"	d
BUILD_BUG_ON_INVALID	datapath/linux/compat/include/linux/bug.h	8;"	d
BUILD_CLANG	utilities/ovs-dev.py	/^BUILD_CLANG = OVS_SRC + "\/_build-clang"$/;"	v
BUILD_GCC	utilities/ovs-dev.py	/^BUILD_GCC = OVS_SRC + "\/_build-gcc"$/;"	v
BUILD_MESSAGE	lib/compiler.h	38;"	d
BUILD_MESSAGE	lib/compiler.h	41;"	d
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = ofproto\/ipfix-entities.def include\/odp-netlink.h \\$/;"	m
BUNDLES_H	ofproto/bundles.h	20;"	d
BUNDLE_H	lib/bundle.h	17;"	d
BUNDLE_MAX_SLAVES	lib/bundle.h	39;"	d
BV_ACCEPT	ofproto/bond.h	/^    BV_ACCEPT,                  \/* Accept this packet. *\/$/;"	e	enum:bond_verdict
BV_DROP	ofproto/bond.h	/^    BV_DROP,                    \/* Drop this packet. *\/$/;"	e	enum:bond_verdict
BV_DROP_IF_MOVED	ofproto/bond.h	/^    BV_DROP_IF_MOVED            \/* Drop if we've learned a different port. *\/$/;"	e	enum:bond_verdict
BYTEQ_H	lib/byteq.h	17;"	d
BYTES	utilities/ovs-dpctl-top	/^    BYTES = "bytes"$/;"	v	class:Columns
BYTES_TO_BE32	lib/byte-order.h	101;"	d
BYTES_TO_BE32	lib/byte-order.h	96;"	d
BYTE_ORDER_H	lib/byte-order.h	17;"	d
Backoff	python/ovs/reconnect.py	/^    class Backoff(object):$/;"	c	class:Reconnect
BaseHTTPServer	utilities/ovs-vlan-test	/^import BaseHTTPServer$/;"	i
BaseType	python/ovs/db/types.py	/^class BaseType(object):$/;"	c
Bindings	vtep/ovs-vtep	/^Bindings = {}$/;"	v
BooleanType	python/ovs/db/types.py	/^BooleanType = AtomicType("boolean", False, (bool,))$/;"	v
BuildPane	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def BuildPane(self):$/;"	m	class:VSwitchControllerDialogue
Buttons.AbortRetryIgnore	windows/ovs-windows-installer/Actions/OVSActions.js	/^    OkCancel: 1,$/;"	p
Buttons.OkCancel	windows/ovs-windows-installer/Actions/OVSActions.js	/^    OkOnly: 0,$/;"	p
Buttons.OkOnly	windows/ovs-windows-installer/Actions/OVSActions.js	/^{$/;"	p
Buttons.YesNoCancel	windows/ovs-windows-installer/Actions/OVSActions.js	/^    AbortRetryIgnore: 2,$/;"	p
CACHE_LINE_SIZE	lib/cmap.c	/^BUILD_ASSERT_DECL(sizeof(struct cmap_bucket) == CACHE_LINE_SIZE);$/;"	v
CACHE_LINE_SIZE	lib/cmap.c	/^BUILD_ASSERT_DECL(sizeof(struct cmap_impl) == CACHE_LINE_SIZE);$/;"	v
CACHE_LINE_SIZE	lib/util.h	154;"	d
CAPNG_LDADD	Makefile	/^CAPNG_LDADD = $/;"	m
CAPNG_LDADD	datapath/Makefile	/^CAPNG_LDADD = $/;"	m
CAP_BOOT_LOADER	utilities/bugtool/ovs-bugtool	/^CAP_BOOT_LOADER          = 'boot-loader'$/;"	v
CAP_DISK_INFO	utilities/bugtool/ovs-bugtool	/^CAP_DISK_INFO            = 'disk-info'$/;"	v
CAP_HARDWARE_INFO	utilities/bugtool/ovs-bugtool	/^CAP_HARDWARE_INFO        = 'hardware-info'$/;"	v
CAP_KERNEL_INFO	utilities/bugtool/ovs-bugtool	/^CAP_KERNEL_INFO          = 'kernel-info'$/;"	v
CAP_LOSETUP_A	utilities/bugtool/ovs-bugtool	/^CAP_LOSETUP_A            = 'loopback-devices'$/;"	v
CAP_MULTIPATH	utilities/bugtool/ovs-bugtool	/^CAP_MULTIPATH            = 'multipath'$/;"	v
CAP_NETWORK_CONFIG	utilities/bugtool/ovs-bugtool	/^CAP_NETWORK_CONFIG       = 'network-config'$/;"	v
CAP_NETWORK_INFO	utilities/bugtool/ovs-bugtool	/^CAP_NETWORK_INFO         = 'network-info'$/;"	v
CAP_NETWORK_STATUS	utilities/bugtool/ovs-bugtool	/^CAP_NETWORK_STATUS       = 'network-status'$/;"	v
CAP_OPENVSWITCH_LOGS	utilities/bugtool/ovs-bugtool	/^CAP_OPENVSWITCH_LOGS     = 'ovs-system-logs'$/;"	v
CAP_PROCESS_LIST	utilities/bugtool/ovs-bugtool	/^CAP_PROCESS_LIST         = 'process-list'$/;"	v
CAP_SYSTEM_LOGS	utilities/bugtool/ovs-bugtool	/^CAP_SYSTEM_LOGS          = 'system-logs'$/;"	v
CAP_SYSTEM_SERVICES	utilities/bugtool/ovs-bugtool	/^CAP_SYSTEM_SERVICES      = 'system-services'$/;"	v
CAP_XML_ELEMENT	utilities/bugtool/ovs-bugtool	/^CAP_XML_ELEMENT = 'capability'$/;"	v
CAP_XML_ROOT	utilities/bugtool/ovs-bugtool	/^CAP_XML_ROOT = "system-status-capabilities"$/;"	v
CAP_YUM	utilities/bugtool/ovs-bugtool	/^CAP_YUM                  = 'yum'$/;"	v
CASE_MFF_REGS	lib/meta-flow.h	1700;"	d
CASE_MFF_TUN_METADATA	lib/meta-flow.h	1718;"	d
CASE_MFF_XREGS	lib/meta-flow.h	1710;"	d
CAT	utilities/bugtool/ovs-bugtool	/^CAT = 'cat'$/;"	v
CC	Makefile	/^CC = $(if $(C),env REAL_CC="gcc -std=gnu99" CHECK="$(SPARSE) -I $(top_srcdir)\/include\/sparse $(SPARSEFLAGS) $(SPARSE_EXTRA_INCLUDES) " cgcc $(CGCCFLAGS),gcc -std=gnu99)$/;"	m
CC	datapath/Makefile	/^CC = $(if $(C),env REAL_CC="gcc -std=gnu99" CHECK="$(SPARSE) -I $(top_srcdir)\/include\/sparse $(SPARSEFLAGS) $(SPARSE_EXTRA_INCLUDES) " cgcc $(CGCCFLAGS),gcc -std=gnu99)$/;"	m
CCALL	include/openvswitch/compiler.h	198;"	d
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	datapath/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CCM_ACCEPT_LEN	lib/cfm.c	62;"	d	file:
CCM_LEN	lib/cfm.c	61;"	d	file:
CCM_MAID_LEN	lib/cfm.c	63;"	d	file:
CCM_OPCODE	lib/cfm.c	64;"	d	file:
CCM_RDI_MASK	lib/cfm.c	65;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	datapath/Makefile	/^CFLAGS = -g -O2$/;"	m
CFM_FAULT_N_REASONS	lib/cfm.h	/^    CFM_FAULT_N_REASONS$/;"	e	enum:cfm_fault_bit_index
CFM_FAULT_REASON	lib/cfm.c	202;"	d	file:
CFM_FAULT_REASON	lib/cfm.c	204;"	d	file:
CFM_FAULT_REASON	lib/cfm.h	41;"	d
CFM_FAULT_REASON	lib/cfm.h	43;"	d
CFM_FAULT_REASON	lib/cfm.h	48;"	d
CFM_FAULT_REASON	lib/cfm.h	51;"	d
CFM_FAULT_REASONS	lib/cfm.h	/^    CFM_FAULT_REASONS$/;"	e	enum:cfm_fault_bit_index
CFM_FAULT_REASONS	lib/cfm.h	/^    CFM_FAULT_REASONS$/;"	e	enum:cfm_fault_reason
CFM_FAULT_REASONS	lib/cfm.h	32;"	d
CFM_H	lib/cfm.h	17;"	d
CFM_HEALTH_INTERVAL	lib/cfm.c	66;"	d	file:
CFM_MAX_RMPS	lib/cfm.c	44;"	d	file:
CFM_RANDOM_VLAN	lib/cfm.h	30;"	d
CF_BARE	lib/table.h	/^    CF_BARE,                    \/* String format without most punctuation. *\/$/;"	e	enum:cell_format
CF_BITMAP	datapath-windows/ovsext/resource.h	247;"	d
CF_DIB	datapath-windows/ovsext/resource.h	452;"	d
CF_DIBV5	datapath-windows/ovsext/resource.h	572;"	d
CF_DIF	datapath-windows/ovsext/resource.h	402;"	d
CF_DSPBITMAP	datapath-windows/ovsext/resource.h	865;"	d
CF_DSPENHMETAFILE	datapath-windows/ovsext/resource.h	887;"	d
CF_DSPMETAFILEPICT	datapath-windows/ovsext/resource.h	869;"	d
CF_DSPTEXT	datapath-windows/ovsext/resource.h	861;"	d
CF_ENHMETAFILE	datapath-windows/ovsext/resource.h	533;"	d
CF_GDIOBJFIRST	datapath-windows/ovsext/resource.h	1174;"	d
CF_GDIOBJLAST	datapath-windows/ovsext/resource.h	1213;"	d
CF_HDROP	datapath-windows/ovsext/resource.h	539;"	d
CF_JSON	lib/table.h	/^    CF_JSON                     \/* JSON. *\/$/;"	e	enum:cell_format
CF_LOCALE	datapath-windows/ovsext/resource.h	550;"	d
CF_MAX	datapath-windows/ovsext/resource.h	580;"	d
CF_METAFILEPICT	datapath-windows/ovsext/resource.h	329;"	d
CF_OEMTEXT	datapath-windows/ovsext/resource.h	435;"	d
CF_OWNERDISPLAY	datapath-windows/ovsext/resource.h	847;"	d
CF_PALETTE	datapath-windows/ovsext/resource.h	479;"	d
CF_PENDATA	datapath-windows/ovsext/resource.h	491;"	d
CF_PRIVATEFIRST	datapath-windows/ovsext/resource.h	1088;"	d
CF_PRIVATELAST	datapath-windows/ovsext/resource.h	1171;"	d
CF_RIFF	datapath-windows/ovsext/resource.h	503;"	d
CF_STRING	lib/table.h	/^    CF_STRING,                  \/* String format. *\/$/;"	e	enum:cell_format
CF_SYLK	datapath-windows/ovsext/resource.h	360;"	d
CF_TEXT	datapath-windows/ovsext/resource.h	66;"	d
CF_TIFF	datapath-windows/ovsext/resource.h	420;"	d
CF_UNICODETEXT	datapath-windows/ovsext/resource.h	525;"	d
CF_WAVE	datapath-windows/ovsext/resource.h	514;"	d
CGCCFLAGS	Makefile	/^CGCCFLAGS = -target=x86_64$/;"	m
CGCCFLAGS	datapath/Makefile	/^CGCCFLAGS = -target=x86_64$/;"	m
CHECK	tests/test-lockfile.c	38;"	d	file:
CHECK	tests/test-vconn.c	57;"	d	file:
CHECKED	utilities/bugtool/ovs-bugtool	/^CHECKED  = 7$/;"	v
CHECKSUM_COMPLETE	datapath/linux/compat/include/linux/skbuff.h	128;"	d
CHECKSUM_PARTIAL	datapath/linux/compat/include/linux/skbuff.h	125;"	d
CHECK_ERRNO	tests/test-vconn.c	69;"	d	file:
CHECK_FEATURE	ofproto/ofproto-dpif.c	1270;"	d	file:
CHECK_FEATURE	ofproto/ofproto-dpif.c	1277;"	d	file:
CHECK_FEATURE__	ofproto/ofproto-dpif.c	1239;"	d	file:
CHECK_FEATURE__	ofproto/ofproto-dpif.c	1278;"	d	file:
CHECK_MPLS_RECIRCULATION	ofproto/ofproto-dpif-xlate.c	4142;"	d	file:
CHECK_MPLS_RECIRCULATION_IF	ofproto/ofproto-dpif-xlate.c	4147;"	d	file:
CHECK_PYFILES	Makefile	/^CHECK_PYFILES = \\$/;"	m
CHECK_PYFILES	tests/automake.mk	/^CHECK_PYFILES = \\$/;"	m
CHECK_TLV_SIZE	lib/lldp/lldp.c	67;"	d	file:
CHILD	tests/test-lockfile.c	/^static enum { PARENT, CHILD }$/;"	e	enum:__anon226	file:
CHKCONFIG	utilities/bugtool/ovs-bugtool	/^CHKCONFIG = 'chkconfig'$/;"	v
CLASSIFIER_H	lib/classifier.h	18;"	d
CLASSIFIER_PRIVATE_H	lib/classifier-private.h	18;"	d
CLEANFILES	Makefile	/^CLEANFILES = $(am__append_7) $(am__append_9) manpage-dep-check \\$/;"	m
CLEANFILES	datapath/Makefile	/^CLEANFILES = distfiles$/;"	m
CLEAN_LOCAL	Makefile	/^CLEAN_LOCAL = clean-pycov $(am__append_11) $(am__append_43)$/;"	m
CLEAN_PERCPU_INTERVAL	datapath/linux/compat/stt.c	86;"	d	file:
CLEAN_PERCPU_INTERVAL	datapath/linux/stt.c	86;"	d	file:
CLIENT	lib/stream-ssl.c	/^    CLIENT,$/;"	e	enum:session_type	file:
CLOCK_MONOTONIC	lib/timeval.c	48;"	d	file:
CLOCK_MONOTONIC	python/ovs/timeval.py	/^        CLOCK_MONOTONIC = 1$/;"	v
CLOCK_MONOTONIC	python/ovs/timeval.py	/^        CLOCK_MONOTONIC = 3$/;"	v
CLOCK_MONOTONIC	python/ovs/timeval.py	/^        CLOCK_MONOTONIC = 4$/;"	v
CLOCK_REALTIME	lib/timeval.c	52;"	d	file:
CLS_FIELD	tests/test-classifier.c	74;"	d	file:
CLS_FIELD	tests/test-classifier.c	76;"	d	file:
CLS_FIELD	tests/test-classifier.c	88;"	d	file:
CLS_FIELD	tests/test-classifier.c	93;"	d	file:
CLS_FIELDS	tests/test-classifier.c	/^    CLS_FIELDS$/;"	e	enum:__anon225	file:
CLS_FIELDS	tests/test-classifier.c	52;"	d	file:
CLS_FOR_EACH	lib/classifier.h	448;"	d
CLS_FOR_EACH_TARGET	lib/classifier.h	450;"	d
CLS_MATCH_FOR_EACH	lib/classifier-private.h	185;"	d
CLS_MATCH_FOR_EACH_AFTER_HEAD	lib/classifier-private.h	188;"	d
CLS_MATCH_POISON	lib/classifier.c	2259;"	d	file:
CLS_MAX_INDICES	lib/classifier.h	/^    CLS_MAX_INDICES = 3,   \/* Maximum number of lookup indices per subtable. *\/$/;"	e	enum:__anon83
CLS_MAX_TRIES	lib/classifier.h	/^    CLS_MAX_TRIES = 3      \/* Maximum number of prefix trees per classifier. *\/$/;"	e	enum:__anon83
CLS_MAX_VERSION	lib/classifier.h	328;"	d
CLS_MIN_VERSION	lib/classifier.h	327;"	d
CLS_NOT_REMOVED_VERSION	lib/classifier.h	329;"	d
CLS_N_FIELDS	tests/test-classifier.c	/^    CLS_N_FIELDS$/;"	e	enum:__anon225	file:
CLZ_STEP	lib/util.c	1067;"	d	file:
CLZ_STEP	lib/util.c	1079;"	d	file:
CMAP_CURSOR_FOR_EACH	lib/cmap.h	207;"	d
CMAP_CURSOR_FOR_EACH_CONTINUE	lib/cmap.h	212;"	d
CMAP_CURSOR_FOR_EACH__	lib/cmap.h	200;"	d
CMAP_ENTRY_SIZE	lib/cmap.c	121;"	d	file:
CMAP_FOR_EACH	lib/cmap.h	225;"	d
CMAP_FOR_EACH_WITH_HASH	lib/cmap.h	134;"	d
CMAP_FOR_EACH_WITH_HASH_PROTECTED	lib/cmap.h	136;"	d
CMAP_H	lib/cmap.h	18;"	d
CMAP_K	lib/cmap.c	124;"	d	file:
CMAP_MAX_LOAD	lib/cmap.c	159;"	d	file:
CMAP_MIN_LOAD	lib/cmap.c	164;"	d	file:
CMAP_NODE_FOR_EACH	lib/cmap.h	125;"	d
CMAP_NODE_FOR_EACH_PROTECTED	lib/cmap.h	129;"	d
CMAP_PADDING	lib/cmap.c	127;"	d	file:
CMP	ovn/utilities/ovn-sbctl.c	675;"	d	file:
CMP	ovn/utilities/ovn-sbctl.c	693;"	d	file:
CMSG_ALIGN	include/sparse/sys/socket.h	59;"	d
CMSG_DATA	include/sparse/sys/socket.h	61;"	d
CMSG_FIRSTHDR	include/sparse/sys/socket.h	64;"	d
CMSG_LEN	include/sparse/sys/socket.h	62;"	d
CMSG_NXTHDR	include/sparse/sys/socket.h	66;"	d
CMSG_SPACE	include/sparse/sys/socket.h	63;"	d
CODEL_N_QUEUES	lib/netdev-linux.c	2870;"	d	file:
COLLECTORS_H	ofproto/collectors.h	18;"	d
COLORMGMTDLGORD	datapath-windows/ovsext/resource.h	1415;"	d
COMMAND_LINE_H	lib/command-line.h	18;"	d
COMMON_MACROS_AT	Makefile	/^COMMON_MACROS_AT = \\$/;"	m
COMMON_MACROS_AT	tests/automake.mk	/^COMMON_MACROS_AT = \\$/;"	m
COMPACT_MIN_MSEC	ovsdb/file.c	43;"	d	file:
COMPACT_RETRY_MSEC	ovsdb/file.c	47;"	d	file:
COMPAT_EXPORTS	datapath/Makefile	/^COMPAT_EXPORTS := $(shell $(COMPAT_GET_EXPORTS))$/;"	m
COMPAT_FUNCTIONS	datapath/Makefile	/^COMPAT_FUNCTIONS := $(shell $(COMPAT_GET_FUNCTIONS))$/;"	m
COMPAT_GET_EXPORTS	datapath/Makefile	/^COMPAT_GET_EXPORTS := find $(top_srcdir)\/datapath\/linux\/compat -name "*.c" \\$/;"	m
COMPAT_GET_FUNCTIONS	datapath/Makefile	/^COMPAT_GET_FUNCTIONS := find $(top_srcdir)\/datapath\/linux\/compat -name "*.h" \\$/;"	m
COMPAT_H	datapath/compat.h	20;"	d
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILER_H	lib/compiler.h	18;"	d
CONFIGURATION_BPDU	lib/rstp-common.h	/^    CONFIGURATION_BPDU = 0x0,$/;"	e	enum:rstp_bpdu_type
CONFIGURATION_BPDU_SIZE	lib/rstp-state-machines.c	/^    CONFIGURATION_BPDU_SIZE = 35,$/;"	e	enum:bpdu_size	file:
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES = lib\/stdio.h lib\/string.h ovsdb\/libovsdb.sym \\$/;"	m
CONFIG_CLEAN_FILES	datapath/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	datapath/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	datapath/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_NET_IPGRE_DEMUX	datapath/linux/compat/include/linux/kconfig.h	7;"	d
CONNECT	python/ovs/reconnect.py	/^CONNECT = 'connect'$/;"	v
CONNECTIVITY_H	lib/connectivity.h	18;"	d
CONNMGR_H	ofproto/connmgr.h	18;"	d
CONN_STATE_CONNECTED	lib/netdev-dummy.c	/^    CONN_STATE_CONNECTED,      \/* Listener connected. *\/$/;"	e	enum:dummy_netdev_conn_state	file:
CONN_STATE_NOT_CONNECTED	lib/netdev-dummy.c	/^    CONN_STATE_NOT_CONNECTED,  \/* Listener not connected.  *\/$/;"	e	enum:dummy_netdev_conn_state	file:
CONN_STATE_UNKNOWN	lib/netdev-dummy.c	/^    CONN_STATE_UNKNOWN,        \/* No relavent information.  *\/$/;"	e	enum:dummy_netdev_conn_state	file:
CONST1	lib/sha1.c	68;"	d	file:
CONST2	lib/sha1.c	69;"	d	file:
CONST3	lib/sha1.c	70;"	d	file:
CONST4	lib/sha1.c	71;"	d	file:
CONSTANT_HTONL	lib/byte-order.h	72;"	d
CONSTANT_HTONL	lib/byte-order.h	79;"	d
CONSTANT_HTONLL	lib/byte-order.h	73;"	d
CONSTANT_HTONLL	lib/byte-order.h	84;"	d
CONSTANT_HTONS	lib/byte-order.h	71;"	d
CONSTANT_HTONS	lib/byte-order.h	76;"	d
CONST_CAST	lib/util.h	88;"	d
CONTAINER_OF	lib/util.h	207;"	d
CONTROL_PORT	python/ovstest/args.py	/^CONTROL_PORT = 15531$/;"	v
COOKIE_BITS	ofproto/pktbuf.c	45;"	d	file:
COOKIE_MAX	ofproto/pktbuf.c	46;"	d	file:
COUNT	utilities/ovs-dpctl-top	/^    COUNT = "count"$/;"	v	class:Columns
COVERAGE	Makefile	/^COVERAGE = coverage$/;"	m
COVERAGE	tests/automake.mk	/^COVERAGE = coverage$/;"	m
COVERAGE_ADD	lib/coverage.h	86;"	d
COVERAGE_CLEAR_INTERVAL	lib/coverage.h	39;"	d
COVERAGE_DEFINE	lib/coverage.h	61;"	d
COVERAGE_FILE	Makefile	/^COVERAGE_FILE = '$(abs_srcdir)\/.coverage'$/;"	m
COVERAGE_FILE	tests/automake.mk	/^COVERAGE_FILE='$(abs_srcdir)\/.coverage'$/;"	m
COVERAGE_H	lib/coverage.h	18;"	d
COVERAGE_INC	lib/coverage.h	83;"	d
COVERAGE_RUN_INTERVAL	lib/coverage.h	36;"	d
CPP	Makefile	/^CPP = gcc -std=gnu99 -E$/;"	m
CPP	datapath/Makefile	/^CPP = gcc -std=gnu99 -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	datapath/Makefile	/^CPPFLAGS = $/;"	m
CRC32C_H	lib/crc32c.h	19;"	d
CREATEPROCESS_MANIFEST_RESOURCE_ID	datapath-windows/ovsext/resource.h	42;"	d
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CSUM_H	lib/csum.h	18;"	d
CSUM_MANGLED_0	datapath/linux/compat/include/net/checksum.h	36;"	d
CS_BYTEALIGNCLIENT	datapath-windows/ovsext/resource.h	1436;"	d
CS_BYTEALIGNWINDOW	datapath-windows/ovsext/resource.h	1444;"	d
CS_CLASSDC	datapath-windows/ovsext/resource.h	717;"	d
CS_DBLCLKS	datapath-windows/ovsext/resource.h	451;"	d
CS_ESTABLISHED	lib/packets.h	723;"	d
CS_GLOBALCLASS	datapath-windows/ovsext/resource.h	1451;"	d
CS_HREDRAW	datapath-windows/ovsext/resource.h	246;"	d
CS_INVALID	lib/packets.h	725;"	d
CS_NEW	lib/packets.h	722;"	d
CS_NOCLOSE	datapath-windows/ovsext/resource.h	1087;"	d
CS_OWNDC	datapath-windows/ovsext/resource.h	637;"	d
CS_PARENTDC	datapath-windows/ovsext/resource.h	846;"	d
CS_RELATED	lib/packets.h	724;"	d
CS_REPLY_DIR	lib/packets.h	726;"	d
CS_SAVEBITS	datapath-windows/ovsext/resource.h	1422;"	d
CS_SUPPORTED_MASK	lib/packets.h	730;"	d
CS_TRACKED	lib/packets.h	727;"	d
CS_UNSUPPORTED_MASK	lib/packets.h	732;"	d
CS_VREDRAW	datapath-windows/ovsext/resource.h	65;"	d
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	datapath/Makefile	/^CTAGS = ctags$/;"	m
CTRL_ATTR_FAMILY_ID	lib/netlink-protocol.h	/^        CTRL_ATTR_FAMILY_ID,$/;"	e	enum:__anon116
CTRL_ATTR_FAMILY_NAME	lib/netlink-protocol.h	/^        CTRL_ATTR_FAMILY_NAME,$/;"	e	enum:__anon116
CTRL_ATTR_HDRSIZE	lib/netlink-protocol.h	/^        CTRL_ATTR_HDRSIZE,$/;"	e	enum:__anon116
CTRL_ATTR_MAX	lib/netlink-protocol.h	134;"	d
CTRL_ATTR_MAX	lib/netlink-protocol.h	164;"	d
CTRL_ATTR_MAX	lib/netlink-protocol.h	165;"	d
CTRL_ATTR_MAXATTR	lib/netlink-protocol.h	/^        CTRL_ATTR_MAXATTR,$/;"	e	enum:__anon116
CTRL_ATTR_MCAST_GROUPS	lib/netlink-protocol.h	166;"	d
CTRL_ATTR_MCAST_GRP_ID	lib/netlink-protocol.h	/^    CTRL_ATTR_MCAST_GRP_ID,$/;"	e	enum:__anon118
CTRL_ATTR_MCAST_GRP_MAX	lib/netlink-protocol.h	175;"	d
CTRL_ATTR_MCAST_GRP_NAME	lib/netlink-protocol.h	/^    CTRL_ATTR_MCAST_GRP_NAME,$/;"	e	enum:__anon118
CTRL_ATTR_MCAST_GRP_UNSPEC	lib/netlink-protocol.h	/^    CTRL_ATTR_MCAST_GRP_UNSPEC,$/;"	e	enum:__anon118
CTRL_ATTR_OPS	lib/netlink-protocol.h	/^        CTRL_ATTR_OPS,$/;"	e	enum:__anon116
CTRL_ATTR_OP_FLAGS	lib/netlink-protocol.h	/^        CTRL_ATTR_OP_FLAGS,$/;"	e	enum:__anon117
CTRL_ATTR_OP_ID	lib/netlink-protocol.h	/^        CTRL_ATTR_OP_ID,$/;"	e	enum:__anon117
CTRL_ATTR_OP_MAX	lib/netlink-protocol.h	143;"	d
CTRL_ATTR_OP_UNSPEC	lib/netlink-protocol.h	/^        CTRL_ATTR_OP_UNSPEC,$/;"	e	enum:__anon117
CTRL_ATTR_UNSPEC	lib/netlink-protocol.h	/^        CTRL_ATTR_UNSPEC,$/;"	e	enum:__anon116
CTRL_ATTR_VERSION	lib/netlink-protocol.h	/^        CTRL_ATTR_VERSION,$/;"	e	enum:__anon116
CTRL_CMD_DELFAMILY	lib/netlink-protocol.h	/^        CTRL_CMD_DELFAMILY,$/;"	e	enum:__anon115
CTRL_CMD_DELOPS	lib/netlink-protocol.h	/^        CTRL_CMD_DELOPS,$/;"	e	enum:__anon115
CTRL_CMD_GETFAMILY	lib/netlink-protocol.h	/^        CTRL_CMD_GETFAMILY,$/;"	e	enum:__anon115
CTRL_CMD_GETOPS	lib/netlink-protocol.h	/^        CTRL_CMD_GETOPS,$/;"	e	enum:__anon115
CTRL_CMD_MAX	lib/netlink-protocol.h	121;"	d
CTRL_CMD_NEWFAMILY	lib/netlink-protocol.h	/^        CTRL_CMD_NEWFAMILY,$/;"	e	enum:__anon115
CTRL_CMD_NEWOPS	lib/netlink-protocol.h	/^        CTRL_CMD_NEWOPS,$/;"	e	enum:__anon115
CTRL_CMD_UNSPEC	lib/netlink-protocol.h	/^        CTRL_CMD_UNSPEC,$/;"	e	enum:__anon115
CTZ_STEP	lib/util.c	1043;"	d	file:
CTZ_STEP	lib/util.c	1055;"	d	file:
CT_MEMBERS	lib/ofp-actions.h	/^        CT_MEMBERS;$/;"	m	union:ofpact_conntrack::__anon129
CT_MEMBERS	lib/ofp-actions.h	493;"	d
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	datapath/Makefile	/^CYGPATH_W = echo$/;"	m
CalculateChecksum	datapath-windows/ovsext/Checksum.c	/^CalculateChecksum(UINT8 *ptr,$/;"	f
CalculateChecksumNB	datapath-windows/ovsext/Checksum.c	/^CalculateChecksumNB(const PNET_BUFFER nb,$/;"	f
CalculateOnesComplement	datapath-windows/ovsext/Checksum.c	/^CalculateOnesComplement(UINT8 *start,$/;"	f
CannotListenError	python/ovstest/rpcserver.py	/^from twisted.internet.error import CannotListenError$/;"	i
Causes	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
ChangeState	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def ChangeState(self, inState):$/;"	m	class:VSwitchControllerDialogue
ChecksumUpdate16	datapath-windows/ovsext/Checksum.c	/^ChecksumUpdate16(UINT16 oldSum,$/;"	f
ChecksumUpdate32	datapath-windows/ovsext/Checksum.c	/^ChecksumUpdate32(UINT16 oldSum,$/;"	f
ClientFactory	python/ovstest/tcp.py	/^from twisted.internet.protocol import Factory, ClientFactory, Protocol$/;"	i
ColMeta	utilities/ovs-dpctl-top	/^class ColMeta:$/;"	c
ColumnSchema	python/ovs/db/schema.py	/^class ColumnSchema(object):$/;"	c
Columns	utilities/ovs-dpctl-top	/^class Columns:$/;"	c
Configuration	Makefile	/^	MSBuild.exe windows\/ovs-windows-installer.sln \/target:Build \/property:Configuration="Release"$/;"	m
Configuration	windows/automake.mk	/^	MSBuild.exe windows\/ovs-windows-installer.sln \/target:Build \/property:Configuration="Release"$/;"	m
ConfigurationFile	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^class ConfigurationFile(object):$/;"	c
ConnectInProgress	python/ovs/reconnect.py	/^    class ConnectInProgress(object):$/;"	c	class:Reconnect
Connection	python/ovs/jsonrpc.py	/^class Connection(object):$/;"	c
ConsoleHandlerRoutine	lib/fatal-signal.c	/^BOOL WINAPI ConsoleHandlerRoutine(DWORD dwCtrlType)$/;"	f
ConstraintViolation	python/ovs/db/data.py	/^class ConstraintViolation(error.Error):$/;"	c
CopyAndCalculateChecksum	datapath-windows/ovsext/Checksum.c	/^CopyAndCalculateChecksum(UINT8 *dst,$/;"	f
CopyAndCalculateOnesComplement	datapath-windows/ovsext/Checksum.c	/^CopyAndCalculateOnesComplement(UINT8 *dst,$/;"	f
CreateNetlinkMesgForNetdev	datapath-windows/ovsext/Vport.c	/^CreateNetlinkMesgForNetdev(POVS_VPORT_EXT_INFO info,$/;"	f	file:
CreateProcess	build-aux/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DAEMON_H	lib/daemon.h	18;"	d
DAEMON_LONG_OPTIONS	lib/daemon.h	48;"	d
DAEMON_LONG_OPTIONS	lib/daemon.h	96;"	d
DAEMON_OPTION_ENUMS	lib/daemon.h	40;"	d
DAEMON_OPTION_ENUMS	lib/daemon.h	87;"	d
DAEMON_OPTION_HANDLERS	lib/daemon.h	105;"	d
DAEMON_OPTION_HANDLERS	lib/daemon.h	56;"	d
DAEMON_PRIVATE_H	lib/daemon-private.h	18;"	d
DATA	Makefile	/^DATA = $(dist_pkgdata_DATA) $(dist_scripts_DATA) \\$/;"	m
DATAPATH_CONFIGURE_OPTS	debian/rules.modules	/^DATAPATH_CONFIGURE_OPTS =$/;"	m
DATAPATH_H	datapath/datapath.h	20;"	d
DATA_PORT	python/ovstest/args.py	/^DATA_PORT = 15532$/;"	v
DATA_TYPE_SIZE	ofproto/ipfix-gen-entities	/^    DATA_TYPE_SIZE = {$/;"	v	class:IpfixEntityHandler
DBDIR	Makefile	/^DBDIR = ${sysconfdir}\/${PACKAGE}$/;"	m
DBDIR	datapath/Makefile	/^DBDIR = ${sysconfdir}\/${PACKAGE}$/;"	m
DBDIR	python/ovs/dirs.py	/^        DBDIR = "%s\/openvswitch" % sysconfdir$/;"	v
DBDIR	python/ovs/dirs.py	/^DBDIR = os.environ.get("OVS_DBDIR")$/;"	v
DB_CTL_BASE_H	lib/db-ctl-base.h	18;"	d
DEB_UPSTREAM_VERSION	debian/rules	/^DEB_UPSTREAM_VERSION=$(shell dpkg-parsechangelog | sed -rne 's,^Version: ([0-9]:)*([^-]+).*,\\2,p')$/;"	m
DECLARE_EXTERN_PER_THREAD_DATA	lib/ovs-thread.h	256;"	d
DECLARE_EXTERN_PER_THREAD_DATA	lib/ovs-thread.h	312;"	d
DEF	ofproto/ofproto-dpif-ipfix.c	1044;"	d	file:
DEF	ofproto/ofproto-dpif-ipfix.c	1127;"	d	file:
DEFAULT_BRIDGE_NAME	ovn/controller/ovn-controller.c	56;"	d	file:
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_MAX	python/ovs/db/types.py	/^    DEFAULT_MAX = 1$/;"	v	class:Type
DEFAULT_MIN	python/ovs/db/types.py	/^    DEFAULT_MIN = 1$/;"	v	class:Type
DEFAULT_PORT	utilities/ovs-benchmark.c	36;"	d	file:
DEFAULT_TEST_BRIDGE	python/ovstest/tests.py	/^DEFAULT_TEST_BRIDGE = "ovstestbr0"$/;"	v
DEFAULT_TEST_BRIDGE	utilities/ovs-test	/^DEFAULT_TEST_BRIDGE = "ovstestbr0"$/;"	v
DEFAULT_TEST_PORT	python/ovstest/tests.py	/^DEFAULT_TEST_PORT = "ovstestport0"$/;"	v
DEFAULT_TEST_PORT	utilities/ovs-test	/^DEFAULT_TEST_PORT = "ovstestport0"$/;"	v
DEFAULT_TEST_TUN	python/ovstest/tests.py	/^DEFAULT_TEST_TUN = "ovstestport1"$/;"	v
DEFAULT_TEST_TUN	utilities/ovs-test	/^DEFAULT_TEST_TUN = "ovstestport1"$/;"	v
DEFAULT_TTL	lib/netdev-vport.c	70;"	d	file:
DEFERRED_ACTION_FIFO_SIZE	datapath/actions.c	80;"	d	file:
DEFERRED_ACTION_FIFO_SIZE	datapath/linux/actions.c	80;"	d	file:
DEFINE_COMPAT_PNET_REG_FUNC	datapath/linux/compat/include/net/net_namespace.h	25;"	d
DEFINE_COMPAT_PNET_REG_FUNC	datapath/linux/compat/include/net/net_namespace.h	51;"	d
DEFINE_EXTERN_PER_THREAD_DATA	lib/ovs-thread.h	271;"	d
DEFINE_EXTERN_PER_THREAD_DATA	lib/ovs-thread.h	323;"	d
DEFINE_FLEX_ARRAY	datapath/linux/compat/include/linux/flex_array.h	58;"	d
DEFINE_INST	lib/ofp-actions.c	313;"	d	file:
DEFINE_INST	lib/ofp-actions.c	337;"	d	file:
DEFINE_INST	lib/ofp-actions.c	5566;"	d	file:
DEFINE_INST	lib/ofp-actions.c	5568;"	d	file:
DEFINE_INST	lib/ofp-actions.c	5660;"	d	file:
DEFINE_INST	lib/ofp-actions.c	5665;"	d	file:
DEFINE_INST	lib/ofp-actions.c	5775;"	d	file:
DEFINE_INST	lib/ofp-actions.c	5786;"	d	file:
DEFINE_INST	lib/ofp-actions.h	950;"	d
DEFINE_INST	lib/ofp-actions.h	952;"	d
DEFINE_INST	lib/ofp-actions.h	956;"	d
DEFINE_INST	lib/ofp-actions.h	958;"	d
DEFINE_PER_THREAD_MALLOCED_DATA	lib/ovs-thread.h	384;"	d
DEFINE_STATIC_PER_THREAD_DATA	lib/ovs-thread.h	241;"	d
DEFINE_STATIC_PER_THREAD_DATA	lib/ovs-thread.h	274;"	d
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	datapath/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEL	ofproto/bond.c	/^    DEL,        \/* Delete the rule from the ofproto's flow table. *\/$/;"	e	enum:bond_op	file:
DEL	ofproto/in-band.c	/^    DEL                        \/* Delete the rule from ofproto's flow table. *\/$/;"	e	enum:in_band_op	file:
DEL_ALL_VLANS_CMD	utilities/ovs-vlan-bug-workaround.c	35;"	d	file:
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	datapath/Makefile	/^DEPDIR = .deps$/;"	m
DESC_STR_LEN	include/openflow/openflow-common.h	327;"	d
DESTINATIONS	python/ovs/vlog.py	/^DESTINATIONS = {"console": "info", "file": "info", "syslog": "info"}$/;"	v
DF	utilities/bugtool/ovs-bugtool	/^DF = 'df'$/;"	v
DHCPACK	datapath/actions.c	48;"	d	file:
DHCPACK	datapath/linux/actions.c	48;"	d	file:
DHCPDISCOVER	datapath/actions.c	45;"	d	file:
DHCPDISCOVER	datapath/linux/actions.c	45;"	d	file:
DHCPINFORM	datapath/actions.c	49;"	d	file:
DHCPINFORM	datapath/linux/actions.c	49;"	d	file:
DHCPOFFER	datapath/actions.c	46;"	d	file:
DHCPOFFER	datapath/linux/actions.c	46;"	d	file:
DHCPREQUEST	datapath/actions.c	47;"	d	file:
DHCPREQUEST	datapath/linux/actions.c	47;"	d	file:
DHCP_CHADDR_MAX	datapath/actions.c	50;"	d	file:
DHCP_CHADDR_MAX	datapath/linux/actions.c	50;"	d	file:
DHCP_CLIENT_PORT	lib/dhcp.h	26;"	d
DHCP_DNS	datapath/actions.c	54;"	d	file:
DHCP_DNS	datapath/linux/actions.c	54;"	d	file:
DHCP_END	datapath/actions.c	58;"	d	file:
DHCP_END	datapath/linux/actions.c	58;"	d	file:
DHCP_H	lib/dhcp.h	18;"	d
DHCP_HEADER_LEN	lib/dhcp.h	28;"	d
DHCP_LEASETIME	datapath/actions.c	55;"	d	file:
DHCP_LEASETIME	datapath/linux/actions.c	55;"	d	file:
DHCP_LEASE_DIR	utilities/bugtool/ovs-bugtool	/^DHCP_LEASE_DIR = ['\/var\/lib\/dhclient', '\/var\/lib\/dhcp3']$/;"	v
DHCP_MESSAGETYPE	datapath/actions.c	56;"	d	file:
DHCP_MESSAGETYPE	datapath/linux/actions.c	56;"	d	file:
DHCP_ROUTER	datapath/actions.c	53;"	d	file:
DHCP_ROUTER	datapath/linux/actions.c	53;"	d	file:
DHCP_SERVER_PORT	lib/dhcp.h	25;"	d
DHCP_SERVIDENT	datapath/actions.c	57;"	d	file:
DHCP_SERVIDENT	datapath/linux/actions.c	57;"	d	file:
DHCP_SUBNETMASK	datapath/actions.c	52;"	d	file:
DHCP_SUBNETMASK	datapath/linux/actions.c	52;"	d	file:
DHPARAMS_H	lib/dhparams.h	18;"	d
DH_AS_NEEDED	debian/rules	/^DH_AS_NEEDED=$(shell dpkg --compare-versions $$(dpkg --status dh-autoreconf | grep Version | cut -d' ' -f2) ge 6 && echo --as-needed)$/;"	m
DIAG_ADMIN_DOWN	lib/bfd.c	/^    DIAG_ADMIN_DOWN = 7,          \/* Administratively Down. *\/$/;"	e	enum:diag	file:
DIAG_CPATH_DOWN	lib/bfd.c	/^    DIAG_CPATH_DOWN = 6,          \/* Concatenated Path Down. *\/$/;"	e	enum:diag	file:
DIAG_ECHO_FAILED	lib/bfd.c	/^    DIAG_ECHO_FAILED = 2,         \/* Echo Function Failed. *\/$/;"	e	enum:diag	file:
DIAG_EXPIRED	lib/bfd.c	/^    DIAG_EXPIRED = 1,             \/* Control Detection Time Expired. *\/$/;"	e	enum:diag	file:
DIAG_FWD_RESET	lib/bfd.c	/^    DIAG_FWD_RESET = 4,           \/* Forwarding Plane Reset. *\/$/;"	e	enum:diag	file:
DIAG_MASK	lib/bfd.c	145;"	d	file:
DIAG_NONE	lib/bfd.c	/^    DIAG_NONE = 0,                \/* No Diagnostic. *\/$/;"	e	enum:diag	file:
DIAG_PATH_DOWN	lib/bfd.c	/^    DIAG_PATH_DOWN = 5,           \/* Path Down. *\/$/;"	e	enum:diag	file:
DIAG_RCPATH_DOWN	lib/bfd.c	/^    DIAG_RCPATH_DOWN = 8          \/* Reverse Concatenated Path Down. *\/$/;"	e	enum:diag	file:
DIAG_RMT_DOWN	lib/bfd.c	/^    DIAG_RMT_DOWN = 3,            \/* Neighbor Signaled Session Down. *\/$/;"	e	enum:diag	file:
DIRS_H	lib/dirs.h	18;"	d
DIR_FROM_LPORT	ovn/utilities/ovn-nbctl.c	/^    DIR_FROM_LPORT,$/;"	e	enum:__anon221	file:
DIR_TO_LPORT	ovn/utilities/ovn-nbctl.c	/^    DIR_TO_LPORT$/;"	e	enum:__anon221	file:
DISCONNECT	python/ovs/reconnect.py	/^DISCONNECT = 'disconnect'$/;"	v
DISTCLEANFILES	Makefile	/^DISTCLEANFILES = utilities\/ovs-appctl.8 utilities\/ovs-ctl \\$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	datapath/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/manpages.mk \\$/;"	m
DIST_COMMON	datapath/Makefile	/^DIST_COMMON = $(srcdir)\/Modules.mk $(srcdir)\/linux\/Modules.mk \\$/;"	m
DIST_HOOKS	Makefile	/^DIST_HOOKS = check-debian-changelog-version$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__lib_libopenvswitch_la_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	datapath/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	datapath/Makefile	/^DIST_SUBDIRS = linux$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DIV_ROUND_UP	datapath-windows/ovsext/Netlink/NetlinkProto.h	37;"	d
DIV_ROUND_UP	datapath/linux/compat/include/linux/kernel.h	56;"	d
DIV_ROUND_UP	lib/util.h	113;"	d
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	datapath/Makefile	/^DLLTOOL = false$/;"	m
DMESG	utilities/bugtool/ovs-bugtool	/^DMESG = 'dmesg'$/;"	v
DMIDECODE	utilities/bugtool/ovs-bugtool	/^DMIDECODE = 'dmidecode'$/;"	v
DMSETUP	utilities/bugtool/ovs-bugtool	/^DMSETUP = 'dmsetup'$/;"	v
DM_POINTERHITTEST	datapath-windows/ovsext/resource.h	1153;"	d
DO_PRAGMA	lib/compiler.h	37;"	d
DPBUF_DPDK	lib/dp-packet.h	/^    DPBUF_DPDK,                \/* buffer data is from DPDK allocated memory.$/;"	e	enum:dp_packet_source
DPBUF_H	lib/dp-packet.h	18;"	d
DPBUF_MALLOC	lib/dp-packet.h	/^    DPBUF_MALLOC,              \/* Obtained via malloc(). *\/$/;"	e	enum:dp_packet_source
DPBUF_STACK	lib/dp-packet.h	/^    DPBUF_STACK,               \/* Un-movable stack space or static buffer. *\/$/;"	e	enum:dp_packet_source
DPBUF_STUB	lib/dp-packet.h	/^    DPBUF_STUB,                \/* Starts on stack, may expand into heap. *\/$/;"	e	enum:dp_packet_source
DPCTL_H	lib/dpctl.h	17;"	d
DPDK_DEV_ETH	lib/netdev-dpdk.c	/^    DPDK_DEV_ETH = 0,$/;"	e	enum:dpdk_dev_type	file:
DPDK_DEV_VHOST	lib/netdev-dpdk.c	/^    DPDK_DEV_VHOST = 1,$/;"	e	enum:dpdk_dev_type	file:
DPDK_PORT_WATCHDOG_INTERVAL	lib/netdev-dpdk.c	60;"	d	file:
DPDK_RING_SIZE	lib/netdev-dpdk.c	/^enum { DPDK_RING_SIZE = 256 };$/;"	e	enum:__anon107	file:
DPDK_vswitchd_LDFLAGS	Makefile	/^DPDK_vswitchd_LDFLAGS = $/;"	m
DPDK_vswitchd_LDFLAGS	datapath/Makefile	/^DPDK_vswitchd_LDFLAGS = $/;"	m
DPIF_FLOW_BUFSIZE	lib/dpif.h	592;"	d
DPIF_FP_CREATE	lib/dpif.h	/^    DPIF_FP_CREATE = 1 << 0,    \/* Allow creating a new flow. *\/$/;"	e	enum:dpif_flow_put_flags
DPIF_FP_MODIFY	lib/dpif.h	/^    DPIF_FP_MODIFY = 1 << 1,    \/* Allow modifying an existing flow. *\/$/;"	e	enum:dpif_flow_put_flags
DPIF_FP_PROBE	lib/dpif.h	/^    DPIF_FP_PROBE = 1 << 3      \/* Suppress error messages, if any. *\/$/;"	e	enum:dpif_flow_put_flags
DPIF_FP_ZERO_STATS	lib/dpif.h	/^    DPIF_FP_ZERO_STATS = 1 << 2, \/* Zero the stats of an existing flow. *\/$/;"	e	enum:dpif_flow_put_flags
DPIF_H	lib/dpif.h	386;"	d
DPIF_IPFIX_TUNNEL_GENEVE	ofproto/ofproto-dpif-ipfix.c	/^    DPIF_IPFIX_TUNNEL_GENEVE = 0x07,$/;"	e	enum:dpif_ipfix_tunnel_type	file:
DPIF_IPFIX_TUNNEL_GRE	ofproto/ofproto-dpif-ipfix.c	/^    DPIF_IPFIX_TUNNEL_GRE = 0x02,$/;"	e	enum:dpif_ipfix_tunnel_type	file:
DPIF_IPFIX_TUNNEL_IPSEC_GRE	ofproto/ofproto-dpif-ipfix.c	/^    DPIF_IPFIX_TUNNEL_IPSEC_GRE = 0x05,$/;"	e	enum:dpif_ipfix_tunnel_type	file:
DPIF_IPFIX_TUNNEL_LISP	ofproto/ofproto-dpif-ipfix.c	/^    DPIF_IPFIX_TUNNEL_LISP = 0x03,$/;"	e	enum:dpif_ipfix_tunnel_type	file:
DPIF_IPFIX_TUNNEL_STT	ofproto/ofproto-dpif-ipfix.c	/^    DPIF_IPFIX_TUNNEL_STT = 0x04,$/;"	e	enum:dpif_ipfix_tunnel_type	file:
DPIF_IPFIX_TUNNEL_UNKNOWN	ofproto/ofproto-dpif-ipfix.c	/^    DPIF_IPFIX_TUNNEL_UNKNOWN = 0x00,$/;"	e	enum:dpif_ipfix_tunnel_type	file:
DPIF_IPFIX_TUNNEL_VXLAN	ofproto/ofproto-dpif-ipfix.c	/^    DPIF_IPFIX_TUNNEL_VXLAN = 0x01,$/;"	e	enum:dpif_ipfix_tunnel_type	file:
DPIF_NETDEV_H	lib/dpif-netdev.h	18;"	d
DPIF_NETLINK_H	lib/dpif-netlink.h	18;"	d
DPIF_N_UC_TYPES	lib/dpif.h	/^    DPIF_N_UC_TYPES$/;"	e	enum:dpif_upcall_type
DPIF_OP_EXECUTE	lib/dpif.h	/^    DPIF_OP_EXECUTE,$/;"	e	enum:dpif_op_type
DPIF_OP_FLOW_DEL	lib/dpif.h	/^    DPIF_OP_FLOW_DEL,$/;"	e	enum:dpif_op_type
DPIF_OP_FLOW_GET	lib/dpif.h	/^    DPIF_OP_FLOW_GET,$/;"	e	enum:dpif_op_type
DPIF_OP_FLOW_PUT	lib/dpif.h	/^    DPIF_OP_FLOW_PUT = 1,$/;"	e	enum:dpif_op_type
DPIF_PORT_FOR_EACH	lib/dpif.h	489;"	d
DPIF_PROVIDER_H	lib/dpif-provider.h	18;"	d
DPIF_SFLOW_TUNNEL_GENEVE	ofproto/ofproto-dpif-sflow.c	/^    DPIF_SFLOW_TUNNEL_GENEVE$/;"	e	enum:dpif_sflow_tunnel_type	file:
DPIF_SFLOW_TUNNEL_GRE	ofproto/ofproto-dpif-sflow.c	/^    DPIF_SFLOW_TUNNEL_GRE,$/;"	e	enum:dpif_sflow_tunnel_type	file:
DPIF_SFLOW_TUNNEL_IPSEC_GRE	ofproto/ofproto-dpif-sflow.c	/^    DPIF_SFLOW_TUNNEL_IPSEC_GRE,$/;"	e	enum:dpif_sflow_tunnel_type	file:
DPIF_SFLOW_TUNNEL_LISP	ofproto/ofproto-dpif-sflow.c	/^    DPIF_SFLOW_TUNNEL_LISP,$/;"	e	enum:dpif_sflow_tunnel_type	file:
DPIF_SFLOW_TUNNEL_UNKNOWN	ofproto/ofproto-dpif-sflow.c	/^    DPIF_SFLOW_TUNNEL_UNKNOWN = 0,$/;"	e	enum:dpif_sflow_tunnel_type	file:
DPIF_SFLOW_TUNNEL_VXLAN	ofproto/ofproto-dpif-sflow.c	/^    DPIF_SFLOW_TUNNEL_VXLAN,$/;"	e	enum:dpif_sflow_tunnel_type	file:
DPIF_UC_ACTION	lib/dpif.h	/^    DPIF_UC_ACTION,             \/* OVS_ACTION_ATTR_USERSPACE action. *\/$/;"	e	enum:dpif_upcall_type
DPIF_UC_MISS	lib/dpif.h	/^    DPIF_UC_MISS,               \/* Miss in flow table. *\/$/;"	e	enum:dpif_upcall_type
DPKG_QUERY	utilities/bugtool/ovs-bugtool	/^DPKG_QUERY = 'dpkg-query'$/;"	v
DP_MAX_PORTS	datapath/datapath.h	36;"	d
DP_NETDEV_HEADROOM	lib/dpif-netdev.h	/^enum { DP_NETDEV_HEADROOM = 2 + VLAN_HEADER_LEN };$/;"	e	enum:__anon86
DP_N_STATS	lib/dpif-netdev.c	/^    DP_N_STATS$/;"	e	enum:dp_stat_type	file:
DP_ROUTER	ovn/northd/ovn-northd.c	/^    DP_ROUTER                   \/* OVN logical router. *\/$/;"	e	enum:ovn_datapath_type	file:
DP_STAT_EXACT_HIT	lib/dpif-netdev.c	/^    DP_STAT_EXACT_HIT,          \/* Packets that had an exact match (emc). *\/$/;"	e	enum:dp_stat_type	file:
DP_STAT_LOST	lib/dpif-netdev.c	/^    DP_STAT_LOST,               \/* Packets not passed up to the client. *\/$/;"	e	enum:dp_stat_type	file:
DP_STAT_MASKED_HIT	lib/dpif-netdev.c	/^    DP_STAT_MASKED_HIT,         \/* Packets that matched in the flow table. *\/$/;"	e	enum:dp_stat_type	file:
DP_STAT_MISS	lib/dpif-netdev.c	/^    DP_STAT_MISS,               \/* Packets that did not match. *\/$/;"	e	enum:dp_stat_type	file:
DP_SWITCH	ovn/northd/ovn-northd.c	/^    DP_SWITCH,                  \/* OVN logical switch. *\/$/;"	e	enum:ovn_datapath_type	file:
DP_VPORT_HASH_BUCKETS	datapath/datapath.h	37;"	d
DRAIN_TSC	lib/netdev-dpdk.c	/^enum { DRAIN_TSC = 200000ULL };$/;"	e	enum:__anon108	file:
DSCP_DEFAULT	lib/socket-util.h	68;"	d
DSCP_DEFAULT	python/ovs/stream.py	/^    DSCP_DEFAULT = IPTOS_PREC_INTERNETCONTROL >> 2$/;"	v	class:Stream
DSTDIR	debian/rules.modules	/^binary-modules: DSTDIR = $(CURDIR)\/debian\/$(PKGNAME)\/lib\/modules\/$(KVERS)\/updates$/;"	m
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	datapath/Makefile	/^DSYMUTIL = $/;"	m
DS_EMPTY_INITIALIZER	lib/dynamic-string.h	41;"	d
DTS_APPCANPARSE	datapath-windows/ovsext/resource.h	563;"	d
DTS_LONGDATEFORMAT	datapath-windows/ovsext/resource.h	377;"	d
DTS_RIGHTALIGN	datapath-windows/ovsext/resource.h	647;"	d
DTS_SHORTDATECENTURYFORMAT	datapath-windows/ovsext/resource.h	516;"	d
DTS_SHORTDATEFORMAT	datapath-windows/ovsext/resource.h	25;"	d
DTS_SHOWNONE	datapath-windows/ovsext/resource.h	264;"	d
DTS_TIMEFORMAT	datapath-windows/ovsext/resource.h	481;"	d
DTS_UPDOWN	datapath-windows/ovsext/resource.h	83;"	d
DUMMY_H	lib/dummy.h	18;"	d
DUMMY_OVERRIDE_ALL	lib/dummy.h	/^    DUMMY_OVERRIDE_ALL,         \/* Replace all types by dummy. *\/$/;"	e	enum:dummy_level
DUMMY_OVERRIDE_NONE	lib/dummy.h	/^    DUMMY_OVERRIDE_NONE,        \/* Support dummy but don't force its use. *\/$/;"	e	enum:dummy_level
DUMMY_OVERRIDE_SYSTEM	lib/dummy.h	/^    DUMMY_OVERRIDE_SYSTEM,      \/* Replace "system" by dummy. *\/$/;"	e	enum:dummy_level
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	datapath/Makefile	/^DUMPBIN = $/;"	m
DYNAMIC_STRING_H	lib/dynamic-string.h	18;"	d
DatabaseCache	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^class DatabaseCache(object):$/;"	c
DatagramProtocol	python/ovstest/udp.py	/^from twisted.internet.protocol import DatagramProtocol$/;"	i
Datapath	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^class Datapath(object):$/;"	c
DatapathBridge	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^        from InterfaceReconfigureBridge import DatapathBridge$/;"	i
DatapathBridge	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^class DatapathBridge(Datapath):$/;"	c
DatapathFactory	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def DatapathFactory():$/;"	f
DatapathVswitch	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^        from InterfaceReconfigureVswitch import DatapathVswitch$/;"	i
DatapathVswitch	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^class DatapathVswitch(Datapath):$/;"	c
Datum	python/ovs/db/data.py	/^class Datum(object):$/;"	c
DbSchema	python/ovs/db/schema.py	/^class DbSchema(object):$/;"	c
DecayThread	utilities/ovs-dpctl-top	/^class DecayThread(threading.Thread):$/;"	c
DeleteAllFlows	datapath-windows/ovsext/Flow.c	/^DeleteAllFlows(OVS_DATAPATH *datapath)$/;"	f
Destination	datapath-windows/ovsext/NetProto.h	/^    UINT8       Destination[ETH_ADDR_LENGTH];$/;"	m	struct:EthHdr
DriverEntry	datapath-windows/ovsext/Driver.c	/^DriverEntry(PDRIVER_OBJECT driverObject,$/;"	f
DummyAuthorizer	tests/test-l7.py	/^        from pyftpdlib.authorizers import DummyAuthorizer$/;"	i
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	datapath/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	datapath/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	datapath/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EGREP	datapath/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EGRESS_FLOW	ofproto/ofproto-dpif-ipfix.c	/^    EGRESS_FLOW = 0x01$/;"	e	enum:ipfix_flow_direction	file:
ELEMENT_KEY	utilities/ovs-dpctl-top	/^ELEMENT_KEY = {$/;"	v
EMC_FOR_EACH_POS_WITH_HASH	lib/dpif-netdev.c	144;"	d	file:
EMSG	lib/getopt_long.c	60;"	d	file:
EM_CANUNDO	datapath-windows/ovsext/resource.h	961;"	d
EM_CHARFROMPOS	datapath-windows/ovsext/resource.h	977;"	d
EM_EMPTYUNDOBUFFER	datapath-windows/ovsext/resource.h	967;"	d
EM_FLOW_HASH_ENTRIES	lib/dpif-netdev.c	128;"	d	file:
EM_FLOW_HASH_MASK	lib/dpif-netdev.c	129;"	d	file:
EM_FLOW_HASH_SEGS	lib/dpif-netdev.c	130;"	d	file:
EM_FLOW_HASH_SHIFT	lib/dpif-netdev.c	127;"	d	file:
EM_FMTLINES	datapath-windows/ovsext/resource.h	963;"	d
EM_GETFIRSTVISIBLELINE	datapath-windows/ovsext/resource.h	968;"	d
EM_GETHANDLE	datapath-windows/ovsext/resource.h	952;"	d
EM_GETIMESTATUS	datapath-windows/ovsext/resource.h	979;"	d
EM_GETLIMITTEXT	datapath-windows/ovsext/resource.h	975;"	d
EM_GETLINE	datapath-windows/ovsext/resource.h	959;"	d
EM_GETLINECOUNT	datapath-windows/ovsext/resource.h	946;"	d
EM_GETMARGINS	datapath-windows/ovsext/resource.h	974;"	d
EM_GETMODIFY	datapath-windows/ovsext/resource.h	943;"	d
EM_GETPASSWORDCHAR	datapath-windows/ovsext/resource.h	972;"	d
EM_GETRECT	datapath-windows/ovsext/resource.h	932;"	d
EM_GETSEL	datapath-windows/ovsext/resource.h	928;"	d
EM_GETTHUMB	datapath-windows/ovsext/resource.h	954;"	d
EM_GETWORDBREAKPROC	datapath-windows/ovsext/resource.h	971;"	d
EM_LIMITTEXT	datapath-windows/ovsext/resource.h	960;"	d
EM_LINEFROMCHAR	datapath-windows/ovsext/resource.h	964;"	d
EM_LINEINDEX	datapath-windows/ovsext/resource.h	948;"	d
EM_LINELENGTH	datapath-windows/ovsext/resource.h	957;"	d
EM_LINESCROLL	datapath-windows/ovsext/resource.h	940;"	d
EM_POSFROMCHAR	datapath-windows/ovsext/resource.h	976;"	d
EM_REPLACESEL	datapath-windows/ovsext/resource.h	958;"	d
EM_SCROLL	datapath-windows/ovsext/resource.h	938;"	d
EM_SCROLLCARET	datapath-windows/ovsext/resource.h	942;"	d
EM_SETHANDLE	datapath-windows/ovsext/resource.h	950;"	d
EM_SETIMESTATUS	datapath-windows/ovsext/resource.h	978;"	d
EM_SETMARGINS	datapath-windows/ovsext/resource.h	973;"	d
EM_SETMODIFY	datapath-windows/ovsext/resource.h	944;"	d
EM_SETPASSWORDCHAR	datapath-windows/ovsext/resource.h	966;"	d
EM_SETREADONLY	datapath-windows/ovsext/resource.h	969;"	d
EM_SETRECT	datapath-windows/ovsext/resource.h	934;"	d
EM_SETRECTNP	datapath-windows/ovsext/resource.h	936;"	d
EM_SETSEL	datapath-windows/ovsext/resource.h	930;"	d
EM_SETTABSTOPS	datapath-windows/ovsext/resource.h	965;"	d
EM_SETWORDBREAKPROC	datapath-windows/ovsext/resource.h	970;"	d
EM_UNDO	datapath-windows/ovsext/resource.h	962;"	d
END_OF_FLOW_DETECTED	ofproto/ofproto-dpif-ipfix.c	/^    END_OF_FLOW_DETECTED = 0x03,$/;"	e	enum:ipfix_flow_end_reason	file:
ENTROPY_H	lib/entropy.h	17;"	d
ENV	utilities/ovs-dev.py	/^ENV = os.environ$/;"	v
EOF	python/ovs/jsonrpc.py	/^EOF = ovs.util.EOF$/;"	v
EOF	python/ovs/reconnect.py	/^EOF = ovs.util.EOF$/;"	v
EOF	python/ovs/util.py	/^EOF = -1$/;"	v
EPOLLIN	include/windows/sys/epoll.h	20;"	d
ERROR	python/ovs/db/idl.py	/^    ERROR = "error"              # Commit failed due to a hard error.$/;"	v	class:Transaction
ERR_CAST	datapath/linux/compat/include/linux/err.h	/^static inline void *ERR_CAST(const void *ptr)$/;"	f
ESTSUITEFLAGS	debian/rules	/^	if $(MAKE) check TESTSUITEFLAGS='$(PARALLEL)' || \\$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	datapath/Makefile	/^ETAGS = etags$/;"	m
ETHERTYPE_LLDP	lib/lldp/lldpd.h	36;"	d
ETHTOOL	utilities/bugtool/ovs-bugtool	/^ETHTOOL = 'ethtool'$/;"	v
ETHTOOL_GFLAGS	lib/netdev-linux.c	100;"	d	file:
ETHTOOL_SFLAGS	lib/netdev-linux.c	103;"	d	file:
ETH_802_1_P_BACKGROUND	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_BACKGROUND           = 1,$/;"	e	enum:__anon16
ETH_802_1_P_BEST_EFFORT	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_BEST_EFFORT          = 0,$/;"	e	enum:__anon16
ETH_802_1_P_CRITICAL_APPS	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_CRITICAL_APPS        = 3,$/;"	e	enum:__anon16
ETH_802_1_P_EXCELLENT_EFFORT	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_EXCELLENT_EFFORT     = 2,$/;"	e	enum:__anon16
ETH_802_1_P_INTERNETWORK_CONROL	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_INTERNETWORK_CONROL  = 6,$/;"	e	enum:__anon16
ETH_802_1_P_NETWORK_CONTROL	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_NETWORK_CONTROL      = 7$/;"	e	enum:__anon16
ETH_802_1_P_VIDEO	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_VIDEO                = 4,$/;"	e	enum:__anon16
ETH_802_1_P_VOICE	datapath-windows/ovsext/Ethernet.h	/^    ETH_802_1_P_VOICE                = 5,$/;"	e	enum:__anon16
ETH_ADDR_ARGS	lib/packets.h	316;"	d
ETH_ADDR_BYTES_ARGS	lib/packets.h	317;"	d
ETH_ADDR_FMT	lib/packets.h	314;"	d
ETH_ADDR_FMT_ARGS	datapath-windows/ovsext/Ethernet.h	26;"	d
ETH_ADDR_FMT_STR	datapath-windows/ovsext/Ethernet.h	25;"	d
ETH_ADDR_LEN	lib/packets.h	154;"	d
ETH_ADDR_LENGTH	datapath-windows/ovsext/Ethernet.h	21;"	d
ETH_ADDR_LENGTH	datapath-windows/ovsext/NetProto.h	23;"	d
ETH_ADDR_SCAN_ARGS	lib/packets.h	332;"	d
ETH_ADDR_SCAN_FMT	lib/packets.h	331;"	d
ETH_ALEN	datapath-windows/ovsext/Types.h	39;"	d
ETH_BROADCAST_ADDRESS	datapath-windows/ovsext/Ethernet.h	161;"	d
ETH_DEFAULT_MTU	datapath-windows/ovsext/Ethernet.h	222;"	d
ETH_FCS_LEN	datapath-windows/ovsext/Ethernet.h	224;"	d
ETH_FILTER_ALLMULTI	datapath-windows/ovsext/Ethernet.h	/^    ETH_FILTER_ALLMULTI  = 0x0004,   \/* pass *all* multicast frames *\/$/;"	e	enum:Eth_RxMode
ETH_FILTER_BROADCAST	datapath-windows/ovsext/Ethernet.h	/^    ETH_FILTER_BROADCAST = 0x0008,   \/* pass broadcast frames *\/$/;"	e	enum:Eth_RxMode
ETH_FILTER_FLAG_FMT_ARGS	datapath-windows/ovsext/Ethernet.h	43;"	d
ETH_FILTER_FLAG_FMT_STR	datapath-windows/ovsext/Ethernet.h	42;"	d
ETH_FILTER_MULTICAST	datapath-windows/ovsext/Ethernet.h	/^    ETH_FILTER_MULTICAST = 0x0002,   \/* pass some multicast frames *\/$/;"	e	enum:Eth_RxMode
ETH_FILTER_PROMISC	datapath-windows/ovsext/Ethernet.h	/^    ETH_FILTER_PROMISC   = 0x0010,   \/* pass all frames (ie no filter) *\/$/;"	e	enum:Eth_RxMode
ETH_FILTER_SINK	datapath-windows/ovsext/Ethernet.h	/^    ETH_FILTER_SINK      = 0x10000   \/* pass not-matched unicast frames *\/$/;"	e	enum:Eth_RxMode
ETH_FILTER_UNICAST	datapath-windows/ovsext/Ethernet.h	/^    ETH_FILTER_UNICAST   = 0x0001,   \/* pass unicast (directed) frames *\/$/;"	e	enum:Eth_RxMode
ETH_FILTER_USE_LADRF	datapath-windows/ovsext/Ethernet.h	/^    ETH_FILTER_USE_LADRF = 0x0020,   \/* use the LADRF for multicast filtering *\/$/;"	e	enum:Eth_RxMode
ETH_FLAG_LRO	lib/dpif-netlink.c	68;"	d	file:
ETH_HEADER_LEN	lib/packets.h	364;"	d
ETH_HEADER_LEN_802_1PQ	datapath-windows/ovsext/Ethernet.h	183;"	d
ETH_HEADER_LEN_802_1PQ_802_3	datapath-windows/ovsext/Ethernet.h	208;"	d
ETH_HEADER_LEN_802_1PQ_LLC	datapath-windows/ovsext/Ethernet.h	198;"	d
ETH_HEADER_LEN_802_1PQ_LLC16	datapath-windows/ovsext/Ethernet.h	203;"	d
ETH_HEADER_LEN_802_2_LLC	datapath-windows/ovsext/Ethernet.h	187;"	d
ETH_HEADER_LEN_802_2_LLC16	datapath-windows/ovsext/Ethernet.h	191;"	d
ETH_HEADER_LEN_802_3	datapath-windows/ovsext/Ethernet.h	195;"	d
ETH_HEADER_LEN_DIX	datapath-windows/ovsext/Ethernet.h	180;"	d
ETH_HEADER_TYPE_802_1PQ	datapath-windows/ovsext/Ethernet.h	/^    ETH_HEADER_TYPE_802_1PQ,$/;"	e	enum:__anon12
ETH_HEADER_TYPE_802_1PQ_802_3	datapath-windows/ovsext/Ethernet.h	/^    ETH_HEADER_TYPE_802_1PQ_802_3,$/;"	e	enum:__anon12
ETH_HEADER_TYPE_802_3	datapath-windows/ovsext/Ethernet.h	/^    ETH_HEADER_TYPE_802_3,$/;"	e	enum:__anon12
ETH_HEADER_TYPE_DIX	datapath-windows/ovsext/Ethernet.h	/^    ETH_HEADER_TYPE_DIX,$/;"	e	enum:__anon12
ETH_LADRF_LEN	datapath-windows/ovsext/Ethernet.h	20;"	d
ETH_LLC_CONTROL_IFRAME	datapath-windows/ovsext/Ethernet.h	/^    ETH_LLC_CONTROL_IFRAME  = 0x0, \/\/ both 0x0 and 0x2, only low bit of 0 needed$/;"	e	enum:__anon15
ETH_LLC_CONTROL_SFRAME	datapath-windows/ovsext/Ethernet.h	/^    ETH_LLC_CONTROL_SFRAME  = 0x1,$/;"	e	enum:__anon15
ETH_LLC_CONTROL_UFRAME	datapath-windows/ovsext/Ethernet.h	/^    ETH_LLC_CONTROL_UFRAME  = 0x3,$/;"	e	enum:__anon15
ETH_LLC_CONTROL_UFRAME_MASK	datapath-windows/ovsext/Ethernet.h	89;"	d
ETH_MAX_EXACT_MULTICAST_ADDRS	datapath-windows/ovsext/Ethernet.h	29;"	d
ETH_MAX_HEADER_LEN	datapath-windows/ovsext/Ethernet.h	214;"	d
ETH_MAX_JUMBO_FRAMELEN	datapath-windows/ovsext/Ethernet.h	220;"	d
ETH_MAX_JUMBO_MTU	datapath-windows/ovsext/Ethernet.h	219;"	d
ETH_MAX_STD_FRAMELEN	datapath-windows/ovsext/Ethernet.h	218;"	d
ETH_MAX_STD_MTU	datapath-windows/ovsext/Ethernet.h	217;"	d
ETH_MIN_FRAME_LEN	datapath-windows/ovsext/Ethernet.h	216;"	d
ETH_MIN_HEADER_LEN	datapath-windows/ovsext/Ethernet.h	213;"	d
ETH_PAYLOAD_MAX	lib/packets.h	366;"	d
ETH_PAYLOAD_MIN	lib/packets.h	365;"	d
ETH_P_8021AD	datapath/linux/compat/include/linux/if_ether.h	11;"	d
ETH_P_802_3_MIN	datapath/linux/compat/include/linux/if_ether.h	7;"	d
ETH_TOTAL_MAX	lib/packets.h	368;"	d
ETH_TOTAL_MIN	lib/packets.h	367;"	d
ETH_TYPENOT8023	datapath-windows/ovsext/Ethernet.h	171;"	d
ETH_TYPE_802_1PQ	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_802_1PQ     = 0x8100, \/\/ not really a DIX type, but used as such$/;"	e	enum:__anon13
ETH_TYPE_802_1PQ_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_802_1PQ_NBO = 0x0081,  \/\/ not really a DIX type, but used as such$/;"	e	enum:__anon14
ETH_TYPE_AKIMBI_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_AKIMBI_NBO  = 0xDE88,$/;"	e	enum:__anon14
ETH_TYPE_ARP	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_ARP         = 0x0806,$/;"	e	enum:__anon13
ETH_TYPE_ARP	lib/packets.h	336;"	d
ETH_TYPE_ARP_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_ARP_NBO     = 0x0608,$/;"	e	enum:__anon14
ETH_TYPE_CDP	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_CDP         = 0x2000,$/;"	e	enum:__anon13
ETH_TYPE_CDP_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_CDP_NBO     = 0x0020,$/;"	e	enum:__anon14
ETH_TYPE_CFM	lib/cfm.c	52;"	d	file:
ETH_TYPE_IP	lib/packets.h	335;"	d
ETH_TYPE_IPV4	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_IPV4        = 0x0800,$/;"	e	enum:__anon13
ETH_TYPE_IPV4_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_IPV4_NBO    = 0x0008,$/;"	e	enum:__anon14
ETH_TYPE_IPV6	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_IPV6        = 0x86DD,$/;"	e	enum:__anon13
ETH_TYPE_IPV6	lib/packets.h	341;"	d
ETH_TYPE_IPV6_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_IPV6_NBO    = 0xDD86,$/;"	e	enum:__anon14
ETH_TYPE_LACP	lib/packets.h	342;"	d
ETH_TYPE_LLC	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_LLC         = 0xFFFF, \/\/ 0xFFFF is IANA reserved, used to mark LLC$/;"	e	enum:__anon13
ETH_TYPE_LLDP	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_LLDP        = 0x88CC,$/;"	e	enum:__anon13
ETH_TYPE_LLDP	lib/ovs-lldp.c	57;"	d	file:
ETH_TYPE_LLDP	tests/test-aa.c	26;"	d	file:
ETH_TYPE_LLDP_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_LLDP_NBO    = 0xCC88,$/;"	e	enum:__anon14
ETH_TYPE_MIN	lib/packets.h	362;"	d
ETH_TYPE_MPLS	lib/packets.h	344;"	d
ETH_TYPE_MPLS_MCAST	lib/packets.h	345;"	d
ETH_TYPE_RARP	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_RARP        = 0x8035,$/;"	e	enum:__anon13
ETH_TYPE_RARP	lib/packets.h	343;"	d
ETH_TYPE_RARP_NBO	datapath-windows/ovsext/Ethernet.h	/^    ETH_TYPE_RARP_NBO    = 0x3580,$/;"	e	enum:__anon14
ETH_TYPE_TEB	lib/packets.h	337;"	d
ETH_TYPE_VLAN	lib/packets.h	339;"	d
ETH_TYPE_VLAN_8021AD	lib/packets.h	340;"	d
ETH_TYPE_VLAN_8021Q	lib/packets.h	338;"	d
ETH_VLAN_LEN	datapath-windows/ovsext/Ethernet.h	225;"	d
ETH_VLAN_TOTAL_MAX	lib/packets.h	369;"	d
EVICTION_CLIENT	ofproto/ofproto-provider.h	255;"	d
EVICTION_OPENFLOW	ofproto/ofproto-provider.h	256;"	d
EXECUTE_ACTIONS_H	lib/odp-execute.h	19;"	d
EXEC_ACTIONS_LEVEL_LIMIT	datapath/actions.c	89;"	d	file:
EXEC_ACTIONS_LEVEL_LIMIT	datapath/linux/actions.c	89;"	d	file:
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	datapath/Makefile	/^EXEEXT = $/;"	m
EXPR_C_INTEGER	ovn/lib/expr.c	/^    EXPR_C_INTEGER,$/;"	e	enum:expr_constant_type	file:
EXPR_C_STRING	ovn/lib/expr.c	/^    EXPR_C_STRING$/;"	e	enum:expr_constant_type	file:
EXPR_L_BOOLEAN	ovn/lib/expr.h	/^    EXPR_L_BOOLEAN,$/;"	e	enum:expr_level
EXPR_L_NOMINAL	ovn/lib/expr.h	/^    EXPR_L_NOMINAL,$/;"	e	enum:expr_level
EXPR_L_ORDINAL	ovn/lib/expr.h	/^    EXPR_L_ORDINAL$/;"	e	enum:expr_level
EXPR_R_EQ	ovn/lib/expr.h	/^    EXPR_R_EQ,                  \/* == *\/$/;"	e	enum:expr_relop
EXPR_R_GE	ovn/lib/expr.h	/^    EXPR_R_GE,                  \/* >= *\/$/;"	e	enum:expr_relop
EXPR_R_GT	ovn/lib/expr.h	/^    EXPR_R_GT,                  \/* > *\/$/;"	e	enum:expr_relop
EXPR_R_LE	ovn/lib/expr.h	/^    EXPR_R_LE,                  \/* <= *\/$/;"	e	enum:expr_relop
EXPR_R_LT	ovn/lib/expr.h	/^    EXPR_R_LT,                  \/* < *\/$/;"	e	enum:expr_relop
EXPR_R_NE	ovn/lib/expr.h	/^    EXPR_R_NE,                  \/* != *\/$/;"	e	enum:expr_relop
EXPR_T_AND	ovn/lib/expr.h	/^    EXPR_T_AND,                 \/* Logical AND of 2 or more subexpressions. *\/$/;"	e	enum:expr_type
EXPR_T_BOOLEAN	ovn/lib/expr.h	/^    EXPR_T_BOOLEAN,             \/* True or false constant. *\/$/;"	e	enum:expr_type
EXPR_T_CMP	ovn/lib/expr.h	/^    EXPR_T_CMP,                 \/* Compare symbol with constant. *\/$/;"	e	enum:expr_type
EXPR_T_OR	ovn/lib/expr.h	/^    EXPR_T_OR,                  \/* Logical OR of 2 or more subexpressions. *\/$/;"	e	enum:expr_type
EXTRA_DIST	Makefile	/^EXTRA_DIST = $(docs) NOTICE .travis.yml .travis\/build.sh \\$/;"	m
EXTRA_DIST	datapath/Makefile	/^EXTRA_DIST = $(dist_headers) $(dist_sources) $(dist_extras) \\$/;"	m
Error	python/ovs/db/error.py	/^class Error(Exception):$/;"	c
Error	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^class Error(Exception):$/;"	c
EthHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct EthHdr {$/;"	s
EthHdr	datapath-windows/ovsext/NetProto.h	/^} EthHdr, *PEthHdr;$/;"	t	typeref:struct:EthHdr
Eth_802_1pq	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_802_1pq {$/;"	s
Eth_802_1pq	datapath-windows/ovsext/Ethernet.h	/^} Eth_802_1pq;$/;"	t	typeref:struct:Eth_802_1pq
Eth_802_1pq_Tag	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_802_1pq_Tag {$/;"	s
Eth_802_1pq_Tag	datapath-windows/ovsext/Ethernet.h	/^} Eth_802_1pq_Tag;$/;"	t	typeref:struct:Eth_802_1pq_Tag
Eth_802_3	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_802_3 {$/;"	s
Eth_802_3	datapath-windows/ovsext/Ethernet.h	/^} Eth_802_3;$/;"	t	typeref:struct:Eth_802_3
Eth_Address	datapath-windows/ovsext/Ethernet.h	/^typedef UINT8 Eth_Address[ETH_ADDR_LENGTH];$/;"	t
Eth_DIX	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_DIX {$/;"	s
Eth_DIX	datapath-windows/ovsext/Ethernet.h	/^} Eth_DIX;$/;"	t	typeref:struct:Eth_DIX
Eth_DixType	datapath-windows/ovsext/Ethernet.h	/^} Eth_DixType;$/;"	t	typeref:enum:__anon13
Eth_DixTypeNBO	datapath-windows/ovsext/Ethernet.h	/^} Eth_DixTypeNBO;$/;"	t	typeref:enum:__anon14
Eth_EncapsulatedPktType	datapath-windows/ovsext/Ethernet.h	/^Eth_EncapsulatedPktType(const Eth_Header *eh)$/;"	f
Eth_HdrType	datapath-windows/ovsext/Ethernet.h	/^} Eth_HdrType;$/;"	t	typeref:enum:__anon12
Eth_Header	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_Header {$/;"	s
Eth_Header	datapath-windows/ovsext/Ethernet.h	/^} Eth_Header;$/;"	t	typeref:struct:Eth_Header
Eth_HeaderType	datapath-windows/ovsext/Ethernet.h	/^Eth_HeaderType(const Eth_Header *eh)$/;"	f
Eth_IsARP	datapath-windows/ovsext/Ethernet.h	/^Eth_IsARP(const Eth_Header *eh)$/;"	f
Eth_IsAddrMatch	datapath-windows/ovsext/Ethernet.h	/^Eth_IsAddrMatch(const Eth_Address addr1, const Eth_Address addr2)$/;"	f
Eth_IsBroadcastAddr	datapath-windows/ovsext/Ethernet.h	/^Eth_IsBroadcastAddr(const Eth_Address addr)$/;"	f
Eth_IsDixType	datapath-windows/ovsext/Ethernet.h	/^Eth_IsDixType(const Eth_Header *eh, const Eth_DixTypeNBO type)$/;"	f
Eth_IsFrameTagged	datapath-windows/ovsext/Ethernet.h	/^Eth_IsFrameTagged(const Eth_Header *eh)$/;"	f
Eth_IsIPV4	datapath-windows/ovsext/Ethernet.h	/^Eth_IsIPV4(const Eth_Header *eh)$/;"	f
Eth_IsIPV6	datapath-windows/ovsext/Ethernet.h	/^Eth_IsIPV6(const Eth_Header *eh)$/;"	f
Eth_IsNullAddr	datapath-windows/ovsext/Ethernet.h	/^Eth_IsNullAddr(const Eth_Address addr)$/;"	f
Eth_IsUnicastAddr	datapath-windows/ovsext/Ethernet.h	/^Eth_IsUnicastAddr(const Eth_Address addr)$/;"	f
Eth_LLC16	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_LLC16 {$/;"	s
Eth_LLC16	datapath-windows/ovsext/Ethernet.h	/^} Eth_LLC16;$/;"	t	typeref:struct:Eth_LLC16
Eth_LLC8	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_LLC8 {$/;"	s
Eth_LLC8	datapath-windows/ovsext/Ethernet.h	/^} Eth_LLC8;$/;"	t	typeref:struct:Eth_LLC8
Eth_LLCControlBits	datapath-windows/ovsext/Ethernet.h	/^} Eth_LLCControlBits;$/;"	t	typeref:enum:__anon15
Eth_RxMode	datapath-windows/ovsext/Ethernet.h	/^typedef enum Eth_RxMode {$/;"	g
Eth_RxMode	datapath-windows/ovsext/Ethernet.h	/^} Eth_RxMode;$/;"	t	typeref:enum:Eth_RxMode
Eth_SNAP	datapath-windows/ovsext/Ethernet.h	/^typedef struct Eth_SNAP {$/;"	s
Eth_SNAP	datapath-windows/ovsext/Ethernet.h	/^} Eth_SNAP;$/;"	t	typeref:struct:Eth_SNAP
EtherArp	datapath-windows/ovsext/NetProto.h	/^typedef struct EtherArp {$/;"	s
EtherArp	datapath-windows/ovsext/NetProto.h	/^} EtherArp;$/;"	t	typeref:struct:EtherArp
FACILITIES	python/ovs/vlog.py	/^FACILITIES = ['auth', 'authpriv', 'cron', 'daemon', 'ftp', 'kern', 'lpr',$/;"	v
FACILITY_MASK	lib/syslog-direct.c	29;"	d	file:
FAIL_OPEN_H	ofproto/fail-open.h	18;"	d
FAIL_OPEN_PRIORITY	ofproto/fail-open.h	32;"	d
FATAL_SIGNAL_H	lib/fatal-signal.h	18;"	d
FAT_RWLOCK_H	lib/fat-rwlock.h	18;"	d
FDISK	utilities/bugtool/ovs-bugtool	/^FDISK = 'fdisk'$/;"	v
FGREP	Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FGREP	datapath/Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FIELDS	utilities/ovs-dpctl-top	/^    FIELDS = "fields"$/;"	v	class:Columns
FIELDS_CMPND	utilities/ovs-dpctl-top	/^FIELDS_CMPND = re.compile("([\\w]+)\\((.+)\\)")$/;"	v
FIELDS_CMPND_ELEMENT	utilities/ovs-dpctl-top	/^FIELDS_CMPND_ELEMENT = re.compile("([\\w:]+)=([\/\\.\\w:]+)")$/;"	v
FIELDS_ELEMENT	utilities/ovs-dpctl-top	/^FIELDS_ELEMENT = re.compile("([\\w]+):([-\\.\\w]+)")$/;"	v
FIELD_SELECT_SCRIPT	utilities/ovs-dpctl-top	/^    FIELD_SELECT_SCRIPT = 7$/;"	v	class:Render
FIELD_SELECT_TOP	utilities/ovs-dpctl-top	/^    FIELD_SELECT_TOP = -1$/;"	v	class:Render
FILEOPENORD	datapath-windows/ovsext/resource.h	1394;"	d
FIND	utilities/bugtool/ovs-bugtool	/^FIND = 'find'$/;"	v
FINDDLGORD	datapath-windows/ovsext/resource.h	1405;"	d
FIRST_PARAM	datapath/linux/compat/stt.c	1322;"	d	file:
FIRST_PARAM	datapath/linux/compat/stt.c	1324;"	d	file:
FIRST_PARAM	datapath/linux/stt.c	1322;"	d	file:
FIRST_PARAM	datapath/linux/stt.c	1324;"	d	file:
FLAGS_MASK	lib/bfd.c	148;"	d	file:
FLAG_AUTH	lib/bfd.c	/^    FLAG_AUTH = 1 << 2,$/;"	e	enum:flags	file:
FLAG_CTL	lib/bfd.c	/^    FLAG_CTL = 1 << 3,$/;"	e	enum:flags	file:
FLAG_DEMAND	lib/bfd.c	/^    FLAG_DEMAND = 1 << 1,$/;"	e	enum:flags	file:
FLAG_FINAL	lib/bfd.c	/^    FLAG_FINAL = 1 << 4,$/;"	e	enum:flags	file:
FLAG_MULTIPOINT	lib/bfd.c	/^    FLAG_MULTIPOINT = 1 << 0,$/;"	e	enum:flags	file:
FLAG_POLL	lib/bfd.c	/^    FLAG_POLL = 1 << 5$/;"	e	enum:flags	file:
FLEX_ARRAY_BASE_BYTES_LEFT	datapath/linux/compat/include/linux/flex_array.h	43;"	d
FLEX_ARRAY_BASE_SIZE	datapath/linux/compat/include/linux/flex_array.h	14;"	d
FLEX_ARRAY_ELEMENTS_PER_PART	datapath/linux/compat/include/linux/flex_array.h	51;"	d
FLEX_ARRAY_FREE	datapath/linux/compat/include/linux/poison.h	8;"	d
FLEX_ARRAY_NR_BASE_PTRS	datapath/linux/compat/include/linux/flex_array.h	47;"	d
FLEX_ARRAY_PART_SIZE	datapath/linux/compat/include/linux/flex_array.h	13;"	d
FLOWMAP_AUX_INITIALIZER	lib/flow.h	446;"	d
FLOWMAP_CLEAR	lib/flow.h	428;"	d
FLOWMAP_EMPTY_INITIALIZER	lib/flow.h	401;"	d
FLOWMAP_FOR_EACH_INDEX	lib/flow.h	451;"	d
FLOWMAP_FOR_EACH_MAP	lib/flow.h	438;"	d
FLOWMAP_FOR_EACH_UNIT	lib/flow.h	434;"	d
FLOWMAP_HAS_FIELD	lib/flow.h	417;"	d
FLOWMAP_SET	lib/flow.h	420;"	d
FLOWMAP_SET__	lib/flow.h	423;"	d
FLOWMAP_UNITS	lib/flow.h	395;"	d
FLOW_DL_TYPE_NONE	lib/flow.h	58;"	d
FLOW_DUMP_MAX_BATCH	lib/dpif-netdev.c	75;"	d	file:
FLOW_FIELDS	utilities/ovs-dpctl-top	/^    FLOW_FIELDS = [_field.field_type for _field in OUTPUT_FORMAT] + ["all"]$/;"	v	class:Render
FLOW_FOR_EACH_IN_MAPS	lib/flow.h	706;"	d
FLOW_GET_ACTIONS	datapath-windows/ovsext/DpInternal.h	/^    FLOW_GET_ACTIONS =   0x00000100,$/;"	e	enum:GetFlags
FLOW_GET_KEY	datapath-windows/ovsext/DpInternal.h	/^    FLOW_GET_KEY =       0x00000001,$/;"	e	enum:GetFlags
FLOW_GET_STATS	datapath-windows/ovsext/DpInternal.h	/^    FLOW_GET_STATS =     0x00000010,$/;"	e	enum:GetFlags
FLOW_H	datapath/flow.h	20;"	d
FLOW_H	lib/flow.h	17;"	d
FLOW_MAX_MPLS_LABELS	lib/flow.h	73;"	d
FLOW_MAX_PACKET_U64S	lib/flow.h	151;"	d
FLOW_NETLINK_H	datapath/flow_netlink.h	21;"	d
FLOW_NW_FRAG_ANY	lib/flow.h	61;"	d
FLOW_NW_FRAG_LATER	lib/flow.h	62;"	d
FLOW_NW_FRAG_MASK	lib/flow.h	63;"	d
FLOW_N_REGS	lib/flow.h	46;"	d
FLOW_N_XREGS	lib/flow.h	54;"	d
FLOW_SAMPLE_UPCALL	ofproto/ofproto-dpif-upcall.c	/^    FLOW_SAMPLE_UPCALL,         \/* Per-flow sampling. *\/$/;"	e	enum:upcall_type	file:
FLOW_SEGMENT_1_ENDS_AT	lib/flow.h	/^    FLOW_SEGMENT_1_ENDS_AT = offsetof(struct flow, dl_dst),$/;"	e	enum:__anon91
FLOW_SEGMENT_2_ENDS_AT	lib/flow.h	/^    FLOW_SEGMENT_2_ENDS_AT = offsetof(struct flow, nw_src),$/;"	e	enum:__anon91
FLOW_SEGMENT_3_ENDS_AT	lib/flow.h	/^    FLOW_SEGMENT_3_ENDS_AT = offsetof(struct flow, tp_src),$/;"	e	enum:__anon91
FLOW_TABLE_H	datapath/flow_table.h	20;"	d
FLOW_TNL_F_CSUM	lib/packets.h	64;"	d
FLOW_TNL_F_DONT_FRAGMENT	lib/packets.h	63;"	d
FLOW_TNL_F_KEY	lib/packets.h	65;"	d
FLOW_TNL_F_MASK	lib/packets.h	67;"	d
FLOW_TNL_F_OAM	lib/packets.h	58;"	d
FLOW_TNL_F_UDPIF	lib/packets.h	73;"	d
FLOW_TNL_PUB_F_MASK	lib/packets.h	60;"	d
FLOW_U32OFS	lib/meta-flow.c	43;"	d	file:
FLOW_U32S	tests/test-classifier.c	1513;"	d	file:
FLOW_U64S	lib/flow.h	146;"	d
FLOW_U64_OFFREM	lib/flow.h	187;"	d
FLOW_U64_OFFSET	lib/flow.h	185;"	d
FLOW_U64_SIZE	lib/flow.h	191;"	d
FLOW_WC_SEQ	lib/flow.h	43;"	d
FONTDLGORD	datapath-windows/ovsext/resource.h	1407;"	d
FORCED_END	ofproto/ofproto-dpif-ipfix.c	/^    FORCED_END = 0x04,$/;"	e	enum:ipfix_flow_end_reason	file:
FORMATDLGORD30	datapath-windows/ovsext/resource.h	1409;"	d
FORMATDLGORD31	datapath-windows/ovsext/resource.h	1408;"	d
FORMATTING	build-aux/extract-ofp-fields	/^FORMATTING = {"decimal":            ("MFS_DECIMAL",      1,   8),$/;"	v
FOR_EACH_CORE_ON_NUMA	lib/ovs-numa.h	162;"	d
FOR_EACH_CORE_ON_NUMA	lib/ovs-numa.h	60;"	d
FOR_EACH_ENABLED_PORT	lib/stp.c	158;"	d	file:
FOR_EACH_MATCHING_TABLE	ofproto/ofproto.c	3784;"	d	file:
FOR_EACH_RULE_IN_LIST_PROTECTED	lib/classifier-private.h	192;"	d
FPV_DEFAULT	lib/rstp.h	/^    FPV_DEFAULT = 2$/;"	e	enum:rstp_force_protocol_version
FPV_STP_COMPATIBILITY	lib/rstp.h	/^    FPV_STP_COMPATIBILITY = 0,$/;"	e	enum:rstp_force_protocol_version
FQCODEL_N_QUEUES	lib/netdev-linux.c	3089;"	d	file:
FRAG_CB	datapath/linux/compat/stt.c	126;"	d	file:
FRAG_CB	datapath/linux/stt.c	126;"	d	file:
FRAG_EXP_TIME	datapath/linux/compat/stt.c	77;"	d	file:
FRAG_EXP_TIME	datapath/linux/stt.c	77;"	d	file:
FRAG_HASH_ENTRIES	datapath/linux/compat/stt.c	83;"	d	file:
FRAG_HASH_ENTRIES	datapath/linux/stt.c	83;"	d	file:
FRAG_HASH_SEGS	datapath/linux/compat/stt.c	84;"	d	file:
FRAG_HASH_SEGS	datapath/linux/stt.c	84;"	d	file:
FRAG_HASH_SHIFT	datapath/linux/compat/stt.c	82;"	d	file:
FRAG_HASH_SHIFT	datapath/linux/stt.c	82;"	d	file:
FSTAB	utilities/bugtool/ovs-bugtool	/^FSTAB = '\/etc\/fstab'$/;"	v
FTPHandler	tests/test-l7.py	/^        from pyftpdlib.handlers import FTPHandler$/;"	i
FTPServer	tests/test-l7.py	/^        from pyftpdlib.servers import FTPServer$/;"	i
FUNC	lib/sha1.c	80;"	d	file:
Factory	python/ovstest/tcp.py	/^from twisted.internet.protocol import Factory, ClientFactory, Protocol$/;"	i
Failure	tests/MockXenAPI.py	/^class Failure(Exception):$/;"	c
FixSegmentHeader	datapath-windows/ovsext/BufferMgmt.c	/^FixSegmentHeader(PNET_BUFFER nb, UINT16 segmentSize, UINT32 seqNumber,$/;"	f	file:
FlowDB	utilities/ovs-dpctl-top	/^class FlowDB:$/;"	c
FlowEqual	datapath-windows/ovsext/Flow.c	/^FlowEqual(UINT64 *src, UINT64 *dst, UINT32 size)$/;"	f
FreeFlow	datapath-windows/ovsext/Flow.c	/^FreeFlow(OvsFlow *flow)$/;"	f
FreeUserDumpState	datapath-windows/ovsext/Datapath.c	/^FreeUserDumpState(POVS_OPEN_INSTANCE instance)$/;"	f
GCC_UNALIGNED_ACCESSORS	lib/unaligned.h	63;"	d
GENEVE	ovn/controller/ovn-controller.h	/^    GENEVE = 1 << 2,$/;"	e	enum:chassis_tunnel_type
GENEVE_BASE_HLEN	datapath/linux/compat/include/net/geneve.h	84;"	d
GENEVE_BASE_HLEN	lib/netdev-vport.c	65;"	d	file:
GENEVE_CRIT_OPT_TYPE	datapath/linux/compat/include/net/geneve.h	49;"	d
GENEVE_CRIT_OPT_TYPE	lib/geneve.h	25;"	d
GENEVE_DST_PORT	lib/netdev-vport.c	55;"	d	file:
GENEVE_H	lib/geneve.h	18;"	d
GENEVE_MAX_OPT_SIZE	lib/geneve.h	22;"	d
GENEVE_TOT_OPT_SIZE	lib/geneve.h	23;"	d
GENEVE_VER	datapath/linux/compat/include/net/geneve.h	83;"	d
GENL_HDRLEN	datapath-windows/ovsext/Netlink/NetlinkProto.h	115;"	d
GENL_HDRLEN	lib/netlink-protocol.h	93;"	d
GENL_ID_CTRL	lib/netlink-protocol.h	108;"	d
GENL_MAX_ID	lib/netlink-protocol.h	106;"	d
GENL_MIN_ID	lib/netlink-protocol.h	105;"	d
GENL_MSG_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} GENL_MSG_HDR, *PGENL_MSG_HDR;$/;"	t	typeref:struct:_GENL_MSG_HDR
GREP	Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GREP	datapath/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GREPROTO_CISCO	datapath/linux/compat/gre.c	49;"	d	file:
GREPROTO_CISCO	datapath/linux/gre.c	49;"	d	file:
GREPROTO_MAX	datapath/linux/compat/gre.c	50;"	d	file:
GREPROTO_MAX	datapath/linux/gre.c	50;"	d	file:
GRE_CSUM	lib/packets.h	936;"	d
GRE_FLAGS	lib/packets.h	942;"	d
GRE_HEADER_SECTION	datapath/linux/compat/include/net/gre.h	36;"	d
GRE_KEY	lib/packets.h	938;"	d
GRE_REC	lib/packets.h	941;"	d
GRE_ROUTING	lib/packets.h	937;"	d
GRE_SEQ	lib/packets.h	939;"	d
GRE_STRICT	lib/packets.h	940;"	d
GRE_VERSION	lib/packets.h	943;"	d
GROUP_CAST	ofproto/ofproto-dpif.h	184;"	d
GROUP_ID	datapath/compat.h	29;"	d
GROUP_ID	datapath/compat.h	31;"	d
GRUB_CONFIG	utilities/bugtool/ovs-bugtool	/^GRUB_CONFIG = '\/boot\/grub\/menu.lst'$/;"	v
GUARDED_LIST_H	lib/guarded-list.h	18;"	d
GUARDED_OVS_LIST_INITIALIZER	lib/guarded-list.h	31;"	d
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
Get	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def Get(action):$/;"	m	class:VSwitchConfig
GetFlags	datapath-windows/ovsext/DpInternal.h	/^enum GetFlags {$/;"	g
GetNumLogicalProcessors	include/windows/unistd.h	/^__inline int GetNumLogicalProcessors(void)$/;"	f
GetOvsVportPriv	datapath-windows/ovsext/Vport.h	/^GetOvsVportPriv(POVS_VPORT_ENTRY ovsVport)$/;"	f
GetPortFromPriv	datapath-windows/ovsext/Vport.h	/^GetPortFromPriv(POVS_VPORT_ENTRY vport)$/;"	f
GetSegmentHeaderInfo	datapath-windows/ovsext/BufferMgmt.c	/^GetSegmentHeaderInfo(PNET_BUFFER_LIST nbl,$/;"	f	file:
GetStartAddrNBL	datapath-windows/ovsext/Flow.c	/^GetStartAddrNBL(const NET_BUFFER_LIST *_pNB)$/;"	f	file:
GetUnalignedU32	datapath-windows/ovsext/Jhash.c	/^GetUnalignedU32(const UINT32 *p_)$/;"	f	file:
HANDLE	lib/util.h	/^typedef uint32_t HANDLE;$/;"	t
HASH_BUCKET	datapath-windows/ovsext/Flow.c	91;"	d	file:
HASH_H	lib/hash.h	17;"	d
HAVE_BACKTRACE	config.h	34;"	d
HAVE_BOOL_TYPE	datapath/linux/kcompat.h	41;"	d
HAVE_CAN_CHECKSUM_PROTOCOL	datapath/linux/kcompat.h	13;"	d
HAVE_CONSUME_SKB	datapath/linux/kcompat.h	31;"	d
HAVE_CSUM_REPLACE4	datapath/linux/kcompat.h	43;"	d
HAVE_CSUM_TYPES	datapath/linux/kcompat.h	42;"	d
HAVE_CSUM_UNFOLD	datapath/linux/kcompat.h	44;"	d
HAVE_DECL_STRERROR_R	config.h	38;"	d
HAVE_DECL_SYS_SIGLIST	config.h	42;"	d
HAVE_DEV_DISABLE_LRO	datapath/linux/kcompat.h	9;"	d
HAVE_DEV_GET_BY_INDEX_RCU	datapath/linux/kcompat.h	11;"	d
HAVE_DEV_GET_STATS	datapath/linux/kcompat.h	10;"	d
HAVE_DLFCN_H	config.h	45;"	d
HAVE_ERR_CAST	datapath/linux/kcompat.h	1;"	d
HAVE_ETH_HW_ADDR_RANDOM	datapath/linux/kcompat.h	3;"	d
HAVE_GCC4_ATOMICS	config.h	49;"	d
HAVE_GENLMSG_NEW_UNICAST	datapath/linux/kcompat.h	46;"	d
HAVE_GENL_MULTICAST_GROUP_WITH_ID	datapath/linux/kcompat.h	47;"	d
HAVE_GETLOADAVG	config.h	52;"	d
HAVE_GETMNTENT_R	config.h	55;"	d
HAVE_GLIBC_PTHREAD_SETNAME_NP	config.h	59;"	d
HAVE_GRE_CISCO_REGISTER	datapath/linux/kcompat.h	48;"	d
HAVE_ICMP6_HDR	datapath/linux/kcompat.h	29;"	d
HAVE_IF_PACKET	config.h	65;"	d
HAVE_INTTYPES_H	config.h	68;"	d
HAVE_IP6_FH_F_SKIP_RH	datapath/linux/kcompat.h	49;"	d
HAVE_IPV4_IS_MULTICAST	datapath/linux/kcompat.h	5;"	d
HAVE_IP_IS_FRAGMENT	datapath/linux/kcompat.h	8;"	d
HAVE_IP_SELECT_IDENT_USING_DST_ENTRY	datapath/linux/kcompat.h	7;"	d
HAVE_IS_ERR_OR_NULL	datapath/linux/kcompat.h	2;"	d
HAVE_KFREE_SKB_LIST	datapath/linux/kcompat.h	22;"	d
HAVE_L4_RXHASH	datapath/linux/kcompat.h	40;"	d
HAVE_LIBCAPNG	Makefile	/^HAVE_LIBCAPNG = $/;"	m
HAVE_LIBCAPNG	datapath/Makefile	/^HAVE_LIBCAPNG = $/;"	m
HAVE_LINUX_IF_ETHER_H	config.h	77;"	d
HAVE_LINUX_PERF_EVENT_H	config.h	80;"	d
HAVE_LINUX_TYPES_H	config.h	83;"	d
HAVE_LOCKDEP_RTNL_IS_HELD	datapath/linux/kcompat.h	20;"	d
HAVE_MEMORY_H	config.h	86;"	d
HAVE_MLOCKALL	config.h	89;"	d
HAVE_MNTENT_H	config.h	92;"	d
HAVE_NETDEV_FEATURES_T	datapath/linux/kcompat.h	14;"	d
HAVE_NETDEV_RX_HANDLER_REGISTER	datapath/linux/kcompat.h	15;"	d
HAVE_NETLINK	config.h	99;"	d
HAVE_NF_HOOKFN_ARG_OPS	datapath/linux/kcompat.h	17;"	d
HAVE_NLA_FIND_NESTED	datapath/linux/kcompat.h	54;"	d
HAVE_NLA_GET_BE16	datapath/linux/kcompat.h	50;"	d
HAVE_NLA_PUT_BE16	datapath/linux/kcompat.h	51;"	d
HAVE_NLA_PUT_BE32	datapath/linux/kcompat.h	52;"	d
HAVE_NLA_PUT_BE64	datapath/linux/kcompat.h	53;"	d
HAVE_OPENSSL	Makefile	/^HAVE_OPENSSL = yes$/;"	m
HAVE_OPENSSL	config.h	105;"	d
HAVE_OPENSSL	datapath/Makefile	/^HAVE_OPENSSL = yes$/;"	m
HAVE_OVS_DATAPATH	datapath/linux/compat/include/linux/netdevice.h	18;"	d
HAVE_PACKED_ENUM	include/openvswitch/compiler.h	172;"	d
HAVE_PARALLEL_OPS	datapath/linux/kcompat.h	45;"	d
HAVE_POSIX_MEMALIGN	config.h	108;"	d
HAVE_PRAGMA_MESSAGE	config.h	111;"	d
HAVE_PRANDOM_U32	datapath/linux/kcompat.h	18;"	d
HAVE_PROTO_PORTS_OFFSET	datapath/linux/kcompat.h	6;"	d
HAVE_PYTHON	Makefile	/^HAVE_PYTHON = yes$/;"	m
HAVE_PYTHON	datapath/Makefile	/^HAVE_PYTHON = yes$/;"	m
HAVE_RCU_READ_LOCK_HELD	datapath/linux/kcompat.h	19;"	d
HAVE_RXHASH	datapath/linux/kcompat.h	23;"	d
HAVE_RX_HANDLER_PSKB	datapath/linux/kcompat.h	16;"	d
HAVE_SCTP_COMPUTE_CKSUM	datapath/linux/kcompat.h	55;"	d
HAVE_SKBUFF_HEADER_HELPERS	datapath/linux/kcompat.h	28;"	d
HAVE_SKB_CHECKSUM_START_OFFSET	datapath/linux/kcompat.h	21;"	d
HAVE_SKB_CLEAR_HASH	datapath/linux/kcompat.h	38;"	d
HAVE_SKB_COPY_FROM_LINEAR_DATA_OFFSET	datapath/linux/kcompat.h	25;"	d
HAVE_SKB_COW_HEAD	datapath/linux/kcompat.h	27;"	d
HAVE_SKB_DST_ACCESSOR_FUNCS	datapath/linux/kcompat.h	24;"	d
HAVE_SKB_FRAG_PAGE	datapath/linux/kcompat.h	32;"	d
HAVE_SKB_HAS_FRAG_LIST	datapath/linux/kcompat.h	33;"	d
HAVE_SKB_ORPHAN_FRAGS	datapath/linux/kcompat.h	37;"	d
HAVE_SKB_RESET_MAC_LEN	datapath/linux/kcompat.h	35;"	d
HAVE_SKB_RESET_TAIL_POINTER	datapath/linux/kcompat.h	26;"	d
HAVE_SKB_UNCLONE	datapath/linux/kcompat.h	36;"	d
HAVE_SKB_WARN_LRO	datapath/linux/kcompat.h	30;"	d
HAVE_SKB_ZEROCOPY	datapath/linux/kcompat.h	39;"	d
HAVE_STATVFS	config.h	117;"	d
HAVE_STDINT_H	config.h	123;"	d
HAVE_STDIO_H	config.h	126;"	d
HAVE_STDLIB_H	config.h	129;"	d
HAVE_STRERROR_R	config.h	132;"	d
HAVE_STRINGS_H	config.h	135;"	d
HAVE_STRING_H	config.h	138;"	d
HAVE_STRNLEN	config.h	141;"	d
HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC	config.h	153;"	d
HAVE_SYS_STATVFS_H	config.h	156;"	d
HAVE_SYS_STAT_H	config.h	159;"	d
HAVE_SYS_TYPES_H	config.h	162;"	d
HAVE_UNISTD_H	config.h	169;"	d
HAVE_VLAN_SET_ENCAP_PROTO	datapath/linux/kcompat.h	4;"	d
HAVE___SKB_FILL_PAGE_DESC	datapath/linux/kcompat.h	34;"	d
HAVE___SKB_GSO_SEGMENT	datapath/linux/kcompat.h	12;"	d
HAVE___THREAD	config.h	176;"	d
HDR_OFS	tests/test-ofpbuf.c	25;"	d	file:
HDS_BUTTONS	datapath-windows/ovsext/resource.h	251;"	d
HDS_CHECKBOXES	datapath-windows/ovsext/resource.h	1218;"	d
HDS_DRAGDROP	datapath-windows/ovsext/resource.h	718;"	d
HDS_FILTERBAR	datapath-windows/ovsext/resource.h	1029;"	d
HDS_FLAT	datapath-windows/ovsext/resource.h	1089;"	d
HDS_FULLDRAG	datapath-windows/ovsext/resource.h	848;"	d
HDS_HIDDEN	datapath-windows/ovsext/resource.h	455;"	d
HDS_HORZ	datapath-windows/ovsext/resource.h	15;"	d
HDS_HOTTRACK	datapath-windows/ovsext/resource.h	364;"	d
HDS_NOSIZING	datapath-windows/ovsext/resource.h	1423;"	d
HDS_OVERFLOW	datapath-windows/ovsext/resource.h	1437;"	d
HEADER	tests/test-sflow.c	/^        uint32_t HEADER;$/;"	m	struct:sflow_xdr::__anon230	file:
HEADERS	Makefile	/^HEADERS = $(noinst_HEADERS) $(openflowinclude_HEADERS) \\$/;"	m
HEAP_FOR_EACH	lib/heap.h	69;"	d
HEAP_H	lib/heap.h	18;"	d
HELP_CONTEXTMENU	datapath-windows/ovsext/resource.h	493;"	d
HELP_FINDER	datapath-windows/ovsext/resource.h	505;"	d
HELP_SETPOPUP_POS	datapath-windows/ovsext/resource.h	526;"	d
HELP_TCARD	datapath-windows/ovsext/resource.h	1534;"	d
HELP_TCARD_DATA	datapath-windows/ovsext/resource.h	551;"	d
HELP_TCARD_OTHER_CALLER	datapath-windows/ovsext/resource.h	573;"	d
HELP_WM_HELP	datapath-windows/ovsext/resource.h	515;"	d
HFSC_N_QUEUES	lib/netdev-linux.c	4015;"	d	file:
HIDDEN	utilities/bugtool/ovs-bugtool	/^HIDDEN   = 8$/;"	v
HIDE_WINDOW	datapath-windows/ovsext/resource.h	6;"	d
HINDEX_FOR_EACH	lib/hindex.h	151;"	d
HINDEX_FOR_EACH_SAFE	lib/hindex.h	158;"	d
HINDEX_FOR_EACH_WITH_HASH	lib/hindex.h	130;"	d
HINDEX_H	lib/hindex.h	18;"	d
HINDEX_INITIALIZER	lib/hindex.h	97;"	d
HMAPX_FOR_EACH	lib/hmapx.h	63;"	d
HMAPX_FOR_EACH_SAFE	lib/hmapx.h	68;"	d
HMAPX_H	lib/hmapx.h	18;"	d
HMAPX_INITIALIZER	lib/hmapx.h	32;"	d
HMAP_CONST1	lib/hmap.h	73;"	d
HMAP_FOR_EACH	lib/hmap.h	159;"	d
HMAP_FOR_EACH_CONTINUE	lib/hmap.h	174;"	d
HMAP_FOR_EACH_IN_BUCKET	lib/hmap.h	142;"	d
HMAP_FOR_EACH_SAFE	lib/hmap.h	166;"	d
HMAP_FOR_EACH_WITH_HASH	lib/hmap.h	137;"	d
HMAP_H	lib/hmap.h	18;"	d
HMAP_INITIALIZER	lib/hmap.h	68;"	d
HMAP_NODE_INIT	lib/hmap.h	75;"	d
HMAP_NODE_NULL	lib/hmap.h	40;"	d
HMAP_NODE_NULL_INITIALIZER	lib/hmap.h	41;"	d
HOME	utilities/ovs-dev.py	/^HOME = ENV["HOME"]$/;"	v
HOSTS	utilities/bugtool/ovs-bugtool	/^HOSTS = '\/etc\/hosts'$/;"	v
HOSTS_ALLOW	utilities/bugtool/ovs-bugtool	/^HOSTS_ALLOW = '\/etc\/hosts.allow'$/;"	v
HOSTS_DENY	utilities/bugtool/ovs-bugtool	/^HOSTS_DENY = '\/etc\/hosts.deny'$/;"	v
HPL_VENDOR_ID	include/openflow/openflow-common.h	105;"	d
HR_AVG_LEN	lib/coverage.h	44;"	d
HSTAMP_FILES	Makefile	/^HSTAMP_FILES = $(openflowinclude_HEADERS:.h=.hstamp)$/;"	m
HSTAMP_FILES	include/openflow/automake.mk	/^HSTAMP_FILES = $(openflowinclude_HEADERS:.h=.hstamp)$/;"	m
HTBORDER	datapath-windows/ovsext/resource.h	579;"	d
HTBOTTOM	datapath-windows/ovsext/resource.h	538;"	d
HTBOTTOMLEFT	datapath-windows/ovsext/resource.h	546;"	d
HTBOTTOMRIGHT	datapath-windows/ovsext/resource.h	571;"	d
HTB_N_QUEUES	lib/netdev-linux.c	3527;"	d	file:
HTB_RATE2QUANTUM	lib/netdev-linux.c	3528;"	d	file:
HTCAPTION	datapath-windows/ovsext/resource.h	239;"	d
HTCLIENT	datapath-windows/ovsext/resource.h	58;"	d
HTCLOSE	datapath-windows/ovsext/resource.h	591;"	d
HTERROR	datapath-windows/ovsext/resource.h	1562;"	d
HTGROWBOX	datapath-windows/ovsext/resource.h	356;"	d
HTHELP	datapath-windows/ovsext/resource.h	599;"	d
HTHSCROLL	datapath-windows/ovsext/resource.h	419;"	d
HTLEFT	datapath-windows/ovsext/resource.h	490;"	d
HTMAXBUTTON	datapath-windows/ovsext/resource.h	478;"	d
HTMENU	datapath-windows/ovsext/resource.h	401;"	d
HTMINBUTTON	datapath-windows/ovsext/resource.h	448;"	d
HTNOWHERE	datapath-windows/ovsext/resource.h	9;"	d
HTOBJECT	datapath-windows/ovsext/resource.h	586;"	d
HTRIGHT	datapath-windows/ovsext/resource.h	502;"	d
HTSYSMENU	datapath-windows/ovsext/resource.h	326;"	d
HTTOP	datapath-windows/ovsext/resource.h	513;"	d
HTTOPLEFT	datapath-windows/ovsext/resource.h	524;"	d
HTTOPRIGHT	datapath-windows/ovsext/resource.h	532;"	d
HTTPServer	tests/test-l7.py	/^from BaseHTTPServer import HTTPServer$/;"	i
HTTRANSPARENT	datapath-windows/ovsext/resource.h	1565;"	d
HTVSCROLL	datapath-windows/ovsext/resource.h	434;"	d
HandleDpTransactionCommon	datapath-windows/ovsext/Datapath.c	/^HandleDpTransactionCommon(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
HandleFlowPut	datapath-windows/ovsext/Flow.c	/^HandleFlowPut(OvsFlowPut *put,$/;"	f	file:
HandleGetDpDump	datapath-windows/ovsext/Datapath.c	/^HandleGetDpDump(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
HandleGetDpTransaction	datapath-windows/ovsext/Datapath.c	/^HandleGetDpTransaction(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
HandleKey	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def HandleKey(self, inKey):$/;"	m	class:VSwitchControllerDialogue
HandleKeyGETCONTROLLER	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def HandleKeyGETCONTROLLER(self, inKey):$/;"	m	class:VSwitchControllerDialogue
HandleKeyINITIAL	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def HandleKeyINITIAL(self, inKey):$/;"	m	class:VSwitchControllerDialogue
HvConnectNic	datapath-windows/ovsext/Vport.c	/^HvConnectNic(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvCreateNic	datapath-windows/ovsext/Vport.c	/^HvCreateNic(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvCreatePort	datapath-windows/ovsext/Vport.c	/^HvCreatePort(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvDeleteNic	datapath-windows/ovsext/Vport.c	/^HvDeleteNic(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvDeletePort	datapath-windows/ovsext/Vport.c	/^HvDeletePort(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvDisconnectNic	datapath-windows/ovsext/Vport.c	/^HvDisconnectNic(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvTeardownPort	datapath-windows/ovsext/Vport.c	/^HvTeardownPort(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvUpdateNic	datapath-windows/ovsext/Vport.c	/^HvUpdateNic(POVS_SWITCH_CONTEXT switchContext,$/;"	f
HvUpdatePort	datapath-windows/ovsext/Vport.c	/^HvUpdatePort(POVS_SWITCH_CONTEXT switchContext,$/;"	f
IBR_FROM_LOCAL_ARP	ofproto/in-band.c	/^    IBR_FROM_LOCAL_ARP,           \/* (c) From local port, ARP. *\/$/;"	e	enum:__anon183	file:
IBR_FROM_LOCAL_DHCP	ofproto/in-band.c	/^    IBR_FROM_LOCAL_DHCP = 180000, \/* (a) From local port, DHCP. *\/$/;"	e	enum:__anon183	file:
IBR_FROM_NEXT_HOP_ARP	ofproto/in-band.c	/^    IBR_FROM_NEXT_HOP_ARP,        \/* (e) From remote MAC, ARP. *\/$/;"	e	enum:__anon183	file:
IBR_FROM_REMOTE_ARP	ofproto/in-band.c	/^    IBR_FROM_REMOTE_ARP,          \/* (g) From remote IP, ARP. *\/$/;"	e	enum:__anon183	file:
IBR_FROM_REMOTE_TCP	ofproto/in-band.c	/^    IBR_FROM_REMOTE_TCP           \/* (i) From remote IP, TCP port. *\/$/;"	e	enum:__anon183	file:
IBR_TO_LOCAL_ARP	ofproto/in-band.c	/^    IBR_TO_LOCAL_ARP,             \/* (b) To local port, ARP. *\/$/;"	e	enum:__anon183	file:
IBR_TO_NEXT_HOP_ARP	ofproto/in-band.c	/^    IBR_TO_NEXT_HOP_ARP,          \/* (d) To remote MAC, ARP. *\/$/;"	e	enum:__anon183	file:
IBR_TO_REMOTE_ARP	ofproto/in-band.c	/^    IBR_TO_REMOTE_ARP,            \/* (f) To remote IP, ARP. *\/$/;"	e	enum:__anon183	file:
IBR_TO_REMOTE_TCP	ofproto/in-band.c	/^    IBR_TO_REMOTE_TCP,            \/* (h) To remote IP, TCP port. *\/$/;"	e	enum:__anon183	file:
ICMP6_DST_UNREACH	include/windows/netinet/icmp6.h	89;"	d
ICMP6_DST_UNREACH_ADDR	include/windows/netinet/icmp6.h	141;"	d
ICMP6_DST_UNREACH_ADMIN	include/windows/netinet/icmp6.h	138;"	d
ICMP6_DST_UNREACH_BEYONDSCOPE	include/windows/netinet/icmp6.h	140;"	d
ICMP6_DST_UNREACH_NOPORT	include/windows/netinet/icmp6.h	142;"	d
ICMP6_DST_UNREACH_NOROUTE	include/windows/netinet/icmp6.h	137;"	d
ICMP6_DST_UNREACH_NOTNEIGHBOR	include/windows/netinet/icmp6.h	139;"	d
ICMP6_DST_UNREACH_POLICY	include/windows/netinet/icmp6.h	143;"	d
ICMP6_DST_UNREACH_REJROUTE	include/windows/netinet/icmp6.h	144;"	d
ICMP6_DST_UNREACH_SOURCERT	include/windows/netinet/icmp6.h	145;"	d
ICMP6_ECHO_REPLY	include/windows/netinet/icmp6.h	95;"	d
ICMP6_ECHO_REQUEST	include/windows/netinet/icmp6.h	94;"	d
ICMP6_ERRSTAT_DST_UNREACH_ADDR	include/windows/netinet/icmp6.h	541;"	d
ICMP6_ERRSTAT_DST_UNREACH_ADMIN	include/windows/netinet/icmp6.h	539;"	d
ICMP6_ERRSTAT_DST_UNREACH_BEYONDSCOPE	include/windows/netinet/icmp6.h	540;"	d
ICMP6_ERRSTAT_DST_UNREACH_NOPORT	include/windows/netinet/icmp6.h	542;"	d
ICMP6_ERRSTAT_DST_UNREACH_NOROUTE	include/windows/netinet/icmp6.h	538;"	d
ICMP6_ERRSTAT_PACKET_TOO_BIG	include/windows/netinet/icmp6.h	543;"	d
ICMP6_ERRSTAT_PARAMPROB_HEADER	include/windows/netinet/icmp6.h	546;"	d
ICMP6_ERRSTAT_PARAMPROB_NEXTHEADER	include/windows/netinet/icmp6.h	547;"	d
ICMP6_ERRSTAT_PARAMPROB_OPTION	include/windows/netinet/icmp6.h	548;"	d
ICMP6_ERRSTAT_REDIRECT	include/windows/netinet/icmp6.h	549;"	d
ICMP6_ERRSTAT_TIME_EXCEED_REASSEMBLY	include/windows/netinet/icmp6.h	545;"	d
ICMP6_ERRSTAT_TIME_EXCEED_TRANSIT	include/windows/netinet/icmp6.h	544;"	d
ICMP6_ERRSTAT_UNKNOWN	include/windows/netinet/icmp6.h	550;"	d
ICMP6_FILTER_SETBLOCK	include/windows/netinet/icmp6.h	492;"	d
ICMP6_FILTER_SETBLOCKALL	include/windows/netinet/icmp6.h	488;"	d
ICMP6_FILTER_SETPASS	include/windows/netinet/icmp6.h	490;"	d
ICMP6_FILTER_SETPASSALL	include/windows/netinet/icmp6.h	486;"	d
ICMP6_FILTER_WILLBLOCK	include/windows/netinet/icmp6.h	496;"	d
ICMP6_FILTER_WILLPASS	include/windows/netinet/icmp6.h	494;"	d
ICMP6_FQDN_QUERY	include/windows/netinet/icmp6.h	121;"	d
ICMP6_FQDN_REPLY	include/windows/netinet/icmp6.h	122;"	d
ICMP6_HEADER_LEN	lib/packets.h	789;"	d
ICMP6_INFOMSG_MASK	include/windows/netinet/icmp6.h	154;"	d
ICMP6_MAXTYPE	include/windows/netinet/icmp6.h	135;"	d
ICMP6_MEMBERSHIP_QUERY	include/windows/netinet/icmp6.h	102;"	d
ICMP6_MEMBERSHIP_REDUCTION	include/windows/netinet/icmp6.h	104;"	d
ICMP6_MEMBERSHIP_REPORT	include/windows/netinet/icmp6.h	103;"	d
ICMP6_NI_QUERY	include/windows/netinet/icmp6.h	123;"	d
ICMP6_NI_REFUSED	include/windows/netinet/icmp6.h	161;"	d
ICMP6_NI_REPLY	include/windows/netinet/icmp6.h	124;"	d
ICMP6_NI_SUBJ_FQDN	include/windows/netinet/icmp6.h	157;"	d
ICMP6_NI_SUBJ_IPV4	include/windows/netinet/icmp6.h	158;"	d
ICMP6_NI_SUBJ_IPV6	include/windows/netinet/icmp6.h	156;"	d
ICMP6_NI_SUCCESS	include/windows/netinet/icmp6.h	160;"	d
ICMP6_NI_UNKNOWN	include/windows/netinet/icmp6.h	162;"	d
ICMP6_NSTATS	include/windows/netinet/icmp6.h	536;"	d
ICMP6_PACKET_TOO_BIG	include/windows/netinet/icmp6.h	90;"	d
ICMP6_PARAMPROB_HEADER	include/windows/netinet/icmp6.h	150;"	d
ICMP6_PARAMPROB_NEXTHEADER	include/windows/netinet/icmp6.h	151;"	d
ICMP6_PARAMPROB_OPTION	include/windows/netinet/icmp6.h	152;"	d
ICMP6_PARAM_PROB	include/windows/netinet/icmp6.h	92;"	d
ICMP6_ROUTER_RENUMBERING	include/windows/netinet/icmp6.h	117;"	d
ICMP6_ROUTER_RENUMBERING_COMMAND	include/windows/netinet/icmp6.h	164;"	d
ICMP6_ROUTER_RENUMBERING_RESULT	include/windows/netinet/icmp6.h	165;"	d
ICMP6_ROUTER_RENUMBERING_SEQNUM_RESET	include/windows/netinet/icmp6.h	166;"	d
ICMP6_RR_FLAGS_FORCEAPPLY	include/windows/netinet/icmp6.h	427;"	d
ICMP6_RR_FLAGS_PREVDONE	include/windows/netinet/icmp6.h	429;"	d
ICMP6_RR_FLAGS_REQRESULT	include/windows/netinet/icmp6.h	426;"	d
ICMP6_RR_FLAGS_SPECSITE	include/windows/netinet/icmp6.h	428;"	d
ICMP6_RR_FLAGS_TEST	include/windows/netinet/icmp6.h	425;"	d
ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME	include/windows/netinet/icmp6.h	466;"	d
ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME	include/windows/netinet/icmp6.h	465;"	d
ICMP6_RR_PCOUSE_RAFLAGS_AUTO	include/windows/netinet/icmp6.h	463;"	d
ICMP6_RR_PCOUSE_RAFLAGS_ONLINK	include/windows/netinet/icmp6.h	462;"	d
ICMP6_RR_RESULT_FLAGS_FORBIDDEN	include/windows/netinet/icmp6.h	476;"	d
ICMP6_RR_RESULT_FLAGS_OOB	include/windows/netinet/icmp6.h	475;"	d
ICMP6_STAT_BADCODE	include/windows/netinet/icmp6.h	513;"	d
ICMP6_STAT_BADLEN	include/windows/netinet/icmp6.h	516;"	d
ICMP6_STAT_BADNA	include/windows/netinet/icmp6.h	530;"	d
ICMP6_STAT_BADNS	include/windows/netinet/icmp6.h	529;"	d
ICMP6_STAT_BADRA	include/windows/netinet/icmp6.h	532;"	d
ICMP6_STAT_BADREDIRECT	include/windows/netinet/icmp6.h	533;"	d
ICMP6_STAT_BADRS	include/windows/netinet/icmp6.h	531;"	d
ICMP6_STAT_CANTERROR	include/windows/netinet/icmp6.h	509;"	d
ICMP6_STAT_CHECKSUM	include/windows/netinet/icmp6.h	515;"	d
ICMP6_STAT_DROPPED_RAROUTE	include/windows/netinet/icmp6.h	534;"	d
ICMP6_STAT_ERROR	include/windows/netinet/icmp6.h	508;"	d
ICMP6_STAT_INHIST	include/windows/netinet/icmp6.h	522;"	d
ICMP6_STAT_ND_BADOPT	include/windows/netinet/icmp6.h	528;"	d
ICMP6_STAT_ND_TOOMANYOPT	include/windows/netinet/icmp6.h	524;"	d
ICMP6_STAT_OUTERRHIST	include/windows/netinet/icmp6.h	525;"	d
ICMP6_STAT_OUTHIST	include/windows/netinet/icmp6.h	511;"	d
ICMP6_STAT_PMTUCHG	include/windows/netinet/icmp6.h	527;"	d
ICMP6_STAT_REFLECT	include/windows/netinet/icmp6.h	521;"	d
ICMP6_STAT_TOOFREQ	include/windows/netinet/icmp6.h	510;"	d
ICMP6_STAT_TOOSHORT	include/windows/netinet/icmp6.h	514;"	d
ICMP6_TIME_EXCEEDED	include/windows/netinet/icmp6.h	91;"	d
ICMP6_TIME_EXCEED_REASSEMBLY	include/windows/netinet/icmp6.h	148;"	d
ICMP6_TIME_EXCEED_TRANSIT	include/windows/netinet/icmp6.h	147;"	d
ICMP6_WRUREPLY	include/windows/netinet/icmp6.h	120;"	d
ICMP6_WRUREQUEST	include/windows/netinet/icmp6.h	119;"	d
ICMPEcho	datapath-windows/ovsext/NetProto.h	/^typedef struct ICMPEcho {$/;"	s
ICMPEcho	datapath-windows/ovsext/NetProto.h	/^} ICMPEcho;$/;"	t	typeref:struct:ICMPEcho
ICMPHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct ICMPHdr {$/;"	s
ICMPHdr	datapath-windows/ovsext/NetProto.h	/^} ICMPHdr;$/;"	t	typeref:struct:ICMPHdr
ICMPV6CTL_ERRPPSLIMIT	include/windows/netinet/icmp6.h	568;"	d
ICMPV6CTL_MAXID	include/windows/netinet/icmp6.h	576;"	d
ICMPV6CTL_MTUDISC_HIWAT	include/windows/netinet/icmp6.h	570;"	d
ICMPV6CTL_MTUDISC_LOWAT	include/windows/netinet/icmp6.h	571;"	d
ICMPV6CTL_NAMES	include/windows/netinet/icmp6.h	578;"	d
ICMPV6CTL_ND6_DEBUG	include/windows/netinet/icmp6.h	572;"	d
ICMPV6CTL_ND6_DELAY	include/windows/netinet/icmp6.h	562;"	d
ICMPV6CTL_ND6_DRLIST	include/windows/netinet/icmp6.h	573;"	d
ICMPV6CTL_ND6_MAXNUDHINT	include/windows/netinet/icmp6.h	569;"	d
ICMPV6CTL_ND6_MAXQLEN	include/windows/netinet/icmp6.h	575;"	d
ICMPV6CTL_ND6_MMAXTRIES	include/windows/netinet/icmp6.h	564;"	d
ICMPV6CTL_ND6_PRLIST	include/windows/netinet/icmp6.h	574;"	d
ICMPV6CTL_ND6_PRUNE	include/windows/netinet/icmp6.h	561;"	d
ICMPV6CTL_ND6_UMAXTRIES	include/windows/netinet/icmp6.h	563;"	d
ICMPV6CTL_ND6_USELOOPBACK	include/windows/netinet/icmp6.h	565;"	d
ICMPV6CTL_NODEINFO	include/windows/netinet/icmp6.h	567;"	d
ICMPV6CTL_REDIRACCEPT	include/windows/netinet/icmp6.h	556;"	d
ICMPV6CTL_REDIRTIMEOUT	include/windows/netinet/icmp6.h	557;"	d
ICMPV6CTL_STATS	include/windows/netinet/icmp6.h	555;"	d
ICMPV6_PLD_MAXLEN	include/windows/netinet/icmp6.h	66;"	d
ICMP_CSUM_OFFSET	datapath-windows/ovsext/NetProto.h	41;"	d
ICMP_DEST_UNREACH	datapath-windows/ovsext/NetProto.h	123;"	d
ICMP_ECHO	datapath-windows/ovsext/NetProto.h	121;"	d
ICMP_ECHOREPLY	datapath-windows/ovsext/NetProto.h	122;"	d
ICMP_HEADER_LEN	lib/packets.h	612;"	d
ICON_BIG	datapath-windows/ovsext/resource.h	61;"	d
ICON_SMALL	datapath-windows/ovsext/resource.h	11;"	d
ICON_SMALL2	datapath-windows/ovsext/resource.h	242;"	d
IDABORT	datapath-windows/ovsext/resource.h	330;"	d
IDCANCEL	datapath-windows/ovsext/resource.h	248;"	d
IDCLOSE	datapath-windows/ovsext/resource.h	453;"	d
IDCONTINUE	datapath-windows/ovsext/resource.h	504;"	d
IDC_MANAGE_LINK	datapath-windows/ovsext/resource.h	1419;"	d
IDENTICAL_INTERPRETATION	lib/getopt_long.c	326;"	d	file:
IDENTICAL_INTERPRETATION	lib/getopt_long.c	458;"	d	file:
IDHELP	datapath-windows/ovsext/resource.h	480;"	d
IDH_CANCEL	datapath-windows/ovsext/resource.h	1463;"	d
IDH_GENERIC_HELP_BUTTON	datapath-windows/ovsext/resource.h	1461;"	d
IDH_HELP	datapath-windows/ovsext/resource.h	1464;"	d
IDH_MISSING_CONTEXT	datapath-windows/ovsext/resource.h	1460;"	d
IDH_NO_HELP	datapath-windows/ovsext/resource.h	1459;"	d
IDH_OK	datapath-windows/ovsext/resource.h	1462;"	d
IDIGNORE	datapath-windows/ovsext/resource.h	403;"	d
IDI_APPLICATION	datapath-windows/ovsext/resource.h	1471;"	d
IDI_ASTERISK	datapath-windows/ovsext/resource.h	1483;"	d
IDI_EXCLAMATION	datapath-windows/ovsext/resource.h	1480;"	d
IDI_HAND	datapath-windows/ovsext/resource.h	1474;"	d
IDI_QUESTION	datapath-windows/ovsext/resource.h	1477;"	d
IDI_SHIELD	datapath-windows/ovsext/resource.h	1487;"	d
IDI_WINLOGO	datapath-windows/ovsext/resource.h	1485;"	d
IDLE_TIMEOUT	ofproto/ofproto-dpif-ipfix.c	/^    IDLE_TIMEOUT = 0x01,$/;"	e	enum:ipfix_flow_end_reason	file:
IDLTEST_IDL_FILES	Makefile	/^IDLTEST_IDL_FILES = tests\/idltest.ovsschema tests\/idltest.ann$/;"	m
IDLTEST_IDL_FILES	tests/automake.mk	/^IDLTEST_IDL_FILES = tests\/idltest.ovsschema tests\/idltest.ann$/;"	m
IDLTEST_IDL_HEADER	tests/idltest.h	4;"	d
IDLTEST_LINK1_COL_I	tests/idltest.h	/^    IDLTEST_LINK1_COL_I,$/;"	e	enum:__anon231
IDLTEST_LINK1_COL_K	tests/idltest.h	/^    IDLTEST_LINK1_COL_K,$/;"	e	enum:__anon231
IDLTEST_LINK1_COL_KA	tests/idltest.h	/^    IDLTEST_LINK1_COL_KA,$/;"	e	enum:__anon231
IDLTEST_LINK1_COL_L2	tests/idltest.h	/^    IDLTEST_LINK1_COL_L2,$/;"	e	enum:__anon231
IDLTEST_LINK1_FOR_EACH	tests/idltest.h	50;"	d
IDLTEST_LINK1_FOR_EACH_SAFE	tests/idltest.h	54;"	d
IDLTEST_LINK1_N_COLUMNS	tests/idltest.h	/^    IDLTEST_LINK1_N_COLUMNS$/;"	e	enum:__anon231
IDLTEST_LINK2_COL_I	tests/idltest.h	/^    IDLTEST_LINK2_COL_I,$/;"	e	enum:__anon232
IDLTEST_LINK2_COL_L1	tests/idltest.h	/^    IDLTEST_LINK2_COL_L1,$/;"	e	enum:__anon232
IDLTEST_LINK2_FOR_EACH	tests/idltest.h	104;"	d
IDLTEST_LINK2_FOR_EACH_SAFE	tests/idltest.h	108;"	d
IDLTEST_LINK2_N_COLUMNS	tests/idltest.h	/^    IDLTEST_LINK2_N_COLUMNS$/;"	e	enum:__anon232
IDLTEST_N_TABLES	tests/idltest.h	/^    IDLTEST_N_TABLES$/;"	e	enum:__anon234
IDLTEST_SIMPLE_COL_B	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_B,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_BA	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_BA,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_I	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_I,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_IA	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_IA,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_R	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_R,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_RA	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_RA,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_S	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_S,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_SA	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_SA,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_U	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_U,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_COL_UA	tests/idltest.h	/^    IDLTEST_SIMPLE_COL_UA,$/;"	e	enum:__anon233
IDLTEST_SIMPLE_FOR_EACH	tests/idltest.h	197;"	d
IDLTEST_SIMPLE_FOR_EACH_SAFE	tests/idltest.h	201;"	d
IDLTEST_SIMPLE_N_COLUMNS	tests/idltest.h	/^    IDLTEST_SIMPLE_N_COLUMNS$/;"	e	enum:__anon233
IDLTEST_TABLE_LINK1	tests/idltest.h	/^    IDLTEST_TABLE_LINK1,$/;"	e	enum:__anon234
IDLTEST_TABLE_LINK2	tests/idltest.h	/^    IDLTEST_TABLE_LINK2,$/;"	e	enum:__anon234
IDLTEST_TABLE_SIMPLE	tests/idltest.h	/^    IDLTEST_TABLE_SIMPLE,$/;"	e	enum:__anon234
IDL_S_MONITORING	lib/ovsdb-idl.c	/^    IDL_S_MONITORING$/;"	e	enum:ovsdb_idl_state	file:
IDL_S_MONITOR_REQUESTED	lib/ovsdb-idl.c	/^    IDL_S_MONITOR_REQUESTED,$/;"	e	enum:ovsdb_idl_state	file:
IDL_S_SCHEMA_REQUESTED	lib/ovsdb-idl.c	/^    IDL_S_SCHEMA_REQUESTED,$/;"	e	enum:ovsdb_idl_state	file:
IDNO	datapath-windows/ovsext/resource.h	436;"	d
IDOK	datapath-windows/ovsext/resource.h	68;"	d
IDRETRY	datapath-windows/ovsext/resource.h	361;"	d
IDTIMEOUT	datapath-windows/ovsext/resource.h	1468;"	d
IDTRYAGAIN	datapath-windows/ovsext/resource.h	492;"	d
IDYES	datapath-windows/ovsext/resource.h	421;"	d
ID_POOL_H	lib/id-pool.h	19;"	d
IFACE_STAT	vswitchd/bridge.c	2352;"	d	file:
IFACE_STAT	vswitchd/bridge.c	2354;"	d	file:
IFACE_STAT	vswitchd/bridge.c	2371;"	d	file:
IFACE_STAT	vswitchd/bridge.c	2378;"	d	file:
IFACE_STATS	vswitchd/bridge.c	2338;"	d	file:
IFACE_STATS	vswitchd/bridge.c	2382;"	d	file:
IFCFG_RE	utilities/bugtool/ovs-bugtool	/^IFCFG_RE = re.compile(r'^.*\/ifcfg-.*')$/;"	v
IFCONFIG	utilities/bugtool/ovs-bugtool	/^IFCONFIG = 'ifconfig'$/;"	v
IFCOUNTERS	tests/test-sflow.c	/^        uint32_t IFCOUNTERS;$/;"	m	struct:sflow_xdr::__anon230	file:
IFF_LIVE_ADDR_CHANGE	datapath/linux/compat/include/linux/netdevice.h	22;"	d
IFF_OVS_DATAPATH	datapath/linux/compat/include/linux/netdevice.h	16;"	d
IFF_TX_SKB_SHARING	datapath/linux/compat/include/linux/netdevice.h	12;"	d
IFLA_ADDRESS	include/windows/net/if.h	/^    IFLA_ADDRESS,$/;"	e	enum:__anon76
IFLA_AF_SPEC	include/windows/net/if.h	/^    IFLA_AF_SPEC,$/;"	e	enum:__anon76
IFLA_BROADCAST	include/windows/net/if.h	/^    IFLA_BROADCAST,$/;"	e	enum:__anon76
IFLA_CARRIER	include/windows/net/if.h	/^    IFLA_CARRIER,$/;"	e	enum:__anon76
IFLA_COST	include/windows/net/if.h	/^    IFLA_COST,$/;"	e	enum:__anon76
IFLA_COST	include/windows/net/if.h	34;"	d
IFLA_EXT_MASK	include/windows/net/if.h	/^    IFLA_EXT_MASK,$/;"	e	enum:__anon76
IFLA_GROUP	include/windows/net/if.h	/^    IFLA_GROUP,$/;"	e	enum:__anon76
IFLA_IFALIAS	include/windows/net/if.h	/^    IFLA_IFALIAS,$/;"	e	enum:__anon76
IFLA_IFNAME	include/windows/net/if.h	/^    IFLA_IFNAME,$/;"	e	enum:__anon76
IFLA_LINK	include/windows/net/if.h	/^    IFLA_LINK,$/;"	e	enum:__anon76
IFLA_LINKINFO	include/windows/net/if.h	/^    IFLA_LINKINFO,$/;"	e	enum:__anon76
IFLA_LINKINFO	include/windows/net/if.h	52;"	d
IFLA_LINKMODE	include/windows/net/if.h	/^    IFLA_LINKMODE,$/;"	e	enum:__anon76
IFLA_MAP	include/windows/net/if.h	/^    IFLA_MAP,$/;"	e	enum:__anon76
IFLA_MAP	include/windows/net/if.h	46;"	d
IFLA_MASTER	include/windows/net/if.h	/^    IFLA_MASTER,$/;"	e	enum:__anon76
IFLA_MASTER	include/windows/net/if.h	38;"	d
IFLA_MAX	include/windows/net/if.h	72;"	d
IFLA_MTU	include/windows/net/if.h	/^    IFLA_MTU,$/;"	e	enum:__anon76
IFLA_NET_NS_FD	include/windows/net/if.h	/^    IFLA_NET_NS_FD,$/;"	e	enum:__anon76
IFLA_NET_NS_PID	include/windows/net/if.h	/^    IFLA_NET_NS_PID,$/;"	e	enum:__anon76
IFLA_NUM_RX_QUEUES	include/windows/net/if.h	/^    IFLA_NUM_RX_QUEUES,$/;"	e	enum:__anon76
IFLA_NUM_TX_QUEUES	include/windows/net/if.h	/^    IFLA_NUM_TX_QUEUES,$/;"	e	enum:__anon76
IFLA_NUM_VF	include/windows/net/if.h	/^    IFLA_NUM_VF,$/;"	e	enum:__anon76
IFLA_OPERSTATE	include/windows/net/if.h	/^    IFLA_OPERSTATE,$/;"	e	enum:__anon76
IFLA_PHYS_PORT_ID	include/windows/net/if.h	/^    IFLA_PHYS_PORT_ID,$/;"	e	enum:__anon76
IFLA_PORT_SELF	include/windows/net/if.h	/^    IFLA_PORT_SELF,$/;"	e	enum:__anon76
IFLA_PRIORITY	include/windows/net/if.h	/^    IFLA_PRIORITY,$/;"	e	enum:__anon76
IFLA_PRIORITY	include/windows/net/if.h	36;"	d
IFLA_PROMISCUITY	include/windows/net/if.h	/^    IFLA_PROMISCUITY,$/;"	e	enum:__anon76
IFLA_PROMISCUITY	include/windows/net/if.h	65;"	d
IFLA_PROTINFO	include/windows/net/if.h	/^    IFLA_PROTINFO,$/;"	e	enum:__anon76
IFLA_PROTINFO	include/windows/net/if.h	42;"	d
IFLA_QDISC	include/windows/net/if.h	/^    IFLA_QDISC,$/;"	e	enum:__anon76
IFLA_STATS	include/windows/net/if.h	/^    IFLA_STATS,$/;"	e	enum:__anon76
IFLA_STATS64	include/windows/net/if.h	/^    IFLA_STATS64,$/;"	e	enum:__anon76
IFLA_STATS64	lib/netdev-linux.c	150;"	d	file:
IFLA_TXQLEN	include/windows/net/if.h	/^    IFLA_TXQLEN,$/;"	e	enum:__anon76
IFLA_TXQLEN	include/windows/net/if.h	44;"	d
IFLA_UNSPEC	include/windows/net/if.h	/^    IFLA_UNSPEC,$/;"	e	enum:__anon76
IFLA_VFINFO_LIST	include/windows/net/if.h	/^    IFLA_VFINFO_LIST,$/;"	e	enum:__anon76
IFLA_VF_PORTS	include/windows/net/if.h	/^    IFLA_VF_PORTS,$/;"	e	enum:__anon76
IFLA_WEIGHT	include/windows/net/if.h	/^    IFLA_WEIGHT,$/;"	e	enum:__anon76
IFLA_WEIGHT	include/windows/net/if.h	48;"	d
IFLA_WIRELESS	include/windows/net/if.h	/^    IFLA_WIRELESS,$/;"	e	enum:__anon76
IFLA_WIRELESS	include/windows/net/if.h	40;"	d
IFNAMSIZ	datapath-windows/ovsext/DpInternal.h	21;"	d
IFNAMSIZ	include/windows/net/if.h	22;"	d
IF_NOTIFIER_H	lib/if-notifier.h	18;"	d
IGMPHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct IGMPHdr {$/;"	s
IGMPHdr	datapath-windows/ovsext/NetProto.h	/^} IGMPHdr;$/;"	t	typeref:struct:IGMPHdr
IGMPV2_HOST_MEMBERSHIP_REPORT	lib/packets.h	661;"	d
IGMPV3Trailer	datapath-windows/ovsext/NetProto.h	/^typedef struct IGMPV3Trailer {$/;"	s
IGMPV3Trailer	datapath-windows/ovsext/NetProto.h	/^} IGMPV3Trailer;$/;"	t	typeref:struct:IGMPV3Trailer
IGMPV3_ALLOW_NEW_SOURCES	lib/packets.h	672;"	d
IGMPV3_BLOCK_OLD_SOURCES	lib/packets.h	673;"	d
IGMPV3_CHANGE_TO_EXCLUDE_MODE	lib/packets.h	671;"	d
IGMPV3_CHANGE_TO_INCLUDE_MODE	lib/packets.h	670;"	d
IGMPV3_HEADER_LEN	lib/packets.h	640;"	d
IGMPV3_HOST_MEMBERSHIP_REPORT	lib/packets.h	663;"	d
IGMPV3_MODE_IS_EXCLUDE	lib/packets.h	669;"	d
IGMPV3_MODE_IS_INCLUDE	lib/packets.h	668;"	d
IGMPV3_RECORD_LEN	lib/packets.h	650;"	d
IGMP_HEADER_LEN	lib/packets.h	631;"	d
IGMP_HOST_LEAVE_MESSAGE	lib/packets.h	662;"	d
IGMP_HOST_MEMBERSHIP_QUERY	lib/packets.h	659;"	d
IGMP_HOST_MEMBERSHIP_REPORT	lib/packets.h	660;"	d
IGMP_QUERY	datapath-windows/ovsext/NetProto.h	130;"	d
IGMP_UNKNOWN	datapath-windows/ovsext/NetProto.h	126;"	d
IGMP_V1REPORT	datapath-windows/ovsext/NetProto.h	131;"	d
IGMP_V2LEAVE	datapath-windows/ovsext/NetProto.h	134;"	d
IGMP_V2REPORT	datapath-windows/ovsext/NetProto.h	132;"	d
IGMP_V3REPORT	datapath-windows/ovsext/NetProto.h	133;"	d
IGNORE_FIRST	lib/getopt_long.c	46;"	d	file:
IN6ADDR_ALL_HOSTS_INIT	lib/packets.h	869;"	d
IN6ADDR_EXACT_INIT	lib/packets.h	865;"	d
IN6_IS_ADDR_V4MAPPED	include/sparse/netinet/in.h	105;"	d
INADDR_ANY	include/sparse/netinet/in.h	100;"	d
INADDR_BROADCAST	include/sparse/netinet/in.h	101;"	d
INADDR_LOOPBACK	include/sparse/netinet/in.h	102;"	d
INADDR_NONE	include/sparse/netinet/in.h	103;"	d
INCLUDE_NEXT	Makefile	/^INCLUDE_NEXT = include_next$/;"	m
INCLUDE_NEXT	datapath/Makefile	/^INCLUDE_NEXT = include_next$/;"	m
INCLUDE_NEXT_AS_FIRST_DIRECTIVE	Makefile	/^INCLUDE_NEXT_AS_FIRST_DIRECTIVE = include_next$/;"	m
INCLUDE_NEXT_AS_FIRST_DIRECTIVE	datapath/Makefile	/^INCLUDE_NEXT_AS_FIRST_DIRECTIVE = include_next$/;"	m
INCOMPLETE	python/ovs/db/idl.py	/^    INCOMPLETE = "incomplete"    # Commit in progress, please wait.$/;"	v	class:Transaction
INET6_ADDRSTRLEN	include/sparse/netinet/in.h	119;"	d
INET6_ADDRSTRLEN	include/windows/windefs.h	30;"	d
INET6_ADDRSTRLEN	include/windows/windefs.h	31;"	d
INET_CSUM_LENGTH	datapath-windows/ovsext/NetProto.h	42;"	d
INFERIOR	lib/rstp-state-machines.c	/^    INFERIOR = 0,$/;"	e	enum:vector_comparison	file:
INFERIOR_DESIGNATED_INFO	lib/rstp-common.h	/^    INFERIOR_DESIGNATED_INFO,$/;"	e	enum:rstp_rcvd_info
INFERIOR_ROOT_ALTERNATE_INFO	lib/rstp-common.h	/^    INFERIOR_ROOT_ALTERNATE_INFO,$/;"	e	enum:rstp_rcvd_info
INFINITE	datapath-windows/ovsext/TunnelFilter.c	49;"	d	file:
INFO_IS_AGED	lib/rstp-common.h	/^    INFO_IS_AGED,$/;"	e	enum:rstp_info_is
INFO_IS_DISABLED	lib/rstp-common.h	/^    INFO_IS_DISABLED,$/;"	e	enum:rstp_info_is
INFO_IS_MINE	lib/rstp-common.h	/^    INFO_IS_MINE$/;"	e	enum:rstp_info_is
INFO_IS_RECEIVED	lib/rstp-common.h	/^    INFO_IS_RECEIVED,$/;"	e	enum:rstp_info_is
INGRESS_FLOW	ofproto/ofproto-dpif-ipfix.c	/^    INGRESS_FLOW = 0x00,$/;"	e	enum:ipfix_flow_direction	file:
INIT1	lib/util.c	1086;"	d	file:
INIT16	lib/util.c	1098;"	d	file:
INIT2	lib/util.c	1095;"	d	file:
INIT32	lib/util.c	1099;"	d	file:
INIT4	lib/util.c	1096;"	d	file:
INIT64	lib/util.c	1100;"	d	file:
INIT8	lib/util.c	1097;"	d	file:
INITGUID	datapath-windows/ovsext/TunnelFilter.c	45;"	d	file:
INIT_CONTAINER	lib/util.h	233;"	d
INORDER	lib/getopt_long.c	58;"	d	file:
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	datapath/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	datapath/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA_LOCAL	Makefile	/^INSTALL_DATA_LOCAL = lib-install-data-local $(am__append_37)$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	datapath/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	datapath/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	datapath/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	datapath/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTRUCTION_FOR_EACH	lib/ofp-actions.c	5758;"	d	file:
INT_STRLEN	lib/type-props.h	53;"	d
INVENTORY_XML_ELEMENT	utilities/bugtool/ovs-bugtool	/^INVENTORY_XML_ELEMENT = 'inventory-entry'$/;"	v
INVENTORY_XML_ROOT	utilities/bugtool/ovs-bugtool	/^INVENTORY_XML_ROOT = "system-status-inventory"$/;"	v
INVENTORY_XML_SUMMARY	utilities/bugtool/ovs-bugtool	/^INVENTORY_XML_SUMMARY = 'system-summary'$/;"	v
IN_BAND_H	ofproto/in-band.h	18;"	d
IN_ORDER	lib/getopt_long.c	52;"	d	file:
IN_OVS_ATOMIC_H	lib/ovs-atomic.h	320;"	d
IN_OVS_ATOMIC_H	lib/ovs-atomic.h	344;"	d
IP4FragUnitLength	datapath-windows/ovsext/NetProto.h	/^typedef UINT64 IP4FragUnitLength;$/;"	t
IP4UnitLength	datapath-windows/ovsext/NetProto.h	/^typedef UINT32 IP4UnitLength;$/;"	t
IP4_BYTES_TO_UNITS	datapath-windows/ovsext/NetProto.h	45;"	d
IP4_FRAG_UNIT_LENGTH	datapath-windows/ovsext/NetProto.h	60;"	d
IP4_HDR_LEN	datapath-windows/ovsext/NetProto.h	55;"	d
IP4_HDR_MIN_LENGTH_IN_UNITS	datapath-windows/ovsext/NetProto.h	51;"	d
IP4_IHL_NO_OPTIONS	datapath-windows/ovsext/NetProto.h	54;"	d
IP4_LENGTH_UNIT	datapath-windows/ovsext/NetProto.h	50;"	d
IP4_UNITS_TO_BYTES	datapath-windows/ovsext/NetProto.h	44;"	d
IP6F_MORE_FRAG	include/windows/netinet/ip6.h	222;"	d
IP6F_OFF_HOST_ORDER_MASK	datapath-windows/ovsext/NetProto.h	108;"	d
IP6F_OFF_MASK	include/sparse/netinet/ip6.h	66;"	d
IP6F_OFF_MASK	include/windows/netinet/ip6.h	220;"	d
IP6F_RESERVED_MASK	include/windows/netinet/ip6.h	221;"	d
IP6OPT_JUMBO	include/windows/netinet/ip6.h	132;"	d
IP6OPT_JUMBO_LEN	include/windows/netinet/ip6.h	164;"	d
IP6OPT_MINLEN	include/windows/netinet/ip6.h	142;"	d
IP6OPT_MUTABLE	include/windows/netinet/ip6.h	150;"	d
IP6OPT_NSAP_ADDR	include/windows/netinet/ip6.h	133;"	d
IP6OPT_PAD1	include/windows/netinet/ip6.h	130;"	d
IP6OPT_PADN	include/windows/netinet/ip6.h	131;"	d
IP6OPT_ROUTER_ALERT	include/windows/netinet/ip6.h	136;"	d
IP6OPT_RTALERT	include/windows/netinet/ip6.h	135;"	d
IP6OPT_RTALERT_ACTNET	include/windows/netinet/ip6.h	141;"	d
IP6OPT_RTALERT_LEN	include/windows/netinet/ip6.h	138;"	d
IP6OPT_RTALERT_MLD	include/windows/netinet/ip6.h	139;"	d
IP6OPT_RTALERT_RSVP	include/windows/netinet/ip6.h	140;"	d
IP6OPT_TUNNEL_LIMIT	include/windows/netinet/ip6.h	134;"	d
IP6OPT_TYPE	include/windows/netinet/ip6.h	144;"	d
IP6OPT_TYPE_DISCARD	include/windows/netinet/ip6.h	146;"	d
IP6OPT_TYPE_FORCEICMP	include/windows/netinet/ip6.h	147;"	d
IP6OPT_TYPE_ICMP	include/windows/netinet/ip6.h	148;"	d
IP6OPT_TYPE_SKIP	include/windows/netinet/ip6.h	145;"	d
IP6TOS_CE	include/windows/netinet/ip6.h	100;"	d
IP6TOS_ECT	include/windows/netinet/ip6.h	101;"	d
IP6UnitLength	datapath-windows/ovsext/NetProto.h	/^typedef UINT64 IP6UnitLength;$/;"	t
IP6_ALERT_AN	include/windows/netinet/ip6.h	192;"	d
IP6_ALERT_MLD	include/windows/netinet/ip6.h	190;"	d
IP6_ALERT_RSVP	include/windows/netinet/ip6.h	191;"	d
IP6_FH_F_AUTH	datapath/linux/compat/include/net/ipv6.h	/^	IP6_FH_F_AUTH           = (1 << 1),$/;"	e	enum:__anon48
IP6_FH_F_FRAG	datapath/linux/compat/include/net/ipv6.h	/^	IP6_FH_F_FRAG           = (1 << 0),$/;"	e	enum:__anon48
IP6_FH_F_SKIP_RH	datapath/linux/compat/include/net/ipv6.h	/^	IP6_FH_F_SKIP_RH        = (1 << 2),$/;"	e	enum:__anon48
IPChecksum	datapath-windows/ovsext/Checksum.c	/^IPChecksum(UINT8 *ipHdr,$/;"	f
IPFIX_DEFAULT_COLLECTOR_PORT	ofproto/ofproto-dpif-ipfix.c	44;"	d	file:
IPFIX_ENTERPRISE_ENTITY	ofproto/ofproto-dpif-ipfix.c	187;"	d	file:
IPFIX_ENTERPRISE_ENTITY	ofproto/ofproto-dpif-ipfix.c	197;"	d	file:
IPFIX_ENTERPRISE_ENTITY	ofproto/ofproto-dpif-ipfix.c	207;"	d	file:
IPFIX_ENTITY	ofproto/ofproto-dpif-ipfix.c	183;"	d	file:
IPFIX_ENTITY	ofproto/ofproto-dpif-ipfix.c	194;"	d	file:
IPFIX_ENTITY	ofproto/ofproto-dpif-ipfix.c	204;"	d	file:
IPFIX_PROTO_L2_ETH	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L2_ETH = 0,  \/* No VLAN. *\/$/;"	e	enum:ipfix_proto_l2	file:
IPFIX_PROTO_L2_VLAN	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L2_VLAN,$/;"	e	enum:ipfix_proto_l2	file:
IPFIX_PROTO_L3_IPV4	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L3_IPV4,$/;"	e	enum:ipfix_proto_l3	file:
IPFIX_PROTO_L3_IPV6	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L3_IPV6,$/;"	e	enum:ipfix_proto_l3	file:
IPFIX_PROTO_L3_UNKNOWN	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L3_UNKNOWN = 0,$/;"	e	enum:ipfix_proto_l3	file:
IPFIX_PROTO_L4_ICMP	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L4_ICMP,$/;"	e	enum:ipfix_proto_l4	file:
IPFIX_PROTO_L4_TCP_UDP_SCTP	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L4_TCP_UDP_SCTP,$/;"	e	enum:ipfix_proto_l4	file:
IPFIX_PROTO_L4_UNKNOWN	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_L4_UNKNOWN = 0,$/;"	e	enum:ipfix_proto_l4	file:
IPFIX_PROTO_NOT_TUNNELED	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_NOT_TUNNELED = 0,$/;"	e	enum:ipfix_proto_tunnel	file:
IPFIX_PROTO_TUNNELED	ofproto/ofproto-dpif-ipfix.c	/^    IPFIX_PROTO_TUNNELED,  \/* Support gre, lisp and vxlan. *\/$/;"	e	enum:ipfix_proto_tunnel	file:
IPFIX_SET_ENTERPRISE	ofproto/ofproto-dpif-ipfix.c	186;"	d	file:
IPFIX_SET_ID_OPTION_TEMPLATE	ofproto/ofproto-dpif-ipfix.c	135;"	d	file:
IPFIX_SET_ID_TEMPLATE	ofproto/ofproto-dpif-ipfix.c	134;"	d	file:
IPFIX_TEMPLATE_ID_MIN	ofproto/ofproto-dpif-ipfix.c	171;"	d	file:
IPFIX_TEMPLATE_INTERVAL	ofproto/ofproto-dpif-ipfix.c	121;"	d	file:
IPFIX_UPCALL	ofproto/ofproto-dpif-upcall.c	/^    IPFIX_UPCALL                \/* Per-bridge sampling. *\/$/;"	e	enum:upcall_type	file:
IPFIX_VERSION	ofproto/ofproto-dpif-ipfix.c	116;"	d	file:
IPHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct IPHdr {$/;"	s
IPHdr	datapath-windows/ovsext/NetProto.h	/^} IPHdr;$/;"	t	typeref:struct:IPHdr
IPOPT_RTRALT	datapath-windows/ovsext/NetProto.h	152;"	d
IPOpt	datapath-windows/ovsext/NetProto.h	/^typedef struct IPOpt {$/;"	s
IPOpt	datapath-windows/ovsext/NetProto.h	/^} IPOpt;$/;"	t	typeref:struct:IPOpt
IPPORT_FTP	include/sparse/netinet/in.h	77;"	d
IPPORT_FTP	include/windows/netinet/in.h	21;"	d
IPPROTO_AH	datapath-windows/ovsext/NetProto.h	93;"	d
IPPROTO_AH	include/sparse/netinet/in.h	71;"	d
IPPROTO_DSTOPTS	datapath-windows/ovsext/NetProto.h	96;"	d
IPPROTO_DSTOPTS	include/sparse/netinet/in.h	74;"	d
IPPROTO_ESP	datapath-windows/ovsext/NetProto.h	92;"	d
IPPROTO_ESP	include/sparse/netinet/in.h	70;"	d
IPPROTO_ETHERIP	datapath-windows/ovsext/NetProto.h	97;"	d
IPPROTO_FRAGMENT	datapath-windows/ovsext/NetProto.h	90;"	d
IPPROTO_FRAGMENT	include/sparse/netinet/in.h	68;"	d
IPPROTO_GRE	datapath-windows/ovsext/NetProto.h	83;"	d
IPPROTO_GRE	datapath-windows/ovsext/NetProto.h	91;"	d
IPPROTO_GRE	include/sparse/netinet/in.h	69;"	d
IPPROTO_GRE	include/windows/netinet/in.h	20;"	d
IPPROTO_HOPOPTS	datapath-windows/ovsext/NetProto.h	87;"	d
IPPROTO_HOPOPTS	include/sparse/netinet/in.h	62;"	d
IPPROTO_ICMP	datapath-windows/ovsext/NetProto.h	80;"	d
IPPROTO_ICMP	include/sparse/netinet/in.h	63;"	d
IPPROTO_ICMPV6	datapath-windows/ovsext/NetProto.h	94;"	d
IPPROTO_ICMPV6	include/sparse/netinet/in.h	72;"	d
IPPROTO_IGMP	datapath-windows/ovsext/NetProto.h	81;"	d
IPPROTO_IGMP	include/sparse/netinet/in.h	64;"	d
IPPROTO_IP	include/sparse/netinet/in.h	60;"	d
IPPROTO_IPV6	datapath-windows/ovsext/NetProto.h	88;"	d
IPPROTO_IPV6	include/sparse/netinet/in.h	61;"	d
IPPROTO_NONE	datapath-windows/ovsext/NetProto.h	95;"	d
IPPROTO_NONE	include/sparse/netinet/in.h	73;"	d
IPPROTO_ROUTING	datapath-windows/ovsext/NetProto.h	89;"	d
IPPROTO_ROUTING	include/sparse/netinet/in.h	67;"	d
IPPROTO_RSVD	datapath-windows/ovsext/NetProto.h	85;"	d
IPPROTO_SCTP	include/sparse/netinet/in.h	75;"	d
IPPROTO_SCTP	lib/packets.h	577;"	d
IPPROTO_TCP	datapath-windows/ovsext/NetProto.h	84;"	d
IPPROTO_TCP	include/sparse/netinet/in.h	65;"	d
IPPROTO_UDP	datapath-windows/ovsext/NetProto.h	82;"	d
IPPROTO_UDP	include/sparse/netinet/in.h	66;"	d
IPPseudoChecksum	datapath-windows/ovsext/Checksum.c	/^IPPseudoChecksum(UINT32 *src,$/;"	f
IPSEC_MARK	ofproto/tunnel.c	46;"	d	file:
IPTABLES	utilities/bugtool/ovs-bugtool	/^IPTABLES = 'iptables'$/;"	v
IPTABLES_CONFIG	utilities/bugtool/ovs-bugtool	/^IPTABLES_CONFIG = '\/etc\/sysconfig\/iptables-config'$/;"	v
IPTOS_LOWDELAY	include/windows/netinet/ip.h	22;"	d
IPTOS_PREC_INTERNETCONTROL	include/windows/netinet/ip.h	20;"	d
IPTOS_PREC_INTERNETCONTROL	python/ovs/stream.py	/^    IPTOS_PREC_INTERNETCONTROL = 0xc0$/;"	v	class:Stream
IPTOS_THROUGHPUT	include/windows/netinet/ip.h	23;"	d
IPV4	datapath-windows/ovsext/NetProto.h	34;"	d
IPV6	datapath-windows/ovsext/NetProto.h	35;"	d
IPV6_DEFHLIM	include/windows/netinet/ip6.h	228;"	d
IPV6_FLOWINFO_MASK	include/windows/netinet/ip6.h	96;"	d
IPV6_FLOWLABEL_MASK	include/windows/netinet/ip6.h	97;"	d
IPV6_FRAGTTL	include/windows/netinet/ip6.h	229;"	d
IPV6_HLIMDEC	include/windows/netinet/ip6.h	230;"	d
IPV6_LABEL_MASK	lib/packets.h	848;"	d
IPV6_MAXHLIM	include/windows/netinet/ip6.h	227;"	d
IPV6_MAXPACKET	include/windows/netinet/ip6.h	233;"	d
IPV6_MMTU	include/windows/netinet/ip6.h	232;"	d
IPV6_SCAN_FMT	lib/packets.h	861;"	d
IPV6_SCAN_LEN	lib/packets.h	862;"	d
IPV6_TCLASS	include/sparse/netinet/in.h	121;"	d
IPV6_VERSION	include/windows/netinet/ip6.h	93;"	d
IPV6_VERSION_MASK	include/windows/netinet/ip6.h	94;"	d
IP_ADD_MEMBERSHIP	include/sparse/netinet/in.h	80;"	d
IP_ARGS	lib/packets.h	526;"	d
IP_CE	datapath-windows/ovsext/NetProto.h	143;"	d
IP_DF	datapath-windows/ovsext/NetProto.h	144;"	d
IP_DF	include/windows/netinet/ip.h	24;"	d
IP_DF_NBO	datapath-windows/ovsext/NetProto.h	149;"	d
IP_DF_NBO	datapath-windows/ovsext/Vxlan.c	45;"	d	file:
IP_DONT_FRAGMENT	lib/packets.h	590;"	d
IP_DROP_MEMBERSHIP	include/sparse/netinet/in.h	81;"	d
IP_DSCP_MASK	lib/packets.h	586;"	d
IP_ECN_CE	datapath-windows/ovsext/NetProto.h	158;"	d
IP_ECN_CE	lib/packets.h	584;"	d
IP_ECN_ECT_0	datapath-windows/ovsext/NetProto.h	157;"	d
IP_ECN_ECT_0	lib/packets.h	583;"	d
IP_ECN_ECT_1	datapath-windows/ovsext/NetProto.h	156;"	d
IP_ECN_ECT_1	lib/packets.h	582;"	d
IP_ECN_MASK	datapath-windows/ovsext/NetProto.h	159;"	d
IP_ECN_MASK	lib/packets.h	585;"	d
IP_ECN_NOT_ECT	datapath-windows/ovsext/NetProto.h	155;"	d
IP_ECN_NOT_ECT	lib/packets.h	581;"	d
IP_FMT	lib/packets.h	525;"	d
IP_FRAG_OFF_MASK	lib/packets.h	592;"	d
IP_HDRINCL	include/sparse/netinet/in.h	82;"	d
IP_HDR_MIN_LENGTH	datapath-windows/ovsext/NetProto.h	37;"	d
IP_HEADER_LEN	lib/packets.h	596;"	d
IP_IHL	lib/packets.h	573;"	d
IP_IHL_VER	lib/packets.h	574;"	d
IP_IS_FRAGMENT	lib/packets.h	593;"	d
IP_MAX_PACKET	datapath-windows/ovsext/NetProto.h	78;"	d
IP_MF	datapath-windows/ovsext/NetProto.h	145;"	d
IP_MF_NBO	datapath-windows/ovsext/NetProto.h	150;"	d
IP_MORE_FRAGMENTS	lib/packets.h	591;"	d
IP_MTU	include/sparse/netinet/in.h	83;"	d
IP_MTU_DISCOVER	include/sparse/netinet/in.h	84;"	d
IP_MULTICAST_IF	include/sparse/netinet/in.h	85;"	d
IP_MULTICAST_LOOP	include/sparse/netinet/in.h	86;"	d
IP_MULTICAST_TTL	include/sparse/netinet/in.h	87;"	d
IP_NODEFRAG	include/sparse/netinet/in.h	88;"	d
IP_OFFSET	datapath-windows/ovsext/NetProto.h	146;"	d
IP_OFFSET_NBO	datapath-windows/ovsext/NetProto.h	148;"	d
IP_OPTIONS	include/sparse/netinet/in.h	89;"	d
IP_PKTINFO	include/sparse/netinet/in.h	90;"	d
IP_RECVERR	include/sparse/netinet/in.h	91;"	d
IP_RECVOPTS	include/sparse/netinet/in.h	92;"	d
IP_RECVTOS	include/sparse/netinet/in.h	93;"	d
IP_RECVTTL	include/sparse/netinet/in.h	94;"	d
IP_RETOPTS	include/sparse/netinet/in.h	95;"	d
IP_ROUTER_ALERT	include/sparse/netinet/in.h	96;"	d
IP_SCAN_ARGS	lib/packets.h	543;"	d
IP_SCAN_FMT	lib/packets.h	542;"	d
IP_SRC_ANY	ofproto/tunnel.c	/^    IP_SRC_ANY,             \/* Any ip_src is acceptable. *\/$/;"	e	enum:ip_src_type	file:
IP_SRC_CFG	ofproto/tunnel.c	/^    IP_SRC_CFG,             \/* ip_src must equal configured address. *\/$/;"	e	enum:ip_src_type	file:
IP_SRC_FLOW	ofproto/tunnel.c	/^    IP_SRC_FLOW             \/* ip_src is handled in flow table. *\/$/;"	e	enum:ip_src_type	file:
IP_TOS	include/sparse/netinet/in.h	97;"	d
IP_TTL	include/sparse/netinet/in.h	98;"	d
IP_VER	lib/packets.h	572;"	d
IP_VERSION	lib/packets.h	588;"	d
IPsec	debian/ovs-monitor-ipsec	/^class IPsec:$/;"	c
IPv6ExtHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct IPv6ExtHdr {$/;"	s
IPv6ExtHdr	datapath-windows/ovsext/NetProto.h	/^} IPv6ExtHdr;$/;"	t	typeref:struct:IPv6ExtHdr
IPv6FragHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct IPv6FragHdr {$/;"	s
IPv6FragHdr	datapath-windows/ovsext/NetProto.h	/^} IPv6FragHdr;$/;"	t	typeref:struct:IPv6FragHdr
IPv6Hdr	datapath-windows/ovsext/NetProto.h	/^typedef struct IPv6Hdr {$/;"	s
IPv6Hdr	datapath-windows/ovsext/NetProto.h	/^} IPv6Hdr;$/;"	t	typeref:struct:IPv6Hdr
IPv6NdOptHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct IPv6NdOptHdr {$/;"	s
IPv6NdOptHdr	datapath-windows/ovsext/NetProto.h	/^} IPv6NdOptHdr;$/;"	t	typeref:struct:IPv6NdOptHdr
IPv6PseudoChecksum	datapath-windows/ovsext/Checksum.c	/^IPv6PseudoChecksum(UINT32 *src,$/;"	f
ISCSIADM	utilities/bugtool/ovs-bugtool	/^ISCSIADM = 'iscsiadm'$/;"	v
ISCSI_CONF	utilities/bugtool/ovs-bugtool	/^ISCSI_CONF = '\/etc\/iscsi\/iscsid.conf'$/;"	v
ISCSI_INITIATOR	utilities/bugtool/ovs-bugtool	/^ISCSI_INITIATOR = '\/etc\/iscsi\/initiatorname.iscsi'$/;"	v
ISOLATIONAWARE_MANIFEST_RESOURCE_ID	datapath-windows/ovsext/resource.h	226;"	d
ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID	datapath-windows/ovsext/resource.h	315;"	d
IS_BUILTIN	datapath/linux/compat/include/linux/kconfig.h	48;"	d
IS_ENABLED	datapath/linux/compat/include/linux/kconfig.h	40;"	d
IS_ERR_OR_NULL	datapath/linux/compat/include/linux/err.h	/^static inline bool __must_check IS_ERR_OR_NULL(__force const void *ptr)$/;"	f
IS_LOCKLESS_ATOMIC	lib/ovs-atomic-gcc4+.h	44;"	d
IS_LOCKLESS_ATOMIC	lib/ovs-atomic-i586.h	119;"	d
IS_LOCKLESS_ATOMIC	lib/ovs-atomic-msvc.h	52;"	d
IS_LOCKLESS_ATOMIC	lib/ovs-atomic-x86_64.h	120;"	d
IS_MODULE	datapath/linux/compat/include/linux/kconfig.h	54;"	d
IS_POSIXLY_CORRECT	lib/getopt_long.c	49;"	d	file:
IS_POW2	lib/util.h	125;"	d
Icmp6Key	datapath-windows/ovsext/DpInternal.h	/^typedef struct Icmp6Key {$/;"	s
Icmp6Key	datapath-windows/ovsext/DpInternal.h	/^} Icmp6Key; \/* Size of 72 byte. *\/$/;"	t	typeref:struct:Icmp6Key
Icons.Critical	windows/ovs-windows-installer/Actions/OVSActions.js	/^{$/;"	p
Icons.Exclamation	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Question: 32,$/;"	p
Icons.Information	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Exclamation: 48,$/;"	p
Icons.Question	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Critical: 16,$/;"	p
Idl	python/ovs/db/idl.py	/^class Idl(object):$/;"	c
IdlSchema	python/ovs/db/schema.py	/^class IdlSchema(DbSchema):$/;"	c
Idle	python/ovs/reconnect.py	/^    class Idle(object):$/;"	c	class:Reconnect
InitHvVportCommon	datapath-windows/ovsext/Vport.c	/^InitHvVportCommon(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
InitOvsVportCommon	datapath-windows/ovsext/Vport.c	/^InitOvsVportCommon(POVS_SWITCH_CONTEXT switchContext,$/;"	f
InitUserDumpState	datapath-windows/ovsext/Datapath.c	/^InitUserDumpState(POVS_OPEN_INSTANCE instance,$/;"	f
InitUserParamsCtx	datapath-windows/ovsext/Datapath.h	/^InitUserParamsCtx(PIRP irp,$/;"	f
Inst	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def Inst(cls, name, processname=None):$/;"	m	class:VSwitchService
IntegerType	python/ovs/db/types.py	/^IntegerType = AtomicType("integer", 0, (int, long))$/;"	v
InvokeNetlinkCmdHandler	datapath-windows/ovsext/Datapath.c	/^InvokeNetlinkCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
IpKey	datapath-windows/ovsext/DpInternal.h	/^} IpKey;  \/* Size of 16 byte. *\/$/;"	t	typeref:struct:Ipkey
IpfixEntityHandler	ofproto/ipfix-gen-entities	/^class IpfixEntityHandler(xml.sax.handler.ContentHandler):$/;"	c
Ipkey	datapath-windows/ovsext/DpInternal.h	/^typedef struct Ipkey {$/;"	s
Ipv6Key	datapath-windows/ovsext/DpInternal.h	/^typedef struct Ipv6Key {$/;"	s
Ipv6Key	datapath-windows/ovsext/DpInternal.h	/^} Ipv6Key;  \/* Size of 48 byte. *\/$/;"	t	typeref:struct:Ipv6Key
JHASH_H	lib/jhash.h	18;"	d
JSONRPC_ERROR	lib/jsonrpc.h	/^    JSONRPC_ERROR              \/* Error reply. *\/$/;"	e	enum:jsonrpc_msg_type
JSONRPC_H	lib/jsonrpc.h	18;"	d
JSONRPC_NOTIFY	lib/jsonrpc.h	/^    JSONRPC_NOTIFY,            \/* Notification. *\/$/;"	e	enum:jsonrpc_msg_type
JSONRPC_REPLY	lib/jsonrpc.h	/^    JSONRPC_REPLY,             \/* Successful reply. *\/$/;"	e	enum:jsonrpc_msg_type
JSONRPC_REQUEST	lib/jsonrpc.h	/^    JSONRPC_REQUEST,           \/* Request. *\/$/;"	e	enum:jsonrpc_msg_type
JSON_ARRAY	lib/json.h	/^    JSON_ARRAY,                 \/* [1, 2, 3, ...] *\/$/;"	e	enum:json_type
JSON_FALSE	lib/json.h	/^    JSON_FALSE,                 \/* false *\/$/;"	e	enum:json_type
JSON_H	lib/json.h	18;"	d
JSON_INTEGER	lib/json.h	/^    JSON_INTEGER,               \/* 123. *\/$/;"	e	enum:json_type
JSON_LEX_ESCAPE	lib/json.c	/^    JSON_LEX_ESCAPE             \/* In a quoted string just after a "\\". *\/$/;"	e	enum:json_lex_state	file:
JSON_LEX_KEYWORD	lib/json.c	/^    JSON_LEX_KEYWORD,           \/* Reading a keyword. *\/$/;"	e	enum:json_lex_state	file:
JSON_LEX_NUMBER	lib/json.c	/^    JSON_LEX_NUMBER,            \/* Reading a number. *\/$/;"	e	enum:json_lex_state	file:
JSON_LEX_START	lib/json.c	/^    JSON_LEX_START,             \/* Not inside a token. *\/$/;"	e	enum:json_lex_state	file:
JSON_LEX_STRING	lib/json.c	/^    JSON_LEX_STRING,            \/* Reading a quoted string. *\/$/;"	e	enum:json_lex_state	file:
JSON_MAX_HEIGHT	lib/json.c	106;"	d	file:
JSON_NULL	lib/json.h	/^    JSON_NULL,                  \/* null *\/$/;"	e	enum:json_type
JSON_N_TYPES	lib/json.h	/^    JSON_N_TYPES$/;"	e	enum:json_type
JSON_OBJECT	lib/json.h	/^    JSON_OBJECT,                \/* {"a": b, "c": d, ...} *\/$/;"	e	enum:json_type
JSON_PARSE_ARRAY_INIT	lib/json.c	/^    JSON_PARSE_ARRAY_INIT,      \/* Expecting ']' or a value. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_ARRAY_NEXT	lib/json.c	/^    JSON_PARSE_ARRAY_NEXT       \/* Expecting ',' or ']'. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_ARRAY_VALUE	lib/json.c	/^    JSON_PARSE_ARRAY_VALUE,     \/* Expecting a value. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_END	lib/json.c	/^    JSON_PARSE_END,             \/* End of input. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_OBJECT_COLON	lib/json.c	/^    JSON_PARSE_OBJECT_COLON,    \/* Expecting ':'. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_OBJECT_INIT	lib/json.c	/^    JSON_PARSE_OBJECT_INIT,     \/* Expecting '}' or an object name. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_OBJECT_NAME	lib/json.c	/^    JSON_PARSE_OBJECT_NAME,     \/* Expecting an object name. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_OBJECT_NEXT	lib/json.c	/^    JSON_PARSE_OBJECT_NEXT,     \/* Expecting ',' or '}'. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_OBJECT_VALUE	lib/json.c	/^    JSON_PARSE_OBJECT_VALUE,    \/* Expecting an object value. *\/$/;"	e	enum:json_parse_state	file:
JSON_PARSE_START	lib/json.c	/^    JSON_PARSE_START,           \/* Beginning of input. *\/$/;"	e	enum:json_parse_state	file:
JSON_REAL	lib/json.h	/^    JSON_REAL,                  \/* 123.456. *\/$/;"	e	enum:json_type
JSON_STRING	lib/json.h	/^    JSON_STRING,                \/* "..." *\/$/;"	e	enum:json_type
JSON_TRUE	lib/json.h	/^    JSON_TRUE,                  \/* true *\/$/;"	e	enum:json_type
JSPF_TRAILER	lib/json.h	/^    JSPF_TRAILER = 1 << 0       \/* Check for garbage following input.  *\/$/;"	e	enum:__anon94
JSSF_PRETTY	lib/json.h	/^    JSSF_PRETTY = 1 << 0,       \/* Multiple lines with indentation, if true. *\/$/;"	e	enum:__anon95
JSSF_SORT	lib/json.h	/^    JSSF_SORT = 1 << 1          \/* Object members in sorted order, if true. *\/$/;"	e	enum:__anon95
JhashFinal	datapath-windows/ovsext/Jhash.c	/^JhashFinal(UINT32 *a, UINT32 *b, UINT32 *c)$/;"	f	file:
JhashMix	datapath-windows/ovsext/Jhash.c	/^JhashMix(UINT32 *a, UINT32 *b, UINT32 *c)$/;"	f	file:
JhashRot	datapath-windows/ovsext/Jhash.c	/^JhashRot(UINT32 x, INT k)$/;"	f	file:
KARCH	Makefile	/^KARCH = $/;"	m
KARCH	datapath/Makefile	/^KARCH = $/;"	m
KB	utilities/bugtool/ovs-bugtool	/^KB = 1024$/;"	v
KBUILD	Makefile	/^KBUILD = \/lib\/modules\/3.10.0-123.13.2.el7.x86_64\/build$/;"	m
KBUILD	datapath/Makefile	/^KBUILD = \/lib\/modules\/3.10.0-123.13.2.el7.x86_64\/build$/;"	m
KEY	utilities/bugtool/ovs-bugtool	/^KEY      = 0$/;"	v
L	lib/meta-flow.c	2159;"	d	file:
L	lib/meta-flow.c	2172;"	d	file:
L1_SIZE	lib/ovs-thread.c	590;"	d	file:
L2Key	datapath-windows/ovsext/DpInternal.h	/^typedef struct L2Key {$/;"	s
L2Key	datapath-windows/ovsext/DpInternal.h	/^} L2Key;  \/* Size of 24 byte. *\/$/;"	t	typeref:struct:L2Key
L2_SIZE	lib/ovs-thread.c	591;"	d	file:
L4Key	datapath-windows/ovsext/DpInternal.h	/^typedef struct L4Key {$/;"	s
L4Key	datapath-windows/ovsext/DpInternal.h	/^} L4Key;$/;"	t	typeref:struct:L4Key
LACK_OF_RESOURCES	ofproto/ofproto-dpif-ipfix.c	/^    LACK_OF_RESOURCES = 0x05$/;"	e	enum:ipfix_flow_end_reason	file:
LACPCOUNTERS	tests/test-sflow.c	/^	uint32_t LACPCOUNTERS;$/;"	m	struct:sflow_xdr::__anon230	file:
LACPDUsRx	lib/sflow.h	/^    uint32_t LACPDUsRx;$/;"	m	struct:_SFLLACP_counters
LACPDUsTx	lib/sflow.h	/^    uint32_t LACPDUsTx;$/;"	m	struct:_SFLLACP_counters
LACP_CONFIGURED	lib/lacp.h	/^    LACP_CONFIGURED,                  \/* LACP is enabled but not negotiated. *\/$/;"	e	enum:lacp_status
LACP_CURRENT	lib/lacp.c	/^    LACP_CURRENT,   \/* Current State.  Partner up to date. *\/$/;"	e	enum:slave_status	file:
LACP_DEFAULTED	lib/lacp.c	/^    LACP_DEFAULTED, \/* Defaulted State.  No partner. *\/$/;"	e	enum:slave_status	file:
LACP_DISABLED	lib/lacp.h	/^    LACP_DISABLED                     \/* LACP is not enabled. *\/$/;"	e	enum:lacp_status
LACP_EXPIRED	lib/lacp.c	/^    LACP_EXPIRED,   \/* Expired State.  Partner out of date. *\/$/;"	e	enum:slave_status	file:
LACP_FAST_TIME_TX	lib/lacp.c	48;"	d	file:
LACP_H	lib/lacp.h	18;"	d
LACP_INFO_LEN	lib/lacp.c	52;"	d	file:
LACP_NEGOTIATED	lib/lacp.h	/^    LACP_NEGOTIATED,                  \/* Successful LACP negotations. *\/$/;"	e	enum:lacp_status
LACP_PDU_LEN	lib/lacp.c	64;"	d	file:
LACP_RX_MULTIPLIER	lib/lacp.c	50;"	d	file:
LACP_SLOW_TIME_TX	lib/lacp.c	49;"	d	file:
LACP_STATE_ACT	lib/lacp.c	39;"	d	file:
LACP_STATE_AGG	lib/lacp.c	41;"	d	file:
LACP_STATE_COL	lib/lacp.c	43;"	d	file:
LACP_STATE_DEF	lib/lacp.c	45;"	d	file:
LACP_STATE_DIST	lib/lacp.c	44;"	d	file:
LACP_STATE_EXP	lib/lacp.c	46;"	d	file:
LACP_STATE_SYNC	lib/lacp.c	42;"	d	file:
LACP_STATE_TIME	lib/lacp.c	40;"	d	file:
LANG_AFRIKAANS	datapath-windows/ovsext/resource.h	703;"	d
LANG_ALBANIAN	datapath-windows/ovsext/resource.h	622;"	d
LANG_ALSATIAN	datapath-windows/ovsext/resource.h	873;"	d
LANG_AMHARIC	datapath-windows/ovsext/resource.h	776;"	d
LANG_ARABIC	datapath-windows/ovsext/resource.h	88;"	d
LANG_ARMENIAN	datapath-windows/ovsext/resource.h	681;"	d
LANG_ASSAMESE	datapath-windows/ovsext/resource.h	750;"	d
LANG_AZERBAIJANI	datapath-windows/ovsext/resource.h	685;"	d
LANG_AZERI	datapath-windows/ovsext/resource.h	684;"	d
LANG_BANGLA	datapath-windows/ovsext/resource.h	735;"	d
LANG_BASHKIR	datapath-windows/ovsext/resource.h	807;"	d
LANG_BASQUE	datapath-windows/ovsext/resource.h	688;"	d
LANG_BELARUSIAN	datapath-windows/ovsext/resource.h	658;"	d
LANG_BENGALI	datapath-windows/ovsext/resource.h	736;"	d
LANG_BOSNIAN	datapath-windows/ovsext/resource.h	614;"	d
LANG_BOSNIAN_NEUTRAL	datapath-windows/ovsext/resource.h	1465;"	d
LANG_BRETON	datapath-windows/ovsext/resource.h	839;"	d
LANG_BULGARIAN	datapath-windows/ovsext/resource.h	269;"	d
LANG_CATALAN	datapath-windows/ovsext/resource.h	334;"	d
LANG_CENTRAL_KURDISH	datapath-windows/ovsext/resource.h	893;"	d
LANG_CHEROKEE	datapath-windows/ovsext/resource.h	773;"	d
LANG_CHINESE	datapath-windows/ovsext/resource.h	382;"	d
LANG_CHINESE_SIMPLIFIED	datapath-windows/ovsext/resource.h	383;"	d
LANG_CHINESE_TRADITIONAL	datapath-windows/ovsext/resource.h	1466;"	d
LANG_CORSICAN	datapath-windows/ovsext/resource.h	870;"	d
LANG_CROATIAN	datapath-windows/ovsext/resource.h	615;"	d
LANG_CZECH	datapath-windows/ovsext/resource.h	405;"	d
LANG_DANISH	datapath-windows/ovsext/resource.h	423;"	d
LANG_DARI	datapath-windows/ovsext/resource.h	886;"	d
LANG_DIVEHI	datapath-windows/ovsext/resource.h	792;"	d
LANG_DUTCH	datapath-windows/ovsext/resource.h	587;"	d
LANG_ENGLISH	datapath-windows/ovsext/resource.h	482;"	d
LANG_ESTONIAN	datapath-windows/ovsext/resource.h	663;"	d
LANG_FAEROESE	datapath-windows/ovsext/resource.h	706;"	d
LANG_FARSI	datapath-windows/ovsext/resource.h	674;"	d
LANG_FILIPINO	datapath-windows/ovsext/resource.h	789;"	d
LANG_FINNISH	datapath-windows/ovsext/resource.h	506;"	d
LANG_FRENCH	datapath-windows/ovsext/resource.h	517;"	d
LANG_FRISIAN	datapath-windows/ovsext/resource.h	784;"	d
LANG_FULAH	datapath-windows/ovsext/resource.h	795;"	d
LANG_GALICIAN	datapath-windows/ovsext/resource.h	765;"	d
LANG_GEORGIAN	datapath-windows/ovsext/resource.h	705;"	d
LANG_GERMAN	datapath-windows/ovsext/resource.h	438;"	d
LANG_GREEK	datapath-windows/ovsext/resource.h	470;"	d
LANG_GREENLANDIC	datapath-windows/ovsext/resource.h	811;"	d
LANG_GUJARATI	datapath-windows/ovsext/resource.h	740;"	d
LANG_HAUSA	datapath-windows/ovsext/resource.h	798;"	d
LANG_HAWAIIAN	datapath-windows/ovsext/resource.h	821;"	d
LANG_HEBREW	datapath-windows/ovsext/resource.h	527;"	d
LANG_HINDI	datapath-windows/ovsext/resource.h	708;"	d
LANG_HUNGARIAN	datapath-windows/ovsext/resource.h	534;"	d
LANG_ICELANDIC	datapath-windows/ovsext/resource.h	540;"	d
LANG_IGBO	datapath-windows/ovsext/resource.h	813;"	d
LANG_INDONESIAN	datapath-windows/ovsext/resource.h	652;"	d
LANG_INUKTITUT	datapath-windows/ovsext/resource.h	775;"	d
LANG_INVARIANT	datapath-windows/ovsext/resource.h	842;"	d
LANG_IRISH	datapath-windows/ovsext/resource.h	711;"	d
LANG_ITALIAN	datapath-windows/ovsext/resource.h	565;"	d
LANG_JAPANESE	datapath-windows/ovsext/resource.h	574;"	d
LANG_KANNADA	datapath-windows/ovsext/resource.h	748;"	d
LANG_KASHMIRI	datapath-windows/ovsext/resource.h	780;"	d
LANG_KAZAK	datapath-windows/ovsext/resource.h	714;"	d
LANG_KHMER	datapath-windows/ovsext/resource.h	761;"	d
LANG_KICHE	datapath-windows/ovsext/resource.h	880;"	d
LANG_KINYARWANDA	datapath-windows/ovsext/resource.h	883;"	d
LANG_KONKANI	datapath-windows/ovsext/resource.h	766;"	d
LANG_KOREAN	datapath-windows/ovsext/resource.h	581;"	d
LANG_KYRGYZ	datapath-windows/ovsext/resource.h	728;"	d
LANG_LAO	datapath-windows/ovsext/resource.h	763;"	d
LANG_LATVIAN	datapath-windows/ovsext/resource.h	666;"	d
LANG_LITHUANIAN	datapath-windows/ovsext/resource.h	669;"	d
LANG_LOWER_SORBIAN	datapath-windows/ovsext/resource.h	691;"	d
LANG_LUXEMBOURGISH	datapath-windows/ovsext/resource.h	809;"	d
LANG_MACEDONIAN	datapath-windows/ovsext/resource.h	695;"	d
LANG_MALAY	datapath-windows/ovsext/resource.h	713;"	d
LANG_MALAYALAM	datapath-windows/ovsext/resource.h	749;"	d
LANG_MALTESE	datapath-windows/ovsext/resource.h	709;"	d
LANG_MANIPURI	datapath-windows/ovsext/resource.h	767;"	d
LANG_MAORI	datapath-windows/ovsext/resource.h	862;"	d
LANG_MAPUDUNGUN	datapath-windows/ovsext/resource.h	829;"	d
LANG_MARATHI	datapath-windows/ovsext/resource.h	752;"	d
LANG_MOHAWK	datapath-windows/ovsext/resource.h	834;"	d
LANG_MONGOLIAN	datapath-windows/ovsext/resource.h	755;"	d
LANG_NEPALI	datapath-windows/ovsext/resource.h	782;"	d
LANG_NEUTRAL	datapath-windows/ovsext/resource.h	27;"	d
LANG_NORWEGIAN	datapath-windows/ovsext/resource.h	592;"	d
LANG_OCCITAN	datapath-windows/ovsext/resource.h	866;"	d
LANG_ODIA	datapath-windows/ovsext/resource.h	742;"	d
LANG_ORIYA	datapath-windows/ovsext/resource.h	743;"	d
LANG_PASHTO	datapath-windows/ovsext/resource.h	786;"	d
LANG_PERSIAN	datapath-windows/ovsext/resource.h	675;"	d
LANG_POLISH	datapath-windows/ovsext/resource.h	600;"	d
LANG_PORTUGUESE	datapath-windows/ovsext/resource.h	603;"	d
LANG_PULAR	datapath-windows/ovsext/resource.h	796;"	d
LANG_PUNJABI	datapath-windows/ovsext/resource.h	738;"	d
LANG_QUECHUA	datapath-windows/ovsext/resource.h	803;"	d
LANG_ROMANIAN	datapath-windows/ovsext/resource.h	609;"	d
LANG_ROMANSH	datapath-windows/ovsext/resource.h	605;"	d
LANG_RUSSIAN	datapath-windows/ovsext/resource.h	612;"	d
LANG_SAKHA	datapath-windows/ovsext/resource.h	876;"	d
LANG_SAMI	datapath-windows/ovsext/resource.h	710;"	d
LANG_SANSKRIT	datapath-windows/ovsext/resource.h	753;"	d
LANG_SCOTTISH_GAELIC	datapath-windows/ovsext/resource.h	890;"	d
LANG_SERBIAN	datapath-windows/ovsext/resource.h	616;"	d
LANG_SERBIAN_NEUTRAL	datapath-windows/ovsext/resource.h	1467;"	d
LANG_SINDHI	datapath-windows/ovsext/resource.h	768;"	d
LANG_SINHALESE	datapath-windows/ovsext/resource.h	771;"	d
LANG_SLOVAK	datapath-windows/ovsext/resource.h	619;"	d
LANG_SLOVENIAN	datapath-windows/ovsext/resource.h	661;"	d
LANG_SOTHO	datapath-windows/ovsext/resource.h	805;"	d
LANG_SPANISH	datapath-windows/ovsext/resource.h	494;"	d
LANG_SWAHILI	datapath-windows/ovsext/resource.h	730;"	d
LANG_SWEDISH	datapath-windows/ovsext/resource.h	625;"	d
LANG_SYRIAC	datapath-windows/ovsext/resource.h	769;"	d
LANG_TAJIK	datapath-windows/ovsext/resource.h	672;"	d
LANG_TAMAZIGHT	datapath-windows/ovsext/resource.h	778;"	d
LANG_TAMIL	datapath-windows/ovsext/resource.h	744;"	d
LANG_TATAR	datapath-windows/ovsext/resource.h	734;"	d
LANG_TELUGU	datapath-windows/ovsext/resource.h	746;"	d
LANG_THAI	datapath-windows/ovsext/resource.h	628;"	d
LANG_TIBETAN	datapath-windows/ovsext/resource.h	757;"	d
LANG_TIGRIGNA	datapath-windows/ovsext/resource.h	817;"	d
LANG_TIGRINYA	datapath-windows/ovsext/resource.h	818;"	d
LANG_TSWANA	datapath-windows/ovsext/resource.h	699;"	d
LANG_TURKISH	datapath-windows/ovsext/resource.h	631;"	d
LANG_TURKMEN	datapath-windows/ovsext/resource.h	731;"	d
LANG_UIGHUR	datapath-windows/ovsext/resource.h	858;"	d
LANG_UKRAINIAN	datapath-windows/ovsext/resource.h	655;"	d
LANG_UPPER_SORBIAN	datapath-windows/ovsext/resource.h	692;"	d
LANG_URDU	datapath-windows/ovsext/resource.h	649;"	d
LANG_UZBEK	datapath-windows/ovsext/resource.h	732;"	d
LANG_VALENCIAN	datapath-windows/ovsext/resource.h	335;"	d
LANG_VIETNAMESE	datapath-windows/ovsext/resource.h	678;"	d
LANG_WELSH	datapath-windows/ovsext/resource.h	759;"	d
LANG_WOLOF	datapath-windows/ovsext/resource.h	885;"	d
LANG_XHOSA	datapath-windows/ovsext/resource.h	701;"	d
LANG_YAKUT	datapath-windows/ovsext/resource.h	877;"	d
LANG_YI	datapath-windows/ovsext/resource.h	826;"	d
LANG_YORUBA	datapath-windows/ovsext/resource.h	801;"	d
LANG_ZULU	datapath-windows/ovsext/resource.h	702;"	d
LAST_PARAM	datapath/linux/compat/stt.c	1328;"	d	file:
LAST_PARAM	datapath/linux/compat/stt.c	1330;"	d	file:
LAST_PARAM	datapath/linux/stt.c	1328;"	d	file:
LAST_PARAM	datapath/linux/stt.c	1330;"	d	file:
LATCH_H	lib/latch.h	18;"	d
LD	Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	datapath/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	datapath/Makefile	/^LDFLAGS = $/;"	m
LEARNING_SWITCH_H	lib/learning-switch.h	18;"	d
LEARN_H	lib/learn.h	18;"	d
LEVELS	python/ovs/vlog.py	/^LEVELS = {$/;"	v
LEX_F_DECIMAL	ovn/lib/lex.h	/^    LEX_F_DECIMAL,$/;"	e	enum:lex_format
LEX_F_ETHERNET	ovn/lib/lex.h	/^    LEX_F_ETHERNET,$/;"	e	enum:lex_format
LEX_F_HEXADECIMAL	ovn/lib/lex.h	/^    LEX_F_HEXADECIMAL,$/;"	e	enum:lex_format
LEX_F_IPV4	ovn/lib/lex.h	/^    LEX_F_IPV4,$/;"	e	enum:lex_format
LEX_F_IPV6	ovn/lib/lex.h	/^    LEX_F_IPV6,$/;"	e	enum:lex_format
LEX_T_COMMA	ovn/lib/lex.h	/^    LEX_T_COMMA,                \/* , *\/$/;"	e	enum:lex_type
LEX_T_DECREMENT	ovn/lib/lex.h	/^    LEX_T_DECREMENT,            \/* -- *\/$/;"	e	enum:lex_type
LEX_T_ELLIPSIS	ovn/lib/lex.h	/^    LEX_T_ELLIPSIS,             \/* .. *\/$/;"	e	enum:lex_type
LEX_T_END	ovn/lib/lex.h	/^    LEX_T_END,                  \/* end of input *\/$/;"	e	enum:lex_type
LEX_T_EQ	ovn/lib/lex.h	/^    LEX_T_EQ,                   \/* == *\/$/;"	e	enum:lex_type
LEX_T_EQUALS	ovn/lib/lex.h	/^    LEX_T_EQUALS,               \/* = *\/$/;"	e	enum:lex_type
LEX_T_ERROR	ovn/lib/lex.h	/^    LEX_T_ERROR,                \/* invalid input *\/$/;"	e	enum:lex_type
LEX_T_EXCHANGE	ovn/lib/lex.h	/^    LEX_T_EXCHANGE,             \/* <-> *\/$/;"	e	enum:lex_type
LEX_T_GE	ovn/lib/lex.h	/^    LEX_T_GE,                   \/* >= *\/$/;"	e	enum:lex_type
LEX_T_GT	ovn/lib/lex.h	/^    LEX_T_GT,                   \/* > *\/$/;"	e	enum:lex_type
LEX_T_ID	ovn/lib/lex.h	/^    LEX_T_ID,                   \/* foo *\/$/;"	e	enum:lex_type
LEX_T_INTEGER	ovn/lib/lex.h	/^    LEX_T_INTEGER,              \/* 12345 or 1.2.3.4 or ::1 or 01:02:03:04:05 *\/$/;"	e	enum:lex_type
LEX_T_LCURLY	ovn/lib/lex.h	/^    LEX_T_LCURLY,               \/* { *\/$/;"	e	enum:lex_type
LEX_T_LE	ovn/lib/lex.h	/^    LEX_T_LE,                   \/* <= *\/$/;"	e	enum:lex_type
LEX_T_LOG_AND	ovn/lib/lex.h	/^    LEX_T_LOG_AND,              \/* && *\/$/;"	e	enum:lex_type
LEX_T_LOG_NOT	ovn/lib/lex.h	/^    LEX_T_LOG_NOT,              \/* ! *\/$/;"	e	enum:lex_type
LEX_T_LOG_OR	ovn/lib/lex.h	/^    LEX_T_LOG_OR,               \/* || *\/$/;"	e	enum:lex_type
LEX_T_LPAREN	ovn/lib/lex.h	/^    LEX_T_LPAREN,               \/* ( *\/$/;"	e	enum:lex_type
LEX_T_LSQUARE	ovn/lib/lex.h	/^    LEX_T_LSQUARE,              \/* [ *\/$/;"	e	enum:lex_type
LEX_T_LT	ovn/lib/lex.h	/^    LEX_T_LT,                   \/* < *\/$/;"	e	enum:lex_type
LEX_T_MASKED_INTEGER	ovn/lib/lex.h	/^    LEX_T_MASKED_INTEGER,       \/* 12345\/10 or 1.2.0.0\/16 or ::2\/127 or... *\/$/;"	e	enum:lex_type
LEX_T_NE	ovn/lib/lex.h	/^    LEX_T_NE,                   \/* != *\/$/;"	e	enum:lex_type
LEX_T_RCURLY	ovn/lib/lex.h	/^    LEX_T_RCURLY,               \/* } *\/$/;"	e	enum:lex_type
LEX_T_RPAREN	ovn/lib/lex.h	/^    LEX_T_RPAREN,               \/* ) *\/$/;"	e	enum:lex_type
LEX_T_RSQUARE	ovn/lib/lex.h	/^    LEX_T_RSQUARE,              \/* ] *\/$/;"	e	enum:lex_type
LEX_T_SEMICOLON	ovn/lib/lex.h	/^    LEX_T_SEMICOLON,            \/* ; *\/$/;"	e	enum:lex_type
LEX_T_STRING	ovn/lib/lex.h	/^    LEX_T_STRING,               \/* "foo" *\/$/;"	e	enum:lex_type
LIBCAPNG	lib/daemon-unix.c	54;"	d	file:
LIBCAPNG	lib/daemon-unix.c	56;"	d	file:
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	datapath/Makefile	/^LIBOBJS = $/;"	m
LIBRT	python/ovs/timeval.py	/^        LIBRT = 'libc.so.12'$/;"	v
LIBRT	python/ovs/timeval.py	/^    LIBRT = 'librt.so.1'$/;"	v
LIBS	Makefile	/^LIBS = -lpthread -lrt -lm $/;"	m
LIBS	datapath/Makefile	/^LIBS = -lpthread -lrt -lm $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	datapath/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINUX	lib/daemon-unix.c	48;"	d	file:
LINUX	lib/daemon-unix.c	50;"	d	file:
LINUX	lib/socket-util-unix.c	39;"	d	file:
LINUX	lib/socket-util-unix.c	41;"	d	file:
LINUX	vswitchd/system-stats.c	54;"	d	file:
LINUX	vswitchd/system-stats.c	57;"	d	file:
LINUX_DATAPATH_VERSION_FILE	lib/dpif-netlink.c	2260;"	d	file:
LIPO	Makefile	/^LIPO = $/;"	m
LIPO	datapath/Makefile	/^LIPO = $/;"	m
LISP_DST_PORT	lib/netdev-vport.c	57;"	d	file:
LISP_HLEN	datapath/linux/vport-lisp.c	97;"	d	file:
LISP_HLEN	datapath/vport-lisp.c	97;"	d	file:
LIST_FORALL	datapath-windows/ovsext/Util.h	46;"	d
LIST_FORALL_REVERSE	datapath-windows/ovsext/Util.h	56;"	d
LIST_FORALL_REVERSE_SAFE	datapath-windows/ovsext/Util.h	61;"	d
LIST_FORALL_SAFE	datapath-windows/ovsext/Util.h	51;"	d
LIST_FOR_EACH	lib/list.h	60;"	d
LIST_FOR_EACH_CONTINUE	lib/list.h	64;"	d
LIST_FOR_EACH_POP	lib/list.h	82;"	d
LIST_FOR_EACH_REVERSE	lib/list.h	68;"	d
LIST_FOR_EACH_REVERSE_CONTINUE	lib/list.h	72;"	d
LIST_FOR_EACH_SAFE	lib/list.h	76;"	d
LIST_H	lib/list.h	17;"	d
LLC_CNTL_SNAP	lib/packets.h	380;"	d
LLC_DSAP_SNAP	lib/packets.h	378;"	d
LLC_HEADER_LEN	lib/packets.h	382;"	d
LLC_SNAP_HEADER_LEN	lib/packets.h	406;"	d
LLC_SSAP_SNAP	lib/packets.h	379;"	d
LLDPD_AF_IPV4	lib/lldp/lldpd-structs.h	/^    LLDPD_AF_IPV4,$/;"	e	enum:__anon97
LLDPD_AF_IPV6	lib/lldp/lldpd-structs.h	/^    LLDPD_AF_IPV6,$/;"	e	enum:__anon97
LLDPD_AF_LAST	lib/lldp/lldpd-structs.h	/^    LLDPD_AF_LAST$/;"	e	enum:__anon97
LLDPD_AF_UNSPEC	lib/lldp/lldpd-structs.h	/^    LLDPD_AF_UNSPEC = 0,$/;"	e	enum:__anon97
LLDPD_MGMT_MAXADDRSIZE	lib/lldp/lldpd-structs.h	50;"	d
LLDPD_MODE_CDPV1	lib/lldp/lldp-const.h	213;"	d
LLDPD_MODE_CDPV2	lib/lldp/lldp-const.h	214;"	d
LLDPD_MODE_EDP	lib/lldp/lldp-const.h	216;"	d
LLDPD_MODE_FDP	lib/lldp/lldp-const.h	217;"	d
LLDPD_MODE_LLDP	lib/lldp/lldp-const.h	212;"	d
LLDPD_MODE_MAX	lib/lldp/lldp-const.h	218;"	d
LLDPD_MODE_SONMP	lib/lldp/lldp-const.h	215;"	d
LLDPD_TTL	lib/lldp/lldpd.h	40;"	d
LLDPD_TX_HOLD	lib/lldp/lldpd.h	39;"	d
LLDPD_TX_INTERVAL	lib/lldp/lldpd.h	38;"	d
LLDP_BOND_SLAVE_SRC_MAC_TYPE_FIXED	lib/lldp/lldp-const.h	225;"	d
LLDP_BOND_SLAVE_SRC_MAC_TYPE_LOCALLY_ADMINISTERED	lib/lldp/lldp-const.h	226;"	d
LLDP_BOND_SLAVE_SRC_MAC_TYPE_MAX	lib/lldp/lldp-const.h	227;"	d
LLDP_BOND_SLAVE_SRC_MAC_TYPE_REAL	lib/lldp/lldp-const.h	223;"	d
LLDP_BOND_SLAVE_SRC_MAC_TYPE_UNKNOWN	lib/lldp/lldp-const.h	222;"	d
LLDP_BOND_SLAVE_SRC_MAC_TYPE_ZERO	lib/lldp/lldp-const.h	224;"	d
LLDP_CAP_BRIDGE	lib/lldp/lldp-const.h	136;"	d
LLDP_CAP_DOCSIS	lib/lldp/lldp-const.h	140;"	d
LLDP_CAP_OTHER	lib/lldp/lldp-const.h	134;"	d
LLDP_CAP_REPEATER	lib/lldp/lldp-const.h	135;"	d
LLDP_CAP_ROUTER	lib/lldp/lldp-const.h	138;"	d
LLDP_CAP_STATION	lib/lldp/lldp-const.h	141;"	d
LLDP_CAP_TELEPHONE	lib/lldp/lldp-const.h	139;"	d
LLDP_CAP_WLAN	lib/lldp/lldp-const.h	137;"	d
LLDP_CHASSISID_SUBTYPE_ADDR	lib/lldp/lldp-const.h	31;"	d
LLDP_CHASSISID_SUBTYPE_CHASSIS	lib/lldp/lldp-const.h	27;"	d
LLDP_CHASSISID_SUBTYPE_IFALIAS	lib/lldp/lldp-const.h	28;"	d
LLDP_CHASSISID_SUBTYPE_IFNAME	lib/lldp/lldp-const.h	32;"	d
LLDP_CHASSISID_SUBTYPE_LLADDR	lib/lldp/lldp-const.h	30;"	d
LLDP_CHASSISID_SUBTYPE_LOCAL	lib/lldp/lldp-const.h	33;"	d
LLDP_CHASSISID_SUBTYPE_PORT	lib/lldp/lldp-const.h	29;"	d
LLDP_CHASSIS_TTL	lib/ovs-lldp.c	56;"	d	file:
LLDP_DEFAULT_TRANSMIT_INTERVAL_MS	lib/ovs-lldp.h	32;"	d
LLDP_DOT3_LINK_AUTONEG_1000BASE_T	lib/lldp/lldp-const.h	130;"	d
LLDP_DOT3_LINK_AUTONEG_1000BASE_TFD	lib/lldp/lldp-const.h	131;"	d
LLDP_DOT3_LINK_AUTONEG_1000BASE_X	lib/lldp/lldp-const.h	128;"	d
LLDP_DOT3_LINK_AUTONEG_1000BASE_XFD	lib/lldp/lldp-const.h	129;"	d
LLDP_DOT3_LINK_AUTONEG_100BASE_T2	lib/lldp/lldp-const.h	122;"	d
LLDP_DOT3_LINK_AUTONEG_100BASE_T2FD	lib/lldp/lldp-const.h	123;"	d
LLDP_DOT3_LINK_AUTONEG_100BASE_T4	lib/lldp/lldp-const.h	119;"	d
LLDP_DOT3_LINK_AUTONEG_100BASE_TX	lib/lldp/lldp-const.h	120;"	d
LLDP_DOT3_LINK_AUTONEG_100BASE_TXFD	lib/lldp/lldp-const.h	121;"	d
LLDP_DOT3_LINK_AUTONEG_10BASET_FD	lib/lldp/lldp-const.h	118;"	d
LLDP_DOT3_LINK_AUTONEG_10BASE_T	lib/lldp/lldp-const.h	117;"	d
LLDP_DOT3_LINK_AUTONEG_FDX_APAUSE	lib/lldp/lldp-const.h	125;"	d
LLDP_DOT3_LINK_AUTONEG_FDX_BPAUSE	lib/lldp/lldp-const.h	127;"	d
LLDP_DOT3_LINK_AUTONEG_FDX_PAUSE	lib/lldp/lldp-const.h	124;"	d
LLDP_DOT3_LINK_AUTONEG_FDX_SPAUSE	lib/lldp/lldp-const.h	126;"	d
LLDP_DOT3_LINK_AUTONEG_OTHER	lib/lldp/lldp-const.h	116;"	d
LLDP_DOT3_MAU_1000BASECXFD	lib/lldp/lldp-const.h	74;"	d
LLDP_DOT3_MAU_1000BASECXHD	lib/lldp/lldp-const.h	73;"	d
LLDP_DOT3_MAU_1000BASELXFD	lib/lldp/lldp-const.h	70;"	d
LLDP_DOT3_MAU_1000BASELXHD	lib/lldp/lldp-const.h	69;"	d
LLDP_DOT3_MAU_1000BASESXFD	lib/lldp/lldp-const.h	72;"	d
LLDP_DOT3_MAU_1000BASESXHD	lib/lldp/lldp-const.h	71;"	d
LLDP_DOT3_MAU_1000BASETFD	lib/lldp/lldp-const.h	76;"	d
LLDP_DOT3_MAU_1000BASETHD	lib/lldp/lldp-const.h	75;"	d
LLDP_DOT3_MAU_1000BASEXFD	lib/lldp/lldp-const.h	68;"	d
LLDP_DOT3_MAU_1000BASEXHD	lib/lldp/lldp-const.h	67;"	d
LLDP_DOT3_MAU_100BASEFXFD	lib/lldp/lldp-const.h	64;"	d
LLDP_DOT3_MAU_100BASEFXHD	lib/lldp/lldp-const.h	63;"	d
LLDP_DOT3_MAU_100BASET2FD	lib/lldp/lldp-const.h	66;"	d
LLDP_DOT3_MAU_100BASET2HD	lib/lldp/lldp-const.h	65;"	d
LLDP_DOT3_MAU_100BASETXFD	lib/lldp/lldp-const.h	62;"	d
LLDP_DOT3_MAU_100BASETXHD	lib/lldp/lldp-const.h	61;"	d
LLDP_DOT3_MAU_10BASE2	lib/lldp/lldp-const.h	50;"	d
LLDP_DOT3_MAU_10BASE5	lib/lldp/lldp-const.h	48;"	d
LLDP_DOT3_MAU_10BASEFB	lib/lldp/lldp-const.h	53;"	d
LLDP_DOT3_MAU_10BASEFL	lib/lldp/lldp-const.h	54;"	d
LLDP_DOT3_MAU_10BASEFLFD	lib/lldp/lldp-const.h	59;"	d
LLDP_DOT3_MAU_10BASEFLHD	lib/lldp/lldp-const.h	58;"	d
LLDP_DOT3_MAU_10BASEFP	lib/lldp/lldp-const.h	52;"	d
LLDP_DOT3_MAU_10BASET	lib/lldp/lldp-const.h	51;"	d
LLDP_DOT3_MAU_10BASET4	lib/lldp/lldp-const.h	60;"	d
LLDP_DOT3_MAU_10BASETFD	lib/lldp/lldp-const.h	57;"	d
LLDP_DOT3_MAU_10BASETHD	lib/lldp/lldp-const.h	56;"	d
LLDP_DOT3_MAU_10BROAD36	lib/lldp/lldp-const.h	55;"	d
LLDP_DOT3_MAU_10GIGBASEER	lib/lldp/lldp-const.h	80;"	d
LLDP_DOT3_MAU_10GIGBASEEW	lib/lldp/lldp-const.h	84;"	d
LLDP_DOT3_MAU_10GIGBASELR	lib/lldp/lldp-const.h	81;"	d
LLDP_DOT3_MAU_10GIGBASELW	lib/lldp/lldp-const.h	85;"	d
LLDP_DOT3_MAU_10GIGBASELX4	lib/lldp/lldp-const.h	78;"	d
LLDP_DOT3_MAU_10GIGBASER	lib/lldp/lldp-const.h	79;"	d
LLDP_DOT3_MAU_10GIGBASESR	lib/lldp/lldp-const.h	82;"	d
LLDP_DOT3_MAU_10GIGBASESW	lib/lldp/lldp-const.h	86;"	d
LLDP_DOT3_MAU_10GIGBASEW	lib/lldp/lldp-const.h	83;"	d
LLDP_DOT3_MAU_10GIGBASEX	lib/lldp/lldp-const.h	77;"	d
LLDP_DOT3_MAU_AUI	lib/lldp/lldp-const.h	47;"	d
LLDP_DOT3_MAU_FOIRL	lib/lldp/lldp-const.h	49;"	d
LLDP_DOT3_POWERPAIRS_SIGNAL	lib/lldp/lldp-const.h	93;"	d
LLDP_DOT3_POWERPAIRS_SPARE	lib/lldp/lldp-const.h	94;"	d
LLDP_DOT3_POWER_8023AT_OFF	lib/lldp/lldp-const.h	97;"	d
LLDP_DOT3_POWER_8023AT_TYPE1	lib/lldp/lldp-const.h	98;"	d
LLDP_DOT3_POWER_8023AT_TYPE2	lib/lldp/lldp-const.h	99;"	d
LLDP_DOT3_POWER_PD	lib/lldp/lldp-const.h	90;"	d
LLDP_DOT3_POWER_PRIO_CRITICAL	lib/lldp/lldp-const.h	111;"	d
LLDP_DOT3_POWER_PRIO_HIGH	lib/lldp/lldp-const.h	112;"	d
LLDP_DOT3_POWER_PRIO_LOW	lib/lldp/lldp-const.h	113;"	d
LLDP_DOT3_POWER_PRIO_UNKNOWN	lib/lldp/lldp-const.h	110;"	d
LLDP_DOT3_POWER_PSE	lib/lldp/lldp-const.h	89;"	d
LLDP_DOT3_POWER_SOURCE_BACKUP	lib/lldp/lldp-const.h	105;"	d
LLDP_DOT3_POWER_SOURCE_BOTH	lib/lldp/lldp-const.h	107;"	d
LLDP_DOT3_POWER_SOURCE_LOCAL	lib/lldp/lldp-const.h	106;"	d
LLDP_DOT3_POWER_SOURCE_PRIMARY	lib/lldp/lldp-const.h	103;"	d
LLDP_DOT3_POWER_SOURCE_PSE	lib/lldp/lldp-const.h	104;"	d
LLDP_DOT3_POWER_SOURCE_UNKNOWN	lib/lldp/lldp-const.h	102;"	d
LLDP_MED_APPTYPE_GUESTVOICE	lib/lldp/lldp-const.h	164;"	d
LLDP_MED_APPTYPE_GUESTVOICESIGNAL	lib/lldp/lldp-const.h	165;"	d
LLDP_MED_APPTYPE_LAST	lib/lldp/lldp-const.h	170;"	d
LLDP_MED_APPTYPE_SOFTPHONEVOICE	lib/lldp/lldp-const.h	166;"	d
LLDP_MED_APPTYPE_UNDEFINED	lib/lldp/lldp-const.h	161;"	d
LLDP_MED_APPTYPE_VIDEOCONFERENCE	lib/lldp/lldp-const.h	167;"	d
LLDP_MED_APPTYPE_VIDEOSIGNAL	lib/lldp/lldp-const.h	169;"	d
LLDP_MED_APPTYPE_VIDEOSTREAM	lib/lldp/lldp-const.h	168;"	d
LLDP_MED_APPTYPE_VOICE	lib/lldp/lldp-const.h	162;"	d
LLDP_MED_APPTYPE_VOICESIGNAL	lib/lldp/lldp-const.h	163;"	d
LLDP_MED_CAP_CAP	lib/lldp/lldp-const.h	204;"	d
LLDP_MED_CAP_IV	lib/lldp/lldp-const.h	209;"	d
LLDP_MED_CAP_LOCATION	lib/lldp/lldp-const.h	206;"	d
LLDP_MED_CAP_MDI_PD	lib/lldp/lldp-const.h	208;"	d
LLDP_MED_CAP_MDI_PSE	lib/lldp/lldp-const.h	207;"	d
LLDP_MED_CAP_POLICY	lib/lldp/lldp-const.h	205;"	d
LLDP_MED_CLASS_I	lib/lldp/lldp-const.h	155;"	d
LLDP_MED_CLASS_II	lib/lldp/lldp-const.h	156;"	d
LLDP_MED_CLASS_III	lib/lldp/lldp-const.h	157;"	d
LLDP_MED_LOCATION_ALTITUDE_UNIT_FLOOR	lib/lldp/lldp-const.h	183;"	d
LLDP_MED_LOCATION_ALTITUDE_UNIT_METER	lib/lldp/lldp-const.h	182;"	d
LLDP_MED_LOCATION_GEOID_NAD83	lib/lldp/lldp-const.h	179;"	d
LLDP_MED_LOCATION_GEOID_NAD83_MLLW	lib/lldp/lldp-const.h	180;"	d
LLDP_MED_LOCATION_GEOID_WGS84	lib/lldp/lldp-const.h	178;"	d
LLDP_MED_LOCFORMAT_CIVIC	lib/lldp/lldp-const.h	174;"	d
LLDP_MED_LOCFORMAT_COORD	lib/lldp/lldp-const.h	173;"	d
LLDP_MED_LOCFORMAT_ELIN	lib/lldp/lldp-const.h	175;"	d
LLDP_MED_LOCFORMAT_LAST	lib/lldp/lldp-const.h	176;"	d
LLDP_MED_NETWORK_DEVICE	lib/lldp/lldp-const.h	158;"	d
LLDP_MED_POW_PRIO_CRITICAL	lib/lldp/lldp-const.h	199;"	d
LLDP_MED_POW_PRIO_HIGH	lib/lldp/lldp-const.h	200;"	d
LLDP_MED_POW_PRIO_LOW	lib/lldp/lldp-const.h	201;"	d
LLDP_MED_POW_PRIO_UNKNOWN	lib/lldp/lldp-const.h	198;"	d
LLDP_MED_POW_SOURCE_BACKUP	lib/lldp/lldp-const.h	192;"	d
LLDP_MED_POW_SOURCE_BOTH	lib/lldp/lldp-const.h	196;"	d
LLDP_MED_POW_SOURCE_LOCAL	lib/lldp/lldp-const.h	195;"	d
LLDP_MED_POW_SOURCE_PRIMARY	lib/lldp/lldp-const.h	191;"	d
LLDP_MED_POW_SOURCE_PSE	lib/lldp/lldp-const.h	194;"	d
LLDP_MED_POW_SOURCE_RESERVED	lib/lldp/lldp-const.h	193;"	d
LLDP_MED_POW_SOURCE_UNKNOWN	lib/lldp/lldp-const.h	190;"	d
LLDP_MED_POW_TYPE_PD	lib/lldp/lldp-const.h	187;"	d
LLDP_MED_POW_TYPE_PSE	lib/lldp/lldp-const.h	186;"	d
LLDP_MED_POW_TYPE_RESERVED	lib/lldp/lldp-const.h	188;"	d
LLDP_MGMT_ADDR_IP4	lib/lldp/lldp-const.h	148;"	d
LLDP_MGMT_ADDR_IP6	lib/lldp/lldp-const.h	149;"	d
LLDP_MGMT_ADDR_NONE	lib/lldp/lldp-const.h	147;"	d
LLDP_MGMT_IFACE_IFINDEX	lib/lldp/lldp-const.h	152;"	d
LLDP_MGMT_IFACE_SYSPORT	lib/lldp/lldp-const.h	153;"	d
LLDP_MGMT_IFACE_UNKNOWN	lib/lldp/lldp-const.h	151;"	d
LLDP_MULTICAST_ADDR	lib/lldp/lldp-tlv.h	21;"	d
LLDP_PORTID_SUBTYPE_ADDR	lib/lldp/lldp-const.h	40;"	d
LLDP_PORTID_SUBTYPE_AGENTCID	lib/lldp/lldp-const.h	42;"	d
LLDP_PORTID_SUBTYPE_IFALIAS	lib/lldp/lldp-const.h	37;"	d
LLDP_PORTID_SUBTYPE_IFNAME	lib/lldp/lldp-const.h	41;"	d
LLDP_PORTID_SUBTYPE_LLADDR	lib/lldp/lldp-const.h	39;"	d
LLDP_PORTID_SUBTYPE_LOCAL	lib/lldp/lldp-const.h	43;"	d
LLDP_PORTID_SUBTYPE_MAX	lib/lldp/lldp-const.h	44;"	d
LLDP_PORTID_SUBTYPE_PORT	lib/lldp/lldp-const.h	38;"	d
LLDP_PORTID_SUBTYPE_UNKNOWN	lib/lldp/lldp-const.h	36;"	d
LLDP_PPVID_CAP_ENABLED	lib/lldp/lldp-const.h	144;"	d
LLDP_PPVID_CAP_SUPPORTED	lib/lldp/lldp-const.h	143;"	d
LLDP_PROTOCOL_ID	lib/ovs-lldp.c	53;"	d	file:
LLDP_PROTOCOL_VERSION	lib/ovs-lldp.c	54;"	d	file:
LLDP_TLV_AA_ELEMENT_SUBTYPE	lib/lldp/lldp-tlv.h	64;"	d
LLDP_TLV_AA_ELEM_CONN_TYPE_MLT	lib/lldp/lldp-tlv.h	85;"	d
LLDP_TLV_AA_ELEM_CONN_TYPE_SINGLE	lib/lldp/lldp-tlv.h	84;"	d
LLDP_TLV_AA_ELEM_CONN_TYPE_SLT	lib/lldp/lldp-tlv.h	86;"	d
LLDP_TLV_AA_ELEM_CONN_TYPE_SMLT	lib/lldp/lldp-tlv.h	87;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_IP_CAMERA	lib/lldp/lldp-tlv.h	78;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_IP_PHONE	lib/lldp/lldp-tlv.h	77;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_IP_VIDEO	lib/lldp/lldp-tlv.h	79;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_ROUTER	lib/lldp/lldp-tlv.h	76;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_SECURITY_DEVICE	lib/lldp/lldp-tlv.h	80;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_SERVER_ENDPOINT	lib/lldp/lldp-tlv.h	82;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_SWITCH	lib/lldp/lldp-tlv.h	75;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_VIRTUAL_SWITCH	lib/lldp/lldp-tlv.h	81;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_WIRELESS_ACCESS_POINT_TYPE1	lib/lldp/lldp-tlv.h	73;"	d
LLDP_TLV_AA_ELEM_TYPE_CLIENT_WIRELESS_ACCESS_POINT_TYPE2	lib/lldp/lldp-tlv.h	74;"	d
LLDP_TLV_AA_ELEM_TYPE_PROXY	lib/lldp/lldp-tlv.h	70;"	d
LLDP_TLV_AA_ELEM_TYPE_PROXY_NO_AUTH	lib/lldp/lldp-tlv.h	72;"	d
LLDP_TLV_AA_ELEM_TYPE_SERVER	lib/lldp/lldp-tlv.h	69;"	d
LLDP_TLV_AA_ELEM_TYPE_SERV_NO_AUTH	lib/lldp/lldp-tlv.h	71;"	d
LLDP_TLV_AA_ELEM_TYPE_UNKNOWN	lib/lldp/lldp-tlv.h	68;"	d
LLDP_TLV_AA_ISID_VLAN_ASGNS_SUBTYPE	lib/lldp/lldp-tlv.h	65;"	d
LLDP_TLV_AA_ISID_VLAN_DIGEST_LENGTH	lib/lldp/lldp-tlv.h	66;"	d
LLDP_TLV_CHASSIS_ID	lib/lldp/lldp-tlv.h	26;"	d
LLDP_TLV_DOT1_PI	lib/lldp/lldp-tlv.h	45;"	d
LLDP_TLV_DOT1_PPVID	lib/lldp/lldp-tlv.h	43;"	d
LLDP_TLV_DOT1_PVID	lib/lldp/lldp-tlv.h	42;"	d
LLDP_TLV_DOT1_VLANNAME	lib/lldp/lldp-tlv.h	44;"	d
LLDP_TLV_DOT3_LA	lib/lldp/lldp-tlv.h	49;"	d
LLDP_TLV_DOT3_MAC	lib/lldp/lldp-tlv.h	47;"	d
LLDP_TLV_DOT3_MFS	lib/lldp/lldp-tlv.h	50;"	d
LLDP_TLV_DOT3_POWER	lib/lldp/lldp-tlv.h	48;"	d
LLDP_TLV_END	lib/lldp/lldp-tlv.h	25;"	d
LLDP_TLV_MED_CAP	lib/lldp/lldp-tlv.h	52;"	d
LLDP_TLV_MED_IV_ASSET	lib/lldp/lldp-tlv.h	62;"	d
LLDP_TLV_MED_IV_FW	lib/lldp/lldp-tlv.h	57;"	d
LLDP_TLV_MED_IV_HW	lib/lldp/lldp-tlv.h	56;"	d
LLDP_TLV_MED_IV_MANUF	lib/lldp/lldp-tlv.h	60;"	d
LLDP_TLV_MED_IV_MODEL	lib/lldp/lldp-tlv.h	61;"	d
LLDP_TLV_MED_IV_SN	lib/lldp/lldp-tlv.h	59;"	d
LLDP_TLV_MED_IV_SW	lib/lldp/lldp-tlv.h	58;"	d
LLDP_TLV_MED_LOCATION	lib/lldp/lldp-tlv.h	54;"	d
LLDP_TLV_MED_MDI	lib/lldp/lldp-tlv.h	55;"	d
LLDP_TLV_MED_POLICY	lib/lldp/lldp-tlv.h	53;"	d
LLDP_TLV_MGMT_ADDR	lib/lldp/lldp-tlv.h	33;"	d
LLDP_TLV_ORG	lib/lldp/lldp-tlv.h	34;"	d
LLDP_TLV_ORG_AVAYA	lib/lldp/lldp-tlv.h	39;"	d
LLDP_TLV_ORG_DCBX	lib/lldp/lldp-tlv.h	40;"	d
LLDP_TLV_ORG_DOT1	lib/lldp/lldp-tlv.h	36;"	d
LLDP_TLV_ORG_DOT3	lib/lldp/lldp-tlv.h	37;"	d
LLDP_TLV_ORG_MED	lib/lldp/lldp-tlv.h	38;"	d
LLDP_TLV_PORT_DESCR	lib/lldp/lldp-tlv.h	29;"	d
LLDP_TLV_PORT_ID	lib/lldp/lldp-tlv.h	27;"	d
LLDP_TLV_SYSTEM_CAP	lib/lldp/lldp-tlv.h	32;"	d
LLDP_TLV_SYSTEM_DESCR	lib/lldp/lldp-tlv.h	31;"	d
LLDP_TLV_SYSTEM_NAME	lib/lldp/lldp-tlv.h	30;"	d
LLDP_TLV_TTL	lib/lldp/lldp-tlv.h	28;"	d
LLDP_TYPE_CONFIG	lib/ovs-lldp.c	55;"	d	file:
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	datapath/Makefile	/^LN_S = ln -s$/;"	m
LOCKFILE_H	lib/lockfile.h	17;"	d
LOCK_FUNCTION	lib/ovs-thread.c	55;"	d	file:
LOGDIR	Makefile	/^LOGDIR = ${localstatedir}\/log\/${PACKAGE}$/;"	m
LOGDIR	datapath/Makefile	/^LOGDIR = ${localstatedir}\/log\/${PACKAGE}$/;"	m
LOG_ALERT	include/windows/syslog.h	21;"	d
LOG_AUTH	include/windows/syslog.h	34;"	d
LOG_AUTHPRIV	include/windows/syslog.h	40;"	d
LOG_CRIT	include/windows/syslog.h	22;"	d
LOG_CRON	include/windows/syslog.h	39;"	d
LOG_DAEMON	include/windows/syslog.h	33;"	d
LOG_DEBUG	include/windows/syslog.h	27;"	d
LOG_EMERG	include/windows/syslog.h	20;"	d
LOG_ERR	include/windows/syslog.h	23;"	d
LOG_FTP	include/windows/syslog.h	41;"	d
LOG_INFO	include/windows/syslog.h	26;"	d
LOG_KERN	include/windows/syslog.h	30;"	d
LOG_LOCAL0	include/windows/syslog.h	43;"	d
LOG_LOCAL1	include/windows/syslog.h	44;"	d
LOG_LOCAL2	include/windows/syslog.h	45;"	d
LOG_LOCAL3	include/windows/syslog.h	46;"	d
LOG_LOCAL4	include/windows/syslog.h	47;"	d
LOG_LOCAL5	include/windows/syslog.h	48;"	d
LOG_LOCAL6	include/windows/syslog.h	49;"	d
LOG_LOCAL7	include/windows/syslog.h	50;"	d
LOG_LPR	include/windows/syslog.h	36;"	d
LOG_MAIL	include/windows/syslog.h	32;"	d
LOG_NDELAY	include/windows/syslog.h	28;"	d
LOG_NEWS	include/windows/syslog.h	37;"	d
LOG_NOTICE	include/windows/syslog.h	25;"	d
LOG_PIPELINE_LEN	ovn/controller/lflow.h	56;"	d
LOG_SYSLOG	include/windows/syslog.h	35;"	d
LOG_USER	include/windows/syslog.h	31;"	d
LOG_UUCP	include/windows/syslog.h	38;"	d
LOG_WARNING	include/windows/syslog.h	24;"	d
LOSETUP	utilities/bugtool/ovs-bugtool	/^LOSETUP = 'losetup'$/;"	v
LR_fault_status	vtep/vtep-idl.h	/^	char **LR_fault_status;$/;"	m	struct:vteprec_logical_router
LS	utilities/bugtool/ovs-bugtool	/^LS = 'ls'$/;"	v
LSPCI	utilities/bugtool/ovs-bugtool	/^LSPCI = 'lspci'$/;"	v
LSW_FLOOD	lib/learning-switch.h	/^    LSW_FLOOD,                  \/* Always use OFPP_FLOOD. *\/$/;"	e	enum:lswitch_mode
LSW_LEARN	lib/learning-switch.h	/^    LSW_LEARN                   \/* Learn MACs at controller. *\/$/;"	e	enum:lswitch_mode
LSW_NORMAL	lib/learning-switch.h	/^    LSW_NORMAL,                 \/* Always use OFPP_NORMAL. *\/$/;"	e	enum:lswitch_mode
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	datapath/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LT_AGE	Makefile	/^LT_AGE = 0$/;"	m
LT_AGE	datapath/Makefile	/^LT_AGE = 0$/;"	m
LT_CURRENT	Makefile	/^LT_CURRENT = 1$/;"	m
LT_CURRENT	datapath/Makefile	/^LT_CURRENT = 1$/;"	m
LT_OBJDIR	config.h	180;"	d
LT_REVISION	Makefile	/^LT_REVISION = 0$/;"	m
LT_REVISION	datapath/Makefile	/^LT_REVISION = 0$/;"	m
LVS_ALIGNLEFT	datapath-windows/ovsext/resource.h	1429;"	d
LVS_ALIGNMASK	datapath-windows/ovsext/resource.h	1435;"	d
LVS_ALIGNTOP	datapath-windows/ovsext/resource.h	21;"	d
LVS_AUTOARRANGE	datapath-windows/ovsext/resource.h	1036;"	d
LVS_EDITLABELS	datapath-windows/ovsext/resource.h	1093;"	d
LVS_ICON	datapath-windows/ovsext/resource.h	20;"	d
LVS_LIST	datapath-windows/ovsext/resource.h	332;"	d
LVS_NOCOLUMNHEADER	datapath-windows/ovsext/resource.h	1454;"	d
LVS_NOLABELWRAP	datapath-windows/ovsext/resource.h	853;"	d
LVS_NOSCROLL	datapath-windows/ovsext/resource.h	1447;"	d
LVS_NOSORTHEADER	datapath-windows/ovsext/resource.h	1537;"	d
LVS_OWNERDATA	datapath-windows/ovsext/resource.h	1441;"	d
LVS_OWNERDRAWFIXED	datapath-windows/ovsext/resource.h	1222;"	d
LVS_REPORT	datapath-windows/ovsext/resource.h	77;"	d
LVS_SHAREIMAGELISTS	datapath-windows/ovsext/resource.h	723;"	d
LVS_SHOWSELALWAYS	datapath-windows/ovsext/resource.h	461;"	d
LVS_SINGLESEL	datapath-windows/ovsext/resource.h	371;"	d
LVS_SMALLICON	datapath-windows/ovsext/resource.h	257;"	d
LVS_SORTASCENDING	datapath-windows/ovsext/resource.h	558;"	d
LVS_SORTDESCENDING	datapath-windows/ovsext/resource.h	643;"	d
LVS_TYPEMASK	datapath-windows/ovsext/resource.h	333;"	d
LVS_TYPESTYLEMASK	datapath-windows/ovsext/resource.h	1560;"	d
LWS_IGNORERETURN	datapath-windows/ovsext/resource.h	256;"	d
LWS_NOPREFIX	datapath-windows/ovsext/resource.h	370;"	d
LWS_RIGHT	datapath-windows/ovsext/resource.h	642;"	d
LWS_TRANSPARENT	datapath-windows/ovsext/resource.h	76;"	d
LWS_USECUSTOMTEXT	datapath-windows/ovsext/resource.h	557;"	d
LWS_USEVISUALSTYLE	datapath-windows/ovsext/resource.h	460;"	d
ListEntry	datapath-windows/ovsext/Flow.h	/^    LIST_ENTRY ListEntry;            \/\/ In Datapath's flowTable.$/;"	m	struct:_OvsFlow
Listening	python/ovs/reconnect.py	/^    class Listening(object):$/;"	c	class:Reconnect
Logical_Switch	vtep/ovs-vtep	/^class Logical_Switch(object):$/;"	c
LoopingCall	python/ovstest/udp.py	/^from twisted.internet.task import LoopingCall$/;"	i
Lswitches	vtep/ovs-vtep	/^Lswitches = {}$/;"	v
MAC	vtep/vtep-idl.h	/^	char *MAC;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_mcast_macs_local
MAC	vtep/vtep-idl.h	/^	char *MAC;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_mcast_macs_remote
MAC	vtep/vtep-idl.h	/^	char *MAC;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_ucast_macs_local
MAC	vtep/vtep-idl.h	/^	char *MAC;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_ucast_macs_remote
MAC_DEFAULT_MAX	lib/mac-learning.h	92;"	d
MAC_ENTRY_DEFAULT_IDLE_TIME	lib/mac-learning.h	95;"	d
MAC_GRAT_ARP_LOCK_TIME	lib/mac-learning.h	99;"	d
MAC_LEARNING_H	lib/mac-learning.h	18;"	d
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	datapath/Makefile	/^MAKEINFO = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/missing makeinfo$/;"	m
MALLOC_LIKE	lib/compiler.h	24;"	d
MALLOC_LIKE	lib/compiler.h	29;"	d
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	datapath/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANS	Makefile	/^MANS = $(dist_man_MANS) $(man_MANS)$/;"	m
MAN_FRAGMENTS	Makefile	/^MAN_FRAGMENTS = lib\/common.man lib\/common-syn.man \\$/;"	m
MAN_ROOTS	Makefile	/^MAN_ROOTS = utilities\/ovs-appctl.8.in utilities\/ovs-benchmark.1.in \\$/;"	m
MAP_1	lib/flow.h	386;"	d
MAP_BITS	lib/dpif-netdev.c	3963;"	d	file:
MAP_FOR_EACH_INDEX	lib/flow.h	392;"	d
MAP_IS_SET	lib/flow.h	389;"	d
MAP_MAX	lib/flow.h	387;"	d
MAP_T_BITS	lib/flow.h	385;"	d
MASK	lib/odp-util.c	2003;"	d	file:
MASKED	datapath/actions.c	216;"	d	file:
MASKED	datapath/linux/actions.c	216;"	d	file:
MASK_ARRAY_SIZE_MIN	datapath/flow_table.c	50;"	d	file:
MASK_ARRAY_SIZE_MIN	datapath/linux/flow_table.c	50;"	d	file:
MATCH_CATCHALL_INITIALIZER	lib/match.h	41;"	d
MATCH_H	lib/match.h	18;"	d
MAX	lib/util.h	173;"	d
MAXIMUM_MONITORS	lib/rconn.c	138;"	d	file:
MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID	datapath-windows/ovsext/resource.h	543;"	d
MAXTTL	include/windows/netinet/ip.h	21;"	d
MAX_ACTIONS_BUFSIZE	datapath/flow_netlink.c	1578;"	d	file:
MAX_ACTIONS_BUFSIZE	datapath/linux/flow_netlink.c	1578;"	d	file:
MAX_BITS	tests/test-bitmap.c	/^enum { MAX_BITS = 20 * BITMAP_ULONG_BITS };$/;"	e	enum:__anon224	file:
MAX_CBS	lib/async-append-aio.c	/^enum { MAX_CBS = ROUND_DOWN_POW2(BUFFER_SIZE \/ sizeof(struct aiocb)) };$/;"	e	enum:__anon82	file:
MAX_CT_ZONES	ovn/controller/ovn-controller.h	24;"	d
MAX_DATA_RECORD_LEN	ofproto/ofproto-dpif-ipfix.c	372;"	d	file:
MAX_DATA_SET_LEN	ofproto/ofproto-dpif-ipfix.c	380;"	d	file:
MAX_ERRMSG_LEN	lib/sflow_agent.c	467;"	d	file:
MAX_FLOWS	lib/dpif-netdev.c	/^enum { MAX_FLOWS = 65536 };     \/* Maximum number of flows in flow table. *\/$/;"	e	enum:__anon85	file:
MAX_FLOW_KEY_LEN	ofproto/ofproto-dpif-ipfix.c	361;"	d	file:
MAX_GRE_PROTO_PRIORITY	datapath/linux/compat/include/net/gre.h	16;"	d
MAX_GROUP_NAME_LEN	lib/ofp-util.h	/^enum { MAX_GROUP_NAME_LEN = INT_STRLEN(uint32_t) };$/;"	e	enum:__anon131
MAX_HEIGHT	python/ovs/json.py	/^    MAX_HEIGHT = 1000$/;"	v	class:Parser
MAX_HOOKS	lib/fatal-signal.c	57;"	d	file:
MAX_INTERNAL_RESUBMITS	ofproto/ofproto-dpif-xlate.c	71;"	d	file:
MAX_IOVS	lib/netlink-socket.c	96;"	d	file:
MAX_IP_TOTAL_LEN	datapath-windows/ovsext/Stt.h	23;"	d
MAX_KEYS	lib/ovs-thread.c	592;"	d	file:
MAX_LINKS	datapath-windows/ovsext/Netlink/NetlinkProto.h	68;"	d
MAX_LINKS	lib/netlink-protocol.h	64;"	d
MAX_LISTENERS	utilities/ovs-testcontroller.c	51;"	d	file:
MAX_LIVENESS_RECURSION	ofproto/ofproto-dpif-xlate.c	1404;"	d	file:
MAX_MESSAGE_LEN	ofproto/ofproto-dpif-ipfix.c	386;"	d	file:
MAX_MIRRORS	ofproto/ofproto-dpif-mirror.h	22;"	d
MAX_NB_MBUF	lib/netdev-dpdk.c	85;"	d	file:
MAX_NUMA_NODES	lib/ovs-numa.c	59;"	d	file:
MAX_PORTS	lib/dpif-netlink.c	/^enum { MAX_PORTS = USHRT_MAX };$/;"	e	enum:__anon89	file:
MAX_PORTS	tests/test-rstp.c	16;"	d	file:
MAX_QUEUE_LENGTH	ofproto/ofproto-dpif-upcall.c	43;"	d	file:
MAX_RECIRC_DEPTH	lib/dpif-netdev.c	77;"	d	file:
MAX_RESUBMITS	ofproto/ofproto-dpif-xlate.c	76;"	d	file:
MAX_RESUBMIT_RECURSION	ofproto/ofproto-dpif-xlate.c	70;"	d	file:
MAX_RSTP_ITERATIONS	lib/rstp-state-machines.c	196;"	d	file:
MAX_SIZE	utilities/bugtool/ovs-bugtool	/^MAX_SIZE = 3$/;"	v
MAX_SLAVES	tests/test-bundle.c	28;"	d	file:
MAX_SOCKETS	utilities/ovs-benchmark.c	38;"	d	file:
MAX_SWITCHES	utilities/ovs-testcontroller.c	50;"	d	file:
MAX_TIME	utilities/bugtool/ovs-bugtool	/^MAX_TIME = 5$/;"	v
MAX_TUNNEL_KEY_LEN	ofproto/ofproto-dpif-ipfix.c	359;"	d	file:
MAX_TX_QUEUE_LEN	lib/netdev-dpdk.c	/^enum { MAX_TX_QUEUE_LEN = 384 };$/;"	e	enum:__anon106	file:
MAX_UFID_LENGTH	datapath/flow.h	199;"	d
MAX_UN_LEN	lib/socket-util-unix.c	50;"	d	file:
MAX_VERSION_STR_SIZE	lib/dpif-netlink.c	2259;"	d	file:
MA_ACTIVATE	datapath-windows/ovsext/resource.h	60;"	d
MA_ACTIVATEANDEAT	datapath-windows/ovsext/resource.h	241;"	d
MA_DIR	debian/rules.modules	/^MA_DIR ?= \/usr\/share\/modass$/;"	m
MA_NOACTIVATE	datapath-windows/ovsext/resource.h	327;"	d
MA_NOACTIVATEANDEAT	datapath-windows/ovsext/resource.h	357;"	d
MB	utilities/bugtool/ovs-bugtool	/^MB = 1024 * 1024$/;"	v
MBUF_SIZE	lib/netdev-dpdk.c	78;"	d	file:
MBUF_SIZE_DRIVER	lib/netdev-dpdk.c	75;"	d	file:
MBUF_SIZE_MTU	lib/netdev-dpdk.c	72;"	d	file:
MCAST_DEFAULT_MAX_ENTRIES	lib/mcast-snooping.h	34;"	d
MCAST_ENTRY_DEFAULT_IDLE_TIME	lib/mcast-snooping.h	37;"	d
MCAST_MROUTER_PORT_IDLE_TIME	lib/mcast-snooping.h	40;"	d
MCAST_SNOOPING_H	lib/mcast-snooping.h	20;"	d
MCS_DAYSTATE	datapath-windows/ovsext/resource.h	82;"	d
MCS_MULTISELECT	datapath-windows/ovsext/resource.h	263;"	d
MCS_NOSELCHANGEONNAV	datapath-windows/ovsext/resource.h	1040;"	d
MCS_NOTODAY	datapath-windows/ovsext/resource.h	562;"	d
MCS_NOTODAYCIRCLE	datapath-windows/ovsext/resource.h	466;"	d
MCS_NOTRAILINGDATES	datapath-windows/ovsext/resource.h	727;"	d
MCS_SHORTDAYSOFWEEK	datapath-windows/ovsext/resource.h	857;"	d
MCS_WEEKNUMBERS	datapath-windows/ovsext/resource.h	376;"	d
MC_FLOOD	ovn/northd/ovn-northd.c	744;"	d	file:
MC_HASH_ENTRIES	datapath/flow_table.c	54;"	d	file:
MC_HASH_ENTRIES	datapath/linux/flow_table.c	54;"	d	file:
MC_HASH_SEGS	datapath/flow_table.c	55;"	d	file:
MC_HASH_SEGS	datapath/linux/flow_table.c	55;"	d	file:
MC_HASH_SHIFT	datapath/flow_table.c	53;"	d	file:
MC_HASH_SHIFT	datapath/linux/flow_table.c	53;"	d	file:
MC_UNKNOWN	ovn/northd/ovn-northd.c	747;"	d	file:
MD5SUM	utilities/bugtool/ovs-bugtool	/^MD5SUM = 'md5sum'$/;"	v
MEMBER_SIZEOF	lib/util.h	203;"	d
MEMORY_CHECK_INTERVAL	lib/memory.c	33;"	d	file:
MEMORY_H	lib/memory.h	18;"	d
MEM_ALIGN	datapath-windows/ovsext/BufferMgmt.h	20;"	d
MEM_ALIGN	lib/util.c	180;"	d	file:
MEM_ALIGN_SIZE	datapath-windows/ovsext/BufferMgmt.h	21;"	d
MESSAGE_AGE_INCREMENT	lib/stp.c	174;"	d	file:
META_FLOW_H	lib/meta-flow.h	18;"	d
ME_DOM	ovsdb/mutation.c	/^    ME_DOM,$/;"	e	enum:ovsdb_mutation_scalar_error	file:
ME_OK	ovsdb/mutation.c	/^    ME_OK,$/;"	e	enum:ovsdb_mutation_scalar_error	file:
ME_RANGE	ovsdb/mutation.c	/^    ME_RANGE$/;"	e	enum:ovsdb_mutation_scalar_error	file:
MFF_ACTSET_OUTPUT	lib/meta-flow.h	/^    MFF_ACTSET_OUTPUT,$/;"	e	enum:mf_field_id
MFF_ARP_OP	lib/meta-flow.h	/^    MFF_ARP_OP,$/;"	e	enum:mf_field_id
MFF_ARP_SHA	lib/meta-flow.h	/^    MFF_ARP_SHA,$/;"	e	enum:mf_field_id
MFF_ARP_SPA	lib/meta-flow.h	/^    MFF_ARP_SPA,$/;"	e	enum:mf_field_id
MFF_ARP_THA	lib/meta-flow.h	/^    MFF_ARP_THA,$/;"	e	enum:mf_field_id
MFF_ARP_TPA	lib/meta-flow.h	/^    MFF_ARP_TPA,$/;"	e	enum:mf_field_id
MFF_CONJ_ID	lib/meta-flow.h	/^    MFF_CONJ_ID,$/;"	e	enum:mf_field_id
MFF_CT_LABEL	lib/meta-flow.h	/^    MFF_CT_LABEL,$/;"	e	enum:mf_field_id
MFF_CT_MARK	lib/meta-flow.h	/^    MFF_CT_MARK,$/;"	e	enum:mf_field_id
MFF_CT_STATE	lib/meta-flow.h	/^    MFF_CT_STATE,$/;"	e	enum:mf_field_id
MFF_CT_ZONE	lib/meta-flow.h	/^    MFF_CT_ZONE,$/;"	e	enum:mf_field_id
MFF_DL_VLAN	lib/meta-flow.h	/^    MFF_DL_VLAN,$/;"	e	enum:mf_field_id
MFF_DL_VLAN_PCP	lib/meta-flow.h	/^    MFF_DL_VLAN_PCP,$/;"	e	enum:mf_field_id
MFF_DP_HASH	lib/meta-flow.h	/^    MFF_DP_HASH,$/;"	e	enum:mf_field_id
MFF_ETH_DST	lib/meta-flow.h	/^    MFF_ETH_DST,$/;"	e	enum:mf_field_id
MFF_ETH_SRC	lib/meta-flow.h	/^    MFF_ETH_SRC,$/;"	e	enum:mf_field_id
MFF_ETH_TYPE	lib/meta-flow.h	/^    MFF_ETH_TYPE,$/;"	e	enum:mf_field_id
MFF_ICMPV4_CODE	lib/meta-flow.h	/^    MFF_ICMPV4_CODE,$/;"	e	enum:mf_field_id
MFF_ICMPV4_IDENTIFY	lib/meta-flow.h	/^    MFF_ICMPV4_IDENTIFY,$/;"	e	enum:mf_field_id
MFF_ICMPV4_TYPE	lib/meta-flow.h	/^    MFF_ICMPV4_TYPE,$/;"	e	enum:mf_field_id
MFF_ICMPV6_CODE	lib/meta-flow.h	/^    MFF_ICMPV6_CODE,$/;"	e	enum:mf_field_id
MFF_ICMPV6_TYPE	lib/meta-flow.h	/^    MFF_ICMPV6_TYPE,$/;"	e	enum:mf_field_id
MFF_IN_PORT	lib/meta-flow.h	/^    MFF_IN_PORT,$/;"	e	enum:mf_field_id
MFF_IN_PORT_OXM	lib/meta-flow.h	/^    MFF_IN_PORT_OXM,$/;"	e	enum:mf_field_id
MFF_IPV4_DST	lib/meta-flow.h	/^    MFF_IPV4_DST,$/;"	e	enum:mf_field_id
MFF_IPV4_SRC	lib/meta-flow.h	/^    MFF_IPV4_SRC,$/;"	e	enum:mf_field_id
MFF_IPV6_DST	lib/meta-flow.h	/^    MFF_IPV6_DST,$/;"	e	enum:mf_field_id
MFF_IPV6_LABEL	lib/meta-flow.h	/^    MFF_IPV6_LABEL,$/;"	e	enum:mf_field_id
MFF_IPV6_SRC	lib/meta-flow.h	/^    MFF_IPV6_SRC,$/;"	e	enum:mf_field_id
MFF_IP_DSCP	lib/meta-flow.h	/^    MFF_IP_DSCP,$/;"	e	enum:mf_field_id
MFF_IP_DSCP_SHIFTED	lib/meta-flow.h	/^    MFF_IP_DSCP_SHIFTED,$/;"	e	enum:mf_field_id
MFF_IP_ECN	lib/meta-flow.h	/^    MFF_IP_ECN,$/;"	e	enum:mf_field_id
MFF_IP_FRAG	lib/meta-flow.h	/^    MFF_IP_FRAG,$/;"	e	enum:mf_field_id
MFF_IP_PROTO	lib/meta-flow.h	/^    MFF_IP_PROTO,$/;"	e	enum:mf_field_id
MFF_IP_TTL	lib/meta-flow.h	/^    MFF_IP_TTL,$/;"	e	enum:mf_field_id
MFF_LOG_CT_ZONE	ovn/lib/logical-fields.h	26;"	d
MFF_LOG_DATAPATH	ovn/lib/logical-fields.h	25;"	d
MFF_LOG_INPORT	ovn/lib/logical-fields.h	27;"	d
MFF_LOG_OUTPORT	ovn/lib/logical-fields.h	28;"	d
MFF_LOG_REG	ovn/controller/lflow.c	57;"	d	file:
MFF_LOG_REG	ovn/controller/lflow.c	59;"	d	file:
MFF_LOG_REG	ovn/controller/physical.c	714;"	d	file:
MFF_LOG_REGS	ovn/controller/physical.c	716;"	d	file:
MFF_LOG_REGS	ovn/lib/logical-fields.h	33;"	d
MFF_METADATA	lib/meta-flow.h	/^    MFF_METADATA,$/;"	e	enum:mf_field_id
MFF_MPLS_BOS	lib/meta-flow.h	/^    MFF_MPLS_BOS,$/;"	e	enum:mf_field_id
MFF_MPLS_LABEL	lib/meta-flow.h	/^    MFF_MPLS_LABEL,$/;"	e	enum:mf_field_id
MFF_MPLS_TC	lib/meta-flow.h	/^    MFF_MPLS_TC,$/;"	e	enum:mf_field_id
MFF_ND_SLL	lib/meta-flow.h	/^    MFF_ND_SLL,$/;"	e	enum:mf_field_id
MFF_ND_TARGET	lib/meta-flow.h	/^    MFF_ND_TARGET,$/;"	e	enum:mf_field_id
MFF_ND_TLL	lib/meta-flow.h	/^    MFF_ND_TLL,$/;"	e	enum:mf_field_id
MFF_N_IDS	lib/meta-flow.h	/^    MFF_N_IDS$/;"	e	enum:mf_field_id
MFF_PKT_MARK	lib/meta-flow.h	/^    MFF_PKT_MARK,$/;"	e	enum:mf_field_id
MFF_RECIRC_ID	lib/meta-flow.h	/^    MFF_RECIRC_ID,$/;"	e	enum:mf_field_id
MFF_REG0	lib/meta-flow.h	/^    MFF_REG0,$/;"	e	enum:mf_field_id
MFF_REG1	lib/meta-flow.h	/^    MFF_REG1,$/;"	e	enum:mf_field_id
MFF_REG2	lib/meta-flow.h	/^    MFF_REG2,$/;"	e	enum:mf_field_id
MFF_REG3	lib/meta-flow.h	/^    MFF_REG3,$/;"	e	enum:mf_field_id
MFF_REG4	lib/meta-flow.h	/^    MFF_REG4,$/;"	e	enum:mf_field_id
MFF_REG5	lib/meta-flow.h	/^    MFF_REG5,$/;"	e	enum:mf_field_id
MFF_REG6	lib/meta-flow.h	/^    MFF_REG6,$/;"	e	enum:mf_field_id
MFF_REG7	lib/meta-flow.h	/^    MFF_REG7,$/;"	e	enum:mf_field_id
MFF_SCTP_DST	lib/meta-flow.h	/^    MFF_SCTP_DST,$/;"	e	enum:mf_field_id
MFF_SCTP_SRC	lib/meta-flow.h	/^    MFF_SCTP_SRC,$/;"	e	enum:mf_field_id
MFF_SKB_PRIORITY	lib/meta-flow.h	/^    MFF_SKB_PRIORITY,$/;"	e	enum:mf_field_id
MFF_TCP_DST	lib/meta-flow.h	/^    MFF_TCP_DST,$/;"	e	enum:mf_field_id
MFF_TCP_FLAGS	lib/meta-flow.h	/^    MFF_TCP_FLAGS,$/;"	e	enum:mf_field_id
MFF_TCP_SRC	lib/meta-flow.h	/^    MFF_TCP_SRC,$/;"	e	enum:mf_field_id
MFF_TUN_DST	lib/meta-flow.h	/^    MFF_TUN_DST,$/;"	e	enum:mf_field_id
MFF_TUN_FLAGS	lib/meta-flow.h	/^    MFF_TUN_FLAGS,$/;"	e	enum:mf_field_id
MFF_TUN_GBP_FLAGS	lib/meta-flow.h	/^    MFF_TUN_GBP_FLAGS,$/;"	e	enum:mf_field_id
MFF_TUN_GBP_ID	lib/meta-flow.h	/^    MFF_TUN_GBP_ID,$/;"	e	enum:mf_field_id
MFF_TUN_ID	lib/meta-flow.h	/^    MFF_TUN_ID,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA0	lib/meta-flow.h	/^    MFF_TUN_METADATA0,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA1	lib/meta-flow.h	/^    MFF_TUN_METADATA1,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA10	lib/meta-flow.h	/^    MFF_TUN_METADATA10,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA11	lib/meta-flow.h	/^    MFF_TUN_METADATA11,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA12	lib/meta-flow.h	/^    MFF_TUN_METADATA12,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA13	lib/meta-flow.h	/^    MFF_TUN_METADATA13,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA14	lib/meta-flow.h	/^    MFF_TUN_METADATA14,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA15	lib/meta-flow.h	/^    MFF_TUN_METADATA15,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA16	lib/meta-flow.h	/^    MFF_TUN_METADATA16,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA17	lib/meta-flow.h	/^    MFF_TUN_METADATA17,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA18	lib/meta-flow.h	/^    MFF_TUN_METADATA18,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA19	lib/meta-flow.h	/^    MFF_TUN_METADATA19,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA2	lib/meta-flow.h	/^    MFF_TUN_METADATA2,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA20	lib/meta-flow.h	/^    MFF_TUN_METADATA20,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA21	lib/meta-flow.h	/^    MFF_TUN_METADATA21,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA22	lib/meta-flow.h	/^    MFF_TUN_METADATA22,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA23	lib/meta-flow.h	/^    MFF_TUN_METADATA23,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA24	lib/meta-flow.h	/^    MFF_TUN_METADATA24,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA25	lib/meta-flow.h	/^    MFF_TUN_METADATA25,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA26	lib/meta-flow.h	/^    MFF_TUN_METADATA26,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA27	lib/meta-flow.h	/^    MFF_TUN_METADATA27,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA28	lib/meta-flow.h	/^    MFF_TUN_METADATA28,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA29	lib/meta-flow.h	/^    MFF_TUN_METADATA29,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA3	lib/meta-flow.h	/^    MFF_TUN_METADATA3,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA30	lib/meta-flow.h	/^    MFF_TUN_METADATA30,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA31	lib/meta-flow.h	/^    MFF_TUN_METADATA31,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA32	lib/meta-flow.h	/^    MFF_TUN_METADATA32,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA33	lib/meta-flow.h	/^    MFF_TUN_METADATA33,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA34	lib/meta-flow.h	/^    MFF_TUN_METADATA34,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA35	lib/meta-flow.h	/^    MFF_TUN_METADATA35,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA36	lib/meta-flow.h	/^    MFF_TUN_METADATA36,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA37	lib/meta-flow.h	/^    MFF_TUN_METADATA37,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA38	lib/meta-flow.h	/^    MFF_TUN_METADATA38,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA39	lib/meta-flow.h	/^    MFF_TUN_METADATA39,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA4	lib/meta-flow.h	/^    MFF_TUN_METADATA4,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA40	lib/meta-flow.h	/^    MFF_TUN_METADATA40,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA41	lib/meta-flow.h	/^    MFF_TUN_METADATA41,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA42	lib/meta-flow.h	/^    MFF_TUN_METADATA42,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA43	lib/meta-flow.h	/^    MFF_TUN_METADATA43,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA44	lib/meta-flow.h	/^    MFF_TUN_METADATA44,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA45	lib/meta-flow.h	/^    MFF_TUN_METADATA45,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA46	lib/meta-flow.h	/^    MFF_TUN_METADATA46,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA47	lib/meta-flow.h	/^    MFF_TUN_METADATA47,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA48	lib/meta-flow.h	/^    MFF_TUN_METADATA48,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA49	lib/meta-flow.h	/^    MFF_TUN_METADATA49,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA5	lib/meta-flow.h	/^    MFF_TUN_METADATA5,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA50	lib/meta-flow.h	/^    MFF_TUN_METADATA50,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA51	lib/meta-flow.h	/^    MFF_TUN_METADATA51,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA52	lib/meta-flow.h	/^    MFF_TUN_METADATA52,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA53	lib/meta-flow.h	/^    MFF_TUN_METADATA53,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA54	lib/meta-flow.h	/^    MFF_TUN_METADATA54,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA55	lib/meta-flow.h	/^    MFF_TUN_METADATA55,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA56	lib/meta-flow.h	/^    MFF_TUN_METADATA56,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA57	lib/meta-flow.h	/^    MFF_TUN_METADATA57,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA58	lib/meta-flow.h	/^    MFF_TUN_METADATA58,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA59	lib/meta-flow.h	/^    MFF_TUN_METADATA59,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA6	lib/meta-flow.h	/^    MFF_TUN_METADATA6,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA60	lib/meta-flow.h	/^    MFF_TUN_METADATA60,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA61	lib/meta-flow.h	/^    MFF_TUN_METADATA61,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA62	lib/meta-flow.h	/^    MFF_TUN_METADATA62,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA63	lib/meta-flow.h	/^    MFF_TUN_METADATA63,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA7	lib/meta-flow.h	/^    MFF_TUN_METADATA7,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA8	lib/meta-flow.h	/^    MFF_TUN_METADATA8,$/;"	e	enum:mf_field_id
MFF_TUN_METADATA9	lib/meta-flow.h	/^    MFF_TUN_METADATA9,$/;"	e	enum:mf_field_id
MFF_TUN_SRC	lib/meta-flow.h	/^    MFF_TUN_SRC,$/;"	e	enum:mf_field_id
MFF_TUN_TOS	lib/meta-flow.h	/^    MFF_TUN_TOS,$/;"	e	enum:mf_field_id
MFF_TUN_TTL	lib/meta-flow.h	/^    MFF_TUN_TTL,$/;"	e	enum:mf_field_id
MFF_UDP_DST	lib/meta-flow.h	/^    MFF_UDP_DST,$/;"	e	enum:mf_field_id
MFF_UDP_SRC	lib/meta-flow.h	/^    MFF_UDP_SRC,$/;"	e	enum:mf_field_id
MFF_VLAN_PCP	lib/meta-flow.h	/^    MFF_VLAN_PCP,$/;"	e	enum:mf_field_id
MFF_VLAN_TCI	lib/meta-flow.h	/^    MFF_VLAN_TCI,$/;"	e	enum:mf_field_id
MFF_VLAN_VID	lib/meta-flow.h	/^    MFF_VLAN_VID,$/;"	e	enum:mf_field_id
MFF_XREG0	lib/meta-flow.h	/^    MFF_XREG0,$/;"	e	enum:mf_field_id
MFF_XREG1	lib/meta-flow.h	/^    MFF_XREG1,$/;"	e	enum:mf_field_id
MFF_XREG2	lib/meta-flow.h	/^    MFF_XREG2,$/;"	e	enum:mf_field_id
MFF_XREG3	lib/meta-flow.h	/^    MFF_XREG3,$/;"	e	enum:mf_field_id
MFM_FULLY	lib/meta-flow.h	/^    MFM_FULLY,                  \/* Every bit is individually maskable. *\/$/;"	e	enum:mf_maskable
MFM_NONE	lib/meta-flow.h	/^    MFM_NONE,                   \/* No sub-field masking. *\/$/;"	e	enum:mf_maskable
MFP_ARP	lib/meta-flow.h	/^    MFP_ARP,$/;"	e	enum:mf_prereqs
MFP_ICMPV4	lib/meta-flow.h	/^    MFP_ICMPV4,$/;"	e	enum:mf_prereqs
MFP_ICMPV6	lib/meta-flow.h	/^    MFP_ICMPV6,$/;"	e	enum:mf_prereqs
MFP_IPV4	lib/meta-flow.h	/^    MFP_IPV4,$/;"	e	enum:mf_prereqs
MFP_IPV6	lib/meta-flow.h	/^    MFP_IPV6,$/;"	e	enum:mf_prereqs
MFP_IP_ANY	lib/meta-flow.h	/^    MFP_IP_ANY,$/;"	e	enum:mf_prereqs
MFP_MPLS	lib/meta-flow.h	/^    MFP_MPLS,$/;"	e	enum:mf_prereqs
MFP_ND	lib/meta-flow.h	/^    MFP_ND,$/;"	e	enum:mf_prereqs
MFP_ND_ADVERT	lib/meta-flow.h	/^    MFP_ND_ADVERT$/;"	e	enum:mf_prereqs
MFP_ND_SOLICIT	lib/meta-flow.h	/^    MFP_ND_SOLICIT,$/;"	e	enum:mf_prereqs
MFP_NONE	lib/meta-flow.h	/^    MFP_NONE,$/;"	e	enum:mf_prereqs
MFP_SCTP	lib/meta-flow.h	/^    MFP_SCTP,                   \/* On IPv4 or IPv6. *\/$/;"	e	enum:mf_prereqs
MFP_TCP	lib/meta-flow.h	/^    MFP_TCP,                    \/* On IPv4 or IPv6. *\/$/;"	e	enum:mf_prereqs
MFP_UDP	lib/meta-flow.h	/^    MFP_UDP,                    \/* On IPv4 or IPv6. *\/$/;"	e	enum:mf_prereqs
MFP_VLAN_VID	lib/meta-flow.h	/^    MFP_VLAN_VID,$/;"	e	enum:mf_prereqs
MFS_CT_STATE	lib/meta-flow.h	/^    MFS_CT_STATE,               \/* Connection tracking state *\/$/;"	e	enum:mf_string
MFS_DECIMAL	lib/meta-flow.h	/^    MFS_DECIMAL,$/;"	e	enum:mf_string
MFS_ETHERNET	lib/meta-flow.h	/^    MFS_ETHERNET,$/;"	e	enum:mf_string
MFS_FRAG	lib/meta-flow.h	/^    MFS_FRAG,                   \/* no, yes, first, later, not_later *\/$/;"	e	enum:mf_string
MFS_HEXADECIMAL	lib/meta-flow.h	/^    MFS_HEXADECIMAL,$/;"	e	enum:mf_string
MFS_IPV4	lib/meta-flow.h	/^    MFS_IPV4,$/;"	e	enum:mf_string
MFS_IPV6	lib/meta-flow.h	/^    MFS_IPV6,$/;"	e	enum:mf_string
MFS_OFP_PORT	lib/meta-flow.h	/^    MFS_OFP_PORT,               \/* 16-bit OpenFlow 1.0 port number or name. *\/$/;"	e	enum:mf_string
MFS_OFP_PORT_OXM	lib/meta-flow.h	/^    MFS_OFP_PORT_OXM,           \/* 32-bit OpenFlow 1.1+ port number or name. *\/$/;"	e	enum:mf_string
MFS_TCP_FLAGS	lib/meta-flow.h	/^    MFS_TCP_FLAGS,              \/* TCP_* flags *\/$/;"	e	enum:mf_string
MFS_TNL_FLAGS	lib/meta-flow.h	/^    MFS_TNL_FLAGS,              \/* FLOW_TNL_F_* flags *\/$/;"	e	enum:mf_string
MF_BITMAP_INITIALIZER	lib/meta-flow.h	1695;"	d
MF_FIELD_SIZES	lib/meta-flow.c	46;"	d	file:
MF_VALUE_EXACT_128	lib/meta-flow.c	67;"	d	file:
MF_VALUE_EXACT_16	lib/meta-flow.c	64;"	d	file:
MF_VALUE_EXACT_32	lib/meta-flow.c	65;"	d	file:
MF_VALUE_EXACT_64	lib/meta-flow.c	66;"	d	file:
MF_VALUE_EXACT_8	lib/meta-flow.c	63;"	d	file:
MF_VALUE_EXACT_INITIALIZER	lib/meta-flow.c	68;"	d	file:
MGMT	utilities/ovs-ofctl.c	/^enum open_target { MGMT, SNOOP };$/;"	e	enum:open_target	file:
MIME	utilities/bugtool/ovs-bugtool	/^MIME     = 6$/;"	v
MIME_DATA	utilities/bugtool/ovs-bugtool	/^MIME_DATA = 'application\/data'$/;"	v
MIME_TEXT	utilities/bugtool/ovs-bugtool	/^MIME_TEXT = 'text\/plain'$/;"	v
MIN	datapath-windows/ovsext/Util.h	69;"	d
MIN	lib/util.h	169;"	d
MINE	lib/rstp-state-machines.c	1037;"	d	file:
MINIFLOW_ASSERT	lib/flow.c	127;"	d	file:
MINIFLOW_FOR_EACH_IN_FLOWMAP	lib/flow.h	754;"	d
MINIFLOW_GET_BE16	lib/flow.h	804;"	d
MINIFLOW_GET_BE32	lib/flow.h	808;"	d
MINIFLOW_GET_BE64	lib/flow.h	812;"	d
MINIFLOW_GET_TYPE	lib/flow.h	785;"	d
MINIFLOW_GET_U128_PTR	lib/flow.h	793;"	d
MINIFLOW_GET_U16	lib/flow.h	802;"	d
MINIFLOW_GET_U32	lib/flow.h	806;"	d
MINIFLOW_GET_U64	lib/flow.h	810;"	d
MINIFLOW_GET_U8	lib/flow.h	800;"	d
MINIFLOW_IN_MAP	lib/flow.h	781;"	d
MINIFLOW_VALUES_SIZE	lib/flow.h	642;"	d
MINIMUM_ETH_PACKET_SIZE	lib/ovs-lldp.c	58;"	d	file:
MINIMUM_RESERVED_MANIFEST_RESOURCE_ID	datapath-windows/ovsext/resource.h	43;"	d
MIN_AVG_LEN	lib/coverage.h	43;"	d
MIN_NB_MBUF	lib/netdev-dpdk.c	86;"	d	file:
MIN_SIZE	utilities/bugtool/ovs-bugtool	/^MIN_SIZE = 2$/;"	v
MIN_TIME	utilities/bugtool/ovs-bugtool	/^MIN_TIME = 4$/;"	v
MIRROR_MASK_C	ofproto/ofproto-dpif-mirror.c	29;"	d	file:
MISS_UPCALL	ofproto/ofproto-dpif-upcall.c	/^    MISS_UPCALL,                \/* A flow miss.  *\/$/;"	e	enum:upcall_type	file:
MKDIR_P	Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MKDIR_P	datapath/Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MK_CONTROL	datapath-windows/ovsext/resource.h	450;"	d
MK_LBUTTON	datapath-windows/ovsext/resource.h	63;"	d
MK_MBUTTON	datapath-windows/ovsext/resource.h	548;"	d
MK_RBUTTON	datapath-windows/ovsext/resource.h	244;"	d
MK_SHIFT	datapath-windows/ovsext/resource.h	359;"	d
MK_XBUTTON1	datapath-windows/ovsext/resource.h	636;"	d
MK_XBUTTON2	datapath-windows/ovsext/resource.h	716;"	d
MLD2_RECORD_LEN	lib/packets.h	833;"	d
MLD2_REPORT	lib/packets.h	845;"	d
MLD6_LISTENER_DONE	include/windows/netinet/icmp6.h	109;"	d
MLD6_LISTENER_QUERY	include/windows/netinet/icmp6.h	107;"	d
MLD6_LISTENER_REPORT	include/windows/netinet/icmp6.h	108;"	d
MLD6_MTRACE	include/windows/netinet/icmp6.h	133;"	d
MLD6_MTRACE_RESP	include/windows/netinet/icmp6.h	132;"	d
MLDV2_LISTENER_REPORT	include/windows/netinet/icmp6.h	125;"	d
MLD_DONE	datapath-windows/ovsext/NetProto.h	140;"	d
MLD_DONE	lib/packets.h	844;"	d
MLD_HEADER_LEN	lib/packets.h	823;"	d
MLD_LISTENER_DONE	include/windows/netinet/icmp6.h	98;"	d
MLD_LISTENER_QUERY	include/windows/netinet/icmp6.h	96;"	d
MLD_LISTENER_REDUCTION	include/windows/netinet/icmp6.h	99;"	d
MLD_LISTENER_REPORT	include/windows/netinet/icmp6.h	97;"	d
MLD_MINLEN	include/windows/netinet/icmp6.h	196;"	d
MLD_MTRACE	include/windows/netinet/icmp6.h	129;"	d
MLD_MTRACE_RESP	include/windows/netinet/icmp6.h	128;"	d
MLD_QUERY	datapath-windows/ovsext/NetProto.h	137;"	d
MLD_QUERY	lib/packets.h	842;"	d
MLD_REPORT	lib/packets.h	843;"	d
MLD_V1REPORT	datapath-windows/ovsext/NetProto.h	138;"	d
MLD_V2REPORT	datapath-windows/ovsext/NetProto.h	139;"	d
MN_GETHMENU	datapath-windows/ovsext/resource.h	1082;"	d
MODINFO	utilities/bugtool/ovs-bugtool	/^MODINFO = 'modinfo'$/;"	v
MODPROBE_CONF	utilities/bugtool/ovs-bugtool	/^MODPROBE_CONF = '\/etc\/modprobe.conf'$/;"	v
MODPROBE_DIR	utilities/bugtool/ovs-bugtool	/^MODPROBE_DIR = '\/etc\/modprobe.d'$/;"	v
MONITOR_INTERVAL_MSEC	ofproto/ofproto-dpif-monitor.c	199;"	d	file:
MPLS	tests/test-sflow.c	/^	uint32_t MPLS;$/;"	m	struct:sflow_xdr::__anon230	file:
MPLS_BOS_MASK	lib/packets.h	469;"	d
MPLS_BOS_SHIFT	lib/packets.h	470;"	d
MPLS_HLEN	datapath/linux/compat/include/net/mpls.h	20;"	d
MPLS_HLEN	lib/packets.h	478;"	d
MPLS_LABEL_MASK	lib/packets.h	475;"	d
MPLS_LABEL_SHIFT	lib/packets.h	476;"	d
MPLS_LS_LABEL_MASK	datapath/linux/compat/include/linux/mpls.h	30;"	d
MPLS_LS_LABEL_SHIFT	datapath/linux/compat/include/linux/mpls.h	31;"	d
MPLS_LS_S_MASK	datapath/linux/compat/include/linux/mpls.h	34;"	d
MPLS_LS_S_SHIFT	datapath/linux/compat/include/linux/mpls.h	35;"	d
MPLS_LS_TC_MASK	datapath/linux/compat/include/linux/mpls.h	32;"	d
MPLS_LS_TC_SHIFT	datapath/linux/compat/include/linux/mpls.h	33;"	d
MPLS_LS_TTL_MASK	datapath/linux/compat/include/linux/mpls.h	36;"	d
MPLS_LS_TTL_SHIFT	datapath/linux/compat/include/linux/mpls.h	37;"	d
MPLS_TC_MASK	lib/packets.h	472;"	d
MPLS_TC_SHIFT	lib/packets.h	473;"	d
MPLS_TTL_MASK	lib/packets.h	466;"	d
MPLS_TTL_SHIFT	lib/packets.h	467;"	d
MPPUTIL	utilities/bugtool/ovs-bugtool	/^MPPUTIL = 'mppUtil'$/;"	v
MPP_CONF	utilities/bugtool/ovs-bugtool	/^MPP_CONF = '\/etc\/mpp.conf'$/;"	v
MP_CACHE_SZ	lib/netdev-dpdk.c	87;"	d	file:
MP_CLIENT_RXQ_NAME	tests/dpdk/ring_client.c	49;"	d	file:
MP_CLIENT_TXQ_NAME	tests/dpdk/ring_client.c	50;"	d	file:
MSEC_TO_PRIO	ofproto/ofproto-dpif-monitor.c	43;"	d	file:
MSG_CTRUNC	include/sparse/sys/socket.h	/^    MSG_CTRUNC,$/;"	e	enum:__anon73
MSG_DONTROUTE	include/sparse/sys/socket.h	/^    MSG_DONTROUTE,$/;"	e	enum:__anon73
MSG_DONTWAIT	include/sparse/sys/socket.h	/^    MSG_DONTWAIT$/;"	e	enum:__anon73
MSG_EOR	include/sparse/sys/socket.h	/^    MSG_EOR,$/;"	e	enum:__anon73
MSG_NOSIGNAL	include/sparse/sys/socket.h	/^    MSG_NOSIGNAL,$/;"	e	enum:__anon73
MSG_OFS	tests/test-ofpbuf.c	26;"	d	file:
MSG_OOB	include/sparse/sys/socket.h	/^    MSG_OOB,$/;"	e	enum:__anon73
MSG_PEEK	include/sparse/sys/socket.h	/^    MSG_PEEK,$/;"	e	enum:__anon73
MSG_TRUNC	include/sparse/sys/socket.h	/^    MSG_TRUNC,$/;"	e	enum:__anon73
MSG_WAITALL	include/sparse/sys/socket.h	/^    MSG_WAITALL,$/;"	e	enum:__anon73
MSVC64_LDFLAGS	Makefile	/^MSVC64_LDFLAGS = $/;"	m
MSVC64_LDFLAGS	datapath/Makefile	/^MSVC64_LDFLAGS = $/;"	m
MSVC_CFLAGS	Makefile	/^MSVC_CFLAGS = $/;"	m
MSVC_CFLAGS	datapath/Makefile	/^MSVC_CFLAGS = $/;"	m
MTU_TO_MAX_LEN	lib/netdev-dpdk.c	71;"	d	file:
MULTIFILEOPENORD	datapath-windows/ovsext/resource.h	1397;"	d
MULTIPATHD	utilities/bugtool/ovs-bugtool	/^MULTIPATHD = 'multipathd'$/;"	v
MULTIPATH_CONF	utilities/bugtool/ovs-bugtool	/^MULTIPATH_CONF = '\/etc\/multipath.conf'$/;"	v
MULTIPATH_H	lib/multipath.h	18;"	d
MUST_SUCCEED	tests/test-type-props.c	24;"	d	file:
MUTEX_INIT	lib/ovs-atomic-locked.c	33;"	d	file:
MUTEX_INIT16	lib/ovs-atomic-locked.c	35;"	d	file:
MUTEX_INIT4	lib/ovs-atomic-locked.c	34;"	d	file:
MapFlowKeyToNlKey	datapath-windows/ovsext/Flow.c	/^MapFlowKeyToNlKey(PNL_BUFFER nlBuf,$/;"	f
MapFlowTunKeyToNlKey	datapath-windows/ovsext/Flow.c	/^MapFlowTunKeyToNlKey(PNL_BUFFER nlBuf,$/;"	f
MapIrpOutputBuffer	datapath-windows/ovsext/Datapath.c	/^MapIrpOutputBuffer(PIRP irp,$/;"	f	file:
Message	python/ovs/jsonrpc.py	/^class Message(object):$/;"	c
Message	python/ovs/unixctl/server.py	/^Message = ovs.jsonrpc.Message$/;"	v
MsgKind.Error	windows/ovs-windows-installer/Actions/OVSActions.js	/^{$/;"	p
MsgKind.Log	windows/ovs-windows-installer/Actions/OVSActions.js	/^    User: 0x03000000,$/;"	p
MsgKind.User	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Warning: 0x02000000,$/;"	p
MsgKind.Warning	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Error: 0x01000000,$/;"	p
MsiActionStatus.Abort	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Cancel: 2,$/;"	p
MsiActionStatus.Cancel	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Ok: 1, \/\/ success$/;"	p
MsiActionStatus.Ignore	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Retry: 4, \/\/ aka suspend?$/;"	p
MsiActionStatus.None	windows/ovs-windows-installer/Actions/OVSActions.js	/^{$/;"	p
MsiActionStatus.Ok	windows/ovs-windows-installer/Actions/OVSActions.js	/^    None: 0,$/;"	p
MsiActionStatus.Retry	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Abort: 3,$/;"	p
NBREC_ACL_COL_ACTION	ovn/lib/ovn-nb-idl.h	/^    NBREC_ACL_COL_ACTION,$/;"	e	enum:__anon215
NBREC_ACL_COL_DIRECTION	ovn/lib/ovn-nb-idl.h	/^    NBREC_ACL_COL_DIRECTION,$/;"	e	enum:__anon215
NBREC_ACL_COL_EXTERNAL_IDS	ovn/lib/ovn-nb-idl.h	/^    NBREC_ACL_COL_EXTERNAL_IDS,$/;"	e	enum:__anon215
NBREC_ACL_COL_LOG	ovn/lib/ovn-nb-idl.h	/^    NBREC_ACL_COL_LOG,$/;"	e	enum:__anon215
NBREC_ACL_COL_MATCH	ovn/lib/ovn-nb-idl.h	/^    NBREC_ACL_COL_MATCH,$/;"	e	enum:__anon215
NBREC_ACL_COL_PRIORITY	ovn/lib/ovn-nb-idl.h	/^    NBREC_ACL_COL_PRIORITY,$/;"	e	enum:__anon215
NBREC_ACL_FOR_EACH	ovn/lib/ovn-nb-idl.h	59;"	d
NBREC_ACL_FOR_EACH_SAFE	ovn/lib/ovn-nb-idl.h	63;"	d
NBREC_ACL_N_COLUMNS	ovn/lib/ovn-nb-idl.h	/^    NBREC_ACL_N_COLUMNS$/;"	e	enum:__anon215
NBREC_IDL_HEADER	ovn/lib/ovn-nb-idl.h	4;"	d
NBREC_LOGICAL_PORT_COL_ADDRESSES	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_ADDRESSES,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_ENABLED	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_ENABLED,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_EXTERNAL_IDS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_EXTERNAL_IDS,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_NAME	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_NAME,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_OPTIONS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_OPTIONS,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_PARENT_NAME	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_PARENT_NAME,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_PORT_SECURITY	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_PORT_SECURITY,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_TAG	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_TAG,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_TYPE	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_TYPE,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_COL_UP	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_COL_UP,$/;"	e	enum:__anon216
NBREC_LOGICAL_PORT_FOR_EACH	ovn/lib/ovn-nb-idl.h	164;"	d
NBREC_LOGICAL_PORT_FOR_EACH_SAFE	ovn/lib/ovn-nb-idl.h	168;"	d
NBREC_LOGICAL_PORT_N_COLUMNS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_PORT_N_COLUMNS$/;"	e	enum:__anon216
NBREC_LOGICAL_ROUTER_COL_DEFAULT_GW	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_COL_DEFAULT_GW,$/;"	e	enum:__anon217
NBREC_LOGICAL_ROUTER_COL_EXTERNAL_IDS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_COL_EXTERNAL_IDS,$/;"	e	enum:__anon217
NBREC_LOGICAL_ROUTER_COL_NAME	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_COL_NAME,$/;"	e	enum:__anon217
NBREC_LOGICAL_ROUTER_COL_PORTS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_COL_PORTS,$/;"	e	enum:__anon217
NBREC_LOGICAL_ROUTER_FOR_EACH	ovn/lib/ovn-nb-idl.h	247;"	d
NBREC_LOGICAL_ROUTER_FOR_EACH_SAFE	ovn/lib/ovn-nb-idl.h	251;"	d
NBREC_LOGICAL_ROUTER_N_COLUMNS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_N_COLUMNS$/;"	e	enum:__anon217
NBREC_LOGICAL_ROUTER_PORT_COL_ENABLED	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_PORT_COL_ENABLED,$/;"	e	enum:__anon218
NBREC_LOGICAL_ROUTER_PORT_COL_EXTERNAL_IDS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_PORT_COL_EXTERNAL_IDS,$/;"	e	enum:__anon218
NBREC_LOGICAL_ROUTER_PORT_COL_MAC	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_PORT_COL_MAC,$/;"	e	enum:__anon218
NBREC_LOGICAL_ROUTER_PORT_COL_NAME	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_PORT_COL_NAME,$/;"	e	enum:__anon218
NBREC_LOGICAL_ROUTER_PORT_COL_NETWORK	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_PORT_COL_NETWORK,$/;"	e	enum:__anon218
NBREC_LOGICAL_ROUTER_PORT_COL_PEER	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_PORT_COL_PEER,$/;"	e	enum:__anon218
NBREC_LOGICAL_ROUTER_PORT_FOR_EACH	ovn/lib/ovn-nb-idl.h	322;"	d
NBREC_LOGICAL_ROUTER_PORT_FOR_EACH_SAFE	ovn/lib/ovn-nb-idl.h	326;"	d
NBREC_LOGICAL_ROUTER_PORT_N_COLUMNS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_ROUTER_PORT_N_COLUMNS$/;"	e	enum:__anon218
NBREC_LOGICAL_SWITCH_COL_ACLS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_SWITCH_COL_ACLS,$/;"	e	enum:__anon219
NBREC_LOGICAL_SWITCH_COL_EXTERNAL_IDS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_SWITCH_COL_EXTERNAL_IDS,$/;"	e	enum:__anon219
NBREC_LOGICAL_SWITCH_COL_NAME	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_SWITCH_COL_NAME,$/;"	e	enum:__anon219
NBREC_LOGICAL_SWITCH_COL_PORTS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_SWITCH_COL_PORTS,$/;"	e	enum:__anon219
NBREC_LOGICAL_SWITCH_FOR_EACH	ovn/lib/ovn-nb-idl.h	394;"	d
NBREC_LOGICAL_SWITCH_FOR_EACH_SAFE	ovn/lib/ovn-nb-idl.h	398;"	d
NBREC_LOGICAL_SWITCH_N_COLUMNS	ovn/lib/ovn-nb-idl.h	/^    NBREC_LOGICAL_SWITCH_N_COLUMNS$/;"	e	enum:__anon219
NBREC_N_TABLES	ovn/lib/ovn-nb-idl.h	/^    NBREC_N_TABLES$/;"	e	enum:__anon220
NBREC_TABLE_ACL	ovn/lib/ovn-nb-idl.h	/^    NBREC_TABLE_ACL,$/;"	e	enum:__anon220
NBREC_TABLE_LOGICAL_PORT	ovn/lib/ovn-nb-idl.h	/^    NBREC_TABLE_LOGICAL_PORT,$/;"	e	enum:__anon220
NBREC_TABLE_LOGICAL_ROUTER	ovn/lib/ovn-nb-idl.h	/^    NBREC_TABLE_LOGICAL_ROUTER,$/;"	e	enum:__anon220
NBREC_TABLE_LOGICAL_ROUTER_PORT	ovn/lib/ovn-nb-idl.h	/^    NBREC_TABLE_LOGICAL_ROUTER_PORT,$/;"	e	enum:__anon220
NBREC_TABLE_LOGICAL_SWITCH	ovn/lib/ovn-nb-idl.h	/^    NBREC_TABLE_LOGICAL_SWITCH,$/;"	e	enum:__anon220
NDEBUG	tests/ovstest.c	20;"	d	file:
NDEBUG	tests/test-aa.c	18;"	d	file:
NDEBUG	tests/test-aes128.c	18;"	d	file:
NDEBUG	tests/test-atomic.c	18;"	d	file:
NDEBUG	tests/test-bitmap.c	18;"	d	file:
NDEBUG	tests/test-bundle.c	17;"	d	file:
NDEBUG	tests/test-byte-order.c	18;"	d	file:
NDEBUG	tests/test-classifier.c	29;"	d	file:
NDEBUG	tests/test-cmap.c	21;"	d	file:
NDEBUG	tests/test-csum.c	18;"	d	file:
NDEBUG	tests/test-flows.c	18;"	d	file:
NDEBUG	tests/test-hash.c	18;"	d	file:
NDEBUG	tests/test-heap.c	20;"	d	file:
NDEBUG	tests/test-hindex.c	21;"	d	file:
NDEBUG	tests/test-hmap.c	21;"	d	file:
NDEBUG	tests/test-json.c	18;"	d	file:
NDEBUG	tests/test-jsonrpc.c	18;"	d	file:
NDEBUG	tests/test-list.c	21;"	d	file:
NDEBUG	tests/test-lockfile.c	18;"	d	file:
NDEBUG	tests/test-multipath.c	18;"	d	file:
NDEBUG	tests/test-netflow.c	18;"	d	file:
NDEBUG	tests/test-odp.c	18;"	d	file:
NDEBUG	tests/test-ofpbuf.c	18;"	d	file:
NDEBUG	tests/test-packets.c	18;"	d	file:
NDEBUG	tests/test-random.c	18;"	d	file:
NDEBUG	tests/test-reconnect.c	18;"	d	file:
NDEBUG	tests/test-rstp.c	2;"	d	file:
NDEBUG	tests/test-sflow.c	19;"	d	file:
NDEBUG	tests/test-sha1.c	18;"	d	file:
NDEBUG	tests/test-stp.c	18;"	d	file:
NDEBUG	tests/test-unix-socket.c	18;"	d	file:
NDEBUG	tests/test-util.c	18;"	d	file:
NDEBUG	tests/test-uuid.c	18;"	d	file:
NDEBUG	tests/test-vconn.c	18;"	d	file:
ND_MSG_LEN	lib/packets.h	809;"	d
ND_NA_FLAG_OVERRIDE	include/windows/netinet/icmp6.h	263;"	d
ND_NA_FLAG_ROUTER	include/windows/netinet/icmp6.h	261;"	d
ND_NA_FLAG_SOLICITED	include/windows/netinet/icmp6.h	262;"	d
ND_NEIGHBOR_ADVERT	datapath-windows/ovsext/NetProto.h	101;"	d
ND_NEIGHBOR_ADVERT	include/windows/netinet/icmp6.h	114;"	d
ND_NEIGHBOR_SOLICIT	datapath-windows/ovsext/NetProto.h	100;"	d
ND_NEIGHBOR_SOLICIT	include/windows/netinet/icmp6.h	113;"	d
ND_OPT_ADVINTERVAL	include/windows/netinet/icmp6.h	288;"	d
ND_OPT_DNSSL	include/windows/netinet/icmp6.h	295;"	d
ND_OPT_HOMEAGENT_INFO	include/windows/netinet/icmp6.h	289;"	d
ND_OPT_LEN	lib/packets.h	799;"	d
ND_OPT_MAP	include/windows/netinet/icmp6.h	292;"	d
ND_OPT_MTU	include/windows/netinet/icmp6.h	287;"	d
ND_OPT_PI_FLAG_AUTO	include/windows/netinet/icmp6.h	318;"	d
ND_OPT_PI_FLAG_ONLINK	include/windows/netinet/icmp6.h	317;"	d
ND_OPT_PREFIX_INFORMATION	include/windows/netinet/icmp6.h	285;"	d
ND_OPT_RDNSS	include/windows/netinet/icmp6.h	294;"	d
ND_OPT_REDIRECTED_HEADER	include/windows/netinet/icmp6.h	286;"	d
ND_OPT_ROUTE_INFO	include/windows/netinet/icmp6.h	293;"	d
ND_OPT_SOURCE_ADDRLIST	include/windows/netinet/icmp6.h	290;"	d
ND_OPT_SOURCE_LINKADDR	datapath-windows/ovsext/NetProto.h	104;"	d
ND_OPT_SOURCE_LINKADDR	include/windows/netinet/icmp6.h	283;"	d
ND_OPT_TARGET_ADDRLIST	include/windows/netinet/icmp6.h	291;"	d
ND_OPT_TARGET_LINKADDR	datapath-windows/ovsext/NetProto.h	105;"	d
ND_OPT_TARGET_LINKADDR	include/windows/netinet/icmp6.h	284;"	d
ND_RA_FLAG_HOME_AGENT	include/windows/netinet/icmp6.h	226;"	d
ND_RA_FLAG_MANAGED	include/windows/netinet/icmp6.h	224;"	d
ND_RA_FLAG_OTHER	include/windows/netinet/icmp6.h	225;"	d
ND_RA_FLAG_RTPREF_HIGH	include/windows/netinet/icmp6.h	233;"	d
ND_RA_FLAG_RTPREF_LOW	include/windows/netinet/icmp6.h	235;"	d
ND_RA_FLAG_RTPREF_MASK	include/windows/netinet/icmp6.h	231;"	d
ND_RA_FLAG_RTPREF_MEDIUM	include/windows/netinet/icmp6.h	234;"	d
ND_RA_FLAG_RTPREF_RSV	include/windows/netinet/icmp6.h	236;"	d
ND_REDIRECT	include/windows/netinet/icmp6.h	115;"	d
ND_REDIRECT_ONLINK	include/windows/netinet/icmp6.h	169;"	d
ND_REDIRECT_ROUTER	include/windows/netinet/icmp6.h	170;"	d
ND_ROUTER_ADVERT	include/windows/netinet/icmp6.h	112;"	d
ND_ROUTER_SOLICIT	include/windows/netinet/icmp6.h	111;"	d
NEED_COUNT_1BITS_8	lib/util.h	473;"	d
NEED_DATABASE	ovsdb/ovsdb-client.c	/^    NEED_DATABASE         \/* JSON-RPC connection and database name needed. *\/$/;"	e	enum:args_needed	file:
NEED_NONE	ovsdb/ovsdb-client.c	/^    NEED_NONE,            \/* No JSON-RPC connection or database name needed. *\/$/;"	e	enum:args_needed	file:
NEED_RPC	ovsdb/ovsdb-client.c	/^    NEED_RPC,             \/* JSON-RPC connection needed. *\/$/;"	e	enum:args_needed	file:
NEIGHBOR_CHANGE_ADDED	lib/lldp/lldpd-structs.h	209;"	d
NEIGHBOR_CHANGE_DELETED	lib/lldp/lldpd-structs.h	208;"	d
NEIGHBOR_CHANGE_UPDATED	lib/lldp/lldpd-structs.h	210;"	d
NETDEV_BSD_CLASS	lib/netdev-bsd.c	1545;"	d	file:
NETDEV_DPDK_CLASS	lib/netdev-dpdk.c	2039;"	d	file:
NETDEV_DPDK_H	lib/netdev-dpdk.h	2;"	d
NETDEV_DUMMY_MAX_QUEUE	lib/netdev-dummy.c	123;"	d	file:
NETDEV_FLOW_KEY_FOR_EACH_IN_FLOWMAP	lib/dpif-netdev.c	1641;"	d	file:
NETDEV_F_100GB_FD	lib/netdev.h	/^    NETDEV_F_100GB_FD =   1 << 8,  \/* 100 Gb full-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_100MB_FD	lib/netdev.h	/^    NETDEV_F_100MB_FD =   1 << 3,  \/* 100 Mb full-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_100MB_HD	lib/netdev.h	/^    NETDEV_F_100MB_HD =   1 << 2,  \/* 100 Mb half-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_10GB_FD	lib/netdev.h	/^    NETDEV_F_10GB_FD =    1 << 6,  \/* 10 Gb full-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_10MB_FD	lib/netdev.h	/^    NETDEV_F_10MB_FD =    1 << 1,  \/* 10 Mb full-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_10MB_HD	lib/netdev.h	/^    NETDEV_F_10MB_HD =    1 << 0,  \/* 10 Mb half-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_1GB_FD	lib/netdev.h	/^    NETDEV_F_1GB_FD =     1 << 5,  \/* 1 Gb full-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_1GB_HD	lib/netdev.h	/^    NETDEV_F_1GB_HD =     1 << 4,  \/* 1 Gb half-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_1TB_FD	lib/netdev.h	/^    NETDEV_F_1TB_FD =     1 << 9,  \/* 1 Tb full-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_40GB_FD	lib/netdev.h	/^    NETDEV_F_40GB_FD =    1 << 7,  \/* 40 Gb full-duplex rate support. *\/$/;"	e	enum:netdev_features
NETDEV_F_AUTONEG	lib/netdev.h	/^    NETDEV_F_AUTONEG =    1 << 13, \/* Auto-negotiation. *\/$/;"	e	enum:netdev_features
NETDEV_F_COPPER	lib/netdev.h	/^    NETDEV_F_COPPER =     1 << 11, \/* Copper medium. *\/$/;"	e	enum:netdev_features
NETDEV_F_FIBER	lib/netdev.h	/^    NETDEV_F_FIBER =      1 << 12, \/* Fiber medium. *\/$/;"	e	enum:netdev_features
NETDEV_F_OTHER	lib/netdev.h	/^    NETDEV_F_OTHER =      1 << 10, \/* Other rate, not in the list. *\/$/;"	e	enum:netdev_features
NETDEV_F_PAUSE	lib/netdev.h	/^    NETDEV_F_PAUSE =      1 << 14, \/* Pause. *\/$/;"	e	enum:netdev_features
NETDEV_F_PAUSE_ASYM	lib/netdev.h	/^    NETDEV_F_PAUSE_ASYM = 1 << 15, \/* Asymmetric pause. *\/$/;"	e	enum:netdev_features
NETDEV_H	lib/netdev.h	18;"	d
NETDEV_LINUX_CLASS	lib/netdev-linux.c	2774;"	d	file:
NETDEV_LINUX_H	lib/netdev-linux.h	18;"	d
NETDEV_LOOPBACK	lib/netdev.h	/^    NETDEV_LOOPBACK = 0x0004    \/* This is a loopback device. *\/$/;"	e	enum:netdev_flags
NETDEV_MAX_BURST	lib/netdev.h	/^enum { NETDEV_MAX_BURST = 32 }; \/* Maximum number packets in a batch. *\/$/;"	e	enum:__anon114
NETDEV_NUMA_UNSPEC	lib/netdev-provider.h	35;"	d
NETDEV_PROMISC	lib/netdev.h	/^    NETDEV_PROMISC = 0x0002,    \/* Promiscuous mode? *\/$/;"	e	enum:netdev_flags
NETDEV_PROVIDER_H	lib/netdev-provider.h	18;"	d
NETDEV_QUEUE_FOR_EACH	lib/netdev.h	328;"	d
NETDEV_UP	lib/netdev.h	/^    NETDEV_UP = 0x0001,         \/* Device enabled? *\/$/;"	e	enum:netdev_flags
NETDEV_VPORT_H	lib/netdev-vport.h	18;"	d
NETDEV_VPORT_NAME_BUFSIZE	lib/netdev-vport.h	/^enum { NETDEV_VPORT_NAME_BUFSIZE = 16 };$/;"	e	enum:__anon111
NETDEV_VPORT_NAME_BUFSIZE	lib/netdev-vport.h	/^enum { NETDEV_VPORT_NAME_BUFSIZE = 256 };$/;"	e	enum:__anon112
NETDEV_WINDOWS_CLASS	lib/netdev-windows.c	494;"	d	file:
NETFLOW_H	lib/netflow.h	18;"	d
NETFLOW_V5_VERSION	lib/netflow.h	26;"	d
NETIF_F_FSO	datapath/linux/compat/include/linux/netdevice.h	84;"	d
NETIF_F_GSO_ENCAP_ALL	datapath/linux/compat/include/linux/netdev_features.h	13;"	d
NETIF_F_GSO_ENCAP_ALL	datapath/linux/compat/include/linux/netdev_features.h	46;"	d
NETIF_F_GSO_GRE	datapath/linux/compat/include/linux/netdev_features.h	18;"	d
NETIF_F_GSO_GRE_CSUM	datapath/linux/compat/include/linux/netdev_features.h	22;"	d
NETIF_F_GSO_IPIP	datapath/linux/compat/include/linux/netdev_features.h	26;"	d
NETIF_F_GSO_MPLS	datapath/linux/compat/include/linux/netdev_features.h	42;"	d
NETIF_F_GSO_SIT	datapath/linux/compat/include/linux/netdev_features.h	30;"	d
NETIF_F_GSO_UDP_TUNNEL	datapath/linux/compat/include/linux/netdev_features.h	34;"	d
NETIF_F_GSO_UDP_TUNNEL_CSUM	datapath/linux/compat/include/linux/netdev_features.h	38;"	d
NETIF_F_HW_VLAN_CTAG_TX	datapath/linux/compat/include/linux/netdev_features.h	9;"	d
NETLINK_ADD_MEMBERSHIP	lib/netlink-protocol.h	156;"	d
NETLINK_CMD	datapath-windows/ovsext/Datapath.c	/^} NETLINK_CMD, *PNETLINK_CMD;$/;"	t	typeref:struct:_NETLINK_CMD	file:
NETLINK_DROP_MEMBERSHIP	lib/netlink-protocol.h	157;"	d
NETLINK_FAMILY	datapath-windows/ovsext/Datapath.c	/^} NETLINK_FAMILY, *PNETLINK_FAMILY;$/;"	t	typeref:struct:_NETLINK_FAMILY	file:
NETLINK_FAMILY_NAME_LEN	datapath-windows/ovsext/Datapath.c	44;"	d	file:
NETLINK_GENERIC	lib/netlink-protocol.h	41;"	d
NETLINK_H	lib/netlink.h	18;"	d
NETLINK_NOTIFIER_H	lib/netlink-notifier.h	18;"	d
NETLINK_PROTOCOL_H	lib/netlink-protocol.h	18;"	d
NETLINK_SOCKET_H	lib/netlink-socket.h	18;"	d
NETSTAT	utilities/bugtool/ovs-bugtool	/^NETSTAT = 'netstat'$/;"	v
NET_NAME_UNKNOWN	datapath/linux/compat/include/linux/netdevice.h	31;"	d
NET_SKB_PAD	datapath/linux/compat/include/linux/skbuff.h	81;"	d
NEWFILEOPENORD	datapath-windows/ovsext/resource.h	1412;"	d
NEWFILEOPENV2ORD	datapath-windows/ovsext/resource.h	1416;"	d
NEWFILEOPENV3ORD	datapath-windows/ovsext/resource.h	1417;"	d
NEWFORMATDLGWITHLINK	datapath-windows/ovsext/resource.h	1418;"	d
NEXTHDR_SCTP	datapath/linux/compat/include/net/ipv6.h	9;"	d
NEXT_AS_FIRST_DIRECTIVE_STDIO_H	Makefile	/^NEXT_AS_FIRST_DIRECTIVE_STDIO_H = <stdio.h>$/;"	m
NEXT_AS_FIRST_DIRECTIVE_STDIO_H	datapath/Makefile	/^NEXT_AS_FIRST_DIRECTIVE_STDIO_H = <stdio.h>$/;"	m
NEXT_AS_FIRST_DIRECTIVE_STRING_H	Makefile	/^NEXT_AS_FIRST_DIRECTIVE_STRING_H = <string.h>$/;"	m
NEXT_AS_FIRST_DIRECTIVE_STRING_H	datapath/Makefile	/^NEXT_AS_FIRST_DIRECTIVE_STRING_H = <string.h>$/;"	m
NEXT_STDIO_H	Makefile	/^NEXT_STDIO_H = <stdio.h>$/;"	m
NEXT_STDIO_H	datapath/Makefile	/^NEXT_STDIO_H = <stdio.h>$/;"	m
NEXT_STRING_H	Makefile	/^NEXT_STRING_H = <string.h>$/;"	m
NEXT_STRING_H	datapath/Makefile	/^NEXT_STRING_H = <string.h>$/;"	m
NFR_ANSI	datapath-windows/ovsext/resource.h	53;"	d
NFR_UNICODE	datapath-windows/ovsext/resource.h	234;"	d
NFS_ALL	datapath-windows/ovsext/resource.h	564;"	d
NFS_BUTTON	datapath-windows/ovsext/resource.h	467;"	d
NFS_EDIT	datapath-windows/ovsext/resource.h	85;"	d
NFS_LISTCOMBO	datapath-windows/ovsext/resource.h	379;"	d
NFS_STATIC	datapath-windows/ovsext/resource.h	266;"	d
NFS_USEFONTASSOC	datapath-windows/ovsext/resource.h	648;"	d
NF_ACTIVE_TIMEOUT_DEFAULT	ofproto/netflow.h	29;"	d
NF_OUT_DROP	ofproto/netflow.h	41;"	d
NF_OUT_FLOOD	ofproto/netflow.h	39;"	d
NF_OUT_MULTI	ofproto/netflow.h	40;"	d
NF_QUERY	datapath-windows/ovsext/resource.h	323;"	d
NF_REQUERY	datapath-windows/ovsext/resource.h	353;"	d
NIC_PORT_RX_Q_SIZE	lib/netdev-dpdk.c	99;"	d	file:
NIC_PORT_TX_Q_SIZE	lib/netdev-dpdk.c	100;"	d	file:
NI_FQDN_FLAG_VALIDTTL	include/windows/netinet/icmp6.h	389;"	d
NI_NODEADDR_FLAG_ALL	include/windows/netinet/icmp6.h	395;"	d
NI_NODEADDR_FLAG_ALL	include/windows/netinet/icmp6.h	400;"	d
NI_NODEADDR_FLAG_ANYCAST	include/windows/netinet/icmp6.h	397;"	d
NI_NODEADDR_FLAG_ANYCAST	include/windows/netinet/icmp6.h	405;"	d
NI_NODEADDR_FLAG_COMPAT	include/windows/netinet/icmp6.h	401;"	d
NI_NODEADDR_FLAG_GLOBAL	include/windows/netinet/icmp6.h	394;"	d
NI_NODEADDR_FLAG_GLOBAL	include/windows/netinet/icmp6.h	404;"	d
NI_NODEADDR_FLAG_LINKLOCAL	include/windows/netinet/icmp6.h	392;"	d
NI_NODEADDR_FLAG_LINKLOCAL	include/windows/netinet/icmp6.h	402;"	d
NI_NODEADDR_FLAG_SITELOCAL	include/windows/netinet/icmp6.h	393;"	d
NI_NODEADDR_FLAG_SITELOCAL	include/windows/netinet/icmp6.h	403;"	d
NI_NODEADDR_FLAG_TRUNCATE	include/windows/netinet/icmp6.h	396;"	d
NI_NODEADDR_FLAG_TRUNCATE	include/windows/netinet/icmp6.h	399;"	d
NI_QTYPE_DNSNAME	include/windows/netinet/icmp6.h	384;"	d
NI_QTYPE_FQDN	include/windows/netinet/icmp6.h	383;"	d
NI_QTYPE_IPV4ADDR	include/windows/netinet/icmp6.h	386;"	d
NI_QTYPE_NODEADDR	include/windows/netinet/icmp6.h	385;"	d
NI_QTYPE_NOOP	include/windows/netinet/icmp6.h	381;"	d
NI_QTYPE_SUPTYPES	include/windows/netinet/icmp6.h	382;"	d
NI_SUPTYPE_FLAG_COMPRESS	include/windows/netinet/icmp6.h	388;"	d
NLA_ALIGN	datapath-windows/ovsext/Netlink/NetlinkProto.h	74;"	d
NLA_ALIGN	lib/netlink-protocol.h	102;"	d
NLA_ALIGNTO	datapath-windows/ovsext/Netlink/NetlinkProto.h	73;"	d
NLA_ALIGNTO	lib/netlink-protocol.h	101;"	d
NLA_F_NESTED	datapath-windows/ovsext/Netlink/NetlinkProto.h	109;"	d
NLA_F_NESTED	datapath/linux/compat/include/linux/netlink.h	8;"	d
NLA_F_NESTED	lib/netlink-protocol.h	148;"	d
NLA_F_NET_BYTEORDER	datapath-windows/ovsext/Netlink/NetlinkProto.h	110;"	d
NLA_F_NET_BYTEORDER	datapath/linux/compat/include/linux/netlink.h	9;"	d
NLA_F_NET_BYTEORDER	lib/netlink-protocol.h	149;"	d
NLA_HDRLEN	datapath-windows/ovsext/Netlink/NetlinkProto.h	117;"	d
NLA_HDRLEN	lib/netlink-protocol.h	103;"	d
NLA_TYPE_MASK	datapath-windows/ovsext/Netlink/NetlinkProto.h	111;"	d
NLA_TYPE_MASK	datapath/linux/compat/include/linux/netlink.h	10;"	d
NLA_TYPE_MASK	lib/netlink-protocol.h	150;"	d
NLMSG_ALIGN	datapath-windows/ovsext/Netlink/NetlinkProto.h	71;"	d
NLMSG_ALIGN	lib/netlink-protocol.h	76;"	d
NLMSG_ALIGNTO	datapath-windows/ovsext/Netlink/NetlinkProto.h	70;"	d
NLMSG_ALIGNTO	lib/netlink-protocol.h	75;"	d
NLMSG_DEFAULT_SIZE	datapath/linux/compat/include/linux/netlink.h	16;"	d
NLMSG_DONE	datapath-windows/ovsext/Netlink/NetlinkProto.h	63;"	d
NLMSG_DONE	lib/netlink-protocol.h	59;"	d
NLMSG_ERROR	datapath-windows/ovsext/Netlink/NetlinkProto.h	62;"	d
NLMSG_ERROR	lib/netlink-protocol.h	58;"	d
NLMSG_HDRLEN	datapath-windows/ovsext/Netlink/NetlinkProto.h	114;"	d
NLMSG_HDRLEN	lib/netlink-protocol.h	77;"	d
NLMSG_MIN_TYPE	datapath-windows/ovsext/Netlink/NetlinkProto.h	66;"	d
NLMSG_MIN_TYPE	lib/netlink-protocol.h	62;"	d
NLMSG_NOOP	datapath-windows/ovsext/Netlink/NetlinkProto.h	61;"	d
NLMSG_NOOP	lib/netlink-protocol.h	57;"	d
NLMSG_OVERRUN	datapath-windows/ovsext/Netlink/NetlinkProto.h	64;"	d
NLMSG_OVERRUN	lib/netlink-protocol.h	60;"	d
NLM_F_ACK	datapath-windows/ovsext/Netlink/NetlinkProto.h	50;"	d
NLM_F_ACK	lib/netlink-protocol.h	46;"	d
NLM_F_ATOMIC	datapath-windows/ovsext/Netlink/NetlinkProto.h	56;"	d
NLM_F_ATOMIC	lib/netlink-protocol.h	52;"	d
NLM_F_CREATE	datapath-windows/ovsext/Netlink/NetlinkProto.h	57;"	d
NLM_F_CREATE	lib/netlink-protocol.h	53;"	d
NLM_F_DUMP	datapath-windows/ovsext/Netlink/NetlinkProto.h	58;"	d
NLM_F_DUMP	lib/netlink-protocol.h	54;"	d
NLM_F_ECHO	datapath-windows/ovsext/Netlink/NetlinkProto.h	51;"	d
NLM_F_ECHO	lib/netlink-protocol.h	47;"	d
NLM_F_EXCL	datapath-windows/ovsext/Netlink/NetlinkProto.h	55;"	d
NLM_F_EXCL	lib/netlink-protocol.h	51;"	d
NLM_F_MATCH	datapath-windows/ovsext/Netlink/NetlinkProto.h	54;"	d
NLM_F_MATCH	lib/netlink-protocol.h	50;"	d
NLM_F_MULTI	datapath-windows/ovsext/Netlink/NetlinkProto.h	49;"	d
NLM_F_MULTI	lib/netlink-protocol.h	45;"	d
NLM_F_REQUEST	datapath-windows/ovsext/Netlink/NetlinkProto.h	48;"	d
NLM_F_REQUEST	lib/netlink-protocol.h	44;"	d
NLM_F_ROOT	datapath-windows/ovsext/Netlink/NetlinkProto.h	53;"	d
NLM_F_ROOT	lib/netlink-protocol.h	49;"	d
NL_ATTR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} NL_ATTR, *PNL_ATTR;$/;"	t	typeref:struct:_NL_ATTR
NL_ATTR_FOR_EACH	datapath-windows/ovsext/Netlink/Netlink.h	73;"	d
NL_ATTR_FOR_EACH	lib/netlink.h	166;"	d
NL_ATTR_FOR_EACH_UNSAFE	datapath-windows/ovsext/Netlink/Netlink.h	81;"	d
NL_ATTR_FOR_EACH_UNSAFE	lib/netlink.h	175;"	d
NL_ATTR_GET_AS	datapath-windows/ovsext/Netlink/Netlink.h	86;"	d
NL_ATTR_GET_AS	lib/netlink.c	558;"	d	file:
NL_ATTR_SIZE	lib/netlink.h	110;"	d
NL_ATTR_TYPE	datapath-windows/ovsext/Netlink/Netlink.h	/^} NL_ATTR_TYPE;$/;"	t	typeref:enum:__anon24
NL_A_BE16	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_BE16 = NL_A_U16,$/;"	e	enum:__anon24
NL_A_BE16	lib/netlink.h	/^    NL_A_BE16 = NL_A_U16,$/;"	e	enum:nl_attr_type
NL_A_BE16_SIZE	lib/netlink.h	115;"	d
NL_A_BE32	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_BE32 = NL_A_U32,$/;"	e	enum:__anon24
NL_A_BE32	lib/netlink.h	/^    NL_A_BE32 = NL_A_U32,$/;"	e	enum:nl_attr_type
NL_A_BE32_SIZE	lib/netlink.h	116;"	d
NL_A_BE64	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_BE64 = NL_A_U64,$/;"	e	enum:__anon24
NL_A_BE64	lib/netlink.h	/^    NL_A_BE64 = NL_A_U64,$/;"	e	enum:nl_attr_type
NL_A_BE64_SIZE	lib/netlink.h	117;"	d
NL_A_FLAG	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_FLAG,$/;"	e	enum:__anon24
NL_A_FLAG	lib/netlink.h	/^    NL_A_FLAG,$/;"	e	enum:nl_attr_type
NL_A_FLAG_SIZE	lib/netlink.h	118;"	d
NL_A_IPV6	lib/netlink.h	/^    NL_A_IPV6,$/;"	e	enum:nl_attr_type
NL_A_IPV6_SIZE	lib/netlink.h	119;"	d
NL_A_NESTED	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_NESTED,$/;"	e	enum:__anon24
NL_A_NESTED	lib/netlink.h	/^    NL_A_NESTED,$/;"	e	enum:nl_attr_type
NL_A_NO_ATTR	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_NO_ATTR = 0,$/;"	e	enum:__anon24
NL_A_NO_ATTR	lib/netlink.h	/^    NL_A_NO_ATTR = 0,$/;"	e	enum:nl_attr_type
NL_A_STRING	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_STRING,$/;"	e	enum:__anon24
NL_A_STRING	lib/netlink.h	/^    NL_A_STRING,$/;"	e	enum:nl_attr_type
NL_A_U16	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_U16,$/;"	e	enum:__anon24
NL_A_U16	lib/netlink.h	/^    NL_A_U16,$/;"	e	enum:nl_attr_type
NL_A_U16_SIZE	lib/netlink.h	112;"	d
NL_A_U32	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_U32,$/;"	e	enum:__anon24
NL_A_U32	lib/netlink.h	/^    NL_A_U32,$/;"	e	enum:nl_attr_type
NL_A_U32_SIZE	lib/netlink.h	113;"	d
NL_A_U64	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_U64,$/;"	e	enum:__anon24
NL_A_U64	lib/netlink.h	/^    NL_A_U64,$/;"	e	enum:nl_attr_type
NL_A_U64_SIZE	lib/netlink.h	114;"	d
NL_A_U8	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_U8,$/;"	e	enum:__anon24
NL_A_U8	lib/netlink.h	/^    NL_A_U8,$/;"	e	enum:nl_attr_type
NL_A_U8_SIZE	lib/netlink.h	111;"	d
NL_A_UNSPEC	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_UNSPEC,$/;"	e	enum:__anon24
NL_A_UNSPEC	lib/netlink.h	/^    NL_A_UNSPEC,$/;"	e	enum:nl_attr_type
NL_A_VAR_LEN	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_A_VAR_LEN,$/;"	e	enum:__anon24
NL_BUFFER	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^} NL_BUFFER, *PNL_BUFFER;$/;"	t	typeref:struct:_NL_BUF
NL_BUF_CAN_ADD	datapath-windows/ovsext/Netlink/NetlinkBuf.c	63;"	d	file:
NL_BUF_IS_VALID_OFFSET	datapath-windows/ovsext/Netlink/NetlinkBuf.c	58;"	d	file:
NL_BUF_TAIL_OFFSET	datapath-windows/ovsext/Netlink/NetlinkBuf.c	69;"	d	file:
NL_BUF_USED_SPACE	datapath-windows/ovsext/Netlink/NetlinkBuf.c	53;"	d	file:
NL_DUMP_BUFSIZE	lib/netlink-socket.h	257;"	d
NL_ERROR	datapath-windows/ovsext/Netlink/NetlinkError.h	/^} NL_ERROR;$/;"	t	typeref:enum:_NL_ERROR_
NL_ERROR_2BIG	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_2BIG = ((ULONG)-7),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ACCES	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ACCES = ((ULONG)-13),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ADDRINUSE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ADDRINUSE = ((ULONG)-100),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ADDRNOTAVAIL	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ADDRNOTAVAIL = ((ULONG)-101),$/;"	e	enum:_NL_ERROR_
NL_ERROR_AFNOSUPPORT	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_AFNOSUPPORT = ((ULONG)-102),$/;"	e	enum:_NL_ERROR_
NL_ERROR_AGAIN	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_AGAIN = ((ULONG)-11),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ALREADY	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ALREADY = ((ULONG)-103),$/;"	e	enum:_NL_ERROR_
NL_ERROR_BADF	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_BADF = ((ULONG)-9),$/;"	e	enum:_NL_ERROR_
NL_ERROR_BADMSG	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_BADMSG = ((ULONG)-104),$/;"	e	enum:_NL_ERROR_
NL_ERROR_BUSY	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_BUSY = ((ULONG)-16),$/;"	e	enum:_NL_ERROR_
NL_ERROR_CANCELED	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_CANCELED = ((ULONG)-105),$/;"	e	enum:_NL_ERROR_
NL_ERROR_CHILD	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_CHILD = ((ULONG)-10),$/;"	e	enum:_NL_ERROR_
NL_ERROR_CONNABORTED	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_CONNABORTED = ((ULONG)-106),$/;"	e	enum:_NL_ERROR_
NL_ERROR_CONNREFUSED	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_CONNREFUSED = ((ULONG)-107),$/;"	e	enum:_NL_ERROR_
NL_ERROR_CONNRESET	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_CONNRESET = ((ULONG)-108),$/;"	e	enum:_NL_ERROR_
NL_ERROR_DEADLK	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_DEADLK = ((ULONG)-36),$/;"	e	enum:_NL_ERROR_
NL_ERROR_DESTADDRREQ	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_DESTADDRREQ = ((ULONG)-109),$/;"	e	enum:_NL_ERROR_
NL_ERROR_DOM	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_DOM = ((ULONG)-33),$/;"	e	enum:_NL_ERROR_
NL_ERROR_EXIST	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_EXIST = ((ULONG)-17),$/;"	e	enum:_NL_ERROR_
NL_ERROR_FAULT	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_FAULT = ((ULONG)-14),$/;"	e	enum:_NL_ERROR_
NL_ERROR_FBIG	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_FBIG = ((ULONG)-27),$/;"	e	enum:_NL_ERROR_
NL_ERROR_HOSTUNREACH	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_HOSTUNREACH = ((ULONG)-110),$/;"	e	enum:_NL_ERROR_
NL_ERROR_IDRM	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_IDRM = ((ULONG)-111),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ILSEQ	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ILSEQ = ((ULONG)-42),$/;"	e	enum:_NL_ERROR_
NL_ERROR_INPROGRESS	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_INPROGRESS = ((ULONG)-112),$/;"	e	enum:_NL_ERROR_
NL_ERROR_INTR	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_INTR = ((ULONG)-4),$/;"	e	enum:_NL_ERROR_
NL_ERROR_INVAL	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_INVAL = ((ULONG)-22),$/;"	e	enum:_NL_ERROR_
NL_ERROR_IO	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_IO = ((ULONG)-5),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ISCONN	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ISCONN = ((ULONG)-113),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ISDIR	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ISDIR = ((ULONG)-21),$/;"	e	enum:_NL_ERROR_
NL_ERROR_LOOP	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_LOOP = ((ULONG)-114),$/;"	e	enum:_NL_ERROR_
NL_ERROR_MFILE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_MFILE = ((ULONG)-24),$/;"	e	enum:_NL_ERROR_
NL_ERROR_MLINK	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_MLINK = ((ULONG)-31),$/;"	e	enum:_NL_ERROR_
NL_ERROR_MSGSIZE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_MSGSIZE = ((ULONG)-115),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NAMETOOLONG	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NAMETOOLONG = ((ULONG)-38),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NETDOWN	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NETDOWN = ((ULONG)-116),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NETRESET	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NETRESET = ((ULONG)-117),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NETUNREACH	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NETUNREACH = ((ULONG)-118),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NFILE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NFILE = ((ULONG)-23),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOBUFS	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOBUFS = ((ULONG)-119),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NODATA	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NODATA = ((ULONG)-120),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NODEV	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NODEV = ((ULONG)-19),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOENT	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOENT = ((ULONG)-2),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOEXEC	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOEXEC = ((ULONG)-8),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOLCK	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOLCK = ((ULONG)-39),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOLINK	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOLINK = ((ULONG)-121),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOMEM	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOMEM = ((ULONG)-12),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOMSG	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOMSG = ((ULONG)-122),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOPROTOOPT	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOPROTOOPT = ((ULONG)-123),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOSPC	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOSPC = ((ULONG)-28),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOSR	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOSR = ((ULONG)-124),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOSTR	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOSTR = ((ULONG)-125),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOSYS	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOSYS = ((ULONG)-40),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOTCONN	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOTCONN = ((ULONG)-126),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOTDIR	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOTDIR = ((ULONG)-20),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOTEMPTY	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOTEMPTY = ((ULONG)-41),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOTRECOVERABLE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOTRECOVERABLE = ((ULONG)-127),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOTSOCK	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOTSOCK = ((ULONG)-128),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOTSUPP	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOTSUPP = ((ULONG)-129),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NOTTY	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NOTTY = ((ULONG)-25),$/;"	e	enum:_NL_ERROR_
NL_ERROR_NXIO	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_NXIO = ((ULONG)-6),$/;"	e	enum:_NL_ERROR_
NL_ERROR_OPNOTSUPP	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_OPNOTSUPP = ((ULONG)-130),$/;"	e	enum:_NL_ERROR_
NL_ERROR_OTHER	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_OTHER = ((ULONG)-131),$/;"	e	enum:_NL_ERROR_
NL_ERROR_OVERFLOW	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_OVERFLOW = ((ULONG)-132),$/;"	e	enum:_NL_ERROR_
NL_ERROR_OWNERDEAD	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_OWNERDEAD = ((ULONG)-133),$/;"	e	enum:_NL_ERROR_
NL_ERROR_PENDING	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_PENDING = ((ULONG)-141),$/;"	e	enum:_NL_ERROR_
NL_ERROR_PERM	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_PERM = ((ULONG)-1),$/;"	e	enum:_NL_ERROR_
NL_ERROR_PIPE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_PIPE = ((ULONG)-32),$/;"	e	enum:_NL_ERROR_
NL_ERROR_PROTO	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_PROTO = ((ULONG)-134),$/;"	e	enum:_NL_ERROR_
NL_ERROR_PROTONOSUPPORT	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_PROTONOSUPPORT = ((ULONG)-135),$/;"	e	enum:_NL_ERROR_
NL_ERROR_PROTOTYPE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_PROTOTYPE = ((ULONG)-136),$/;"	e	enum:_NL_ERROR_
NL_ERROR_RANGE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_RANGE = ((ULONG)-34),$/;"	e	enum:_NL_ERROR_
NL_ERROR_ROFS	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_ROFS = ((ULONG)-30),$/;"	e	enum:_NL_ERROR_
NL_ERROR_SPIPE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_SPIPE = ((ULONG)-29),$/;"	e	enum:_NL_ERROR_
NL_ERROR_SRCH	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_SRCH = ((ULONG)-3),$/;"	e	enum:_NL_ERROR_
NL_ERROR_STRUNCATE	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_STRUNCATE = ((ULONG)-80),$/;"	e	enum:_NL_ERROR_
NL_ERROR_SUCCESS	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_SUCCESS = 0,$/;"	e	enum:_NL_ERROR_
NL_ERROR_TIME	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_TIME = ((ULONG)-137),$/;"	e	enum:_NL_ERROR_
NL_ERROR_TIMEDOUT	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_TIMEDOUT = ((ULONG)-138),$/;"	e	enum:_NL_ERROR_
NL_ERROR_TXTBSY	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_TXTBSY = ((ULONG)-139),$/;"	e	enum:_NL_ERROR_
NL_ERROR_WOULDBLOCK	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_WOULDBLOCK = ((ULONG)-140),$/;"	e	enum:_NL_ERROR_
NL_ERROR_XDEV	datapath-windows/ovsext/Netlink/NetlinkError.h	/^    NL_ERROR_XDEV = ((ULONG)-18),$/;"	e	enum:_NL_ERROR_
NL_MSG_ERR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} NL_MSG_ERR, *PNL_MSG_ERR;$/;"	t	typeref:struct:_NlMsgErr
NL_MSG_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} NL_MSG_HDR, *PNL_MSG_HDR;$/;"	t	typeref:struct:_NL_MSG_HDR
NL_NESTED_FOR_EACH	datapath-windows/ovsext/Netlink/Netlink.h	210;"	d
NL_NESTED_FOR_EACH	lib/netlink.h	181;"	d
NL_NESTED_FOR_EACH_UNSAFE	datapath-windows/ovsext/Netlink/Netlink.h	212;"	d
NL_NESTED_FOR_EACH_UNSAFE	lib/netlink.h	183;"	d
NL_POLICY	datapath-windows/ovsext/Netlink/Netlink.h	/^} NL_POLICY, *PNL_POLICY;$/;"	t	typeref:struct:_NL_POLICY
NL_POLICY_FOR	lib/netlink.h	215;"	d
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	datapath/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NMEDIT	datapath/Makefile	/^NMEDIT = $/;"	m
NONE	lib/netdev-dummy.c	/^    NONE,       \/* No connection is configured. *\/$/;"	e	enum:dummy_packet_conn_type	file:
NON_PMD_CORE_ID	lib/netdev-dpdk.h	23;"	d
NON_PMD_CORE_ID	lib/netdev-dpdk.h	32;"	d
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	datapath/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	datapath/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOT_LOCKED	python/ovs/db/idl.py	/^    NOT_LOCKED = "not locked"    # Server hasn't given us the lock yet.$/;"	v	class:Transaction
NO_HANDLE	python/ovstest/tests.py	/^NO_HANDLE = -1$/;"	v
NO_VLAN_WORKAROUND_DRIVERS	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^NO_VLAN_WORKAROUND_DRIVERS = ($/;"	v
NROFF	Makefile	/^NROFF = nroff$/;"	m
NR_PMD_THREADS	lib/dpif-netdev.h	46;"	d
NR_QUEUE	lib/dpif-netdev.h	45;"	d
NSSWITCH_CONF	utilities/bugtool/ovs-bugtool	/^NSSWITCH_CONF = '\/etc\/nsswitch.conf'$/;"	v
NTP_CONF	utilities/bugtool/ovs-bugtool	/^NTP_CONF = '\/etc\/ntp.conf'$/;"	v
NTRT_SELECTION_METHOD	include/openflow/netronome-ext.h	/^        NTRT_SELECTION_METHOD = 1,$/;"	e	enum:ntr_group_mod_subtype
NTR_COMPAT_VENDOR_ID	include/openflow/openflow-common.h	107;"	d
NTR_MAX_SELECTION_METHOD_LEN	include/openflow/netronome-ext.h	34;"	d
NTR_VENDOR_ID	include/openflow/openflow-common.h	106;"	d
NUM_DPIF_IPFIX_TUNNEL	ofproto/ofproto-dpif-ipfix.c	/^    NUM_DPIF_IPFIX_TUNNEL$/;"	e	enum:dpif_ipfix_tunnel_type	file:
NUM_IPFIX_PROTO_L2	ofproto/ofproto-dpif-ipfix.c	/^    NUM_IPFIX_PROTO_L2$/;"	e	enum:ipfix_proto_l2	file:
NUM_IPFIX_PROTO_L3	ofproto/ofproto-dpif-ipfix.c	/^    NUM_IPFIX_PROTO_L3$/;"	e	enum:ipfix_proto_l3	file:
NUM_IPFIX_PROTO_L4	ofproto/ofproto-dpif-ipfix.c	/^    NUM_IPFIX_PROTO_L4$/;"	e	enum:ipfix_proto_l4	file:
NUM_IPFIX_PROTO_TUNNEL	ofproto/ofproto-dpif-ipfix.c	/^    NUM_IPFIX_PROTO_TUNNEL$/;"	e	enum:ipfix_proto_tunnel	file:
NUM_PKT_ATTR_REQUIRED	datapath-windows/ovsext/DpInternal.h	131;"	d
NXAST_RAW_BUNDLE	lib/ofp-actions.c	/^    NXAST_RAW_BUNDLE,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_BUNDLE_LOAD	lib/ofp-actions.c	/^    NXAST_RAW_BUNDLE_LOAD,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_CONJUNCTION	lib/ofp-actions.c	/^    NXAST_RAW_CONJUNCTION,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_CONTROLLER	lib/ofp-actions.c	/^    NXAST_RAW_CONTROLLER,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_CT	lib/ofp-actions.c	/^    NXAST_RAW_CT,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_DEBUG_RECIRC	lib/ofp-actions.c	/^    NXAST_RAW_DEBUG_RECIRC,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_DEC_TTL_CNT_IDS	lib/ofp-actions.c	/^    NXAST_RAW_DEC_TTL_CNT_IDS,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_EXIT	lib/ofp-actions.c	/^    NXAST_RAW_EXIT,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_FIN_TIMEOUT	lib/ofp-actions.c	/^    NXAST_RAW_FIN_TIMEOUT,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_LEARN	lib/ofp-actions.c	/^    NXAST_RAW_LEARN,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_MULTIPATH	lib/ofp-actions.c	/^    NXAST_RAW_MULTIPATH,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_NOTE	lib/ofp-actions.c	/^    NXAST_RAW_NOTE,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_OUTPUT_REG	lib/ofp-actions.c	/^    NXAST_RAW_OUTPUT_REG,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_OUTPUT_REG2	lib/ofp-actions.c	/^    NXAST_RAW_OUTPUT_REG2,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_POP_QUEUE	lib/ofp-actions.c	/^    NXAST_RAW_POP_QUEUE,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_REG_LOAD	lib/ofp-actions.c	/^    NXAST_RAW_REG_LOAD,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_REG_LOAD2	lib/ofp-actions.c	/^    NXAST_RAW_REG_LOAD2,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_REG_MOVE	lib/ofp-actions.c	/^    NXAST_RAW_REG_MOVE,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_RESUBMIT	lib/ofp-actions.c	/^    NXAST_RAW_RESUBMIT,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_RESUBMIT_TABLE	lib/ofp-actions.c	/^    NXAST_RAW_RESUBMIT_TABLE,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_SAMPLE	lib/ofp-actions.c	/^    NXAST_RAW_SAMPLE,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_SET_TUNNEL	lib/ofp-actions.c	/^    NXAST_RAW_SET_TUNNEL,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_SET_TUNNEL64	lib/ofp-actions.c	/^    NXAST_RAW_SET_TUNNEL64,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_STACK_POP	lib/ofp-actions.c	/^    NXAST_RAW_STACK_POP,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_STACK_PUSH	lib/ofp-actions.c	/^    NXAST_RAW_STACK_PUSH,$/;"	e	enum:ofp_raw_action_type	file:
NXAST_RAW_WRITE_METADATA	lib/ofp-actions.c	/^    NXAST_RAW_WRITE_METADATA,$/;"	e	enum:ofp_raw_action_type	file:
NXET_VENDOR	include/openflow/nicira-ext.h	54;"	d
NXFF_NXM	include/openflow/nicira-ext.h	/^    NXFF_NXM = 2                 \/* Nicira extended match. *\/$/;"	e	enum:nx_flow_format
NXFF_OPENFLOW10	include/openflow/nicira-ext.h	/^    NXFF_OPENFLOW10 = 0,         \/* Standard OpenFlow 1.0 compatible. *\/$/;"	e	enum:nx_flow_format
NXFME_ABBREV	include/openflow/nicira-ext.h	/^    NXFME_ABBREV = 3,           \/* Abbreviated reply. *\/$/;"	e	enum:nx_flow_update_event
NXFME_ADDED	include/openflow/nicira-ext.h	/^    NXFME_ADDED = 0,            \/* Flow was added. *\/$/;"	e	enum:nx_flow_update_event
NXFME_DELETED	include/openflow/nicira-ext.h	/^    NXFME_DELETED = 1,          \/* Flow was deleted. *\/$/;"	e	enum:nx_flow_update_event
NXFME_MODIFIED	include/openflow/nicira-ext.h	/^    NXFME_MODIFIED = 2,         \/* Flow (generally its actions) was changed. *\/$/;"	e	enum:nx_flow_update_event
NXFMF_ACTIONS	include/openflow/nicira-ext.h	/^    NXFMF_ACTIONS = 1 << 4,     \/* If set, actions are included. *\/$/;"	e	enum:nx_flow_monitor_flags
NXFMF_ADD	include/openflow/nicira-ext.h	/^    NXFMF_ADD = 1 << 1,         \/* New matching flows as they are added. *\/$/;"	e	enum:nx_flow_monitor_flags
NXFMF_DELETE	include/openflow/nicira-ext.h	/^    NXFMF_DELETE = 1 << 2,      \/* Old matching flows as they are removed. *\/$/;"	e	enum:nx_flow_monitor_flags
NXFMF_INITIAL	include/openflow/nicira-ext.h	/^    NXFMF_INITIAL = 1 << 0,     \/* Initially matching flows. *\/$/;"	e	enum:nx_flow_monitor_flags
NXFMF_MODIFY	include/openflow/nicira-ext.h	/^    NXFMF_MODIFY = 1 << 3,      \/* Matching flows as they are changed. *\/$/;"	e	enum:nx_flow_monitor_flags
NXFMF_OWN	include/openflow/nicira-ext.h	/^    NXFMF_OWN = 1 << 5,         \/* If set, include own changes in full. *\/$/;"	e	enum:nx_flow_monitor_flags
NXGTMC_ADD	include/openflow/nicira-ext.h	/^    NXGTMC_ADD,          \/* New mappings (fails if an option is already$/;"	e	enum:nx_geneve_table_mod_command
NXGTMC_CLEAR	include/openflow/nicira-ext.h	/^    NXGTMC_CLEAR,        \/* Clear all mappings. Additional information$/;"	e	enum:nx_geneve_table_mod_command
NXGTMC_DELETE	include/openflow/nicira-ext.h	/^    NXGTMC_DELETE,       \/* Delete mappings, identified by index$/;"	e	enum:nx_geneve_table_mod_command
NXM_HEADER	lib/nx-match.c	145;"	d	file:
NXM_HEADER_ARGS	lib/nx-match.c	153;"	d	file:
NXM_HEADER_FMT	lib/nx-match.c	152;"	d	file:
NXM_NX_COOKIE	lib/nx-match.c	181;"	d	file:
NXM_NX_COOKIE_W	lib/nx-match.c	182;"	d	file:
NXM_NX_MAX_REGS	include/openflow/nicira-ext.h	497;"	d
NXM_TYPICAL_LEN	lib/nx-match.h	157;"	d
NXPIF_NXM	include/openflow/nicira-ext.h	/^    NXPIF_NXM = 1               \/* Nicira Extended. *\/$/;"	e	enum:nx_packet_in_format
NXPIF_OPENFLOW10	include/openflow/nicira-ext.h	/^    NXPIF_OPENFLOW10 = 0,       \/* Standard OpenFlow 1.0 compatible. *\/$/;"	e	enum:nx_packet_in_format
NXVC_VENDOR_ERROR	include/openflow/nicira-ext.h	/^    NXVC_VENDOR_ERROR           \/* 'data' contains struct nx_vendor_error. *\/$/;"	e	enum:nx_vendor_code
NX_BD_ALG_ACTIVE_BACKUP	lib/ofp-actions.h	/^    NX_BD_ALG_ACTIVE_BACKUP = 0,$/;"	e	enum:nx_bd_algorithm
NX_BD_ALG_HRW	lib/ofp-actions.h	/^    NX_BD_ALG_HRW = 1$/;"	e	enum:nx_bd_algorithm
NX_CT_F_COMMIT	lib/ofp-actions.h	/^    NX_CT_F_COMMIT = 1 << 0,$/;"	e	enum:nx_conntrack_flags
NX_CT_RECIRC_NONE	lib/ofp-actions.h	486;"	d
NX_HASH_FIELDS_ETH_SRC	include/openflow/nicira-ext.h	/^    NX_HASH_FIELDS_ETH_SRC,$/;"	e	enum:nx_hash_fields
NX_HASH_FIELDS_SYMMETRIC_L3L4	include/openflow/nicira-ext.h	/^    NX_HASH_FIELDS_SYMMETRIC_L3L4,$/;"	e	enum:nx_hash_fields
NX_HASH_FIELDS_SYMMETRIC_L3L4_UDP	include/openflow/nicira-ext.h	/^    NX_HASH_FIELDS_SYMMETRIC_L3L4_UDP$/;"	e	enum:nx_hash_fields
NX_HASH_FIELDS_SYMMETRIC_L4	include/openflow/nicira-ext.h	/^    NX_HASH_FIELDS_SYMMETRIC_L4,$/;"	e	enum:nx_hash_fields
NX_IP_FRAG_ANY	include/openflow/nicira-ext.h	500;"	d
NX_IP_FRAG_LATER	include/openflow/nicira-ext.h	501;"	d
NX_LEARN_DST_LOAD	lib/ofp-actions.h	594;"	d
NX_LEARN_DST_MASK	lib/ofp-actions.h	597;"	d
NX_LEARN_DST_MATCH	lib/ofp-actions.h	593;"	d
NX_LEARN_DST_OUTPUT	lib/ofp-actions.h	595;"	d
NX_LEARN_DST_RESERVED	lib/ofp-actions.h	596;"	d
NX_LEARN_F_DELETE_LEARNED	lib/ofp-actions.h	/^    NX_LEARN_F_DELETE_LEARNED = 1 << 1,$/;"	e	enum:nx_learn_flags
NX_LEARN_F_SEND_FLOW_REM	lib/ofp-actions.h	/^    NX_LEARN_F_SEND_FLOW_REM = 1 << 0,$/;"	e	enum:nx_learn_flags
NX_LEARN_N_BITS_MASK	lib/ofp-actions.h	587;"	d
NX_LEARN_SRC_FIELD	lib/ofp-actions.h	589;"	d
NX_LEARN_SRC_IMMEDIATE	lib/ofp-actions.h	590;"	d
NX_LEARN_SRC_MASK	lib/ofp-actions.h	591;"	d
NX_MATCH_H	lib/nx-match.h	18;"	d
NX_MP_ALG_HASH_THRESHOLD	lib/ofp-actions.h	/^    NX_MP_ALG_HASH_THRESHOLD = 1,$/;"	e	enum:nx_mp_algorithm
NX_MP_ALG_HRW	lib/ofp-actions.h	/^    NX_MP_ALG_HRW = 2,$/;"	e	enum:nx_mp_algorithm
NX_MP_ALG_ITER_HASH	lib/ofp-actions.h	/^    NX_MP_ALG_ITER_HASH = 3,$/;"	e	enum:nx_mp_algorithm
NX_MP_ALG_MODULO_N	lib/ofp-actions.h	/^    NX_MP_ALG_MODULO_N = 0,$/;"	e	enum:nx_mp_algorithm
NX_ROLE_MASTER	include/openflow/nicira-ext.h	/^    NX_ROLE_MASTER,             \/* Full access, at most one. *\/$/;"	e	enum:nx_role
NX_ROLE_OTHER	include/openflow/nicira-ext.h	/^    NX_ROLE_OTHER,              \/* Default role, full access. *\/$/;"	e	enum:nx_role
NX_ROLE_SLAVE	include/openflow/nicira-ext.h	/^    NX_ROLE_SLAVE               \/* Read-only access. *\/$/;"	e	enum:nx_role
NX_TUN_FLAG_OAM	include/openflow/nicira-ext.h	504;"	d
NX_VENDOR_ID	build-aux/extract-ofp-msgs	/^NX_VENDOR_ID = 0x00002320$/;"	v
NX_VENDOR_ID	include/openflow/openflow-common.h	108;"	d
N_BATCH_MAX	tests/test-cmap.c	269;"	d	file:
N_DL_DST_VALUES	tests/test-classifier.c	382;"	d	file:
N_DL_SRC_VALUES	tests/test-classifier.c	381;"	d	file:
N_DL_TYPE_VALUES	tests/test-classifier.c	378;"	d	file:
N_FLOWS	tests/test-bundle.c	27;"	d	file:
N_FLOW_VALUES	tests/test-classifier.c	386;"	d	file:
N_IN_PORT_VALUES	tests/test-classifier.c	376;"	d	file:
N_MATCH_TYPES	ofproto/tunnel.c	98;"	d	file:
N_METADATA_VALUES	tests/test-classifier.c	375;"	d	file:
N_NL_ATTR_TYPES	datapath-windows/ovsext/Netlink/Netlink.h	/^    N_NL_ATTR_TYPES$/;"	e	enum:__anon24
N_NL_ATTR_TYPES	lib/netlink.h	/^    N_NL_ATTR_TYPES$/;"	e	enum:nl_attr_type
N_NW_DSCP_VALUES	tests/test-classifier.c	384;"	d	file:
N_NW_DST_VALUES	tests/test-classifier.c	373;"	d	file:
N_NW_PROTO_VALUES	tests/test-classifier.c	383;"	d	file:
N_NW_SRC_VALUES	tests/test-classifier.c	372;"	d	file:
N_OFPACTS	lib/ofp-actions.h	/^    N_OFPACTS = OFPACTS$/;"	e	enum:__anon128
N_OVS_INSTRUCTIONS	lib/ofp-actions.h	/^    N_OVS_INSTRUCTIONS = OVS_INSTRUCTIONS$/;"	e	enum:__anon130
N_PROTO_ABBREVS	lib/ofp-util.c	793;"	d	file:
N_SCHEDULERS	ofproto/connmgr.c	81;"	d	file:
N_SIGNALS	lib/signals.c	33;"	d	file:
N_SIGNALS	lib/signals.c	35;"	d	file:
N_SIGNALS	lib/signals.c	39;"	d	file:
N_TABLES	ofproto/ofproto-dpif.h	/^enum { N_TABLES = 255 };$/;"	e	enum:__anon185
N_TP_DST_VALUES	tests/test-classifier.c	380;"	d	file:
N_TP_SRC_VALUES	tests/test-classifier.c	379;"	d	file:
N_TUN_ID_VALUES	tests/test-classifier.c	374;"	d	file:
N_UMAPS	ofproto/ofproto-dpif-upcall.c	66;"	d	file:
N_VLAN_TCI_VALUES	tests/test-classifier.c	377;"	d	file:
NdisFilterHandle	datapath-windows/ovsext/Switch.h	/^    NDIS_HANDLE NdisFilterHandle;$/;"	m	struct:_OVS_SWITCH_CONTEXT
NdisSwitchContext	datapath-windows/ovsext/Switch.h	/^    NDIS_SWITCH_CONTEXT NdisSwitchContext;$/;"	m	struct:_OVS_SWITCH_CONTEXT
NdisSwitchHandlers	datapath-windows/ovsext/Switch.h	/^    NDIS_SWITCH_OPTIONAL_HANDLERS NdisSwitchHandlers;$/;"	m	struct:_OVS_SWITCH_CONTEXT
NetlinkCmdHandler	datapath-windows/ovsext/Datapath.c	/^typedef NTSTATUS(NetlinkCmdHandler)(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	t	file:
Network	tests/MockXenAPI.py	/^class Network(Table):$/;"	c
NlAttrData	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrData(const PNL_ATTR nla)$/;"	f
NlAttrFindNested	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrFindNested(const PNL_ATTR nla, UINT16 type)$/;"	f
NlAttrFind__	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrFind__(const PNL_ATTR attrs, UINT32 size, UINT16 type)$/;"	f
NlAttrGet	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGet(const PNL_ATTR nla)$/;"	f
NlAttrGetBe16	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetBe16(const PNL_ATTR nla)$/;"	f
NlAttrGetBe32	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetBe32(const PNL_ATTR nla)$/;"	f
NlAttrGetBe64	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetBe64(const PNL_ATTR nla)$/;"	f
NlAttrGetBe8	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetBe8(const PNL_ATTR nla)$/;"	f
NlAttrGetSize	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetSize(const PNL_ATTR nla)$/;"	f
NlAttrGetU16	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetU16(const PNL_ATTR nla)$/;"	f
NlAttrGetU32	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetU32(const PNL_ATTR nla)$/;"	f
NlAttrGetU64	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetU64(const PNL_ATTR nla)$/;"	f
NlAttrGetU8	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrGetU8(const PNL_ATTR nla)$/;"	f
NlAttrGetUnspec	datapath-windows/ovsext/Netlink/Netlink.c	/^PVOID NlAttrGetUnspec(const PNL_ATTR nla, UINT32 size)$/;"	f
NlAttrIsValid	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrIsValid(const PNL_ATTR nla, UINT32 maxlen)$/;"	f
NlAttrLen	datapath-windows/ovsext/Netlink/Netlink.h	/^NlAttrLen(const PNL_ATTR nla)$/;"	f
NlAttrLenPad	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrLenPad(const PNL_ATTR nla, UINT32 maxlen)$/;"	f
NlAttrMaxLen	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrMaxLen(NL_ATTR_TYPE type)$/;"	f
NlAttrMinLen	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrMinLen(NL_ATTR_TYPE type)$/;"	f
NlAttrNext	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrNext(const PNL_ATTR nla)$/;"	f
NlAttrParse	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrParse(const PNL_MSG_HDR nlMsg, UINT32 attrOffset,$/;"	f
NlAttrParseNested	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrParseNested(const PNL_MSG_HDR nlMsg, UINT32 attrOffset,$/;"	f
NlAttrSize	datapath-windows/ovsext/Netlink/Netlink.h	/^static __inline NlAttrSize(UINT32 payloadSize)$/;"	f
NlAttrTotalSize	datapath-windows/ovsext/Netlink/Netlink.h	/^static __inline NlAttrTotalSize(UINT32 payloadSize)$/;"	f
NlAttrType	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrType(const PNL_ATTR nla)$/;"	f
NlAttrValidate	datapath-windows/ovsext/Netlink/Netlink.c	/^NlAttrValidate(const PNL_ATTR nla, const PNL_POLICY policy)$/;"	f
NlBufAt	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufAt(PNL_BUFFER nlBuf, UINT32 offset, UINT32 bufLen)$/;"	f
NlBufCopyAtHead	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufCopyAtHead(PNL_BUFFER nlBuf, PCHAR data, UINT32 len)$/;"	f
NlBufCopyAtHeadUninit	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufCopyAtHeadUninit(PNL_BUFFER nlBuf, UINT32 len)$/;"	f
NlBufCopyAtOffset	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufCopyAtOffset(PNL_BUFFER nlBuf, PCHAR data, UINT32 len, UINT32 offset)$/;"	f
NlBufCopyAtOffsetUninit	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufCopyAtOffsetUninit(PNL_BUFFER nlBuf, UINT32 len, UINT32 offset)$/;"	f
NlBufCopyAtTail	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufCopyAtTail(PNL_BUFFER nlBuf, PCHAR data, UINT32 len)$/;"	f
NlBufCopyAtTailUninit	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufCopyAtTailUninit(PNL_BUFFER nlBuf, UINT32 len)$/;"	f
NlBufDeInit	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufDeInit(PNL_BUFFER nlBuf)$/;"	f
NlBufInit	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^NlBufInit(PNL_BUFFER nlBuf, PCHAR base, UINT32 size)$/;"	f
NlBufRemLen	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^NlBufRemLen(PNL_BUFFER nlBuf)$/;"	f
NlBufSize	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^NlBufSize(PNL_BUFFER nlBuf)$/;"	f
NlBuildErrorMsg	datapath-windows/ovsext/Netlink/Netlink.c	/^NlBuildErrorMsg(POVS_MESSAGE msgIn, POVS_MESSAGE_ERROR msgError, UINT errorCode)$/;"	f
NlFillNlHdr	datapath-windows/ovsext/Netlink/Netlink.c	/^NlFillNlHdr(PNL_BUFFER nlBuf, UINT16 nlmsgType,$/;"	f
NlFillOvsMsg	datapath-windows/ovsext/Netlink/Netlink.c	/^NlFillOvsMsg(PNL_BUFFER nlBuf, UINT16 nlmsgType,$/;"	f
NlHdrPayload	datapath-windows/ovsext/Netlink/Netlink.c	/^NlHdrPayload(const PNL_MSG_HDR nlh)$/;"	f
NlHdrPayloadLen	datapath-windows/ovsext/Netlink/Netlink.c	/^NlHdrPayloadLen(const PNL_MSG_HDR nlh)$/;"	f
NlMapStatusToNlErr	datapath-windows/ovsext/Netlink/NetlinkError.h	/^NlMapStatusToNlErr(NTSTATUS status)$/;"	f
NlMsgAlignSize	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgAlignSize(const PNL_MSG_HDR nlh)$/;"	f
NlMsgAt	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgAt(const PNL_MSG_HDR nlh, UINT32 offset)$/;"	f
NlMsgAttrs	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgAttrs(const PNL_MSG_HDR nlh)$/;"	f
NlMsgAttrsLen	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgAttrsLen(const PNL_MSG_HDR nlh)$/;"	f
NlMsgEndNested	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgEndNested(PNL_BUFFER buf, UINT32 offset)$/;"	f
NlMsgNext	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgNext(const PNL_MSG_HDR nlh)$/;"	f
NlMsgPutGenlHdr	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutGenlHdr(PNL_BUFFER buf, PGENL_MSG_HDR genlMsg)$/;"	f
NlMsgPutHead	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHead(PNL_BUFFER buf, const PCHAR data, UINT32 len)$/;"	f
NlMsgPutHeadFlag	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadFlag(PNL_BUFFER buf, UINT16 type)$/;"	f
NlMsgPutHeadString	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadString(PNL_BUFFER buf, UINT16 type, PCHAR value)$/;"	f
NlMsgPutHeadU16	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadU16(PNL_BUFFER buf, UINT16 type, UINT16 value)$/;"	f
NlMsgPutHeadU32	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadU32(PNL_BUFFER buf, UINT16 type, UINT32 value)$/;"	f
NlMsgPutHeadU64	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadU64(PNL_BUFFER buf, UINT16 type, UINT64 value)$/;"	f
NlMsgPutHeadU8	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadU8(PNL_BUFFER buf, UINT16 type, UINT8 value)$/;"	f
NlMsgPutHeadUninit	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadUninit(PNL_BUFFER buf, UINT32 len)$/;"	f
NlMsgPutHeadUnspec	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadUnspec(PNL_BUFFER buf, UINT16 type, PCHAR data, UINT16 len)$/;"	f
NlMsgPutHeadUnspecUninit	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutHeadUnspecUninit(PNL_BUFFER buf, UINT16 type, UINT16 len)$/;"	f
NlMsgPutNested	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutNested(PNL_BUFFER buf, UINT16 type,$/;"	f
NlMsgPutNlHdr	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutNlHdr(PNL_BUFFER buf, PNL_MSG_HDR nlMsg)$/;"	f
NlMsgPutOvsHdr	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutOvsHdr(PNL_BUFFER buf, POVS_HDR ovsHdr)$/;"	f
NlMsgPutTail	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTail(PNL_BUFFER buf, const PCHAR data, UINT32 len)$/;"	f
NlMsgPutTailFlag	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailFlag(PNL_BUFFER buf, UINT16 type)$/;"	f
NlMsgPutTailString	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailString(PNL_BUFFER buf, UINT16 type, PCHAR value)$/;"	f
NlMsgPutTailU16	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailU16(PNL_BUFFER buf, UINT16 type, UINT16 value)$/;"	f
NlMsgPutTailU32	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailU32(PNL_BUFFER buf, UINT16 type, UINT32 value)$/;"	f
NlMsgPutTailU64	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailU64(PNL_BUFFER buf, UINT16 type, UINT64 value)$/;"	f
NlMsgPutTailU8	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailU8(PNL_BUFFER buf, UINT16 type, UINT8 value)$/;"	f
NlMsgPutTailUninit	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailUninit(PNL_BUFFER buf, UINT32 len)$/;"	f
NlMsgPutTailUnspec	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailUnspec(PNL_BUFFER buf, UINT16 type, PCHAR data, UINT16 len)$/;"	f
NlMsgPutTailUnspecUninit	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgPutTailUnspecUninit(PNL_BUFFER buf, UINT16 type, UINT16 len)$/;"	f
NlMsgSetSize	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgSetSize(const PNL_MSG_HDR nlh, UINT32 msgLen)$/;"	f
NlMsgSize	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgSize(const PNL_MSG_HDR nlh)$/;"	f
NlMsgStartNested	datapath-windows/ovsext/Netlink/Netlink.c	/^NlMsgStartNested(PNL_BUFFER buf, UINT16 type)$/;"	f
OAM_FLOW_REMOVED	lib/ofp-util.h	/^    OAM_FLOW_REMOVED,           \/* OFPT_FLOW_REMOVED or$/;"	e	enum:ofputil_async_msg_type
OAM_N_TYPES	lib/ofp-util.h	/^    OAM_N_TYPES$/;"	e	enum:ofputil_async_msg_type
OAM_PACKET_IN	lib/ofp-util.h	/^    OAM_PACKET_IN,              \/* OFPT_PACKET_IN or NXT_PACKET_IN. *\/$/;"	e	enum:ofputil_async_msg_type
OAM_PORT_STATUS	lib/ofp-util.h	/^    OAM_PORT_STATUS,            \/* OFPT_PORT_STATUS. *\/$/;"	e	enum:ofputil_async_msg_type
OAM_REQUESTFORWARD	lib/ofp-util.h	/^    OAM_REQUESTFORWARD,         \/* OFPT_REQUESTFORWARD. *\/$/;"	e	enum:ofputil_async_msg_type
OAM_ROLE_STATUS	lib/ofp-util.h	/^    OAM_ROLE_STATUS,            \/* OFPT_ROLE_STATUS. *\/$/;"	e	enum:ofputil_async_msg_type
OAM_TABLE_STATUS	lib/ofp-util.h	/^    OAM_TABLE_STATUS,           \/* OFPT_TABLE_STATUS. *\/$/;"	e	enum:ofputil_async_msg_type
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	datapath/Makefile	/^OBJDUMP = objdump$/;"	m
OBJECT_CONTAINING	lib/util.h	217;"	d
OBJECT_OFFSETOF	lib/util.h	196;"	d
OBJECT_OFFSETOF	lib/util.h	198;"	d
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	datapath/Makefile	/^OBJEXT = o$/;"	m
OBM_BTNCORNERS	datapath-windows/ovsext/resource.h	1523;"	d
OBM_BTSIZE	datapath-windows/ovsext/resource.h	1526;"	d
OBM_CHECK	datapath-windows/ovsext/resource.h	1525;"	d
OBM_CHECKBOXES	datapath-windows/ovsext/resource.h	1524;"	d
OBM_CLOSE	datapath-windows/ovsext/resource.h	1519;"	d
OBM_COMBO	datapath-windows/ovsext/resource.h	1503;"	d
OBM_DNARROW	datapath-windows/ovsext/resource.h	1517;"	d
OBM_DNARROWD	datapath-windows/ovsext/resource.h	1507;"	d
OBM_DNARROWI	datapath-windows/ovsext/resource.h	1501;"	d
OBM_LFARROW	datapath-windows/ovsext/resource.h	1515;"	d
OBM_LFARROWD	datapath-windows/ovsext/resource.h	1505;"	d
OBM_LFARROWI	datapath-windows/ovsext/resource.h	1499;"	d
OBM_MNARROW	datapath-windows/ovsext/resource.h	1504;"	d
OBM_OLD_CLOSE	datapath-windows/ovsext/resource.h	1532;"	d
OBM_OLD_DNARROW	datapath-windows/ovsext/resource.h	1529;"	d
OBM_OLD_LFARROW	datapath-windows/ovsext/resource.h	1527;"	d
OBM_OLD_REDUCE	datapath-windows/ovsext/resource.h	1522;"	d
OBM_OLD_RESTORE	datapath-windows/ovsext/resource.h	1520;"	d
OBM_OLD_RGARROW	datapath-windows/ovsext/resource.h	1528;"	d
OBM_OLD_UPARROW	datapath-windows/ovsext/resource.h	1530;"	d
OBM_OLD_ZOOM	datapath-windows/ovsext/resource.h	1521;"	d
OBM_REDUCE	datapath-windows/ovsext/resource.h	1514;"	d
OBM_REDUCED	datapath-windows/ovsext/resource.h	1511;"	d
OBM_RESTORE	datapath-windows/ovsext/resource.h	1512;"	d
OBM_RESTORED	datapath-windows/ovsext/resource.h	1509;"	d
OBM_RGARROW	datapath-windows/ovsext/resource.h	1516;"	d
OBM_RGARROWD	datapath-windows/ovsext/resource.h	1506;"	d
OBM_RGARROWI	datapath-windows/ovsext/resource.h	1500;"	d
OBM_SIZE	datapath-windows/ovsext/resource.h	1531;"	d
OBM_UPARROW	datapath-windows/ovsext/resource.h	1518;"	d
OBM_UPARROWD	datapath-windows/ovsext/resource.h	1508;"	d
OBM_UPARROWI	datapath-windows/ovsext/resource.h	1502;"	d
OBM_ZOOM	datapath-windows/ovsext/resource.h	1513;"	d
OBM_ZOOMD	datapath-windows/ovsext/resource.h	1510;"	d
OCR_APPSTARTING	datapath-windows/ovsext/resource.h	1498;"	d
OCR_CROSS	datapath-windows/ovsext/resource.h	1478;"	d
OCR_HAND	datapath-windows/ovsext/resource.h	1497;"	d
OCR_IBEAM	datapath-windows/ovsext/resource.h	1472;"	d
OCR_ICOCUR	datapath-windows/ovsext/resource.h	1495;"	d
OCR_ICON	datapath-windows/ovsext/resource.h	1489;"	d
OCR_NO	datapath-windows/ovsext/resource.h	1496;"	d
OCR_NORMAL	datapath-windows/ovsext/resource.h	1469;"	d
OCR_SIZE	datapath-windows/ovsext/resource.h	1488;"	d
OCR_SIZEALL	datapath-windows/ovsext/resource.h	1494;"	d
OCR_SIZENESW	datapath-windows/ovsext/resource.h	1491;"	d
OCR_SIZENS	datapath-windows/ovsext/resource.h	1493;"	d
OCR_SIZENWSE	datapath-windows/ovsext/resource.h	1490;"	d
OCR_SIZEWE	datapath-windows/ovsext/resource.h	1492;"	d
OCR_UP	datapath-windows/ovsext/resource.h	1481;"	d
OCR_WAIT	datapath-windows/ovsext/resource.h	1475;"	d
ODPP_LOCAL	lib/odp-util.h	76;"	d
ODPP_NONE	lib/odp-util.h	77;"	d
ODPUTIL_FLOW_KEY_BYTES	lib/odp-util.h	141;"	d
ODP_FIT_ERROR	lib/odp-util.h	/^    ODP_FIT_ERROR,              \/* The key was invalid. *\/$/;"	e	enum:odp_key_fitness
ODP_FIT_PERFECT	lib/odp-util.h	/^    ODP_FIT_PERFECT,            \/* The key had exactly the fields we expect. *\/$/;"	e	enum:odp_key_fitness
ODP_FIT_TOO_LITTLE	lib/odp-util.h	/^    ODP_FIT_TOO_LITTLE,         \/* The key lacked fields we expected to see. *\/$/;"	e	enum:odp_key_fitness
ODP_FIT_TOO_MUCH	lib/odp-util.h	/^    ODP_FIT_TOO_MUCH,           \/* The key had fields we don't understand. *\/$/;"	e	enum:odp_key_fitness
ODP_KEY_METADATA_SIZE	lib/odp-util.h	/^enum { ODP_KEY_METADATA_SIZE = 9 * 8 };$/;"	e	enum:__anon122
ODP_NETLINK_H	include/odp-netlink.h	46;"	d
ODP_PORT_C	include/openvswitch/types.h	120;"	d
ODP_UTIL_H	lib/odp-util.h	18;"	d
OFCONN_PRIMARY	ofproto/connmgr.h	/^    OFCONN_PRIMARY,             \/* An ordinary OpenFlow controller. *\/$/;"	e	enum:ofconn_type
OFCONN_REPLY_MAX	ofproto/connmgr.c	90;"	d	file:
OFCONN_SERVICE	ofproto/connmgr.h	/^    OFCONN_SERVICE              \/* A service connection, e.g. "ovs-ofctl". *\/$/;"	e	enum:ofconn_type
OFCTRL_H	ovn/controller/ofctrl.h	18;"	d
OFP10_VERSION	include/openflow/openflow-common.h	/^    OFP10_VERSION = 0x01,$/;"	e	enum:ofp_version
OFP10_VLAN_NONE	include/openflow/openflow-1.0.h	231;"	d
OFP11_INSTRUCTION_ALIGN	include/openflow/openflow-1.1.h	261;"	d
OFP11_PORT_C	include/openvswitch/types.h	121;"	d
OFP11_VERSION	include/openflow/openflow-common.h	/^    OFP11_VERSION = 0x02,$/;"	e	enum:ofp_version
OFP12_VERSION	include/openflow/openflow-common.h	/^    OFP12_VERSION = 0x03,$/;"	e	enum:ofp_version
OFP13_VERSION	include/openflow/openflow-common.h	/^    OFP13_VERSION = 0x04,$/;"	e	enum:ofp_version
OFP14_VERSION	include/openflow/openflow-common.h	/^    OFP14_VERSION = 0x05,$/;"	e	enum:ofp_version
OFP15_VERSION	include/openflow/openflow-common.h	/^    OFP15_VERSION = 0x06$/;"	e	enum:ofp_version
OFPACPT_FLOW_REMOVED_MASTER	include/openflow/openflow-1.4.h	/^    OFPACPT_FLOW_REMOVED_MASTER   = 5, \/* Flow removed mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_FLOW_REMOVED_SLAVE	include/openflow/openflow-1.4.h	/^    OFPACPT_FLOW_REMOVED_SLAVE    = 4, \/* Flow removed mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PACKET_IN_MASTER	include/openflow/openflow-1.4.h	/^    OFPACPT_PACKET_IN_MASTER      = 1, \/* Packet-in mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PACKET_IN_SLAVE	include/openflow/openflow-1.4.h	/^    OFPACPT_PACKET_IN_SLAVE       = 0, \/* Packet-in mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PORT_STATUS_MASTER	include/openflow/openflow-1.4.h	/^    OFPACPT_PORT_STATUS_MASTER    = 3, \/* Port-status mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_PORT_STATUS_SLAVE	include/openflow/openflow-1.4.h	/^    OFPACPT_PORT_STATUS_SLAVE     = 2, \/* Port-status mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_REQUESTFORWARD_MASTER	include/openflow/openflow-1.4.h	/^    OFPACPT_REQUESTFORWARD_MASTER = 11, \/* RequestForward mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_REQUESTFORWARD_SLAVE	include/openflow/openflow-1.4.h	/^    OFPACPT_REQUESTFORWARD_SLAVE  = 10, \/* RequestForward mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_ROLE_STATUS_MASTER	include/openflow/openflow-1.4.h	/^    OFPACPT_ROLE_STATUS_MASTER    = 7, \/* Role status mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_ROLE_STATUS_SLAVE	include/openflow/openflow-1.4.h	/^    OFPACPT_ROLE_STATUS_SLAVE     = 6, \/* Role status mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_TABLE_STATUS_MASTER	include/openflow/openflow-1.4.h	/^    OFPACPT_TABLE_STATUS_MASTER   = 9, \/* Table status mask for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACPT_TABLE_STATUS_SLAVE	include/openflow/openflow-1.4.h	/^    OFPACPT_TABLE_STATUS_SLAVE    = 8, \/* Table status mask for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPACT	lib/ofp-actions.c	6466;"	d	file:
OFPACT	lib/ofp-actions.c	6471;"	d	file:
OFPACT	lib/ofp-actions.c	6820;"	d	file:
OFPACT	lib/ofp-actions.c	6825;"	d	file:
OFPACT	lib/ofp-actions.c	6916;"	d	file:
OFPACT	lib/ofp-actions.c	6920;"	d	file:
OFPACT	lib/ofp-actions.c	6929;"	d	file:
OFPACT	lib/ofp-actions.c	6935;"	d	file:
OFPACT	lib/ofp-actions.c	7093;"	d	file:
OFPACT	lib/ofp-actions.c	7095;"	d	file:
OFPACT	lib/ofp-actions.h	127;"	d
OFPACT	lib/ofp-actions.h	129;"	d
OFPACT	lib/ofp-actions.h	134;"	d
OFPACT	lib/ofp-actions.h	136;"	d
OFPACT	lib/ofp-actions.h	879;"	d
OFPACT	lib/ofp-actions.h	911;"	d
OFPACTS	lib/ofp-actions.h	/^    OFPACTS$/;"	e	enum:ofpact_type
OFPACTS	lib/ofp-actions.h	55;"	d
OFPACT_ALIGN	lib/ofp-actions.h	186;"	d
OFPACT_ALIGNTO	lib/ofp-actions.h	185;"	d
OFPACT_FOR_EACH	lib/ofp-actions.h	202;"	d
OFPAT_RAW10_ENQUEUE	lib/ofp-actions.c	/^    OFPAT_RAW10_ENQUEUE,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW10_OUTPUT	lib/ofp-actions.c	/^    OFPAT_RAW10_OUTPUT,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW10_SET_VLAN_PCP	lib/ofp-actions.c	/^    OFPAT_RAW10_SET_VLAN_PCP,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW10_SET_VLAN_VID	lib/ofp-actions.c	/^    OFPAT_RAW10_SET_VLAN_VID,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW10_STRIP_VLAN	lib/ofp-actions.c	/^    OFPAT_RAW10_STRIP_VLAN,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_GROUP	lib/ofp-actions.c	/^    OFPAT_RAW11_GROUP,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_OUTPUT	lib/ofp-actions.c	/^    OFPAT_RAW11_OUTPUT,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_POP_VLAN	lib/ofp-actions.c	/^    OFPAT_RAW11_POP_VLAN,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_PUSH_VLAN	lib/ofp-actions.c	/^    OFPAT_RAW11_PUSH_VLAN,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_SET_NW_ECN	lib/ofp-actions.c	/^    OFPAT_RAW11_SET_NW_ECN,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_SET_NW_TTL	lib/ofp-actions.c	/^    OFPAT_RAW11_SET_NW_TTL,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_SET_VLAN_PCP	lib/ofp-actions.c	/^    OFPAT_RAW11_SET_VLAN_PCP,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW11_SET_VLAN_VID	lib/ofp-actions.c	/^    OFPAT_RAW11_SET_VLAN_VID,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW12_SET_FIELD	lib/ofp-actions.c	/^    OFPAT_RAW12_SET_FIELD,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW15_COPY_FIELD	lib/ofp-actions.c	/^    OFPAT_RAW15_COPY_FIELD,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW15_SET_FIELD	lib/ofp-actions.c	/^    OFPAT_RAW15_SET_FIELD,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_DEC_MPLS_TTL	lib/ofp-actions.c	/^    OFPAT_RAW_DEC_MPLS_TTL,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_DEC_NW_TTL	lib/ofp-actions.c	/^    OFPAT_RAW_DEC_NW_TTL,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_POP_MPLS	lib/ofp-actions.c	/^    OFPAT_RAW_POP_MPLS,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_PUSH_MPLS	lib/ofp-actions.c	/^    OFPAT_RAW_PUSH_MPLS,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_DL_DST	lib/ofp-actions.c	/^    OFPAT_RAW_SET_DL_DST,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_DL_SRC	lib/ofp-actions.c	/^    OFPAT_RAW_SET_DL_SRC,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_ICMP_ID	lib/ofp-actions.c	/^    OFPAT_RAW_SET_ICMP_ID,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_MPLS_LABEL	lib/ofp-actions.c	/^    OFPAT_RAW_SET_MPLS_LABEL,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_MPLS_TC	lib/ofp-actions.c	/^    OFPAT_RAW_SET_MPLS_TC,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_MPLS_TTL	lib/ofp-actions.c	/^    OFPAT_RAW_SET_MPLS_TTL,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_NW_DST	lib/ofp-actions.c	/^    OFPAT_RAW_SET_NW_DST,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_NW_SRC	lib/ofp-actions.c	/^    OFPAT_RAW_SET_NW_SRC,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_NW_TOS	lib/ofp-actions.c	/^    OFPAT_RAW_SET_NW_TOS,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_QUEUE	lib/ofp-actions.c	/^    OFPAT_RAW_SET_QUEUE,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_TP_DST	lib/ofp-actions.c	/^    OFPAT_RAW_SET_TP_DST,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_RAW_SET_TP_SRC	lib/ofp-actions.c	/^    OFPAT_RAW_SET_TP_SRC,$/;"	e	enum:ofp_raw_action_type	file:
OFPAT_VENDOR	lib/ofp-actions.c	7152;"	d	file:
OFPBCT_CLOSE_REPLY	include/openflow/openflow-1.4.h	/^    OFPBCT_CLOSE_REPLY     = 3,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_CLOSE_REQUEST	include/openflow/openflow-1.4.h	/^    OFPBCT_CLOSE_REQUEST   = 2,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_COMMIT_REPLY	include/openflow/openflow-1.4.h	/^    OFPBCT_COMMIT_REPLY    = 5,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_COMMIT_REQUEST	include/openflow/openflow-1.4.h	/^    OFPBCT_COMMIT_REQUEST  = 4,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_DISCARD_REPLY	include/openflow/openflow-1.4.h	/^    OFPBCT_DISCARD_REPLY   = 7,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_DISCARD_REQUEST	include/openflow/openflow-1.4.h	/^    OFPBCT_DISCARD_REQUEST = 6,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_OPEN_REPLY	include/openflow/openflow-1.4.h	/^    OFPBCT_OPEN_REPLY      = 1,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBCT_OPEN_REQUEST	include/openflow/openflow-1.4.h	/^    OFPBCT_OPEN_REQUEST    = 0,$/;"	e	enum:ofp14_bundle_ctrl_type
OFPBF_ATOMIC	include/openflow/openflow-1.4.h	/^    OFPBF_ATOMIC  = 1 << 0,  \/* Execute atomically. *\/$/;"	e	enum:ofp14_bundle_flags
OFPBF_ORDERED	include/openflow/openflow-1.4.h	/^    OFPBF_ORDERED = 1 << 1,  \/* Execute in specified order. *\/$/;"	e	enum:ofp14_bundle_flags
OFPBUF_H	lib/ofpbuf.h	18;"	d
OFPBUF_MALLOC	lib/ofpbuf.h	/^    OFPBUF_MALLOC,              \/* Obtained via malloc(). *\/$/;"	e	enum:ofpbuf_source
OFPBUF_STACK	lib/ofpbuf.h	/^    OFPBUF_STACK,               \/* Un-movable stack space or static buffer. *\/$/;"	e	enum:ofpbuf_source
OFPBUF_STUB	lib/ofpbuf.h	/^    OFPBUF_STUB,                \/* Starts on stack, may expand into heap. *\/$/;"	e	enum:ofpbuf_source
OFPBUF_STUB_INITIALIZER	lib/ofpbuf.h	75;"	d
OFPC10_RESERVED	include/openflow/openflow-1.0.h	/^    OFPC10_RESERVED       = 1 << 4,  \/* Reserved, must not be set. *\/$/;"	e	enum:ofp10_capabilities
OFPC10_STP	include/openflow/openflow-1.0.h	/^    OFPC10_STP            = 1 << 3,  \/* 802.1d spanning tree. *\/$/;"	e	enum:ofp10_capabilities
OFPC11_GROUP_STATS	include/openflow/openflow-1.1.h	/^    OFPC11_GROUP_STATS    = 1 << 3,  \/* Group statistics. *\/$/;"	e	enum:ofp11_capabilities
OFPC12_PORT_BLOCKED	include/openflow/openflow-1.2.h	/^    OFPC12_PORT_BLOCKED   = 1 << 8   \/* Switch will block looping ports. *\/$/;"	e	enum:ofp12_capabilities
OFPCML12_MAX	include/openflow/openflow-1.2.h	/^    OFPCML12_MAX       = 0xffe5, \/* maximum max_len value which can be used$/;"	e	enum:ofp12_controller_max_len
OFPCML12_NO_BUFFER	include/openflow/openflow-1.2.h	/^    OFPCML12_NO_BUFFER = 0xffff  \/* indicates that no buffering should be$/;"	e	enum:ofp12_controller_max_len
OFPCR12_ROLE_EQUAL	include/openflow/openflow-1.2.h	/^    OFPCR12_ROLE_EQUAL,       \/* Default role, full access. *\/$/;"	e	enum:ofp12_controller_role
OFPCR12_ROLE_MASTER	include/openflow/openflow-1.2.h	/^    OFPCR12_ROLE_MASTER,      \/* Full access, at most one master. *\/$/;"	e	enum:ofp12_controller_role
OFPCR12_ROLE_NOCHANGE	include/openflow/openflow-1.2.h	/^    OFPCR12_ROLE_NOCHANGE,    \/* Don't change current role. *\/$/;"	e	enum:ofp12_controller_role
OFPCR12_ROLE_SLAVE	include/openflow/openflow-1.2.h	/^    OFPCR12_ROLE_SLAVE,       \/* Read-only access. *\/$/;"	e	enum:ofp12_controller_role
OFPCRR_CONFIG	include/openflow/openflow-1.4.h	/^    OFPCRR_CONFIG         = 1,  \/* Configuration changed on the switch. *\/$/;"	e	enum:ofp14_controller_role_reason
OFPCRR_EXPERIMENTER	include/openflow/openflow-1.4.h	/^    OFPCRR_EXPERIMENTER   = 2,  \/* Experimenter data changed. *\/$/;"	e	enum:ofp14_controller_role_reason
OFPCRR_MASTER_REQUEST	include/openflow/openflow-1.4.h	/^    OFPCRR_MASTER_REQUEST = 0,  \/* Another controller asked to be master. *\/$/;"	e	enum:ofp14_controller_role_reason
OFPC_ARP_MATCH_IP	include/openflow/openflow-common.h	/^    OFPC_ARP_MATCH_IP   = 1 << 7   \/* Match IP addresses in ARP$/;"	e	enum:ofp_capabilities
OFPC_COMMON	lib/ofp-util.c	4049;"	d	file:
OFPC_FLOW_STATS	include/openflow/openflow-common.h	/^    OFPC_FLOW_STATS     = 1 << 0,  \/* Flow statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_FRAG_DROP	include/openflow/openflow-common.h	/^    OFPC_FRAG_DROP     = 1,  \/* Drop fragments. *\/$/;"	e	enum:ofp_config_flags
OFPC_FRAG_MASK	include/openflow/openflow-common.h	/^    OFPC_FRAG_MASK     = 3,$/;"	e	enum:ofp_config_flags
OFPC_FRAG_NORMAL	include/openflow/openflow-common.h	/^    OFPC_FRAG_NORMAL   = 0,  \/* No special handling for fragments. *\/$/;"	e	enum:ofp_config_flags
OFPC_FRAG_NX_MATCH	include/openflow/openflow-common.h	/^    OFPC_FRAG_NX_MATCH = 3,  \/* Make first fragments available for matching. *\/$/;"	e	enum:ofp_config_flags
OFPC_FRAG_REASM	include/openflow/openflow-common.h	/^    OFPC_FRAG_REASM    = 2,  \/* Reassemble (only if OFPC_IP_REASM set). *\/$/;"	e	enum:ofp_config_flags
OFPC_INVALID_TTL_TO_CONTROLLER	include/openflow/openflow-common.h	/^    OFPC_INVALID_TTL_TO_CONTROLLER = 1 << 2, \/* Send packets with invalid TTL$/;"	e	enum:ofp_config_flags
OFPC_IP_REASM	include/openflow/openflow-common.h	/^    OFPC_IP_REASM       = 1 << 5,  \/* Can reassemble IP fragments. *\/$/;"	e	enum:ofp_capabilities
OFPC_PORT_STATS	include/openflow/openflow-common.h	/^    OFPC_PORT_STATS     = 1 << 2,  \/* Port statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_QUEUE_STATS	include/openflow/openflow-common.h	/^    OFPC_QUEUE_STATS    = 1 << 6,  \/* Queue statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_TABLE_STATS	include/openflow/openflow-common.h	/^    OFPC_TABLE_STATS    = 1 << 1,  \/* Table statistics. *\/$/;"	e	enum:ofp_capabilities
OFPERR_NXBAC_BAD_CONJUNCTION	lib/ofp-errors.h	/^    OFPERR_NXBAC_BAD_CONJUNCTION,$/;"	e	enum:ofperr
OFPERR_NXBAC_MUST_BE_ZERO	lib/ofp-errors.h	/^    OFPERR_NXBAC_MUST_BE_ZERO,$/;"	e	enum:ofperr
OFPERR_NXBFC_BAD_VERSION	lib/ofp-errors.h	/^    OFPERR_NXBFC_BAD_VERSION,$/;"	e	enum:ofperr
OFPERR_NXBRC_BAD_REASON	lib/ofp-errors.h	/^    OFPERR_NXBRC_BAD_REASON,$/;"	e	enum:ofperr
OFPERR_NXBRC_FM_BAD_EVENT	lib/ofp-errors.h	/^    OFPERR_NXBRC_FM_BAD_EVENT,$/;"	e	enum:ofperr
OFPERR_NXBRC_MUST_BE_ZERO	lib/ofp-errors.h	/^    OFPERR_NXBRC_MUST_BE_ZERO,$/;"	e	enum:ofperr
OFPERR_NXBRC_NXM_BAD_TYPE	lib/ofp-errors.h	/^    OFPERR_NXBRC_NXM_BAD_TYPE,$/;"	e	enum:ofperr
OFPERR_NXBRC_NXM_INVALID	lib/ofp-errors.h	/^    OFPERR_NXBRC_NXM_INVALID,$/;"	e	enum:ofperr
OFPERR_NXBRC_UNENCODABLE_ERROR	lib/ofp-errors.h	/^    OFPERR_NXBRC_UNENCODABLE_ERROR,$/;"	e	enum:ofperr
OFPERR_NXFMFC_BAD_TABLE_ID	lib/ofp-errors.h	/^    OFPERR_NXFMFC_BAD_TABLE_ID,$/;"	e	enum:ofperr
OFPERR_NXFMFC_HARDWARE	lib/ofp-errors.h	/^    OFPERR_NXFMFC_HARDWARE,$/;"	e	enum:ofperr
OFPERR_NXGTMFC_ALREADY_MAPPED	lib/ofp-errors.h	/^    OFPERR_NXGTMFC_ALREADY_MAPPED,$/;"	e	enum:ofperr
OFPERR_NXGTMFC_BAD_COMMAND	lib/ofp-errors.h	/^    OFPERR_NXGTMFC_BAD_COMMAND,$/;"	e	enum:ofperr
OFPERR_NXGTMFC_BAD_FIELD_IDX	lib/ofp-errors.h	/^    OFPERR_NXGTMFC_BAD_FIELD_IDX,$/;"	e	enum:ofperr
OFPERR_NXGTMFC_BAD_OPT_LEN	lib/ofp-errors.h	/^    OFPERR_NXGTMFC_BAD_OPT_LEN,$/;"	e	enum:ofperr
OFPERR_NXGTMFC_DUP_ENTRY	lib/ofp-errors.h	/^    OFPERR_NXGTMFC_DUP_ENTRY,$/;"	e	enum:ofperr
OFPERR_NXGTMFC_TABLE_FULL	lib/ofp-errors.h	/^    OFPERR_NXGTMFC_TABLE_FULL,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_ARGUMENT	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_ARGUMENT,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_LEN	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_LEN,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_OUT_GROUP	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_OUT_GROUP,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_OUT_PORT	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_OUT_PORT,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_QUEUE	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_QUEUE,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_SET_ARGUMENT	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_SET_ARGUMENT,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_SET_LEN	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_SET_LEN,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_SET_MASK	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_SET_MASK,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_SET_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_SET_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_TAG	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_TAG,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_VENDOR	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_VENDOR,$/;"	e	enum:ofperr
OFPERR_OFPBAC_BAD_VENDOR_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBAC_BAD_VENDOR_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBAC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPBAC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPBAC_MATCH_INCONSISTENT	lib/ofp-errors.h	/^    OFPERR_OFPBAC_MATCH_INCONSISTENT,$/;"	e	enum:ofperr
OFPERR_OFPBAC_TOO_MANY	lib/ofp-errors.h	/^    OFPERR_OFPBAC_TOO_MANY,$/;"	e	enum:ofperr
OFPERR_OFPBAC_UNSUPPORTED_ORDER	lib/ofp-errors.h	/^    OFPERR_OFPBAC_UNSUPPORTED_ORDER,$/;"	e	enum:ofperr
OFPERR_OFPBFC_BAD_FLAGS	lib/ofp-errors.h	/^    OFPERR_OFPBFC_BAD_FLAGS,$/;"	e	enum:ofperr
OFPERR_OFPBFC_BAD_ID	lib/ofp-errors.h	/^    OFPERR_OFPBFC_BAD_ID,$/;"	e	enum:ofperr
OFPERR_OFPBFC_BAD_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBFC_BAD_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBFC_BUNDLE_CLOSED	lib/ofp-errors.h	/^    OFPERR_OFPBFC_BUNDLE_CLOSED,$/;"	e	enum:ofperr
OFPERR_OFPBFC_BUNDLE_EXIST	lib/ofp-errors.h	/^    OFPERR_OFPBFC_BUNDLE_EXIST,$/;"	e	enum:ofperr
OFPERR_OFPBFC_BUNDLE_IN_PROGRESS	lib/ofp-errors.h	/^    OFPERR_OFPBFC_BUNDLE_IN_PROGRESS,$/;"	e	enum:ofperr
OFPERR_OFPBFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPBFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPBFC_MSG_BAD_LEN	lib/ofp-errors.h	/^    OFPERR_OFPBFC_MSG_BAD_LEN,$/;"	e	enum:ofperr
OFPERR_OFPBFC_MSG_BAD_XID	lib/ofp-errors.h	/^    OFPERR_OFPBFC_MSG_BAD_XID,$/;"	e	enum:ofperr
OFPERR_OFPBFC_MSG_CONFLICT	lib/ofp-errors.h	/^    OFPERR_OFPBFC_MSG_CONFLICT,$/;"	e	enum:ofperr
OFPERR_OFPBFC_MSG_FAILED	lib/ofp-errors.h	/^    OFPERR_OFPBFC_MSG_FAILED,$/;"	e	enum:ofperr
OFPERR_OFPBFC_MSG_TOO_MANY	lib/ofp-errors.h	/^    OFPERR_OFPBFC_MSG_TOO_MANY,$/;"	e	enum:ofperr
OFPERR_OFPBFC_MSG_UNSUP	lib/ofp-errors.h	/^    OFPERR_OFPBFC_MSG_UNSUP,$/;"	e	enum:ofperr
OFPERR_OFPBFC_OUT_OF_BUNDLES	lib/ofp-errors.h	/^    OFPERR_OFPBFC_OUT_OF_BUNDLES,$/;"	e	enum:ofperr
OFPERR_OFPBFC_TIMEOUT	lib/ofp-errors.h	/^    OFPERR_OFPBFC_TIMEOUT,$/;"	e	enum:ofperr
OFPERR_OFPBFC_UNKNOWN	lib/ofp-errors.h	/^    OFPERR_OFPBFC_UNKNOWN,$/;"	e	enum:ofperr
OFPERR_OFPBIC_BAD_EXPERIMENTER	lib/ofp-errors.h	/^    OFPERR_OFPBIC_BAD_EXPERIMENTER,$/;"	e	enum:ofperr
OFPERR_OFPBIC_BAD_EXP_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBIC_BAD_EXP_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBIC_BAD_LEN	lib/ofp-errors.h	/^    OFPERR_OFPBIC_BAD_LEN,$/;"	e	enum:ofperr
OFPERR_OFPBIC_BAD_TABLE_ID	lib/ofp-errors.h	/^    OFPERR_OFPBIC_BAD_TABLE_ID,$/;"	e	enum:ofperr
OFPERR_OFPBIC_DUP_INST	lib/ofp-errors.h	/^    OFPERR_OFPBIC_DUP_INST,$/;"	e	enum:ofperr
OFPERR_OFPBIC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPBIC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPBIC_UNKNOWN_INST	lib/ofp-errors.h	/^    OFPERR_OFPBIC_UNKNOWN_INST,$/;"	e	enum:ofperr
OFPERR_OFPBIC_UNSUP_INST	lib/ofp-errors.h	/^    OFPERR_OFPBIC_UNSUP_INST,$/;"	e	enum:ofperr
OFPERR_OFPBIC_UNSUP_METADATA	lib/ofp-errors.h	/^    OFPERR_OFPBIC_UNSUP_METADATA,$/;"	e	enum:ofperr
OFPERR_OFPBIC_UNSUP_METADATA_MASK	lib/ofp-errors.h	/^    OFPERR_OFPBIC_UNSUP_METADATA_MASK,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_DL_ADDR_MASK	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_DL_ADDR_MASK,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_FIELD	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_FIELD,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_LEN	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_LEN,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_MASK	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_MASK,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_NW_ADDR_MASK	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_NW_ADDR_MASK,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_PREREQ	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_PREREQ,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_TAG	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_TAG,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_VALUE	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_VALUE,$/;"	e	enum:ofperr
OFPERR_OFPBMC_BAD_WILDCARDS	lib/ofp-errors.h	/^    OFPERR_OFPBMC_BAD_WILDCARDS,$/;"	e	enum:ofperr
OFPERR_OFPBMC_DUP_FIELD	lib/ofp-errors.h	/^    OFPERR_OFPBMC_DUP_FIELD,$/;"	e	enum:ofperr
OFPERR_OFPBMC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPBMC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPBPC_BAD_EXPERIMENTER	lib/ofp-errors.h	/^    OFPERR_OFPBPC_BAD_EXPERIMENTER,$/;"	e	enum:ofperr
OFPERR_OFPBPC_BAD_EXP_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBPC_BAD_EXP_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBPC_BAD_EXP_VALUE	lib/ofp-errors.h	/^    OFPERR_OFPBPC_BAD_EXP_VALUE,$/;"	e	enum:ofperr
OFPERR_OFPBPC_BAD_LEN	lib/ofp-errors.h	/^    OFPERR_OFPBPC_BAD_LEN,$/;"	e	enum:ofperr
OFPERR_OFPBPC_BAD_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBPC_BAD_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBPC_BAD_VALUE	lib/ofp-errors.h	/^    OFPERR_OFPBPC_BAD_VALUE,$/;"	e	enum:ofperr
OFPERR_OFPBPC_DUP_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBPC_DUP_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBPC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPBPC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPBPC_TOO_MANY	lib/ofp-errors.h	/^    OFPERR_OFPBPC_TOO_MANY,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_LEN	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_LEN,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_PACKET	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_PACKET,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_PORT	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_PORT,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_STAT	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_STAT,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_SUBTYPE	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_SUBTYPE,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_TABLE_ID	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_TABLE_ID,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_VENDOR	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_VENDOR,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BAD_VERSION	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BAD_VERSION,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BUFFER_EMPTY	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BUFFER_EMPTY,$/;"	e	enum:ofperr
OFPERR_OFPBRC_BUFFER_UNKNOWN	lib/ofp-errors.h	/^    OFPERR_OFPBRC_BUFFER_UNKNOWN,$/;"	e	enum:ofperr
OFPERR_OFPBRC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPBRC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPBRC_IS_SLAVE	lib/ofp-errors.h	/^    OFPERR_OFPBRC_IS_SLAVE,$/;"	e	enum:ofperr
OFPERR_OFPBRC_MULTIPART_BUFFER_OVERFLOW	lib/ofp-errors.h	/^    OFPERR_OFPBRC_MULTIPART_BUFFER_OVERFLOW,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_BAD_COMMAND	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_BAD_COMMAND,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_BAD_EMERG_TIMEOUT	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_BAD_EMERG_TIMEOUT,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_BAD_FLAGS	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_BAD_FLAGS,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_BAD_TABLE_ID	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_BAD_TABLE_ID,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_BAD_TIMEOUT	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_BAD_TIMEOUT,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_OVERLAP	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_OVERLAP,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_TABLE_FULL	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_TABLE_FULL,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_UNKNOWN	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_UNKNOWN,$/;"	e	enum:ofperr
OFPERR_OFPFMFC_UNSUPPORTED	lib/ofp-errors.h	/^    OFPERR_OFPFMFC_UNSUPPORTED,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_BAD_BUCKET	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_BAD_BUCKET,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_BAD_COMMAND	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_BAD_COMMAND,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_BAD_TYPE	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_BAD_TYPE,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_BAD_WATCH	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_BAD_WATCH,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_BUCKET_EXISTS	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_BUCKET_EXISTS,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_CHAINED_GROUP	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_CHAINED_GROUP,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_CHAINING_UNSUPPORTED	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_CHAINING_UNSUPPORTED,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_GROUP_EXISTS	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_GROUP_EXISTS,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_INVALID_GROUP	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_INVALID_GROUP,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_LOOP	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_LOOP,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_OUT_OF_BUCKETS	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_OUT_OF_BUCKETS,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_OUT_OF_GROUPS	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_OUT_OF_GROUPS,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_UNKNOWN_BUCKET	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_UNKNOWN_BUCKET,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_UNKNOWN_GROUP	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_UNKNOWN_GROUP,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_WATCH_UNSUPPORTED	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_WATCH_UNSUPPORTED,$/;"	e	enum:ofperr
OFPERR_OFPGMFC_WEIGHT_UNSUPPORTED	lib/ofp-errors.h	/^    OFPERR_OFPGMFC_WEIGHT_UNSUPPORTED,$/;"	e	enum:ofperr
OFPERR_OFPHFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPHFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPHFC_INCOMPATIBLE	lib/ofp-errors.h	/^    OFPERR_OFPHFC_INCOMPATIBLE = OFPERR_OFS,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_BAD_BAND	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_BAD_BAND,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_BAD_BAND_VALUE	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_BAD_BAND_VALUE,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_BAD_BURST	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_BAD_BURST,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_BAD_COMMAND	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_BAD_COMMAND,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_BAD_FLAGS	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_BAD_FLAGS,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_BAD_RATE	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_BAD_RATE,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_INVALID_METER	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_INVALID_METER,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_METER_EXISTS	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_METER_EXISTS,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_OUT_OF_BANDS	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_OUT_OF_BANDS,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_OUT_OF_METERS	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_OUT_OF_METERS,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_UNKNOWN	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_UNKNOWN,$/;"	e	enum:ofperr
OFPERR_OFPMMFC_UNKNOWN_METER	lib/ofp-errors.h	/^    OFPERR_OFPMMFC_UNKNOWN_METER,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_BAD_COMMAND	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_BAD_COMMAND,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_BAD_FLAGS	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_BAD_FLAGS,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_BAD_OUT	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_BAD_OUT,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_BAD_TABLE_ID	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_BAD_TABLE_ID,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_INVALID_MONITOR	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_INVALID_MONITOR,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_MONITOR_EXISTS	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_MONITOR_EXISTS,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_UNKNOWN	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_UNKNOWN,$/;"	e	enum:ofperr
OFPERR_OFPMOFC_UNKNOWN_MONITOR	lib/ofp-errors.h	/^    OFPERR_OFPMOFC_UNKNOWN_MONITOR,$/;"	e	enum:ofperr
OFPERR_OFPPMFC_BAD_ADVERTISE	lib/ofp-errors.h	/^    OFPERR_OFPPMFC_BAD_ADVERTISE,$/;"	e	enum:ofperr
OFPERR_OFPPMFC_BAD_CONFIG	lib/ofp-errors.h	/^    OFPERR_OFPPMFC_BAD_CONFIG,$/;"	e	enum:ofperr
OFPERR_OFPPMFC_BAD_HW_ADDR	lib/ofp-errors.h	/^    OFPERR_OFPPMFC_BAD_HW_ADDR,$/;"	e	enum:ofperr
OFPERR_OFPPMFC_BAD_PORT	lib/ofp-errors.h	/^    OFPERR_OFPPMFC_BAD_PORT,$/;"	e	enum:ofperr
OFPERR_OFPPMFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPPMFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPQOFC_BAD_PORT	lib/ofp-errors.h	/^    OFPERR_OFPQOFC_BAD_PORT,$/;"	e	enum:ofperr
OFPERR_OFPQOFC_BAD_QUEUE	lib/ofp-errors.h	/^    OFPERR_OFPQOFC_BAD_QUEUE,$/;"	e	enum:ofperr
OFPERR_OFPQOFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPQOFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPRRFC_BAD_ROLE	lib/ofp-errors.h	/^    OFPERR_OFPRRFC_BAD_ROLE,$/;"	e	enum:ofperr
OFPERR_OFPRRFC_STALE	lib/ofp-errors.h	/^    OFPERR_OFPRRFC_STALE,$/;"	e	enum:ofperr
OFPERR_OFPRRFC_UNSUP	lib/ofp-errors.h	/^    OFPERR_OFPRRFC_UNSUP,$/;"	e	enum:ofperr
OFPERR_OFPSCFC_BAD_FLAGS	lib/ofp-errors.h	/^    OFPERR_OFPSCFC_BAD_FLAGS,$/;"	e	enum:ofperr
OFPERR_OFPSCFC_BAD_LEN	lib/ofp-errors.h	/^    OFPERR_OFPSCFC_BAD_LEN,$/;"	e	enum:ofperr
OFPERR_OFPSCFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPSCFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPTFFC_BAD_METADATA	lib/ofp-errors.h	/^    OFPERR_OFPTFFC_BAD_METADATA,$/;"	e	enum:ofperr
OFPERR_OFPTFFC_BAD_TABLE	lib/ofp-errors.h	/^    OFPERR_OFPTFFC_BAD_TABLE,$/;"	e	enum:ofperr
OFPERR_OFPTFFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPTFFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFPTMFC_BAD_CONFIG	lib/ofp-errors.h	/^    OFPERR_OFPTMFC_BAD_CONFIG,$/;"	e	enum:ofperr
OFPERR_OFPTMFC_BAD_TABLE	lib/ofp-errors.h	/^    OFPERR_OFPTMFC_BAD_TABLE,$/;"	e	enum:ofperr
OFPERR_OFPTMFC_EPERM	lib/ofp-errors.h	/^    OFPERR_OFPTMFC_EPERM,$/;"	e	enum:ofperr
OFPERR_OFS	lib/ofp-errors.h	46;"	d
OFPET12_EXPERIMENTER	include/openflow/openflow-1.2.h	59;"	d
OFPFC_ADD	include/openflow/openflow-common.h	/^    OFPFC_ADD,              \/* New flow. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_DELETE	include/openflow/openflow-common.h	/^    OFPFC_DELETE,           \/* Delete all matching flows. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_DELETE_STRICT	include/openflow/openflow-common.h	/^    OFPFC_DELETE_STRICT     \/* Strictly match wildcards and priority. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_MODIFY	include/openflow/openflow-common.h	/^    OFPFC_MODIFY,           \/* Modify all matching flows. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_MODIFY_STRICT	include/openflow/openflow-common.h	/^    OFPFC_MODIFY_STRICT,    \/* Modify entry strictly matching wildcards *\/$/;"	e	enum:ofp_flow_mod_command
OFPFF10_EMERG	include/openflow/openflow-1.0.h	/^    OFPFF10_EMERG       = 1 << 2 \/* Part of "emergency flow cache". *\/$/;"	e	enum:ofp10_flow_mod_flags
OFPFF12_RESET_COUNTS	include/openflow/openflow-1.2.h	/^    OFPFF12_RESET_COUNTS  = 1 << 2   \/* Reset flow packet and byte counts. *\/$/;"	e	enum:ofp12_flow_mod_flags
OFPFF13_NO_BYT_COUNTS	include/openflow/openflow-1.3.h	/^    OFPFF13_NO_BYT_COUNTS = 1 << 4  \/* Don't keep track of byte count. *\/$/;"	e	enum:ofp13_flow_mod_flags
OFPFF13_NO_PKT_COUNTS	include/openflow/openflow-1.3.h	/^    OFPFF13_NO_PKT_COUNTS = 1 << 3, \/* Don't keep track of packet count. *\/$/;"	e	enum:ofp13_flow_mod_flags
OFPFF_CHECK_OVERLAP	include/openflow/openflow-common.h	/^    OFPFF_CHECK_OVERLAP = 1 << 1,  \/* Check for overlapping entries first. *\/$/;"	e	enum:ofp_flow_mod_flags
OFPFF_SEND_FLOW_REM	include/openflow/openflow-common.h	/^    OFPFF_SEND_FLOW_REM = 1 << 0,  \/* Send flow removed message when flow$/;"	e	enum:ofp_flow_mod_flags
OFPFMC14_ADD	include/openflow/openflow-1.4.h	/^    OFPFMC14_ADD = 0, \/* New flow monitor. *\/$/;"	e	enum:ofp14_flow_monitor_command
OFPFMC14_DELETE	include/openflow/openflow-1.4.h	/^    OFPFMC14_DELETE = 2, \/* Delete\/cancel existing flow monitor. *\/$/;"	e	enum:ofp14_flow_monitor_command
OFPFMC14_MODIFY	include/openflow/openflow-1.4.h	/^    OFPFMC14_MODIFY = 1, \/* Modify existing flow monitor. *\/$/;"	e	enum:ofp14_flow_monitor_command
OFPFMF11_DL_DST	include/openflow/openflow-1.1.h	/^    OFPFMF11_DL_DST      = 1 << 12, \/* Ethernet destination address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_SRC	include/openflow/openflow-1.1.h	/^    OFPFMF11_DL_SRC      = 1 << 11, \/* Ethernet source address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_TYPE	include/openflow/openflow-1.1.h	/^    OFPFMF11_DL_TYPE     = 1 << 3,  \/* Ethernet frame type. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_VLAN	include/openflow/openflow-1.1.h	/^    OFPFMF11_DL_VLAN     = 1 << 1,  \/* VLAN id. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_DL_VLAN_PCP	include/openflow/openflow-1.1.h	/^    OFPFMF11_DL_VLAN_PCP = 1 << 2,  \/* VLAN priority. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_IN_PORT	include/openflow/openflow-1.1.h	/^    OFPFMF11_IN_PORT     = 1 << 0,  \/* Switch input port. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_METADATA	include/openflow/openflow-1.1.h	/^    OFPFMF11_METADATA    = 1 << 15, \/* Metadata passed between tables. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_MPLS_LABEL	include/openflow/openflow-1.1.h	/^    OFPFMF11_MPLS_LABEL  = 1 << 8,  \/* MPLS label. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_MPLS_TC	include/openflow/openflow-1.1.h	/^    OFPFMF11_MPLS_TC     = 1 << 9,  \/* MPLS TC. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_DST	include/openflow/openflow-1.1.h	/^    OFPFMF11_NW_DST      = 1 << 14, \/* IP destination address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_PROTO	include/openflow/openflow-1.1.h	/^    OFPFMF11_NW_PROTO    = 1 << 5,  \/* IP protocol. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_SRC	include/openflow/openflow-1.1.h	/^    OFPFMF11_NW_SRC      = 1 << 13, \/* IP source address. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_NW_TOS	include/openflow/openflow-1.1.h	/^    OFPFMF11_NW_TOS      = 1 << 4,  \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_TP_DST	include/openflow/openflow-1.1.h	/^    OFPFMF11_TP_DST      = 1 << 7,  \/* TCP\/UDP\/SCTP destination port. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_TP_SRC	include/openflow/openflow-1.1.h	/^    OFPFMF11_TP_SRC      = 1 << 6,  \/* TCP\/UDP\/SCTP source port. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF11_TYPE	include/openflow/openflow-1.1.h	/^    OFPFMF11_TYPE        = 1 << 10, \/* Match type. *\/$/;"	e	enum:ofp11_flow_match_fields
OFPFMF14_ADD	include/openflow/openflow-1.4.h	/^    OFPFMF14_ADD = 1 << 1,         \/* New matching flows as they are added. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_INITIAL	include/openflow/openflow-1.4.h	/^    OFPFMF14_INITIAL = 1 << 0,     \/* Initially matching flows. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_INSTRUCTIONS	include/openflow/openflow-1.4.h	/^    OFPFMF14_INSTRUCTIONS = 1 << 4, \/* If set, instructions are included. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_MODIFY	include/openflow/openflow-1.4.h	/^    OFPFMF14_MODIFY = 1 << 3,      \/* Matching flows as they are changed. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_NO_ABBREV	include/openflow/openflow-1.4.h	/^    OFPFMF14_NO_ABBREV = 1 << 5,    \/* If set, include own changes in full. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_ONLY_OWN	include/openflow/openflow-1.4.h	/^    OFPFMF14_ONLY_OWN = 1 << 6,     \/* If set, don't include other controllers.$/;"	e	enum:ofp14_flow_monitor_flags
OFPFMF14_REMOVED	include/openflow/openflow-1.4.h	/^    OFPFMF14_REMOVED = 1 << 2,     \/* Old matching flows as they are removed. *\/$/;"	e	enum:ofp14_flow_monitor_flags
OFPFW10_ALL	include/openflow/openflow-1.0.h	/^    OFPFW10_ALL = ((1 << 23) - 1)$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_DST	include/openflow/openflow-1.0.h	/^    OFPFW10_DL_DST     = 1 << 3,  \/* Ethernet destination address. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_SRC	include/openflow/openflow-1.0.h	/^    OFPFW10_DL_SRC     = 1 << 2,  \/* Ethernet source address. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_TYPE	include/openflow/openflow-1.0.h	/^    OFPFW10_DL_TYPE    = 1 << 4,  \/* Ethernet frame type. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_VLAN	include/openflow/openflow-1.0.h	/^    OFPFW10_DL_VLAN    = 1 << 1,  \/* VLAN vid. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_DL_VLAN_PCP	include/openflow/openflow-1.0.h	/^    OFPFW10_DL_VLAN_PCP = 1 << 20, \/* VLAN priority. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_ICMP_CODE	include/openflow/openflow-1.0.h	226;"	d
OFPFW10_ICMP_ID	include/openflow/openflow-1.0.h	/^    OFPFW10_ICMP_ID    = 1 << 22,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_ICMP_TYPE	include/openflow/openflow-1.0.h	225;"	d
OFPFW10_IN_PORT	include/openflow/openflow-1.0.h	/^    OFPFW10_IN_PORT    = 1 << 0,  \/* Switch input port. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_ALL	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_ALL = 32 << OFPFW10_NW_DST_SHIFT,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_BITS	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_BITS = 6,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_MASK	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_MASK = (((1 << OFPFW10_NW_DST_BITS) - 1)$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_DST_SHIFT	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_DST_SHIFT = 14,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_PROTO	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_PROTO   = 1 << 5,  \/* IP protocol. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_ALL	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_ALL = 32 << OFPFW10_NW_SRC_SHIFT,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_BITS	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_BITS = 6,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_MASK	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_MASK = (((1 << OFPFW10_NW_SRC_BITS) - 1)$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_SRC_SHIFT	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_SRC_SHIFT = 8,$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_NW_TOS	include/openflow/openflow-1.0.h	/^    OFPFW10_NW_TOS = 1 << 21, \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_TP_DST	include/openflow/openflow-1.0.h	/^    OFPFW10_TP_DST     = 1 << 7,  \/* TCP\/UDP destination port. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW10_TP_SRC	include/openflow/openflow-1.0.h	/^    OFPFW10_TP_SRC     = 1 << 6,  \/* TCP\/UDP source port. *\/$/;"	e	enum:ofp10_flow_wildcards
OFPFW11_ALL	include/openflow/openflow-1.1.h	/^    OFPFW11_ALL           = ((1 << 11) - 1)$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_DL_TYPE	include/openflow/openflow-1.1.h	/^    OFPFW11_DL_TYPE     = 1 << 3,  \/* Ethernet frame type. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_DL_VLAN	include/openflow/openflow-1.1.h	/^    OFPFW11_DL_VLAN     = 1 << 1,  \/* VLAN id. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_DL_VLAN_PCP	include/openflow/openflow-1.1.h	/^    OFPFW11_DL_VLAN_PCP = 1 << 2,  \/* VLAN priority. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_ICMP_ID	include/openflow/openflow-1.1.h	/^    OFPFW11_ICMP_ID     = 1  << 10,$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_IN_PORT	include/openflow/openflow-1.1.h	/^    OFPFW11_IN_PORT     = 1 << 0,  \/* Switch input port. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_MPLS_LABEL	include/openflow/openflow-1.1.h	/^    OFPFW11_MPLS_LABEL  = 1 << 8,  \/* MPLS label. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_MPLS_TC	include/openflow/openflow-1.1.h	/^    OFPFW11_MPLS_TC     = 1 << 9,  \/* MPLS TC. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_NW_PROTO	include/openflow/openflow-1.1.h	/^    OFPFW11_NW_PROTO    = 1 << 5,  \/* IP protocol. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_NW_TOS	include/openflow/openflow-1.1.h	/^    OFPFW11_NW_TOS      = 1 << 4,  \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_TP_ALL	lib/ofp-util.c	516;"	d	file:
OFPFW11_TP_DST	include/openflow/openflow-1.1.h	/^    OFPFW11_TP_DST      = 1 << 7,  \/* TCP\/UDP\/SCTP destination port. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPFW11_TP_SRC	include/openflow/openflow-1.1.h	/^    OFPFW11_TP_SRC      = 1 << 6,  \/* TCP\/UDP\/SCTP source port. *\/$/;"	e	enum:ofp11_flow_wildcards
OFPG11_ALL	include/openflow/openflow-1.1.h	/^    OFPG11_ALL        = 0xfffffffc,  \/* Represents all groups for group delete$/;"	e	enum:ofp11_group
OFPG11_ANY	include/openflow/openflow-1.1.h	/^    OFPG11_ANY        = 0xffffffff   \/* Wildcard group used only for flow stats$/;"	e	enum:ofp11_group
OFPG11_MAX	include/openflow/openflow-1.1.h	/^    OFPG11_MAX        = 0xffffff00,$/;"	e	enum:ofp11_group
OFPG15_BUCKET_ALL	include/openflow/openflow-1.5.h	/^    OFPG15_BUCKET_ALL   = 0xffffffff  \/* All action buckets in a group,$/;"	e	enum:ofp15_group_bucket
OFPG15_BUCKET_FIRST	include/openflow/openflow-1.5.h	/^    OFPG15_BUCKET_FIRST = 0xfffffffd, \/* First bucket ID in the list of action$/;"	e	enum:ofp15_group_bucket
OFPG15_BUCKET_LAST	include/openflow/openflow-1.5.h	/^    OFPG15_BUCKET_LAST  = 0xfffffffe, \/* Last bucket ID in the list of action$/;"	e	enum:ofp15_group_bucket
OFPG15_BUCKET_MAX	include/openflow/openflow-1.5.h	/^    OFPG15_BUCKET_MAX   = 0xffffff00, \/* Last usable bucket ID *\/$/;"	e	enum:ofp15_group_bucket
OFPGBPT15_EXPERIMENTER	include/openflow/openflow-1.5.h	/^    OFPGBPT15_EXPERIMENTER      = 0xFFFF,  \/* Experimenter defined. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGBPT15_WATCH_GROUP	include/openflow/openflow-1.5.h	/^    OFPGBPT15_WATCH_GROUP            = 2,  \/* Fast failover groups only. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGBPT15_WATCH_PORT	include/openflow/openflow-1.5.h	/^    OFPGBPT15_WATCH_PORT             = 1,  \/* Fast failover groups only. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGBPT15_WEIGHT	include/openflow/openflow-1.5.h	/^    OFPGBPT15_WEIGHT                 = 0,  \/* Select groups only. *\/$/;"	e	enum:ofp15_group_bucket_prop_type
OFPGC11_ADD	include/openflow/openflow-1.1.h	/^    OFPGC11_ADD,          \/* New group. *\/$/;"	e	enum:ofp11_group_mod_command
OFPGC11_DELETE	include/openflow/openflow-1.1.h	/^    OFPGC11_DELETE,       \/* Delete all matching groups. *\/$/;"	e	enum:ofp11_group_mod_command
OFPGC11_MODIFY	include/openflow/openflow-1.1.h	/^    OFPGC11_MODIFY,       \/* Modify all matching groups. *\/$/;"	e	enum:ofp11_group_mod_command
OFPGC15_ADD	include/openflow/openflow-1.5.h	/^    OFPGC15_ADD    = 0,       \/* New group. *\/$/;"	e	enum:ofp15_group_mod_command
OFPGC15_DELETE	include/openflow/openflow-1.5.h	/^    OFPGC15_DELETE = 2,       \/* Delete all matching groups. *\/$/;"	e	enum:ofp15_group_mod_command
OFPGC15_INSERT_BUCKET	include/openflow/openflow-1.5.h	/^    OFPGC15_INSERT_BUCKET = 3,\/* Insert action buckets to the already available$/;"	e	enum:ofp15_group_mod_command
OFPGC15_MODIFY	include/openflow/openflow-1.5.h	/^    OFPGC15_MODIFY = 1,       \/* Modify all matching groups. *\/$/;"	e	enum:ofp15_group_mod_command
OFPGC15_REMOVE_BUCKET	include/openflow/openflow-1.5.h	/^    OFPGC15_REMOVE_BUCKET = 5,\/* Remove all action buckets or any specific$/;"	e	enum:ofp15_group_mod_command
OFPGFC12_CHAINING	include/openflow/openflow-1.2.h	/^    OFPGFC12_CHAINING        = 1 << 2, \/* Support chaining groups *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC12_CHAINING_CHECKS	include/openflow/openflow-1.2.h	/^    OFPGFC12_CHAINING_CHECKS = 1 << 3, \/* Check chaining for loops and delete *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC12_SELECT_LIVENESS	include/openflow/openflow-1.2.h	/^    OFPGFC12_SELECT_LIVENESS = 1 << 1, \/* Support liveness for select groups *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC12_SELECT_WEIGHT	include/openflow/openflow-1.2.h	/^    OFPGFC12_SELECT_WEIGHT   = 1 << 0, \/* Support weight for select groups *\/$/;"	e	enum:ofp12_group_capabilities
OFPGFC_CHAINING	include/openflow/openflow-common.h	/^    OFPGFC_CHAINING        = 1 << 2, \/* Support chaining groups *\/$/;"	e	enum:ofp_group_capabilities
OFPGFC_CHAINING_CHECKS	include/openflow/openflow-common.h	/^    OFPGFC_CHAINING_CHECKS = 1 << 3, \/* Check chaining for loops and delete *\/$/;"	e	enum:ofp_group_capabilities
OFPGFC_SELECT_LIVENESS	include/openflow/openflow-common.h	/^    OFPGFC_SELECT_LIVENESS = 1 << 1, \/* Support liveness for select groups *\/$/;"	e	enum:ofp_group_capabilities
OFPGFC_SELECT_WEIGHT	include/openflow/openflow-common.h	/^    OFPGFC_SELECT_WEIGHT   = 1 << 0, \/* Support weight for select groups *\/$/;"	e	enum:ofp_group_capabilities
OFPGPT15_EXPERIMENTER	include/openflow/openflow-1.5.h	/^    OFPGPT15_EXPERIMENTER      = 0xFFFF,  \/* Experimenter defined. *\/$/;"	e	enum:ofp_group_prop_type
OFPGT11_ALL	include/openflow/openflow-1.1.h	/^    OFPGT11_ALL,      \/* All (multicast\/broadcast) group. *\/$/;"	e	enum:ofp11_group_type
OFPGT11_FF	include/openflow/openflow-1.1.h	/^    OFPGT11_FF        \/* Fast failover group. *\/$/;"	e	enum:ofp11_group_type
OFPGT11_INDIRECT	include/openflow/openflow-1.1.h	/^    OFPGT11_INDIRECT, \/* Indirect group. *\/$/;"	e	enum:ofp11_group_type
OFPGT11_SELECT	include/openflow/openflow-1.1.h	/^    OFPGT11_SELECT,   \/* Select group. *\/$/;"	e	enum:ofp11_group_type
OFPGT12_N_TYPES	include/openflow/openflow-1.2.h	151;"	d
OFPG_ALL	include/openflow/openflow-common.h	/^    OFPG_ALL        = 0xfffffffc,  \/* All groups, for group delete commands. *\/$/;"	e	enum:ofp_group
OFPG_ANY	include/openflow/openflow-common.h	/^    OFPG_ANY        = 0xffffffff   \/* Wildcard, for flow stats requests. *\/$/;"	e	enum:ofp_group
OFPG_MAX	include/openflow/openflow-common.h	/^    OFPG_MAX        = 0xffffff00,$/;"	e	enum:ofp_group
OFPHET_VERSIONBITMAP	include/openflow/openflow-common.h	/^    OFPHET_VERSIONBITMAP          = 1, \/* Bitmap of version supported. *\/$/;"	e	enum:ofp_hello_elem_type
OFPIEH12_AUTH	include/openflow/openflow-1.2.h	/^    OFPIEH12_AUTH   = 1 << 2,   \/* Authentication header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_DEST	include/openflow/openflow-1.2.h	/^    OFPIEH12_DEST   = 1 << 3,   \/* 1 or 2 dest headers present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_ESP	include/openflow/openflow-1.2.h	/^    OFPIEH12_ESP    = 1 << 1,   \/* Encrypted Sec Payload header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_FRAG	include/openflow/openflow-1.2.h	/^    OFPIEH12_FRAG   = 1 << 4,   \/* Fragment header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_HOP	include/openflow/openflow-1.2.h	/^    OFPIEH12_HOP    = 1 << 6,   \/* Hop-by-hop header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_NONEXT	include/openflow/openflow-1.2.h	/^    OFPIEH12_NONEXT = 1 << 0,   \/* "No next header" encountered. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_ROUTER	include/openflow/openflow-1.2.h	/^    OFPIEH12_ROUTER = 1 << 5,   \/* Router header present. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_UNREP	include/openflow/openflow-1.2.h	/^    OFPIEH12_UNREP  = 1 << 7,   \/* Unexpected repeats encountered. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIEH12_UNSEQ	include/openflow/openflow-1.2.h	/^    OFPIEH12_UNSEQ  = 1 << 8    \/* Unexpected sequencing encountered. *\/$/;"	e	enum:ofp12_ipv6exthdr_flags
OFPIT11_APPLY_ACTIONS	include/openflow/openflow-1.1.h	/^    OFPIT11_APPLY_ACTIONS = 4,     \/* Applies the action(s) immediately *\/$/;"	e	enum:ofp11_instruction_type
OFPIT11_CLEAR_ACTIONS	include/openflow/openflow-1.1.h	/^    OFPIT11_CLEAR_ACTIONS = 5,     \/* Clears all actions from the datapath$/;"	e	enum:ofp11_instruction_type
OFPIT11_EXPERIMENTER	include/openflow/openflow-1.1.h	/^    OFPIT11_EXPERIMENTER = 0xFFFF  \/* Experimenter instruction *\/$/;"	e	enum:ofp11_instruction_type
OFPIT11_GOTO_TABLE	include/openflow/openflow-1.1.h	/^    OFPIT11_GOTO_TABLE = 1,        \/* Setup the next table in the lookup$/;"	e	enum:ofp11_instruction_type
OFPIT11_WRITE_ACTIONS	include/openflow/openflow-1.1.h	/^    OFPIT11_WRITE_ACTIONS = 3,     \/* Write the action(s) onto the datapath$/;"	e	enum:ofp11_instruction_type
OFPIT11_WRITE_METADATA	include/openflow/openflow-1.1.h	/^    OFPIT11_WRITE_METADATA = 2,    \/* Setup the metadata field for use later$/;"	e	enum:ofp11_instruction_type
OFPIT13_METER	include/openflow/openflow-1.3.h	/^    OFPIT13_METER = 6           \/* Apply meter (rate limiter) *\/$/;"	e	enum:ofp13_instruction_type
OFPM13_ALL	include/openflow/openflow-1.3.h	/^    OFPM13_ALL        = 0xffffffff, \/* Represents all meters for stat requests$/;"	e	enum:ofp13_meter
OFPM13_CONTROLLER	include/openflow/openflow-1.3.h	/^    OFPM13_CONTROLLER = 0xfffffffe, \/* Meter for controller connection. *\/$/;"	e	enum:ofp13_meter
OFPM13_MAX	include/openflow/openflow-1.3.h	/^    OFPM13_MAX        = 0xffff0000,$/;"	e	enum:ofp13_meter
OFPM13_SLOWPATH	include/openflow/openflow-1.3.h	/^    OFPM13_SLOWPATH   = 0xfffffffd, \/* Meter for slow datapath. *\/$/;"	e	enum:ofp13_meter
OFPMBT13_DROP	include/openflow/openflow-1.3.h	/^    OFPMBT13_DROP         = 1,     \/* Drop packet. *\/$/;"	e	enum:ofp13_meter_band_type
OFPMBT13_DSCP_REMARK	include/openflow/openflow-1.3.h	/^    OFPMBT13_DSCP_REMARK  = 2,     \/* Remark DSCP in the IP header. *\/$/;"	e	enum:ofp13_meter_band_type
OFPMBT13_EXPERIMENTER	include/openflow/openflow-1.3.h	/^    OFPMBT13_EXPERIMENTER = 0xFFFF \/* Experimenter meter band. *\/$/;"	e	enum:ofp13_meter_band_type
OFPMC13_ADD	include/openflow/openflow-1.3.h	/^    OFPMC13_ADD,           \/* New meter. *\/$/;"	e	enum:ofp13_meter_mod_command
OFPMC13_DELETE	include/openflow/openflow-1.3.h	/^    OFPMC13_DELETE         \/* Delete specified meter. *\/$/;"	e	enum:ofp13_meter_mod_command
OFPMC13_MODIFY	include/openflow/openflow-1.3.h	/^    OFPMC13_MODIFY,        \/* Modify specified meter. *\/$/;"	e	enum:ofp13_meter_mod_command
OFPMF13_BURST	include/openflow/openflow-1.3.h	/^    OFPMF13_BURST   = 1 << 2,   \/* Do burst size. *\/$/;"	e	enum:ofp13_meter_flags
OFPMF13_KBPS	include/openflow/openflow-1.3.h	/^    OFPMF13_KBPS    = 1 << 0,   \/* Rate value in kb\/s (kilo-bit per second). *\/$/;"	e	enum:ofp13_meter_flags
OFPMF13_PKTPS	include/openflow/openflow-1.3.h	/^    OFPMF13_PKTPS   = 1 << 1,   \/* Rate value in packet\/sec. *\/$/;"	e	enum:ofp13_meter_flags
OFPMF13_STATS	include/openflow/openflow-1.3.h	/^    OFPMF13_STATS   = 1 << 3    \/* Collect statistics. *\/$/;"	e	enum:ofp13_meter_flags
OFPMPF13_REQ_MORE	include/openflow/openflow-1.3.h	/^    OFPMPF13_REQ_MORE = 1 << 0 \/* More requests to follow. *\/$/;"	e	enum:ofp13_multipart_request_flags
OFPMT11_STANDARD_LENGTH	include/openflow/openflow-1.1.h	/^OFP_ASSERT(sizeof(struct ofp11_match) == OFPMT11_STANDARD_LENGTH);$/;"	v
OFPMT11_STANDARD_LENGTH	include/openflow/openflow-1.1.h	183;"	d
OFPMT_OXM	include/openflow/openflow-common.h	/^    OFPMT_OXM = 1,              \/* OpenFlow Extensible Match *\/$/;"	e	enum:ofp_match_type
OFPMT_STANDARD	include/openflow/openflow-common.h	/^    OFPMT_STANDARD = 0,         \/* The match fields defined in the ofp11_match$/;"	e	enum:ofp_match_type
OFPP11_MAX	include/openflow/openflow-1.1.h	70;"	d
OFPP11_OFFSET	include/openflow/openflow-1.1.h	71;"	d
OFPPC10_ALL	include/openflow/openflow-1.0.h	65;"	d
OFPPC10_NO_FLOOD	include/openflow/openflow-1.0.h	/^    OFPPC10_NO_FLOOD     = 1 << 4, \/* Do not include port when flooding. *\/$/;"	e	enum:ofp10_port_config
OFPPC10_NO_RECV_STP	include/openflow/openflow-1.0.h	/^    OFPPC10_NO_RECV_STP  = 1 << 3, \/* Drop received 802.1D STP packets. *\/$/;"	e	enum:ofp10_port_config
OFPPC10_NO_STP	include/openflow/openflow-1.0.h	/^    OFPPC10_NO_STP       = 1 << 1, \/* Disable 802.1D spanning tree on port. *\/$/;"	e	enum:ofp10_port_config
OFPPC11_ALL	include/openflow/openflow-1.1.h	82;"	d
OFPPC_NO_FWD	include/openflow/openflow-common.h	/^    OFPPC_NO_FWD       = 1 << 5,  \/* Drop packets forwarded to port. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_PACKET_IN	include/openflow/openflow-common.h	/^    OFPPC_NO_PACKET_IN = 1 << 6   \/* Do not send packet-in msgs for port. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_RECV	include/openflow/openflow-common.h	/^    OFPPC_NO_RECV      = 1 << 2,  \/* Drop all packets received by port. *\/$/;"	e	enum:ofp_port_config
OFPPC_PORT_DOWN	include/openflow/openflow-common.h	/^    OFPPC_PORT_DOWN    = 1 << 0,  \/* Port is administratively down. *\/$/;"	e	enum:ofp_port_config
OFPPDPT14_ETHERNET	include/openflow/openflow-1.4.h	/^    OFPPDPT14_ETHERNET          = 0,      \/* Ethernet property. *\/$/;"	e	enum:ofp_port_desc_prop_type
OFPPDPT14_EXPERIMENTER	include/openflow/openflow-1.4.h	/^    OFPPDPT14_EXPERIMENTER      = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp_port_desc_prop_type
OFPPDPT14_OPTICAL	include/openflow/openflow-1.4.h	/^    OFPPDPT14_OPTICAL           = 1,      \/* Optical property. *\/$/;"	e	enum:ofp_port_desc_prop_type
OFPPF10_AUTONEG	include/openflow/openflow-1.0.h	/^    OFPPF10_AUTONEG    = 1 << 9,  \/* Auto-negotiation. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_COPPER	include/openflow/openflow-1.0.h	/^    OFPPF10_COPPER     = 1 << 7,  \/* Copper medium. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_FIBER	include/openflow/openflow-1.0.h	/^    OFPPF10_FIBER      = 1 << 8,  \/* Fiber medium. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_PAUSE	include/openflow/openflow-1.0.h	/^    OFPPF10_PAUSE      = 1 << 10, \/* Pause. *\/$/;"	e	enum:ofp10_port_features
OFPPF10_PAUSE_ASYM	include/openflow/openflow-1.0.h	/^    OFPPF10_PAUSE_ASYM = 1 << 11  \/* Asymmetric pause. *\/$/;"	e	enum:ofp10_port_features
OFPPF11_100GB_FD	include/openflow/openflow-1.1.h	/^    OFPPF11_100GB_FD   = 1 << 8,  \/* 100 Gb full-duplex rate support. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_1TB_FD	include/openflow/openflow-1.1.h	/^    OFPPF11_1TB_FD     = 1 << 9,  \/* 1 Tb full-duplex rate support. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_40GB_FD	include/openflow/openflow-1.1.h	/^    OFPPF11_40GB_FD    = 1 << 7,  \/* 40 Gb full-duplex rate support. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_ALL	include/openflow/openflow-1.1.h	106;"	d
OFPPF11_AUTONEG	include/openflow/openflow-1.1.h	/^    OFPPF11_AUTONEG    = 1 << 13, \/* Auto-negotiation. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_COPPER	include/openflow/openflow-1.1.h	/^    OFPPF11_COPPER     = 1 << 11, \/* Copper medium. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_FIBER	include/openflow/openflow-1.1.h	/^    OFPPF11_FIBER      = 1 << 12, \/* Fiber medium. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_OTHER	include/openflow/openflow-1.1.h	/^    OFPPF11_OTHER      = 1 << 10, \/* Other rate, not in the list. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_PAUSE	include/openflow/openflow-1.1.h	/^    OFPPF11_PAUSE      = 1 << 14, \/* Pause. *\/$/;"	e	enum:ofp11_port_features
OFPPF11_PAUSE_ASYM	include/openflow/openflow-1.1.h	/^    OFPPF11_PAUSE_ASYM = 1 << 15  \/* Asymmetric pause. *\/$/;"	e	enum:ofp11_port_features
OFPPF_100MB_FD	include/openflow/openflow-common.h	/^    OFPPF_100MB_FD   = 1 << 3,  \/* 100 Mb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_100MB_HD	include/openflow/openflow-common.h	/^    OFPPF_100MB_HD   = 1 << 2,  \/* 100 Mb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10GB_FD	include/openflow/openflow-common.h	/^    OFPPF_10GB_FD    = 1 << 6,  \/* 10 Gb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10MB_FD	include/openflow/openflow-common.h	/^    OFPPF_10MB_FD    = 1 << 1,  \/* 10 Mb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10MB_HD	include/openflow/openflow-common.h	/^    OFPPF_10MB_HD    = 1 << 0,  \/* 10 Mb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_1GB_FD	include/openflow/openflow-common.h	/^    OFPPF_1GB_FD     = 1 << 5,  \/* 1 Gb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_1GB_HD	include/openflow/openflow-common.h	/^    OFPPF_1GB_HD     = 1 << 4,  \/* 1 Gb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPMPT14_ETHERNET	include/openflow/openflow-1.4.h	/^    OFPPMPT14_ETHERNET          = 0,      \/* Ethernet property. *\/$/;"	e	enum:ofp14_port_mod_prop_type
OFPPMPT14_EXPERIMENTER	include/openflow/openflow-1.4.h	/^    OFPPMPT14_EXPERIMENTER      = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_port_mod_prop_type
OFPPMPT14_OPTICAL	include/openflow/openflow-1.4.h	/^    OFPPMPT14_OPTICAL           = 1,      \/* Optical property. *\/$/;"	e	enum:ofp14_port_mod_prop_type
OFPPR_ADD	include/openflow/openflow-common.h	/^    OFPPR_ADD,              \/* The port was added. *\/$/;"	e	enum:ofp_port_reason
OFPPR_DELETE	include/openflow/openflow-common.h	/^    OFPPR_DELETE,           \/* The port was removed. *\/$/;"	e	enum:ofp_port_reason
OFPPR_MODIFY	include/openflow/openflow-common.h	/^    OFPPR_MODIFY            \/* Some attribute of the port has changed. *\/$/;"	e	enum:ofp_port_reason
OFPPS10_ALL	include/openflow/openflow-1.0.h	84;"	d
OFPPS10_STP_BLOCK	include/openflow/openflow-1.0.h	/^    OFPPS10_STP_BLOCK   = 3 << 8, \/* Not part of spanning tree. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_FORWARD	include/openflow/openflow-1.0.h	/^    OFPPS10_STP_FORWARD = 2 << 8, \/* Learning and relaying frames. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_LEARN	include/openflow/openflow-1.0.h	/^    OFPPS10_STP_LEARN   = 1 << 8, \/* Learning but not relaying frames. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_LISTEN	include/openflow/openflow-1.0.h	/^    OFPPS10_STP_LISTEN  = 0 << 8, \/* Not learning or relaying frames. *\/$/;"	e	enum:ofp10_port_state
OFPPS10_STP_MASK	include/openflow/openflow-1.0.h	/^    OFPPS10_STP_MASK    = 3 << 8  \/* Bit mask for OFPPS10_STP_* values. *\/$/;"	e	enum:ofp10_port_state
OFPPS11_ALL	include/openflow/openflow-1.1.h	91;"	d
OFPPS11_BLOCKED	include/openflow/openflow-1.1.h	/^    OFPPS11_BLOCKED      = 1 << 1,  \/* Port is blocked *\/$/;"	e	enum:ofp11_port_state
OFPPS11_LIVE	include/openflow/openflow-1.1.h	/^    OFPPS11_LIVE         = 1 << 2,  \/* Live for Fast Failover Group. *\/$/;"	e	enum:ofp11_port_state
OFPPSPT14_ETHERNET	include/openflow/openflow-1.4.h	/^    OFPPSPT14_ETHERNET          = 0,      \/* Ethernet property. *\/$/;"	e	enum:ofp14_port_stats_prop_type
OFPPSPT14_EXPERIMENTER	include/openflow/openflow-1.4.h	/^    OFPPSPT14_EXPERIMENTER      = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_port_stats_prop_type
OFPPSPT14_OPTICAL	include/openflow/openflow-1.4.h	/^    OFPPSPT14_OPTICAL           = 1,      \/* Optical property. *\/$/;"	e	enum:ofp14_port_stats_prop_type
OFPPS_LINK_DOWN	include/openflow/openflow-common.h	/^    OFPPS_LINK_DOWN    = 1 << 0,  \/* No physical link present. *\/$/;"	e	enum:ofp_port_state
OFPP_ALL	include/openflow/openflow-1.0.h	44;"	d
OFPP_ANY	include/openflow/openflow-1.1.h	79;"	d
OFPP_CONTROLLER	include/openflow/openflow-1.0.h	45;"	d
OFPP_FIRST_RESV	include/openflow/openflow-1.0.h	34;"	d
OFPP_FLOOD	include/openflow/openflow-1.0.h	42;"	d
OFPP_IN_PORT	include/openflow/openflow-1.0.h	39;"	d
OFPP_LAST_RESV	include/openflow/openflow-1.0.h	35;"	d
OFPP_LOCAL	include/openflow/openflow-1.0.h	46;"	d
OFPP_MAX	include/openflow/openflow-1.0.h	33;"	d
OFPP_NONE	include/openflow/openflow-1.0.h	47;"	d
OFPP_NORMAL	include/openflow/openflow-1.0.h	41;"	d
OFPP_TABLE	include/openflow/openflow-1.0.h	40;"	d
OFPP_UNSET	include/openflow/openflow-1.0.h	38;"	d
OFPQT_EXPERIMENTER	include/openflow/openflow-common.h	/^    OFPQT_EXPERIMENTER = 0xffff, \/* Experimenter defined property. *\/$/;"	e	enum:ofp_queue_properties
OFPQT_MAX_RATE	include/openflow/openflow-common.h	/^    OFPQT_MAX_RATE = 2,          \/* Maximum guaranteed rate. *\/$/;"	e	enum:ofp_queue_properties
OFPQT_MIN_RATE	include/openflow/openflow-common.h	/^    OFPQT_MIN_RATE = 1,          \/* Minimum datarate guaranteed. *\/$/;"	e	enum:ofp_queue_properties
OFPQ_ALL	include/openflow/openflow-1.0.h	391;"	d
OFPRAW_NXST_AGGREGATE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_NXST_AGGREGATE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_NXST_AGGREGATE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_NXST_AGGREGATE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_NXST_FLOW_MONITOR_REPLY	lib/ofp-msgs.h	/^    OFPRAW_NXST_FLOW_MONITOR_REPLY,$/;"	e	enum:ofpraw
OFPRAW_NXST_FLOW_MONITOR_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_NXST_FLOW_MONITOR_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_NXST_FLOW_REPLY	lib/ofp-msgs.h	/^    OFPRAW_NXST_FLOW_REPLY,$/;"	e	enum:ofpraw
OFPRAW_NXST_FLOW_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_NXST_FLOW_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_NXT_FLOW_AGE	lib/ofp-msgs.h	/^    OFPRAW_NXT_FLOW_AGE,$/;"	e	enum:ofpraw
OFPRAW_NXT_FLOW_MOD	lib/ofp-msgs.h	/^    OFPRAW_NXT_FLOW_MOD,$/;"	e	enum:ofpraw
OFPRAW_NXT_FLOW_MOD_TABLE_ID	lib/ofp-msgs.h	/^    OFPRAW_NXT_FLOW_MOD_TABLE_ID,$/;"	e	enum:ofpraw
OFPRAW_NXT_FLOW_MONITOR_CANCEL	lib/ofp-msgs.h	/^    OFPRAW_NXT_FLOW_MONITOR_CANCEL,$/;"	e	enum:ofpraw
OFPRAW_NXT_FLOW_MONITOR_PAUSED	lib/ofp-msgs.h	/^    OFPRAW_NXT_FLOW_MONITOR_PAUSED,$/;"	e	enum:ofpraw
OFPRAW_NXT_FLOW_MONITOR_RESUMED	lib/ofp-msgs.h	/^    OFPRAW_NXT_FLOW_MONITOR_RESUMED,$/;"	e	enum:ofpraw
OFPRAW_NXT_FLOW_REMOVED	lib/ofp-msgs.h	/^    OFPRAW_NXT_FLOW_REMOVED,$/;"	e	enum:ofpraw
OFPRAW_NXT_GENEVE_TABLE_MOD	lib/ofp-msgs.h	/^    OFPRAW_NXT_GENEVE_TABLE_MOD,$/;"	e	enum:ofpraw
OFPRAW_NXT_GENEVE_TABLE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_NXT_GENEVE_TABLE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_NXT_GENEVE_TABLE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_NXT_GENEVE_TABLE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_NXT_PACKET_IN	lib/ofp-msgs.h	/^    OFPRAW_NXT_PACKET_IN,$/;"	e	enum:ofpraw
OFPRAW_NXT_ROLE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_NXT_ROLE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_NXT_ROLE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_NXT_ROLE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_NXT_SET_ASYNC_CONFIG	lib/ofp-msgs.h	/^    OFPRAW_NXT_SET_ASYNC_CONFIG,$/;"	e	enum:ofpraw
OFPRAW_NXT_SET_CONTROLLER_ID	lib/ofp-msgs.h	/^    OFPRAW_NXT_SET_CONTROLLER_ID,$/;"	e	enum:ofpraw
OFPRAW_NXT_SET_FLOW_FORMAT	lib/ofp-msgs.h	/^    OFPRAW_NXT_SET_FLOW_FORMAT,$/;"	e	enum:ofpraw
OFPRAW_NXT_SET_PACKET_IN_FORMAT	lib/ofp-msgs.h	/^    OFPRAW_NXT_SET_PACKET_IN_FORMAT,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_AGGREGATE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_AGGREGATE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_FLOW_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_FLOW_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_FLOW_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_FLOW_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_PORT_DESC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_PORT_DESC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_PORT_DESC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_PORT_DESC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_PORT_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_PORT_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_PORT_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_PORT_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_QUEUE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_QUEUE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_QUEUE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_QUEUE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST10_TABLE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST10_TABLE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_AGGREGATE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_AGGREGATE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_FLOW_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_FLOW_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_FLOW_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_FLOW_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_GROUP_DESC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_GROUP_DESC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_GROUP_DESC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_GROUP_DESC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_GROUP_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_GROUP_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_GROUP_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_GROUP_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_PORT_DESC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_PORT_DESC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_PORT_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_PORT_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_PORT_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_PORT_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_QUEUE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_QUEUE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_QUEUE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_QUEUE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST11_TABLE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST11_TABLE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST12_GROUP_FEATURES_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST12_GROUP_FEATURES_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST12_GROUP_FEATURES_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST12_GROUP_FEATURES_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST12_TABLE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST12_TABLE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_FLOW_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_FLOW_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_GROUP_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_GROUP_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_METER_CONFIG_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_METER_CONFIG_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_METER_CONFIG_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_METER_CONFIG_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_METER_FEATURES_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_METER_FEATURES_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_METER_FEATURES_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_METER_FEATURES_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_METER_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_METER_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_METER_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_METER_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_PORT_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_PORT_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_QUEUE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_QUEUE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_TABLE_FEATURES_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_TABLE_FEATURES_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_TABLE_FEATURES_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_TABLE_FEATURES_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST13_TABLE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST13_TABLE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST14_FLOW_MONITOR_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST14_FLOW_MONITOR_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST14_FLOW_MONITOR_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST14_FLOW_MONITOR_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST14_PORT_DESC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST14_PORT_DESC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST14_PORT_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST14_PORT_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST14_QUEUE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST14_QUEUE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST14_TABLE_DESC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST14_TABLE_DESC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST14_TABLE_DESC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST14_TABLE_DESC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST15_GROUP_DESC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST15_GROUP_DESC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST15_PORT_DESC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST15_PORT_DESC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST_AGGREGATE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST_AGGREGATE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST_DESC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPST_DESC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPST_DESC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST_DESC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPST_TABLE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPST_TABLE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_BARRIER_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_BARRIER_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_BARRIER_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_BARRIER_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_FEATURES_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_FEATURES_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_FLOW_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_FLOW_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_FLOW_REMOVED	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_FLOW_REMOVED,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_PACKET_IN	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_PACKET_IN,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_PACKET_OUT	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_PACKET_OUT,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_PORT_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_PORT_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_PORT_STATUS	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_PORT_STATUS,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_QUEUE_GET_CONFIG_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_QUEUE_GET_CONFIG_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT10_QUEUE_GET_CONFIG_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT10_QUEUE_GET_CONFIG_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_BARRIER_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_BARRIER_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_BARRIER_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_BARRIER_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_FEATURES_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_FEATURES_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_FLOW_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_FLOW_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_FLOW_REMOVED	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_FLOW_REMOVED,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_GROUP_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_GROUP_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_PACKET_IN	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_PACKET_IN,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_PACKET_OUT	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_PACKET_OUT,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_PORT_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_PORT_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_PORT_STATUS	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_PORT_STATUS,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_QUEUE_GET_CONFIG_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_QUEUE_GET_CONFIG_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_QUEUE_GET_CONFIG_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_QUEUE_GET_CONFIG_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT11_TABLE_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT11_TABLE_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT12_PACKET_IN	lib/ofp-msgs.h	/^    OFPRAW_OFPT12_PACKET_IN,$/;"	e	enum:ofpraw
OFPRAW_OFPT12_ROLE_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT12_ROLE_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT12_ROLE_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT12_ROLE_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT13_FEATURES_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT13_FEATURES_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT13_GET_ASYNC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT13_GET_ASYNC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT13_GET_ASYNC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT13_GET_ASYNC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT13_METER_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT13_METER_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT13_PACKET_IN	lib/ofp-msgs.h	/^    OFPRAW_OFPT13_PACKET_IN,$/;"	e	enum:ofpraw
OFPRAW_OFPT13_SET_ASYNC	lib/ofp-msgs.h	/^    OFPRAW_OFPT13_SET_ASYNC,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_BUNDLE_ADD_MESSAGE	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_BUNDLE_ADD_MESSAGE,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_BUNDLE_CONTROL	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_BUNDLE_CONTROL,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_GET_ASYNC_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_GET_ASYNC_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_GET_ASYNC_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_GET_ASYNC_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_PORT_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_PORT_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_PORT_STATUS	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_PORT_STATUS,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_REQUESTFORWARD	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_REQUESTFORWARD,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_ROLE_STATUS	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_ROLE_STATUS,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_SET_ASYNC	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_SET_ASYNC,$/;"	e	enum:ofpraw
OFPRAW_OFPT14_TABLE_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT14_TABLE_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT15_GROUP_MOD	lib/ofp-msgs.h	/^    OFPRAW_OFPT15_GROUP_MOD,$/;"	e	enum:ofpraw
OFPRAW_OFPT_ECHO_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT_ECHO_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT_ECHO_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT_ECHO_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT_ERROR	lib/ofp-msgs.h	/^    OFPRAW_OFPT_ERROR,$/;"	e	enum:ofpraw
OFPRAW_OFPT_FEATURES_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT_FEATURES_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT_GET_CONFIG_REPLY	lib/ofp-msgs.h	/^    OFPRAW_OFPT_GET_CONFIG_REPLY,$/;"	e	enum:ofpraw
OFPRAW_OFPT_GET_CONFIG_REQUEST	lib/ofp-msgs.h	/^    OFPRAW_OFPT_GET_CONFIG_REQUEST,$/;"	e	enum:ofpraw
OFPRAW_OFPT_HELLO	lib/ofp-msgs.h	/^    OFPRAW_OFPT_HELLO,$/;"	e	enum:ofpraw
OFPRAW_OFPT_SET_CONFIG	lib/ofp-msgs.h	/^    OFPRAW_OFPT_SET_CONFIG,$/;"	e	enum:ofpraw
OFPRFR_GROUP_MOD	include/openflow/openflow-1.4.h	/^    OFPRFR_GROUP_MOD = 0,      \/* Forward group mod requests. *\/$/;"	e	enum:ofp14_requestforward_reason
OFPRFR_METER_MOD	include/openflow/openflow-1.4.h	/^    OFPRFR_METER_MOD = 1,      \/* Forward meter mod requests. *\/$/;"	e	enum:ofp14_requestforward_reason
OFPROTO_DPIF_H	ofproto/ofproto-dpif.h	16;"	d
OFPROTO_DPIF_IPFIX_H	ofproto/ofproto-dpif-ipfix.h	18;"	d
OFPROTO_DPIF_MIRROR_H	ofproto/ofproto-dpif-mirror.h	16;"	d
OFPROTO_DPIF_MONITOR_H	ofproto/ofproto-dpif-monitor.h	16;"	d
OFPROTO_DPIF_RID_H	ofproto/ofproto-dpif-rid.h	18;"	d
OFPROTO_DPIF_SFLOW_H	ofproto/ofproto-dpif-sflow.h	19;"	d
OFPROTO_DPIF_UPCALL_H	ofproto/ofproto-dpif-upcall.h	16;"	d
OFPROTO_DPIF_XLATE_H	ofproto/ofproto-dpif-xlate.h	16;"	d
OFPROTO_EVICTION_FLAGS	ofproto/ofproto.c	96;"	d	file:
OFPROTO_FAIL_SECURE	ofproto/ofproto.h	/^    OFPROTO_FAIL_SECURE,        \/* Preserve flow table. *\/$/;"	e	enum:ofproto_fail_mode
OFPROTO_FAIL_STANDALONE	ofproto/ofproto.h	/^    OFPROTO_FAIL_STANDALONE     \/* Act as a standalone switch. *\/$/;"	e	enum:ofproto_fail_mode
OFPROTO_FLOW_LIMIT_DEFAULT	ofproto/ofproto.h	286;"	d
OFPROTO_FOR_EACH_TABLE	ofproto/ofproto-provider.h	266;"	d
OFPROTO_H	ofproto/ofproto.h	18;"	d
OFPROTO_IN_BAND	ofproto/ofproto.h	/^    OFPROTO_IN_BAND,            \/* In-band connection to controller. *\/$/;"	e	enum:ofproto_band
OFPROTO_MAX_IDLE_DEFAULT	ofproto/ofproto.h	287;"	d
OFPROTO_NETFLOW_H	ofproto/netflow.h	18;"	d
OFPROTO_OFPROTO_PROVIDER_H	ofproto/ofproto-provider.h	18;"	d
OFPROTO_OUT_OF_BAND	ofproto/ofproto.h	/^    OFPROTO_OUT_OF_BAND         \/* Out-of-band connection to controller. *\/$/;"	e	enum:ofproto_band
OFPROTO_PACKET_IN_MISS_FLOW	ofproto/connmgr.h	/^    OFPROTO_PACKET_IN_MISS_FLOW,$/;"	e	enum:ofproto_packet_in_miss_type
OFPROTO_PACKET_IN_MISS_WITHOUT_FLOW	ofproto/connmgr.h	/^    OFPROTO_PACKET_IN_MISS_WITHOUT_FLOW,$/;"	e	enum:ofproto_packet_in_miss_type
OFPROTO_PACKET_IN_NO_MISS	ofproto/connmgr.h	/^    OFPROTO_PACKET_IN_NO_MISS,$/;"	e	enum:ofproto_packet_in_miss_type
OFPROTO_PORT_FOR_EACH	ofproto/ofproto.h	279;"	d
OFPRPT_EXPERIMENTER	include/openflow/openflow-1.4.h	/^    OFPRPT_EXPERIMENTER         = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_role_prop_type
OFPRR_DELETE	include/openflow/openflow-common.h	/^    OFPRR_DELETE,               \/* Evicted by a DELETE flow mod. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_EVICTION	include/openflow/openflow-common.h	/^    OFPRR_EVICTION,             \/* Switch eviction to free resources. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_GROUP_DELETE	include/openflow/openflow-common.h	/^    OFPRR_GROUP_DELETE,         \/* Group was removed. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_HARD_TIMEOUT	include/openflow/openflow-common.h	/^    OFPRR_HARD_TIMEOUT,         \/* Time exceeded hard_timeout. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_IDLE_TIMEOUT	include/openflow/openflow-common.h	/^    OFPRR_IDLE_TIMEOUT,         \/* Flow idle time exceeded idle_timeout. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_METER_DELETE	include/openflow/openflow-common.h	/^    OFPRR_METER_DELETE,         \/* Meter was removed. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPR_ACTION	include/openflow/openflow-common.h	/^    OFPR_ACTION,            \/* Action explicitly output to controller. *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_ACTION_SET	include/openflow/openflow-common.h	/^    OFPR_ACTION_SET,        \/* Output to controller in action set *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_GROUP	include/openflow/openflow-common.h	/^    OFPR_GROUP,             \/* Output to controller in group bucket *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_INVALID_TTL	include/openflow/openflow-common.h	/^    OFPR_INVALID_TTL,       \/* Packet has invalid TTL. *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_NO_MATCH	include/openflow/openflow-common.h	/^    OFPR_NO_MATCH,          \/* No matching flow. *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_N_REASONS	include/openflow/openflow-common.h	/^    OFPR_N_REASONS$/;"	e	enum:ofp_packet_in_reason
OFPR_PACKET_OUT	include/openflow/openflow-common.h	/^    OFPR_PACKET_OUT,        \/* Output to controller in packet-out *\/$/;"	e	enum:ofp_packet_in_reason
OFPSF_REPLY_MORE	include/openflow/openflow-common.h	/^    OFPSF_REPLY_MORE  = 1 << 0  \/* More replies to follow. *\/$/;"	e	enum:ofp_stats_reply_flags
OFPST_VENDOR	build-aux/extract-ofp-msgs	/^OFPST_VENDOR = 0xffff$/;"	v
OFPST_VENDOR	lib/ofp-msgs.c	36;"	d	file:
OFPT10_STATS_REPLY	build-aux/extract-ofp-msgs	/^OFPT10_STATS_REPLY = 17$/;"	v
OFPT10_STATS_REPLY	lib/ofp-msgs.c	33;"	d	file:
OFPT10_STATS_REQUEST	build-aux/extract-ofp-msgs	/^OFPT10_STATS_REQUEST = 16$/;"	v
OFPT10_STATS_REQUEST	lib/ofp-msgs.c	32;"	d	file:
OFPT11_STATS_REPLY	build-aux/extract-ofp-msgs	/^OFPT11_STATS_REPLY = 19$/;"	v
OFPT11_STATS_REPLY	lib/ofp-msgs.c	35;"	d	file:
OFPT11_STATS_REQUEST	build-aux/extract-ofp-msgs	/^OFPT11_STATS_REQUEST = 18$/;"	v
OFPT11_STATS_REQUEST	lib/ofp-msgs.c	34;"	d	file:
OFPTC11_TABLE_MISS_CONTINUE	include/openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_CONTINUE   = 1 << 0, \/* Go to next table, like OF1.0. *\/$/;"	e	enum:ofp_table_config
OFPTC11_TABLE_MISS_CONTROLLER	include/openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_CONTROLLER = 0 << 0, \/* Send to controller. *\/$/;"	e	enum:ofp_table_config
OFPTC11_TABLE_MISS_DROP	include/openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_DROP       = 2 << 0, \/* Drop the packet. *\/$/;"	e	enum:ofp_table_config
OFPTC11_TABLE_MISS_MASK	include/openflow/openflow-common.h	/^    OFPTC11_TABLE_MISS_MASK       = 3 << 0,$/;"	e	enum:ofp_table_config
OFPTC13_DEPRECATED_MASK	include/openflow/openflow-1.3.h	/^    OFPTC13_DEPRECATED_MASK = 3  \/* Deprecated bits *\/$/;"	e	enum:ofp13_table_config
OFPTC14_EVICTION	include/openflow/openflow-common.h	/^    OFPTC14_EVICTION              = 1 << 2, \/* Allow table to evict flows. *\/$/;"	e	enum:ofp_table_config
OFPTC14_VACANCY_EVENTS	include/openflow/openflow-common.h	/^    OFPTC14_VACANCY_EVENTS        = 1 << 3, \/* Enable vacancy events. *\/$/;"	e	enum:ofp_table_config
OFPTFPT13_APPLY_ACTIONS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_ACTIONS        = 6, \/* Apply Actions property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_APPLY_ACTIONS_MISS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_ACTIONS_MISS   = 7, \/* Apply Actions for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_APPLY_SETFIELD	include/openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_SETFIELD       = 14, \/* Apply Set-Field property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_APPLY_SETFIELD_MISS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_APPLY_SETFIELD_MISS  = 15, \/* Apply Set-Field for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_EXPERIMENTER	include/openflow/openflow-1.3.h	/^    OFPTFPT13_EXPERIMENTER         = 0xFFFE, \/* Experimenter property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_EXPERIMENTER_MISS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_EXPERIMENTER_MISS    = 0xFFFF, \/* Experimenter for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_INSTRUCTIONS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_INSTRUCTIONS         = 0, \/* Instructions property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_INSTRUCTIONS_MISS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_INSTRUCTIONS_MISS    = 1, \/* Instructions for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_MATCH	include/openflow/openflow-1.3.h	/^    OFPTFPT13_MATCH                = 8, \/* Match property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_NEXT_TABLES	include/openflow/openflow-1.3.h	/^    OFPTFPT13_NEXT_TABLES          = 2, \/* Next Table property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_NEXT_TABLES_MISS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_NEXT_TABLES_MISS     = 3, \/* Next Table for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WILDCARDS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_WILDCARDS            = 10, \/* Wildcards property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_ACTIONS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_ACTIONS        = 4, \/* Write Actions property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_ACTIONS_MISS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_ACTIONS_MISS   = 5, \/* Write Actions for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_SETFIELD	include/openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_SETFIELD       = 12, \/* Write Set-Field property. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT13_WRITE_SETFIELD_MISS	include/openflow/openflow-1.3.h	/^    OFPTFPT13_WRITE_SETFIELD_MISS  = 13, \/* Write Set-Field for table-miss. *\/$/;"	e	enum:ofp13_table_feature_prop_type
OFPTFPT_EXPERIMENTER_MASTER	include/openflow/openflow-1.4.h	/^    OFPTFPT_EXPERIMENTER_MASTER   = 0xFFFF, \/* Experimenter for master. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPTFPT_EXPERIMENTER_SLAVE	include/openflow/openflow-1.4.h	/^    OFPTFPT_EXPERIMENTER_SLAVE    = 0xFFFE, \/* Experimenter for slave. *\/$/;"	e	enum:ofp14_async_config_prop_type
OFPTMPEF14_IMPORTANCE	include/openflow/openflow-1.4.h	/^    OFPTMPEF14_IMPORTANCE      = 1 << 1,     \/* Using flow entry importance. *\/$/;"	e	enum:ofp14_table_mod_prop_eviction_flag
OFPTMPEF14_LIFETIME	include/openflow/openflow-1.4.h	/^    OFPTMPEF14_LIFETIME        = 1 << 2,     \/* Using flow entry lifetime. *\/$/;"	e	enum:ofp14_table_mod_prop_eviction_flag
OFPTMPEF14_OTHER	include/openflow/openflow-1.4.h	/^    OFPTMPEF14_OTHER           = 1 << 0,     \/* Using other factors. *\/$/;"	e	enum:ofp14_table_mod_prop_eviction_flag
OFPTMPT14_EVICTION	include/openflow/openflow-1.4.h	/^    OFPTMPT14_EVICTION               = 0x2,    \/* Eviction property. *\/$/;"	e	enum:ofp14_table_mod_prop_type
OFPTMPT14_EXPERIMENTER	include/openflow/openflow-1.4.h	/^    OFPTMPT14_EXPERIMENTER           = 0xFFFF, \/* Experimenter property. *\/$/;"	e	enum:ofp14_table_mod_prop_type
OFPTMPT14_VACANCY	include/openflow/openflow-1.4.h	/^    OFPTMPT14_VACANCY                = 0x3,    \/* Vacancy property. *\/$/;"	e	enum:ofp14_table_mod_prop_type
OFPTR_VACANCY_DOWN	include/openflow/openflow-1.4.h	/^    OFPTR_VACANCY_DOWN = 3,    \/* Vacancy down threshold event. *\/$/;"	e	enum:ofp14_table_reason
OFPTR_VACANCY_UP	include/openflow/openflow-1.4.h	/^    OFPTR_VACANCY_UP   = 4,    \/* Vacancy up threshold event. *\/$/;"	e	enum:ofp14_table_reason
OFPTT_ALL	include/openflow/openflow-common.h	/^    OFPTT_ALL = 0xff         \/* Wildcard table used for table config,$/;"	e	enum:ofp_table
OFPTT_MAX	include/openflow/openflow-common.h	/^    OFPTT_MAX = 0xfe,$/;"	e	enum:ofp_table
OFPTYPE_AGGREGATE_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_AGGREGATE_STATS_REPLY,   \/* OFPRAW_OFPST_AGGREGATE_REPLY.$/;"	e	enum:ofptype
OFPTYPE_AGGREGATE_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_AGGREGATE_STATS_REQUEST, \/* OFPRAW_OFPST10_AGGREGATE_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_BARRIER_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_BARRIER_REPLY,       \/* OFPRAW_OFPT10_BARRIER_REPLY.$/;"	e	enum:ofptype
OFPTYPE_BARRIER_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_BARRIER_REQUEST,     \/* OFPRAW_OFPT10_BARRIER_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_BUNDLE_ADD_MESSAGE	lib/ofp-msgs.h	/^    OFPTYPE_BUNDLE_ADD_MESSAGE,   \/* OFPRAW_OFPT14_BUNDLE_ADD_MESSAGE. *\/$/;"	e	enum:ofptype
OFPTYPE_BUNDLE_CONTROL	lib/ofp-msgs.h	/^    OFPTYPE_BUNDLE_CONTROL,       \/* OFPRAW_OFPT14_BUNDLE_CONTROL. *\/$/;"	e	enum:ofptype
OFPTYPE_DESC_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_DESC_STATS_REPLY,        \/* OFPRAW_OFPST_DESC_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_DESC_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_DESC_STATS_REQUEST,      \/* OFPRAW_OFPST_DESC_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_ECHO_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_ECHO_REPLY,          \/* OFPRAW_OFPT_ECHO_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_ECHO_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_ECHO_REQUEST,        \/* OFPRAW_OFPT_ECHO_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_ERROR	lib/ofp-msgs.h	/^    OFPTYPE_ERROR,               \/* OFPRAW_OFPT_ERROR. *\/$/;"	e	enum:ofptype
OFPTYPE_FEATURES_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_FEATURES_REPLY,      \/* OFPRAW_OFPT10_FEATURES_REPLY.$/;"	e	enum:ofptype
OFPTYPE_FEATURES_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_FEATURES_REQUEST,    \/* OFPRAW_OFPT_FEATURES_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_FLOW_AGE	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_AGE,             \/* OFPRAW_NXT_FLOW_AGE. *\/$/;"	e	enum:ofptype
OFPTYPE_FLOW_MOD	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_MOD,            \/* OFPRAW_OFPT10_FLOW_MOD.$/;"	e	enum:ofptype
OFPTYPE_FLOW_MOD_TABLE_ID	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_MOD_TABLE_ID,    \/* OFPRAW_NXT_FLOW_MOD_TABLE_ID. *\/$/;"	e	enum:ofptype
OFPTYPE_FLOW_MONITOR_CANCEL	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_MONITOR_CANCEL,        \/* OFPRAW_NXT_FLOW_MONITOR_CANCEL. *\/$/;"	e	enum:ofptype
OFPTYPE_FLOW_MONITOR_PAUSED	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_MONITOR_PAUSED,        \/* OFPRAW_NXT_FLOW_MONITOR_PAUSED. *\/$/;"	e	enum:ofptype
OFPTYPE_FLOW_MONITOR_RESUMED	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_MONITOR_RESUMED,       \/* OFPRAW_NXT_FLOW_MONITOR_RESUMED. *\/$/;"	e	enum:ofptype
OFPTYPE_FLOW_MONITOR_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_MONITOR_STATS_REPLY,   \/* OFPRAW_OFPST14_FLOW_MONITOR_REPLY.$/;"	e	enum:ofptype
OFPTYPE_FLOW_MONITOR_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_MONITOR_STATS_REQUEST, \/* OFPRAW_OFPST14_FLOW_MONITOR_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_FLOW_REMOVED	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_REMOVED,        \/* OFPRAW_OFPT10_FLOW_REMOVED.$/;"	e	enum:ofptype
OFPTYPE_FLOW_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_STATS_REPLY,        \/* OFPRAW_OFPST10_FLOW_REPLY.$/;"	e	enum:ofptype
OFPTYPE_FLOW_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_FLOW_STATS_REQUEST,      \/* OFPRAW_OFPST10_FLOW_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_GET_ASYNC_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_GET_ASYNC_REPLY,      \/* OFPRAW_OFPT13_GET_ASYNC_REPLY.$/;"	e	enum:ofptype
OFPTYPE_GET_ASYNC_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_GET_ASYNC_REQUEST,    \/* OFPRAW_OFPT13_GET_ASYNC_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_GET_CONFIG_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_GET_CONFIG_REPLY,    \/* OFPRAW_OFPT_GET_CONFIG_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_GET_CONFIG_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_GET_CONFIG_REQUEST,  \/* OFPRAW_OFPT_GET_CONFIG_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_GROUP_DESC_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_GROUP_DESC_STATS_REPLY,  \/* OFPRAW_OFPST11_GROUP_DESC_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_GROUP_DESC_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_GROUP_DESC_STATS_REQUEST, \/* OFPRAW_OFPST11_GROUP_DESC_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_GROUP_FEATURES_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_GROUP_FEATURES_STATS_REPLY, \/* OFPRAW_OFPST12_GROUP_FEATURES_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_GROUP_FEATURES_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_GROUP_FEATURES_STATS_REQUEST, \/* OFPRAW_OFPST12_GROUP_FEATURES_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_GROUP_MOD	lib/ofp-msgs.h	/^    OFPTYPE_GROUP_MOD,           \/* OFPRAW_OFPT11_GROUP_MOD.$/;"	e	enum:ofptype
OFPTYPE_GROUP_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_GROUP_STATS_REPLY,       \/* OFPRAW_OFPST11_GROUP_REPLY.$/;"	e	enum:ofptype
OFPTYPE_GROUP_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_GROUP_STATS_REQUEST,     \/* OFPRAW_OFPST11_GROUP_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_HELLO	lib/ofp-msgs.h	/^    OFPTYPE_HELLO,               \/* OFPRAW_OFPT_HELLO. *\/$/;"	e	enum:ofptype
OFPTYPE_METER_CONFIG_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_METER_CONFIG_STATS_REPLY, \/* OFPRAW_OFPST13_METER_CONFIG_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_METER_CONFIG_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_METER_CONFIG_STATS_REQUEST, \/* OFPRAW_OFPST13_METER_CONFIG_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_METER_FEATURES_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_METER_FEATURES_STATS_REPLY, \/* OFPRAW_OFPST13_METER_FEATURES_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_METER_FEATURES_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_METER_FEATURES_STATS_REQUEST, \/* OFPRAW_OFPST13_METER_FEATURES_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_METER_MOD	lib/ofp-msgs.h	/^    OFPTYPE_METER_MOD,            \/* OFPRAW_OFPT13_METER_MOD. *\/$/;"	e	enum:ofptype
OFPTYPE_METER_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_METER_STATS_REPLY,       \/* OFPRAW_OFPST13_METER_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_METER_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_METER_STATS_REQUEST,     \/* OFPRAW_OFPST13_METER_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_NXT_GENEVE_TABLE_MOD	lib/ofp-msgs.h	/^    OFPTYPE_NXT_GENEVE_TABLE_MOD, \/* OFPRAW_NXT_GENEVE_TABLE_MOD. *\/$/;"	e	enum:ofptype
OFPTYPE_NXT_GENEVE_TABLE_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_NXT_GENEVE_TABLE_REPLY, \/* OFPRAW_NXT_GENEVE_TABLE_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_NXT_GENEVE_TABLE_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_NXT_GENEVE_TABLE_REQUEST, \/* OFPRAW_NXT_GENEVE_TABLE_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_PACKET_IN	lib/ofp-msgs.h	/^    OFPTYPE_PACKET_IN,           \/* OFPRAW_OFPT10_PACKET_IN.$/;"	e	enum:ofptype
OFPTYPE_PACKET_OUT	lib/ofp-msgs.h	/^    OFPTYPE_PACKET_OUT,          \/* OFPRAW_OFPT10_PACKET_OUT.$/;"	e	enum:ofptype
OFPTYPE_PORT_DESC_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_PORT_DESC_STATS_REPLY,   \/* OFPRAW_OFPST10_PORT_DESC_REPLY.$/;"	e	enum:ofptype
OFPTYPE_PORT_DESC_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_PORT_DESC_STATS_REQUEST, \/* OFPRAW_OFPST10_PORT_DESC_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_PORT_MOD	lib/ofp-msgs.h	/^    OFPTYPE_PORT_MOD,            \/* OFPRAW_OFPT10_PORT_MOD.$/;"	e	enum:ofptype
OFPTYPE_PORT_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_PORT_STATS_REPLY,        \/* OFPRAW_OFPST10_PORT_REPLY.$/;"	e	enum:ofptype
OFPTYPE_PORT_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_PORT_STATS_REQUEST,      \/* OFPRAW_OFPST10_PORT_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_PORT_STATUS	lib/ofp-msgs.h	/^    OFPTYPE_PORT_STATUS,         \/* OFPRAW_OFPT10_PORT_STATUS.$/;"	e	enum:ofptype
OFPTYPE_QUEUE_GET_CONFIG_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_QUEUE_GET_CONFIG_REPLY, \/* OFPRAW_OFPT10_QUEUE_GET_CONFIG_REPLY.$/;"	e	enum:ofptype
OFPTYPE_QUEUE_GET_CONFIG_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_QUEUE_GET_CONFIG_REQUEST, \/* OFPRAW_OFPT10_QUEUE_GET_CONFIG_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_QUEUE_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_QUEUE_STATS_REPLY,       \/* OFPRAW_OFPST10_QUEUE_REPLY.$/;"	e	enum:ofptype
OFPTYPE_QUEUE_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_QUEUE_STATS_REQUEST,     \/* OFPRAW_OFPST10_QUEUE_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_REQUESTFORWARD	lib/ofp-msgs.h	/^    OFPTYPE_REQUESTFORWARD,       \/* OFPRAW_OFPT14_REQUESTFORWARD. *\/$/;"	e	enum:ofptype
OFPTYPE_ROLE_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_ROLE_REPLY,           \/* OFPRAW_OFPT12_ROLE_REPLY.$/;"	e	enum:ofptype
OFPTYPE_ROLE_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_ROLE_REQUEST,         \/* OFPRAW_OFPT12_ROLE_REQUEST.$/;"	e	enum:ofptype
OFPTYPE_ROLE_STATUS	lib/ofp-msgs.h	/^    OFPTYPE_ROLE_STATUS,          \/* OFPRAW_OFPT14_ROLE_STATUS. *\/$/;"	e	enum:ofptype
OFPTYPE_SET_ASYNC_CONFIG	lib/ofp-msgs.h	/^    OFPTYPE_SET_ASYNC_CONFIG,     \/* OFPRAW_NXT_SET_ASYNC_CONFIG.$/;"	e	enum:ofptype
OFPTYPE_SET_CONFIG	lib/ofp-msgs.h	/^    OFPTYPE_SET_CONFIG,          \/* OFPRAW_OFPT_SET_CONFIG. *\/$/;"	e	enum:ofptype
OFPTYPE_SET_CONTROLLER_ID	lib/ofp-msgs.h	/^    OFPTYPE_SET_CONTROLLER_ID,    \/* OFPRAW_NXT_SET_CONTROLLER_ID. *\/$/;"	e	enum:ofptype
OFPTYPE_SET_FLOW_FORMAT	lib/ofp-msgs.h	/^    OFPTYPE_SET_FLOW_FORMAT,      \/* OFPRAW_NXT_SET_FLOW_FORMAT. *\/$/;"	e	enum:ofptype
OFPTYPE_SET_PACKET_IN_FORMAT	lib/ofp-msgs.h	/^    OFPTYPE_SET_PACKET_IN_FORMAT, \/* OFPRAW_NXT_SET_PACKET_IN_FORMAT. *\/$/;"	e	enum:ofptype
OFPTYPE_TABLE_DESC_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_TABLE_DESC_REPLY,        \/* OFPRAW_OFPST14_TABLE_DESC_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_TABLE_DESC_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_TABLE_DESC_REQUEST,      \/* OFPRAW_OFPST14_TABLE_DESC_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_TABLE_FEATURES_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_TABLE_FEATURES_STATS_REPLY, \/* OFPRAW_OFPST13_TABLE_FEATURES_REPLY. *\/$/;"	e	enum:ofptype
OFPTYPE_TABLE_FEATURES_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_TABLE_FEATURES_STATS_REQUEST, \/* OFPRAW_OFPST13_TABLE_FEATURES_REQUEST. *\/$/;"	e	enum:ofptype
OFPTYPE_TABLE_MOD	lib/ofp-msgs.h	/^    OFPTYPE_TABLE_MOD,           \/* OFPRAW_OFPT11_TABLE_MOD.$/;"	e	enum:ofptype
OFPTYPE_TABLE_STATS_REPLY	lib/ofp-msgs.h	/^    OFPTYPE_TABLE_STATS_REPLY,       \/* OFPRAW_OFPST10_TABLE_REPLY.$/;"	e	enum:ofptype
OFPTYPE_TABLE_STATS_REQUEST	lib/ofp-msgs.h	/^    OFPTYPE_TABLE_STATS_REQUEST,     \/* OFPRAW_OFPST_TABLE_REQUEST. *\/$/;"	e	enum:ofptype
OFPT_VENDOR	build-aux/extract-ofp-msgs	/^OFPT_VENDOR = 4$/;"	v
OFPT_VENDOR	lib/ofp-msgs.c	31;"	d	file:
OFPUTIL_C_ARP_MATCH_IP	lib/ofp-util.h	/^    OFPUTIL_C_ARP_MATCH_IP   = 1 << 7,  \/* Match IP addresses in ARP pkts. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_FLOW_STATS	lib/ofp-util.h	/^    OFPUTIL_C_FLOW_STATS     = 1 << 0,  \/* Flow statistics. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_GROUP_STATS	lib/ofp-util.h	/^    OFPUTIL_C_GROUP_STATS    = 1 << 4,  \/* Group statistics. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_IP_REASM	lib/ofp-util.h	/^    OFPUTIL_C_IP_REASM       = 1 << 5,  \/* Can reassemble IP fragments. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_PORT_BLOCKED	lib/ofp-util.h	/^    OFPUTIL_C_PORT_BLOCKED   = 1 << 8,  \/* Switch will block looping ports *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_PORT_STATS	lib/ofp-util.h	/^    OFPUTIL_C_PORT_STATS     = 1 << 2,  \/* Port statistics. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_QUEUE_STATS	lib/ofp-util.h	/^    OFPUTIL_C_QUEUE_STATS    = 1 << 6,  \/* Queue statistics. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_STP	lib/ofp-util.h	/^    OFPUTIL_C_STP            = 1 << 3,  \/* 802.1d spanning tree. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_C_TABLE_STATS	lib/ofp-util.h	/^    OFPUTIL_C_TABLE_STATS    = 1 << 1,  \/* Table statistics. *\/$/;"	e	enum:ofputil_capabilities
OFPUTIL_DEFAULT_VERSIONS	lib/ofp-util.h	188;"	d
OFPUTIL_FF_CHECK_OVERLAP	lib/ofp-util.h	/^    OFPUTIL_FF_CHECK_OVERLAP = 1 << 3, \/* All versions. *\/$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_EMERG	lib/ofp-util.h	/^    OFPUTIL_FF_EMERG         = 1 << 4, \/* OpenFlow 1.0 only. *\/$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_HIDDEN_FIELDS	lib/ofp-util.h	/^    OFPUTIL_FF_HIDDEN_FIELDS = 1 << 6, \/* Allow hidden match fields to be$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_NO_BYT_COUNTS	lib/ofp-util.h	/^    OFPUTIL_FF_NO_BYT_COUNTS = 1 << 2, \/* OpenFlow 1.3+. *\/$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_NO_PKT_COUNTS	lib/ofp-util.h	/^    OFPUTIL_FF_NO_PKT_COUNTS = 1 << 1, \/* OpenFlow 1.3+. *\/$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_NO_READONLY	lib/ofp-util.h	/^    OFPUTIL_FF_NO_READONLY   = 1 << 7, \/* Allow rules within read only tables$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_RESET_COUNTS	lib/ofp-util.h	/^    OFPUTIL_FF_RESET_COUNTS  = 1 << 5, \/* OpenFlow 1.2+. *\/$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_SEND_FLOW_REM	lib/ofp-util.h	/^    OFPUTIL_FF_SEND_FLOW_REM = 1 << 0, \/* All versions. *\/$/;"	e	enum:ofputil_flow_mod_flags
OFPUTIL_FF_STATE	lib/ofp-util.h	252;"	d
OFPUTIL_METER_CONFIG	lib/ofp-util.h	/^    OFPUTIL_METER_CONFIG,$/;"	e	enum:ofputil_meter_request_type
OFPUTIL_METER_FEATURES	lib/ofp-util.h	/^    OFPUTIL_METER_FEATURES,$/;"	e	enum:ofputil_meter_request_type
OFPUTIL_METER_STATS	lib/ofp-util.h	/^    OFPUTIL_METER_STATS$/;"	e	enum:ofputil_meter_request_type
OFPUTIL_NAMED_PORT	lib/ofp-util.c	6454;"	d	file:
OFPUTIL_NAMED_PORT	lib/ofp-util.c	6456;"	d	file:
OFPUTIL_NAMED_PORT	lib/ofp-util.c	6491;"	d	file:
OFPUTIL_NAMED_PORT	lib/ofp-util.c	6496;"	d	file:
OFPUTIL_NAMED_PORTS	lib/ofp-util.c	6384;"	d	file:
OFPUTIL_NAMED_PORTS_WITH_NONE	lib/ofp-util.c	6396;"	d	file:
OFPUTIL_PACKET_IN_REASON_BUFSIZE	lib/ofp-util.h	/^enum { OFPUTIL_PACKET_IN_REASON_BUFSIZE = INT_STRLEN(int) + 1 };$/;"	e	enum:__anon132
OFPUTIL_PC_NO_FLOOD	lib/ofp-util.h	/^    OFPUTIL_PC_NO_FLOOD     = 1 << 4, \/* Do not include port when flooding. *\/$/;"	e	enum:ofputil_port_config
OFPUTIL_PC_NO_FWD	lib/ofp-util.h	/^    OFPUTIL_PC_NO_FWD       = 1 << 5, \/* Drop packets forwarded to port. *\/$/;"	e	enum:ofputil_port_config
OFPUTIL_PC_NO_PACKET_IN	lib/ofp-util.h	/^    OFPUTIL_PC_NO_PACKET_IN = 1 << 6, \/* No send packet-in msgs for port. *\/$/;"	e	enum:ofputil_port_config
OFPUTIL_PC_NO_RECV	lib/ofp-util.h	/^    OFPUTIL_PC_NO_RECV      = 1 << 2, \/* Drop all packets received by port. *\/$/;"	e	enum:ofputil_port_config
OFPUTIL_PC_NO_RECV_STP	lib/ofp-util.h	/^    OFPUTIL_PC_NO_RECV_STP  = 1 << 3, \/* Drop received 802.1D STP packets. *\/$/;"	e	enum:ofputil_port_config
OFPUTIL_PC_NO_STP	lib/ofp-util.h	/^    OFPUTIL_PC_NO_STP       = 1 << 1, \/* No 802.1D spanning tree for port. *\/$/;"	e	enum:ofputil_port_config
OFPUTIL_PC_PORT_DOWN	lib/ofp-util.h	/^    OFPUTIL_PC_PORT_DOWN    = 1 << 0, \/* Port is administratively down. *\/$/;"	e	enum:ofputil_port_config
OFPUTIL_PS_BLOCKED	lib/ofp-util.h	/^    OFPUTIL_PS_BLOCKED     = 1 << 1, \/* Port is blocked *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_PS_LINK_DOWN	lib/ofp-util.h	/^    OFPUTIL_PS_LINK_DOWN   = 1 << 0, \/* No physical link present. *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_PS_LIVE	lib/ofp-util.h	/^    OFPUTIL_PS_LIVE        = 1 << 2, \/* Live for Fast Failover Group. *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_PS_STP_BLOCK	lib/ofp-util.h	/^    OFPUTIL_PS_STP_BLOCK   = 3 << 8, \/* Not part of spanning tree. *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_PS_STP_FORWARD	lib/ofp-util.h	/^    OFPUTIL_PS_STP_FORWARD = 2 << 8, \/* Learning and relaying frames. *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_PS_STP_LEARN	lib/ofp-util.h	/^    OFPUTIL_PS_STP_LEARN   = 1 << 8, \/* Learning but not relaying frames. *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_PS_STP_LISTEN	lib/ofp-util.h	/^    OFPUTIL_PS_STP_LISTEN  = 0 << 8, \/* Not learning or relaying frames. *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_PS_STP_MASK	lib/ofp-util.h	/^    OFPUTIL_PS_STP_MASK    = 3 << 8  \/* Bit mask for OFPPS10_STP_* values. *\/$/;"	e	enum:ofputil_port_state
OFPUTIL_P_ANY	lib/ofp-util.h	134;"	d
OFPUTIL_P_ANY_OXM	lib/ofp-util.h	116;"	d
OFPUTIL_P_NONE	lib/ofp-util.h	87;"	d
OFPUTIL_P_NXM_OF11_UP	lib/ofp-util.h	121;"	d
OFPUTIL_P_NXM_OXM_ANY	lib/ofp-util.h	124;"	d
OFPUTIL_P_OF10_ANY	lib/ofp-util.h	94;"	d
OFPUTIL_P_OF10_NXM	lib/ofp-util.h	/^    OFPUTIL_P_OF10_NXM     = 1 << 2,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF10_NXM_ANY	lib/ofp-util.h	93;"	d
OFPUTIL_P_OF10_NXM_TID	lib/ofp-util.h	/^    OFPUTIL_P_OF10_NXM_TID = 1 << 3,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF10_STD	lib/ofp-util.h	/^    OFPUTIL_P_OF10_STD     = 1 << 0,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF10_STD_ANY	lib/ofp-util.h	92;"	d
OFPUTIL_P_OF10_STD_TID	lib/ofp-util.h	/^    OFPUTIL_P_OF10_STD_TID = 1 << 1,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF11_STD	lib/ofp-util.h	/^    OFPUTIL_P_OF11_STD     = 1 << 4,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF11_UP	lib/ofp-util.h	126;"	d
OFPUTIL_P_OF12_OXM	lib/ofp-util.h	/^    OFPUTIL_P_OF12_OXM      = 1 << 5,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF12_UP	lib/ofp-util.h	128;"	d
OFPUTIL_P_OF13_OXM	lib/ofp-util.h	/^    OFPUTIL_P_OF13_OXM      = 1 << 6,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF13_UP	lib/ofp-util.h	129;"	d
OFPUTIL_P_OF14_OXM	lib/ofp-util.h	/^    OFPUTIL_P_OF14_OXM      = 1 << 7,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF14_UP	lib/ofp-util.h	130;"	d
OFPUTIL_P_OF15_OXM	lib/ofp-util.h	/^    OFPUTIL_P_OF15_OXM      = 1 << 8,$/;"	e	enum:ofputil_protocol
OFPUTIL_P_OF15_UP	lib/ofp-util.h	131;"	d
OFPUTIL_P_TID	lib/ofp-util.h	137;"	d
OFPUTIL_SUPPORTED_VERSIONS	lib/ofp-util.h	184;"	d
OFPUTIL_TABLE_EVICTION_DEFAULT	lib/ofp-util.h	/^    OFPUTIL_TABLE_EVICTION_DEFAULT, \/* No value. *\/$/;"	e	enum:ofputil_table_eviction
OFPUTIL_TABLE_EVICTION_OFF	lib/ofp-util.h	/^    OFPUTIL_TABLE_EVICTION_OFF      \/* Disable eviction. *\/$/;"	e	enum:ofputil_table_eviction
OFPUTIL_TABLE_EVICTION_ON	lib/ofp-util.h	/^    OFPUTIL_TABLE_EVICTION_ON,      \/* Enable eviction. *\/$/;"	e	enum:ofputil_table_eviction
OFPUTIL_TABLE_MISS_CONTINUE	lib/ofp-util.h	/^    OFPUTIL_TABLE_MISS_CONTINUE,   \/* Go to next table. *\/$/;"	e	enum:ofputil_table_miss
OFPUTIL_TABLE_MISS_CONTROLLER	lib/ofp-util.h	/^    OFPUTIL_TABLE_MISS_CONTROLLER, \/* Send to controller. *\/$/;"	e	enum:ofputil_table_miss
OFPUTIL_TABLE_MISS_DEFAULT	lib/ofp-util.h	/^    OFPUTIL_TABLE_MISS_DEFAULT,    \/* Protocol default behavior. *\/$/;"	e	enum:ofputil_table_miss
OFPUTIL_TABLE_MISS_DROP	lib/ofp-util.h	/^    OFPUTIL_TABLE_MISS_DROP,       \/* Drop the packet. *\/$/;"	e	enum:ofputil_table_miss
OFPVID11_ANY	include/openflow/openflow-1.1.h	/^    OFPVID11_ANY = 0xfffe,  \/* Indicate that a VLAN id is set but don't care$/;"	e	enum:ofp11_vlan_id
OFPVID11_NONE	include/openflow/openflow-1.1.h	/^    OFPVID11_NONE = 0xffff, \/* No VLAN id was set. *\/$/;"	e	enum:ofp11_vlan_id
OFPVID12_NONE	include/openflow/openflow-1.2.h	/^    OFPVID12_NONE    = 0x0000, \/* No VLAN id was set. *\/$/;"	e	enum:ofp12_vlan_id
OFPVID12_PRESENT	include/openflow/openflow-1.2.h	/^    OFPVID12_PRESENT = 0x1000, \/* Bit that indicate that a VLAN id is set *\/$/;"	e	enum:ofp12_vlan_id
OFPXMC12_EXPERIMENTER	lib/nx-match.c	/^    OFPXMC12_EXPERIMENTER   = 0xffff, \/* Experimenter class *\/$/;"	e	enum:ofp12_oxm_class	file:
OFPXMC12_NXM_0	lib/nx-match.c	/^    OFPXMC12_NXM_0          = 0x0000, \/* Backward compatibility with NXM *\/$/;"	e	enum:ofp12_oxm_class	file:
OFPXMC12_NXM_1	lib/nx-match.c	/^    OFPXMC12_NXM_1          = 0x0001, \/* Backward compatibility with NXM *\/$/;"	e	enum:ofp12_oxm_class	file:
OFPXMC12_OPENFLOW_BASIC	lib/nx-match.c	/^    OFPXMC12_OPENFLOW_BASIC = 0x8000, \/* Basic class for OpenFlow *\/$/;"	e	enum:ofp12_oxm_class	file:
OFPXMC15_PACKET_REGS	lib/nx-match.c	/^    OFPXMC15_PACKET_REGS    = 0x8001, \/* Packet registers (pipeline fields). *\/$/;"	e	enum:ofp12_oxm_class	file:
OFP_ACTIONS_H	lib/ofp-actions.h	18;"	d
OFP_ACTION_ALIGN	build-aux/extract-ofp-actions	/^OFP_ACTION_ALIGN = 8$/;"	v
OFP_ACTION_ALIGN	lib/ofp-actions.c	310;"	d	file:
OFP_ASSERT	include/openflow/openflow-common.h	56;"	d
OFP_ASSERT	include/openflow/openflow-common.h	59;"	d
OFP_ASSERT	include/openflow/openflow-common.h	64;"	d
OFP_ASYNC_CONFIG_REASON_BUFSIZE	lib/ofp-print.c	2008;"	d	file:
OFP_DEFAULT_MISS_SEND_LEN	include/openflow/openflow-common.h	117;"	d
OFP_DEFAULT_PRIORITY	include/openflow/openflow-common.h	135;"	d
OFP_DL_TYPE_ETH2_CUTOFF	include/openflow/openflow-common.h	123;"	d
OFP_DL_TYPE_NOT_ETH_TYPE	include/openflow/openflow-common.h	128;"	d
OFP_ERRORS_H	lib/ofp-errors.h	18;"	d
OFP_FLOW_PERMANENT	include/openflow/openflow-common.h	132;"	d
OFP_FLOW_REMOVED_REASON_BUFSIZE	lib/ofp-print.c	847;"	d	file:
OFP_MAX_PORT_NAME_LEN	include/openflow/openflow-common.h	112;"	d
OFP_MAX_TABLE_NAME_LEN	include/openflow/openflow-common.h	111;"	d
OFP_MSGS_H	lib/ofp-msgs.h	18;"	d
OFP_OLD_PORT	include/openflow/openflow-common.h	114;"	d
OFP_PARSE_H	lib/ofp-parse.h	20;"	d
OFP_PORT	include/openflow/openflow-common.h	115;"	d
OFP_PORT_C	include/openvswitch/types.h	119;"	d
OFP_PORT_REASON_BUFSIZE	lib/ofp-print.c	1893;"	d	file:
OFP_PRINT_H	lib/ofp-print.h	20;"	d
OFP_UTIL_H	lib/ofp-util.h	18;"	d
OFP_VERSION_H	lib/ofp-version-opt.h	2;"	d
OFP_VERSION_LONG_OPTIONS	lib/ofp-version-opt.h	8;"	d
OFP_VERSION_OPTION_HANDLERS	lib/ofp-version-opt.h	12;"	d
OFTABLE_DROP_LOOPBACK	ovn/controller/lflow.h	51;"	d
OFTABLE_HIDDEN	ofproto/ofproto-provider.h	/^    OFTABLE_HIDDEN = 1 << 0,   \/* Hide from most OpenFlow operations. *\/$/;"	e	enum:oftable_flags
OFTABLE_LOCAL_OUTPUT	ovn/controller/lflow.h	50;"	d
OFTABLE_LOG_EGRESS_PIPELINE	ovn/controller/lflow.h	52;"	d
OFTABLE_LOG_INGRESS_PIPELINE	ovn/controller/lflow.h	48;"	d
OFTABLE_LOG_TO_PHY	ovn/controller/lflow.h	53;"	d
OFTABLE_PHY_TO_LOG	ovn/controller/lflow.h	47;"	d
OFTABLE_READONLY	ofproto/ofproto-provider.h	/^    OFTABLE_READONLY = 1 << 1  \/* Don't allow OpenFlow controller to change$/;"	e	enum:oftable_flags
OFTABLE_REMOTE_OUTPUT	ovn/controller/lflow.h	49;"	d
OF_VENDOR_ID	include/openflow/openflow-common.h	104;"	d
OIC_BANG	datapath-windows/ovsext/resource.h	1479;"	d
OIC_HAND	datapath-windows/ovsext/resource.h	1473;"	d
OIC_NOTE	datapath-windows/ovsext/resource.h	1482;"	d
OIC_QUES	datapath-windows/ovsext/resource.h	1476;"	d
OIC_SAMPLE	datapath-windows/ovsext/resource.h	1470;"	d
OIC_SHIELD	datapath-windows/ovsext/resource.h	1486;"	d
OIC_WINLOGO	datapath-windows/ovsext/resource.h	1484;"	d
OJMS_DELETE	ovsdb/monitor.h	/^    OJMS_DELETE = 1 << 2,       \/* Deleted rows. *\/$/;"	e	enum:ovsdb_monitor_selection
OJMS_INITIAL	ovsdb/monitor.h	/^    OJMS_INITIAL = 1 << 0,      \/* All rows when monitor is created. *\/$/;"	e	enum:ovsdb_monitor_selection
OJMS_INSERT	ovsdb/monitor.h	/^    OJMS_INSERT = 1 << 1,       \/* New rows. *\/$/;"	e	enum:ovsdb_monitor_selection
OJMS_MODIFY	ovsdb/monitor.h	/^    OJMS_MODIFY = 1 << 3        \/* Modified rows. *\/$/;"	e	enum:ovsdb_monitor_selection
OMIT_STANDARD_ATOMIC_TYPES	lib/ovs-atomic-c11.h	25;"	d
ONFACT_RAW13_COPY_FIELD	lib/ofp-actions.c	/^    ONFACT_RAW13_COPY_FIELD,$/;"	e	enum:ofp_raw_action_type	file:
ONF_VENDOR_ID	build-aux/extract-ofp-msgs	/^ONF_VENDOR_ID = 0x4f4e4600$/;"	v
ONF_VENDOR_ID	include/openflow/openflow-common.h	109;"	d
OPENFLOWPORT	tests/test-sflow.c	/^	uint32_t OPENFLOWPORT;$/;"	m	struct:sflow_xdr::__anon230	file:
OPENFLOW_11_H	include/openflow/openflow-1.1.h	53;"	d
OPENFLOW_12_H	include/openflow/openflow-1.2.h	54;"	d
OPENFLOW_13_H	include/openflow/openflow-1.3.h	38;"	d
OPENFLOW_14_H	include/openflow/openflow-1.4.h	38;"	d
OPENFLOW_15_H	include/openflow/openflow-1.5.h	38;"	d
OPENFLOW_COMMON_H	include/openflow/openflow-common.h	51;"	d
OPENFLOW_NETRONOME_EXT_H	include/openflow/netronome-ext.h	18;"	d
OPENFLOW_NICIRA_EXT_H	include/openflow/nicira-ext.h	18;"	d
OPENFLOW_OPENFLOW10_H	include/openflow/openflow-1.0.h	20;"	d
OPENFLOW_OPENFLOW_H	include/openflow/openflow.h	18;"	d
OPENVSWITCH_COMPACT_DB	utilities/bugtool/ovs-bugtool	/^OPENVSWITCH_COMPACT_DB = '\/usr\/local\/etc\/openvswitch\/bugtool-compact-conf.db'$/;"	v
OPENVSWITCH_COMPILER_H	include/openvswitch/compiler.h	18;"	d
OPENVSWITCH_CONF_DB	utilities/bugtool/ovs-bugtool	/^OPENVSWITCH_CONF_DB = '\/usr\/local\/etc\/openvswitch\/conf.db'$/;"	v
OPENVSWITCH_DEFAULT_SWITCH	utilities/bugtool/ovs-bugtool	/^OPENVSWITCH_DEFAULT_SWITCH = '\/etc\/default\/openvswitch-switch' # Debian$/;"	v
OPENVSWITCH_LIST_H	include/openvswitch/list.h	17;"	d
OPENVSWITCH_LOG_DIR	utilities/bugtool/ovs-bugtool	/^OPENVSWITCH_LOG_DIR = '\/usr\/local\/var\/log\/openvswitch\/'$/;"	v
OPENVSWITCH_SYSCONFIG_SWITCH	utilities/bugtool/ovs-bugtool	/^OPENVSWITCH_SYSCONFIG_SWITCH = '\/etc\/sysconfig\/openvswitch'    # RHEL$/;"	v
OPENVSWITCH_THREAD_H	include/openvswitch/thread.h	18;"	d
OPENVSWITCH_TOKEN_BUCKET_H	include/openvswitch/token-bucket.h	18;"	d
OPENVSWITCH_TYPES_H	include/openvswitch/types.h	18;"	d
OPENVSWITCH_UTIL_H	include/openvswitch/util.h	18;"	d
OPENVSWITCH_VCONN_H	include/openvswitch/vconn.h	18;"	d
OPENVSWITCH_VERSION_H	include/openvswitch/version.h	19;"	d
OPENVSWITCH_VLOG_H	include/openvswitch/vlog.h	18;"	d
OPENVSWITCH_VSWITCHD_PID	utilities/bugtool/ovs-bugtool	/^OPENVSWITCH_VSWITCHD_PID = '\/usr\/local\/var\/run\/openvswitch\/ovs-vswitchd.pid'$/;"	v
OP_ANY	lib/ovsdb-parser.h	/^    OP_ANY = (OP_NULL | OP_FALSE | OP_TRUE | OP_OBJECT | OP_ARRAY$/;"	e	enum:ovsdb_parser_types
OP_ARRAY	lib/ovsdb-parser.h	/^    OP_ARRAY = 1 << JSON_ARRAY,           \/* [1, 2, 3, ...] *\/$/;"	e	enum:ovsdb_parser_types
OP_BOOLEAN	lib/ovsdb-parser.h	/^    OP_BOOLEAN = OP_FALSE | OP_TRUE,$/;"	e	enum:ovsdb_parser_types
OP_CONVERT	tests/test-ovn.c	/^static enum { OP_CONVERT, OP_SIMPLIFY, OP_NORMALIZE, OP_FLOW } operation$/;"	e	enum:__anon227	file:
OP_FALSE	lib/ovsdb-parser.h	/^    OP_FALSE = 1 << JSON_FALSE,           \/* false *\/$/;"	e	enum:ovsdb_parser_types
OP_FLOW	tests/test-ovn.c	/^static enum { OP_CONVERT, OP_SIMPLIFY, OP_NORMALIZE, OP_FLOW } operation$/;"	e	enum:__anon227	file:
OP_ID	lib/ovsdb-parser.h	/^    OP_ID = 1 << JSON_N_TYPES,            \/* "[_a-zA-Z][_a-zA-Z0-9]*" *\/$/;"	e	enum:ovsdb_parser_types
OP_INTEGER	lib/ovsdb-parser.h	/^    OP_INTEGER = 1 << JSON_INTEGER,       \/* 123. *\/$/;"	e	enum:ovsdb_parser_types
OP_NONINTEGER	lib/ovsdb-parser.h	/^    OP_NONINTEGER = 1 << JSON_REAL,       \/* 123.456. *\/$/;"	e	enum:ovsdb_parser_types
OP_NORMALIZE	tests/test-ovn.c	/^static enum { OP_CONVERT, OP_SIMPLIFY, OP_NORMALIZE, OP_FLOW } operation$/;"	e	enum:__anon227	file:
OP_NULL	lib/ovsdb-parser.h	/^    OP_NULL = 1 << JSON_NULL,             \/* null *\/$/;"	e	enum:ovsdb_parser_types
OP_NUMBER	lib/ovsdb-parser.h	/^    OP_NUMBER = OP_INTEGER | OP_NONINTEGER,$/;"	e	enum:ovsdb_parser_types
OP_OBJECT	lib/ovsdb-parser.h	/^    OP_OBJECT = 1 << JSON_OBJECT,         \/* {"a": b, "c": d, ...} *\/$/;"	e	enum:ovsdb_parser_types
OP_OPTIONAL	lib/ovsdb-parser.h	/^    OP_OPTIONAL = 1 << (JSON_N_TYPES + 1) \/* no value at all *\/$/;"	e	enum:ovsdb_parser_types
OP_SIMPLIFY	tests/test-ovn.c	/^static enum { OP_CONVERT, OP_SIMPLIFY, OP_NORMALIZE, OP_FLOW } operation$/;"	e	enum:__anon227	file:
OP_STRING	lib/ovsdb-parser.h	/^    OP_STRING = 1 << JSON_STRING,         \/* "..." *\/$/;"	e	enum:ovsdb_parser_types
OP_TRUE	lib/ovsdb-parser.h	/^    OP_TRUE = 1 << JSON_TRUE,             \/* true *\/$/;"	e	enum:ovsdb_parser_types
OS_RELEASE	utilities/bugtool/ovs-bugtool	/^OS_RELEASE = platform.release()$/;"	v
OTHER_INFO	lib/rstp-common.h	/^    OTHER_INFO$/;"	e	enum:rstp_rcvd_info
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL	datapath/Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OTOOL64	datapath/Makefile	/^OTOOL64 = $/;"	m
OUTER	build-aux/sodepends.pl	/^  OUTER:$/;"	l
OUTER	build-aux/soexpand.pl	/^OUTER: while (<STDIN>) {$/;"	l
OUTPUT_FORMAT	utilities/ovs-dpctl-top	/^OUTPUT_FORMAT = [$/;"	v
OVERWRITE_MSECS	ofproto/pktbuf.c	48;"	d	file:
OVN_ACL_PRI_OFFSET	ovn/northd/ovn-northd.c	118;"	d	file:
OVN_ACTIONS_H	ovn/lib/actions.h	18;"	d
OVN_BINDING_H	ovn/controller-vtep/binding.h	18;"	d
OVN_BINDING_H	ovn/controller/binding.h	18;"	d
OVN_CHASSIS_H	ovn/controller/chassis.h	17;"	d
OVN_CONTROLLER_H	ovn/controller/ovn-controller.h	18;"	d
OVN_CONTROLLER_VTEP_H	ovn/controller-vtep/ovn-controller-vtep.h	18;"	d
OVN_ENCAPS_H	ovn/controller/encaps.h	17;"	d
OVN_EXPR_H	ovn/lib/expr.h	18;"	d
OVN_GATEWAY_H	ovn/controller-vtep/gateway.h	17;"	d
OVN_GENEVE_CLASS	ovn/controller/physical.h	41;"	d
OVN_GENEVE_LEN	ovn/controller/physical.h	43;"	d
OVN_GENEVE_TYPE	ovn/controller/physical.h	42;"	d
OVN_LEX_H	ovn/lib/lex.h	18;"	d
OVN_LFLOW_H	ovn/controller/lflow.h	17;"	d
OVN_LOGICAL_FIELDS_H	ovn/lib/logical-fields.h	17;"	d
OVN_MAX_MULTICAST	ovn/northd/ovn-northd.c	737;"	d	file:
OVN_MIN_MULTICAST	ovn/northd/ovn-northd.c	736;"	d	file:
OVN_NB_DOT_DIAGRAM_ARG	Makefile	/^OVN_NB_DOT_DIAGRAM_ARG = --er-diagram=$(OVN_NB_PIC)$/;"	m
OVN_NB_DOT_DIAGRAM_ARG	ovn/automake.mk	/^OVN_NB_DOT_DIAGRAM_ARG = --er-diagram=$(OVN_NB_PIC)$/;"	m
OVN_NB_IDL_FILES	Makefile	/^OVN_NB_IDL_FILES = \\$/;"	m
OVN_NB_IDL_FILES	ovn/lib/automake.mk	/^OVN_NB_IDL_FILES = \\$/;"	m
OVN_NB_PIC	Makefile	/^OVN_NB_PIC = ovn\/ovn-nb.pic$/;"	m
OVN_NB_PIC	ovn/automake.mk	/^OVN_NB_PIC = ovn\/ovn-nb.pic$/;"	m
OVN_PATCH_H	ovn/controller/patch.h	17;"	d
OVN_PHYSICAL_H	ovn/controller/physical.h	17;"	d
OVN_SB_DOT_DIAGRAM_ARG	Makefile	/^OVN_SB_DOT_DIAGRAM_ARG = --er-diagram=$(OVN_SB_PIC)$/;"	m
OVN_SB_DOT_DIAGRAM_ARG	ovn/automake.mk	/^OVN_SB_DOT_DIAGRAM_ARG = --er-diagram=$(OVN_SB_PIC)$/;"	m
OVN_SB_ENCAP_TYPE	ovn/controller-vtep/ovn-controller-vtep.h	34;"	d
OVN_SB_IDL_FILES	Makefile	/^OVN_SB_IDL_FILES = \\$/;"	m
OVN_SB_IDL_FILES	ovn/lib/automake.mk	/^OVN_SB_IDL_FILES = \\$/;"	m
OVN_SB_PIC	Makefile	/^OVN_SB_PIC = ovn\/ovn-sb.pic$/;"	m
OVN_SB_PIC	ovn/automake.mk	/^OVN_SB_PIC = ovn\/ovn-sb.pic$/;"	m
OVN_STAGE_BUILD	ovn/northd/ovn-northd.c	75;"	d	file:
OVN_VTEP_H	ovn/controller-vtep/vtep.h	18;"	d
OVSDB_BASE_BOOLEAN_INIT	lib/ovsdb-types.h	90;"	d
OVSDB_BASE_INTEGER_INIT	lib/ovsdb-types.h	86;"	d
OVSDB_BASE_REAL_INIT	lib/ovsdb-types.h	88;"	d
OVSDB_BASE_STRING_INIT	lib/ovsdb-types.h	91;"	d
OVSDB_BASE_UUID_INIT	lib/ovsdb-types.h	93;"	d
OVSDB_BASE_VOID_INIT	lib/ovsdb-types.h	85;"	d
OVSDB_BUG	lib/ovsdb-error.h	47;"	d
OVSDB_CHANGES_NO_EFFECT	ovsdb/monitor.c	/^    OVSDB_CHANGES_NO_EFFECT,                \/* Monitor does not care about this$/;"	e	enum:ovsdb_monitor_changes_efficacy	file:
OVSDB_CHANGES_REQUIRE_EXTERNAL_UPDATE	ovsdb/monitor.c	/^    OVSDB_CHANGES_REQUIRE_EXTERNAL_UPDATE,  \/* Client needs to be updated.  *\/$/;"	e	enum:ovsdb_monitor_changes_efficacy	file:
OVSDB_CHANGES_REQUIRE_INTERNAL_UPDATE	ovsdb/monitor.c	/^    OVSDB_CHANGES_REQUIRE_INTERNAL_UPDATE,  \/* Monitor internal updates. *\/$/;"	e	enum:ovsdb_monitor_changes_efficacy	file:
OVSDB_COLUMN_H	ovsdb/column.h	17;"	d
OVSDB_COLUMN_SET_INITIALIZER	ovsdb/column.h	66;"	d
OVSDB_COL_UUID	ovsdb/column.h	/^    OVSDB_COL_UUID = 0,         \/* UUID for the row. *\/$/;"	e	enum:__anon223
OVSDB_COL_VERSION	ovsdb/column.h	/^    OVSDB_COL_VERSION = 1,      \/* Version number for the row. *\/$/;"	e	enum:__anon223
OVSDB_CONDITION_H	ovsdb/condition.h	17;"	d
OVSDB_CONDITION_INITIALIZER	ovsdb/condition.h	61;"	d
OVSDB_DATA_H	lib/ovsdb-data.h	17;"	d
OVSDB_DOC	Makefile	/^OVSDB_DOC = $(run_python) $(srcdir)\/ovsdb\/ovsdb-doc$/;"	m
OVSDB_DOC	ovsdb/automake.mk	/^OVSDB_DOC = $(run_python) $(srcdir)\/ovsdb\/ovsdb-doc$/;"	m
OVSDB_DOT	Makefile	/^OVSDB_DOT = $(run_python) $(srcdir)\/ovsdb\/ovsdb-dot.in$/;"	m
OVSDB_DOT	ovsdb/automake.mk	/^OVSDB_DOT = $(run_python) $(srcdir)\/ovsdb\/ovsdb-dot.in$/;"	m
OVSDB_ERROR_H	lib/ovsdb-error.h	17;"	d
OVSDB_FILE_H	ovsdb/file.h	17;"	d
OVSDB_FUNCTION	ovsdb/condition.c	31;"	d	file:
OVSDB_FUNCTION	ovsdb/condition.c	37;"	d	file:
OVSDB_FUNCTION	ovsdb/condition.c	47;"	d	file:
OVSDB_FUNCTION	ovsdb/condition.c	49;"	d	file:
OVSDB_FUNCTION	ovsdb/condition.h	40;"	d
OVSDB_FUNCTION	ovsdb/condition.h	42;"	d
OVSDB_FUNCTIONS	ovsdb/condition.h	/^    OVSDB_FUNCTIONS$/;"	e	enum:ovsdb_function
OVSDB_FUNCTIONS	ovsdb/condition.h	29;"	d
OVSDB_IDLC	Makefile	/^OVSDB_IDLC = $(run_python) $(srcdir)\/ovsdb\/ovsdb-idlc.in$/;"	m
OVSDB_IDLC	ovsdb/automake.mk	/^OVSDB_IDLC = $(run_python) $(srcdir)\/ovsdb\/ovsdb-idlc.in$/;"	m
OVSDB_IDL_ALERT	lib/ovsdb-idl.h	98;"	d
OVSDB_IDL_H	lib/ovsdb-idl.h	17;"	d
OVSDB_IDL_LOOP_INITIALIZER	lib/ovsdb-idl.h	240;"	d
OVSDB_IDL_MONITOR	lib/ovsdb-idl.h	97;"	d
OVSDB_IDL_PROVIDER_H	lib/ovsdb-idl-provider.h	17;"	d
OVSDB_JSONRPC_SERVER_H	ovsdb/jsonrpc-server.h	17;"	d
OVSDB_LOCK_STEAL	ovsdb/server.h	/^    OVSDB_LOCK_STEAL            \/* By stealing it from the owner. *\/$/;"	e	enum:ovsdb_lock_mode
OVSDB_LOCK_WAIT	ovsdb/server.h	/^    OVSDB_LOCK_WAIT,            \/* By waiting for it to become available. *\/$/;"	e	enum:ovsdb_lock_mode
OVSDB_LOG_CREATE	ovsdb/log.h	/^    OVSDB_LOG_CREATE            \/* Create new file, read\/write. *\/$/;"	e	enum:ovsdb_log_open_mode
OVSDB_LOG_H	ovsdb/log.h	17;"	d
OVSDB_LOG_READ	ovsdb/log.c	/^    OVSDB_LOG_READ,$/;"	e	enum:ovsdb_log_mode	file:
OVSDB_LOG_READ_ONLY	ovsdb/log.h	/^    OVSDB_LOG_READ_ONLY,        \/* Open existing file, read-only. *\/$/;"	e	enum:ovsdb_log_open_mode
OVSDB_LOG_READ_WRITE	ovsdb/log.h	/^    OVSDB_LOG_READ_WRITE,       \/* Open existing file, read\/write. *\/$/;"	e	enum:ovsdb_log_open_mode
OVSDB_LOG_WRITE	ovsdb/log.c	/^    OVSDB_LOG_WRITE$/;"	e	enum:ovsdb_log_mode	file:
OVSDB_MONITOR_H	ovsdb/monitor.h	18;"	d
OVSDB_MUTATION_H	ovsdb/mutation.h	17;"	d
OVSDB_MUTATION_SET_INITIALIZER	ovsdb/mutation.h	61;"	d
OVSDB_MUTATOR	ovsdb/mutation.c	32;"	d	file:
OVSDB_MUTATOR	ovsdb/mutation.c	38;"	d	file:
OVSDB_MUTATOR	ovsdb/mutation.c	48;"	d	file:
OVSDB_MUTATOR	ovsdb/mutation.c	50;"	d	file:
OVSDB_MUTATOR	ovsdb/mutation.h	39;"	d
OVSDB_MUTATOR	ovsdb/mutation.h	41;"	d
OVSDB_MUTATORS	ovsdb/mutation.h	/^    OVSDB_MUTATORS$/;"	e	enum:ovsdb_mutator
OVSDB_MUTATORS	ovsdb/mutation.h	29;"	d
OVSDB_N_STD_COLUMNS	ovsdb/column.h	/^    OVSDB_N_STD_COLUMNS$/;"	e	enum:__anon223
OVSDB_N_TYPES	lib/ovsdb-types.h	/^    OVSDB_N_TYPES$/;"	e	enum:ovsdb_atomic_type
OVSDB_OLD_PORT	lib/jsonrpc.h	39;"	d
OVSDB_OVSDB_H	ovsdb/ovsdb.h	17;"	d
OVSDB_PARSER_H	lib/ovsdb-parser.h	17;"	d
OVSDB_PORT	lib/jsonrpc.h	40;"	d
OVSDB_QUERY_H	ovsdb/query.h	17;"	d
OVSDB_REF_STRONG	lib/ovsdb-types.h	/^    OVSDB_REF_STRONG,           \/* Target must exist. *\/$/;"	e	enum:ovsdb_ref_type
OVSDB_REF_WEAK	lib/ovsdb-types.h	/^    OVSDB_REF_WEAK              \/* Delete reference if target disappears. *\/$/;"	e	enum:ovsdb_ref_type
OVSDB_ROW_H	ovsdb/row.h	17;"	d
OVSDB_ROW_HASH_INITIALIZER	ovsdb/row.h	153;"	d
OVSDB_ROW_SET_INITIALIZER	ovsdb/row.h	131;"	d
OVSDB_TABLE_H	ovsdb/table.h	17;"	d
OVSDB_TRANSACTION_H	ovsdb/transaction.h	17;"	d
OVSDB_TRIGGER_H	ovsdb/trigger.h	17;"	d
OVSDB_TYPES_H	lib/ovsdb-types.h	17;"	d
OVSDB_TYPE_BOOLEAN	lib/ovsdb-types.h	/^    OVSDB_TYPE_BOOLEAN,         \/* True or false. *\/$/;"	e	enum:ovsdb_atomic_type
OVSDB_TYPE_INTEGER	lib/ovsdb-types.h	/^    OVSDB_TYPE_INTEGER,         \/* Signed 64-bit integer. *\/$/;"	e	enum:ovsdb_atomic_type
OVSDB_TYPE_REAL	lib/ovsdb-types.h	/^    OVSDB_TYPE_REAL,            \/* IEEE 754 double-precision floating point. *\/$/;"	e	enum:ovsdb_atomic_type
OVSDB_TYPE_SCALAR_INITIALIZER	lib/ovsdb-types.h	140;"	d
OVSDB_TYPE_STRING	lib/ovsdb-types.h	/^    OVSDB_TYPE_STRING,          \/* UTF-8 string. *\/$/;"	e	enum:ovsdb_atomic_type
OVSDB_TYPE_UUID	lib/ovsdb-types.h	/^    OVSDB_TYPE_UUID,            \/* RFC 4122 UUID referencing a table row. *\/$/;"	e	enum:ovsdb_atomic_type
OVSDB_TYPE_VOID	lib/ovsdb-types.h	/^    OVSDB_TYPE_VOID,            \/* No value. *\/$/;"	e	enum:ovsdb_atomic_type
OVSDB_WRAP_BUG	lib/ovsdb-error.h	55;"	d
OVSFTPHandler	tests/test-l7.py	/^        class OVSFTPHandler(FTPHandler):$/;"	c	function:get_ftpd
OVSIDL_BUILT	Makefile	/^OVSIDL_BUILT = lib\/vswitch-idl.c lib\/vswitch-idl.h \\$/;"	m
OVSP_LOCAL	datapath/linux/compat/include/linux/openvswitch.h	146;"	d
OVSP_LOCAL	include/odp-netlink.h	151;"	d
OVSRCU_INITIALIZER	lib/ovs-rcu.h	135;"	d
OVSRCU_INITIALIZER	lib/ovs-rcu.h	167;"	d
OVSRCU_TYPE	lib/ovs-rcu.h	134;"	d
OVSRCU_TYPE	lib/ovs-rcu.h	166;"	d
OVSREC_AUTOATTACH_COL_MAPPINGS	lib/vswitch-idl.h	/^    OVSREC_AUTOATTACH_COL_MAPPINGS,$/;"	e	enum:__anon165
OVSREC_AUTOATTACH_COL_SYSTEM_DESCRIPTION	lib/vswitch-idl.h	/^    OVSREC_AUTOATTACH_COL_SYSTEM_DESCRIPTION,$/;"	e	enum:__anon165
OVSREC_AUTOATTACH_COL_SYSTEM_NAME	lib/vswitch-idl.h	/^    OVSREC_AUTOATTACH_COL_SYSTEM_NAME,$/;"	e	enum:__anon165
OVSREC_AUTOATTACH_FOR_EACH	lib/vswitch-idl.h	46;"	d
OVSREC_AUTOATTACH_FOR_EACH_SAFE	lib/vswitch-idl.h	50;"	d
OVSREC_AUTOATTACH_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_AUTOATTACH_N_COLUMNS$/;"	e	enum:__anon165
OVSREC_BRIDGE_COL_AUTO_ATTACH	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_AUTO_ATTACH,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_CONTROLLER	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_CONTROLLER,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_DATAPATH_ID	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_DATAPATH_ID,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_DATAPATH_TYPE	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_DATAPATH_TYPE,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_DATAPATH_VERSION	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_DATAPATH_VERSION,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_EXTERNAL_IDS,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_FAIL_MODE	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_FAIL_MODE,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_FLOOD_VLANS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_FLOOD_VLANS,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_FLOW_TABLES	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_FLOW_TABLES,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_IPFIX	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_IPFIX,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_MCAST_SNOOPING_ENABLE	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_MCAST_SNOOPING_ENABLE,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_MIRRORS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_MIRRORS,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_NAME	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_NAME,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_NETFLOW	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_NETFLOW,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_OTHER_CONFIG,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_PORTS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_PORTS,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_PROTOCOLS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_PROTOCOLS,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_RSTP_ENABLE	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_RSTP_ENABLE,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_RSTP_STATUS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_RSTP_STATUS,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_SFLOW	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_SFLOW,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_STATUS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_STATUS,$/;"	e	enum:__anon166
OVSREC_BRIDGE_COL_STP_ENABLE	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_COL_STP_ENABLE,$/;"	e	enum:__anon166
OVSREC_BRIDGE_FOR_EACH	lib/vswitch-idl.h	204;"	d
OVSREC_BRIDGE_FOR_EACH_SAFE	lib/vswitch-idl.h	208;"	d
OVSREC_BRIDGE_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_BRIDGE_N_COLUMNS$/;"	e	enum:__anon166
OVSREC_CONTROLLER_COL_CONNECTION_MODE	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_CONNECTION_MODE,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_CONTROLLER_BURST_LIMIT	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_CONTROLLER_BURST_LIMIT,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_CONTROLLER_RATE_LIMIT	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_CONTROLLER_RATE_LIMIT,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_ENABLE_ASYNC_MESSAGES	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_ENABLE_ASYNC_MESSAGES,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_EXTERNAL_IDS,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_INACTIVITY_PROBE	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_INACTIVITY_PROBE,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_IS_CONNECTED	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_IS_CONNECTED,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_LOCAL_GATEWAY	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_LOCAL_GATEWAY,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_LOCAL_IP	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_LOCAL_IP,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_LOCAL_NETMASK	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_LOCAL_NETMASK,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_MAX_BACKOFF	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_MAX_BACKOFF,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_OTHER_CONFIG,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_ROLE	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_ROLE,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_STATUS	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_STATUS,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_COL_TARGET	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_COL_TARGET,$/;"	e	enum:__anon167
OVSREC_CONTROLLER_FOR_EACH	lib/vswitch-idl.h	382;"	d
OVSREC_CONTROLLER_FOR_EACH_SAFE	lib/vswitch-idl.h	386;"	d
OVSREC_CONTROLLER_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_CONTROLLER_N_COLUMNS$/;"	e	enum:__anon167
OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_BRIDGE	lib/vswitch-idl.h	/^    OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_BRIDGE,$/;"	e	enum:__anon168
OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_EXTERNAL_IDS,$/;"	e	enum:__anon168
OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_ID	lib/vswitch-idl.h	/^    OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_ID,$/;"	e	enum:__anon168
OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_IPFIX	lib/vswitch-idl.h	/^    OVSREC_FLOW_SAMPLE_COLLECTOR_SET_COL_IPFIX,$/;"	e	enum:__anon168
OVSREC_FLOW_SAMPLE_COLLECTOR_SET_FOR_EACH	lib/vswitch-idl.h	479;"	d
OVSREC_FLOW_SAMPLE_COLLECTOR_SET_FOR_EACH_SAFE	lib/vswitch-idl.h	483;"	d
OVSREC_FLOW_SAMPLE_COLLECTOR_SET_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_FLOW_SAMPLE_COLLECTOR_SET_N_COLUMNS$/;"	e	enum:__anon168
OVSREC_FLOW_TABLE_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_FLOW_TABLE_COL_EXTERNAL_IDS,$/;"	e	enum:__anon169
OVSREC_FLOW_TABLE_COL_FLOW_LIMIT	lib/vswitch-idl.h	/^    OVSREC_FLOW_TABLE_COL_FLOW_LIMIT,$/;"	e	enum:__anon169
OVSREC_FLOW_TABLE_COL_GROUPS	lib/vswitch-idl.h	/^    OVSREC_FLOW_TABLE_COL_GROUPS,$/;"	e	enum:__anon169
OVSREC_FLOW_TABLE_COL_NAME	lib/vswitch-idl.h	/^    OVSREC_FLOW_TABLE_COL_NAME,$/;"	e	enum:__anon169
OVSREC_FLOW_TABLE_COL_OVERFLOW_POLICY	lib/vswitch-idl.h	/^    OVSREC_FLOW_TABLE_COL_OVERFLOW_POLICY,$/;"	e	enum:__anon169
OVSREC_FLOW_TABLE_COL_PREFIXES	lib/vswitch-idl.h	/^    OVSREC_FLOW_TABLE_COL_PREFIXES,$/;"	e	enum:__anon169
OVSREC_FLOW_TABLE_FOR_EACH	lib/vswitch-idl.h	556;"	d
OVSREC_FLOW_TABLE_FOR_EACH_SAFE	lib/vswitch-idl.h	560;"	d
OVSREC_FLOW_TABLE_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_FLOW_TABLE_N_COLUMNS$/;"	e	enum:__anon169
OVSREC_IDL_HEADER	lib/vswitch-idl.h	4;"	d
OVSREC_INTERFACE_COL_ADMIN_STATE	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_ADMIN_STATE,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_BFD	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_BFD,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_BFD_STATUS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_BFD_STATUS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_CFM_FAULT	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_CFM_FAULT,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_CFM_FAULT_STATUS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_CFM_FAULT_STATUS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_CFM_FLAP_COUNT	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_CFM_FLAP_COUNT,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_CFM_HEALTH	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_CFM_HEALTH,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_CFM_MPID	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_CFM_MPID,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_CFM_REMOTE_MPIDS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_CFM_REMOTE_MPIDS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_CFM_REMOTE_OPSTATE	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_CFM_REMOTE_OPSTATE,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_DUPLEX	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_DUPLEX,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_ERROR	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_ERROR,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_EXTERNAL_IDS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_IFINDEX	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_IFINDEX,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_INGRESS_POLICING_BURST	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_INGRESS_POLICING_BURST,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_INGRESS_POLICING_RATE	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_INGRESS_POLICING_RATE,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_LACP_CURRENT	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_LACP_CURRENT,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_LINK_RESETS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_LINK_RESETS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_LINK_SPEED	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_LINK_SPEED,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_LINK_STATE	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_LINK_STATE,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_LLDP	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_LLDP,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_MAC	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_MAC,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_MAC_IN_USE	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_MAC_IN_USE,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_MTU	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_MTU,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_NAME	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_NAME,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_OFPORT	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_OFPORT,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_OFPORT_REQUEST	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_OFPORT_REQUEST,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_OPTIONS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_OPTIONS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_OTHER_CONFIG,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_STATISTICS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_STATISTICS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_STATUS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_STATUS,$/;"	e	enum:__anon171
OVSREC_INTERFACE_COL_TYPE	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_COL_TYPE,$/;"	e	enum:__anon171
OVSREC_INTERFACE_FOR_EACH	lib/vswitch-idl.h	883;"	d
OVSREC_INTERFACE_FOR_EACH_SAFE	lib/vswitch-idl.h	887;"	d
OVSREC_INTERFACE_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_INTERFACE_N_COLUMNS$/;"	e	enum:__anon171
OVSREC_IPFIX_COL_CACHE_ACTIVE_TIMEOUT	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_CACHE_ACTIVE_TIMEOUT,$/;"	e	enum:__anon170
OVSREC_IPFIX_COL_CACHE_MAX_FLOWS	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_CACHE_MAX_FLOWS,$/;"	e	enum:__anon170
OVSREC_IPFIX_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_EXTERNAL_IDS,$/;"	e	enum:__anon170
OVSREC_IPFIX_COL_OBS_DOMAIN_ID	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_OBS_DOMAIN_ID,$/;"	e	enum:__anon170
OVSREC_IPFIX_COL_OBS_POINT_ID	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_OBS_POINT_ID,$/;"	e	enum:__anon170
OVSREC_IPFIX_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_OTHER_CONFIG,$/;"	e	enum:__anon170
OVSREC_IPFIX_COL_SAMPLING	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_SAMPLING,$/;"	e	enum:__anon170
OVSREC_IPFIX_COL_TARGETS	lib/vswitch-idl.h	/^    OVSREC_IPFIX_COL_TARGETS,$/;"	e	enum:__anon170
OVSREC_IPFIX_FOR_EACH	lib/vswitch-idl.h	652;"	d
OVSREC_IPFIX_FOR_EACH_SAFE	lib/vswitch-idl.h	656;"	d
OVSREC_IPFIX_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_IPFIX_N_COLUMNS$/;"	e	enum:__anon170
OVSREC_MANAGER_COL_CONNECTION_MODE	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_CONNECTION_MODE,$/;"	e	enum:__anon172
OVSREC_MANAGER_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_EXTERNAL_IDS,$/;"	e	enum:__anon172
OVSREC_MANAGER_COL_INACTIVITY_PROBE	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_INACTIVITY_PROBE,$/;"	e	enum:__anon172
OVSREC_MANAGER_COL_IS_CONNECTED	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_IS_CONNECTED,$/;"	e	enum:__anon172
OVSREC_MANAGER_COL_MAX_BACKOFF	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_MAX_BACKOFF,$/;"	e	enum:__anon172
OVSREC_MANAGER_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_OTHER_CONFIG,$/;"	e	enum:__anon172
OVSREC_MANAGER_COL_STATUS	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_STATUS,$/;"	e	enum:__anon172
OVSREC_MANAGER_COL_TARGET	lib/vswitch-idl.h	/^    OVSREC_MANAGER_COL_TARGET,$/;"	e	enum:__anon172
OVSREC_MANAGER_FOR_EACH	lib/vswitch-idl.h	1053;"	d
OVSREC_MANAGER_FOR_EACH_SAFE	lib/vswitch-idl.h	1057;"	d
OVSREC_MANAGER_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_MANAGER_N_COLUMNS$/;"	e	enum:__anon172
OVSREC_MIRROR_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_EXTERNAL_IDS,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_NAME	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_NAME,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_OUTPUT_PORT	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_OUTPUT_PORT,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_OUTPUT_VLAN	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_OUTPUT_VLAN,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_SELECT_ALL	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_SELECT_ALL,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_SELECT_DST_PORT	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_SELECT_DST_PORT,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_SELECT_SRC_PORT	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_SELECT_SRC_PORT,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_SELECT_VLAN	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_SELECT_VLAN,$/;"	e	enum:__anon173
OVSREC_MIRROR_COL_STATISTICS	lib/vswitch-idl.h	/^    OVSREC_MIRROR_COL_STATISTICS,$/;"	e	enum:__anon173
OVSREC_MIRROR_FOR_EACH	lib/vswitch-idl.h	1160;"	d
OVSREC_MIRROR_FOR_EACH_SAFE	lib/vswitch-idl.h	1164;"	d
OVSREC_MIRROR_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_MIRROR_N_COLUMNS$/;"	e	enum:__anon173
OVSREC_NETFLOW_COL_ACTIVE_TIMEOUT	lib/vswitch-idl.h	/^    OVSREC_NETFLOW_COL_ACTIVE_TIMEOUT,$/;"	e	enum:__anon174
OVSREC_NETFLOW_COL_ADD_ID_TO_INTERFACE	lib/vswitch-idl.h	/^    OVSREC_NETFLOW_COL_ADD_ID_TO_INTERFACE,$/;"	e	enum:__anon174
OVSREC_NETFLOW_COL_ENGINE_ID	lib/vswitch-idl.h	/^    OVSREC_NETFLOW_COL_ENGINE_ID,$/;"	e	enum:__anon174
OVSREC_NETFLOW_COL_ENGINE_TYPE	lib/vswitch-idl.h	/^    OVSREC_NETFLOW_COL_ENGINE_TYPE,$/;"	e	enum:__anon174
OVSREC_NETFLOW_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_NETFLOW_COL_EXTERNAL_IDS,$/;"	e	enum:__anon174
OVSREC_NETFLOW_COL_TARGETS	lib/vswitch-idl.h	/^    OVSREC_NETFLOW_COL_TARGETS,$/;"	e	enum:__anon174
OVSREC_NETFLOW_FOR_EACH	lib/vswitch-idl.h	1252;"	d
OVSREC_NETFLOW_FOR_EACH_SAFE	lib/vswitch-idl.h	1256;"	d
OVSREC_NETFLOW_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_NETFLOW_N_COLUMNS$/;"	e	enum:__anon174
OVSREC_N_TABLES	lib/vswitch-idl.h	/^    OVSREC_N_TABLES$/;"	e	enum:__anon181
OVSREC_OPEN_VSWITCH_COL_BRIDGES	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_BRIDGES,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_CUR_CFG	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_CUR_CFG,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_DATAPATH_TYPES	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_DATAPATH_TYPES,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_DB_VERSION	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_DB_VERSION,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_EXTERNAL_IDS,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_IFACE_TYPES	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_IFACE_TYPES,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_MANAGER_OPTIONS	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_MANAGER_OPTIONS,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_NEXT_CFG	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_NEXT_CFG,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_OTHER_CONFIG,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_OVS_VERSION	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_OVS_VERSION,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_SSL	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_SSL,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_STATISTICS	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_STATISTICS,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_SYSTEM_TYPE	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_SYSTEM_TYPE,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_COL_SYSTEM_VERSION	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_COL_SYSTEM_VERSION,$/;"	e	enum:__anon175
OVSREC_OPEN_VSWITCH_FOR_EACH	lib/vswitch-idl.h	1376;"	d
OVSREC_OPEN_VSWITCH_FOR_EACH_SAFE	lib/vswitch-idl.h	1380;"	d
OVSREC_OPEN_VSWITCH_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_OPEN_VSWITCH_N_COLUMNS$/;"	e	enum:__anon175
OVSREC_PORT_COL_BOND_ACTIVE_SLAVE	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_BOND_ACTIVE_SLAVE,$/;"	e	enum:__anon176
OVSREC_PORT_COL_BOND_DOWNDELAY	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_BOND_DOWNDELAY,$/;"	e	enum:__anon176
OVSREC_PORT_COL_BOND_FAKE_IFACE	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_BOND_FAKE_IFACE,$/;"	e	enum:__anon176
OVSREC_PORT_COL_BOND_MODE	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_BOND_MODE,$/;"	e	enum:__anon176
OVSREC_PORT_COL_BOND_UPDELAY	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_BOND_UPDELAY,$/;"	e	enum:__anon176
OVSREC_PORT_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_EXTERNAL_IDS,$/;"	e	enum:__anon176
OVSREC_PORT_COL_FAKE_BRIDGE	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_FAKE_BRIDGE,$/;"	e	enum:__anon176
OVSREC_PORT_COL_INTERFACES	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_INTERFACES,$/;"	e	enum:__anon176
OVSREC_PORT_COL_LACP	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_LACP,$/;"	e	enum:__anon176
OVSREC_PORT_COL_MAC	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_MAC,$/;"	e	enum:__anon176
OVSREC_PORT_COL_NAME	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_NAME,$/;"	e	enum:__anon176
OVSREC_PORT_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_OTHER_CONFIG,$/;"	e	enum:__anon176
OVSREC_PORT_COL_QOS	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_QOS,$/;"	e	enum:__anon176
OVSREC_PORT_COL_RSTP_STATISTICS	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_RSTP_STATISTICS,$/;"	e	enum:__anon176
OVSREC_PORT_COL_RSTP_STATUS	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_RSTP_STATUS,$/;"	e	enum:__anon176
OVSREC_PORT_COL_STATISTICS	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_STATISTICS,$/;"	e	enum:__anon176
OVSREC_PORT_COL_STATUS	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_STATUS,$/;"	e	enum:__anon176
OVSREC_PORT_COL_TAG	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_TAG,$/;"	e	enum:__anon176
OVSREC_PORT_COL_TRUNKS	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_TRUNKS,$/;"	e	enum:__anon176
OVSREC_PORT_COL_VLAN_MODE	lib/vswitch-idl.h	/^    OVSREC_PORT_COL_VLAN_MODE,$/;"	e	enum:__anon176
OVSREC_PORT_FOR_EACH	lib/vswitch-idl.h	1557;"	d
OVSREC_PORT_FOR_EACH_SAFE	lib/vswitch-idl.h	1561;"	d
OVSREC_PORT_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_PORT_N_COLUMNS$/;"	e	enum:__anon176
OVSREC_QOS_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_QOS_COL_EXTERNAL_IDS,$/;"	e	enum:__anon177
OVSREC_QOS_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_QOS_COL_OTHER_CONFIG,$/;"	e	enum:__anon177
OVSREC_QOS_COL_QUEUES	lib/vswitch-idl.h	/^    OVSREC_QOS_COL_QUEUES,$/;"	e	enum:__anon177
OVSREC_QOS_COL_TYPE	lib/vswitch-idl.h	/^    OVSREC_QOS_COL_TYPE,$/;"	e	enum:__anon177
OVSREC_QOS_FOR_EACH	lib/vswitch-idl.h	1671;"	d
OVSREC_QOS_FOR_EACH_SAFE	lib/vswitch-idl.h	1675;"	d
OVSREC_QOS_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_QOS_N_COLUMNS$/;"	e	enum:__anon177
OVSREC_QUEUE_COL_DSCP	lib/vswitch-idl.h	/^    OVSREC_QUEUE_COL_DSCP,$/;"	e	enum:__anon178
OVSREC_QUEUE_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_QUEUE_COL_EXTERNAL_IDS,$/;"	e	enum:__anon178
OVSREC_QUEUE_COL_OTHER_CONFIG	lib/vswitch-idl.h	/^    OVSREC_QUEUE_COL_OTHER_CONFIG,$/;"	e	enum:__anon178
OVSREC_QUEUE_FOR_EACH	lib/vswitch-idl.h	1731;"	d
OVSREC_QUEUE_FOR_EACH_SAFE	lib/vswitch-idl.h	1735;"	d
OVSREC_QUEUE_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_QUEUE_N_COLUMNS$/;"	e	enum:__anon178
OVSREC_SFLOW_COL_AGENT	lib/vswitch-idl.h	/^    OVSREC_SFLOW_COL_AGENT,$/;"	e	enum:__anon180
OVSREC_SFLOW_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_SFLOW_COL_EXTERNAL_IDS,$/;"	e	enum:__anon180
OVSREC_SFLOW_COL_HEADER	lib/vswitch-idl.h	/^    OVSREC_SFLOW_COL_HEADER,$/;"	e	enum:__anon180
OVSREC_SFLOW_COL_POLLING	lib/vswitch-idl.h	/^    OVSREC_SFLOW_COL_POLLING,$/;"	e	enum:__anon180
OVSREC_SFLOW_COL_SAMPLING	lib/vswitch-idl.h	/^    OVSREC_SFLOW_COL_SAMPLING,$/;"	e	enum:__anon180
OVSREC_SFLOW_COL_TARGETS	lib/vswitch-idl.h	/^    OVSREC_SFLOW_COL_TARGETS,$/;"	e	enum:__anon180
OVSREC_SFLOW_FOR_EACH	lib/vswitch-idl.h	1878;"	d
OVSREC_SFLOW_FOR_EACH_SAFE	lib/vswitch-idl.h	1882;"	d
OVSREC_SFLOW_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_SFLOW_N_COLUMNS$/;"	e	enum:__anon180
OVSREC_SSL_COL_BOOTSTRAP_CA_CERT	lib/vswitch-idl.h	/^    OVSREC_SSL_COL_BOOTSTRAP_CA_CERT,$/;"	e	enum:__anon179
OVSREC_SSL_COL_CA_CERT	lib/vswitch-idl.h	/^    OVSREC_SSL_COL_CA_CERT,$/;"	e	enum:__anon179
OVSREC_SSL_COL_CERTIFICATE	lib/vswitch-idl.h	/^    OVSREC_SSL_COL_CERTIFICATE,$/;"	e	enum:__anon179
OVSREC_SSL_COL_EXTERNAL_IDS	lib/vswitch-idl.h	/^    OVSREC_SSL_COL_EXTERNAL_IDS,$/;"	e	enum:__anon179
OVSREC_SSL_COL_PRIVATE_KEY	lib/vswitch-idl.h	/^    OVSREC_SSL_COL_PRIVATE_KEY,$/;"	e	enum:__anon179
OVSREC_SSL_FOR_EACH	lib/vswitch-idl.h	1797;"	d
OVSREC_SSL_FOR_EACH_SAFE	lib/vswitch-idl.h	1801;"	d
OVSREC_SSL_N_COLUMNS	lib/vswitch-idl.h	/^    OVSREC_SSL_N_COLUMNS$/;"	e	enum:__anon179
OVSREC_TABLE_AUTOATTACH	lib/vswitch-idl.h	/^    OVSREC_TABLE_AUTOATTACH,$/;"	e	enum:__anon181
OVSREC_TABLE_BRIDGE	lib/vswitch-idl.h	/^    OVSREC_TABLE_BRIDGE,$/;"	e	enum:__anon181
OVSREC_TABLE_CONTROLLER	lib/vswitch-idl.h	/^    OVSREC_TABLE_CONTROLLER,$/;"	e	enum:__anon181
OVSREC_TABLE_FLOW_SAMPLE_COLLECTOR_SET	lib/vswitch-idl.h	/^    OVSREC_TABLE_FLOW_SAMPLE_COLLECTOR_SET,$/;"	e	enum:__anon181
OVSREC_TABLE_FLOW_TABLE	lib/vswitch-idl.h	/^    OVSREC_TABLE_FLOW_TABLE,$/;"	e	enum:__anon181
OVSREC_TABLE_INTERFACE	lib/vswitch-idl.h	/^    OVSREC_TABLE_INTERFACE,$/;"	e	enum:__anon181
OVSREC_TABLE_IPFIX	lib/vswitch-idl.h	/^    OVSREC_TABLE_IPFIX,$/;"	e	enum:__anon181
OVSREC_TABLE_MANAGER	lib/vswitch-idl.h	/^    OVSREC_TABLE_MANAGER,$/;"	e	enum:__anon181
OVSREC_TABLE_MIRROR	lib/vswitch-idl.h	/^    OVSREC_TABLE_MIRROR,$/;"	e	enum:__anon181
OVSREC_TABLE_NETFLOW	lib/vswitch-idl.h	/^    OVSREC_TABLE_NETFLOW,$/;"	e	enum:__anon181
OVSREC_TABLE_OPEN_VSWITCH	lib/vswitch-idl.h	/^    OVSREC_TABLE_OPEN_VSWITCH,$/;"	e	enum:__anon181
OVSREC_TABLE_PORT	lib/vswitch-idl.h	/^    OVSREC_TABLE_PORT,$/;"	e	enum:__anon181
OVSREC_TABLE_QOS	lib/vswitch-idl.h	/^    OVSREC_TABLE_QOS,$/;"	e	enum:__anon181
OVSREC_TABLE_QUEUE	lib/vswitch-idl.h	/^    OVSREC_TABLE_QUEUE,$/;"	e	enum:__anon181
OVSREC_TABLE_SFLOW	lib/vswitch-idl.h	/^    OVSREC_TABLE_SFLOW,$/;"	e	enum:__anon181
OVSREC_TABLE_SSL	lib/vswitch-idl.h	/^    OVSREC_TABLE_SSL,$/;"	e	enum:__anon181
OVSTEST_H	tests/ovstest.h	18;"	d
OVSTEST_REGISTER	tests/ovstest.h	77;"	d
OVSTEST_USAGE	tests/ovstest.c	48;"	d	file:
OVSTHREAD_ONCE_INITIALIZER	include/openvswitch/thread.h	106;"	d
OVSTHREAD_STATS_FOR_EACH_BUCKET	lib/ovs-thread.h	502;"	d
OVSWIN_DL_TYPE_NONE	datapath-windows/ovsext/DpInternal.h	63;"	d
OVSWIN_FLOW_PUT_CLEAR	datapath-windows/ovsext/DpInternal.h	/^    OVSWIN_FLOW_PUT_CLEAR = 1 << 3$/;"	e	enum:OvsFlowPutFlags
OVSWIN_FLOW_PUT_CREATE	datapath-windows/ovsext/DpInternal.h	/^    OVSWIN_FLOW_PUT_CREATE = 1 << 0,$/;"	e	enum:OvsFlowPutFlags
OVSWIN_FLOW_PUT_DELETE	datapath-windows/ovsext/DpInternal.h	/^    OVSWIN_FLOW_PUT_DELETE = 1 << 2,$/;"	e	enum:OvsFlowPutFlags
OVSWIN_FLOW_PUT_MODIFY	datapath-windows/ovsext/DpInternal.h	/^    OVSWIN_FLOW_PUT_MODIFY = 1 << 1,$/;"	e	enum:OvsFlowPutFlags
OVSWIN_VLAN_CFI	datapath-windows/ovsext/DpInternal.h	59;"	d
OVS_ACQUIRES	include/openvswitch/compiler.h	122;"	d
OVS_ACQUIRES	include/openvswitch/compiler.h	145;"	d
OVS_ACQUIRES	lib/lacp.c	/^lacp_lock(void) OVS_ACQUIRES(mutex)$/;"	f
OVS_ACQ_AFTER	include/openvswitch/compiler.h	135;"	d
OVS_ACQ_AFTER	include/openvswitch/compiler.h	154;"	d
OVS_ACQ_BEFORE	include/openvswitch/compiler.h	134;"	d
OVS_ACQ_BEFORE	include/openvswitch/compiler.h	153;"	d
OVS_ACQ_RDLOCK	include/openvswitch/compiler.h	115;"	d
OVS_ACQ_RDLOCK	include/openvswitch/compiler.h	141;"	d
OVS_ACQ_RDLOCK	lib/fat-rwlock.c	/^    OVS_ACQ_RDLOCK(rwlock_)$/;"	f
OVS_ACQ_WRLOCK	include/openvswitch/compiler.h	118;"	d
OVS_ACQ_WRLOCK	include/openvswitch/compiler.h	143;"	d
OVS_ACQ_WRLOCK	lib/fat-rwlock.c	/^    OVS_ACQ_WRLOCK(rwlock_)$/;"	f
OVS_ACTION_ATTR_CT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_CT,           \/* Nested OVS_CT_ATTR_* . *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_CT	include/odp-netlink.h	/^	OVS_ACTION_ATTR_CT,           \/* Nested OVS_CT_ATTR_* . *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_HASH	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_HASH,	      \/* struct ovs_action_hash. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_HASH	include/odp-netlink.h	/^	OVS_ACTION_ATTR_HASH,	      \/* struct ovs_action_hash. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	776;"	d
OVS_ACTION_ATTR_MAX	include/odp-netlink.h	781;"	d
OVS_ACTION_ATTR_OUTPUT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_OUTPUT,	      \/* u32 port number. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_OUTPUT	include/odp-netlink.h	/^	OVS_ACTION_ATTR_OUTPUT,	      \/* u32 port number. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_POP_MPLS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_POP_MPLS,     \/* __be16 ethertype. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_POP_MPLS	include/odp-netlink.h	/^	OVS_ACTION_ATTR_POP_MPLS,     \/* ovs_be16 ethertype. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_POP_VLAN	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_POP_VLAN,     \/* No argument. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_POP_VLAN	include/odp-netlink.h	/^	OVS_ACTION_ATTR_POP_VLAN,     \/* No argument. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_PUSH_MPLS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_PUSH_MPLS,    \/* struct ovs_action_push_mpls. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_PUSH_MPLS	include/odp-netlink.h	/^	OVS_ACTION_ATTR_PUSH_MPLS,    \/* struct ovs_action_push_mpls. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_PUSH_VLAN	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_PUSH_VLAN,    \/* struct ovs_action_push_vlan. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_PUSH_VLAN	include/odp-netlink.h	/^	OVS_ACTION_ATTR_PUSH_VLAN,    \/* struct ovs_action_push_vlan. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_RECIRC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_RECIRC,       \/* u32 recirc_id. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_RECIRC	include/odp-netlink.h	/^	OVS_ACTION_ATTR_RECIRC,       \/* u32 recirc_id. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SAMPLE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_SAMPLE,       \/* Nested OVS_SAMPLE_ATTR_*. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SAMPLE	include/odp-netlink.h	/^	OVS_ACTION_ATTR_SAMPLE,       \/* Nested OVS_SAMPLE_ATTR_*. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_SET,          \/* One nested OVS_KEY_ATTR_*. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SET	include/odp-netlink.h	/^	OVS_ACTION_ATTR_SET,          \/* One nested OVS_KEY_ATTR_*. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SET_MASKED	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_SET_MASKED,   \/* One nested OVS_KEY_ATTR_* including$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SET_MASKED	include/odp-netlink.h	/^	OVS_ACTION_ATTR_SET_MASKED,   \/* One nested OVS_KEY_ATTR_* including$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SET_TO_MASKED	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_SET_TO_MASKED, \/* Kernel module internal masked$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_SET_TO_MASKED	include/odp-netlink.h	/^	OVS_ACTION_ATTR_SET_TO_MASKED, \/* Kernel module internal masked$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_TUNNEL_POP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_TUNNEL_POP,    \/* u32 port number. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_TUNNEL_POP	include/odp-netlink.h	/^	OVS_ACTION_ATTR_TUNNEL_POP,    \/* u32 port number. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_TUNNEL_PUSH	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_TUNNEL_PUSH,   \/* struct ovs_action_push_tnl*\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_TUNNEL_PUSH	include/odp-netlink.h	/^	OVS_ACTION_ATTR_TUNNEL_PUSH,   \/* struct ovs_action_push_tnl*\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_UNSPEC,$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_ACTION_ATTR_UNSPEC,$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_USERSPACE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_ACTION_ATTR_USERSPACE,    \/* Nested OVS_USERSPACE_ATTR_*. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_ATTR_USERSPACE	include/odp-netlink.h	/^	OVS_ACTION_ATTR_USERSPACE,    \/* Nested OVS_USERSPACE_ATTR_*. *\/$/;"	e	enum:ovs_action_attr
OVS_ACTION_STATS	datapath-windows/ovsext/Actions.c	/^} OVS_ACTION_STATS, *POVS_ACTION_STATS;$/;"	t	typeref:struct:_OVS_ACTION_STATS	file:
OVS_ADAPTIVE_MUTEX_INITIALIZER	include/openvswitch/thread.h	41;"	d
OVS_ADAPTIVE_MUTEX_INITIALIZER	include/openvswitch/thread.h	44;"	d
OVS_ALIGNED_STRUCT	include/openvswitch/compiler.h	192;"	d
OVS_ALIGNED_STRUCT	include/openvswitch/compiler.h	194;"	d
OVS_ARP_KEY_SIZE	datapath-windows/ovsext/DpInternal.h	167;"	d
OVS_ATOMIC_CLANG_IMPL	lib/ovs-atomic-clang.h	22;"	d
OVS_ATOMIC_GCC4P_IMPL	lib/ovs-atomic-gcc4+.h	23;"	d
OVS_ATOMIC_H	lib/ovs-atomic.h	18;"	d
OVS_ATOMIC_I586_IMPL	lib/ovs-atomic-i586.h	23;"	d
OVS_ATOMIC_LOCKED_IMPL	lib/ovs-atomic-locked.h	6;"	d
OVS_ATOMIC_PTHREADS_IMPL	lib/ovs-atomic-pthreads.h	24;"	d
OVS_ATOMIC_X86_64_IMPL	lib/ovs-atomic-x86_64.h	22;"	d
OVS_ATTR_NESTED	datapath/flow_netlink.c	59;"	d	file:
OVS_ATTR_NESTED	datapath/linux/flow_netlink.c	59;"	d	file:
OVS_ATTR_VARIABLE	datapath/flow_netlink.c	60;"	d	file:
OVS_ATTR_VARIABLE	datapath/linux/flow_netlink.c	60;"	d	file:
OVS_BE128_MAX	include/openvswitch/types.h	103;"	d
OVS_BE16_MAX	include/openvswitch/types.h	37;"	d
OVS_BE32_MAX	include/openvswitch/types.h	38;"	d
OVS_BE64_MAX	include/openvswitch/types.h	39;"	d
OVS_BITWISE	include/openvswitch/types.h	24;"	d
OVS_BITWISE	include/openvswitch/types.h	27;"	d
OVS_BUFFER_CONTEXT	datapath-windows/ovsext/BufferMgmt.h	/^} OVS_BUFFER_CONTEXT, *POVS_BUFFER_CONTEXT;$/;"	t	typeref:union:_OVS_BUFFER_CONTEXT
OVS_BUFFER_FRAGMENT	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_FRAGMENT                 = BIT16(11),$/;"	e	enum:__anon1
OVS_BUFFER_FROM_FIX_SIZE_POOL	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_FROM_FIX_SIZE_POOL       = BIT16(6),$/;"	e	enum:__anon1
OVS_BUFFER_FROM_NBL_ONLY_POOL	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_FROM_NBL_ONLY_POOL       = BIT16(8),$/;"	e	enum:__anon1
OVS_BUFFER_FROM_ZERO_SIZE_POOL	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_FROM_ZERO_SIZE_POOL      = BIT16(7),$/;"	e	enum:__anon1
OVS_BUFFER_NEED_COMPLETE	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_NEED_COMPLETE            = BIT16(0),$/;"	e	enum:__anon1
OVS_BUFFER_PRIVATE_CONTEXT	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_PRIVATE_CONTEXT          = BIT16(5),$/;"	e	enum:__anon1
OVS_BUFFER_PRIVATE_DATA	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_PRIVATE_DATA             = BIT16(2),$/;"	e	enum:__anon1
OVS_BUFFER_PRIVATE_FORWARD_CONTEXT	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_PRIVATE_FORWARD_CONTEXT  = BIT16(4),$/;"	e	enum:__anon1
OVS_BUFFER_PRIVATE_MDL	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_PRIVATE_MDL              = BIT16(1),$/;"	e	enum:__anon1
OVS_BUFFER_PRIVATE_NET_BUFFER	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_PRIVATE_NET_BUFFER       = BIT16(3),$/;"	e	enum:__anon1
OVS_BUFFER_RECV_BUFFER	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_RECV_BUFFER              = BIT16(9),$/;"	e	enum:__anon1
OVS_BUFFER_SEND_BUFFER	datapath-windows/ovsext/BufferMgmt.h	/^    OVS_BUFFER_SEND_BUFFER              = BIT16(10),$/;"	e	enum:__anon1
OVS_CACHE_LINE_SIZE	lib/netdev-dpdk.c	62;"	d	file:
OVS_CB	datapath/datapath.h	107;"	d
OVS_CFLAGS	Makefile	/^OVS_CFLAGS = $/;"	m
OVS_CFLAGS	datapath/Makefile	/^OVS_CFLAGS = $/;"	m
OVS_CONSTRUCTOR	include/openvswitch/compiler.h	200;"	d
OVS_CONSTRUCTOR	include/openvswitch/compiler.h	205;"	d
OVS_CONSTRUCTOR	lib/util.c	/^OVS_CONSTRUCTOR(winsock_start) {$/;"	f
OVS_CORE_UNSPEC	lib/ovs-numa.h	26;"	d
OVS_CS_F_ESTABLISHED	datapath/linux/compat/include/linux/openvswitch.h	478;"	d
OVS_CS_F_ESTABLISHED	include/odp-netlink.h	483;"	d
OVS_CS_F_INVALID	datapath/linux/compat/include/linux/openvswitch.h	482;"	d
OVS_CS_F_INVALID	include/odp-netlink.h	487;"	d
OVS_CS_F_NEW	datapath/linux/compat/include/linux/openvswitch.h	477;"	d
OVS_CS_F_NEW	include/odp-netlink.h	482;"	d
OVS_CS_F_RELATED	datapath/linux/compat/include/linux/openvswitch.h	479;"	d
OVS_CS_F_RELATED	include/odp-netlink.h	484;"	d
OVS_CS_F_REPLY_DIR	datapath/linux/compat/include/linux/openvswitch.h	481;"	d
OVS_CS_F_REPLY_DIR	include/odp-netlink.h	486;"	d
OVS_CS_F_TRACKED	datapath/linux/compat/include/linux/openvswitch.h	483;"	d
OVS_CS_F_TRACKED	include/odp-netlink.h	488;"	d
OVS_CTRL_CMD_EVENT_NOTIFY	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_CTRL_CMD_EVENT_NOTIFY,$/;"	e	enum:ovs_win_control_cmd
OVS_CTRL_CMD_MC_SUBSCRIBE_REQ	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_CTRL_CMD_MC_SUBSCRIBE_REQ,$/;"	e	enum:ovs_win_control_cmd
OVS_CTRL_CMD_PACKET_SUBSCRIBE_REQ	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_CTRL_CMD_PACKET_SUBSCRIBE_REQ,$/;"	e	enum:ovs_win_control_cmd
OVS_CTRL_CMD_READ_NOTIFY	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_CTRL_CMD_READ_NOTIFY$/;"	e	enum:ovs_win_control_cmd
OVS_CTRL_CMD_WIN_PEND_PACKET_REQ	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_CTRL_CMD_WIN_PEND_PACKET_REQ,$/;"	e	enum:ovs_win_control_cmd
OVS_CTRL_CMD_WIN_PEND_REQ	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_CTRL_CMD_WIN_PEND_REQ,$/;"	e	enum:ovs_win_control_cmd
OVS_CTX_MAGIC	datapath-windows/ovsext/BufferMgmt.h	22;"	d
OVS_CT_ATTR_COMMIT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_CT_ATTR_COMMIT,     \/* No argument, commits connection. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_COMMIT	include/odp-netlink.h	/^	OVS_CT_ATTR_COMMIT,     \/* No argument, commits connection. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_HELPER	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_CT_ATTR_HELPER,     \/* netlink helper to assist detection of$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_HELPER	include/odp-netlink.h	/^	OVS_CT_ATTR_HELPER,     \/* netlink helper to assist detection of$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_LABELS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_CT_ATTR_LABELS,     \/* label to associate with this connection. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_LABELS	include/odp-netlink.h	/^	OVS_CT_ATTR_LABELS,     \/* label to associate with this connection. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_MARK	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_CT_ATTR_MARK,       \/* mark to associate with this connection. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_MARK	include/odp-netlink.h	/^	OVS_CT_ATTR_MARK,       \/* mark to associate with this connection. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	695;"	d
OVS_CT_ATTR_MAX	include/odp-netlink.h	700;"	d
OVS_CT_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_CT_ATTR_UNSPEC,$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_CT_ATTR_UNSPEC,$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_ZONE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_CT_ATTR_ZONE,       \/* u16 zone id. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_ATTR_ZONE	include/odp-netlink.h	/^	OVS_CT_ATTR_ZONE,       \/* u16 zone id. *\/$/;"	e	enum:ovs_ct_attr
OVS_CT_LABELS_LEN	datapath/linux/compat/include/linux/openvswitch.h	471;"	d
OVS_CT_LABELS_LEN	include/odp-netlink.h	476;"	d
OVS_DATAPATH	datapath-windows/ovsext/Switch.h	/^} OVS_DATAPATH, *POVS_DATAPATH;$/;"	t	typeref:struct:_OVS_DATAPATH
OVS_DATAPATH_EXT_VERSION	datapath-windows/include/OvsDpInterfaceExt.h	23;"	d
OVS_DATAPATH_FAMILY	datapath/linux/compat/include/linux/openvswitch.h	61;"	d
OVS_DATAPATH_FAMILY	include/odp-netlink.h	66;"	d
OVS_DATAPATH_MCGROUP	datapath/linux/compat/include/linux/openvswitch.h	62;"	d
OVS_DATAPATH_MCGROUP	include/odp-netlink.h	67;"	d
OVS_DATAPATH_POOL_TAG	datapath-windows/ovsext/Util.h	27;"	d
OVS_DATAPATH_VERSION	datapath/linux/compat/include/linux/openvswitch.h	68;"	d
OVS_DATAPATH_VERSION	include/odp-netlink.h	73;"	d
OVS_DBG_ACTION	datapath-windows/ovsext/Debug.h	34;"	d
OVS_DBG_BUFMGMT	datapath-windows/ovsext/Debug.h	38;"	d
OVS_DBG_CHECKSUM	datapath-windows/ovsext/Debug.h	31;"	d
OVS_DBG_DATAPATH	datapath-windows/ovsext/Debug.h	35;"	d
OVS_DBG_DEFAULT	datapath-windows/ovsext/Debug.c	21;"	d	file:
OVS_DBG_DEFAULT	datapath-windows/ovsext/Debug.c	23;"	d	file:
OVS_DBG_DISPATCH	datapath-windows/ovsext/Debug.h	28;"	d
OVS_DBG_ERROR	datapath-windows/ovsext/Debug.h	47;"	d
OVS_DBG_EVENT	datapath-windows/ovsext/Debug.h	27;"	d
OVS_DBG_EXECUTE	datapath-windows/ovsext/Debug.h	26;"	d
OVS_DBG_FLOW	datapath-windows/ovsext/Debug.h	23;"	d
OVS_DBG_GRE	datapath-windows/ovsext/Debug.h	33;"	d
OVS_DBG_INFO	datapath-windows/ovsext/Debug.h	50;"	d
OVS_DBG_INIT	datapath-windows/ovsext/Debug.h	20;"	d
OVS_DBG_IPHELPER	datapath-windows/ovsext/Debug.h	37;"	d
OVS_DBG_LOUD	datapath-windows/ovsext/Debug.h	51;"	d
OVS_DBG_MOD	datapath-windows/ovsext/Actions.c	31;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Actions.c	33;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/BufferMgmt.c	83;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/BufferMgmt.c	85;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Checksum.c	22;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Checksum.c	24;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Datapath.c	39;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Datapath.c	41;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Driver.c	23;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Driver.c	25;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Event.c	26;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Event.c	28;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Flow.c	26;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Flow.c	28;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/IpHelper.c	23;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/IpHelper.c	25;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Netlink/Netlink.c	22;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Netlink/Netlink.c	24;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Netlink/NetlinkBuf.c	46;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Netlink/NetlinkBuf.c	48;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Oid.c	31;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Oid.c	33;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/PacketIO.c	36;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/PacketIO.c	38;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Stt.c	33;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Stt.c	35;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Switch.c	32;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Switch.c	34;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/TunnelFilter.c	22;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/TunnelFilter.c	24;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/User.c	38;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/User.c	40;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Util.c	19;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Util.c	21;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Vport.c	30;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Vport.c	32;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Vxlan.c	36;"	d	file:
OVS_DBG_MOD	datapath-windows/ovsext/Vxlan.c	38;"	d	file:
OVS_DBG_NETLINK	datapath-windows/ovsext/Debug.h	40;"	d
OVS_DBG_OID	datapath-windows/ovsext/Debug.h	29;"	d
OVS_DBG_OTHERS	datapath-windows/ovsext/Debug.h	39;"	d
OVS_DBG_PROPERTY	datapath-windows/ovsext/Debug.h	36;"	d
OVS_DBG_QOS	datapath-windows/ovsext/Debug.h	24;"	d
OVS_DBG_RESERVED	datapath-windows/ovsext/Debug.h	44;"	d
OVS_DBG_STATUS	datapath-windows/ovsext/Debug.h	30;"	d
OVS_DBG_STT	datapath-windows/ovsext/Debug.h	42;"	d
OVS_DBG_SWITCH	datapath-windows/ovsext/Debug.h	21;"	d
OVS_DBG_TRACE	datapath-windows/ovsext/Debug.h	49;"	d
OVS_DBG_TUNFLT	datapath-windows/ovsext/Debug.h	41;"	d
OVS_DBG_USER	datapath-windows/ovsext/Debug.h	25;"	d
OVS_DBG_VPORT	datapath-windows/ovsext/Debug.h	22;"	d
OVS_DBG_VXLAN	datapath-windows/ovsext/Debug.h	32;"	d
OVS_DBG_WARN	datapath-windows/ovsext/Debug.h	48;"	d
OVS_DEFAULT_COPY_SIZE	datapath-windows/ovsext/BufferMgmt.h	34;"	d
OVS_DEFAULT_DATA_SIZE	datapath-windows/ovsext/BufferMgmt.h	28;"	d
OVS_DEFAULT_EVENT_STATUS	datapath-windows/ovsext/DpInternal.h	295;"	d
OVS_DEFAULT_HEADROOM_SIZE	datapath-windows/ovsext/BufferMgmt.h	29;"	d
OVS_DEFAULT_NBL_CONTEXT_FILL	datapath-windows/ovsext/BufferMgmt.h	25;"	d
OVS_DEFAULT_NBL_CONTEXT_SIZE	datapath-windows/ovsext/BufferMgmt.h	24;"	d
OVS_DEFAULT_PACKET_QUEUE	datapath-windows/ovsext/User.h	32;"	d
OVS_DEFAULT_PORT_NO	datapath-windows/ovsext/DpInternal.h	294;"	d
OVS_DEST_PORTS_ARRAY_MIN_SIZE	datapath-windows/ovsext/Actions.c	65;"	d	file:
OVS_DEVICE_EXTENSION	datapath-windows/ovsext/Datapath.h	/^} OVS_DEVICE_EXTENSION, *POVS_DEVICE_EXTENSION;$/;"	t	typeref:struct:_OVS_DEVICE_EXTENSION
OVS_DEVICE_NAME_DOS	datapath-windows/include/OvsDpInterfaceExt.h	27;"	d
OVS_DEVICE_NAME_NT	datapath-windows/include/OvsDpInterfaceExt.h	26;"	d
OVS_DEVICE_NAME_USER	datapath-windows/include/OvsDpInterfaceExt.h	28;"	d
OVS_DPCTL	utilities/bugtool/ovs-bugtool	/^OVS_DPCTL = 'ovs-dpctl'$/;"	v
OVS_DPPORT_NUMBER_INVALID	datapath-windows/ovsext/Vport.h	25;"	d
OVS_DPPORT_NUMBER_LOCAL	datapath-windows/ovsext/Vport.h	35;"	d
OVS_DP_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	110;"	d
OVS_DP_ATTR_MAX	include/odp-netlink.h	115;"	d
OVS_DP_ATTR_MEGAFLOW_STATS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_ATTR_MEGAFLOW_STATS,	\/* struct ovs_dp_megaflow_stats *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_MEGAFLOW_STATS	include/odp-netlink.h	/^	OVS_DP_ATTR_MEGAFLOW_STATS,	\/* struct ovs_dp_megaflow_stats *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_NAME	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_ATTR_NAME,		\/* name of dp_ifindex netdev *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_NAME	include/odp-netlink.h	/^	OVS_DP_ATTR_NAME,		\/* name of dp_ifindex netdev *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_STATS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_ATTR_STATS,		\/* struct ovs_dp_stats *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_STATS	include/odp-netlink.h	/^	OVS_DP_ATTR_STATS,		\/* struct ovs_dp_stats *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_ATTR_UNSPEC,$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_DP_ATTR_UNSPEC,$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_UPCALL_PID	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_ATTR_UPCALL_PID,		\/* Netlink PID to receive upcalls *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_UPCALL_PID	include/odp-netlink.h	/^	OVS_DP_ATTR_UPCALL_PID,		\/* Netlink PID to receive upcalls *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_USER_FEATURES	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_ATTR_USER_FEATURES,	\/* OVS_DP_F_*  *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_ATTR_USER_FEATURES	include/odp-netlink.h	/^	OVS_DP_ATTR_USER_FEATURES,	\/* OVS_DP_F_*  *\/$/;"	e	enum:ovs_datapath_attr
OVS_DP_CMD_DEL	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_CMD_DEL,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_DEL	include/odp-netlink.h	/^	OVS_DP_CMD_DEL,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_GET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_CMD_GET,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_GET	include/odp-netlink.h	/^	OVS_DP_CMD_GET,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_NEW	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_CMD_NEW,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_NEW	include/odp-netlink.h	/^	OVS_DP_CMD_NEW,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_SET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_CMD_SET$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_SET	include/odp-netlink.h	/^	OVS_DP_CMD_SET$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_DP_CMD_UNSPEC,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_CMD_UNSPEC	include/odp-netlink.h	/^	OVS_DP_CMD_UNSPEC,$/;"	e	enum:ovs_datapath_cmd
OVS_DP_F_UNALIGNED	datapath/linux/compat/include/linux/openvswitch.h	140;"	d
OVS_DP_F_UNALIGNED	include/odp-netlink.h	145;"	d
OVS_DP_F_VPORT_PIDS	datapath/linux/compat/include/linux/openvswitch.h	143;"	d
OVS_DP_F_VPORT_PIDS	include/odp-netlink.h	148;"	d
OVS_DP_NUMBER	datapath-windows/ovsext/DpInternal.h	24;"	d
OVS_DP_STATS	datapath-windows/include/OvsDpInterfaceExt.h	/^typedef struct ovs_dp_stats OVS_DP_STATS;$/;"	t	typeref:struct:ovs_dp_stats
OVS_DP_VER_FEATURES	datapath/linux/compat/include/linux/openvswitch.h	71;"	d
OVS_DP_VER_FEATURES	include/odp-netlink.h	76;"	d
OVS_EVENT_CONNECT	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_CONNECT       = ((uint32_t)0x1 << 0),$/;"	e	enum:__anon11
OVS_EVENT_DISCONNECT	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_DISCONNECT    = ((uint32_t)0x1 << 1),$/;"	e	enum:__anon11
OVS_EVENT_ENTRY	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_ENTRY, *POVS_EVENT_ENTRY;$/;"	t	typeref:struct:_OVS_EVENT_ENTRY
OVS_EVENT_LINK_DOWN	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_LINK_DOWN     = ((uint32_t)0x1 << 3),$/;"	e	enum:__anon11
OVS_EVENT_LINK_UP	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_LINK_UP       = ((uint32_t)0x1 << 2),$/;"	e	enum:__anon11
OVS_EVENT_MAC_CHANGE	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_MAC_CHANGE    = ((uint32_t)0x1 << 4),$/;"	e	enum:__anon11
OVS_EVENT_MASK_ALL	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_MASK_ALL      = 0x3f,$/;"	e	enum:__anon11
OVS_EVENT_MTU_CHANGE	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_MTU_CHANGE    = ((uint32_t)0x1 << 5),$/;"	e	enum:__anon11
OVS_EVENT_POLL	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_POLL, *POVS_EVENT_POLL;$/;"	t	typeref:struct:_OVS_EVENT_POLL
OVS_EVENT_POOL_TAG	datapath-windows/ovsext/Util.h	28;"	d
OVS_EVENT_QUEUE	datapath-windows/ovsext/Event.h	/^} OVS_EVENT_QUEUE, *POVS_EVENT_QUEUE;$/;"	t	typeref:struct:_OVS_EVENT_QUEUE
OVS_EVENT_QUEUE_ELEM	datapath-windows/ovsext/Event.h	/^} OVS_EVENT_QUEUE_ELEM, *POVS_EVENT_QUEUE_ELEM;$/;"	t	typeref:struct:_OVS_EVENT_QUEUE_ELEM
OVS_EVENT_STATUS	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_STATUS, *POVS_EVENT_STATUS;$/;"	t	typeref:struct:_OVS_EVENT_STATUS
OVS_EVENT_SUBSCRIBE	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_SUBSCRIBE, *POVS_EVENT_SUBSCRIBE;$/;"	t	typeref:struct:_OVS_EVENT_SUBSCRIBE
OVS_EXCLUDED	include/openvswitch/compiler.h	133;"	d
OVS_EXCLUDED	include/openvswitch/compiler.h	151;"	d
OVS_EXCLUDED	lib/bfd.c	/^                   const struct dp_packet *p) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^                 void *aux OVS_UNUSED) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^               const struct eth_addr eth_src) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^              struct netdev *netdev) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^bfd_check_status_change(struct bfd *bfd) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^bfd_forwarding(struct bfd *bfd) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^bfd_run(struct bfd *bfd) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^bfd_should_send_packet(const struct bfd *bfd) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^bfd_unref(struct bfd *bfd) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^bfd_wait(const struct bfd *bfd) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/bfd.c	/^bfd_wake_time(const struct bfd *bfd) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^                      void *aux OVS_UNUSED) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^                 void *aux OVS_UNUSED) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^                const struct eth_addr eth_src) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_check_status_change(struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_create(const struct netdev *netdev) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_get_fault(const struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_get_flap_count(const struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_get_health(const struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_get_opup(const struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_get_status(const struct cfm *cfm, struct cfm_status *s) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_run(struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_should_send_ccm(struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_unref(struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_wait(struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/cfm.c	/^cfm_wake_time(struct cfm *cfm) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^                  void *aux OVS_UNUSED) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^lacp_create(void) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^lacp_is_active(const struct lacp *lacp) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^lacp_run(struct lacp *lacp, lacp_send_pdu *send_pdu) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^lacp_status(const struct lacp *lacp) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^lacp_unref(struct lacp *lacp) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/lacp.c	/^lacp_wait(struct lacp *lacp) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/netdev.c	/^    OVS_EXCLUDED(netdev_class_mutex, netdev_mutex)$/;"	f
OVS_EXCLUDED	lib/netdev.c	/^    OVS_EXCLUDED(netdev_mutex)$/;"	f
OVS_EXCLUDED	lib/ovs-lldp.c	/^                const struct eth_addr eth_src) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/ovs-lldp.c	/^            const struct smap *cfg) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/ovs-lldp.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/ovs-lldp.c	/^lldp_configure(struct lldp *lldp, const struct smap *cfg) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/ovs-lldp.c	/^lldp_should_send_packet(struct lldp *cfg) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/ovs-lldp.c	/^lldp_wait(struct lldp *lldp) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/ovs-lldp.c	/^lldp_wake_time(const struct lldp *lldp) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	lib/route-table.c	/^    OVS_EXCLUDED(route_table_mutex)$/;"	f
OVS_EXCLUDED	lib/rstp.c	/^    OVS_EXCLUDED(rstp_mutex)$/;"	f
OVS_EXCLUDED	lib/rtbsd.c	/^    OVS_EXCLUDED(rtbsd_mutex)$/;"	f
OVS_EXCLUDED	lib/seq.c	/^     OVS_EXCLUDED(seq_mutex)$/;"	f
OVS_EXCLUDED	lib/seq.c	/^    OVS_EXCLUDED(seq_mutex)$/;"	f
OVS_EXCLUDED	lib/seq.c	/^struct seq * OVS_EXCLUDED(seq_mutex)$/;"	f
OVS_EXCLUDED	ofproto/connmgr.c	/^    OVS_EXCLUDED(ofproto_mutex)$/;"	f
OVS_EXCLUDED	ofproto/connmgr.c	/^connmgr_wants_packet_in_on_miss(struct connmgr *mgr) OVS_EXCLUDED(ofproto_mutex)$/;"	f
OVS_EXCLUDED	ofproto/fail-open.c	/^    OVS_EXCLUDED(ofproto_mutex)$/;"	f
OVS_EXCLUDED	ofproto/netflow.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/netflow.c	/^netflow_wait(struct netflow *nf) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-ipfix.c	/^                           odp_port_t odp_port) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-ipfix.c	/^                       uint32_t obs_point_id) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-ipfix.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-ipfix.c	/^    size_t n_flow_exporters_options) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_run(struct dpif_ipfix *di) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_unref(struct dpif_ipfix *di) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_wait(struct dpif_ipfix *di) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-rid.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^                               odp_port_t odp_port) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^                    odp_port_t odp_port) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^    OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_clear(struct dpif_sflow *ds) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_get_probability(const struct dpif_sflow *ds) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_is_enabled(const struct dpif_sflow *ds) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_run(struct dpif_sflow *ds) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_unref(struct dpif_sflow *ds) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_wait(struct dpif_sflow *ds) OVS_EXCLUDED(mutex)$/;"	f
OVS_EXCLUDED	ofproto/ofproto.c	/^    OVS_EXCLUDED(ofproto_mutex)$/;"	f
OVS_EXCLUDED	ofproto/tunnel.c	/^              struct flow_wildcards *wc) OVS_EXCLUDED(rwlock)$/;"	f
OVS_EXCLUDED	ofproto/tunnel.c	/^             odp_port_t odp_port, bool native_tnl, const char name[]) OVS_EXCLUDED(rwlock)$/;"	f
OVS_EXCLUDED	ofproto/tunnel.c	/^    OVS_EXCLUDED(rwlock)$/;"	f
OVS_EXCLUDED	ofproto/tunnel.c	/^tnl_port_del(const struct ofport_dpif *ofport) OVS_EXCLUDED(rwlock)$/;"	f
OVS_EXCLUDED	ofproto/tunnel.c	/^tnl_port_receive(const struct flow *flow) OVS_EXCLUDED(rwlock)$/;"	f
OVS_FIX_NBL_DATA_SIZE	datapath-windows/ovsext/BufferMgmt.h	30;"	d
OVS_FIX_SIZE_NBL_POOL_TAG	datapath-windows/ovsext/Util.h	21;"	d
OVS_FLOW_ATTR_ACTIONS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_ACTIONS,   \/* Nested OVS_ACTION_ATTR_* attributes. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_ACTIONS	include/odp-netlink.h	/^	OVS_FLOW_ATTR_ACTIONS,   \/* Nested OVS_ACTION_ATTR_* attributes. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_CLEAR	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_CLEAR,     \/* Flag to clear stats, tcp_flags, used. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_CLEAR	include/odp-netlink.h	/^	OVS_FLOW_ATTR_CLEAR,     \/* Flag to clear stats, tcp_flags, used. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_KEY	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_KEY,       \/* Sequence of OVS_KEY_ATTR_* attributes. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_KEY	include/odp-netlink.h	/^	OVS_FLOW_ATTR_KEY,       \/* Sequence of OVS_KEY_ATTR_* attributes. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_MASK	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_MASK,      \/* Sequence of OVS_KEY_ATTR_* attributes. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_MASK	include/odp-netlink.h	/^	OVS_FLOW_ATTR_MASK,      \/* Sequence of OVS_KEY_ATTR_* attributes. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	543;"	d
OVS_FLOW_ATTR_MAX	include/odp-netlink.h	548;"	d
OVS_FLOW_ATTR_PROBE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_PROBE,     \/* Flow operation is a feature probe, error$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_PROBE	include/odp-netlink.h	/^	OVS_FLOW_ATTR_PROBE,     \/* Flow operation is a feature probe, error$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_STATS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_STATS,     \/* struct ovs_flow_stats. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_STATS	include/odp-netlink.h	/^	OVS_FLOW_ATTR_STATS,     \/* struct ovs_flow_stats. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_TCP_FLAGS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_TCP_FLAGS, \/* 8-bit OR'd TCP flags. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_TCP_FLAGS	include/odp-netlink.h	/^	OVS_FLOW_ATTR_TCP_FLAGS, \/* 8-bit OR'd TCP flags. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_UFID	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_UFID,      \/* Variable length unique flow identifier. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_UFID	include/odp-netlink.h	/^	OVS_FLOW_ATTR_UFID,      \/* Variable length unique flow identifier. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_UFID_FLAGS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_UFID_FLAGS,\/* u32 of OVS_UFID_F_*. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_UFID_FLAGS	include/odp-netlink.h	/^	OVS_FLOW_ATTR_UFID_FLAGS,\/* u32 of OVS_UFID_F_*. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_UNSPEC,$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_FLOW_ATTR_UNSPEC,$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_USED	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_ATTR_USED,      \/* u64 msecs last used in monotonic time. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_ATTR_USED	include/odp-netlink.h	/^	OVS_FLOW_ATTR_USED,      \/* u64 msecs last used in monotonic time. *\/$/;"	e	enum:ovs_flow_attr
OVS_FLOW_CMD_DEL	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_CMD_DEL,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_DEL	include/odp-netlink.h	/^	OVS_FLOW_CMD_DEL,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_GET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_CMD_GET,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_GET	include/odp-netlink.h	/^	OVS_FLOW_CMD_GET,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_NEW	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_CMD_NEW,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_NEW	include/odp-netlink.h	/^	OVS_FLOW_CMD_NEW,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_SET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_CMD_SET$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_SET	include/odp-netlink.h	/^	OVS_FLOW_CMD_SET$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FLOW_CMD_UNSPEC,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_CMD_UNSPEC	include/odp-netlink.h	/^	OVS_FLOW_CMD_UNSPEC,$/;"	e	enum:ovs_flow_cmd
OVS_FLOW_FAMILY	datapath/linux/compat/include/linux/openvswitch.h	308;"	d
OVS_FLOW_FAMILY	include/odp-netlink.h	313;"	d
OVS_FLOW_MCGROUP	datapath/linux/compat/include/linux/openvswitch.h	309;"	d
OVS_FLOW_MCGROUP	include/odp-netlink.h	314;"	d
OVS_FLOW_POOL_TAG	datapath-windows/ovsext/Util.h	29;"	d
OVS_FLOW_TABLE_MASK	datapath-windows/ovsext/Flow.c	90;"	d	file:
OVS_FLOW_TABLE_SIZE	datapath-windows/ovsext/Flow.c	89;"	d	file:
OVS_FLOW_VERSION	datapath/linux/compat/include/linux/openvswitch.h	310;"	d
OVS_FLOW_VERSION	include/odp-netlink.h	315;"	d
OVS_FORCE	include/openvswitch/types.h	25;"	d
OVS_FORCE	include/openvswitch/types.h	28;"	d
OVS_FRAG_TYPE_FIRST	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FRAG_TYPE_FIRST,$/;"	e	enum:ovs_frag_type
OVS_FRAG_TYPE_FIRST	include/odp-netlink.h	/^	OVS_FRAG_TYPE_FIRST,$/;"	e	enum:ovs_frag_type
OVS_FRAG_TYPE_LATER	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FRAG_TYPE_LATER,$/;"	e	enum:ovs_frag_type
OVS_FRAG_TYPE_LATER	include/odp-netlink.h	/^	OVS_FRAG_TYPE_LATER,$/;"	e	enum:ovs_frag_type
OVS_FRAG_TYPE_MAX	datapath/linux/compat/include/linux/openvswitch.h	400;"	d
OVS_FRAG_TYPE_MAX	include/odp-netlink.h	405;"	d
OVS_FRAG_TYPE_NONE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_FRAG_TYPE_NONE,$/;"	e	enum:ovs_frag_type
OVS_FRAG_TYPE_NONE	include/odp-netlink.h	/^	OVS_FRAG_TYPE_NONE,$/;"	e	enum:ovs_frag_type
OVS_FWD_ENTRY	datapath-windows/ovsext/IpHelper.h	/^} OVS_FWD_ENTRY, *POVS_FWD_ENTRY;$/;"	t	typeref:struct:_OVS_FWD_ENTRY
OVS_FWD_HASH_TABLE_MASK	datapath-windows/ovsext/IpHelper.h	24;"	d
OVS_FWD_HASH_TABLE_SIZE	datapath-windows/ovsext/IpHelper.h	23;"	d
OVS_FWD_INFO	datapath-windows/ovsext/IpHelper.h	/^} OVS_FWD_INFO, *POVS_FWD_INFO;$/;"	t	typeref:union:_OVS_FWD_INFO
OVS_FWD_REQUEST_INFO	datapath-windows/ovsext/IpHelper.h	/^} OVS_FWD_REQUEST_INFO, *POVS_FWD_REQUEST_INFO;$/;"	t	typeref:struct:_OVS_FWD_REQUEST_INFO
OVS_GRE_VPORT_INDEX	datapath-windows/ovsext/Switch.h	39;"	d
OVS_GSO_CB	datapath/linux/compat/gso.h	27;"	d
OVS_GUARDED	include/openvswitch/compiler.h	130;"	d
OVS_GUARDED	include/openvswitch/compiler.h	149;"	d
OVS_GUARDED	lib/dpif-netdev.c	/^    struct cmap flow_table OVS_GUARDED; \/* Flow table. *\/$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::flow_table	file:
OVS_GUARDED	lib/dpif-netdev.c	/^    struct cmap_node cmap_node OVS_GUARDED; \/* Within dpcls 'subtables_map'. *\/$/;"	m	struct:dpcls_subtable	typeref:struct:dpcls_subtable::cmap_node	file:
OVS_GUARDED	lib/fat-rwlock.h	/^    struct ovs_list threads OVS_GUARDED;$/;"	m	struct:fat_rwlock	typeref:struct:fat_rwlock::threads
OVS_GUARDED	lib/mac-learning.h	/^    struct ovs_list lru_node OVS_GUARDED; \/* Element in 'lrus' list. *\/$/;"	m	struct:mac_entry	typeref:struct:mac_entry::lru_node
OVS_GUARDED	lib/mac-learning.h	/^    struct ovs_list lrus OVS_GUARDED; \/* In-use entries, LRU at front. *\/$/;"	m	struct:mac_learning	typeref:struct:mac_learning::lrus
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list bundle_lru OVS_GUARDED;$/;"	m	struct:mcast_group	typeref:struct:mcast_group::bundle_lru
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list bundle_node OVS_GUARDED;$/;"	m	struct:mcast_group_bundle	typeref:struct:mcast_group_bundle::bundle_node
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list fport_list OVS_GUARDED;$/;"	m	struct:mcast_snooping	typeref:struct:mcast_snooping::fport_list
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list group_lru OVS_GUARDED;$/;"	m	struct:mcast_snooping	typeref:struct:mcast_snooping::group_lru
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list group_node OVS_GUARDED;$/;"	m	struct:mcast_group	typeref:struct:mcast_group::group_node
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list mrouter_lru OVS_GUARDED;$/;"	m	struct:mcast_snooping	typeref:struct:mcast_snooping::mrouter_lru
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list mrouter_node OVS_GUARDED;$/;"	m	struct:mcast_mrouter_bundle	typeref:struct:mcast_mrouter_bundle::mrouter_node
OVS_GUARDED	lib/mcast-snooping.h	/^    struct ovs_list rport_list OVS_GUARDED;$/;"	m	struct:mcast_snooping	typeref:struct:mcast_snooping::rport_list
OVS_GUARDED	lib/mcast-snooping.h	/^    void *port OVS_GUARDED;$/;"	m	struct:mcast_group_bundle
OVS_GUARDED	lib/mcast-snooping.h	/^    void *port OVS_GUARDED;$/;"	m	struct:mcast_mrouter_bundle
OVS_GUARDED	lib/netdev-dummy.c	/^    FILE *tx_pcap, *rxq_pcap OVS_GUARDED;$/;"	m	struct:netdev_dummy	file:
OVS_GUARDED	lib/netdev-dummy.c	/^    enum netdev_flags flags OVS_GUARDED;$/;"	m	struct:netdev_dummy	typeref:enum:netdev_dummy::flags	file:
OVS_GUARDED	lib/netdev-dummy.c	/^    int ifindex OVS_GUARDED;$/;"	m	struct:netdev_dummy	file:
OVS_GUARDED	lib/netdev-dummy.c	/^    int mtu OVS_GUARDED;$/;"	m	struct:netdev_dummy	file:
OVS_GUARDED	lib/netdev-dummy.c	/^    struct dummy_packet_conn conn OVS_GUARDED;$/;"	m	struct:netdev_dummy	typeref:struct:netdev_dummy::conn	file:
OVS_GUARDED	lib/netdev-dummy.c	/^    struct eth_addr hwaddr OVS_GUARDED;$/;"	m	struct:netdev_dummy	typeref:struct:netdev_dummy::hwaddr	file:
OVS_GUARDED	lib/netdev-dummy.c	/^    struct netdev_stats stats OVS_GUARDED;$/;"	m	struct:netdev_dummy	typeref:struct:netdev_dummy::stats	file:
OVS_GUARDED	lib/netdev-dummy.c	/^    struct ovs_list rxes OVS_GUARDED; \/* List of child "netdev_rxq_dummy"s. *\/$/;"	m	struct:netdev_dummy	typeref:struct:netdev_dummy::rxes	file:
OVS_GUARDED	lib/netlink-socket.h	/^    int status OVS_GUARDED;     \/* 0: dump in progress,$/;"	m	struct:nl_dump
OVS_GUARDED	lib/rconn.h	/^    int ref_cnt OVS_GUARDED;            \/* Number of owners. *\/$/;"	m	struct:rconn_packet_counter
OVS_GUARDED	lib/rconn.h	/^    unsigned int n_bytes OVS_GUARDED;   \/* Number of bytes queued. *\/$/;"	m	struct:rconn_packet_counter
OVS_GUARDED	lib/rconn.h	/^    unsigned int n_packets OVS_GUARDED; \/* Number of packets queued. *\/$/;"	m	struct:rconn_packet_counter
OVS_GUARDED	lib/seq.c	/^    bool waiting OVS_GUARDED;        \/* True if latch_wait() already called. *\/$/;"	m	struct:seq_thread	file:
OVS_GUARDED	lib/seq.c	/^    struct hmap waiters OVS_GUARDED; \/* Contains 'struct seq_waiter's. *\/$/;"	m	struct:seq	typeref:struct:seq::waiters	file:
OVS_GUARDED	lib/seq.c	/^    struct hmap_node hmap_node OVS_GUARDED; \/* In 'seq->waiters'. *\/$/;"	m	struct:seq_waiter	typeref:struct:seq_waiter::hmap_node	file:
OVS_GUARDED	lib/seq.c	/^    struct latch latch OVS_GUARDED;  \/* Wakeup latch for this thread. *\/$/;"	m	struct:seq_thread	typeref:struct:seq_thread::latch	file:
OVS_GUARDED	lib/seq.c	/^    struct ovs_list list_node OVS_GUARDED;  \/* In 'thread->waiters'. *\/$/;"	m	struct:seq_waiter	typeref:struct:seq_waiter::list_node	file:
OVS_GUARDED	lib/seq.c	/^    struct ovs_list waiters OVS_GUARDED; \/* Contains 'struct seq_waiter's. *\/$/;"	m	struct:seq_thread	typeref:struct:seq_thread::waiters	file:
OVS_GUARDED	lib/seq.c	/^    struct seq *seq OVS_GUARDED;            \/* Seq being waited for. *\/$/;"	m	struct:seq_waiter	typeref:struct:seq_waiter::seq	file:
OVS_GUARDED	lib/seq.c	/^    struct seq_thread *thread OVS_GUARDED;  \/* Thread preparing to wait. *\/$/;"	m	struct:seq_waiter	typeref:struct:seq_waiter::thread	file:
OVS_GUARDED	lib/seq.c	/^    uint64_t value OVS_GUARDED; \/* seq->value we're waiting to change. *\/$/;"	m	struct:seq_waiter	file:
OVS_GUARDED	lib/seq.c	/^    uint64_t value OVS_GUARDED;$/;"	m	struct:seq	file:
OVS_GUARDED	lib/seq.c	/^    unsigned int ovsthread_id OVS_GUARDED;  \/* Key in 'waiters' hmap. *\/$/;"	m	struct:seq_waiter	file:
OVS_GUARDED	lib/timeval.c	/^    bool stopped OVS_GUARDED;          \/* Disable real-time updates if true. *\/$/;"	m	struct:clock	file:
OVS_GUARDED	lib/timeval.c	/^    struct large_warp large_warp OVS_GUARDED; \/* Connection information waiting$/;"	m	struct:clock	typeref:struct:clock::large_warp	file:
OVS_GUARDED	lib/timeval.c	/^    struct timespec cache OVS_GUARDED; \/* Last time read from kernel. *\/$/;"	m	struct:clock	typeref:struct:clock::cache	file:
OVS_GUARDED	lib/timeval.c	/^    struct timespec warp OVS_GUARDED;  \/* Offset added for unit tests. *\/$/;"	m	struct:clock	typeref:struct:clock::warp	file:
OVS_GUARDED	ofproto/bond.c	/^    struct ovs_list enabled_slaves OVS_GUARDED; \/* Contains struct bond_slaves. *\/$/;"	m	struct:bond	typeref:struct:bond::enabled_slaves	file:
OVS_GUARDED	ofproto/ofproto-dpif-rid.h	/^    struct ovs_list exp_node OVS_GUARDED;$/;"	m	struct:recirc_id_node	typeref:struct:recirc_id_node::exp_node
OVS_GUARDED	ofproto/ofproto-dpif-upcall.c	/^    bool flow_exists OVS_GUARDED;             \/* Ensures flows are only deleted$/;"	m	struct:udpif_key	file:
OVS_GUARDED	ofproto/ofproto-dpif-upcall.c	/^    long long int created OVS_GUARDED;        \/* Estimate of creation time. *\/$/;"	m	struct:udpif_key	file:
OVS_GUARDED	ofproto/ofproto-dpif-upcall.c	/^    struct dpif_flow_stats stats OVS_GUARDED; \/* Last known stats.*\/$/;"	m	struct:udpif_key	typeref:struct:udpif_key::stats	file:
OVS_GUARDED	ofproto/ofproto-dpif-upcall.c	/^    struct xlate_cache *xcache OVS_GUARDED;   \/* Cache for xlate entries that$/;"	m	struct:udpif_key	typeref:struct:udpif_key::xcache	file:
OVS_GUARDED	ofproto/ofproto-dpif-upcall.c	/^    uint64_t dump_seq OVS_GUARDED;            \/* Tracks udpif->dump_seq. *\/$/;"	m	struct:udpif_key	file:
OVS_GUARDED	ofproto/ofproto-dpif-upcall.c	/^    uint64_t reval_seq OVS_GUARDED;           \/* Tracks udpif->reval_seq. *\/$/;"	m	struct:udpif_key	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    struct dpif_flow_stats stats OVS_GUARDED;$/;"	m	struct:rule_dpif	typeref:struct:rule_dpif::stats	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    struct hmap odp_to_ofport_map OVS_GUARDED; \/* Contains "struct ofport"s. *\/$/;"	m	struct:dpif_backer	typeref:struct:dpif_backer::odp_to_ofport_map	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    struct hmap realdev_vid_map OVS_GUARDED; \/* (realdev,vid) -> vlandev. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::realdev_vid_map	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    struct hmap vlandev_map OVS_GUARDED;     \/* vlandev -> (realdev,vid). *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::vlandev_map	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    struct netdev_stats stats OVS_GUARDED; \/* To account packets generated and$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::stats	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    struct rule_dpif *new_rule OVS_GUARDED;$/;"	m	struct:rule_dpif	typeref:struct:rule_dpif::new_rule	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    uint64_t byte_count OVS_GUARDED;    \/* Number of bytes received. *\/$/;"	m	struct:group_dpif	file:
OVS_GUARDED	ofproto/ofproto-dpif.c	/^    uint64_t packet_count OVS_GUARDED;  \/* Number of packets received. *\/$/;"	m	struct:group_dpif	file:
OVS_GUARDED	ofproto/ofproto-provider.h	/^    enum ofputil_flow_mod_flags flags OVS_GUARDED;$/;"	m	struct:rule	typeref:enum:rule::flags
OVS_GUARDED	ofproto/ofproto-provider.h	/^    long long int created OVS_GUARDED; \/* Creation time. *\/$/;"	m	struct:rule
OVS_GUARDED	ofproto/ofproto-provider.h	/^    long long int modified OVS_GUARDED; \/* Time of last modification. *\/$/;"	m	struct:rule
OVS_GUARDED	ofproto/ofproto-provider.h	/^    ovs_be64 flow_cookie OVS_GUARDED;$/;"	m	struct:rule
OVS_GUARDED	ofproto/ofproto-provider.h	/^    struct hmap groups OVS_GUARDED;   \/* Contains "struct ofgroup"s. *\/$/;"	m	struct:ofproto	typeref:struct:ofproto::groups
OVS_GUARDED	ofproto/ofproto-provider.h	/^    struct hmap_node hmap_node OVS_GUARDED; \/* In ofproto's "groups" hmap. *\/$/;"	m	struct:ofgroup	typeref:struct:ofgroup::hmap_node
OVS_GUARDED	ofproto/ofproto-provider.h	/^    uint16_t hard_timeout OVS_GUARDED; \/* In seconds from ->modified. *\/$/;"	m	struct:rule
OVS_GUARDED	ofproto/ofproto-provider.h	/^    uint16_t idle_timeout OVS_GUARDED; \/* In seconds from ->used. *\/$/;"	m	struct:rule
OVS_GUARDED	ofproto/ofproto-provider.h	/^    uint32_t n_groups[4] OVS_GUARDED; \/* # of existing groups of each type. *\/$/;"	m	struct:ofproto
OVS_GUARDED_BY	include/openvswitch/compiler.h	131;"	d
OVS_GUARDED_BY	include/openvswitch/compiler.h	150;"	d
OVS_GUARDED_BY	lib/netlink-socket.c	/^    OVS_GUARDED_BY(portid_mutex)$/;"	f
OVS_HASH_ALG_L4	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_HASH_ALG_L4,$/;"	e	enum:ovs_hash_alg
OVS_HASH_ALG_L4	include/odp-netlink.h	/^	OVS_HASH_ALG_L4,$/;"	e	enum:ovs_hash_alg
OVS_HASH_BASIS	datapath-windows/ovsext/Switch.h	45;"	d
OVS_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^typedef struct ovs_header OVS_HDR, *POVS_HDR;$/;"	t	typeref:struct:ovs_header
OVS_HDRLEN	datapath-windows/ovsext/Netlink/NetlinkProto.h	116;"	d
OVS_ICMPV6_KEY_SIZE	datapath-windows/ovsext/DpInternal.h	168;"	d
OVS_INIT_OBJECT_HEADER	datapath-windows/ovsext/Util.h	80;"	d
OVS_INSTRUCTIONS	lib/ofp-actions.h	/^    OVS_INSTRUCTIONS$/;"	e	enum:ovs_instruction_type
OVS_INSTRUCTIONS	lib/ofp-actions.h	924;"	d
OVS_INTERNAL_VPORT_DEFAULT_INDEX	datapath-windows/ovsext/Switch.h	33;"	d
OVS_IOCTL_DEVICE_TYPE	datapath-windows/include/OvsDpInterfaceExt.h	30;"	d
OVS_IOCTL_GET_PID	datapath-windows/include/OvsDpInterfaceExt.h	35;"	d
OVS_IOCTL_READ	datapath-windows/include/OvsDpInterfaceExt.h	39;"	d
OVS_IOCTL_READ_EVENT	datapath-windows/include/OvsDpInterfaceExt.h	42;"	d
OVS_IOCTL_READ_PACKET	datapath-windows/include/OvsDpInterfaceExt.h	45;"	d
OVS_IOCTL_START	datapath-windows/include/OvsDpInterfaceExt.h	32;"	d
OVS_IOCTL_TRANSACT	datapath-windows/include/OvsDpInterfaceExt.h	51;"	d
OVS_IOCTL_WRITE	datapath-windows/include/OvsDpInterfaceExt.h	48;"	d
OVS_IPFORWARD_ENTRY	datapath-windows/ovsext/IpHelper.h	/^} OVS_IPFORWARD_ENTRY, *POVS_IPFORWARD_ENTRY;$/;"	t	typeref:struct:_OVS_IPFORWARD_ENTRY
OVS_IPHELPER_POOL_TAG	datapath-windows/ovsext/Util.h	31;"	d
OVS_IPNEIGH_ENTRY	datapath-windows/ovsext/IpHelper.h	/^} OVS_IPNEIGH_ENTRY, *POVS_IPNEIGH_ENTRY;$/;"	t	typeref:struct:_OVS_IPNEIGH_ENTRY
OVS_IPNEIGH_TIMEOUT	datapath-windows/ovsext/IpHelper.h	32;"	d
OVS_IPV6_KEY_SIZE	datapath-windows/ovsext/DpInternal.h	166;"	d
OVS_IP_HELPER_FWD_REQUEST	datapath-windows/ovsext/IpHelper.h	/^    OVS_IP_HELPER_FWD_REQUEST,$/;"	e	enum:__anon20
OVS_IP_HELPER_INTERNAL_ADAPTER_UP	datapath-windows/ovsext/IpHelper.h	/^    OVS_IP_HELPER_INTERNAL_ADAPTER_UP,$/;"	e	enum:__anon20
OVS_IP_HELPER_REQUEST	datapath-windows/ovsext/IpHelper.h	/^} OVS_IP_HELPER_REQUEST, *POVS_IP_HELPER_REQUEST;$/;"	t	typeref:struct:_OVS_IP_HELPER_REQUEST
OVS_IP_HELPER_THREAD_CONTEXT	datapath-windows/ovsext/IpHelper.h	/^} OVS_IP_HELPER_THREAD_CONTEXT, *POVS_IP_HELPER_THREAD_CONTEXT;$/;"	t	typeref:struct:_OVS_IP_HELPER_THREAD_CONTEXT
OVS_IP_KEY_SIZE	datapath-windows/ovsext/DpInternal.h	165;"	d
OVS_KEY_ATTR_ARP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_ARP,       \/* struct ovs_key_arp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ARP	include/odp-netlink.h	/^	OVS_KEY_ATTR_ARP,       \/* struct ovs_key_arp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_BUFSIZE	lib/odp-util.c	/^enum { OVS_KEY_ATTR_BUFSIZE = 3 + INT_STRLEN(unsigned int) + 1 };$/;"	e	enum:__anon119	file:
OVS_KEY_ATTR_CT_LABELS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_CT_LABELS,	\/* 16-octet connection tracking labels *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_CT_LABELS	include/odp-netlink.h	/^	OVS_KEY_ATTR_CT_LABELS,	\/* 16-octet connection tracking labels *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_CT_MARK	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_CT_MARK,	\/* u32 connection tracking mark *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_CT_MARK	include/odp-netlink.h	/^	OVS_KEY_ATTR_CT_MARK,	\/* u32 connection tracking mark *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_CT_STATE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_CT_STATE,	\/* u32 bitmask of OVS_CS_F_* *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_CT_STATE	include/odp-netlink.h	/^	OVS_KEY_ATTR_CT_STATE,	\/* u32 bitmask of OVS_CS_F_* *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_CT_ZONE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_CT_ZONE,	\/* u16 connection tracking zone. *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_CT_ZONE	include/odp-netlink.h	/^	OVS_KEY_ATTR_CT_ZONE,	\/* u16 connection tracking zone. *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_DP_HASH	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_DP_HASH,   \/* u32 hash value. Value 0 indicates the hash$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_DP_HASH	include/odp-netlink.h	/^	OVS_KEY_ATTR_DP_HASH,   \/* u32 hash value. Value 0 indicates the hash$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ENCAP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_ENCAP,	\/* Nested set of encapsulated attributes. *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ENCAP	include/odp-netlink.h	/^	OVS_KEY_ATTR_ENCAP,	\/* Nested set of encapsulated attributes. *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ETHERNET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_ETHERNET,  \/* struct ovs_key_ethernet *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ETHERNET	include/odp-netlink.h	/^	OVS_KEY_ATTR_ETHERNET,  \/* struct ovs_key_ethernet *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ETHERTYPE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_ETHERTYPE,	\/* be16 Ethernet type *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ETHERTYPE	include/odp-netlink.h	/^	OVS_KEY_ATTR_ETHERTYPE,	\/* be16 Ethernet type *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ICMP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_ICMP,      \/* struct ovs_key_icmp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ICMP	include/odp-netlink.h	/^	OVS_KEY_ATTR_ICMP,      \/* struct ovs_key_icmp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ICMPV6	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_ICMPV6,    \/* struct ovs_key_icmpv6 *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ICMPV6	include/odp-netlink.h	/^	OVS_KEY_ATTR_ICMPV6,    \/* struct ovs_key_icmpv6 *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_IN_PORT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_IN_PORT,   \/* u32 OVS dp port number *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_IN_PORT	include/odp-netlink.h	/^	OVS_KEY_ATTR_IN_PORT,   \/* u32 OVS dp port number *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_IPV4	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_IPV4,      \/* struct ovs_key_ipv4 *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_IPV4	include/odp-netlink.h	/^	OVS_KEY_ATTR_IPV4,      \/* struct ovs_key_ipv4 *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_IPV6	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_IPV6,      \/* struct ovs_key_ipv6 *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_IPV6	include/odp-netlink.h	/^	OVS_KEY_ATTR_IPV6,      \/* struct ovs_key_ipv6 *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	364;"	d
OVS_KEY_ATTR_MAX	include/odp-netlink.h	369;"	d
OVS_KEY_ATTR_MPLS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_MPLS,      \/* array of struct ovs_key_mpls.$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_MPLS	include/odp-netlink.h	/^	OVS_KEY_ATTR_MPLS,      \/* array of struct ovs_key_mpls.$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ND	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_ND,        \/* struct ovs_key_nd *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_ND	include/odp-netlink.h	/^	OVS_KEY_ATTR_ND,        \/* struct ovs_key_nd *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_PRIORITY	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_PRIORITY,  \/* u32 skb->priority *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_PRIORITY	include/odp-netlink.h	/^	OVS_KEY_ATTR_PRIORITY,  \/* u32 skb->priority *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_RECIRC_ID	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_RECIRC_ID, \/* u32 recirc id *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_RECIRC_ID	include/odp-netlink.h	/^	OVS_KEY_ATTR_RECIRC_ID, \/* u32 recirc id *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_SCTP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_SCTP,      \/* struct ovs_key_sctp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_SCTP	include/odp-netlink.h	/^	OVS_KEY_ATTR_SCTP,      \/* struct ovs_key_sctp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_SKB_MARK	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_SKB_MARK,  \/* u32 skb mark *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_SKB_MARK	include/odp-netlink.h	/^	OVS_KEY_ATTR_SKB_MARK,  \/* u32 skb mark *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TCP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_TCP,       \/* struct ovs_key_tcp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TCP	include/odp-netlink.h	/^	OVS_KEY_ATTR_TCP,       \/* struct ovs_key_tcp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TCP_FLAGS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_TCP_FLAGS,	\/* be16 TCP flags. *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TCP_FLAGS	include/odp-netlink.h	/^	OVS_KEY_ATTR_TCP_FLAGS,	\/* be16 TCP flags. *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TUNNEL	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_TUNNEL,    \/* Nested set of ovs_tunnel attributes *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TUNNEL	include/odp-netlink.h	/^	OVS_KEY_ATTR_TUNNEL,    \/* Nested set of ovs_tunnel attributes *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TUNNEL_INFO	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_TUNNEL_INFO,  \/* struct ovs_tunnel_info *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_TUNNEL_INFO	include/odp-netlink.h	/^	OVS_KEY_ATTR_TUNNEL_INFO,  \/* struct ovs_tunnel_info *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_UDP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_UDP,       \/* struct ovs_key_udp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_UDP	include/odp-netlink.h	/^	OVS_KEY_ATTR_UDP,       \/* struct ovs_key_udp *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_UNSPEC,$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_KEY_ATTR_UNSPEC,$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_VLAN	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_ATTR_VLAN,	\/* be16 VLAN TCI *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_ATTR_VLAN	include/odp-netlink.h	/^	OVS_KEY_ATTR_VLAN,	\/* be16 VLAN TCI *\/$/;"	e	enum:ovs_key_attr
OVS_KEY_SET_ICMP_ID	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_KEY_SET_ICMP_ID, \/\/add by daolicloud$/;"	e	enum:ovs_key_attr
OVS_KEY_SET_ICMP_ID	include/odp-netlink.h	/^	OVS_KEY_SET_ICMP_ID, \/\/add by daolicloud$/;"	e	enum:ovs_key_attr
OVS_L2_KEY_SIZE	datapath-windows/ovsext/DpInternal.h	164;"	d
OVS_LDFLAGS	Makefile	/^OVS_LDFLAGS = $/;"	m
OVS_LDFLAGS	datapath/Makefile	/^OVS_LDFLAGS = $/;"	m
OVS_LIB_AGE	include/openvswitch/version.h	26;"	d
OVS_LIB_REVISION	include/openvswitch/version.h	25;"	d
OVS_LIB_VERSION	include/openvswitch/version.h	24;"	d
OVS_LIKELY	include/openvswitch/compiler.h	42;"	d
OVS_LIKELY	include/openvswitch/compiler.h	49;"	d
OVS_LIST_INITIALIZER	include/openvswitch/list.h	25;"	d
OVS_LIST_POISON	lib/list.h	28;"	d
OVS_LLDP_H	lib/ovs-lldp.h	20;"	d
OVS_LOCKABLE	include/openvswitch/compiler.h	113;"	d
OVS_LOCKABLE	include/openvswitch/compiler.h	139;"	d
OVS_LOG_BUFFER_SIZE	datapath-windows/ovsext/Debug.c	29;"	d	file:
OVS_LOG_ERROR	datapath-windows/ovsext/Debug.h	68;"	d
OVS_LOG_INFO	datapath-windows/ovsext/Debug.h	62;"	d
OVS_LOG_LOUD	datapath-windows/ovsext/Debug.h	59;"	d
OVS_LOG_TRACE	datapath-windows/ovsext/Debug.h	65;"	d
OVS_LOG_WARN	datapath-windows/ovsext/Debug.h	71;"	d
OVS_MAX_DPPORTS	datapath-windows/ovsext/Vport.h	24;"	d
OVS_MAX_IP_VPOR	datapath-windows/ovsext/Switch.h	43;"	d
OVS_MAX_OPEN_INSTANCES	datapath-windows/ovsext/Datapath.c	339;"	d	file:
OVS_MAX_PACKETS_PER_TUNNEL	datapath-windows/ovsext/User.h	40;"	d
OVS_MAX_PACKETS_PER_VPORT	datapath-windows/ovsext/User.h	39;"	d
OVS_MAX_PACKET_QUEUE_LEN	datapath-windows/ovsext/User.h	33;"	d
OVS_MAX_PHYS_ADAPTERS	datapath-windows/ovsext/Switch.h	42;"	d
OVS_MAX_PID_ARRAY_SIZE	datapath-windows/ovsext/Switch.h	28;"	d
OVS_MAX_PORT_NAME_LENGTH	datapath-windows/ovsext/DpInternal.h	30;"	d
OVS_MAX_VIF_UUID_LEN	datapath-windows/ovsext/DpInternal.h	39;"	d
OVS_MAX_VM_UUID_LEN	datapath-windows/ovsext/DpInternal.h	38;"	d
OVS_MAX_VPORT_ARRAY_SIZE	datapath-windows/ovsext/Switch.h	27;"	d
OVS_MDL_POOL_TAG	datapath-windows/ovsext/Util.h	26;"	d
OVS_MEMORY_TAG	datapath-windows/ovsext/Util.h	20;"	d
OVS_MESSAGE	datapath-windows/ovsext/Netlink/Netlink.h	/^} OVS_MESSAGE, *POVS_MESSAGE;$/;"	t	typeref:struct:_OVS_MESSAGE
OVS_MESSAGE_ERROR	datapath-windows/ovsext/Netlink/Netlink.h	/^} OVS_MESSAGE_ERROR, *POVS_MESSAGE_ERROR;$/;"	t	typeref:struct:_OVS_MESSAGE_ERROR
OVS_MIN_PACKET_SIZE	datapath-windows/ovsext/DpInternal.h	240;"	d
OVS_MUTEX_INITIALIZER	include/openvswitch/thread.h	34;"	d
OVS_MUTEX_INITIALIZER	include/openvswitch/thread.h	37;"	d
OVS_NBL_ONLY_POOL_TAG	datapath-windows/ovsext/Util.h	23;"	d
OVS_NBL_POOL	datapath-windows/ovsext/BufferMgmt.h	/^} OVS_NBL_POOL, *POVS_NBL_POOL;$/;"	t	typeref:struct:_OVS_NBL_POOL
OVS_NEIGH_HASH_TABLE_MASK	datapath-windows/ovsext/IpHelper.h	30;"	d
OVS_NEIGH_HASH_TABLE_SIZE	datapath-windows/ovsext/IpHelper.h	29;"	d
OVS_NET_BUFFER_POOL_TAG	datapath-windows/ovsext/Util.h	24;"	d
OVS_NLERR	datapath/datapath.h	207;"	d
OVS_NL_ATTR_MCAST_GRP	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_NL_ATTR_MCAST_GRP,        \/* (UINT32) Join an MC group *\/$/;"	e	enum:ovs_nl_mcast_attr
OVS_NL_ATTR_MCAST_JOIN	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_NL_ATTR_MCAST_JOIN,       \/* (UINT8) 1\/0 - Join\/Unjoin *\/$/;"	e	enum:ovs_nl_mcast_attr
OVS_NL_ATTR_PACKET_PID	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_NL_ATTR_PACKET_PID,       \/* (UNINT32) netlink PID to receive upcalls *\/$/;"	e	enum:ovs_nl_mcast_attr
OVS_NL_ATTR_PACKET_SUBSCRIBE	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_NL_ATTR_PACKET_SUBSCRIBE, \/* (UNINT8): 1\/0 - subscribe\/unsubscribe *\/$/;"	e	enum:ovs_nl_mcast_attr
OVS_NOT_REACHED	lib/util.h	176;"	d
OVS_NO_RETURN	include/openvswitch/compiler.h	30;"	d
OVS_NO_RETURN	include/openvswitch/compiler.h	32;"	d
OVS_NO_RETURN	include/openvswitch/compiler.h	34;"	d
OVS_NO_THREAD_SAFETY_ANALYSIS	include/openvswitch/compiler.h	136;"	d
OVS_NO_THREAD_SAFETY_ANALYSIS	include/openvswitch/compiler.h	155;"	d
OVS_NUMA_H	lib/ovs-numa.h	18;"	d
OVS_NUMA_UNSPEC	lib/ovs-numa.h	27;"	d
OVS_OFCTL	utilities/bugtool/ovs-bugtool	/^OVS_OFCTL = 'ovs-ofctl'$/;"	v
OVS_OFPRR_NONE	include/openflow/openflow-common.h	/^    OVS_OFPRR_NONE              \/* OVS internal_use only, keep last!. *\/$/;"	e	enum:ofp_flow_removed_reason
OVS_OID_CONTEXT	datapath-windows/ovsext/Oid.c	/^} OVS_OID_CONTEXT, *POVS_OID_CONTEXT;$/;"	t	typeref:struct:_OVS_OID_CONTEXT	file:
OVS_OID_POOL_TAG	datapath-windows/ovsext/Util.h	32;"	d
OVS_OPEN_INSTANCE	datapath-windows/ovsext/Datapath.h	/^} OVS_OPEN_INSTANCE, *POVS_OPEN_INSTANCE;$/;"	t	typeref:struct:_OVS_OPEN_INSTANCE
OVS_OTHER_POOL_TAG	datapath-windows/ovsext/Util.h	25;"	d
OVS_PACKAGE_STRING	include/openvswitch/version.h	21;"	d
OVS_PACKAGE_VERSION	include/openvswitch/version.h	22;"	d
OVS_PACKED	include/openvswitch/compiler.h	178;"	d
OVS_PACKED	include/openvswitch/compiler.h	180;"	d
OVS_PACKED_ENUM	include/openvswitch/compiler.h	171;"	d
OVS_PACKED_ENUM	include/openvswitch/compiler.h	174;"	d
OVS_PACKET_ATTR_ACTIONS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_ACTIONS,     \/* Nested OVS_ACTION_ATTR_* attributes. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_ACTIONS	include/odp-netlink.h	/^	OVS_PACKET_ATTR_ACTIONS,     \/* Nested OVS_ACTION_ATTR_* attributes. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_EGRESS_TUN_KEY	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_EGRESS_TUN_KEY,  \/* Nested OVS_TUNNEL_KEY_ATTR_*$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_EGRESS_TUN_KEY	include/odp-netlink.h	/^	OVS_PACKET_ATTR_EGRESS_TUN_KEY,  \/* Nested OVS_TUNNEL_KEY_ATTR_*$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_KEY	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_KEY,         \/* Nested OVS_KEY_ATTR_* attributes. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_KEY	include/odp-netlink.h	/^	OVS_PACKET_ATTR_KEY,         \/* Nested OVS_KEY_ATTR_* attributes. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	213;"	d
OVS_PACKET_ATTR_MAX	include/odp-netlink.h	218;"	d
OVS_PACKET_ATTR_MRU	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_MRU,	    \/* Maximum received IP fragment size. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_MRU	include/odp-netlink.h	/^	OVS_PACKET_ATTR_MRU,	    \/* Maximum received IP fragment size. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_PACKET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_PACKET,      \/* Packet data. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_PACKET	include/odp-netlink.h	/^	OVS_PACKET_ATTR_PACKET,      \/* Packet data. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_PROBE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_PROBE,      \/* Packet operation is a feature probe,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_PROBE	include/odp-netlink.h	/^	OVS_PACKET_ATTR_PROBE,      \/* Packet operation is a feature probe,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_UNSPEC,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_PACKET_ATTR_UNSPEC,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_UNUSED1	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_UNUSED1,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_UNUSED1	include/odp-netlink.h	/^	OVS_PACKET_ATTR_UNUSED1,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_UNUSED2	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_UNUSED2,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_UNUSED2	include/odp-netlink.h	/^	OVS_PACKET_ATTR_UNUSED2,$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_USERDATA	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_ATTR_USERDATA,    \/* OVS_ACTION_ATTR_USERSPACE arg. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_ATTR_USERDATA	include/odp-netlink.h	/^	OVS_PACKET_ATTR_USERDATA,    \/* OVS_ACTION_ATTR_USERSPACE arg. *\/$/;"	e	enum:ovs_packet_attr
OVS_PACKET_CMD_ACTION	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_CMD_ACTION,  \/* OVS_ACTION_ATTR_USERSPACE action. *\/$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_CMD_ACTION	include/odp-netlink.h	/^	OVS_PACKET_CMD_ACTION,  \/* OVS_ACTION_ATTR_USERSPACE action. *\/$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_CMD_EXECUTE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_CMD_EXECUTE  \/* Apply actions to a packet. *\/$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_CMD_EXECUTE	include/odp-netlink.h	/^	OVS_PACKET_CMD_EXECUTE  \/* Apply actions to a packet. *\/$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_CMD_MISS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_CMD_MISS,    \/* Flow table miss. *\/$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_CMD_MISS	include/odp-netlink.h	/^	OVS_PACKET_CMD_MISS,    \/* Flow table miss. *\/$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_CMD_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_PACKET_CMD_UNSPEC,$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_CMD_UNSPEC	include/odp-netlink.h	/^	OVS_PACKET_CMD_UNSPEC,$/;"	e	enum:ovs_packet_cmd
OVS_PACKET_FAMILY	datapath/linux/compat/include/linux/openvswitch.h	150;"	d
OVS_PACKET_FAMILY	include/odp-netlink.h	155;"	d
OVS_PACKET_HDR_INFO	datapath-windows/ovsext/NetProto.h	/^} OVS_PACKET_HDR_INFO, *POVS_PACKET_HDR_INFO;$/;"	t	typeref:union:_OVS_PACKET_HDR_INFO
OVS_PACKET_HDR_INFO	datapath-windows/ovsext/PacketIO.h	/^typedef union _OVS_PACKET_HDR_INFO OVS_PACKET_HDR_INFO;$/;"	t	typeref:union:_OVS_PACKET_HDR_INFO
OVS_PACKET_INFO	datapath-windows/ovsext/DpInternal.h	/^} OVS_PACKET_INFO, *POVS_PACKET_INFO;$/;"	t	typeref:struct:_OVS_PACKET_INFO
OVS_PACKET_QUEUE_ELEM	datapath-windows/ovsext/User.h	/^} OVS_PACKET_QUEUE_ELEM, *POVS_PACKET_QUEUE_ELEM;$/;"	t	typeref:struct:_OVS_PACKET_QUEUE_ELEM
OVS_PACKET_VERSION	datapath/linux/compat/include/linux/openvswitch.h	151;"	d
OVS_PACKET_VERSION	include/odp-netlink.h	156;"	d
OVS_PID_MASK	datapath-windows/ovsext/Switch.h	31;"	d
OVS_PKI	Makefile	/^OVS_PKI = $(SHELL) $(srcdir)\/utilities\/ovs-pki.in --dir=tests\/pki --log=tests\/ovs-pki.log$/;"	m
OVS_PKI	tests/automake.mk	/^OVS_PKI = $(SHELL) $(srcdir)\/utilities\/ovs-pki.in --dir=tests\/pki --log=tests\/ovs-pki.log$/;"	m
OVS_PREFETCH	include/openvswitch/compiler.h	217;"	d
OVS_PREFETCH	include/openvswitch/compiler.h	220;"	d
OVS_PREFETCH_WRITE	include/openvswitch/compiler.h	218;"	d
OVS_PREFETCH_WRITE	include/openvswitch/compiler.h	221;"	d
OVS_PRINTF_FORMAT	include/openvswitch/compiler.h	39;"	d
OVS_PRINTF_FORMAT	include/openvswitch/compiler.h	46;"	d
OVS_RCU_H	lib/ovs-rcu.h	18;"	d
OVS_READ_DEV_OP	datapath-windows/ovsext/Datapath.h	32;"	d
OVS_RELEASES	include/openvswitch/compiler.h	132;"	d
OVS_RELEASES	include/openvswitch/compiler.h	152;"	d
OVS_RELEASES	lib/fat-rwlock.c	/^    OVS_RELEASES(rwlock_)$/;"	f
OVS_RELEASES	lib/lacp.c	/^lacp_unlock(void) OVS_RELEASES(mutex)$/;"	f
OVS_RELEASES	lib/netdev.c	/^    OVS_RELEASES(netdev_mutex)$/;"	f
OVS_REQUIRES	include/openvswitch/compiler.h	120;"	d
OVS_REQUIRES	include/openvswitch/compiler.h	144;"	d
OVS_REQUIRES	lib/bfd.c	/^        const struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_decay_update(struct bfd * bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_find_by_name(const char *name) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_forwarding__(struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_forwarding_if_rx_update(struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_in_poll(const struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_min_tx(const struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_poll(struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_put_details(struct ds *ds, const struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_rx_interval(const struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_rx_packets(const struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_set_next_tx(struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_status_changed(struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_try_decay(struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/bfd.c	/^bfd_tx_interval(const struct bfd *bfd) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_fault_interval(struct cfm *cfm) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_find(const char *name) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_generate_maid(struct cfm *cfm) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_get_fault__(const struct cfm *cfm) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_get_opup__(const struct cfm *cfm_) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_print_details(struct ds *ds, struct cfm *cfm) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_rx_packets(const struct cfm *cfm) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^cfm_status_changed(struct cfm *cfm) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/cfm.c	/^lookup_remote_mp(const struct cfm *cfm, uint64_t mpid) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/dpif-netdev.c	/^    OVS_REQUIRES(dp_netdev_mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^lacp_find(const char *name) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^lacp_print_details(struct ds *ds, struct lacp *lacp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^lacp_update_attached(struct lacp *lacp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^slave_destroy(struct slave *slave) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^slave_lookup(const struct lacp *lacp, const void *slave_) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^slave_may_enable__(struct slave *slave) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^slave_may_tx(const struct slave *slave) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^slave_set_defaulted(struct slave *slave) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/lacp.c	/^slave_set_expired(struct slave *slave) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/netdev-dpdk.c	/^    OVS_REQUIRES(dpdk_mutex)$/;"	f
OVS_REQUIRES	lib/netdev-dpdk.c	/^dpdk_eth_dev_init(struct netdev_dpdk *dev) OVS_REQUIRES(dpdk_mutex)$/;"	f
OVS_REQUIRES	lib/netdev-dpdk.c	/^dpdk_mp_get(int socket_id, int mtu) OVS_REQUIRES(dpdk_mutex)$/;"	f
OVS_REQUIRES	lib/netdev-dpdk.c	/^dpdk_ring_open(const char dev_name[], unsigned int *eth_port_id) OVS_REQUIRES(dpdk_mutex)$/;"	f
OVS_REQUIRES	lib/netdev-dpdk.c	/^vhost_construct_helper(struct netdev *netdev_) OVS_REQUIRES(dpdk_mutex)$/;"	f
OVS_REQUIRES	lib/ovs-lldp.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/ovs-lldp.c	/^aa_print_element_status(struct ds *ds, struct lldp *lldp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/ovs-lldp.c	/^aa_print_isid_status(struct ds *ds, struct lldp *lldp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/ovs-lldp.c	/^mapping_find_by_aux(struct lldp *lldp, const void *aux) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/rstp-state-machines.c	/^    OVS_REQUIRES(rstp_mutex)$/;"	f
OVS_REQUIRES	lib/rstp.c	/^     OVS_REQUIRES(rstp_mutex)$/;"	f
OVS_REQUIRES	lib/rstp.c	/^    OVS_REQUIRES(rstp_mutex)$/;"	f
OVS_REQUIRES	lib/rtbsd.c	/^    OVS_REQUIRES(rtbsd_mutex)$/;"	f
OVS_REQUIRES	lib/seq.c	/^    OVS_REQUIRES(seq_mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^     OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_acknowledge_topology_change(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_become_designated_port(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_become_root_bridge(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_config_bpdu_generation(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_configuration_update(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_designated_port_selection(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_find(const char *name) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_forward_delay_timer_expiry(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_hello_timer_expiry(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_hold_timer_expiry(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_is_designated_for_some_port(const struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_is_designated_port(const struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_make_blocking(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_make_forwarding(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_message_age_timer_expiry(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_port_state_selection(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_root_selection(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_start_timer(struct stp_timer *timer, int value) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_stop_timer(struct stp_timer *timer) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_tcn_timer_expiry(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_topology_change_acknowledged(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_topology_change_detection(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_topology_change_timer_expiry(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_transmit_config(struct stp_port *p) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_transmit_tcn(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/stp.c	/^stp_update_bridge_timers(struct stp *stp) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	lib/tun-metadata.c	/^                         OVS_REQUIRES(tab_mutex)$/;"	f
OVS_REQUIRES	lib/tun-metadata.c	/^                       OVS_REQUIRES(tab_mutex)$/;"	f
OVS_REQUIRES	lib/tun-metadata.c	/^                       uint8_t type, uint8_t len) OVS_REQUIRES(tab_mutex)$/;"	f
OVS_REQUIRES	lib/tun-metadata.c	/^table_alloc(const struct tun_table *old_map) OVS_REQUIRES(tab_mutex)$/;"	f
OVS_REQUIRES	lib/tun-metadata.c	/^table_free(struct tun_table *map) OVS_REQUIRES(tab_mutex)$/;"	f
OVS_REQUIRES	ofproto/connmgr.c	/^    OVS_REQUIRES(ofproto_mutex)$/;"	f
OVS_REQUIRES	ofproto/netflow.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/netflow.c	/^netflow_run__(struct netflow *nf) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-ipfix.c	/^                     odp_port_t odp_port) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-ipfix.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_clear(struct dpif_ipfix *di) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-monitor.c	/^    OVS_REQUIRES(monitor_mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-monitor.c	/^mport_find(const struct ofport_dpif *ofport) OVS_REQUIRES(monitor_mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-rid.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-sflow.c	/^    OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_clear__(struct dpif_sflow *ds) OVS_REQUIRES(mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto-dpif.c	/^    OVS_REQUIRES(ofproto_mutex)$/;"	f
OVS_REQUIRES	ofproto/ofproto.c	/^    OVS_REQUIRES(ofproto_mutex)$/;"	f
OVS_REQUIRES	tests/test-rstp.c	/^    OVS_REQUIRES(rstp_mutex)$/;"	f
OVS_REQUIRES	vswitchd/system-stats.c	/^discard_stats(void) OVS_REQUIRES(mutex)$/;"	f
OVS_REQ_RDLOCK	include/openvswitch/compiler.h	114;"	d
OVS_REQ_RDLOCK	include/openvswitch/compiler.h	140;"	d
OVS_REQ_RDLOCK	lib/netdev.c	/^    OVS_REQ_RDLOCK(netdev_class_mutex)$/;"	f
OVS_REQ_RDLOCK	lib/vlog.c	/^    OVS_REQ_RDLOCK(pattern_rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/bond.c	/^    OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/bond.c	/^bond_find(const char *name) OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/bond.c	/^bond_is_balanced(const struct bond *bond) OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/bond.c	/^bond_slave_from_bal_node(struct ovs_list *bal) OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/tunnel.c	/^    OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/tunnel.c	/^tnl_find(const struct flow *flow) OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/tunnel.c	/^tnl_find_ofport(const struct ofport_dpif *ofport) OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/tunnel.c	/^tnl_port_fmt(const struct tnl_port *tnl_port) OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_RDLOCK	ofproto/tunnel.c	/^tnl_port_get_name(const struct tnl_port *tnl_port) OVS_REQ_RDLOCK(rwlock)$/;"	f
OVS_REQ_WRLOCK	include/openvswitch/compiler.h	116;"	d
OVS_REQ_WRLOCK	include/openvswitch/compiler.h	142;"	d
OVS_REQ_WRLOCK	ofproto/bond.c	/^    OVS_REQ_WRLOCK(rwlock)$/;"	f
OVS_REQ_WRLOCK	ofproto/tunnel.c	/^    OVS_REQ_WRLOCK(rwlock)$/;"	f
OVS_REQ_WRLOCK	ofproto/tunnel.c	/^tnl_port_del__(const struct ofport_dpif *ofport) OVS_REQ_WRLOCK(rwlock)$/;"	f
OVS_ROUTE_HASH_TABLE_MASK	datapath-windows/ovsext/IpHelper.h	27;"	d
OVS_ROUTE_HASH_TABLE_SIZE	datapath-windows/ovsext/IpHelper.h	26;"	d
OVS_RWLOCK_INITIALIZER	lib/ovs-thread.h	66;"	d
OVS_RWLOCK_INITIALIZER	lib/ovs-thread.h	69;"	d
OVS_SAMPLE_ATTR_ACTIONS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_SAMPLE_ATTR_ACTIONS,     \/* Nested OVS_ACTION_ATTR_* attributes. *\/$/;"	e	enum:ovs_sample_attr
OVS_SAMPLE_ATTR_ACTIONS	include/odp-netlink.h	/^	OVS_SAMPLE_ATTR_ACTIONS,     \/* Nested OVS_ACTION_ATTR_* attributes. *\/$/;"	e	enum:ovs_sample_attr
OVS_SAMPLE_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	574;"	d
OVS_SAMPLE_ATTR_MAX	include/odp-netlink.h	579;"	d
OVS_SAMPLE_ATTR_PROBABILITY	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_SAMPLE_ATTR_PROBABILITY, \/* u32 number *\/$/;"	e	enum:ovs_sample_attr
OVS_SAMPLE_ATTR_PROBABILITY	include/odp-netlink.h	/^	OVS_SAMPLE_ATTR_PROBABILITY, \/* u32 number *\/$/;"	e	enum:ovs_sample_attr
OVS_SAMPLE_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_SAMPLE_ATTR_UNSPEC,$/;"	e	enum:ovs_sample_attr
OVS_SAMPLE_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_SAMPLE_ATTR_UNSPEC,$/;"	e	enum:ovs_sample_attr
OVS_SAT_MUL	include/openvswitch/util.h	44;"	d
OVS_SCANF_FORMAT	include/openvswitch/compiler.h	40;"	d
OVS_SCANF_FORMAT	include/openvswitch/compiler.h	47;"	d
OVS_SOURCE_LOCATOR	include/openvswitch/util.h	39;"	d
OVS_SRC	utilities/ovs-dev.py	/^    OVS_SRC = PWD  # Use current directory as OVS source tree$/;"	v
OVS_SRC	utilities/ovs-dev.py	/^OVS_SRC = HOME + "\/ovs"$/;"	v
OVS_STATE_CONNECTED	datapath-windows/ovsext/Vport.h	/^    OVS_STATE_CONNECTED,$/;"	e	enum:__anon26
OVS_STATE_NIC_CREATED	datapath-windows/ovsext/Vport.h	/^    OVS_STATE_NIC_CREATED,$/;"	e	enum:__anon26
OVS_STATE_PORT_CREATED	datapath-windows/ovsext/Vport.h	/^    OVS_STATE_PORT_CREATED,$/;"	e	enum:__anon26
OVS_STATE_PORT_DELETED	datapath-windows/ovsext/Vport.h	/^    OVS_STATE_PORT_DELETED,$/;"	e	enum:__anon26
OVS_STATE_PORT_TEAR_DOWN	datapath-windows/ovsext/Vport.h	/^    OVS_STATE_PORT_TEAR_DOWN,$/;"	e	enum:__anon26
OVS_STATE_UNKNOWN	datapath-windows/ovsext/Vport.h	/^    OVS_STATE_UNKNOWN,$/;"	e	enum:__anon26
OVS_STRINGIZE	include/openvswitch/util.h	40;"	d
OVS_STRINGIZE2	include/openvswitch/util.h	41;"	d
OVS_STT	datapath/linux/compat/include/net/stt.h	7;"	d
OVS_STT_PKT_ENTRY	datapath-windows/ovsext/Stt.h	/^} OVS_STT_PKT_ENTRY, *POVS_STT_PKT_ENTRY;$/;"	t	typeref:struct:_OVS_STT_PKT_ENTRY
OVS_STT_PKT_KEY	datapath-windows/ovsext/Stt.h	/^} OVS_STT_PKT_KEY, *POVS_STT_PKT_KEY;$/;"	t	typeref:struct:_OVS_STT_PKT_KEY
OVS_STT_POOL_TAG	datapath-windows/ovsext/Util.h	36;"	d
OVS_STT_THREAD_CTX	datapath-windows/ovsext/Stt.h	/^} OVS_STT_THREAD_CTX, *POVS_STT_THREAD_CTX;$/;"	t	typeref:struct:_OVS_STT_THREAD_CTX
OVS_STT_VPORT	datapath-windows/ovsext/Stt.h	/^} OVS_STT_VPORT, *POVS_STT_VPORT;$/;"	t	typeref:struct:_OVS_STT_VPORT
OVS_SWITCH_CONTEXT	datapath-windows/ovsext/Switch.h	/^} OVS_SWITCH_CONTEXT, *POVS_SWITCH_CONTEXT;$/;"	t	typeref:struct:_OVS_SWITCH_CONTEXT
OVS_SWITCH_CONTROFLOW_STATE	datapath-windows/ovsext/Switch.h	/^typedef enum OVS_SWITCH_CONTROFLOW_STATE$/;"	g
OVS_SWITCH_CONTROLFLOW_STATE	datapath-windows/ovsext/Switch.h	/^} OVS_SWITCH_CONTROLFLOW_STATE, *POVS_SWITCH_CONTROLFLOW_STATE;$/;"	t	typeref:enum:OVS_SWITCH_CONTROFLOW_STATE
OVS_SWITCH_DATAFLOW_STATE	datapath-windows/ovsext/Switch.h	/^typedef enum OVS_SWITCH_DATAFLOW_STATE$/;"	g
OVS_SWITCH_DATAFLOW_STATE	datapath-windows/ovsext/Switch.h	/^} OVS_SWITCH_DATAFLOW_STATE, *POVS_SWITCH_DATAFLOW_STATE;$/;"	t	typeref:enum:OVS_SWITCH_DATAFLOW_STATE
OVS_SWITCH_POOL_TAG	datapath-windows/ovsext/Util.h	33;"	d
OVS_SWITCH_PORT_ID_INVALID	datapath-windows/ovsext/Util.h	71;"	d
OVS_SW_FLOW_KEY_METADATA_SIZE	datapath/flow.h	118;"	d
OVS_SYSTEM_DP_NAME	datapath-windows/ovsext/Datapath.c	340;"	d	file:
OVS_THREAD_H	lib/ovs-thread.h	18;"	d
OVS_TNL_F_CSUM	datapath-windows/ovsext/Flow.h	84;"	d
OVS_TNL_F_DONT_FRAGMENT	datapath-windows/ovsext/Flow.h	83;"	d
OVS_TNL_F_KEY	datapath-windows/ovsext/Flow.h	85;"	d
OVS_TNL_ROUTER_H	lib/ovs-router.h	18;"	d
OVS_TRANSACTION_DEV_OP	datapath-windows/ovsext/Datapath.h	34;"	d
OVS_TRY_LOCK	include/openvswitch/compiler.h	128;"	d
OVS_TRY_LOCK	include/openvswitch/compiler.h	148;"	d
OVS_TRY_RDLOCK	include/openvswitch/compiler.h	126;"	d
OVS_TRY_RDLOCK	include/openvswitch/compiler.h	147;"	d
OVS_TRY_WRLOCK	include/openvswitch/compiler.h	124;"	d
OVS_TRY_WRLOCK	include/openvswitch/compiler.h	146;"	d
OVS_TUNFLT_INIT_CONTEXT	datapath-windows/ovsext/Vport.c	/^} OVS_TUNFLT_INIT_CONTEXT, *POVS_TUNFLT_INIT_CONTEXT;$/;"	t	typeref:struct:_OVS_TUNFLT_INIT_CONTEXT	file:
OVS_TUNFLT_MAX_THREADS	datapath-windows/ovsext/TunnelFilter.c	63;"	d	file:
OVS_TUNFLT_OPERATION	datapath-windows/ovsext/TunnelFilter.c	/^} OVS_TUNFLT_OPERATION;$/;"	t	typeref:enum:_OVS_TUNFLT_OPERATION	file:
OVS_TUNFLT_POOL_TAG	datapath-windows/ovsext/Util.h	37;"	d
OVS_TUNFLT_REQUEST	datapath-windows/ovsext/TunnelFilter.c	/^} OVS_TUNFLT_REQUEST, *POVS_TUNFLT_REQUEST;$/;"	t	typeref:struct:_OVS_TUNFLT_REQUEST	file:
OVS_TUNFLT_REQUEST_LIST	datapath-windows/ovsext/TunnelFilter.c	/^} OVS_TUNFLT_REQUEST_LIST, *POVS_TUNFLT_REQUEST_LIST;$/;"	t	typeref:struct:_OVS_TUNFLT_REQUEST_LIST	file:
OVS_TUNFLT_THREAD_CONTEXT	datapath-windows/ovsext/TunnelFilter.c	/^} OVS_TUNFLT_THREAD_CONTEXT, *POVS_TUNFLT_THREAD_CONTEXT;$/;"	t	typeref:struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
OVS_TUNNEL_ATTR_DST_PORT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_ATTR_DST_PORT, \/* 16-bit UDP port, used by L4 tunnels. *\/$/;"	e	enum:__anon46
OVS_TUNNEL_ATTR_DST_PORT	include/odp-netlink.h	/^	OVS_TUNNEL_ATTR_DST_PORT, \/* 16-bit UDP port, used by L4 tunnels. *\/$/;"	e	enum:__anon80
OVS_TUNNEL_ATTR_EXTENSION	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_ATTR_EXTENSION,$/;"	e	enum:__anon46
OVS_TUNNEL_ATTR_EXTENSION	include/odp-netlink.h	/^	OVS_TUNNEL_ATTR_EXTENSION,$/;"	e	enum:__anon80
OVS_TUNNEL_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	304;"	d
OVS_TUNNEL_ATTR_MAX	include/odp-netlink.h	309;"	d
OVS_TUNNEL_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_ATTR_UNSPEC,$/;"	e	enum:__anon46
OVS_TUNNEL_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_TUNNEL_ATTR_UNSPEC,$/;"	e	enum:__anon80
OVS_TUNNEL_INDEX_END	datapath-windows/ovsext/Switch.h	40;"	d
OVS_TUNNEL_INDEX_START	datapath-windows/ovsext/Switch.h	37;"	d
OVS_TUNNEL_KEY_ATTR_CSUM	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_CSUM,               \/* No argument. CSUM packet. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_CSUM	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_CSUM,               \/* No argument. CSUM packet. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_DONT_FRAGMENT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_DONT_FRAGMENT,      \/* No argument, set DF. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_DONT_FRAGMENT	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_DONT_FRAGMENT,      \/* No argument, set DF. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_GENEVE_OPTS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_GENEVE_OPTS,        \/* Array of Geneve options. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_GENEVE_OPTS	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_GENEVE_OPTS,        \/* Array of Geneve options. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_ID	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_ID,                 \/* be64 Tunnel ID *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_ID	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_ID,                 \/* be64 Tunnel ID *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_IPV4_DST	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_IPV4_DST,           \/* be32 dst IP address. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_IPV4_DST	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_IPV4_DST,           \/* be32 dst IP address. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_IPV4_SRC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_IPV4_SRC,           \/* be32 src IP address. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_IPV4_SRC	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_IPV4_SRC,           \/* be32 src IP address. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	382;"	d
OVS_TUNNEL_KEY_ATTR_MAX	include/odp-netlink.h	387;"	d
OVS_TUNNEL_KEY_ATTR_OAM	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_OAM,                \/* No argument. OAM frame.  *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_OAM	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_OAM,                \/* No argument. OAM frame.  *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TOS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_TOS,                \/* u8 Tunnel IP ToS. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TOS	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_TOS,                \/* u8 Tunnel IP ToS. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TP_DST	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_TP_DST,		\/* be16 dst Transport Port. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TP_DST	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_TP_DST,		\/* be16 dst Transport Port. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TP_SRC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_TP_SRC,		\/* be16 src Transport Port. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TP_SRC	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_TP_SRC,		\/* be16 src Transport Port. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TTL	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_TTL,                \/* u8 Tunnel IP TTL. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_TTL	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_TTL,                \/* u8 Tunnel IP TTL. *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_VXLAN_OPTS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_TUNNEL_KEY_ATTR_VXLAN_OPTS,		\/* Nested OVS_VXLAN_EXT_* *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_ATTR_VXLAN_OPTS	include/odp-netlink.h	/^	OVS_TUNNEL_KEY_ATTR_VXLAN_OPTS,		\/* Nested OVS_VXLAN_EXT_* *\/$/;"	e	enum:ovs_tunnel_key_attr
OVS_TUNNEL_KEY_SIZE	datapath/flow.h	39;"	d
OVS_TUNNEL_PENDED_PACKET	datapath-windows/ovsext/Tunnel.h	/^} OVS_TUNNEL_PENDED_PACKET;$/;"	t	typeref:struct:OVS_TUNNEL_PENDED_PACKET_
OVS_TUNNEL_PENDED_PACKET_	datapath-windows/ovsext/Tunnel.h	/^typedef struct OVS_TUNNEL_PENDED_PACKET_$/;"	s
OVS_TUNNEL_PROVIDER_DESC	datapath-windows/ovsext/TunnelFilter.c	57;"	d	file:
OVS_TUNNEL_PROVIDER_NAME	datapath-windows/ovsext/TunnelFilter.c	53;"	d	file:
OVS_TUNNEL_SESSION_NAME	datapath-windows/ovsext/TunnelFilter.c	60;"	d	file:
OVS_TUN_FILTER_CREATE	datapath-windows/ovsext/TunnelFilter.c	/^    OVS_TUN_FILTER_CREATE = 0,$/;"	e	enum:_OVS_TUNFLT_OPERATION	file:
OVS_TUN_FILTER_DELETE	datapath-windows/ovsext/TunnelFilter.c	/^    OVS_TUN_FILTER_DELETE$/;"	e	enum:_OVS_TUNFLT_OPERATION	file:
OVS_TYPEOF	lib/util.h	181;"	d
OVS_TYPEOF	lib/util.h	183;"	d
OVS_U128_MAX	include/openvswitch/types.h	102;"	d
OVS_UFID_F_OMIT_ACTIONS	datapath/linux/compat/include/linux/openvswitch.h	553;"	d
OVS_UFID_F_OMIT_ACTIONS	include/odp-netlink.h	558;"	d
OVS_UFID_F_OMIT_KEY	datapath/linux/compat/include/linux/openvswitch.h	551;"	d
OVS_UFID_F_OMIT_KEY	include/odp-netlink.h	556;"	d
OVS_UFID_F_OMIT_MASK	datapath/linux/compat/include/linux/openvswitch.h	552;"	d
OVS_UFID_F_OMIT_MASK	include/odp-netlink.h	557;"	d
OVS_UNLIKELY	include/openvswitch/compiler.h	43;"	d
OVS_UNLIKELY	include/openvswitch/compiler.h	50;"	d
OVS_UNUSED	include/openvswitch/compiler.h	38;"	d
OVS_UNUSED	include/openvswitch/compiler.h	45;"	d
OVS_UNUSED	lib/packets.h	/^static const struct eth_addr eth_addr_bfd OVS_UNUSED$/;"	v	typeref:struct:eth_addr_bfd
OVS_UNUSED	lib/packets.h	/^static const struct eth_addr eth_addr_broadcast OVS_UNUSED$/;"	v	typeref:struct:eth_addr_broadcast
OVS_UNUSED	lib/packets.h	/^static const struct eth_addr eth_addr_exact OVS_UNUSED$/;"	v	typeref:struct:eth_addr_exact
OVS_UNUSED	lib/packets.h	/^static const struct eth_addr eth_addr_lacp OVS_UNUSED$/;"	v	typeref:struct:eth_addr_lacp
OVS_UNUSED	lib/packets.h	/^static const struct eth_addr eth_addr_stp OVS_UNUSED$/;"	v	typeref:struct:eth_addr_stp
OVS_UNUSED	lib/packets.h	/^static const struct eth_addr eth_addr_zero OVS_UNUSED$/;"	v	typeref:struct:eth_addr_zero
OVS_USERSPACE_ATTR_ACTIONS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_USERSPACE_ATTR_ACTIONS,   \/* Optional flag to get actions. *\/$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_ACTIONS	include/odp-netlink.h	/^	OVS_USERSPACE_ATTR_ACTIONS,   \/* Optional flag to get actions. *\/$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_EGRESS_TUN_PORT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_USERSPACE_ATTR_EGRESS_TUN_PORT,  \/* Optional, u32 output port$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_EGRESS_TUN_PORT	include/odp-netlink.h	/^	OVS_USERSPACE_ATTR_EGRESS_TUN_PORT,  \/* Optional, u32 output port$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	596;"	d
OVS_USERSPACE_ATTR_MAX	include/odp-netlink.h	601;"	d
OVS_USERSPACE_ATTR_PID	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_USERSPACE_ATTR_PID,	      \/* u32 Netlink PID to receive upcalls. *\/$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_PID	include/odp-netlink.h	/^	OVS_USERSPACE_ATTR_PID,	      \/* u32 Netlink PID to receive upcalls. *\/$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_USERSPACE_ATTR_UNSPEC,$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_USERSPACE_ATTR_UNSPEC,$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_USERDATA	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_USERSPACE_ATTR_USERDATA,  \/* Optional user-specified cookie. *\/$/;"	e	enum:ovs_userspace_attr
OVS_USERSPACE_ATTR_USERDATA	include/odp-netlink.h	/^	OVS_USERSPACE_ATTR_USERDATA,  \/* Optional user-specified cookie. *\/$/;"	e	enum:ovs_userspace_attr
OVS_USER_PACKET_QUEUE	datapath-windows/ovsext/Datapath.h	/^typedef struct _OVS_USER_PACKET_QUEUE OVS_USER_PACKET_QUEUE,$/;"	t	typeref:struct:_OVS_USER_PACKET_QUEUE
OVS_USER_PACKET_QUEUE	datapath-windows/ovsext/User.h	/^} OVS_USER_PACKET_QUEUE, *POVS_USER_PACKET_QUEUE;$/;"	t	typeref:struct:_OVS_USER_PACKET_QUEUE
OVS_USER_PARAMS_CONTEXT	datapath-windows/ovsext/Datapath.h	/^} OVS_USER_PARAMS_CONTEXT, *POVS_USER_PARAMS_CONTEXT;$/;"	t	typeref:struct:_OVS_USER_PARAMS_CONTEXT
OVS_USER_POOL_TAG	datapath-windows/ovsext/Util.h	34;"	d
OVS_USER_STATS	datapath-windows/ovsext/User.h	/^} OVS_USER_STATS, *POVS_USER_STATS;$/;"	t	typeref:struct:_OVS_USER_STATS
OVS_USE_COMPAT_GSO_SEGMENTATION	datapath/linux/compat/include/linux/netdevice.h	92;"	d
OVS_VARIABLE_SIZE_NBL_POOL_TAG	datapath-windows/ovsext/Util.h	22;"	d
OVS_VERIFY_IRQL	datapath-windows/ovsext/Debug.h	75;"	d
OVS_VERIFY_IRQL	datapath-windows/ovsext/Debug.h	88;"	d
OVS_VERIFY_IRQL_LE	datapath-windows/ovsext/Debug.h	81;"	d
OVS_VERIFY_IRQL_LE	datapath-windows/ovsext/Debug.h	89;"	d
OVS_VPORT_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	285;"	d
OVS_VPORT_ATTR_MAX	include/odp-netlink.h	290;"	d
OVS_VPORT_ATTR_NAME	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_ATTR_NAME,	\/* string name, up to IFNAMSIZ bytes long *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_NAME	include/odp-netlink.h	/^	OVS_VPORT_ATTR_NAME,	\/* string name, up to IFNAMSIZ bytes long *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_OPTIONS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_ATTR_OPTIONS, \/* nested attributes, varies by vport type *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_OPTIONS	include/odp-netlink.h	/^	OVS_VPORT_ATTR_OPTIONS, \/* nested attributes, varies by vport type *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_PORT_NO	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_ATTR_PORT_NO,	\/* u32 port number within datapath *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_PORT_NO	include/odp-netlink.h	/^	OVS_VPORT_ATTR_PORT_NO,	\/* u32 port number within datapath *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_STATS	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_ATTR_STATS,	\/* struct ovs_vport_stats *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_STATS	include/odp-netlink.h	/^	OVS_VPORT_ATTR_STATS,	\/* struct ovs_vport_stats *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_TYPE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_ATTR_TYPE,	\/* u32 OVS_VPORT_TYPE_* constant. *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_TYPE	include/odp-netlink.h	/^	OVS_VPORT_ATTR_TYPE,	\/* u32 OVS_VPORT_TYPE_* constant. *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_ATTR_UNSPEC,$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_UNSPEC	include/odp-netlink.h	/^	OVS_VPORT_ATTR_UNSPEC,$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_UPCALL_PID	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_ATTR_UPCALL_PID, \/* array of u32 Netlink socket PIDs for *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_ATTR_UPCALL_PID	include/odp-netlink.h	/^	OVS_VPORT_ATTR_UPCALL_PID, \/* array of u32 Netlink socket PIDs for *\/$/;"	e	enum:ovs_vport_attr
OVS_VPORT_CMD_DEL	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_CMD_DEL,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_DEL	include/odp-netlink.h	/^	OVS_VPORT_CMD_DEL,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_GET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_CMD_GET,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_GET	include/odp-netlink.h	/^	OVS_VPORT_CMD_GET,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_NEW	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_CMD_NEW,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_NEW	include/odp-netlink.h	/^	OVS_VPORT_CMD_NEW,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_SET	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_CMD_SET$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_SET	include/odp-netlink.h	/^	OVS_VPORT_CMD_SET$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_CMD_UNSPEC,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_CMD_UNSPEC	include/odp-netlink.h	/^	OVS_VPORT_CMD_UNSPEC,$/;"	e	enum:ovs_vport_cmd
OVS_VPORT_DEFAULT_WAIT_TIME_MICROSEC	datapath-windows/ovsext/Vport.c	49;"	d	file:
OVS_VPORT_DPDK	lib/netdev-dpdk.c	63;"	d	file:
OVS_VPORT_ENTRY	datapath-windows/ovsext/Vport.h	/^} OVS_VPORT_ENTRY, *POVS_VPORT_ENTRY;$/;"	t	typeref:struct:_OVS_VPORT_ENTRY
OVS_VPORT_ERR_STATS	datapath-windows/ovsext/Vport.h	/^    OVS_VPORT_ERR_STATS;$/;"	m	struct:_OVS_VPORT_FULL_STATS
OVS_VPORT_ERR_STATS	datapath-windows/ovsext/Vport.h	/^} OVS_VPORT_ERR_STATS;$/;"	t	typeref:struct:_OVS_VPORT_ERR_STATS
OVS_VPORT_EXT_INFO	datapath-windows/ovsext/DpInternal.h	/^} OVS_VPORT_EXT_INFO, *POVS_VPORT_EXT_INFO;$/;"	t	typeref:struct:_OVS_VPORT_EXT_INFO
OVS_VPORT_FAMILY	datapath/linux/compat/include/linux/openvswitch.h	217;"	d
OVS_VPORT_FAMILY	include/odp-netlink.h	222;"	d
OVS_VPORT_FULL_STATS	datapath-windows/ovsext/Vport.h	/^}OVS_VPORT_FULL_STATS;$/;"	t	typeref:struct:_OVS_VPORT_FULL_STATS
OVS_VPORT_GET	datapath-windows/ovsext/DpInternal.h	/^} OVS_VPORT_GET, *POVS_VPORT_GET;$/;"	t	typeref:struct:_OVS_VPORT_GET
OVS_VPORT_MASK	datapath-windows/ovsext/Switch.h	30;"	d
OVS_VPORT_MCGROUP	datapath/linux/compat/include/linux/openvswitch.h	218;"	d
OVS_VPORT_MCGROUP	include/odp-netlink.h	223;"	d
OVS_VPORT_POOL_TAG	datapath-windows/ovsext/Util.h	35;"	d
OVS_VPORT_STATE	datapath-windows/ovsext/Vport.h	/^} OVS_VPORT_STATE;$/;"	t	typeref:enum:__anon26
OVS_VPORT_STATS	datapath-windows/ovsext/Vport.h	/^    OVS_VPORT_STATS;$/;"	m	struct:_OVS_VPORT_FULL_STATS
OVS_VPORT_STATS	datapath-windows/ovsext/Vport.h	/^} OVS_VPORT_STATS;$/;"	t	typeref:struct:_OVS_VPORT_STATS
OVS_VPORT_TYPE	datapath-windows/include/OvsDpInterfaceExt.h	/^typedef enum ovs_vport_type OVS_VPORT_TYPE;$/;"	t	typeref:enum:ovs_vport_type
OVS_VPORT_TYPE_GENEVE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_GENEVE,	 \/* Geneve tunnel. *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_GENEVE	include/odp-netlink.h	/^	OVS_VPORT_TYPE_GENEVE,	 \/* Geneve tunnel. *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_GRE	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_GRE,      \/* GRE tunnel. *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_GRE	include/odp-netlink.h	/^	OVS_VPORT_TYPE_GRE,      \/* GRE tunnel. *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_INTERNAL	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_INTERNAL, \/* network device implemented by datapath *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_INTERNAL	include/odp-netlink.h	/^	OVS_VPORT_TYPE_INTERNAL, \/* network device implemented by datapath *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_LISP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_LISP = 105,  \/* LISP tunnel *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_LISP	include/odp-netlink.h	/^	OVS_VPORT_TYPE_LISP = 105,  \/* LISP tunnel *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_MAX	datapath/linux/compat/include/linux/openvswitch.h	241;"	d
OVS_VPORT_TYPE_MAX	include/odp-netlink.h	246;"	d
OVS_VPORT_TYPE_NETDEV	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_NETDEV,   \/* network device *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_NETDEV	include/odp-netlink.h	/^	OVS_VPORT_TYPE_NETDEV,   \/* network device *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_STT	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_STT = 106, \/* STT tunnel *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_STT	include/odp-netlink.h	/^	OVS_VPORT_TYPE_STT = 106, \/* STT tunnel *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_UNSPEC,$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_UNSPEC	include/odp-netlink.h	/^	OVS_VPORT_TYPE_UNSPEC,$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_VXLAN	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VPORT_TYPE_VXLAN,	 \/* VXLAN tunnel. *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_TYPE_VXLAN	include/odp-netlink.h	/^	OVS_VPORT_TYPE_VXLAN,	 \/* VXLAN tunnel. *\/$/;"	e	enum:ovs_vport_type
OVS_VPORT_VERSION	datapath/linux/compat/include/linux/openvswitch.h	219;"	d
OVS_VPORT_VERSION	include/odp-netlink.h	224;"	d
OVS_VSCTL	utilities/bugtool/ovs-bugtool	/^OVS_VSCTL = 'ovs-vsctl'$/;"	v
OVS_VXLAN_EXT_GBP	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VXLAN_EXT_GBP,      \/* Flag or __u32 *\/$/;"	e	enum:__anon45
OVS_VXLAN_EXT_GBP	include/odp-netlink.h	/^	OVS_VXLAN_EXT_GBP,      \/* Flag or uint32_t *\/$/;"	e	enum:__anon79
OVS_VXLAN_EXT_MAX	datapath/linux/compat/include/linux/openvswitch.h	293;"	d
OVS_VXLAN_EXT_MAX	include/odp-netlink.h	298;"	d
OVS_VXLAN_EXT_UNSPEC	datapath/linux/compat/include/linux/openvswitch.h	/^	OVS_VXLAN_EXT_UNSPEC,$/;"	e	enum:__anon45
OVS_VXLAN_EXT_UNSPEC	include/odp-netlink.h	/^	OVS_VXLAN_EXT_UNSPEC,$/;"	e	enum:__anon79
OVS_VXLAN_POOL_TAG	datapath-windows/ovsext/Util.h	30;"	d
OVS_VXLAN_VPORT	datapath-windows/ovsext/Vxlan.h	/^} OVS_VXLAN_VPORT, *POVS_VXLAN_VPORT;$/;"	t	typeref:struct:_OVS_VXLAN_VPORT
OVS_VXLAN_VPORT_INDEX	datapath-windows/ovsext/Switch.h	38;"	d
OVS_WARN_UNUSED_RESULT	include/openvswitch/compiler.h	41;"	d
OVS_WARN_UNUSED_RESULT	include/openvswitch/compiler.h	48;"	d
OVS_WIN_CONTROL_ATTR_MAX	datapath-windows/include/OvsDpInterfaceExt.h	101;"	d
OVS_WIN_CONTROL_FAMILY	datapath-windows/include/OvsDpInterfaceExt.h	77;"	d
OVS_WIN_CONTROL_MCGROUP	datapath-windows/include/OvsDpInterfaceExt.h	78;"	d
OVS_WIN_CONTROL_VERSION	datapath-windows/include/OvsDpInterfaceExt.h	79;"	d
OVS_WIN_NETDEV_ATTR_IF_FLAGS	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_ATTR_IF_FLAGS,    \/* Interface flags o the vport. *\/$/;"	e	enum:ovs_win_netdev_attr
OVS_WIN_NETDEV_ATTR_MAC_ADDR	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_ATTR_MAC_ADDR,    \/* MAC address of the vport. *\/$/;"	e	enum:ovs_win_netdev_attr
OVS_WIN_NETDEV_ATTR_MAX	datapath-windows/include/OvsDpInterfaceExt.h	151;"	d
OVS_WIN_NETDEV_ATTR_MTU	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_ATTR_MTU,         \/* MTU of the vport. *\/$/;"	e	enum:ovs_win_netdev_attr
OVS_WIN_NETDEV_ATTR_NAME	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_ATTR_NAME,        \/* string name, up to IFNAMSIZ bytes long. *\/$/;"	e	enum:ovs_win_netdev_attr
OVS_WIN_NETDEV_ATTR_PORT_NO	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_ATTR_PORT_NO,     \/* u32 port number within datapath. *\/$/;"	e	enum:ovs_win_netdev_attr
OVS_WIN_NETDEV_ATTR_TYPE	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_ATTR_TYPE,        \/* u32 OVS_NETDEV_TYPE_* constant. *\/$/;"	e	enum:ovs_win_netdev_attr
OVS_WIN_NETDEV_ATTR_UNSPEC	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_ATTR_UNSPEC,$/;"	e	enum:ovs_win_netdev_attr
OVS_WIN_NETDEV_CMD_GET	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_CMD_GET,     \/* information about the netdev. *\/$/;"	e	enum:ovs_win_netdev_cmd
OVS_WIN_NETDEV_CMD_UNSPEC	datapath-windows/include/OvsDpInterfaceExt.h	/^    OVS_WIN_NETDEV_CMD_UNSPEC,$/;"	e	enum:ovs_win_netdev_cmd
OVS_WIN_NETDEV_FAMILY	datapath-windows/include/OvsDpInterfaceExt.h	106;"	d
OVS_WIN_NETDEV_IFF_PROMISC	datapath-windows/include/OvsDpInterfaceExt.h	154;"	d
OVS_WIN_NETDEV_IFF_UP	datapath-windows/include/OvsDpInterfaceExt.h	153;"	d
OVS_WIN_NETDEV_MCGROUP	datapath-windows/include/OvsDpInterfaceExt.h	107;"	d
OVS_WIN_NETDEV_VERSION	datapath-windows/include/OvsDpInterfaceExt.h	108;"	d
OVS_WIN_NL_CTRL_FAMILY_ID	datapath-windows/include/OvsDpInterfaceExt.h	62;"	d
OVS_WIN_NL_DATAPATH_FAMILY_ID	datapath-windows/include/OvsDpInterfaceExt.h	63;"	d
OVS_WIN_NL_FLOW_FAMILY_ID	datapath-windows/include/OvsDpInterfaceExt.h	66;"	d
OVS_WIN_NL_INVALID_FAMILY_ID	datapath-windows/include/OvsDpInterfaceExt.h	61;"	d
OVS_WIN_NL_INVALID_MCGRP_ID	datapath-windows/include/OvsDpInterfaceExt.h	69;"	d
OVS_WIN_NL_MCGRP_START_ID	datapath-windows/include/OvsDpInterfaceExt.h	70;"	d
OVS_WIN_NL_NETDEV_FAMILY_ID	datapath-windows/include/OvsDpInterfaceExt.h	67;"	d
OVS_WIN_NL_PACKET_FAMILY_ID	datapath-windows/include/OvsDpInterfaceExt.h	64;"	d
OVS_WIN_NL_VPORT_FAMILY_ID	datapath-windows/include/OvsDpInterfaceExt.h	65;"	d
OVS_WIN_NL_VPORT_MCGRP_ID	datapath-windows/include/OvsDpInterfaceExt.h	71;"	d
OVS_WIN_TUNNEL_KEY_SIZE	datapath-windows/ovsext/DpInternal.h	163;"	d
OVS_WRITE_DEV_OP	datapath-windows/ovsext/Datapath.h	33;"	d
OXM_CLASSES	build-aux/extract-ofp-fields	/^OXM_CLASSES = {"NXM_OF_":        (0,          0x0000),$/;"	v
O_DIRECTORY	lib/socket-util-unix.c	45;"	d	file:
OutputFormat	utilities/ovs-dpctl-top	/^class OutputFormat:$/;"	c
Ovs64AlignedBe64	datapath-windows/ovsext/DpInternal.h	/^typedef __declspec(align(8)) ovs_be64 Ovs64AlignedBe64;$/;"	v
Ovs64AlignedU64	datapath-windows/ovsext/DpInternal.h	/^typedef __declspec(align(8)) uint64_t Ovs64AlignedU64;$/;"	v
OvsAcquireCtrlLock	datapath-windows/ovsext/Datapath.c	/^OvsAcquireCtrlLock()$/;"	f
OvsAcquireDatapathRead	datapath-windows/ovsext/Switch.h	/^OvsAcquireDatapathRead(OVS_DATAPATH *datapath,$/;"	f
OvsAcquireDatapathWrite	datapath-windows/ovsext/Switch.h	/^OvsAcquireDatapathWrite(OVS_DATAPATH *datapath,$/;"	f
OvsAcquireEventQueueLock	datapath-windows/ovsext/Event.c	/^OvsAcquireEventQueueLock()$/;"	f	file:
OvsAcquirePidHashLock	datapath-windows/ovsext/User.c	/^OvsAcquirePidHashLock()$/;"	f	file:
OvsAcquireSwitchContext	datapath-windows/ovsext/Switch.c	/^OvsAcquireSwitchContext(VOID)$/;"	f
OvsActionsExecute	datapath-windows/ovsext/Actions.c	/^OvsActionsExecute(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsActivateSwitch	datapath-windows/ovsext/Switch.c	/^OvsActivateSwitch(POVS_SWITCH_CONTEXT switchContext)$/;"	f	file:
OvsAddConfiguredSwitchPorts	datapath-windows/ovsext/Vport.c	/^OvsAddConfiguredSwitchPorts(POVS_SWITCH_CONTEXT switchContext)$/;"	f
OvsAddIPFwdCache	datapath-windows/ovsext/IpHelper.c	/^OvsAddIPFwdCache(POVS_FWD_ENTRY fwdEntry,$/;"	f	file:
OvsAddOpenInstance	datapath-windows/ovsext/Datapath.c	/^OvsAddOpenInstance(POVS_DEVICE_EXTENSION ovsExt,$/;"	f
OvsAddPidInstance	datapath-windows/ovsext/User.c	/^OvsAddPidInstance(POVS_SWITCH_CONTEXT switchContext, UINT32 pid,$/;"	f
OvsAddPktCompletionList	datapath-windows/ovsext/PacketIO.c	/^OvsAddPktCompletionList(OvsCompletionList *completionList,$/;"	f
OvsAddPorts	datapath-windows/ovsext/Actions.c	/^OvsAddPorts(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsAddToSortedNeighList	datapath-windows/ovsext/IpHelper.c	/^OvsAddToSortedNeighList(POVS_IPNEIGH_ENTRY ipn)$/;"	f	file:
OvsAllocateAlignedMemory	datapath-windows/ovsext/Util.c	/^OvsAllocateAlignedMemory(size_t size, UINT16 align)$/;"	f
OvsAllocateFixSizeNBL	datapath-windows/ovsext/BufferMgmt.c	/^OvsAllocateFixSizeNBL(PVOID ovsContext,$/;"	f
OvsAllocateFlowTable	datapath-windows/ovsext/Flow.c	/^OvsAllocateFlowTable(OVS_DATAPATH *datapath,$/;"	f
OvsAllocateForwardingContextForNBL	datapath-windows/ovsext/User.c	/^OvsAllocateForwardingContextForNBL(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsAllocateMDLAndData	datapath-windows/ovsext/BufferMgmt.c	/^OvsAllocateMDLAndData(NDIS_HANDLE ndisHandle,$/;"	f	file:
OvsAllocateMemory	datapath-windows/ovsext/Util.c	/^OvsAllocateMemory(size_t size)$/;"	f
OvsAllocateMemoryWithTag	datapath-windows/ovsext/Util.c	/^OvsAllocateMemoryWithTag(size_t size, ULONG tag)$/;"	f
OvsAllocateNBLContext	datapath-windows/ovsext/BufferMgmt.c	/^OvsAllocateNBLContext(POVS_SWITCH_CONTEXT context,$/;"	f
OvsAllocateNBLFromBuffer	datapath-windows/ovsext/BufferMgmt.c	/^OvsAllocateNBLFromBuffer(PVOID context,$/;"	f
OvsAllocateVariableSizeNBL	datapath-windows/ovsext/BufferMgmt.c	/^OvsAllocateVariableSizeNBL(PVOID ovsContext,$/;"	f
OvsAllocateVport	datapath-windows/ovsext/Vport.c	/^OvsAllocateVport(VOID)$/;"	f
OvsAppendList	datapath-windows/ovsext/Util.c	/^OvsAppendList(PLIST_ENTRY dst, PLIST_ENTRY src)$/;"	f
OvsAppendNativeForwardedPacket	datapath-windows/ovsext/PacketIO.c	/^OvsAppendNativeForwardedPacket(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsCalculateUDPChecksum	datapath-windows/ovsext/Vxlan.c	/^OvsCalculateUDPChecksum(PNET_BUFFER_LIST curNbl,$/;"	f	file:
OvsCancelChangeNotification	datapath-windows/ovsext/IpHelper.c	/^OvsCancelChangeNotification()$/;"	f	file:
OvsCancelFwdIpHelperRequest	datapath-windows/ovsext/IpHelper.c	/^OvsCancelFwdIpHelperRequest(PNET_BUFFER_LIST nbl)$/;"	f
OvsCancelIrp	datapath-windows/ovsext/Event.c	/^OvsCancelIrp(PDEVICE_OBJECT deviceObject,$/;"	f
OvsCancelIrpDatapath	datapath-windows/ovsext/User.c	/^OvsCancelIrpDatapath(PDEVICE_OBJECT deviceObject,$/;"	f
OvsChangeCallbackIpInterface	datapath-windows/ovsext/IpHelper.c	/^OvsChangeCallbackIpInterface(PVOID context,$/;"	f	file:
OvsChangeCallbackIpRoute	datapath-windows/ovsext/IpHelper.c	/^OvsChangeCallbackIpRoute(PVOID context,$/;"	f	file:
OvsChangeCallbackUnicastIpAddress	datapath-windows/ovsext/IpHelper.c	/^OvsChangeCallbackUnicastIpAddress(PVOID context,$/;"	f	file:
OvsCheckOidHeader	datapath-windows/ovsext/Oid.c	82;"	d	file:
OvsCheckOidHeaderFunc	datapath-windows/ovsext/Oid.c	/^OvsCheckOidHeaderFunc(PNDIS_OBJECT_HEADER header,$/;"	f
OvsCleanup	datapath-windows/ovsext/Datapath.c	/^OvsCleanup()$/;"	f
OvsCleanupBufferPool	datapath-windows/ovsext/BufferMgmt.c	/^OvsCleanupBufferPool(PVOID ovsContext)$/;"	f
OvsCleanupDevice	datapath-windows/ovsext/Datapath.c	/^DRIVER_DISPATCH OvsCleanupDevice;$/;"	v
OvsCleanupDevice	datapath-windows/ovsext/Datapath.c	/^OvsCleanupDevice(PDEVICE_OBJECT deviceObject,$/;"	f
OvsCleanupEvent	datapath-windows/ovsext/Event.c	/^OvsCleanupEvent(POVS_OPEN_INSTANCE instance)$/;"	f
OvsCleanupEventQueue	datapath-windows/ovsext/Event.c	/^OvsCleanupEventQueue()$/;"	f
OvsCleanupFwdTable	datapath-windows/ovsext/IpHelper.c	/^OvsCleanupFwdTable(VOID)$/;"	f	file:
OvsCleanupIpHelper	datapath-windows/ovsext/IpHelper.c	/^OvsCleanupIpHelper(VOID)$/;"	f
OvsCleanupIpHelperRequestList	datapath-windows/ovsext/IpHelper.c	/^OvsCleanupIpHelperRequestList(VOID)$/;"	f	file:
OvsCleanupOpenInstance	datapath-windows/ovsext/Datapath.c	/^OvsCleanupOpenInstance(PFILE_OBJECT fileObject)$/;"	f	file:
OvsCleanupPacketQueue	datapath-windows/ovsext/User.c	/^OvsCleanupPacketQueue(POVS_OPEN_INSTANCE instance)$/;"	f
OvsCleanupSttDefragmentation	datapath-windows/ovsext/Stt.c	/^OvsCleanupSttDefragmentation(VOID)$/;"	f
OvsCleanupSttTunnel	datapath-windows/ovsext/Stt.c	/^OvsCleanupSttTunnel(POVS_VPORT_ENTRY vport)$/;"	f
OvsCleanupVxlanTunnel	datapath-windows/ovsext/Vxlan.c	/^OvsCleanupVxlanTunnel(PIRP irp,$/;"	f
OvsClearAllSwitchVports	datapath-windows/ovsext/Vport.c	/^OvsClearAllSwitchVports(POVS_SWITCH_CONTEXT switchContext)$/;"	f
OvsClearTunRxCtx	datapath-windows/ovsext/Actions.c	/^OvsClearTunRxCtx(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsClearTunTxCtx	datapath-windows/ovsext/Actions.c	/^OvsClearTunTxCtx(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsCompareString	datapath-windows/ovsext/Util.c	/^OvsCompareString(PVOID string1, PVOID string2)$/;"	f
OvsCompleteIrpRequest	datapath-windows/ovsext/Datapath.c	/^OvsCompleteIrpRequest(PIRP irp,$/;"	f
OvsCompleteNBL	datapath-windows/ovsext/BufferMgmt.c	/^OvsCompleteNBL(POVS_SWITCH_CONTEXT context,$/;"	f
OvsCompleteNBLForwardingCtx	datapath-windows/ovsext/Actions.c	/^OvsCompleteNBLForwardingCtx(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsCompleteNBLIngress	datapath-windows/ovsext/PacketIO.c	/^OvsCompleteNBLIngress(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsCompletePacketHeader	datapath-windows/ovsext/User.c	/^OvsCompletePacketHeader(UINT8 *packet,$/;"	f	file:
OvsCompletionList	datapath-windows/ovsext/PacketIO.h	/^typedef struct OvsCompletionList {$/;"	s
OvsCompletionList	datapath-windows/ovsext/PacketIO.h	/^} OvsCompletionList;$/;"	t	typeref:struct:OvsCompletionList
OvsComputeVportNo	datapath-windows/ovsext/Vport.c	/^OvsComputeVportNo(POVS_SWITCH_CONTEXT switchContext)$/;"	f	file:
OvsConvertIfCountedStrToAnsiStr	datapath-windows/ovsext/Vport.c	/^OvsConvertIfCountedStrToAnsiStr(PIF_COUNTED_STRING wStr,$/;"	f
OvsCopyNBLInfo	datapath-windows/ovsext/BufferMgmt.c	/^OvsCopyNBLInfo(PNET_BUFFER_LIST srcNbl, PNET_BUFFER_LIST dstNbl,$/;"	f
OvsCopySinglePacketNBL	datapath-windows/ovsext/BufferMgmt.c	/^OvsCopySinglePacketNBL(PVOID ovsContext,$/;"	f	file:
OvsCreateAndAddPackets	datapath-windows/ovsext/User.c	/^OvsCreateAndAddPackets(PVOID userData,$/;"	f
OvsCreateDeviceObject	datapath-windows/ovsext/Datapath.c	/^OvsCreateDeviceObject(NDIS_HANDLE ovsExtDriverHandle)$/;"	f
OvsCreateFwdEntry	datapath-windows/ovsext/IpHelper.c	/^OvsCreateFwdEntry(POVS_FWD_INFO fwdInfo)$/;"	f	file:
OvsCreateIPForwardEntry	datapath-windows/ovsext/IpHelper.c	/^OvsCreateIPForwardEntry(PMIB_IPFORWARD_ROW2 ipRoute)$/;"	f	file:
OvsCreateIPNeighEntry	datapath-windows/ovsext/IpHelper.c	/^OvsCreateIPNeighEntry(PMIB_IPNET_ROW2 ipNeigh)$/;"	f	file:
OvsCreateMsgFromVport	datapath-windows/ovsext/Vport.c	/^OvsCreateMsgFromVport(POVS_VPORT_ENTRY vport,$/;"	f	file:
OvsCreateNewNBLsFromMultipleNBs	datapath-windows/ovsext/PacketIO.c	/^OvsCreateNewNBLsFromMultipleNBs(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsCreateQueueNlPacket	datapath-windows/ovsext/User.c	/^OvsCreateQueueNlPacket(PVOID userData,$/;"	f
OvsCreateSwitch	datapath-windows/ovsext/Switch.c	/^OvsCreateSwitch(NDIS_HANDLE ndisFilterHandle,$/;"	f
OvsDecapSetOffloads	datapath-windows/ovsext/Stt.c	/^OvsDecapSetOffloads(PNET_BUFFER_LIST curNbl, SttHdr *sttHdr)$/;"	f
OvsDecapStt	datapath-windows/ovsext/Stt.c	/^OvsDecapStt(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsDecapVxlan	datapath-windows/ovsext/Vxlan.c	/^OvsDecapVxlan(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsDelPidInstance	datapath-windows/ovsext/User.c	/^OvsDelPidInstance(POVS_SWITCH_CONTEXT switchContext, UINT32 pid)$/;"	f
OvsDeleteDeviceObject	datapath-windows/ovsext/Datapath.c	/^OvsDeleteDeviceObject()$/;"	f
OvsDeleteFlowTable	datapath-windows/ovsext/Flow.c	/^OvsDeleteFlowTable(OVS_DATAPATH *datapath)$/;"	f
OvsDeleteSwitch	datapath-windows/ovsext/Switch.c	/^OvsDeleteSwitch(POVS_SWITCH_CONTEXT switchContext)$/;"	f
OvsDeleteSwitchContext	datapath-windows/ovsext/Switch.c	/^OvsDeleteSwitchContext(POVS_SWITCH_CONTEXT switchContext)$/;"	f	file:
OvsDeleteVportCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsDeleteVportCmdHandler,$/;"	v
OvsDeleteVportCmdHandler	datapath-windows/ovsext/Vport.c	/^OvsDeleteVportCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsDetectTunnelPkt	datapath-windows/ovsext/Actions.c	/^OvsDetectTunnelPkt(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsDetectTunnelRxPkt	datapath-windows/ovsext/Actions.c	/^OvsDetectTunnelRxPkt(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsDeviceControl	datapath-windows/ovsext/Datapath.c	/^OvsDeviceControl(PDEVICE_OBJECT deviceObject,$/;"	f
OvsDoDumpFlows	datapath-windows/ovsext/Flow.c	/^OvsDoDumpFlows(OvsFlowDumpInput *dumpInput,$/;"	f
OvsDoEncapStt	datapath-windows/ovsext/Stt.c	/^OvsDoEncapStt(POVS_VPORT_ENTRY vport,$/;"	f
OvsDoEncapVxlan	datapath-windows/ovsext/Vxlan.c	/^OvsDoEncapVxlan(POVS_VPORT_ENTRY vport,$/;"	f	file:
OvsDoFlowLookupOutput	datapath-windows/ovsext/Actions.c	/^OvsDoFlowLookupOutput(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsDpFillInfo	datapath-windows/ovsext/Datapath.c	/^OvsDpFillInfo(POVS_SWITCH_CONTEXT ovsSwitchContext,$/;"	f	file:
OvsDumpForwardingDetails	datapath-windows/ovsext/BufferMgmt.c	/^OvsDumpForwardingDetails(PNET_BUFFER_LIST nbl)$/;"	f	file:
OvsDumpIPEntry	datapath-windows/ovsext/IpHelper.c	/^OvsDumpIPEntry(PMIB_UNICASTIPADDRESS_ROW ipRow)$/;"	f	file:
OvsDumpIPInterfaceEntry	datapath-windows/ovsext/IpHelper.c	/^OvsDumpIPInterfaceEntry(PMIB_IPINTERFACE_ROW ipRow)$/;"	f	file:
OvsDumpIPNeigh	datapath-windows/ovsext/IpHelper.c	/^OvsDumpIPNeigh(PMIB_IPNET_ROW2 ipNeigh)$/;"	f	file:
OvsDumpIPPath	datapath-windows/ovsext/IpHelper.c	/^OvsDumpIPPath(PMIB_IPPATH_ROW ipPath)$/;"	f	file:
OvsDumpIfRow	datapath-windows/ovsext/IpHelper.c	/^OvsDumpIfRow(PMIB_IF_ROW2 ifRow)$/;"	f	file:
OvsDumpIfTable	datapath-windows/ovsext/IpHelper.c	/^OvsDumpIfTable(PMIB_IF_TABLE2 ifTable)$/;"	f	file:
OvsDumpMDLChain	datapath-windows/ovsext/BufferMgmt.c	/^OvsDumpMDLChain(PMDL mdl)$/;"	f	file:
OvsDumpNBLContext	datapath-windows/ovsext/BufferMgmt.c	/^OvsDumpNBLContext(PNET_BUFFER_LIST nbl)$/;"	f	file:
OvsDumpNetBuffer	datapath-windows/ovsext/BufferMgmt.c	/^OvsDumpNetBuffer(PNET_BUFFER nb)$/;"	f	file:
OvsDumpNetBufferList	datapath-windows/ovsext/BufferMgmt.c	/^OvsDumpNetBufferList(PNET_BUFFER_LIST nbl)$/;"	f	file:
OvsDumpRoute	datapath-windows/ovsext/IpHelper.c	/^OvsDumpRoute(const SOCKADDR_INET *sourceAddress,$/;"	f	file:
OvsEncapStt	datapath-windows/ovsext/Stt.c	/^OvsEncapStt(POVS_VPORT_ENTRY vport,$/;"	f
OvsEncapVxlan	datapath-windows/ovsext/Vxlan.c	/^OvsEncapVxlan(POVS_VPORT_ENTRY vport,$/;"	f
OvsEnqueueIpHelperRequest	datapath-windows/ovsext/IpHelper.c	/^OvsEnqueueIpHelperRequest(POVS_IP_HELPER_REQUEST request)$/;"	f	file:
OvsExecuteDpIoctl	datapath-windows/ovsext/User.c	/^OvsExecuteDpIoctl(OvsPacketExecute *execute)$/;"	f
OvsExecuteSetAction	datapath-windows/ovsext/Actions.c	/^OvsExecuteSetAction(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsExtAttach	datapath-windows/ovsext/Driver.c	/^FILTER_ATTACH OvsExtAttach;$/;"	v
OvsExtAttach	datapath-windows/ovsext/Switch.c	/^OvsExtAttach(NDIS_HANDLE ndisFilterHandle,$/;"	f
OvsExtCancelOidRequest	datapath-windows/ovsext/Driver.c	/^FILTER_CANCEL_OID_REQUEST OvsExtCancelOidRequest;$/;"	v
OvsExtCancelOidRequest	datapath-windows/ovsext/Oid.c	/^OvsExtCancelOidRequest(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtCancelSendNBL	datapath-windows/ovsext/Driver.c	/^FILTER_CANCEL_SEND_NET_BUFFER_LISTS OvsExtCancelSendNBL;$/;"	v
OvsExtCancelSendNBL	datapath-windows/ovsext/PacketIO.c	/^OvsExtCancelSendNBL(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtDetach	datapath-windows/ovsext/Driver.c	/^FILTER_DETACH OvsExtDetach;$/;"	v
OvsExtDetach	datapath-windows/ovsext/Switch.c	/^OvsExtDetach(NDIS_HANDLE filterModuleContext)$/;"	f
OvsExtNetPnPEvent	datapath-windows/ovsext/Driver.c	/^FILTER_NET_PNP_EVENT OvsExtNetPnPEvent;$/;"	v
OvsExtNetPnPEvent	datapath-windows/ovsext/Switch.c	/^OvsExtNetPnPEvent(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtOidRequest	datapath-windows/ovsext/Driver.c	/^FILTER_OID_REQUEST OvsExtOidRequest;$/;"	v
OvsExtOidRequest	datapath-windows/ovsext/Oid.c	/^OvsExtOidRequest(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtOidRequestComplete	datapath-windows/ovsext/Driver.c	/^FILTER_OID_REQUEST_COMPLETE OvsExtOidRequestComplete;$/;"	v
OvsExtOidRequestComplete	datapath-windows/ovsext/Oid.c	/^OvsExtOidRequestComplete(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtPause	datapath-windows/ovsext/Driver.c	/^FILTER_PAUSE OvsExtPause;$/;"	v
OvsExtPause	datapath-windows/ovsext/Switch.c	/^OvsExtPause(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtReceiveNBL	datapath-windows/ovsext/Driver.c	/^FILTER_RECEIVE_NET_BUFFER_LISTS OvsExtReceiveNBL;$/;"	v
OvsExtRestart	datapath-windows/ovsext/Driver.c	/^FILTER_RESTART OvsExtRestart;$/;"	v
OvsExtRestart	datapath-windows/ovsext/Switch.c	/^OvsExtRestart(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtReturnNBL	datapath-windows/ovsext/Driver.c	/^FILTER_RETURN_NET_BUFFER_LISTS OvsExtReturnNBL;$/;"	v
OvsExtSendNBL	datapath-windows/ovsext/Driver.c	/^FILTER_SEND_NET_BUFFER_LISTS OvsExtSendNBL;$/;"	v
OvsExtSendNBL	datapath-windows/ovsext/PacketIO.c	/^OvsExtSendNBL(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtSendNBLComplete	datapath-windows/ovsext/Driver.c	/^FILTER_SEND_NET_BUFFER_LISTS_COMPLETE OvsExtSendNBLComplete;$/;"	v
OvsExtSendNBLComplete	datapath-windows/ovsext/PacketIO.c	/^OvsExtSendNBLComplete(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtStatus	datapath-windows/ovsext/Driver.c	/^FILTER_STATUS OvsExtStatus;$/;"	v
OvsExtStatus	datapath-windows/ovsext/Driver.c	/^OvsExtStatus(NDIS_HANDLE filterModuleContext,$/;"	f
OvsExtUnload	datapath-windows/ovsext/Driver.c	/^DRIVER_UNLOAD OvsExtUnload;$/;"	v
OvsExtUnload	datapath-windows/ovsext/Driver.c	/^OvsExtUnload(struct _DRIVER_OBJECT *driverObject)$/;"	f
OvsExtractFlow	datapath-windows/ovsext/Flow.c	/^OvsExtractFlow(const NET_BUFFER_LIST *packet,$/;"	f
OvsFinalizeCompletionList	datapath-windows/ovsext/PacketIO.c	/^OvsFinalizeCompletionList(OvsCompletionList *completionList)$/;"	f
OvsFindOpenInstance	datapath-windows/ovsext/Datapath.c	/^OvsFindOpenInstance(PFILE_OBJECT fileObject)$/;"	f
OvsFindTunnelVportByDstPort	datapath-windows/ovsext/Vport.c	/^OvsFindTunnelVportByDstPort(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsFindVportByHvNameA	datapath-windows/ovsext/Vport.c	/^OvsFindVportByHvNameA(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsFindVportByHvNameW	datapath-windows/ovsext/Vport.c	/^OvsFindVportByHvNameW(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsFindVportByOvsName	datapath-windows/ovsext/Vport.c	/^OvsFindVportByOvsName(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsFindVportByPortIdAndNicIndex	datapath-windows/ovsext/Vport.c	/^OvsFindVportByPortIdAndNicIndex(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsFindVportByPortNo	datapath-windows/ovsext/Vport.c	/^OvsFindVportByPortNo(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsFlow	datapath-windows/ovsext/Flow.h	/^} OvsFlow;$/;"	t	typeref:struct:_OvsFlow
OvsFlowDumpInput	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsFlowDumpInput {$/;"	s
OvsFlowDumpInput	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowDumpInput;$/;"	t	typeref:struct:OvsFlowDumpInput
OvsFlowDumpOutput	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsFlowDumpOutput {$/;"	s
OvsFlowDumpOutput	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowDumpOutput;$/;"	t	typeref:struct:OvsFlowDumpOutput
OvsFlowGetInput	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsFlowGetInput {$/;"	s
OvsFlowGetInput	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowGetInput;$/;"	t	typeref:struct:OvsFlowGetInput
OvsFlowGetOutput	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsFlowGetOutput {$/;"	s
OvsFlowGetOutput	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowGetOutput;$/;"	t	typeref:struct:OvsFlowGetOutput
OvsFlowInfo	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsFlowInfo {$/;"	s
OvsFlowInfo	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowInfo;$/;"	t	typeref:struct:OvsFlowInfo
OvsFlowKey	datapath-windows/ovsext/DpInternal.h	/^typedef __declspec(align(8)) struct OvsFlowKey {$/;"	s
OvsFlowKey	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowKey;$/;"	v	typeref:struct:OvsFlowKey
OvsFlowKeyAttrSize	datapath-windows/ovsext/Flow.c	/^OvsFlowKeyAttrSize(void)$/;"	f
OvsFlowNlCmdHandler	datapath-windows/ovsext/Flow.c	/^OvsFlowNlCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsFlowNlGetCmdHandler	datapath-windows/ovsext/Flow.c	/^OvsFlowNlGetCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsFlowPut	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsFlowPut {$/;"	s
OvsFlowPut	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowPut;$/;"	t	typeref:struct:OvsFlowPut
OvsFlowPutFlags	datapath-windows/ovsext/DpInternal.h	/^typedef enum OvsFlowPutFlags {$/;"	g
OvsFlowPutFlags	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowPutFlags;$/;"	t	typeref:enum:OvsFlowPutFlags
OvsFlowStats	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsFlowStats {$/;"	s
OvsFlowStats	datapath-windows/ovsext/DpInternal.h	/^} OvsFlowStats;$/;"	t	typeref:struct:OvsFlowStats
OvsFlowUsed	datapath-windows/ovsext/Flow.c	/^OvsFlowUsed(OvsFlow *flow,$/;"	f
OvsFlushFlowIoctl	datapath-windows/ovsext/Flow.c	/^OvsFlushFlowIoctl(UINT32 dpNo)$/;"	f
OvsForwardingContext	datapath-windows/ovsext/Actions.c	/^typedef struct OvsForwardingContext {$/;"	s	file:
OvsForwardingContext	datapath-windows/ovsext/Actions.c	/^} OvsForwardingContext;$/;"	t	typeref:struct:OvsForwardingContext	file:
OvsFreeAlignedMemory	datapath-windows/ovsext/Util.c	/^OvsFreeAlignedMemory(VOID *ptr)$/;"	f
OvsFreeMDLAndData	datapath-windows/ovsext/BufferMgmt.c	/^OvsFreeMDLAndData(PMDL mdl)$/;"	f	file:
OvsFreeMemory	datapath-windows/ovsext/Util.c	/^OvsFreeMemory(VOID *ptr)$/;"	f
OvsFreeMemoryWithTag	datapath-windows/ovsext/Util.c	/^OvsFreeMemoryWithTag(VOID *ptr, ULONG tag)$/;"	f
OvsFreeNBLContext	datapath-windows/ovsext/BufferMgmt.c	/^OvsFreeNBLContext(POVS_SWITCH_CONTEXT context,$/;"	f
OvsFreeSwitchNicsArray	datapath-windows/ovsext/Oid.c	/^VOID OvsFreeSwitchNicsArray(PNDIS_SWITCH_NIC_ARRAY nicsArray)$/;"	f
OvsFreeSwitchPortsArray	datapath-windows/ovsext/Oid.c	/^VOID OvsFreeSwitchPortsArray(PNDIS_SWITCH_PORT_ARRAY portsArray)$/;"	f
OvsFullCopyNBL	datapath-windows/ovsext/BufferMgmt.c	/^OvsFullCopyNBL(PVOID ovsContext,$/;"	f
OvsFullCopyToMultipleNBLs	datapath-windows/ovsext/BufferMgmt.c	/^OvsFullCopyToMultipleNBLs(PVOID ovsContext,$/;"	f
OvsFwdIPHelperRequest	datapath-windows/ovsext/IpHelper.c	/^OvsFwdIPHelperRequest(PNET_BUFFER_LIST nbl,$/;"	f
OvsGeneratePacketKey	datapath-windows/ovsext/Stt.c	/^OvsGeneratePacketKey(IPHdr *ipHdr, TCPHdr *tcpHdr)$/;"	f	file:
OvsGetArp	datapath-windows/ovsext/PacketParser.h	/^OvsGetArp(const NET_BUFFER_LIST *packet,$/;"	f
OvsGetCtxSourcePortNo	datapath-windows/ovsext/BufferMgmt.c	/^OvsGetCtxSourcePortNo(PNET_BUFFER_LIST nbl,$/;"	f
OvsGetDpCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsGetDpCmdHandler,$/;"	v	file:
OvsGetDpCmdHandler	datapath-windows/ovsext/Datapath.c	/^OvsGetDpCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsGetExtInfoIoctl	datapath-windows/ovsext/Vport.c	/^OvsGetExtInfoIoctl(POVS_VPORT_GET vportGet,$/;"	f
OvsGetExternalMtu	datapath-windows/ovsext/Vport.h	/^OvsGetExternalMtu(POVS_SWITCH_CONTEXT switchContext)$/;"	f
OvsGetExternalVport	datapath-windows/ovsext/Vport.h	/^OvsGetExternalVport(POVS_SWITCH_CONTEXT switchContext)$/;"	f
OvsGetFlowIoctl	datapath-windows/ovsext/Flow.c	/^OvsGetFlowIoctl(PVOID inputBuffer,$/;"	f
OvsGetIPEntry	datapath-windows/ovsext/IpHelper.c	/^OvsGetIPEntry(NET_LUID interfaceLuid,$/;"	f
OvsGetIPInterfaceEntry	datapath-windows/ovsext/IpHelper.c	/^OvsGetIPInterfaceEntry(NET_LUID luid,$/;"	f
OvsGetIPNeighEntry	datapath-windows/ovsext/IpHelper.c	/^OvsGetIPNeighEntry(PMIB_IPNET_ROW2 ipNeigh)$/;"	f
OvsGetIPPathEntry	datapath-windows/ovsext/IpHelper.c	/^OvsGetIPPathEntry(PMIB_IPPATH_ROW ipPath)$/;"	f
OvsGetIcmp	datapath-windows/ovsext/PacketParser.h	/^OvsGetIcmp(const NET_BUFFER_LIST *packet,$/;"	f
OvsGetIfEntry	datapath-windows/ovsext/IpHelper.c	/^OvsGetIfEntry(GUID *interfaceGuid, PMIB_IF_ROW2 ifEntry)$/;"	f
OvsGetIp	datapath-windows/ovsext/PacketParser.h	/^OvsGetIp(const NET_BUFFER_LIST *packet,$/;"	f
OvsGetNetdevCmdHandler	datapath-windows/ovsext/Datapath.c	/^NetlinkCmdHandler        OvsGetNetdevCmdHandler,$/;"	v
OvsGetNetdevCmdHandler	datapath-windows/ovsext/Vport.c	/^OvsGetNetdevCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsGetNextPacket	datapath-windows/ovsext/User.c	/^OvsGetNextPacket(POVS_OPEN_INSTANCE instance)$/;"	f
OvsGetNicsOnSwitch	datapath-windows/ovsext/Oid.c	/^OvsGetNicsOnSwitch(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsGetOpenInstance	datapath-windows/ovsext/Datapath.c	/^OvsGetOpenInstance(PFILE_OBJECT fileObject,$/;"	f
OvsGetOrResolveIPNeigh	datapath-windows/ovsext/IpHelper.c	/^OvsGetOrResolveIPNeigh(UINT32 ipAddr,$/;"	f
OvsGetPacketBytes	datapath-windows/ovsext/PacketParser.c	/^OvsGetPacketBytes(const NET_BUFFER_LIST *nbl,$/;"	f
OvsGetPid	datapath-windows/ovsext/User.c	/^OvsGetPid(POVS_VPORT_ENTRY vport, PNET_BUFFER nb, UINT32 *pid)$/;"	f	file:
OvsGetPidHandler	datapath-windows/ovsext/Datapath.c	/^OvsGetPidHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsGetPidInstance	datapath-windows/ovsext/User.c	/^OvsGetPidInstance(POVS_SWITCH_CONTEXT switchContext, UINT32 pid)$/;"	f
OvsGetPortsOnSwitch	datapath-windows/ovsext/Oid.c	/^OvsGetPortsOnSwitch(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsGetQueue	datapath-windows/ovsext/User.c	/^OvsGetQueue(UINT32 pid)$/;"	f
OvsGetRoute	datapath-windows/ovsext/IpHelper.c	/^OvsGetRoute(NET_LUID interfaceLuid,$/;"	f
OvsGetSendCompleteFlags	datapath-windows/ovsext/PacketIO.c	/^OvsGetSendCompleteFlags(ULONG sendFlags)$/;"	f	file:
OvsGetSttTunHdrSize	datapath-windows/ovsext/Stt.h	/^OvsGetSttTunHdrSize(VOID)$/;"	f
OvsGetTcp	datapath-windows/ovsext/PacketParser.h	/^OvsGetTcp(const NET_BUFFER_LIST *packet,$/;"	f
OvsGetTcpCtl	datapath-windows/ovsext/PacketParser.h	/^OvsGetTcpCtl(const NET_BUFFER_LIST *packet, \/\/ IN$/;"	f
OvsGetTcpFlags	datapath-windows/ovsext/PacketParser.h	/^OvsGetTcpFlags(const NET_BUFFER_LIST *packet,    \/\/ IN$/;"	f
OvsGetUdp	datapath-windows/ovsext/PacketParser.h	/^OvsGetUdp(const NET_BUFFER_LIST *packet,$/;"	f
OvsGetUpcallMsgSize	datapath-windows/ovsext/User.c	/^OvsGetUpcallMsgSize(PVOID userData,$/;"	f	file:
OvsGetVport	datapath-windows/ovsext/Vport.c	/^OvsGetVport(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsGetVportCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsGetVportCmdHandler,$/;"	v
OvsGetVportCmdHandler	datapath-windows/ovsext/Vport.c	/^OvsGetVportCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsGetVportDumpNext	datapath-windows/ovsext/Vport.c	/^OvsGetVportDumpNext(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsGetVxlanTunHdrSize	datapath-windows/ovsext/Vxlan.h	/^OvsGetVxlanTunHdrSize(VOID)$/;"	f
OvsHandleFwdRequest	datapath-windows/ovsext/IpHelper.c	/^OvsHandleFwdRequest(POVS_IP_HELPER_REQUEST request)$/;"	f	file:
OvsHandleIPNeighTimeout	datapath-windows/ovsext/IpHelper.c	/^OvsHandleIPNeighTimeout(UINT32 ipAddr)$/;"	f	file:
OvsHandleInternalAdapterUp	datapath-windows/ovsext/IpHelper.c	/^OvsHandleInternalAdapterUp(POVS_IP_HELPER_REQUEST request)$/;"	f	file:
OvsHashFlow	datapath-windows/ovsext/Flow.c	/^OvsHashFlow(const OvsFlowKey *key)$/;"	f
OvsHashIPPrefix	datapath-windows/ovsext/IpHelper.c	/^OvsHashIPPrefix(PIP_ADDRESS_PREFIX prefix)$/;"	f	file:
OvsIPHelperCallback	datapath-windows/ovsext/IpHelper.h	/^typedef VOID (*OvsIPHelperCallback)(PNET_BUFFER_LIST nbl,$/;"	t
OvsIPv4TunnelKey	datapath-windows/ovsext/DpInternal.h	/^typedef union OvsIPv4TunnelKey {$/;"	u
OvsIPv4TunnelKey	datapath-windows/ovsext/DpInternal.h	/^} OvsIPv4TunnelKey;$/;"	t	typeref:union:OvsIPv4TunnelKey
OvsInit	datapath-windows/ovsext/Datapath.c	/^OvsInit()$/;"	f
OvsInitBridgeInternalVport	datapath-windows/ovsext/Vport.c	/^OvsInitBridgeInternalVport(POVS_VPORT_ENTRY vport)$/;"	f
OvsInitBufferPool	datapath-windows/ovsext/BufferMgmt.c	/^OvsInitBufferPool(PVOID ovsContext)$/;"	f
OvsInitCompletionList	datapath-windows/ovsext/PacketIO.c	/^OvsInitCompletionList(OvsCompletionList *completionList,$/;"	f
OvsInitConfiguredSwitchNics	datapath-windows/ovsext/Vport.c	/^OvsInitConfiguredSwitchNics(POVS_SWITCH_CONTEXT switchContext)$/;"	f
OvsInitEventQueue	datapath-windows/ovsext/Event.c	/^OvsInitEventQueue()$/;"	f
OvsInitExternalNBLContext	datapath-windows/ovsext/BufferMgmt.c	/^OvsInitExternalNBLContext(PVOID ovsContext,$/;"	f
OvsInitForwardingCtx	datapath-windows/ovsext/Actions.c	/^OvsInitForwardingCtx(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsInitIpHelper	datapath-windows/ovsext/IpHelper.c	/^OvsInitIpHelper(NDIS_HANDLE ndisFilterHandle)$/;"	f
OvsInitNBLContext	datapath-windows/ovsext/BufferMgmt.c	/^OvsInitNBLContext(POVS_BUFFER_CONTEXT ctx,$/;"	f	file:
OvsInitPhysNicVport	datapath-windows/ovsext/Vport.c	/^OvsInitPhysNicVport(POVS_VPORT_ENTRY physExtVport,$/;"	f	file:
OvsInitSttDefragmentation	datapath-windows/ovsext/Stt.c	/^OvsInitSttDefragmentation()$/;"	f
OvsInitSttTunnel	datapath-windows/ovsext/Stt.c	/^OvsInitSttTunnel(POVS_VPORT_ENTRY vport,$/;"	f
OvsInitSwitchContext	datapath-windows/ovsext/Switch.c	/^OvsInitSwitchContext(POVS_SWITCH_CONTEXT switchContext)$/;"	f	file:
OvsInitTunnelFilter	datapath-windows/ovsext/TunnelFilter.c	/^OvsInitTunnelFilter(PDRIVER_OBJECT driverObject, PVOID deviceObject)$/;"	f
OvsInitTunnelVport	datapath-windows/ovsext/Vport.c	/^OvsInitTunnelVport(PVOID userContext,$/;"	f
OvsInitVportWithNicParam	datapath-windows/ovsext/Vport.c	/^OvsInitVportWithNicParam(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsInitVportWithPortParam	datapath-windows/ovsext/Vport.c	/^OvsInitVportWithPortParam(POVS_VPORT_ENTRY vport,$/;"	f	file:
OvsInitVxlanTunnel	datapath-windows/ovsext/Vxlan.c	/^OvsInitVxlanTunnel(PIRP irp,$/;"	f
OvsInjectPacketThroughActions	datapath-windows/ovsext/Tunnel.c	/^OvsInjectPacketThroughActions(PNET_BUFFER_LIST pNbl,$/;"	f	file:
OvsInternalAdapterDown	datapath-windows/ovsext/IpHelper.c	/^OvsInternalAdapterDown(VOID)$/;"	f
OvsInternalAdapterUp	datapath-windows/ovsext/IpHelper.c	/^OvsInternalAdapterUp(UINT32 portNo,$/;"	f
OvsIsBridgeInternalVport	datapath-windows/ovsext/Vport.h	/^OvsIsBridgeInternalVport(POVS_VPORT_ENTRY vport)$/;"	f
OvsIsInternalVportType	datapath-windows/ovsext/Vport.h	/^OvsIsInternalVportType(OVS_VPORT_TYPE ovsType)$/;"	f
OvsIsTunnelFilterCreated	datapath-windows/ovsext/Vxlan.c	/^OvsIsTunnelFilterCreated(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsIsTunnelVportType	datapath-windows/ovsext/Vport.h	/^OvsIsTunnelVportType(OVS_VPORT_TYPE ovsType)$/;"	f
OvsIssueOidRequest	datapath-windows/ovsext/Oid.c	/^OvsIssueOidRequest(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsJhashBytes	datapath-windows/ovsext/Jhash.c	/^OvsJhashBytes(const VOID *p_, SIZE_T n, UINT32 basis)$/;"	f
OvsJhashWords	datapath-windows/ovsext/Jhash.c	/^OvsJhashWords(const UINT32 *p, SIZE_T n, UINT32 basis)$/;"	f
OvsLayers	datapath-windows/ovsext/Flow.h	/^} OvsLayers;$/;"	t	typeref:struct:_OvsLayers
OvsLog	datapath-windows/ovsext/Debug.c	/^OvsLog(UINT32 level,$/;"	f
OvsLookupFlow	datapath-windows/ovsext/Flow.c	/^OvsLookupFlow(OVS_DATAPATH *datapath,$/;"	f
OvsLookupFlowOutput	datapath-windows/ovsext/Actions.c	/^OvsLookupFlowOutput(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsLookupIPForwardEntry	datapath-windows/ovsext/IpHelper.c	/^OvsLookupIPForwardEntry(PIP_ADDRESS_PREFIX prefix)$/;"	f	file:
OvsLookupIPFwdEntry	datapath-windows/ovsext/IpHelper.c	/^OvsLookupIPFwdEntry(UINT32 dstIp)$/;"	f	file:
OvsLookupIPFwdInfo	datapath-windows/ovsext/IpHelper.c	/^OvsLookupIPFwdInfo(UINT32 dstIp,$/;"	f
OvsLookupIPNeighEntry	datapath-windows/ovsext/IpHelper.c	/^OvsLookupIPNeighEntry(UINT32 ipAddr)$/;"	f	file:
OvsLookupPktFrag	datapath-windows/ovsext/Stt.c	/^OvsLookupPktFrag(OVS_STT_PKT_KEY *pktKey, UINT32 hash)$/;"	f	file:
OvsNewDpCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsNewDpCmdHandler,$/;"	v	file:
OvsNewDpCmdHandler	datapath-windows/ovsext/Datapath.c	/^OvsNewDpCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsNewVportCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsNewVportCmdHandler,$/;"	v
OvsNewVportCmdHandler	datapath-windows/ovsext/Vport.c	/^OvsNewVportCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsNlExecuteCmdHandler	datapath-windows/ovsext/User.c	/^OvsNlExecuteCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsOidGetContext	datapath-windows/ovsext/Oid.c	/^OvsOidGetContext(PNDIS_OID_REQUEST clonedRequest)$/;"	f	file:
OvsOidGetOrigRequest	datapath-windows/ovsext/Oid.c	/^OvsOidGetOrigRequest(PNDIS_OID_REQUEST clonedRequest)$/;"	f	file:
OvsOidRequestCompleteMethod	datapath-windows/ovsext/Oid.c	/^OvsOidRequestCompleteMethod(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsOidRequestCompleteQuery	datapath-windows/ovsext/Oid.c	/^OvsOidRequestCompleteQuery(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsOidRequestCompleteSetInfo	datapath-windows/ovsext/Oid.c	/^OvsOidRequestCompleteSetInfo(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsOidSetContext	datapath-windows/ovsext/Oid.c	/^OvsOidSetContext(PNDIS_OID_REQUEST clonedRequest,$/;"	f	file:
OvsOidSetOrigRequest	datapath-windows/ovsext/Oid.c	/^OvsOidSetOrigRequest(PNDIS_OID_REQUEST clonedRequest,$/;"	f	file:
OvsOpenCloseDevice	datapath-windows/ovsext/Datapath.c	/^OvsOpenCloseDevice(PDEVICE_OBJECT deviceObject,$/;"	f
OvsOutputBeforeSetAction	datapath-windows/ovsext/Actions.c	/^OvsOutputBeforeSetAction(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsOutputForwardingCtx	datapath-windows/ovsext/Actions.c	/^OvsOutputForwardingCtx(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsPacketExecute	datapath-windows/ovsext/DpInternal.h	/^typedef struct OvsPacketExecute {$/;"	s
OvsPacketExecute	datapath-windows/ovsext/DpInternal.h	/^} OvsPacketExecute;$/;"	t	typeref:struct:OvsPacketExecute
OvsPacketLenNBL	datapath-windows/ovsext/PacketParser.h	/^OvsPacketLenNBL(const NET_BUFFER_LIST *_pNB)$/;"	f
OvsParseIPv6	datapath-windows/ovsext/PacketParser.c	/^OvsParseIPv6(const NET_BUFFER_LIST *packet,$/;"	f
OvsParseIcmpV6	datapath-windows/ovsext/PacketParser.c	/^OvsParseIcmpV6(const NET_BUFFER_LIST *packet,$/;"	f
OvsParseTcp	datapath-windows/ovsext/PacketParser.c	/^OvsParseTcp(const NET_BUFFER_LIST *packet,$/;"	f
OvsParseUdp	datapath-windows/ovsext/PacketParser.c	/^OvsParseUdp(const NET_BUFFER_LIST *packet,$/;"	f
OvsPartialCopyNBL	datapath-windows/ovsext/BufferMgmt.c	/^OvsPartialCopyNBL(PVOID ovsContext,$/;"	f
OvsPartialCopyToMultipleNBLs	datapath-windows/ovsext/BufferMgmt.c	/^OvsPartialCopyToMultipleNBLs(PVOID ovsContext,$/;"	f
OvsPendEventCmdHandler	datapath-windows/ovsext/Datapath.c	/^OvsPendEventCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsPendEventCmdHandler	datapath-windows/ovsext/Datapath.c	/^static NetlinkCmdHandler OvsPendEventCmdHandler,$/;"	v	file:
OvsPendPacketCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsPendPacketCmdHandler,$/;"	v
OvsPendPacketCmdHandler	datapath-windows/ovsext/User.c	/^OvsPendPacketCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsPopVlanInPktBuf	datapath-windows/ovsext/Actions.c	/^OvsPopVlanInPktBuf(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsPortFillInfo	datapath-windows/ovsext/Datapath.c	/^OvsPortFillInfo(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsPostEvent	datapath-windows/ovsext/Event.c	/^OvsPostEvent(UINT32 portNo,$/;"	f
OvsPrepareFlow	datapath-windows/ovsext/Flow.c	/^OvsPrepareFlow(OvsFlow **flow,$/;"	f	file:
OvsProcessMethodOid	datapath-windows/ovsext/Oid.c	/^OvsProcessMethodOid(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsProcessSetOid	datapath-windows/ovsext/Oid.c	/^OvsProcessSetOid(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsProcessSetOidNic	datapath-windows/ovsext/Oid.c	/^OvsProcessSetOidNic(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsProcessSetOidPort	datapath-windows/ovsext/Oid.c	/^OvsProcessSetOidPort(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsProcessSetOidPortProp	datapath-windows/ovsext/Oid.c	/^OvsProcessSetOidPortProp(POVS_SWITCH_CONTEXT switchObject,$/;"	f	file:
OvsPurgeDpIoctl	datapath-windows/ovsext/User.c	/^OvsPurgeDpIoctl(PFILE_OBJECT fileObject)$/;"	f
OvsPurgePacketQueue	datapath-windows/ovsext/User.c	/^OvsPurgePacketQueue(POVS_USER_PACKET_QUEUE queue,$/;"	f	file:
OvsPutFlowIoctl	datapath-windows/ovsext/Flow.c	/^OvsPutFlowIoctl(PVOID inputBuffer,$/;"	f
OvsQuerySwitchActivationComplete	datapath-windows/ovsext/Oid.c	/^OvsQuerySwitchActivationComplete(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsQueuePackets	datapath-windows/ovsext/User.c	/^OvsQueuePackets(PLIST_ENTRY packetList,$/;"	f
OvsReadDpIoctl	datapath-windows/ovsext/User.c	/^OvsReadDpIoctl(PFILE_OBJECT fileObject,$/;"	f
OvsReadEventCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsReadEventCmdHandler,$/;"	v	file:
OvsReadEventCmdHandler	datapath-windows/ovsext/Datapath.c	/^OvsReadEventCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsReadPacketCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsReadPacketCmdHandler;$/;"	v
OvsReadPacketCmdHandler	datapath-windows/ovsext/User.c	/^OvsReadPacketCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsRegisterChangeNotification	datapath-windows/ovsext/IpHelper.c	/^OvsRegisterChangeNotification()$/;"	f	file:
OvsRegisterSystemProvider	datapath-windows/ovsext/TunnelFilter.c	/^OvsRegisterSystemProvider(PVOID deviceObject)$/;"	f
OvsReleaseCtrlLock	datapath-windows/ovsext/Datapath.c	/^OvsReleaseCtrlLock()$/;"	f
OvsReleaseDatapath	datapath-windows/ovsext/Switch.h	/^OvsReleaseDatapath(OVS_DATAPATH *datapath,$/;"	f
OvsReleaseEventQueueLock	datapath-windows/ovsext/Event.c	/^OvsReleaseEventQueueLock()$/;"	f	file:
OvsReleasePidHashLock	datapath-windows/ovsext/User.c	/^OvsReleasePidHashLock()$/;"	f	file:
OvsReleaseSwitchContext	datapath-windows/ovsext/Switch.c	/^OvsReleaseSwitchContext(POVS_SWITCH_CONTEXT switchContext)$/;"	f
OvsRemoveAllFwdEntriesWithSrc	datapath-windows/ovsext/IpHelper.c	/^OvsRemoveAllFwdEntriesWithSrc(UINT32 ipAddr)$/;"	f	file:
OvsRemoveAndDeleteVport	datapath-windows/ovsext/Vport.c	/^OvsRemoveAndDeleteVport(PVOID usrParamsContext,$/;"	f
OvsRemoveEventEntry	datapath-windows/ovsext/Event.c	/^OvsRemoveEventEntry(POVS_OPEN_INSTANCE instance,$/;"	f
OvsRemoveFwdEntry	datapath-windows/ovsext/IpHelper.c	/^OvsRemoveFwdEntry(POVS_FWD_ENTRY fwdEntry)$/;"	f	file:
OvsRemoveIPForwardEntry	datapath-windows/ovsext/IpHelper.c	/^OvsRemoveIPForwardEntry(POVS_IPFORWARD_ENTRY ipf)$/;"	f	file:
OvsRemoveIPNeighEntry	datapath-windows/ovsext/IpHelper.c	/^OvsRemoveIPNeighEntry(POVS_IPNEIGH_ENTRY ipn)$/;"	f	file:
OvsRemoveOpenInstance	datapath-windows/ovsext/Datapath.c	/^OvsRemoveOpenInstance(PFILE_OBJECT fileObject)$/;"	f
OvsRemoveTunnelVport	datapath-windows/ovsext/Vport.c	/^OvsRemoveTunnelVport(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsReportNBLIngressError	datapath-windows/ovsext/PacketIO.c	/^OvsReportNBLIngressError(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsResolveIPNeighEntry	datapath-windows/ovsext/IpHelper.c	/^OvsResolveIPNeighEntry(PMIB_IPNET_ROW2 ipNeigh)$/;"	f
OvsSendNBLIngress	datapath-windows/ovsext/PacketIO.c	/^OvsSendNBLIngress(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsSetCtxSourcePortNo	datapath-windows/ovsext/BufferMgmt.c	/^OvsSetCtxSourcePortNo(PNET_BUFFER_LIST nbl,$/;"	f
OvsSetDpCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsSetDpCmdHandler;$/;"	v	file:
OvsSetDpCmdHandler	datapath-windows/ovsext/Datapath.c	/^OvsSetDpCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsSetVportCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsSetVportCmdHandler,$/;"	v
OvsSetVportCmdHandler	datapath-windows/ovsext/Vport.c	/^OvsSetVportCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsSetupDumpStart	datapath-windows/ovsext/Datapath.c	/^OvsSetupDumpStart(POVS_USER_PARAMS_CONTEXT usrParamsCtx)$/;"	f
OvsSlowPathDecapVxlan	datapath-windows/ovsext/Vxlan.c	/^OvsSlowPathDecapVxlan(const PNET_BUFFER_LIST packet,$/;"	f
OvsStartIpHelper	datapath-windows/ovsext/IpHelper.c	/^KSTART_ROUTINE             OvsStartIpHelper;$/;"	v
OvsStartIpHelper	datapath-windows/ovsext/IpHelper.c	/^OvsStartIpHelper(PVOID data)$/;"	f
OvsStartNBLIngress	datapath-windows/ovsext/PacketIO.c	/^OvsStartNBLIngress(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsStartNBLIngressError	datapath-windows/ovsext/PacketIO.c	/^OvsStartNBLIngressError(POVS_SWITCH_CONTEXT switchContext,$/;"	f	file:
OvsSttDefragCleaner	datapath-windows/ovsext/Stt.c	/^KSTART_ROUTINE OvsSttDefragCleaner;$/;"	v
OvsSttDefragCleaner	datapath-windows/ovsext/Stt.c	/^OvsSttDefragCleaner(PVOID data)$/;"	f
OvsSttGetPktHash	datapath-windows/ovsext/Stt.c	/^OvsSttGetPktHash(OVS_STT_PKT_KEY *pktKey)$/;"	f	file:
OvsSttPktFragHash	datapath-windows/ovsext/Stt.c	/^static PLIST_ENTRY OvsSttPktFragHash;$/;"	v	file:
OvsSttReassemble	datapath-windows/ovsext/Stt.c	/^OvsSttReassemble(POVS_SWITCH_CONTEXT switchContext,$/;"	f
OvsSttSpinLock	datapath-windows/ovsext/Stt.c	/^static NDIS_SPIN_LOCK OvsSttSpinLock;$/;"	v	file:
OvsSubscribeDpIoctl	datapath-windows/ovsext/User.c	/^OvsSubscribeDpIoctl(PVOID instanceP,$/;"	f
OvsSubscribeEventCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsSubscribeEventCmdHandler,$/;"	v	file:
OvsSubscribeEventCmdHandler	datapath-windows/ovsext/Datapath.c	/^OvsSubscribeEventCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f	file:
OvsSubscribeEventIoctl	datapath-windows/ovsext/Event.c	/^OvsSubscribeEventIoctl(PFILE_OBJECT fileObject,$/;"	f
OvsSubscribePacketCmdHandler	datapath-windows/ovsext/Datapath.c	/^                         OvsSubscribePacketCmdHandler,$/;"	v
OvsSubscribePacketCmdHandler	datapath-windows/ovsext/User.c	/^OvsSubscribePacketCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
OvsSubscribeTunnelInitBfeStateChanges	datapath-windows/ovsext/TunnelFilter.c	/^OvsSubscribeTunnelInitBfeStateChanges(PDRIVER_OBJECT driverObject,$/;"	f
OvsSubscribeTunnelProviderBfeStateChanges	datapath-windows/ovsext/TunnelFilter.c	/^OvsSubscribeTunnelProviderBfeStateChanges(PVOID deviceObject)$/;"	f
OvsSwitchAttached	datapath-windows/ovsext/Switch.h	/^    OvsSwitchAttached,$/;"	e	enum:OVS_SWITCH_CONTROFLOW_STATE
OvsSwitchDetached	datapath-windows/ovsext/Switch.h	/^    OvsSwitchDetached$/;"	e	enum:OVS_SWITCH_CONTROFLOW_STATE
OvsSwitchPaused	datapath-windows/ovsext/Switch.h	/^    OvsSwitchPaused,$/;"	e	enum:OVS_SWITCH_DATAFLOW_STATE
OvsSwitchRunning	datapath-windows/ovsext/Switch.h	/^    OvsSwitchRunning$/;"	e	enum:OVS_SWITCH_DATAFLOW_STATE
OvsSwitchUnknown	datapath-windows/ovsext/Switch.h	/^    OvsSwitchUnknown,$/;"	e	enum:OVS_SWITCH_CONTROFLOW_STATE
OvsTcpSegmentNBL	datapath-windows/ovsext/BufferMgmt.c	/^OvsTcpSegmentNBL(PVOID ovsContext,$/;"	f
OvsTunKeyAttrSize	datapath-windows/ovsext/Flow.c	/^OvsTunKeyAttrSize(void)$/;"	f
OvsTunnelAddFilter	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelAddFilter(HANDLE engineSession,$/;"	f
OvsTunnelAddFilterEx	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelAddFilterEx(HANDLE engineSession,$/;"	f
OvsTunnelAddSystemProvider	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelAddSystemProvider(HANDLE engineSession)$/;"	f
OvsTunnelAnalyzePacket	datapath-windows/ovsext/Tunnel.c	/^OvsTunnelAnalyzePacket(OVS_TUNNEL_PENDED_PACKET *packet)$/;"	f	file:
OvsTunnelAttrToIPv4TunnelKey	datapath-windows/ovsext/Actions.c	/^OvsTunnelAttrToIPv4TunnelKey(PNL_ATTR attr,$/;"	f	file:
OvsTunnelClassify	datapath-windows/ovsext/Tunnel.c	/^OvsTunnelClassify(const FWPS_INCOMING_VALUES *inFixedValues,$/;"	f
OvsTunnelEngineClose	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelEngineClose(HANDLE *engineSession)$/;"	f
OvsTunnelEngineOpen	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelEngineOpen(HANDLE *engineSession)$/;"	f
OvsTunnelFilterCancelIrp	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterCancelIrp(PDEVICE_OBJECT DeviceObject,$/;"	f
OvsTunnelFilterCompleteRequest	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterCompleteRequest(PIRP irp,$/;"	f
OvsTunnelFilterCreate	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterCreate(PIRP irp,$/;"	f
OvsTunnelFilterDelete	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterDelete(PIRP irp,$/;"	f
OvsTunnelFilterExecuteAction	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterExecuteAction(HANDLE engineSession,$/;"	f
OvsTunnelFilterInitialize	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterInitialize(PDRIVER_OBJECT driverObject)$/;"	f
OvsTunnelFilterQueueRequest	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterQueueRequest(PIRP irp,$/;"	f
OvsTunnelFilterRequestListProcess	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterRequestListProcess(POVS_TUNFLT_THREAD_CONTEXT threadCtx)$/;"	f
OvsTunnelFilterRequestPop	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterRequestPop(POVS_TUNFLT_REQUEST_LIST listRequests)$/;"	f
OvsTunnelFilterRequestPush	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterRequestPush(POVS_TUNFLT_REQUEST_LIST listRequests,$/;"	f
OvsTunnelFilterSetIrpContext	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterSetIrpContext(POVS_TUNFLT_REQUEST_LIST listRequests,$/;"	f
OvsTunnelFilterStartThreads	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterStartThreads()$/;"	f	file:
OvsTunnelFilterStopThreads	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterStopThreads()$/;"	f	file:
OvsTunnelFilterThreadInit	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterThreadInit(POVS_TUNFLT_THREAD_CONTEXT threadCtx)$/;"	f	file:
OvsTunnelFilterThreadProc	datapath-windows/ovsext/TunnelFilter.c	/^KSTART_ROUTINE  OvsTunnelFilterThreadProc;$/;"	v
OvsTunnelFilterThreadProc	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterThreadProc(PVOID context)$/;"	f
OvsTunnelFilterThreadPush	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterThreadPush(POVS_TUNFLT_REQUEST request)$/;"	f
OvsTunnelFilterThreadStart	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterThreadStart(POVS_TUNFLT_THREAD_CONTEXT threadCtx)$/;"	f	file:
OvsTunnelFilterThreadStop	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterThreadStop(POVS_TUNFLT_THREAD_CONTEXT threadCtx,$/;"	f	file:
OvsTunnelFilterThreadUninit	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterThreadUninit(POVS_TUNFLT_THREAD_CONTEXT threadCtx)$/;"	f	file:
OvsTunnelFilterUninitialize	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelFilterUninitialize(PDRIVER_OBJECT driverObject)$/;"	f
OvsTunnelInitBfeCallback	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelInitBfeCallback(PVOID context,$/;"	f
OvsTunnelNotify	datapath-windows/ovsext/Tunnel.c	/^OvsTunnelNotify(FWPS_CALLOUT_NOTIFY_TYPE notifyType,$/;"	f
OvsTunnelPortRx	datapath-windows/ovsext/Actions.c	/^OvsTunnelPortRx(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsTunnelPortTx	datapath-windows/ovsext/Actions.c	/^OvsTunnelPortTx(OvsForwardingContext *ovsFwdCtx)$/;"	f	file:
OvsTunnelProviderBfeCallback	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelProviderBfeCallback(PVOID context,$/;"	f
OvsTunnelRegisterCallouts	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelRegisterCallouts(VOID *deviceObject)$/;"	f
OvsTunnelRegisterDatagramDataCallouts	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelRegisterDatagramDataCallouts(const GUID *layerKey,$/;"	f
OvsTunnelRemoveFilterEx	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelRemoveFilterEx(HANDLE engineSession,$/;"	f
OvsTunnelRemoveSystemProvider	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelRemoveSystemProvider(HANDLE engineSession)$/;"	f
OvsTunnelUnregisterCallouts	datapath-windows/ovsext/TunnelFilter.c	/^OvsTunnelUnregisterCallouts()$/;"	f
OvsTunnelVportPendingInit	datapath-windows/ovsext/Vport.c	/^OvsTunnelVportPendingInit(PVOID context,$/;"	f	file:
OvsTunnelVportPendingRemove	datapath-windows/ovsext/Vport.c	/^OvsTunnelVportPendingRemove(PVOID context,$/;"	f	file:
OvsUninitSwitchContext	datapath-windows/ovsext/Switch.c	/^OvsUninitSwitchContext(POVS_SWITCH_CONTEXT switchContext)$/;"	f	file:
OvsUninitTunnelFilter	datapath-windows/ovsext/TunnelFilter.c	/^VOID OvsUninitTunnelFilter(PDRIVER_OBJECT driverObject)$/;"	f
OvsUnregisterSystemProvider	datapath-windows/ovsext/TunnelFilter.c	/^OvsUnregisterSystemProvider()$/;"	f
OvsUnsubscribeTunnelInitBfeStateChanges	datapath-windows/ovsext/TunnelFilter.c	/^OvsUnsubscribeTunnelInitBfeStateChanges()$/;"	f
OvsUnsubscribeTunnelProviderBfeStateChanges	datapath-windows/ovsext/TunnelFilter.c	/^OvsUnsubscribeTunnelProviderBfeStateChanges()$/;"	f
OvsUpdateEthHeader	datapath-windows/ovsext/Actions.c	/^OvsUpdateEthHeader(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsUpdateIPNeighEntry	datapath-windows/ovsext/IpHelper.c	/^OvsUpdateIPNeighEntry(UINT32 ipAddr,$/;"	f	file:
OvsUpdateIPv4Header	datapath-windows/ovsext/Actions.c	/^OvsUpdateIPv4Header(OvsForwardingContext *ovsFwdCtx,$/;"	f	file:
OvsValidateIPChecksum	datapath-windows/ovsext/Checksum.c	/^OvsValidateIPChecksum(PNET_BUFFER_LIST curNbl,$/;"	f
OvsValidateTCPChecksum	datapath-windows/ovsext/Stt.c	/^OvsValidateTCPChecksum(PNET_BUFFER_LIST curNbl, PNET_BUFFER curNb)$/;"	f	file:
OvsValidateUDPChecksum	datapath-windows/ovsext/Checksum.c	/^OvsValidateUDPChecksum(PNET_BUFFER_LIST curNbl, BOOLEAN udpCsumZero)$/;"	f
OvsWaitActivate	datapath-windows/ovsext/Vport.c	/^OvsWaitActivate(POVS_SWITCH_CONTEXT switchContext, ULONG sleepMicroSec)$/;"	f	file:
OvsWaitDpIoctl	datapath-windows/ovsext/User.c	/^OvsWaitDpIoctl(PIRP irp, PFILE_OBJECT fileObject)$/;"	f
OvsWaitEventIoctl	datapath-windows/ovsext/Event.c	/^OvsWaitEventIoctl(PIRP irp,$/;"	f
OvsWakeupIPHelper	datapath-windows/ovsext/IpHelper.c	/^OvsWakeupIPHelper(VOID)$/;"	f	file:
PACKAGE	Makefile	/^PACKAGE = openvswitch$/;"	m
PACKAGE	config.h	186;"	d
PACKAGE	datapath/Makefile	/^PACKAGE = openvswitch$/;"	m
PACKAGE	debian/rules	/^PACKAGE=openvswitch$/;"	m
PACKAGE	debian/rules.modules	/^PACKAGE=openvswitch-datapath-module$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = bugs@openvswitch.org$/;"	m
PACKAGE_BUGREPORT	config.h	189;"	d
PACKAGE_BUGREPORT	datapath/Makefile	/^PACKAGE_BUGREPORT = bugs@openvswitch.org$/;"	m
PACKAGE_DKMS	debian/rules	/^PACKAGE_DKMS=openvswitch-datapath-dkms$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = openvswitch$/;"	m
PACKAGE_NAME	config.h	192;"	d
PACKAGE_NAME	datapath/Makefile	/^PACKAGE_NAME = openvswitch$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = openvswitch 2.4.90$/;"	m
PACKAGE_STRING	config.h	195;"	d
PACKAGE_STRING	datapath/Makefile	/^PACKAGE_STRING = openvswitch 2.4.90$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = openvswitch$/;"	m
PACKAGE_TARNAME	config.h	198;"	d
PACKAGE_TARNAME	datapath/Makefile	/^PACKAGE_TARNAME = openvswitch$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	201;"	d
PACKAGE_URL	datapath/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 2.4.90$/;"	m
PACKAGE_VERSION	config.h	204;"	d
PACKAGE_VERSION	datapath/Makefile	/^PACKAGE_VERSION = 2.4.90$/;"	m
PACKETS	utilities/ovs-dpctl-top	/^    PACKETS = "packets"$/;"	v	class:Columns
PACKETS_H	lib/packets.h	18;"	d
PACKET_AUXDATA	lib/netdev-linux.c	122;"	d	file:
PACKET_RCVD	datapath/linux/compat/include/net/ip_tunnels.h	58;"	d
PACKET_RECV_BATCH_SIZE	lib/dpif-netlink.c	2027;"	d	file:
PACKET_REJECT	datapath/linux/compat/include/net/ip_tunnels.h	59;"	d
PAD_SIZE	datapath-windows/ovsext/Netlink/NetlinkProto.h	43;"	d
PAD_SIZE	lib/util.h	119;"	d
PAGESETUPDLGORD	datapath-windows/ovsext/resource.h	1411;"	d
PAGESETUPDLGORDMOTIF	datapath-windows/ovsext/resource.h	1414;"	d
PAIR	lib/stream.c	744;"	d	file:
PARALLEL	debian/rules	/^PARALLEL = -j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))$/;"	m
PARALLEL	debian/rules	/^PARALLEL =$/;"	m
PARENT	tests/test-lockfile.c	/^static enum { PARENT, CHILD }$/;"	e	enum:__anon226	file:
PASSIVE	lib/netdev-dummy.c	/^    PASSIVE,    \/* Listener. *\/$/;"	e	enum:dummy_packet_conn_type	file:
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	datapath/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATTERNS	python/ovs/vlog.py	/^PATTERNS = {$/;"	v
PBS_MARQUEE	datapath-windows/ovsext/resource.h	459;"	d
PBS_SMOOTH	datapath-windows/ovsext/resource.h	75;"	d
PBS_SMOOTHREVERSE	datapath-windows/ovsext/resource.h	556;"	d
PBS_VERTICAL	datapath-windows/ovsext/resource.h	369;"	d
PCAP_FILE_H	lib/pcap-file.h	18;"	d
PCAP_SNAPLEN	lib/netdev-bsd.c	116;"	d	file:
PEEK	lib/lldp/lldp.c	39;"	d	file:
PEEK_BYTES	lib/lldp/lldp.c	49;"	d	file:
PEEK_CMP	lib/lldp/lldp.c	63;"	d	file:
PEEK_DISCARD	lib/lldp/lldp.c	55;"	d	file:
PEEK_DISCARD_UINT16	lib/lldp/lldp.c	61;"	d	file:
PEEK_DISCARD_UINT32	lib/lldp/lldp.c	62;"	d	file:
PEEK_DISCARD_UINT8	lib/lldp/lldp.c	60;"	d	file:
PEEK_SAVE	lib/lldp/lldp.c	75;"	d	file:
PEEK_UINT16	lib/lldp/lldp.c	47;"	d	file:
PEEK_UINT32	lib/lldp/lldp.c	48;"	d	file:
PEEK_UINT8	lib/lldp/lldp.c	46;"	d	file:
PERF	lib/perf-counter.h	106;"	d
PERF	lib/perf-counter.h	116;"	d
PERF_COUNTER_ONCE_INITIALIZER	lib/perf-counter.h	88;"	d
PERL	Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	datapath/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERMUTE	lib/getopt_long.c	50;"	d	file:
PEthHdr	datapath-windows/ovsext/NetProto.h	/^} EthHdr, *PEthHdr;$/;"	t	typeref:struct:EthHdr
PFNTunnelVportPendingOp	datapath-windows/ovsext/TunnelIntf.h	/^typedef VOID(*PFNTunnelVportPendingOp)(PVOID context,$/;"	t
PF_INET	include/sparse/sys/socket.h	/^    PF_INET = AF_INET,$/;"	e	enum:__anon74
PF_INET6	include/sparse/sys/socket.h	/^    PF_INET6 = AF_INET6,$/;"	e	enum:__anon74
PF_NETLINK	include/sparse/sys/socket.h	/^    PF_NETLINK = AF_NETLINK,$/;"	e	enum:__anon74
PF_PACKET	include/sparse/sys/socket.h	/^    PF_PACKET = AF_PACKET$/;"	e	enum:__anon74
PF_UNIX	include/sparse/sys/socket.h	/^    PF_UNIX = AF_UNIX,$/;"	e	enum:__anon74
PF_UNSPEC	include/sparse/sys/socket.h	/^    PF_UNSPEC = AF_UNSPEC,$/;"	e	enum:__anon74
PGENL_MSG_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} GENL_MSG_HDR, *PGENL_MSG_HDR;$/;"	t	typeref:struct:_GENL_MSG_HDR
PGS_AUTOSCROLL	datapath-windows/ovsext/resource.h	265;"	d
PGS_DRAGNDROP	datapath-windows/ovsext/resource.h	378;"	d
PGS_HORZ	datapath-windows/ovsext/resource.h	84;"	d
PGS_VERT	datapath-windows/ovsext/resource.h	26;"	d
PIF_OTHERCONFIG_DEFAULTS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^PIF_OTHERCONFIG_DEFAULTS = {'gro': 'off', 'lro': 'off'}$/;"	v
PII	utilities/bugtool/ovs-bugtool	/^PII      = 1$/;"	v
PII_IF_CUSTOMIZED	utilities/bugtool/ovs-bugtool	/^PII_IF_CUSTOMIZED = 'if_customized'$/;"	v
PII_MAYBE	utilities/bugtool/ovs-bugtool	/^PII_MAYBE         = 'maybe'$/;"	v
PII_NO	utilities/bugtool/ovs-bugtool	/^PII_NO            = 'no'$/;"	v
PII_YES	utilities/bugtool/ovs-bugtool	/^PII_YES           = 'yes'$/;"	v
PINSCHED_H_H	ofproto/pinsched.h	18;"	d
PIPE	utilities/bugtool/ovs-bugtool	/^from subprocess import Popen, PIPE$/;"	i
PIPELINE_STAGE	ovn/northd/ovn-northd.c	107;"	d	file:
PIPELINE_STAGE	ovn/northd/ovn-northd.c	111;"	d	file:
PIPELINE_STAGE	ovn/northd/ovn-northd.c	147;"	d	file:
PIPELINE_STAGE	ovn/northd/ovn-northd.c	150;"	d	file:
PIPELINE_STAGES	ovn/northd/ovn-northd.c	/^    PIPELINE_STAGES$/;"	e	enum:ovn_stage	file:
PIPELINE_STAGES	ovn/northd/ovn-northd.c	86;"	d	file:
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	datapath/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKIDIR	Makefile	/^PKIDIR = ${localstatedir}\/lib\/openvswitch\/pki$/;"	m
PKIDIR	datapath/Makefile	/^PKIDIR = ${localstatedir}\/lib\/openvswitch\/pki$/;"	m
PKTBUF_BITS	ofproto/pktbuf.c	41;"	d	file:
PKTBUF_CNT	ofproto/pktbuf.c	43;"	d	file:
PKTBUF_H	ofproto/pktbuf.h	18;"	d
PKTBUF_MASK	ofproto/pktbuf.c	42;"	d	file:
PKT_READ_SIZE	tests/dpdk/ring_client.c	46;"	d	file:
PLUGIN_DIR	utilities/bugtool/ovs-bugtool	/^PLUGIN_DIR = "\/usr\/local\/share\/openvswitch\/bugtool-plugins"$/;"	v
PL_EGRESS	ovn/utilities/ovn-sbctl.c	/^    PL_EGRESS,$/;"	e	enum:__anon222	file:
PL_INGRESS	ovn/utilities/ovn-sbctl.c	/^    PL_INGRESS,$/;"	e	enum:__anon222	file:
PMD_CYCLES_POLLING	lib/dpif-netdev.c	/^    PMD_CYCLES_POLLING,         \/* Cycles spent polling NICs. *\/$/;"	e	enum:pmd_cycles_counter_type	file:
PMD_CYCLES_PROCESSING	lib/dpif-netdev.c	/^    PMD_CYCLES_PROCESSING,      \/* Cycles spent processing packets *\/$/;"	e	enum:pmd_cycles_counter_type	file:
PMD_ID_NULL	lib/dpif.h	574;"	d
PMD_INFO_CLEAR_STATS	lib/dpif-netdev.c	/^    PMD_INFO_CLEAR_STATS  \/* set the cycles count to 0 *\/$/;"	e	enum:pmd_info_type	file:
PMD_INFO_SHOW_STATS	lib/dpif-netdev.c	/^    PMD_INFO_SHOW_STATS,  \/* show how cpu cycles are spent *\/$/;"	e	enum:pmd_info_type	file:
PMD_INITIAL_SEQ	lib/dpif-netdev.c	441;"	d	file:
PMD_N_CYCLES	lib/dpif-netdev.c	/^    PMD_N_CYCLES$/;"	e	enum:pmd_cycles_counter_type	file:
PNETLINK_CMD	datapath-windows/ovsext/Datapath.c	/^} NETLINK_CMD, *PNETLINK_CMD;$/;"	t	typeref:struct:_NETLINK_CMD	file:
PNETLINK_FAMILY	datapath-windows/ovsext/Datapath.c	/^} NETLINK_FAMILY, *PNETLINK_FAMILY;$/;"	t	typeref:struct:_NETLINK_FAMILY	file:
PNL_ATTR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} NL_ATTR, *PNL_ATTR;$/;"	t	typeref:struct:_NL_ATTR
PNL_BUFFER	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^} NL_BUFFER, *PNL_BUFFER;$/;"	t	typeref:struct:_NL_BUF
PNL_MSG_ERR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} NL_MSG_ERR, *PNL_MSG_ERR;$/;"	t	typeref:struct:_NlMsgErr
PNL_MSG_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^} NL_MSG_HDR, *PNL_MSG_HDR;$/;"	t	typeref:struct:_NL_MSG_HDR
PNL_POLICY	datapath-windows/ovsext/Netlink/Netlink.h	/^} NL_POLICY, *PNL_POLICY;$/;"	t	typeref:struct:_NL_POLICY
POLLERR	python/ovs/poller.py	/^POLLERR = 0x008$/;"	v
POLLHUP	python/ovs/poller.py	/^POLLHUP = 0x010$/;"	v
POLLIN	python/ovs/poller.py	/^POLLIN = 0x001$/;"	v
POLLNVAL	python/ovs/poller.py	/^POLLNVAL = 0x020$/;"	v
POLLOUT	python/ovs/poller.py	/^POLLOUT = 0x004$/;"	v
POLL_LOOP_H	lib/poll-loop.h	34;"	d
PORTNAME	tests/test-sflow.c	/^	uint32_t PORTNAME;$/;"	m	struct:sflow_xdr::__anon230	file:
PORT_ALT_BACK	lib/rstp-state-machines.c	/^    PORT_ALT_BACK = 1,$/;"	e	enum:port_flag	file:
PORT_DES	lib/rstp-state-machines.c	/^    PORT_DES = 3$/;"	e	enum:port_flag	file:
PORT_INFORMATION_SM_AGED	lib/rstp-common.h	/^    PORT_INFORMATION_SM_AGED,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_AGED_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_AGED_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_CURRENT	lib/rstp-common.h	/^    PORT_INFORMATION_SM_CURRENT,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_CURRENT_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_CURRENT_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_DISABLED	lib/rstp-common.h	/^    PORT_INFORMATION_SM_DISABLED,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_DISABLED_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_DISABLED_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_INFERIOR_DESIGNATED	lib/rstp-common.h	/^    PORT_INFORMATION_SM_INFERIOR_DESIGNATED,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_INFERIOR_DESIGNATED_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_INFERIOR_DESIGNATED_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_INIT	lib/rstp-common.h	/^    PORT_INFORMATION_SM_INIT,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_NOT_DESIGNATED	lib/rstp-common.h	/^    PORT_INFORMATION_SM_NOT_DESIGNATED,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_NOT_DESIGNATED_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_NOT_DESIGNATED_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_OTHER	lib/rstp-common.h	/^    PORT_INFORMATION_SM_OTHER,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_OTHER_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_OTHER_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_RECEIVE	lib/rstp-common.h	/^    PORT_INFORMATION_SM_RECEIVE,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_RECEIVE_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_RECEIVE_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_REPEATED_DESIGNATED	lib/rstp-common.h	/^    PORT_INFORMATION_SM_REPEATED_DESIGNATED,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_REPEATED_DESIGNATED_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_REPEATED_DESIGNATED_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_SUPERIOR_DESIGNATED	lib/rstp-common.h	/^    PORT_INFORMATION_SM_SUPERIOR_DESIGNATED$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_SUPERIOR_DESIGNATED_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_SUPERIOR_DESIGNATED_EXEC,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_UPDATE	lib/rstp-common.h	/^    PORT_INFORMATION_SM_UPDATE,$/;"	e	enum:port_information_state_machine
PORT_INFORMATION_SM_UPDATE_EXEC	lib/rstp-common.h	/^    PORT_INFORMATION_SM_UPDATE_EXEC,$/;"	e	enum:port_information_state_machine
PORT_PROTOCOL_MIGRATION_SM_CHECKING_RSTP	lib/rstp-common.h	/^    PORT_PROTOCOL_MIGRATION_SM_CHECKING_RSTP,$/;"	e	enum:port_protocol_migration_state_machine
PORT_PROTOCOL_MIGRATION_SM_CHECKING_RSTP_EXEC	lib/rstp-common.h	/^    PORT_PROTOCOL_MIGRATION_SM_CHECKING_RSTP_EXEC,$/;"	e	enum:port_protocol_migration_state_machine
PORT_PROTOCOL_MIGRATION_SM_INIT	lib/rstp-common.h	/^    PORT_PROTOCOL_MIGRATION_SM_INIT,$/;"	e	enum:port_protocol_migration_state_machine
PORT_PROTOCOL_MIGRATION_SM_SELECTING_STP	lib/rstp-common.h	/^    PORT_PROTOCOL_MIGRATION_SM_SELECTING_STP,$/;"	e	enum:port_protocol_migration_state_machine
PORT_PROTOCOL_MIGRATION_SM_SELECTING_STP_EXEC	lib/rstp-common.h	/^    PORT_PROTOCOL_MIGRATION_SM_SELECTING_STP_EXEC,$/;"	e	enum:port_protocol_migration_state_machine
PORT_PROTOCOL_MIGRATION_SM_SENSING	lib/rstp-common.h	/^    PORT_PROTOCOL_MIGRATION_SM_SENSING$/;"	e	enum:port_protocol_migration_state_machine
PORT_PROTOCOL_MIGRATION_SM_SENSING_EXEC	lib/rstp-common.h	/^    PORT_PROTOCOL_MIGRATION_SM_SENSING_EXEC,$/;"	e	enum:port_protocol_migration_state_machine
PORT_RECEIVE_SM_DISCARD	lib/rstp-common.h	/^    PORT_RECEIVE_SM_DISCARD,$/;"	e	enum:port_receive_state_machine
PORT_RECEIVE_SM_DISCARD_EXEC	lib/rstp-common.h	/^    PORT_RECEIVE_SM_DISCARD_EXEC,$/;"	e	enum:port_receive_state_machine
PORT_RECEIVE_SM_INIT	lib/rstp-common.h	/^    PORT_RECEIVE_SM_INIT,$/;"	e	enum:port_receive_state_machine
PORT_RECEIVE_SM_RECEIVE	lib/rstp-common.h	/^    PORT_RECEIVE_SM_RECEIVE$/;"	e	enum:port_receive_state_machine
PORT_RECEIVE_SM_RECEIVE_EXEC	lib/rstp-common.h	/^    PORT_RECEIVE_SM_RECEIVE_EXEC,$/;"	e	enum:port_receive_state_machine
PORT_ROLE_SELECTION_SM_INIT	lib/rstp-common.h	/^    PORT_ROLE_SELECTION_SM_INIT,$/;"	e	enum:port_role_selection_state_machine
PORT_ROLE_SELECTION_SM_INIT_BRIDGE	lib/rstp-common.h	/^    PORT_ROLE_SELECTION_SM_INIT_BRIDGE,$/;"	e	enum:port_role_selection_state_machine
PORT_ROLE_SELECTION_SM_INIT_BRIDGE_EXEC	lib/rstp-common.h	/^    PORT_ROLE_SELECTION_SM_INIT_BRIDGE_EXEC,$/;"	e	enum:port_role_selection_state_machine
PORT_ROLE_SELECTION_SM_ROLE_SELECTION	lib/rstp-common.h	/^    PORT_ROLE_SELECTION_SM_ROLE_SELECTION$/;"	e	enum:port_role_selection_state_machine
PORT_ROLE_SELECTION_SM_ROLE_SELECTION_EXEC	lib/rstp-common.h	/^    PORT_ROLE_SELECTION_SM_ROLE_SELECTION_EXEC,$/;"	e	enum:port_role_selection_state_machine
PORT_ROLE_TRANSITION_SM_ALTERNATE_AGREED_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ALTERNATE_AGREED_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ALTERNATE_PORT	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ALTERNATE_PORT,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ALTERNATE_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ALTERNATE_PORT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ALTERNATE_PROPOSED_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ALTERNATE_PROPOSED_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_BACKUP_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_BACKUP_PORT_EXEC$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_BLOCK_PORT	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_BLOCK_PORT,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_BLOCK_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_BLOCK_PORT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_DISCARD_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_DISCARD_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_FORWARD_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_FORWARD_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_LEARN_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_LEARN_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_PORT	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_PORT,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_PORT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_PROPOSE_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_PROPOSE_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_RETIRED_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_RETIRED_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DESIGNATED_SYNCED_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DESIGNATED_SYNCED_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DISABLED_PORT	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DISABLED_PORT,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DISABLED_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DISABLED_PORT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DISABLE_PORT	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DISABLE_PORT,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_DISABLE_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_DISABLE_PORT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_INIT	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_INIT,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_INIT_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_INIT_PORT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_REROOTED_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_REROOTED_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_REROOT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_REROOT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ROOT_AGREED_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ROOT_AGREED_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ROOT_FORWARD_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ROOT_FORWARD_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ROOT_LEARN_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ROOT_LEARN_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ROOT_PORT	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ROOT_PORT,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ROOT_PORT_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ROOT_PORT_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROLE_TRANSITION_SM_ROOT_PROPOSED_EXEC	lib/rstp-common.h	/^    PORT_ROLE_TRANSITION_SM_ROOT_PROPOSED_EXEC,$/;"	e	enum:port_role_transition_state_machine
PORT_ROOT	lib/rstp-state-machines.c	/^    PORT_ROOT = 2,$/;"	e	enum:port_flag	file:
PORT_STATE_TRANSITION_SM_DISCARDING	lib/rstp-common.h	/^    PORT_STATE_TRANSITION_SM_DISCARDING,$/;"	e	enum:port_state_transition_state_machine
PORT_STATE_TRANSITION_SM_DISCARDING_EXEC	lib/rstp-common.h	/^    PORT_STATE_TRANSITION_SM_DISCARDING_EXEC,$/;"	e	enum:port_state_transition_state_machine
PORT_STATE_TRANSITION_SM_FORWARDING	lib/rstp-common.h	/^    PORT_STATE_TRANSITION_SM_FORWARDING$/;"	e	enum:port_state_transition_state_machine
PORT_STATE_TRANSITION_SM_FORWARDING_EXEC	lib/rstp-common.h	/^    PORT_STATE_TRANSITION_SM_FORWARDING_EXEC,$/;"	e	enum:port_state_transition_state_machine
PORT_STATE_TRANSITION_SM_INIT	lib/rstp-common.h	/^    PORT_STATE_TRANSITION_SM_INIT,$/;"	e	enum:port_state_transition_state_machine
PORT_STATE_TRANSITION_SM_LEARNING	lib/rstp-common.h	/^    PORT_STATE_TRANSITION_SM_LEARNING,$/;"	e	enum:port_state_transition_state_machine
PORT_STATE_TRANSITION_SM_LEARNING_EXEC	lib/rstp-common.h	/^    PORT_STATE_TRANSITION_SM_LEARNING_EXEC,$/;"	e	enum:port_state_transition_state_machine
PORT_TRANSMIT_SM_IDLE	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_IDLE,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_IDLE_EXEC	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_IDLE_EXEC,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_INIT	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_INIT,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_CONFIG	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_CONFIG,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_CONFIG_EXEC	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_CONFIG_EXEC,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_INIT	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_INIT,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_INIT_EXEC	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_INIT_EXEC,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_PERIODIC	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_PERIODIC,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_PERIODIC_EXEC	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_PERIODIC_EXEC,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_RSTP	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_RSTP$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_RSTP_EXEC	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_RSTP_EXEC,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_TCN	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_TCN,$/;"	e	enum:port_transmit_state_machine
PORT_TRANSMIT_SM_TRANSMIT_TCN_EXEC	lib/rstp-common.h	/^    PORT_TRANSMIT_SM_TRANSMIT_TCN_EXEC,$/;"	e	enum:port_transmit_state_machine
PORT_UNKN	lib/rstp-state-machines.c	/^    PORT_UNKN = 0,$/;"	e	enum:port_flag	file:
PORT_VLAN_ACCESS	ofproto/ofproto.h	/^    PORT_VLAN_ACCESS,$/;"	e	enum:port_vlan_mode
PORT_VLAN_NATIVE_TAGGED	ofproto/ofproto.h	/^    PORT_VLAN_NATIVE_TAGGED,$/;"	e	enum:port_vlan_mode
PORT_VLAN_NATIVE_UNTAGGED	ofproto/ofproto.h	/^    PORT_VLAN_NATIVE_UNTAGGED$/;"	e	enum:port_vlan_mode
PORT_VLAN_TRUNK	ofproto/ofproto.h	/^    PORT_VLAN_TRUNK,$/;"	e	enum:port_vlan_mode
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	datapath/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	datapath/Makefile	/^POST_UNINSTALL = :$/;"	m
POVS_ACTION_STATS	datapath-windows/ovsext/Actions.c	/^} OVS_ACTION_STATS, *POVS_ACTION_STATS;$/;"	t	typeref:struct:_OVS_ACTION_STATS	file:
POVS_BUFFER_CONTEXT	datapath-windows/ovsext/BufferMgmt.h	/^} OVS_BUFFER_CONTEXT, *POVS_BUFFER_CONTEXT;$/;"	t	typeref:union:_OVS_BUFFER_CONTEXT
POVS_DATAPATH	datapath-windows/ovsext/Switch.h	/^} OVS_DATAPATH, *POVS_DATAPATH;$/;"	t	typeref:struct:_OVS_DATAPATH
POVS_DEVICE_EXTENSION	datapath-windows/ovsext/Datapath.h	/^} OVS_DEVICE_EXTENSION, *POVS_DEVICE_EXTENSION;$/;"	t	typeref:struct:_OVS_DEVICE_EXTENSION
POVS_EVENT_ENTRY	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_ENTRY, *POVS_EVENT_ENTRY;$/;"	t	typeref:struct:_OVS_EVENT_ENTRY
POVS_EVENT_POLL	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_POLL, *POVS_EVENT_POLL;$/;"	t	typeref:struct:_OVS_EVENT_POLL
POVS_EVENT_QUEUE	datapath-windows/ovsext/Event.h	/^} OVS_EVENT_QUEUE, *POVS_EVENT_QUEUE;$/;"	t	typeref:struct:_OVS_EVENT_QUEUE
POVS_EVENT_QUEUE_ELEM	datapath-windows/ovsext/Event.h	/^} OVS_EVENT_QUEUE_ELEM, *POVS_EVENT_QUEUE_ELEM;$/;"	t	typeref:struct:_OVS_EVENT_QUEUE_ELEM
POVS_EVENT_STATUS	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_STATUS, *POVS_EVENT_STATUS;$/;"	t	typeref:struct:_OVS_EVENT_STATUS
POVS_EVENT_SUBSCRIBE	datapath-windows/ovsext/DpInternal.h	/^} OVS_EVENT_SUBSCRIBE, *POVS_EVENT_SUBSCRIBE;$/;"	t	typeref:struct:_OVS_EVENT_SUBSCRIBE
POVS_FWD_ENTRY	datapath-windows/ovsext/IpHelper.h	/^} OVS_FWD_ENTRY, *POVS_FWD_ENTRY;$/;"	t	typeref:struct:_OVS_FWD_ENTRY
POVS_FWD_INFO	datapath-windows/ovsext/IpHelper.h	/^} OVS_FWD_INFO, *POVS_FWD_INFO;$/;"	t	typeref:union:_OVS_FWD_INFO
POVS_FWD_REQUEST_INFO	datapath-windows/ovsext/IpHelper.h	/^} OVS_FWD_REQUEST_INFO, *POVS_FWD_REQUEST_INFO;$/;"	t	typeref:struct:_OVS_FWD_REQUEST_INFO
POVS_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^typedef struct ovs_header OVS_HDR, *POVS_HDR;$/;"	t	typeref:struct:
POVS_IPFORWARD_ENTRY	datapath-windows/ovsext/IpHelper.h	/^} OVS_IPFORWARD_ENTRY, *POVS_IPFORWARD_ENTRY;$/;"	t	typeref:struct:_OVS_IPFORWARD_ENTRY
POVS_IPNEIGH_ENTRY	datapath-windows/ovsext/IpHelper.h	/^} OVS_IPNEIGH_ENTRY, *POVS_IPNEIGH_ENTRY;$/;"	t	typeref:struct:_OVS_IPNEIGH_ENTRY
POVS_IP_HELPER_REQUEST	datapath-windows/ovsext/IpHelper.h	/^} OVS_IP_HELPER_REQUEST, *POVS_IP_HELPER_REQUEST;$/;"	t	typeref:struct:_OVS_IP_HELPER_REQUEST
POVS_IP_HELPER_THREAD_CONTEXT	datapath-windows/ovsext/IpHelper.h	/^} OVS_IP_HELPER_THREAD_CONTEXT, *POVS_IP_HELPER_THREAD_CONTEXT;$/;"	t	typeref:struct:_OVS_IP_HELPER_THREAD_CONTEXT
POVS_MESSAGE	datapath-windows/ovsext/Netlink/Netlink.h	/^} OVS_MESSAGE, *POVS_MESSAGE;$/;"	t	typeref:struct:_OVS_MESSAGE
POVS_MESSAGE_ERROR	datapath-windows/ovsext/Netlink/Netlink.h	/^} OVS_MESSAGE_ERROR, *POVS_MESSAGE_ERROR;$/;"	t	typeref:struct:_OVS_MESSAGE_ERROR
POVS_NBL_POOL	datapath-windows/ovsext/BufferMgmt.h	/^} OVS_NBL_POOL, *POVS_NBL_POOL;$/;"	t	typeref:struct:_OVS_NBL_POOL
POVS_OID_CONTEXT	datapath-windows/ovsext/Oid.c	/^} OVS_OID_CONTEXT, *POVS_OID_CONTEXT;$/;"	t	typeref:struct:_OVS_OID_CONTEXT	file:
POVS_OPEN_INSTANCE	datapath-windows/ovsext/Datapath.h	/^} OVS_OPEN_INSTANCE, *POVS_OPEN_INSTANCE;$/;"	t	typeref:struct:_OVS_OPEN_INSTANCE
POVS_PACKET_HDR_INFO	datapath-windows/ovsext/Checksum.h	/^typedef union _OVS_PACKET_HDR_INFO *POVS_PACKET_HDR_INFO;$/;"	t	typeref:union:_OVS_PACKET_HDR_INFO
POVS_PACKET_HDR_INFO	datapath-windows/ovsext/NetProto.h	/^} OVS_PACKET_HDR_INFO, *POVS_PACKET_HDR_INFO;$/;"	t	typeref:union:_OVS_PACKET_HDR_INFO
POVS_PACKET_INFO	datapath-windows/ovsext/DpInternal.h	/^} OVS_PACKET_INFO, *POVS_PACKET_INFO;$/;"	t	typeref:struct:_OVS_PACKET_INFO
POVS_PACKET_QUEUE_ELEM	datapath-windows/ovsext/User.h	/^} OVS_PACKET_QUEUE_ELEM, *POVS_PACKET_QUEUE_ELEM;$/;"	t	typeref:struct:_OVS_PACKET_QUEUE_ELEM
POVS_STT_PKT_ENTRY	datapath-windows/ovsext/Stt.h	/^} OVS_STT_PKT_ENTRY, *POVS_STT_PKT_ENTRY;$/;"	t	typeref:struct:_OVS_STT_PKT_ENTRY
POVS_STT_PKT_KEY	datapath-windows/ovsext/Stt.h	/^} OVS_STT_PKT_KEY, *POVS_STT_PKT_KEY;$/;"	t	typeref:struct:_OVS_STT_PKT_KEY
POVS_STT_THREAD_CTX	datapath-windows/ovsext/Stt.h	/^} OVS_STT_THREAD_CTX, *POVS_STT_THREAD_CTX;$/;"	t	typeref:struct:_OVS_STT_THREAD_CTX
POVS_STT_VPORT	datapath-windows/ovsext/Stt.h	/^} OVS_STT_VPORT, *POVS_STT_VPORT;$/;"	t	typeref:struct:_OVS_STT_VPORT
POVS_SWITCH_CONTEXT	datapath-windows/ovsext/Switch.h	/^} OVS_SWITCH_CONTEXT, *POVS_SWITCH_CONTEXT;$/;"	t	typeref:struct:_OVS_SWITCH_CONTEXT
POVS_SWITCH_CONTROLFLOW_STATE	datapath-windows/ovsext/Switch.h	/^} OVS_SWITCH_CONTROLFLOW_STATE, *POVS_SWITCH_CONTROLFLOW_STATE;$/;"	t	typeref:enum:OVS_SWITCH_CONTROFLOW_STATE
POVS_SWITCH_DATAFLOW_STATE	datapath-windows/ovsext/Switch.h	/^} OVS_SWITCH_DATAFLOW_STATE, *POVS_SWITCH_DATAFLOW_STATE;$/;"	t	typeref:enum:OVS_SWITCH_DATAFLOW_STATE
POVS_TUNFLT_INIT_CONTEXT	datapath-windows/ovsext/Vport.c	/^} OVS_TUNFLT_INIT_CONTEXT, *POVS_TUNFLT_INIT_CONTEXT;$/;"	t	typeref:struct:_OVS_TUNFLT_INIT_CONTEXT	file:
POVS_TUNFLT_REQUEST	datapath-windows/ovsext/TunnelFilter.c	/^} OVS_TUNFLT_REQUEST, *POVS_TUNFLT_REQUEST;$/;"	t	typeref:struct:_OVS_TUNFLT_REQUEST	file:
POVS_TUNFLT_REQUEST_LIST	datapath-windows/ovsext/TunnelFilter.c	/^} OVS_TUNFLT_REQUEST_LIST, *POVS_TUNFLT_REQUEST_LIST;$/;"	t	typeref:struct:_OVS_TUNFLT_REQUEST_LIST	file:
POVS_TUNFLT_THREAD_CONTEXT	datapath-windows/ovsext/TunnelFilter.c	/^} OVS_TUNFLT_THREAD_CONTEXT, *POVS_TUNFLT_THREAD_CONTEXT;$/;"	t	typeref:struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
POVS_USER_PACKET_QUEUE	datapath-windows/ovsext/Datapath.h	/^                                      *POVS_USER_PACKET_QUEUE;$/;"	t	typeref:struct:
POVS_USER_PACKET_QUEUE	datapath-windows/ovsext/User.h	/^} OVS_USER_PACKET_QUEUE, *POVS_USER_PACKET_QUEUE;$/;"	t	typeref:struct:_OVS_USER_PACKET_QUEUE
POVS_USER_PARAMS_CONTEXT	datapath-windows/ovsext/Datapath.h	/^} OVS_USER_PARAMS_CONTEXT, *POVS_USER_PARAMS_CONTEXT;$/;"	t	typeref:struct:_OVS_USER_PARAMS_CONTEXT
POVS_USER_STATS	datapath-windows/ovsext/User.h	/^} OVS_USER_STATS, *POVS_USER_STATS;$/;"	t	typeref:struct:_OVS_USER_STATS
POVS_VPORT_ENTRY	datapath-windows/ovsext/Switch.h	/^typedef struct _OVS_VPORT_ENTRY *POVS_VPORT_ENTRY;$/;"	t	typeref:struct:_OVS_VPORT_ENTRY
POVS_VPORT_ENTRY	datapath-windows/ovsext/Vport.h	/^} OVS_VPORT_ENTRY, *POVS_VPORT_ENTRY;$/;"	t	typeref:struct:_OVS_VPORT_ENTRY
POVS_VPORT_EXT_INFO	datapath-windows/ovsext/DpInternal.h	/^} OVS_VPORT_EXT_INFO, *POVS_VPORT_EXT_INFO;$/;"	t	typeref:struct:_OVS_VPORT_EXT_INFO
POVS_VPORT_GET	datapath-windows/ovsext/DpInternal.h	/^} OVS_VPORT_GET, *POVS_VPORT_GET;$/;"	t	typeref:struct:_OVS_VPORT_GET
POVS_VXLAN_VPORT	datapath-windows/ovsext/Vxlan.h	/^} OVS_VXLAN_VPORT, *POVS_VXLAN_VPORT;$/;"	t	typeref:struct:_OVS_VXLAN_VPORT
PRAGMA_COLUMNS	Makefile	/^PRAGMA_COLUMNS = $/;"	m
PRAGMA_COLUMNS	datapath/Makefile	/^PRAGMA_COLUMNS = $/;"	m
PRAGMA_SYSTEM_HEADER	Makefile	/^PRAGMA_SYSTEM_HEADER = #pragma GCC system_header$/;"	m
PRAGMA_SYSTEM_HEADER	datapath/Makefile	/^PRAGMA_SYSTEM_HEADER = #pragma GCC system_header$/;"	m
PREREQS	build-aux/extract-ofp-fields	/^PREREQS = {"none": "MFP_NONE",$/;"	v
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	datapath/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	datapath/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINTDLGEXORD	datapath-windows/ovsext/resource.h	1413;"	d
PRINTDLGORD	datapath-windows/ovsext/resource.h	1400;"	d
PRINT_ERROR	lib/getopt_long.c	47;"	d	file:
PRIO_TO_MSEC	ofproto/ofproto-dpif-monitor.c	45;"	d	file:
PRIXSIZE	lib/util.h	247;"	d
PRIXSIZE	lib/util.h	254;"	d
PRIdSIZE	lib/util.h	242;"	d
PRIdSIZE	lib/util.h	249;"	d
PRIiSIZE	lib/util.h	243;"	d
PRIiSIZE	lib/util.h	250;"	d
PRIoSIZE	lib/util.h	244;"	d
PRIoSIZE	lib/util.h	251;"	d
PRIuSIZE	lib/util.h	245;"	d
PRIuSIZE	lib/util.h	252;"	d
PRIxSIZE	lib/util.h	246;"	d
PRIxSIZE	lib/util.h	253;"	d
PRNSETUPDLGORD	datapath-windows/ovsext/resource.h	1403;"	d
PROBE	python/ovs/reconnect.py	/^PROBE = 'probe'$/;"	v
PROCESS_H	lib/process.h	18;"	d
PROC_CMDLINE	utilities/bugtool/ovs-bugtool	/^PROC_CMDLINE = '\/proc\/cmdline'$/;"	v
PROC_CONFIG	utilities/bugtool/ovs-bugtool	/^PROC_CONFIG = '\/proc\/config.gz'$/;"	v
PROC_CPUINFO	utilities/bugtool/ovs-bugtool	/^PROC_CPUINFO = '\/proc\/cpuinfo'$/;"	v
PROC_DEVICES	utilities/bugtool/ovs-bugtool	/^PROC_DEVICES = '\/proc\/devices'$/;"	v
PROC_FILESYSTEMS	utilities/bugtool/ovs-bugtool	/^PROC_FILESYSTEMS = '\/proc\/filesystems'$/;"	v
PROC_INTERRUPTS	utilities/bugtool/ovs-bugtool	/^PROC_INTERRUPTS = '\/proc\/interrupts'$/;"	v
PROC_IOPORTS	utilities/bugtool/ovs-bugtool	/^PROC_IOPORTS = '\/proc\/ioports'$/;"	v
PROC_MEMINFO	utilities/bugtool/ovs-bugtool	/^PROC_MEMINFO = '\/proc\/meminfo'$/;"	v
PROC_MODULES	utilities/bugtool/ovs-bugtool	/^PROC_MODULES = '\/proc\/modules'$/;"	v
PROC_MOUNTS	utilities/bugtool/ovs-bugtool	/^PROC_MOUNTS = '\/proc\/mounts'$/;"	v
PROC_NET_BONDING_DIR	utilities/bugtool/ovs-bugtool	/^PROC_NET_BONDING_DIR = '\/proc\/net\/bonding'$/;"	v
PROC_NET_SOFTNET_STAT	utilities/bugtool/ovs-bugtool	/^PROC_NET_SOFTNET_STAT = '\/proc\/net\/softnet_stat'$/;"	v
PROC_NET_VLAN_DIR	utilities/bugtool/ovs-bugtool	/^PROC_NET_VLAN_DIR = '\/proc\/net\/vlan'$/;"	v
PROC_PARTITIONS	utilities/bugtool/ovs-bugtool	/^PROC_PARTITIONS = '\/proc\/partitions'$/;"	v
PROC_SCSI	utilities/bugtool/ovs-bugtool	/^PROC_SCSI = '\/proc\/scsi\/scsi'$/;"	v
PROC_USB_DEV	utilities/bugtool/ovs-bugtool	/^PROC_USB_DEV = '\/proc\/bus\/usb\/devices'$/;"	v
PROC_VERSION	utilities/bugtool/ovs-bugtool	/^PROC_VERSION = '\/proc\/version'$/;"	v
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS) $(sbin_PROGRAMS)$/;"	m
PROGRAM_NAME	python/ovs/util.py	/^PROGRAM_NAME = os.path.basename(sys.argv[0])$/;"	v
PROTO_DECODE_SIG	lib/lldp/lldpd.h	43;"	d
PROTO_GUESS_SIG	lib/lldp/lldpd.h	45;"	d
PROTO_SEND_SIG	lib/lldp/lldpd.h	42;"	d
PS	utilities/bugtool/ovs-bugtool	/^PS = 'ps'$/;"	v
PSTREAM_INIT	lib/vconn-stream.c	376;"	d	file:
PSttHdr	datapath-windows/ovsext/Stt.h	/^} SttHdr, *PSttHdr;$/;"	t	typeref:struct:SttHdr
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	include/sparse/pthread.h	33;"	d
PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	include/sparse/pthread.h	34;"	d
PTHREAD_INCLUDES	Makefile	/^PTHREAD_INCLUDES = $/;"	m
PTHREAD_INCLUDES	datapath/Makefile	/^PTHREAD_INCLUDES = $/;"	m
PTHREAD_LDFLAGS	Makefile	/^PTHREAD_LDFLAGS = $/;"	m
PTHREAD_LDFLAGS	datapath/Makefile	/^PTHREAD_LDFLAGS = $/;"	m
PTHREAD_LIBS	Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	datapath/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_MUTEX_INITIALIZER	include/sparse/pthread.h	27;"	d
PTHREAD_MUTEX_INITIALIZER	include/sparse/pthread.h	28;"	d
PTHREAD_RWLOCK_INITIALIZER	include/sparse/pthread.h	30;"	d
PTHREAD_RWLOCK_INITIALIZER	include/sparse/pthread.h	31;"	d
PTHREAD_TEMP_DIR	Makefile	/^PTHREAD_TEMP_DIR = `echo "$(PTHREAD_LDFLAGS)" | sed 's|^.\\(.*\\).$:\\1||'`$/;"	m
PTHREAD_TEMP_DIR	windows/automake.mk	/^PTHREAD_TEMP_DIR=`echo "$(PTHREAD_LDFLAGS)" | sed 's|^.\\(.*\\).$:\\1||'`$/;"	m
PTHREAD_WIN32_DIR_DLL	Makefile	/^PTHREAD_WIN32_DIR_DLL = $/;"	m
PTHREAD_WIN32_DIR_DLL	datapath/Makefile	/^PTHREAD_WIN32_DIR_DLL = $/;"	m
PTHREAD_WIN32_DIR_DLL_WIN_FORM	Makefile	/^PTHREAD_WIN32_DIR_DLL_WIN_FORM = $/;"	m
PTHREAD_WIN32_DIR_DLL_WIN_FORM	datapath/Makefile	/^PTHREAD_WIN32_DIR_DLL_WIN_FORM = $/;"	m
PVECTOR_CURSOR_FOR_EACH	lib/pvector.h	167;"	d
PVECTOR_CURSOR_FOR_EACH_CONTINUE	lib/pvector.h	171;"	d
PVECTOR_EXTRA_ALLOC	lib/pvector.h	/^enum { PVECTOR_EXTRA_ALLOC = 4 };$/;"	e	enum:__anon151
PVECTOR_FOR_EACH	lib/pvector.h	157;"	d
PVECTOR_FOR_EACH_PRIORITY	lib/pvector.h	163;"	d
PVECTOR_H	lib/pvector.h	18;"	d
PVECTOR_IMPL_FOR_EACH	lib/pvector.c	73;"	d	file:
PWD	utilities/ovs-dev.py	/^PWD = os.getcwd()$/;"	v
PWR_CRITICALRESUME	datapath-windows/ovsext/resource.h	322;"	d
PWR_FAIL	datapath-windows/ovsext/resource.h	1563;"	d
PWR_OK	datapath-windows/ovsext/resource.h	51;"	d
PWR_SUSPENDREQUEST	datapath-windows/ovsext/resource.h	52;"	d
PWR_SUSPENDRESUME	datapath-windows/ovsext/resource.h	233;"	d
PYCOV_CLEAN_FILES	Makefile	/^PYCOV_CLEAN_FILES = build-aux\/check-structs,cover \\$/;"	m
PYFILES	Makefile	/^PYFILES = $(ovs_pyfiles) python\/ovs\/dirs.py $(ovstest_pyfiles)$/;"	m
PYFILES	python/automake.mk	/^PYFILES = $(ovs_pyfiles) python\/ovs\/dirs.py $(ovstest_pyfiles)$/;"	m
PYTHON	Makefile	/^PYTHON = \/usr\/bin\/python$/;"	m
PYTHON	datapath/Makefile	/^PYTHON = \/usr\/bin\/python$/;"	m
PYTHONDONTWRITEBYTECODE	Makefile	/^	PYTHONDONTWRITEBYTECODE=yes COVERAGE_FILE=$(COVERAGE_FILE) PYTHON='$(COVERAGE) run -p' $(SHELL) '$(TESTSUITE)' -C tests AUTOTEST_PATH=$(AUTOTEST_PATH) $(TESTSUITEFLAGS)$/;"	m
PYTHONDONTWRITEBYTECODE	tests/automake.mk	/^	PYTHONDONTWRITEBYTECODE=yes COVERAGE_FILE=$(COVERAGE_FILE) PYTHON='$(COVERAGE) run -p' $(SHELL) '$(TESTSUITE)' -C tests AUTOTEST_PATH=$(AUTOTEST_PATH) $(TESTSUITEFLAGS)$/;"	m
P_IN	ovn/northd/ovn-northd.c	/^    P_IN,                       \/* Ingress pipeline. *\/$/;"	e	enum:ovn_pipeline	file:
P_OUT	ovn/northd/ovn-northd.c	/^    P_OUT                       \/* Egress pipeline. *\/$/;"	e	enum:ovn_pipeline	file:
Parser	python/ovs/db/parser.py	/^class Parser(object):$/;"	c
Parser	python/ovs/json.py	/^class Parser(object):$/;"	c
PassiveStream	python/ovs/stream.py	/^class PassiveStream(object):$/;"	c
PcapException	utilities/ovs-pcap	/^class PcapException(Exception):$/;"	c
PcapReader	utilities/ovs-pcap	/^class PcapReader(object):$/;"	c
Poller	python/ovs/poller.py	/^class Poller(object):$/;"	c
Pool	tests/MockXenAPI.py	/^class Pool(Table):$/;"	c
Popen	utilities/bugtool/ovs-bugtool	/^from subprocess import Popen, PIPE$/;"	i
ProcOutput	utilities/bugtool/ovs-bugtool	/^class ProcOutput:$/;"	c
Producer	python/ovstest/tcp.py	/^class Producer(object):$/;"	c
Protocol	python/ovstest/tcp.py	/^from twisted.internet.protocol import Factory, ClientFactory, Protocol$/;"	i
PseudoHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct PseudoHdr {$/;"	s
PseudoHdr	datapath-windows/ovsext/NetProto.h	/^} PseudoHdr;$/;"	t	typeref:struct:PseudoHdr
PseudoHdrIPv6	datapath-windows/ovsext/NetProto.h	/^typedef struct PseudoHdrIPv6 {$/;"	s
PseudoHdrIPv6	datapath-windows/ovsext/NetProto.h	/^} PseudoHdrIPv6;$/;"	t	typeref:struct:PseudoHdrIPv6
RANDOM_H	lib/random.h	18;"	d
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	datapath/Makefile	/^RANLIB = ranlib$/;"	m
RAPID_SPANNING_TREE_BPDU	lib/rstp-common.h	/^    RAPID_SPANNING_TREE_BPDU = 0x2$/;"	e	enum:rstp_bpdu_type
RAPID_SPANNING_TREE_BPDU_SIZE	lib/rstp-state-machines.c	/^    RAPID_SPANNING_TREE_BPDU_SIZE = 36$/;"	e	enum:bpdu_size	file:
RARPOP_REPLY	datapath-windows/ovsext/NetProto.h	113;"	d
RARPOP_REPLY_NBO	datapath-windows/ovsext/NetProto.h	119;"	d
RARPOP_REQUEST	datapath-windows/ovsext/NetProto.h	112;"	d
RARPOP_REQUEST_NBO	datapath-windows/ovsext/NetProto.h	118;"	d
RBS_AUTOSIZE	datapath-windows/ovsext/resource.h	1446;"	d
RBS_BANDBORDERS	datapath-windows/ovsext/resource.h	1220;"	d
RBS_DBLCLKTOGGLE	datapath-windows/ovsext/resource.h	1536;"	d
RBS_FIXEDORDER	datapath-windows/ovsext/resource.h	1425;"	d
RBS_REGISTERDROP	datapath-windows/ovsext/resource.h	1439;"	d
RBS_TOOLTIPS	datapath-windows/ovsext/resource.h	1031;"	d
RBS_VARHEIGHT	datapath-windows/ovsext/resource.h	1091;"	d
RBS_VERTICALGRIPPER	datapath-windows/ovsext/resource.h	1453;"	d
RCONN_H	lib/rconn.h	18;"	d
RCULIST_FOR_EACH	lib/rculist.h	368;"	d
RCULIST_FOR_EACH_CONTINUE	lib/rculist.h	372;"	d
RCULIST_FOR_EACH_PROTECTED	lib/rculist.h	386;"	d
RCULIST_FOR_EACH_REVERSE_PROTECTED	lib/rculist.h	377;"	d
RCULIST_FOR_EACH_REVERSE_PROTECTED_CONTINUE	lib/rculist.h	381;"	d
RCULIST_FOR_EACH_SAFE_PROTECTED	lib/rculist.h	392;"	d
RCULIST_H	lib/rculist.h	17;"	d
RCULIST_POISON	lib/rculist.h	132;"	d
RCUOVS_LIST_INITIALIZER	lib/rculist.h	75;"	d
RCU_INITIALIZER	datapath/linux/compat/include/linux/rcupdate.h	30;"	d
RCU_INIT_POINTER	datapath/linux/compat/include/linux/rcupdate.h	34;"	d
RDP2_1	lib/util.h	146;"	d
RDP2_2	lib/util.h	147;"	d
RDP2_3	lib/util.h	148;"	d
RDP2_4	lib/util.h	149;"	d
RDP2_5	lib/util.h	150;"	d
RDP2__	lib/util.h	145;"	d
REASM_HI_THRESH	datapath/linux/compat/stt.c	67;"	d	file:
REASM_HI_THRESH	datapath/linux/stt.c	67;"	d	file:
REASM_LO_THRESH	datapath/linux/compat/stt.c	72;"	d	file:
REASM_LO_THRESH	datapath/linux/stt.c	72;"	d	file:
RECEIVED	lib/rstp-state-machines.c	1036;"	d	file:
RECEIVER_INDEX	ofproto/ofproto-dpif-sflow.c	90;"	d	file:
RECIRC_POOL_STATIC_IDS	ofproto/ofproto-dpif-rid.c	37;"	d	file:
RECIRC_RULE_PRIORITY	ofproto/ofproto-dpif.h	31;"	d
RECONNECT_CONNECT	lib/reconnect.h	/^    RECONNECT_CONNECT = 1,$/;"	e	enum:reconnect_action
RECONNECT_DEFAULT_MAX_BACKOFF	lib/reconnect.h	45;"	d
RECONNECT_DEFAULT_MIN_BACKOFF	lib/reconnect.h	44;"	d
RECONNECT_DEFAULT_PROBE_INTERVAL	lib/reconnect.h	46;"	d
RECONNECT_DISCONNECT	lib/reconnect.h	/^    RECONNECT_DISCONNECT,$/;"	e	enum:reconnect_action
RECONNECT_H	lib/reconnect.h	18;"	d
RECONNECT_PROBE	lib/reconnect.h	/^    RECONNECT_PROBE,$/;"	e	enum:reconnect_action
RECORD_FIELDS	ofproto/ipfix-gen-entities	/^    RECORD_FIELDS = ['name', 'dataType', 'elementId', 'status']$/;"	v	class:IpfixEntityHandler
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	datapath/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	datapath/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REGNAME_LEN	lib/match.c	1140;"	d	file:
REHASH_INTERVAL	datapath/flow_table.c	51;"	d	file:
REHASH_INTERVAL	datapath/linux/flow_table.c	51;"	d	file:
RELOP	lib/db-ctl-base.c	579;"	d	file:
RELOP	lib/db-ctl-base.c	581;"	d	file:
RELOP	lib/db-ctl-base.c	632;"	d	file:
RELOP	lib/db-ctl-base.c	634;"	d	file:
RELOPS	lib/db-ctl-base.c	/^    RELOPS$/;"	e	enum:relop	file:
RELOPS	lib/db-ctl-base.c	564;"	d	file:
REPEATED_DESIGNATED_INFO	lib/rstp-common.h	/^    REPEATED_DESIGNATED_INFO,$/;"	e	enum:rstp_rcvd_info
REPLACEDLGORD	datapath-windows/ovsext/resource.h	1406;"	d
RESERVED_START_INDEX1	datapath-windows/ovsext/Switch.h	36;"	d
RESOLV_CONF	utilities/bugtool/ovs-bugtool	/^RESOLV_CONF = '\/etc\/resolv.conf'$/;"	v
RESTART_EXIT_CODE	python/ovs/daemon.py	/^RESTART_EXIT_CODE = 5$/;"	v
REVALIDATE_MAX_BATCH	ofproto/ofproto-dpif-upcall.c	45;"	d	file:
REV_BOND	ofproto/ofproto-dpif.c	/^    REV_BOND,                  \/* Bonding changed. *\/$/;"	e	enum:revalidate_reason	file:
REV_FLOW_TABLE	ofproto/ofproto-dpif.c	/^    REV_FLOW_TABLE,            \/* Flow table changed. *\/$/;"	e	enum:revalidate_reason	file:
REV_MAC_LEARNING	ofproto/ofproto-dpif.c	/^    REV_MAC_LEARNING,          \/* Mac learning changed. *\/$/;"	e	enum:revalidate_reason	file:
REV_MCAST_SNOOPING	ofproto/ofproto-dpif.c	/^    REV_MCAST_SNOOPING,        \/* Multicast snooping changed. *\/$/;"	e	enum:revalidate_reason	file:
REV_PORT_TOGGLED	ofproto/ofproto-dpif.c	/^    REV_PORT_TOGGLED,          \/* Port enabled or disabled by CFM, LACP, ...*\/$/;"	e	enum:revalidate_reason	file:
REV_RECONFIGURE	ofproto/ofproto-dpif.c	/^    REV_RECONFIGURE = 1,       \/* Switch configuration changed. *\/$/;"	e	enum:revalidate_reason	file:
REV_RSTP	ofproto/ofproto-dpif.c	/^    REV_RSTP,                  \/* RSTP port status change. *\/$/;"	e	enum:revalidate_reason	file:
REV_STP	ofproto/ofproto-dpif.c	/^    REV_STP,                   \/* Spanning tree protocol port status change. *\/$/;"	e	enum:revalidate_reason	file:
RO	lib/db-ctl-base.h	/^    enum { RO, RW } mode;       \/* Does this command modify the database? *\/$/;"	e	enum:ctl_command_syntax::__anon84
ROLE_ALTERNATE	lib/rstp.h	/^    ROLE_ALTERNATE,$/;"	e	enum:rstp_port_role
ROLE_BACKUP	lib/rstp.h	/^    ROLE_BACKUP,$/;"	e	enum:rstp_port_role
ROLE_DESIGNATED	lib/rstp.h	/^    ROLE_DESIGNATED,$/;"	e	enum:rstp_port_role
ROLE_DISABLED	lib/rstp.h	/^    ROLE_DISABLED$/;"	e	enum:rstp_port_role
ROLE_FLAG_MASK	lib/rstp-state-machines.c	50;"	d	file:
ROLE_FLAG_SHIFT	lib/rstp-state-machines.c	51;"	d	file:
ROLE_ROOT	lib/rstp.h	/^    ROLE_ROOT,$/;"	e	enum:rstp_port_role
ROUND_DOWN	lib/util.h	122;"	d
ROUND_DOWN_POW2	lib/util.h	144;"	d
ROUND_UP	datapath-windows/ovsext/Netlink/NetlinkProto.h	40;"	d
ROUND_UP	lib/util.h	116;"	d
ROUND_UP_POW2	lib/util.h	134;"	d
ROUTE	utilities/bugtool/ovs-bugtool	/^ROUTE = 'route'$/;"	v
ROUTE_RE	utilities/bugtool/ovs-bugtool	/^ROUTE_RE = re.compile(r'^.*\/route-.*')$/;"	v
ROUTE_TABLE_H	lib/route-table.h	18;"	d
ROW_CREATE	python/ovs/db/idl.py	/^ROW_CREATE = "create"$/;"	v
ROW_DELETE	python/ovs/db/idl.py	/^ROW_DELETE = "delete"$/;"	v
ROW_UPDATE	python/ovs/db/idl.py	/^ROW_UPDATE = "update"$/;"	v
RPM	utilities/bugtool/ovs-bugtool	/^RPM = 'rpm'$/;"	v
RPM_PCO_ADD	include/windows/netinet/icmp6.h	447;"	d
RPM_PCO_CHANGE	include/windows/netinet/icmp6.h	448;"	d
RPM_PCO_MAX	include/windows/netinet/icmp6.h	450;"	d
RPM_PCO_SETGLOBAL	include/windows/netinet/icmp6.h	449;"	d
RSTP_ADMIN_BRIDGE_PORT_STATE_DISABLED	lib/rstp-common.h	/^    RSTP_ADMIN_BRIDGE_PORT_STATE_DISABLED = 0,$/;"	e	enum:admin_port_state
RSTP_ADMIN_BRIDGE_PORT_STATE_ENABLED	lib/rstp-common.h	/^    RSTP_ADMIN_BRIDGE_PORT_STATE_ENABLED = 1$/;"	e	enum:admin_port_state
RSTP_ADMIN_P2P_MAC_AUTO	lib/rstp.h	/^    RSTP_ADMIN_P2P_MAC_AUTO$/;"	e	enum:rstp_admin_point_to_point_mac_state
RSTP_ADMIN_P2P_MAC_FORCE_FALSE	lib/rstp.h	/^    RSTP_ADMIN_P2P_MAC_FORCE_FALSE,$/;"	e	enum:rstp_admin_point_to_point_mac_state
RSTP_ADMIN_P2P_MAC_FORCE_TRUE	lib/rstp.h	/^    RSTP_ADMIN_P2P_MAC_FORCE_TRUE,$/;"	e	enum:rstp_admin_point_to_point_mac_state
RSTP_BRIDGE_HELLO_TIME	lib/rstp.h	79;"	d
RSTP_COMMON_H	lib/rstp-common.h	30;"	d
RSTP_DEFAULT_AGEING_TIME	lib/rstp.h	63;"	d
RSTP_DEFAULT_BRIDGE_FORWARD_DELAY	lib/rstp.h	71;"	d
RSTP_DEFAULT_BRIDGE_MAX_AGE	lib/rstp.h	67;"	d
RSTP_DEFAULT_PORT_PATH_COST	lib/rstp.h	86;"	d
RSTP_DEFAULT_PORT_PRIORITY	lib/rstp.h	58;"	d
RSTP_DEFAULT_PRIORITY	lib/rstp.h	52;"	d
RSTP_DEFAULT_TRANSMIT_HOLD_COUNT	lib/rstp.h	75;"	d
RSTP_DISABLED	lib/rstp.h	/^    RSTP_DISABLED,$/;"	e	enum:rstp_state
RSTP_DISCARDING	lib/rstp.h	/^    RSTP_DISCARDING$/;"	e	enum:rstp_state
RSTP_FORWARDING	lib/rstp.h	/^    RSTP_FORWARDING,$/;"	e	enum:rstp_state
RSTP_H	lib/rstp.h	31;"	d
RSTP_ID_ARGS	lib/rstp.h	95;"	d
RSTP_ID_FMT	lib/rstp.h	94;"	d
RSTP_LEARNING	lib/rstp.h	/^    RSTP_LEARNING,$/;"	e	enum:rstp_state
RSTP_MAX_AGEING_TIME	lib/rstp.h	65;"	d
RSTP_MAX_BRIDGE_FORWARD_DELAY	lib/rstp.h	73;"	d
RSTP_MAX_BRIDGE_MAX_AGE	lib/rstp.h	69;"	d
RSTP_MAX_PORTS	lib/rstp.h	44;"	d
RSTP_MAX_PORT_PATH_COST	lib/rstp.h	85;"	d
RSTP_MAX_PORT_PRIORITY	lib/rstp.h	56;"	d
RSTP_MAX_PRIORITY	lib/rstp.h	50;"	d
RSTP_MAX_TRANSMIT_HOLD_COUNT	lib/rstp.h	77;"	d
RSTP_MIGRATE_TIME	lib/rstp.h	81;"	d
RSTP_MIN_AGEING_TIME	lib/rstp.h	64;"	d
RSTP_MIN_BRIDGE_FORWARD_DELAY	lib/rstp.h	72;"	d
RSTP_MIN_BRIDGE_MAX_AGE	lib/rstp.h	68;"	d
RSTP_MIN_PORT_PATH_COST	lib/rstp.h	84;"	d
RSTP_MIN_PORT_PRIORITY	lib/rstp.h	55;"	d
RSTP_MIN_PRIORITY	lib/rstp.h	49;"	d
RSTP_MIN_TRANSMIT_HOLD_COUNT	lib/rstp.h	76;"	d
RSTP_OPER_P2P_MAC_STATE_DISABLED	lib/rstp-common.h	/^    RSTP_OPER_P2P_MAC_STATE_DISABLED = 0,$/;"	e	enum:oper_p2p_mac_state
RSTP_OPER_P2P_MAC_STATE_ENABLED	lib/rstp-common.h	/^    RSTP_OPER_P2P_MAC_STATE_ENABLED = 1$/;"	e	enum:oper_p2p_mac_state
RSTP_PORT_ID_FMT	lib/rstp.h	100;"	d
RSTP_PRIORITY_STEP	lib/rstp.h	51;"	d
RSTP_STATE_MACHINES_H	lib/rstp-state-machines.h	31;"	d
RSTP_STEP_PORT_PRIORITY	lib/rstp.h	57;"	d
RTBSD_H	lib/rtbsd.h	18;"	d
RTE_LOGTYPE_APP	tests/dpdk/ring_client.c	52;"	d	file:
RTNETLINK_LINK_H	lib/rtnetlink.h	18;"	d
RT_MANIFEST	datapath-windows/ovsext/resource.h	606;"	d
RULE_CAST	ofproto/ofproto-dpif.h	183;"	d
RULE_CAST	ofproto/ofproto-dpif.h	231;"	d
RUNDIR	Makefile	/^RUNDIR = ${localstatedir}\/run\/openvswitch$/;"	m
RUNDIR	datapath/Makefile	/^RUNDIR = ${localstatedir}\/run\/openvswitch$/;"	m
RUNDIR	utilities/ovs-dev.py	/^RUNDIR = OVS_SRC + "\/_run"$/;"	v
RUNDLGORD	datapath-windows/ovsext/resource.h	1410;"	d
RUNNING_ON_VALGRIND	lib/valgrind.h	23;"	d
RUP2_1	lib/util.h	136;"	d
RUP2_2	lib/util.h	137;"	d
RUP2_3	lib/util.h	138;"	d
RUP2_4	lib/util.h	139;"	d
RUP2_5	lib/util.h	140;"	d
RUP2_6	lib/util.h	141;"	d
RUP2__	lib/util.h	135;"	d
RUSAGE_CHILDREN	include/windows/sys/resource.h	44;"	d
RUSAGE_SELF	include/windows/sys/resource.h	40;"	d
RUSAGE_THREAD	include/windows/sys/resource.h	48;"	d
RW	lib/db-ctl-base.h	/^    enum { RO, RW } mode;       \/* Does this command modify the database? *\/$/;"	e	enum:ctl_command_syntax::__anon84
RXQ_SIZE	tests/test-rstp.c	35;"	d	file:
RXQ_SIZE	tests/test-stp.c	48;"	d	file:
Racoon	debian/ovs-monitor-ipsec	/^class Racoon:$/;"	c
RealType	python/ovs/db/types.py	/^RealType = AtomicType("real", 0.0, (int, long, float))$/;"	v
Reconnect	python/ovs/reconnect.py	/^    class Reconnect(object):$/;"	c	class:Reconnect
Reconnect	python/ovs/reconnect.py	/^class Reconnect(object):$/;"	c
RecordRef	tests/MockXenAPI.py	/^class RecordRef(object):$/;"	c
Register	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def Register(self):$/;"	m	class:XSFeatureVSwitch
RemoveFlow	datapath-windows/ovsext/Flow.c	/^RemoveFlow(OVS_DATAPATH *datapath,$/;"	f
Render	utilities/ovs-dpctl-top	/^class Render:$/;"	c
ReportFlowInfo	datapath-windows/ovsext/Flow.c	/^ReportFlowInfo(OvsFlow *flow,$/;"	f	file:
Row	python/ovs/db/idl.py	/^class Row(object):$/;"	c
RowMeta	utilities/ovs-dpctl-top	/^class RowMeta:$/;"	c
SAME	lib/rstp-state-machines.c	/^    SAME = 2$/;"	e	enum:vector_comparison	file:
SAMPLE_ACTION_DEPTH	datapath/datapath.h	39;"	d
SAT_MATH_H	lib/sat-math.h	18;"	d
SBARS_SIZEGRIP	datapath-windows/ovsext/resource.h	1033;"	d
SBARS_TOOLTIPS	datapath-windows/ovsext/resource.h	1426;"	d
SBREC_CHASSIS_COL_ENCAPS	ovn/lib/ovn-sb-idl.h	/^    SBREC_CHASSIS_COL_ENCAPS,$/;"	e	enum:__anon206
SBREC_CHASSIS_COL_NAME	ovn/lib/ovn-sb-idl.h	/^    SBREC_CHASSIS_COL_NAME,$/;"	e	enum:__anon206
SBREC_CHASSIS_COL_VTEP_LOGICAL_SWITCHES	ovn/lib/ovn-sb-idl.h	/^    SBREC_CHASSIS_COL_VTEP_LOGICAL_SWITCHES,$/;"	e	enum:__anon206
SBREC_CHASSIS_FOR_EACH	ovn/lib/ovn-sb-idl.h	46;"	d
SBREC_CHASSIS_FOR_EACH_SAFE	ovn/lib/ovn-sb-idl.h	50;"	d
SBREC_CHASSIS_N_COLUMNS	ovn/lib/ovn-sb-idl.h	/^    SBREC_CHASSIS_N_COLUMNS$/;"	e	enum:__anon206
SBREC_DATAPATH_BINDING_COL_EXTERNAL_IDS	ovn/lib/ovn-sb-idl.h	/^    SBREC_DATAPATH_BINDING_COL_EXTERNAL_IDS,$/;"	e	enum:__anon207
SBREC_DATAPATH_BINDING_COL_TUNNEL_KEY	ovn/lib/ovn-sb-idl.h	/^    SBREC_DATAPATH_BINDING_COL_TUNNEL_KEY,$/;"	e	enum:__anon207
SBREC_DATAPATH_BINDING_FOR_EACH	ovn/lib/ovn-sb-idl.h	97;"	d
SBREC_DATAPATH_BINDING_FOR_EACH_SAFE	ovn/lib/ovn-sb-idl.h	101;"	d
SBREC_DATAPATH_BINDING_N_COLUMNS	ovn/lib/ovn-sb-idl.h	/^    SBREC_DATAPATH_BINDING_N_COLUMNS$/;"	e	enum:__anon207
SBREC_ENCAP_COL_IP	ovn/lib/ovn-sb-idl.h	/^    SBREC_ENCAP_COL_IP,$/;"	e	enum:__anon208
SBREC_ENCAP_COL_OPTIONS	ovn/lib/ovn-sb-idl.h	/^    SBREC_ENCAP_COL_OPTIONS,$/;"	e	enum:__anon208
SBREC_ENCAP_COL_TYPE	ovn/lib/ovn-sb-idl.h	/^    SBREC_ENCAP_COL_TYPE,$/;"	e	enum:__anon208
SBREC_ENCAP_FOR_EACH	ovn/lib/ovn-sb-idl.h	150;"	d
SBREC_ENCAP_FOR_EACH_SAFE	ovn/lib/ovn-sb-idl.h	154;"	d
SBREC_ENCAP_N_COLUMNS	ovn/lib/ovn-sb-idl.h	/^    SBREC_ENCAP_N_COLUMNS$/;"	e	enum:__anon208
SBREC_IDL_HEADER	ovn/lib/ovn-sb-idl.h	4;"	d
SBREC_LOGICAL_FLOW_COL_ACTIONS	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_COL_ACTIONS,$/;"	e	enum:__anon209
SBREC_LOGICAL_FLOW_COL_EXTERNAL_IDS	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_COL_EXTERNAL_IDS,$/;"	e	enum:__anon209
SBREC_LOGICAL_FLOW_COL_LOGICAL_DATAPATH	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_COL_LOGICAL_DATAPATH,$/;"	e	enum:__anon209
SBREC_LOGICAL_FLOW_COL_MATCH	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_COL_MATCH,$/;"	e	enum:__anon209
SBREC_LOGICAL_FLOW_COL_PIPELINE	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_COL_PIPELINE,$/;"	e	enum:__anon209
SBREC_LOGICAL_FLOW_COL_PRIORITY	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_COL_PRIORITY,$/;"	e	enum:__anon209
SBREC_LOGICAL_FLOW_COL_TABLE_ID	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_COL_TABLE_ID,$/;"	e	enum:__anon209
SBREC_LOGICAL_FLOW_FOR_EACH	ovn/lib/ovn-sb-idl.h	226;"	d
SBREC_LOGICAL_FLOW_FOR_EACH_SAFE	ovn/lib/ovn-sb-idl.h	230;"	d
SBREC_LOGICAL_FLOW_N_COLUMNS	ovn/lib/ovn-sb-idl.h	/^    SBREC_LOGICAL_FLOW_N_COLUMNS$/;"	e	enum:__anon209
SBREC_MULTICAST_GROUP_COL_DATAPATH	ovn/lib/ovn-sb-idl.h	/^    SBREC_MULTICAST_GROUP_COL_DATAPATH,$/;"	e	enum:__anon210
SBREC_MULTICAST_GROUP_COL_NAME	ovn/lib/ovn-sb-idl.h	/^    SBREC_MULTICAST_GROUP_COL_NAME,$/;"	e	enum:__anon210
SBREC_MULTICAST_GROUP_COL_PORTS	ovn/lib/ovn-sb-idl.h	/^    SBREC_MULTICAST_GROUP_COL_PORTS,$/;"	e	enum:__anon210
SBREC_MULTICAST_GROUP_COL_TUNNEL_KEY	ovn/lib/ovn-sb-idl.h	/^    SBREC_MULTICAST_GROUP_COL_TUNNEL_KEY,$/;"	e	enum:__anon210
SBREC_MULTICAST_GROUP_FOR_EACH	ovn/lib/ovn-sb-idl.h	300;"	d
SBREC_MULTICAST_GROUP_FOR_EACH_SAFE	ovn/lib/ovn-sb-idl.h	304;"	d
SBREC_MULTICAST_GROUP_N_COLUMNS	ovn/lib/ovn-sb-idl.h	/^    SBREC_MULTICAST_GROUP_N_COLUMNS$/;"	e	enum:__anon210
SBREC_N_TABLES	ovn/lib/ovn-sb-idl.h	/^    SBREC_N_TABLES$/;"	e	enum:__anon212
SBREC_PORT_BINDING_COL_CHASSIS	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_CHASSIS,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_DATAPATH	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_DATAPATH,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_LOGICAL_PORT	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_LOGICAL_PORT,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_MAC	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_MAC,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_OPTIONS	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_OPTIONS,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_PARENT_PORT	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_PARENT_PORT,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_TAG	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_TAG,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_TUNNEL_KEY	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_TUNNEL_KEY,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_COL_TYPE	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_COL_TYPE,$/;"	e	enum:__anon211
SBREC_PORT_BINDING_FOR_EACH	ovn/lib/ovn-sb-idl.h	391;"	d
SBREC_PORT_BINDING_FOR_EACH_SAFE	ovn/lib/ovn-sb-idl.h	395;"	d
SBREC_PORT_BINDING_N_COLUMNS	ovn/lib/ovn-sb-idl.h	/^    SBREC_PORT_BINDING_N_COLUMNS$/;"	e	enum:__anon211
SBREC_TABLE_CHASSIS	ovn/lib/ovn-sb-idl.h	/^    SBREC_TABLE_CHASSIS,$/;"	e	enum:__anon212
SBREC_TABLE_DATAPATH_BINDING	ovn/lib/ovn-sb-idl.h	/^    SBREC_TABLE_DATAPATH_BINDING,$/;"	e	enum:__anon212
SBREC_TABLE_ENCAP	ovn/lib/ovn-sb-idl.h	/^    SBREC_TABLE_ENCAP,$/;"	e	enum:__anon212
SBREC_TABLE_LOGICAL_FLOW	ovn/lib/ovn-sb-idl.h	/^    SBREC_TABLE_LOGICAL_FLOW,$/;"	e	enum:__anon212
SBREC_TABLE_MULTICAST_GROUP	ovn/lib/ovn-sb-idl.h	/^    SBREC_TABLE_MULTICAST_GROUP,$/;"	e	enum:__anon212
SBREC_TABLE_PORT_BINDING	ovn/lib/ovn-sb-idl.h	/^    SBREC_TABLE_PORT_BINDING,$/;"	e	enum:__anon212
SBT_TOOLTIPS	datapath-windows/ovsext/resource.h	1427;"	d
SCAN_BEGIN	lib/odp-util.c	3399;"	d	file:
SCAN_BEGIN_FULLY_MASKED	lib/odp-util.c	3408;"	d	file:
SCAN_BEGIN_INIT	lib/odp-util.c	3417;"	d	file:
SCAN_BEGIN_NESTED	lib/odp-util.c	3453;"	d	file:
SCAN_CHAR	lib/util.c	/^        SCAN_CHAR,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_DISCARD	lib/util.c	/^        SCAN_DISCARD,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_END	lib/odp-util.c	3497;"	d	file:
SCAN_END_NESTED	lib/odp-util.c	3463;"	d	file:
SCAN_END_SINGLE	lib/odp-util.c	3503;"	d	file:
SCAN_FIELD	lib/odp-util.c	3433;"	d	file:
SCAN_FIELD_NESTED	lib/odp-util.c	3483;"	d	file:
SCAN_FIELD_NESTED_FUNC	lib/odp-util.c	3486;"	d	file:
SCAN_FIELD_NESTED__	lib/odp-util.c	3472;"	d	file:
SCAN_FINISH	lib/odp-util.c	3440;"	d	file:
SCAN_FINISH_SINGLE	lib/odp-util.c	3446;"	d	file:
SCAN_IF	lib/odp-util.c	3391;"	d	file:
SCAN_INT	lib/util.c	/^        SCAN_INT,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_INTMAX_T	lib/util.c	/^        SCAN_INTMAX_T,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_LLONG	lib/util.c	/^        SCAN_LLONG,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_LONG	lib/util.c	/^        SCAN_LONG,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_PTRDIFF_T	lib/util.c	/^        SCAN_PTRDIFF_T,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_PUT	lib/odp-util.c	3489;"	d	file:
SCAN_PUT_ATTR	lib/odp-util.c	3379;"	d	file:
SCAN_SHORT	lib/util.c	/^        SCAN_SHORT,$/;"	e	enum:scan_spec::__anon162	file:
SCAN_SINGLE	lib/odp-util.c	3509;"	d	file:
SCAN_SINGLE_FULLY_MASKED	lib/odp-util.c	3514;"	d	file:
SCAN_SINGLE_PORT	lib/odp-util.c	3520;"	d	file:
SCAN_SIZE_T	lib/util.c	/^        SCAN_SIZE_T$/;"	e	enum:scan_spec::__anon162	file:
SCAN_TYPE	lib/odp-util.c	3425;"	d	file:
SCF_ISSECURE	datapath-windows/ovsext/resource.h	67;"	d
SCM_RIGHTS	include/sparse/sys/socket.h	/^    SCM_RIGHTS = 1$/;"	e	enum:__anon69
SCRIPTS	Makefile	/^SCRIPTS = $(bin_SCRIPTS) $(completion_SCRIPTS) $(dist_noinst_SCRIPTS) \\$/;"	m
SCS_CONNECTED	lib/stream.c	/^    SCS_CONNECTED,              \/* Connection established. *\/$/;"	e	enum:stream_state	file:
SCS_CONNECTING	lib/stream.c	/^    SCS_CONNECTING,             \/* Underlying stream is not connected. *\/$/;"	e	enum:stream_state	file:
SCS_DISCONNECTED	lib/stream.c	/^    SCS_DISCONNECTED            \/* Connection failed or connection closed. *\/$/;"	e	enum:stream_state	file:
SCTP_HEADER_LEN	lib/packets.h	675;"	d
SC_ARRANGE	datapath-windows/ovsext/resource.h	1552;"	d
SC_CLOSE	datapath-windows/ovsext/resource.h	1547;"	d
SC_CONTEXTHELP	datapath-windows/ovsext/resource.h	1559;"	d
SC_DEFAULT	datapath-windows/ovsext/resource.h	1557;"	d
SC_HOTKEY	datapath-windows/ovsext/resource.h	1556;"	d
SC_HSCROLL	datapath-windows/ovsext/resource.h	1549;"	d
SC_KEYMENU	datapath-windows/ovsext/resource.h	1551;"	d
SC_MAXIMIZE	datapath-windows/ovsext/resource.h	1544;"	d
SC_MINIMIZE	datapath-windows/ovsext/resource.h	1543;"	d
SC_MONITORPOWER	datapath-windows/ovsext/resource.h	1558;"	d
SC_MOUSEMENU	datapath-windows/ovsext/resource.h	1550;"	d
SC_MOVE	datapath-windows/ovsext/resource.h	1542;"	d
SC_NEXTWINDOW	datapath-windows/ovsext/resource.h	1545;"	d
SC_PREVWINDOW	datapath-windows/ovsext/resource.h	1546;"	d
SC_RESTORE	datapath-windows/ovsext/resource.h	1553;"	d
SC_SCREENSAVE	datapath-windows/ovsext/resource.h	1555;"	d
SC_SEPARATOR	datapath-windows/ovsext/resource.h	1541;"	d
SC_SIZE	datapath-windows/ovsext/resource.h	1540;"	d
SC_TASKLIST	datapath-windows/ovsext/resource.h	1554;"	d
SC_VSCROLL	datapath-windows/ovsext/resource.h	1548;"	d
SED	Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SED	datapath/Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SENTINEL	lib/compiler.h	26;"	d
SENTINEL	lib/compiler.h	31;"	d
SEQ_H	lib/seq.h	18;"	d
SERIAL_NUM_LEN	include/openflow/openflow-common.h	328;"	d
SERVER	lib/stream-ssl.c	/^    SERVER$/;"	e	enum:session_type	file:
SERVER_H	ovsdb/server.h	17;"	d
SETKEY	debian/ovs-monitor-ipsec	/^SETKEY = "\/usr\/sbin\/setkey"$/;"	v
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	datapath/Makefile	/^SET_MAKE = $/;"	m
SET_MASKED	datapath/actions.c	217;"	d	file:
SET_MASKED	datapath/linux/actions.c	217;"	d	file:
SFLADDRESSTYPE_IP_V4	lib/sflow.h	/^    SFLADDRESSTYPE_IP_V4 = 1,$/;"	e	enum:SFLAddress_type
SFLADDRESSTYPE_IP_V6	lib/sflow.h	/^    SFLADDRESSTYPE_IP_V6 = 2$/;"	e	enum:SFLAddress_type
SFLADD_ELEMENT	lib/sflow.h	638;"	d
SFLAPPResources_counters	lib/sflow.h	/^} SFLAPPResources_counters;$/;"	t	typeref:struct:_SFLAPPResources_counters
SFLAddress	lib/sflow.h	/^} SFLAddress;$/;"	t	typeref:struct:_SFLAddress
SFLAddress_type	lib/sflow.h	/^enum SFLAddress_type {$/;"	g
SFLAddress_value	lib/sflow.h	/^} SFLAddress_value;$/;"	t	typeref:union:_SFLAddress_value
SFLAgent	lib/sflow_api.h	/^} SFLAgent;$/;"	t	typeref:struct:_SFLAgent
SFLCOUNTERS_APP_RESOURCES	lib/sflow.h	/^    SFLCOUNTERS_APP_RESOURCES = 2203,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_ETHERNET	lib/sflow.h	/^    SFLCOUNTERS_ETHERNET     = 2,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_GENERIC	lib/sflow.h	/^    SFLCOUNTERS_GENERIC      = 1,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_LACP	lib/sflow.h	/^    SFLCOUNTERS_LACP         = 7,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_OPENFLOWPORT	lib/sflow.h	/^    SFLCOUNTERS_OPENFLOWPORT = 1004,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_OVSDP	lib/sflow.h	/^    SFLCOUNTERS_OVSDP        = 2207$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_PORTNAME	lib/sflow.h	/^    SFLCOUNTERS_PORTNAME     = 1005,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_SAMPLE	lib/sflow.h	/^    SFLCOUNTERS_SAMPLE = 2,          \/* enterprise = 0 : format = 2 *\/$/;"	e	enum:SFL_sample_tag
SFLCOUNTERS_SAMPLE_EXPANDED	lib/sflow.h	/^    SFLCOUNTERS_SAMPLE_EXPANDED = 4  \/* enterprise = 0 : format = 4 *\/$/;"	e	enum:SFL_sample_tag
SFLCOUNTERS_TOKENRING	lib/sflow.h	/^    SFLCOUNTERS_TOKENRING    = 3,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_VG	lib/sflow.h	/^    SFLCOUNTERS_VG           = 4,$/;"	e	enum:SFLCounters_type_tag
SFLCOUNTERS_VLAN	lib/sflow.h	/^    SFLCOUNTERS_VLAN         = 5,$/;"	e	enum:SFLCounters_type_tag
SFLCounters_sample	lib/sflow.h	/^} SFLCounters_sample;$/;"	t	typeref:struct:_SFLCounters_sample
SFLCounters_sample_element	lib/sflow.h	/^} SFLCounters_sample_element;$/;"	t	typeref:struct:_SFLCounters_sample_element
SFLCounters_sample_expanded	lib/sflow.h	/^} SFLCounters_sample_expanded;$/;"	t	typeref:struct:_SFLCounters_sample_expanded
SFLCounters_type	lib/sflow.h	/^} SFLCounters_type;$/;"	t	typeref:union:_SFLCounters_type
SFLCounters_type_tag	lib/sflow.h	/^enum SFLCounters_type_tag {$/;"	g
SFLDATAGRAM_VERSION2	lib/sflow.h	/^    SFLDATAGRAM_VERSION2 = 2,$/;"	e	enum:SFLDatagram_version
SFLDATAGRAM_VERSION4	lib/sflow.h	/^    SFLDATAGRAM_VERSION4 = 4,$/;"	e	enum:SFLDatagram_version
SFLDATAGRAM_VERSION5	lib/sflow.h	/^    SFLDATAGRAM_VERSION5 = 5$/;"	e	enum:SFLDatagram_version
SFLDataSource_instance	lib/sflow_api.h	/^} SFLDataSource_instance;$/;"	t	typeref:struct:_SFLDataSource_instance
SFLDatagram_version	lib/sflow.h	/^enum SFLDatagram_version {$/;"	g
SFLEXTENDED_AS_SEQUENCE	lib/sflow.h	/^    SFLEXTENDED_AS_SEQUENCE = 2  \/* Ordered sequence of ASs *\/$/;"	e	enum:SFLExtended_as_path_segment_type
SFLEXTENDED_AS_SET	lib/sflow.h	/^    SFLEXTENDED_AS_SET = 1,      \/* Unordered set of ASs *\/$/;"	e	enum:SFLExtended_as_path_segment_type
SFLEXTENDED_URL_DST	lib/sflow.h	/^    SFLEXTENDED_URL_DST = 2  \/* URL is associated with destination address *\/$/;"	e	enum:SFLExtended_url_direction
SFLEXTENDED_URL_SRC	lib/sflow.h	/^    SFLEXTENDED_URL_SRC = 1, \/* URL is associated with source address *\/$/;"	e	enum:SFLExtended_url_direction
SFLEthernet_counters	lib/sflow.h	/^} SFLEthernet_counters;$/;"	t	typeref:struct:_SFLEthernet_counters
SFLExtended_as_path_segment	lib/sflow.h	/^} SFLExtended_as_path_segment;$/;"	t	typeref:struct:_SFLExtended_as_path_segment
SFLExtended_as_path_segment_type	lib/sflow.h	/^enum SFLExtended_as_path_segment_type {$/;"	g
SFLExtended_gateway	lib/sflow.h	/^} SFLExtended_gateway;$/;"	t	typeref:struct:_SFLExtended_gateway
SFLExtended_mpls	lib/sflow.h	/^} SFLExtended_mpls;$/;"	t	typeref:struct:_SFLExtended_mpls
SFLExtended_mpls_FTN	lib/sflow.h	/^} SFLExtended_mpls_FTN;$/;"	t	typeref:struct:_SFLExtended_mpls_FTN
SFLExtended_mpls_LDP_FEC	lib/sflow.h	/^} SFLExtended_mpls_LDP_FEC;$/;"	t	typeref:struct:_SFLExtended_mpls_LDP_FEC
SFLExtended_mpls_tunnel	lib/sflow.h	/^} SFLExtended_mpls_tunnel;$/;"	t	typeref:struct:_SFLExtended_mpls_tunnel
SFLExtended_mpls_vc	lib/sflow.h	/^} SFLExtended_mpls_vc;$/;"	t	typeref:struct:_SFLExtended_mpls_vc
SFLExtended_nat	lib/sflow.h	/^} SFLExtended_nat;$/;"	t	typeref:struct:_SFLExtended_nat
SFLExtended_router	lib/sflow.h	/^} SFLExtended_router;$/;"	t	typeref:struct:_SFLExtended_router
SFLExtended_switch	lib/sflow.h	/^} SFLExtended_switch;$/;"	t	typeref:struct:_SFLExtended_switch
SFLExtended_url	lib/sflow.h	/^} SFLExtended_url;$/;"	t	typeref:struct:_SFLExtended_url
SFLExtended_url_direction	lib/sflow.h	/^enum SFLExtended_url_direction {$/;"	g
SFLExtended_user	lib/sflow.h	/^} SFLExtended_user;$/;"	t	typeref:struct:_SFLExtended_user
SFLExtended_vlan_tunnel	lib/sflow.h	/^} SFLExtended_vlan_tunnel;$/;"	t	typeref:struct:_SFLExtended_vlan_tunnel
SFLExtended_vni	lib/sflow.h	/^} SFLExtended_vni;$/;"	t	typeref:struct:_SFLExtended_vni
SFLFLOW_ETHERNET	lib/sflow.h	/^    SFLFLOW_ETHERNET  = 2,      \/* MAC layer information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_GATEWAY	lib/sflow.h	/^    SFLFLOW_EX_GATEWAY   = 1003,      \/* Extended gateway router information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_IPV4_TUNNEL_EGRESS	lib/sflow.h	/^    SFLFLOW_EX_IPV4_TUNNEL_EGRESS  = 1023, \/* http:\/\/sflow.org\/sflow_tunnels.txt *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_IPV4_TUNNEL_INGRESS	lib/sflow.h	/^    SFLFLOW_EX_IPV4_TUNNEL_INGRESS = 1024,$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_MPLS	lib/sflow.h	/^    SFLFLOW_EX_MPLS      = 1006,      \/* Extended MPLS information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_MPLS_FTN	lib/sflow.h	/^    SFLFLOW_EX_MPLS_FTN     = 1010,$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_MPLS_LDP_FEC	lib/sflow.h	/^    SFLFLOW_EX_MPLS_LDP_FEC = 1011,$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_MPLS_TUNNEL	lib/sflow.h	/^    SFLFLOW_EX_MPLS_TUNNEL  = 1008,   \/* additional MPLS information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_MPLS_VC	lib/sflow.h	/^    SFLFLOW_EX_MPLS_VC      = 1009,$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_NAT	lib/sflow.h	/^    SFLFLOW_EX_NAT       = 1007,      \/* Extended NAT information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_ROUTER	lib/sflow.h	/^    SFLFLOW_EX_ROUTER    = 1002,      \/* Extended router information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_SWITCH	lib/sflow.h	/^    SFLFLOW_EX_SWITCH    = 1001,      \/* Extended switch information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_URL	lib/sflow.h	/^    SFLFLOW_EX_URL       = 1005,      \/* Extended URL information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_USER	lib/sflow.h	/^    SFLFLOW_EX_USER      = 1004,      \/* Extended TACAS\/RADIUS user information *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_VLAN_TUNNEL	lib/sflow.h	/^    SFLFLOW_EX_VLAN_TUNNEL  = 1012,   \/* VLAN stack *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_VNI_EGRESS	lib/sflow.h	/^    SFLFLOW_EX_VNI_EGRESS          = 1029,$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_EX_VNI_INGRESS	lib/sflow.h	/^    SFLFLOW_EX_VNI_INGRESS         = 1030,$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_HEADER	lib/sflow.h	/^    SFLFLOW_HEADER    = 1,      \/* Packet headers are sampled *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_IPV4	lib/sflow.h	/^    SFLFLOW_IPV4      = 3,      \/* IP version 4 data *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_IPV6	lib/sflow.h	/^    SFLFLOW_IPV6      = 4,      \/* IP version 6 data *\/$/;"	e	enum:SFLFlow_type_tag
SFLFLOW_SAMPLE	lib/sflow.h	/^    SFLFLOW_SAMPLE = 1,              \/* enterprise = 0 : format = 1 *\/$/;"	e	enum:SFL_sample_tag
SFLFLOW_SAMPLE_EXPANDED	lib/sflow.h	/^    SFLFLOW_SAMPLE_EXPANDED = 3,     \/* enterprise = 0 : format = 3 *\/$/;"	e	enum:SFL_sample_tag
SFLFlow_sample	lib/sflow.h	/^} SFLFlow_sample;$/;"	t	typeref:struct:_SFLFlow_sample
SFLFlow_sample_element	lib/sflow.h	/^} SFLFlow_sample_element;$/;"	t	typeref:struct:_SFLFlow_sample_element
SFLFlow_sample_expanded	lib/sflow.h	/^} SFLFlow_sample_expanded;$/;"	t	typeref:struct:_SFLFlow_sample_expanded
SFLFlow_type	lib/sflow.h	/^} SFLFlow_type;$/;"	t	typeref:union:_SFLFlow_type
SFLFlow_type_tag	lib/sflow.h	/^enum SFLFlow_type_tag {$/;"	g
SFLHEADER_AAL5	lib/sflow.h	/^    SFLHEADER_AAL5                 = 9,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_AAL5_IP	lib/sflow.h	/^    SFLHEADER_AAL5_IP              = 10, \/* e.g. Cisco AAL5 mux *\/$/;"	e	enum:SFLHeader_protocol
SFLHEADER_ETHERNET_ISO8023	lib/sflow.h	/^    SFLHEADER_ETHERNET_ISO8023     = 1,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_FDDI	lib/sflow.h	/^    SFLHEADER_FDDI                 = 4,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_FRAME_RELAY	lib/sflow.h	/^    SFLHEADER_FRAME_RELAY          = 5,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_IPv4	lib/sflow.h	/^    SFLHEADER_IPv4                 = 11,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_IPv6	lib/sflow.h	/^    SFLHEADER_IPv6                 = 12,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_ISO88024_TOKENBUS	lib/sflow.h	/^    SFLHEADER_ISO88024_TOKENBUS    = 2,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_ISO88025_TOKENRING	lib/sflow.h	/^    SFLHEADER_ISO88025_TOKENRING   = 3,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_MPLS	lib/sflow.h	/^    SFLHEADER_MPLS                 = 13$/;"	e	enum:SFLHeader_protocol
SFLHEADER_PPP	lib/sflow.h	/^    SFLHEADER_PPP                  = 7,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_SMDS	lib/sflow.h	/^    SFLHEADER_SMDS                 = 8,$/;"	e	enum:SFLHeader_protocol
SFLHEADER_X25	lib/sflow.h	/^    SFLHEADER_X25                  = 6,$/;"	e	enum:SFLHeader_protocol
SFLHeader_protocol	lib/sflow.h	/^enum SFLHeader_protocol {$/;"	g
SFLIPv4	lib/sflow.h	/^} SFLIPv4;$/;"	t	typeref:struct:__anon153
SFLIPv6	lib/sflow.h	/^} SFLIPv6;$/;"	t	typeref:struct:__anon154
SFLIf_counters	lib/sflow.h	/^} SFLIf_counters;$/;"	t	typeref:struct:_SFLIf_counters
SFLLACP_counters	lib/sflow.h	/^} SFLLACP_counters;$/;"	t	typeref:struct:_SFLLACP_counters
SFLLACP_portState	lib/sflow.h	/^} SFLLACP_portState;$/;"	t	typeref:union:_SFLLACP_portState
SFLLabelStack	lib/sflow.h	/^} SFLLabelStack;$/;"	t	typeref:struct:_SFLLabelStack
SFLOVSDP_counters	lib/sflow.h	/^} SFLOVSDP_counters;$/;"	t	typeref:struct:_SFLOVSDP_counters
SFLOWXDR_assert	tests/test-sflow.c	136;"	d	file:
SFLOWXDR_throw	tests/test-sflow.c	135;"	d	file:
SFLOWXDR_try	tests/test-sflow.c	134;"	d	file:
SFLOW_ADDRTYPE_IP4	tests/test-sflow.c	/^        SFLOW_ADDRTYPE_IP4,$/;"	e	enum:sflow_addr::__anon228	file:
SFLOW_ADDRTYPE_IP6	tests/test-sflow.c	/^        SFLOW_ADDRTYPE_IP6$/;"	e	enum:sflow_addr::__anon228	file:
SFLOW_ADDRTYPE_undefined	tests/test-sflow.c	/^        SFLOW_ADDRTYPE_undefined = 0,$/;"	e	enum:sflow_addr::__anon228	file:
SFLOW_API_H	lib/sflow_api.h	9;"	d
SFLOW_COUNTERS_SAMPLE	tests/test-sflow.c	51;"	d	file:
SFLOW_COUNTERS_SAMPLE_EXPANDED	tests/test-sflow.c	53;"	d	file:
SFLOW_FLOW_SAMPLE	tests/test-sflow.c	50;"	d	file:
SFLOW_FLOW_SAMPLE_EXPANDED	tests/test-sflow.c	52;"	d	file:
SFLOW_GC_SUBID_UNCLAIMED	ofproto/ofproto-dpif-sflow.c	53;"	d	file:
SFLOW_H	lib/sflow.h	9;"	d
SFLOW_HEX_SCRATCH	tests/test-sflow.c	349;"	d	file:
SFLOW_MIN_LEN	tests/test-sflow.c	47;"	d	file:
SFLOW_TAG_CTR_IFCOUNTERS	tests/test-sflow.c	56;"	d	file:
SFLOW_TAG_CTR_LACPCOUNTERS	tests/test-sflow.c	57;"	d	file:
SFLOW_TAG_CTR_OPENFLOWPORT	tests/test-sflow.c	58;"	d	file:
SFLOW_TAG_CTR_PORTNAME	tests/test-sflow.c	59;"	d	file:
SFLOW_TAG_PKT_HEADER	tests/test-sflow.c	60;"	d	file:
SFLOW_TAG_PKT_MPLS	tests/test-sflow.c	66;"	d	file:
SFLOW_TAG_PKT_SWITCH	tests/test-sflow.c	61;"	d	file:
SFLOW_TAG_PKT_TUNNEL4_IN	tests/test-sflow.c	63;"	d	file:
SFLOW_TAG_PKT_TUNNEL4_OUT	tests/test-sflow.c	62;"	d	file:
SFLOW_TAG_PKT_TUNNEL_VNI_IN	tests/test-sflow.c	65;"	d	file:
SFLOW_TAG_PKT_TUNNEL_VNI_OUT	tests/test-sflow.c	64;"	d	file:
SFLOW_UPCALL	ofproto/ofproto-dpif-upcall.c	/^    SFLOW_UPCALL,               \/* sFlow sample. *\/$/;"	e	enum:upcall_type	file:
SFLOW_VERSION_5	tests/test-sflow.c	46;"	d	file:
SFLOpenFlowPort	lib/sflow.h	/^} SFLOpenFlowPort;$/;"	t	typeref:struct:__anon156
SFLPoller	lib/sflow_api.h	/^} SFLPoller;$/;"	t	typeref:struct:_SFLPoller
SFLPortName	lib/sflow.h	/^} SFLPortName;$/;"	t	typeref:struct:__anon157
SFLReceiver	lib/sflow_api.h	/^} SFLReceiver;$/;"	t	typeref:struct:_SFLReceiver
SFLSampleCollector	lib/sflow_api.h	/^} SFLSampleCollector;$/;"	t	typeref:struct:_SFLSampleCollector
SFLSample_datagram_hdr	lib/sflow.h	/^} SFLSample_datagram_hdr;$/;"	t	typeref:struct:_SFLSample_datagram_hdr
SFLSampled_ethernet	lib/sflow.h	/^} SFLSampled_ethernet;$/;"	t	typeref:struct:_SFLSampled_ethernet
SFLSampled_header	lib/sflow.h	/^} SFLSampled_header;$/;"	t	typeref:struct:_SFLSampled_header
SFLSampled_ipv4	lib/sflow.h	/^} SFLSampled_ipv4;$/;"	t	typeref:struct:_SFLSampled_ipv4
SFLSampled_ipv6	lib/sflow.h	/^} SFLSampled_ipv6;$/;"	t	typeref:struct:_SFLSampled_ipv6
SFLSampler	lib/sflow_api.h	/^} SFLSampler;$/;"	t	typeref:struct:_SFLSampler
SFLString	lib/sflow.h	/^} SFLString;$/;"	t	typeref:struct:_SFLString
SFLTokenring_counters	lib/sflow.h	/^} SFLTokenring_counters;$/;"	t	typeref:struct:_SFLTokenring_counters
SFLVg_counters	lib/sflow.h	/^} SFLVg_counters;$/;"	t	typeref:struct:_SFLVg_counters
SFLVlanStack	lib/sflow.h	/^typedef SFLLabelStack SFLVlanStack;$/;"	t
SFLVlan_counters	lib/sflow.h	/^} SFLVlan_counters;$/;"	t	typeref:struct:_SFLVlan_counters
SFL_ALLOC	lib/sflow_api.h	340;"	d
SFL_COUNTERS_SAMPLE_TYPE	lib/sflow_api.h	67;"	d
SFL_COUNTERS_SAMPLE_TYPE	lib/sflow_api.h	70;"	d
SFL_CTR_APP_RESOURCES_XDR_SIZE	lib/sflow.h	565;"	d
SFL_CTR_ETHERNET_XDR_SIZE	lib/sflow.h	452;"	d
SFL_CTR_GENERIC_XDR_SIZE	lib/sflow.h	433;"	d
SFL_CTR_LACP_XDR_SIZE	lib/sflow.h	550;"	d
SFL_CTR_OPENFLOWPORT_XDR_SIZE	lib/sflow.h	511;"	d
SFL_CTR_OVSDP_XDR_SIZE	lib/sflow.h	578;"	d
SFL_DATA_PAD	lib/sflow.h	666;"	d
SFL_DEFAULT_COLLECTOR_PORT	lib/sflow.h	50;"	d
SFL_DEFAULT_DATAGRAM_SIZE	lib/sflow.h	664;"	d
SFL_DEFAULT_HEADER_SIZE	lib/sflow.h	49;"	d
SFL_DEFAULT_POLLING_INTERVAL	lib/sflow.h	52;"	d
SFL_DEFAULT_SAMPLING_RATE	lib/sflow.h	51;"	d
SFL_DSCLASS	lib/sflow.h	/^} SFL_DSCLASS;$/;"	t	typeref:enum:__anon152
SFL_DSCLASS_IFINDEX	lib/sflow.h	/^    SFL_DSCLASS_IFINDEX = 0,$/;"	e	enum:__anon152
SFL_DSCLASS_LOGICAL_ENTITY	lib/sflow.h	/^    SFL_DSCLASS_LOGICAL_ENTITY = 3$/;"	e	enum:__anon152
SFL_DSCLASS_PHYSICAL_ENTITY	lib/sflow.h	/^    SFL_DSCLASS_PHYSICAL_ENTITY = 2,$/;"	e	enum:__anon152
SFL_DSCLASS_VLAN	lib/sflow.h	/^    SFL_DSCLASS_VLAN = 1,$/;"	e	enum:__anon152
SFL_DS_CLASS	lib/sflow_api.h	77;"	d
SFL_DS_DATASOURCE	lib/sflow_api.h	73;"	d
SFL_DS_INDEX	lib/sflow_api.h	78;"	d
SFL_DS_INSTANCE	lib/sflow_api.h	76;"	d
SFL_DS_SET	lib/sflow_api.h	79;"	d
SFL_FLOW_SAMPLE_TYPE	lib/sflow_api.h	66;"	d
SFL_FLOW_SAMPLE_TYPE	lib/sflow_api.h	69;"	d
SFL_FREE	lib/sflow_api.h	341;"	d
SFL_HASHTABLE_SIZ	lib/sflow_api.h	183;"	d
SFL_MAX_DATAGRAM_SIZE	lib/sflow.h	662;"	d
SFL_MAX_PORTNAME_LEN	lib/sflow.h	518;"	d
SFL_MAX_PORTNAME_LEN	tests/test-sflow.c	69;"	d	file:
SFL_MIN_DATAGRAM_SIZE	lib/sflow.h	663;"	d
SFL_UNDEF_COUNTER	lib/sflow.h	402;"	d
SFL_UNDEF_GAUGE	lib/sflow.h	403;"	d
SFL_sample_tag	lib/sflow.h	/^enum SFL_sample_tag {$/;"	g
SFQ_N_QUEUES	lib/netdev-linux.c	3341;"	d	file:
SG_MAP	utilities/bugtool/ovs-bugtool	/^SG_MAP = 'sg_map'$/;"	v
SHA1_ARGS	lib/sha1.h	55;"	d
SHA1_DIGEST_SIZE	lib/sha1.h	36;"	d
SHA1_FMT	lib/sha1.h	52;"	d
SHA1_H	lib/sha1.h	30;"	d
SHA1_HEX_DIGEST_LEN	lib/sha1.h	37;"	d
SHASH_FOR_EACH	lib/shash.h	38;"	d
SHASH_FOR_EACH_SAFE	lib/shash.h	41;"	d
SHASH_H	lib/shash.h	18;"	d
SHASH_INITIALIZER	lib/shash.h	36;"	d
SHA_BLOCK_SIZE	lib/sha1.c	90;"	d	file:
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	datapath/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHOW_FULLSCREEN	datapath-windows/ovsext/resource.h	318;"	d
SHOW_ICONWINDOW	datapath-windows/ovsext/resource.h	228;"	d
SHOW_OPENNOACTIVATE	datapath-windows/ovsext/resource.h	350;"	d
SHOW_OPENWINDOW	datapath-windows/ovsext/resource.h	46;"	d
SHRT_MAX	datapath/linux/compat/include/linux/kernel.h	51;"	d
SHRT_MIN	datapath/linux/compat/include/linux/kernel.h	52;"	d
SHUT_RD	include/sparse/sys/socket.h	/^    SHUT_RD,$/;"	e	enum:__anon75
SHUT_RDWR	include/sparse/sys/socket.h	/^    SHUT_RDWR,$/;"	e	enum:__anon75
SHUT_RDWR	lib/stream-ssl.c	62;"	d	file:
SHUT_WR	include/sparse/sys/socket.h	/^    SHUT_WR$/;"	e	enum:__anon75
SIGNALS_H	lib/signals.h	18;"	d
SIGNAL_NAME_BUFSIZE	lib/signals.h	/^enum { SIGNAL_NAME_BUFSIZE = 7 + INT_STRLEN(int) + 1 };$/;"	e	enum:__anon159
SIGTERM	utilities/bugtool/ovs-bugtool	/^from signal import SIGTERM, SIGUSR1$/;"	i
SIGUSR1	utilities/bugtool/ovs-bugtool	/^from signal import SIGTERM, SIGUSR1$/;"	i
SIG_ATOMIC_MAX	lib/fatal-signal.c	38;"	d	file:
SILENT_MODE	utilities/bugtool/ovs-bugtool	/^            SILENT_MODE = True$/;"	v
SILENT_MODE	utilities/bugtool/ovs-bugtool	/^SILENT_MODE = False$/;"	v
SIMAP_FOR_EACH	lib/simap.h	39;"	d
SIMAP_FOR_EACH_SAFE	lib/simap.h	42;"	d
SIMAP_H	lib/simap.h	18;"	d
SIMAP_INITIALIZER	lib/simap.h	37;"	d
SIZE_MAX	datapath-windows/ovsext/Types.h	41;"	d
SIZE_MAXHIDE	datapath-windows/ovsext/resource.h	358;"	d
SIZE_MAXIMIZED	datapath-windows/ovsext/resource.h	243;"	d
SIZE_MAXSHOW	datapath-windows/ovsext/resource.h	328;"	d
SIZE_MINIMIZED	datapath-windows/ovsext/resource.h	62;"	d
SIZE_RESTORED	datapath-windows/ovsext/resource.h	12;"	d
SKB_GSO_GRE	datapath/linux/compat/include/linux/skbuff.h	22;"	d
SKB_GSO_GRE_CSUM	datapath/linux/compat/include/linux/skbuff.h	30;"	d
SKB_GSO_UDP_TUNNEL	datapath/linux/compat/include/linux/skbuff.h	26;"	d
SKB_GSO_UDP_TUNNEL_CSUM	datapath/linux/compat/include/linux/skbuff.h	34;"	d
SLOW_PATH_REASONS	lib/odp-util.h	/^    SLOW_PATH_REASONS$/;"	e	enum:__anon120
SLOW_PATH_REASONS	lib/odp-util.h	/^    SLOW_PATH_REASONS$/;"	e	enum:slow_path_reason
SLOW_PATH_REASONS	lib/odp-util.h	37;"	d
SLOW_PATH_REASON_MASK	lib/odp-util.h	/^    SLOW_PATH_REASON_MASK = 0$/;"	e	enum:__anon121
SMAP_CONST1	lib/smap.h	51;"	d
SMAP_FOR_EACH	lib/smap.h	36;"	d
SMAP_FOR_EACH_SAFE	lib/smap.h	39;"	d
SMAP_H	lib/smap.h	16;"	d
SMAP_INITIALIZER	lib/smap.h	34;"	d
SMAP_NODE_INIT	lib/smap.h	55;"	d
SMART_HIDDEN	lib/lldp/lldpd.h	60;"	d
SMART_INCOMING	lib/lldp/lldpd-structs.h	114;"	d
SMART_INCOMING_FILTER	lib/lldp/lldpd-structs.h	107;"	d
SMART_INCOMING_ONE_NEIGH	lib/lldp/lldpd-structs.h	109;"	d
SMART_INCOMING_ONE_PROTO	lib/lldp/lldpd-structs.h	108;"	d
SMART_OUTGOING	lib/lldp/lldpd-structs.h	117;"	d
SMART_OUTGOING_FILTER	lib/lldp/lldpd-structs.h	110;"	d
SMART_OUTGOING_ONE_NEIGH	lib/lldp/lldpd-structs.h	112;"	d
SMART_OUTGOING_ONE_PROTO	lib/lldp/lldpd-structs.h	111;"	d
SMTO_ABORTIFHUNG	datapath-windows/ovsext/resource.h	240;"	d
SMTO_BLOCK	datapath-windows/ovsext/resource.h	59;"	d
SMTO_ERRORONEXIT	datapath-windows/ovsext/resource.h	634;"	d
SMTO_NORMAL	datapath-windows/ovsext/resource.h	10;"	d
SMTO_NOTIMEOUTIFNOTHUNG	datapath-windows/ovsext/resource.h	449;"	d
SNAP_HEADER_LEN	lib/packets.h	398;"	d
SNAP_ORG_ETHERNET	lib/packets.h	396;"	d
SNOOP	utilities/ovs-ofctl.c	/^enum open_target { MGMT, SNOOP };$/;"	e	enum:open_target	file:
SOCKET0	lib/netdev-dpdk.c	97;"	d	file:
SOCKET_IPPROTO_AH	datapath-windows/ovsext/NetProto.h	180;"	d
SOCKET_IPPROTO_CARP	datapath-windows/ovsext/NetProto.h	189;"	d
SOCKET_IPPROTO_DSTOPTS	datapath-windows/ovsext/NetProto.h	183;"	d
SOCKET_IPPROTO_ENCAP	datapath-windows/ovsext/NetProto.h	186;"	d
SOCKET_IPPROTO_EON	datapath-windows/ovsext/NetProto.h	184;"	d
SOCKET_IPPROTO_ETHERIP	datapath-windows/ovsext/NetProto.h	185;"	d
SOCKET_IPPROTO_FRAGMENT	datapath-windows/ovsext/NetProto.h	179;"	d
SOCKET_IPPROTO_GRE	datapath-windows/ovsext/NetProto.h	367;"	d
SOCKET_IPPROTO_HOPOPTS	datapath-windows/ovsext/NetProto.h	177;"	d
SOCKET_IPPROTO_ICMP	datapath-windows/ovsext/NetProto.h	364;"	d
SOCKET_IPPROTO_ICMPV6	datapath-windows/ovsext/NetProto.h	181;"	d
SOCKET_IPPROTO_IP	datapath-windows/ovsext/NetProto.h	363;"	d
SOCKET_IPPROTO_IPCOMP	datapath-windows/ovsext/NetProto.h	188;"	d
SOCKET_IPPROTO_NONE	datapath-windows/ovsext/NetProto.h	182;"	d
SOCKET_IPPROTO_PFSYNC	datapath-windows/ovsext/NetProto.h	190;"	d
SOCKET_IPPROTO_PIM	datapath-windows/ovsext/NetProto.h	187;"	d
SOCKET_IPPROTO_RAW	datapath-windows/ovsext/NetProto.h	191;"	d
SOCKET_IPPROTO_ROUTING	datapath-windows/ovsext/NetProto.h	178;"	d
SOCKET_IPPROTO_TCP	datapath-windows/ovsext/NetProto.h	365;"	d
SOCKET_IPPROTO_UDP	datapath-windows/ovsext/NetProto.h	366;"	d
SOCKET_UTIL_H	lib/socket-util.h	18;"	d
SOCK_DGRAM	include/sparse/sys/socket.h	/^    SOCK_DGRAM,$/;"	e	enum:__anon70
SOCK_RAW	include/sparse/sys/socket.h	/^    SOCK_RAW,$/;"	e	enum:__anon70
SOCK_SEQPACKET	include/sparse/sys/socket.h	/^    SOCK_SEQPACKET,$/;"	e	enum:__anon70
SOCK_STREAM	include/sparse/sys/socket.h	/^    SOCK_STREAM$/;"	e	enum:__anon70
SOL_NETLINK	lib/netlink-socket.c	49;"	d	file:
SOL_PACKET	include/sparse/sys/socket.h	/^    SOL_PACKET,$/;"	e	enum:__anon71
SOL_SOCKET	include/sparse/sys/socket.h	/^    SOL_SOCKET$/;"	e	enum:__anon71
SORT_ASC	utilities/ovs-ofctl.c	/^enum sort_order { SORT_ASC, SORT_DESC };$/;"	e	enum:sort_order	file:
SORT_CHINESE_BIG5	datapath-windows/ovsext/resource.h	31;"	d
SORT_CHINESE_BOPOMOFO	datapath-windows/ovsext/resource.h	346;"	d
SORT_CHINESE_PRC	datapath-windows/ovsext/resource.h	310;"	d
SORT_CHINESE_PRCP	datapath-windows/ovsext/resource.h	32;"	d
SORT_CHINESE_RADICALSTROKE	datapath-windows/ovsext/resource.h	395;"	d
SORT_CHINESE_UNICODE	datapath-windows/ovsext/resource.h	215;"	d
SORT_DEFAULT	datapath-windows/ovsext/resource.h	29;"	d
SORT_DESC	utilities/ovs-ofctl.c	/^enum sort_order { SORT_ASC, SORT_DESC };$/;"	e	enum:sort_order	file:
SORT_GEORGIAN_MODERN	datapath-windows/ovsext/resource.h	219;"	d
SORT_GEORGIAN_TRADITIONAL	datapath-windows/ovsext/resource.h	35;"	d
SORT_GERMAN_PHONE_BOOK	datapath-windows/ovsext/resource.h	217;"	d
SORT_H	lib/sort.h	17;"	d
SORT_HUNGARIAN_DEFAULT	datapath-windows/ovsext/resource.h	34;"	d
SORT_HUNGARIAN_TECHNICAL	datapath-windows/ovsext/resource.h	218;"	d
SORT_INVARIANT_MATH	datapath-windows/ovsext/resource.h	213;"	d
SORT_JAPANESE_RADICALSTROKE	datapath-windows/ovsext/resource.h	394;"	d
SORT_JAPANESE_UNICODE	datapath-windows/ovsext/resource.h	214;"	d
SORT_JAPANESE_XJIS	datapath-windows/ovsext/resource.h	30;"	d
SORT_KOREAN_KSC	datapath-windows/ovsext/resource.h	33;"	d
SORT_KOREAN_UNICODE	datapath-windows/ovsext/resource.h	216;"	d
SOURCES	Makefile	/^SOURCES = $(lib_libopenvswitch_la_SOURCES) \\$/;"	m
SOURCES	datapath/Makefile	/^SOURCES =$/;"	m
SO_ACCEPTCONN	include/sparse/sys/socket.h	/^    SO_ACCEPTCONN,$/;"	e	enum:__anon72
SO_ATTACH_FILTER	include/sparse/sys/socket.h	/^    SO_ATTACH_FILTER$/;"	e	enum:__anon72
SO_BROADCAST	include/sparse/sys/socket.h	/^    SO_BROADCAST,$/;"	e	enum:__anon72
SO_DEBUG	include/sparse/sys/socket.h	/^    SO_DEBUG,$/;"	e	enum:__anon72
SO_DONTROUTE	include/sparse/sys/socket.h	/^    SO_DONTROUTE,$/;"	e	enum:__anon72
SO_ERROR	include/sparse/sys/socket.h	/^    SO_ERROR,$/;"	e	enum:__anon72
SO_KEEPALIVE	include/sparse/sys/socket.h	/^    SO_KEEPALIVE,$/;"	e	enum:__anon72
SO_LINGER	include/sparse/sys/socket.h	/^    SO_LINGER,$/;"	e	enum:__anon72
SO_OOBINLINE	include/sparse/sys/socket.h	/^    SO_OOBINLINE,$/;"	e	enum:__anon72
SO_PROTOCOL	lib/socket-util.c	819;"	d	file:
SO_RCVBUF	include/sparse/sys/socket.h	/^    SO_RCVBUF,$/;"	e	enum:__anon72
SO_RCVBUFFORCE	include/sparse/sys/socket.h	/^    SO_RCVBUFFORCE,$/;"	e	enum:__anon72
SO_RCVLOWAT	include/sparse/sys/socket.h	/^    SO_RCVLOWAT,$/;"	e	enum:__anon72
SO_RCVTIMEO	include/sparse/sys/socket.h	/^    SO_RCVTIMEO,$/;"	e	enum:__anon72
SO_REUSEADDR	include/sparse/sys/socket.h	/^    SO_REUSEADDR,$/;"	e	enum:__anon72
SO_SNDBUF	include/sparse/sys/socket.h	/^    SO_SNDBUF,$/;"	e	enum:__anon72
SO_SNDLOWAT	include/sparse/sys/socket.h	/^    SO_SNDLOWAT,$/;"	e	enum:__anon72
SO_SNDTIMEO	include/sparse/sys/socket.h	/^    SO_SNDTIMEO,$/;"	e	enum:__anon72
SO_TYPE	include/sparse/sys/socket.h	/^    SO_TYPE,$/;"	e	enum:__anon72
SPACES_PER_LEVEL	lib/json.c	1431;"	d	file:
SPACES_PER_LEVEL	python/ovs/json.py	/^SPACES_PER_LEVEL = 2$/;"	v
SPARSE	Makefile	/^SPARSE = sparse$/;"	m
SPARSE	datapath/Makefile	/^SPARSE = sparse$/;"	m
SPARSEFLAGS	Makefile	/^SPARSEFLAGS = -m64$/;"	m
SPARSEFLAGS	datapath/Makefile	/^SPARSEFLAGS = -m64$/;"	m
SPARSE_EXTRA_INCLUDES	Makefile	/^SPARSE_EXTRA_INCLUDES = -I \/usr\/local\/include $/;"	m
SPARSE_EXTRA_INCLUDES	datapath/Makefile	/^SPARSE_EXTRA_INCLUDES = -I \/usr\/local\/include $/;"	m
SPR	lib/odp-util.c	229;"	d	file:
SPR	lib/odp-util.c	231;"	d	file:
SPR	lib/odp-util.c	241;"	d	file:
SPR	lib/odp-util.c	243;"	d	file:
SPR	lib/odp-util.h	52;"	d
SPR	lib/odp-util.h	54;"	d
SPR	lib/odp-util.h	61;"	d
SPR	lib/odp-util.h	63;"	d
SPR	lib/odp-util.h	69;"	d
SPR	lib/odp-util.h	71;"	d
SPVERSION_MASK	datapath-windows/ovsext/resource.h	1561;"	d
SSET_FIRST	lib/sset.h	98;"	d
SSET_FOR_EACH	lib/sset.h	74;"	d
SSET_FOR_EACH_SAFE	lib/sset.h	79;"	d
SSET_H	lib/sset.h	18;"	d
SSET_INITIALIZER	lib/sset.h	37;"	d
SSET_NAME_FROM_HMAP_NODE	lib/sset.h	93;"	d
SSET_NEXT	lib/sset.h	99;"	d
SSET_NODE_FROM_HMAP_NODE	lib/sset.h	91;"	d
SSET_NODE_FROM_NAME	lib/sset.h	97;"	d
SSL_INCLUDES	Makefile	/^SSL_INCLUDES =  $/;"	m
SSL_INCLUDES	datapath/Makefile	/^SSL_INCLUDES =  $/;"	m
SSL_LDFLAGS	Makefile	/^SSL_LDFLAGS =  $/;"	m
SSL_LDFLAGS	datapath/Makefile	/^SSL_LDFLAGS =  $/;"	m
SSL_LIBS	Makefile	/^SSL_LIBS = -lssl -lcrypto  $/;"	m
SSL_LIBS	datapath/Makefile	/^SSL_LIBS = -lssl -lcrypto  $/;"	m
SS_NTOP_BUFSIZE	lib/socket-util.h	73;"	d
STATE	lib/rconn.c	1251;"	d	file:
STATE	lib/rconn.c	1253;"	d	file:
STATE	lib/rconn.c	653;"	d	file:
STATE	lib/rconn.c	655;"	d	file:
STATE	lib/rconn.c	68;"	d	file:
STATE	lib/rconn.c	70;"	d	file:
STATE	lib/rconn.c	77;"	d	file:
STATE	lib/rconn.c	79;"	d	file:
STATE	lib/reconnect.c	36;"	d	file:
STATE	lib/reconnect.c	38;"	d	file:
STATE	lib/reconnect.c	82;"	d	file:
STATE	lib/reconnect.c	84;"	d	file:
STATE	ovn/controller/ofctrl.c	379;"	d	file:
STATE	ovn/controller/ofctrl.c	381;"	d	file:
STATE	ovn/controller/ofctrl.c	400;"	d	file:
STATE	ovn/controller/ofctrl.c	402;"	d	file:
STATE	ovn/controller/ofctrl.c	75;"	d	file:
STATE	ovn/controller/ofctrl.c	77;"	d	file:
STATES	lib/rconn.c	/^    STATES$/;"	e	enum:state	file:
STATES	lib/rconn.c	60;"	d	file:
STATES	lib/reconnect.c	/^    STATES$/;"	e	enum:state	file:
STATES	lib/reconnect.c	27;"	d	file:
STATES	ovn/controller/ofctrl.c	/^    STATES$/;"	e	enum:ofctrl_state	file:
STATES	ovn/controller/ofctrl.c	68;"	d	file:
STATE_ADMIN_DOWN	lib/bfd.c	/^    STATE_ADMIN_DOWN = 0 << 6,$/;"	e	enum:state	file:
STATE_DOWN	lib/bfd.c	/^    STATE_DOWN = 1 << 6,$/;"	e	enum:state	file:
STATE_INIT	lib/bfd.c	/^    STATE_INIT = 2 << 6,$/;"	e	enum:state	file:
STATE_MASK	lib/bfd.c	147;"	d	file:
STATE_SSL_CONNECTING	lib/stream-ssl.c	/^    STATE_SSL_CONNECTING$/;"	e	enum:ssl_state	file:
STATE_TCP_CONNECTING	lib/stream-ssl.c	/^    STATE_TCP_CONNECTING,$/;"	e	enum:ssl_state	file:
STATE_UP	lib/bfd.c	/^    STATE_UP = 3 << 6$/;"	e	enum:state	file:
STATUS_CHECK_AGAIN_MSEC	vswitchd/bridge.c	205;"	d	file:
STDC_HEADERS	config.h	207;"	d
STDERR_FILENO	include/windows/unistd.h	27;"	d
STDIN_FILENO	include/windows/unistd.h	25;"	d
STDIO_H_WRAPPER	lib/stdio.h	20;"	d
STDOUT_FILENO	include/windows/unistd.h	26;"	d
STP_BLOCKING	lib/stp.h	/^    STP_BLOCKING = 1 << 4        \/* 8.4.1: Initial boot state. *\/$/;"	e	enum:stp_state
STP_CONFIG_TOPOLOGY_CHANGE	lib/stp.c	/^    STP_CONFIG_TOPOLOGY_CHANGE = 0x01$/;"	e	enum:stp_config_bpdu_flags	file:
STP_CONFIG_TOPOLOGY_CHANGE_ACK	lib/stp.c	/^    STP_CONFIG_TOPOLOGY_CHANGE_ACK = 0x80,$/;"	e	enum:stp_config_bpdu_flags	file:
STP_DEFAULT_BRIDGE_PRIORITY	lib/stp.h	31;"	d
STP_DEFAULT_FWD_DELAY	lib/stp.h	37;"	d
STP_DEFAULT_HELLO_TIME	lib/stp.h	36;"	d
STP_DEFAULT_MAX_AGE	lib/stp.h	35;"	d
STP_DEFAULT_PORT_PRIORITY	lib/stp.h	32;"	d
STP_DISABLED	lib/stp.h	/^    STP_DISABLED = 1 << 0,       \/* 8.4.5: See note above. *\/$/;"	e	enum:stp_state
STP_FORWARDING	lib/stp.h	/^    STP_FORWARDING = 1 << 3,     \/* 8.4.4: Learning and relaying frames. *\/$/;"	e	enum:stp_state
STP_H	lib/stp.h	18;"	d
STP_ID_ARGS	lib/stp.h	45;"	d
STP_ID_FMT	lib/stp.h	44;"	d
STP_LEARNING	lib/stp.h	/^    STP_LEARNING = 1 << 2,       \/* 8.4.3: Learning but not relaying frames. *\/$/;"	e	enum:stp_state
STP_LISTENING	lib/stp.h	/^    STP_LISTENING = 1 << 1,      \/* 8.4.2: Not learning or relaying frames. *\/$/;"	e	enum:stp_state
STP_LLC_CNTL	lib/packets.h	394;"	d
STP_LLC_DSAP	lib/packets.h	393;"	d
STP_LLC_SSAP	lib/packets.h	392;"	d
STP_MAX_PORTS	lib/stp.h	52;"	d
STP_PORT_ID_FMT	lib/stp.h	49;"	d
STP_PROTOCOL_ID	lib/stp.c	43;"	d	file:
STP_PROTOCOL_VERSION	lib/stp.c	44;"	d	file:
STP_ROLE_ALTERNATE	lib/stp.h	/^    STP_ROLE_ALTERNATE,          \/* Backup path to root bridge. *\/$/;"	e	enum:stp_role
STP_ROLE_DESIGNATED	lib/stp.h	/^    STP_ROLE_DESIGNATED,         \/* Path to LAN segments. *\/$/;"	e	enum:stp_role
STP_ROLE_DISABLED	lib/stp.h	/^    STP_ROLE_DISABLED            \/* Port does not participate in STP. *\/$/;"	e	enum:stp_role
STP_ROLE_ROOT	lib/stp.h	/^    STP_ROLE_ROOT,               \/* Path to root bridge. *\/$/;"	e	enum:stp_role
STP_TYPE_CONFIG	lib/stp.c	45;"	d	file:
STP_TYPE_TCN	lib/stp.c	46;"	d	file:
STREAM_CONNECT	lib/stream.h	/^    STREAM_CONNECT,$/;"	e	enum:stream_wait_type
STREAM_FD_H	lib/stream-fd.h	21;"	d
STREAM_H	lib/stream.h	18;"	d
STREAM_INIT	lib/vconn-stream.c	363;"	d	file:
STREAM_JSONRPC	lib/stream.h	/^    STREAM_JSONRPC$/;"	e	enum:stream_content_type
STREAM_OPENFLOW	lib/stream.h	/^    STREAM_OPENFLOW,$/;"	e	enum:stream_content_type
STREAM_PROVIDER_H	lib/stream-provider.h	18;"	d
STREAM_RECV	lib/stream.h	/^    STREAM_RECV,$/;"	e	enum:stream_wait_type
STREAM_SEND	lib/stream.h	/^    STREAM_SEND$/;"	e	enum:stream_wait_type
STREAM_SSL	lib/stream.h	/^    STREAM_SSL,$/;"	e	enum:stream_content_type
STREAM_SSL_H	lib/stream-ssl.h	17;"	d
STREAM_SSL_LONG_OPTIONS	lib/stream-ssl.h	29;"	d
STREAM_SSL_OPTION_HANDLERS	lib/stream-ssl.h	34;"	d
STREAM_UNKNOWN	lib/stream.h	/^    STREAM_UNKNOWN,$/;"	e	enum:stream_content_type
STRERROR_R_CHAR_P	config.h	210;"	d
STRFTIME_FORMAT	lib/compiler.h	23;"	d
STRFTIME_FORMAT	lib/compiler.h	28;"	d
STRING_WRAPPER_H	lib/string.h	18;"	d
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIP	datapath/Makefile	/^STRIP = strip$/;"	m
STT	ovn/controller/ovn-controller.h	/^    STT    = 1 << 1,$/;"	e	enum:chassis_tunnel_type
STT_BASE_HLEN	datapath/linux/compat/include/net/stt.h	24;"	d
STT_CLEANUP_INTERVAL	datapath-windows/ovsext/Stt.h	40;"	d
STT_CSUM_PARTIAL	datapath-windows/ovsext/Stt.h	32;"	d
STT_CSUM_PARTIAL	datapath/linux/compat/stt.c	48;"	d	file:
STT_CSUM_PARTIAL	datapath/linux/stt.c	48;"	d	file:
STT_CSUM_VERIFIED	datapath-windows/ovsext/Stt.h	31;"	d
STT_CSUM_VERIFIED	datapath/linux/compat/stt.c	47;"	d	file:
STT_CSUM_VERIFIED	datapath/linux/stt.c	47;"	d	file:
STT_DST_PORT	lib/netdev-vport.c	58;"	d	file:
STT_ENTRY_TIMEOUT	datapath-windows/ovsext/Stt.h	39;"	d
STT_ETH_PAD	datapath-windows/ovsext/Stt.h	42;"	d
STT_ETH_PAD	datapath/linux/compat/include/net/stt.h	22;"	d
STT_FRAME_LEN	datapath-windows/ovsext/Stt.h	28;"	d
STT_HASH_TABLE_MASK	datapath-windows/ovsext/Stt.h	38;"	d
STT_HASH_TABLE_SIZE	datapath-windows/ovsext/Stt.h	37;"	d
STT_HDR_LEN	datapath-windows/ovsext/Stt.h	53;"	d
STT_HEADER_LEN	datapath/linux/compat/include/net/stt.h	25;"	d
STT_PROTO_IPV4	datapath-windows/ovsext/Stt.h	33;"	d
STT_PROTO_IPV4	datapath/linux/compat/stt.c	49;"	d	file:
STT_PROTO_IPV4	datapath/linux/stt.c	49;"	d	file:
STT_PROTO_TCP	datapath-windows/ovsext/Stt.h	34;"	d
STT_PROTO_TCP	datapath/linux/compat/stt.c	50;"	d	file:
STT_PROTO_TCP	datapath/linux/stt.c	50;"	d	file:
STT_PROTO_TYPES	datapath-windows/ovsext/Stt.h	35;"	d
STT_PROTO_TYPES	datapath/linux/compat/stt.c	51;"	d	file:
STT_PROTO_TYPES	datapath/linux/stt.c	51;"	d	file:
STT_SEGMENT_OFF	datapath-windows/ovsext/Stt.h	29;"	d
STT_SEQ_LEN_SHIFT	datapath-windows/ovsext/Stt.h	26;"	d
STT_SEQ_LEN_SHIFT	datapath/linux/compat/stt.c	60;"	d	file:
STT_SEQ_LEN_SHIFT	datapath/linux/stt.c	60;"	d	file:
STT_SEQ_OFFSET_MASK	datapath-windows/ovsext/Stt.h	27;"	d
STT_SEQ_OFFSET_MASK	datapath/linux/compat/stt.c	61;"	d	file:
STT_SEQ_OFFSET_MASK	datapath/linux/stt.c	61;"	d	file:
STT_TCP_PORT	datapath-windows/ovsext/Stt.h	20;"	d
STT_TCP_PORT_NBO	datapath-windows/ovsext/Stt.h	21;"	d
STT_VER	datapath/linux/compat/stt.c	45;"	d	file:
STT_VER	datapath/linux/stt.c	45;"	d	file:
SUBDIRS	Makefile	/^SUBDIRS = datapath$/;"	m
SUBDIRS	datapath/Makefile	/^SUBDIRS = $(am__append_1)$/;"	m
SUBLANG_AFRIKAANS_SOUTH_AFRICA	datapath-windows/ovsext/resource.h	90;"	d
SUBLANG_ALBANIAN_ALBANIA	datapath-windows/ovsext/resource.h	91;"	d
SUBLANG_ALSATIAN_FRANCE	datapath-windows/ovsext/resource.h	92;"	d
SUBLANG_AMHARIC_ETHIOPIA	datapath-windows/ovsext/resource.h	93;"	d
SUBLANG_ARABIC_ALGERIA	datapath-windows/ovsext/resource.h	407;"	d
SUBLANG_ARABIC_BAHRAIN	datapath-windows/ovsext/resource.h	541;"	d
SUBLANG_ARABIC_EGYPT	datapath-windows/ovsext/resource.h	337;"	d
SUBLANG_ARABIC_IRAQ	datapath-windows/ovsext/resource.h	271;"	d
SUBLANG_ARABIC_JORDAN	datapath-windows/ovsext/resource.h	507;"	d
SUBLANG_ARABIC_KUWAIT	datapath-windows/ovsext/resource.h	528;"	d
SUBLANG_ARABIC_LEBANON	datapath-windows/ovsext/resource.h	518;"	d
SUBLANG_ARABIC_LIBYA	datapath-windows/ovsext/resource.h	385;"	d
SUBLANG_ARABIC_MOROCCO	datapath-windows/ovsext/resource.h	424;"	d
SUBLANG_ARABIC_OMAN	datapath-windows/ovsext/resource.h	471;"	d
SUBLANG_ARABIC_QATAR	datapath-windows/ovsext/resource.h	566;"	d
SUBLANG_ARABIC_SAUDI_ARABIA	datapath-windows/ovsext/resource.h	94;"	d
SUBLANG_ARABIC_SYRIA	datapath-windows/ovsext/resource.h	495;"	d
SUBLANG_ARABIC_TUNISIA	datapath-windows/ovsext/resource.h	439;"	d
SUBLANG_ARABIC_UAE	datapath-windows/ovsext/resource.h	535;"	d
SUBLANG_ARABIC_YEMEN	datapath-windows/ovsext/resource.h	483;"	d
SUBLANG_ARMENIAN_ARMENIA	datapath-windows/ovsext/resource.h	95;"	d
SUBLANG_ASSAMESE_INDIA	datapath-windows/ovsext/resource.h	96;"	d
SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC	datapath-windows/ovsext/resource.h	273;"	d
SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN	datapath-windows/ovsext/resource.h	98;"	d
SUBLANG_AZERI_CYRILLIC	datapath-windows/ovsext/resource.h	272;"	d
SUBLANG_AZERI_LATIN	datapath-windows/ovsext/resource.h	97;"	d
SUBLANG_BANGLA_BANGLADESH	datapath-windows/ovsext/resource.h	274;"	d
SUBLANG_BANGLA_INDIA	datapath-windows/ovsext/resource.h	99;"	d
SUBLANG_BASHKIR_RUSSIA	datapath-windows/ovsext/resource.h	100;"	d
SUBLANG_BASQUE_BASQUE	datapath-windows/ovsext/resource.h	101;"	d
SUBLANG_BELARUSIAN_BELARUS	datapath-windows/ovsext/resource.h	102;"	d
SUBLANG_BENGALI_BANGLADESH	datapath-windows/ovsext/resource.h	275;"	d
SUBLANG_BENGALI_INDIA	datapath-windows/ovsext/resource.h	103;"	d
SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC	datapath-windows/ovsext/resource.h	472;"	d
SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN	datapath-windows/ovsext/resource.h	408;"	d
SUBLANG_BRETON_FRANCE	datapath-windows/ovsext/resource.h	104;"	d
SUBLANG_BULGARIAN_BULGARIA	datapath-windows/ovsext/resource.h	105;"	d
SUBLANG_CATALAN_CATALAN	datapath-windows/ovsext/resource.h	106;"	d
SUBLANG_CENTRAL_KURDISH_IRAQ	datapath-windows/ovsext/resource.h	107;"	d
SUBLANG_CHEROKEE_CHEROKEE	datapath-windows/ovsext/resource.h	108;"	d
SUBLANG_CHINESE_HONGKONG	datapath-windows/ovsext/resource.h	338;"	d
SUBLANG_CHINESE_MACAU	datapath-windows/ovsext/resource.h	409;"	d
SUBLANG_CHINESE_SIMPLIFIED	datapath-windows/ovsext/resource.h	276;"	d
SUBLANG_CHINESE_SINGAPORE	datapath-windows/ovsext/resource.h	386;"	d
SUBLANG_CHINESE_TRADITIONAL	datapath-windows/ovsext/resource.h	109;"	d
SUBLANG_CORSICAN_FRANCE	datapath-windows/ovsext/resource.h	110;"	d
SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN	datapath-windows/ovsext/resource.h	387;"	d
SUBLANG_CROATIAN_CROATIA	datapath-windows/ovsext/resource.h	112;"	d
SUBLANG_CUSTOM_DEFAULT	datapath-windows/ovsext/resource.h	336;"	d
SUBLANG_CUSTOM_UNSPECIFIED	datapath-windows/ovsext/resource.h	384;"	d
SUBLANG_CZECH_CZECH_REPUBLIC	datapath-windows/ovsext/resource.h	111;"	d
SUBLANG_DANISH_DENMARK	datapath-windows/ovsext/resource.h	113;"	d
SUBLANG_DARI_AFGHANISTAN	datapath-windows/ovsext/resource.h	114;"	d
SUBLANG_DEFAULT	datapath-windows/ovsext/resource.h	89;"	d
SUBLANG_DIVEHI_MALDIVES	datapath-windows/ovsext/resource.h	115;"	d
SUBLANG_DUTCH	datapath-windows/ovsext/resource.h	116;"	d
SUBLANG_DUTCH_BELGIAN	datapath-windows/ovsext/resource.h	277;"	d
SUBLANG_ENGLISH_AUS	datapath-windows/ovsext/resource.h	339;"	d
SUBLANG_ENGLISH_BELIZE	datapath-windows/ovsext/resource.h	496;"	d
SUBLANG_ENGLISH_CAN	datapath-windows/ovsext/resource.h	388;"	d
SUBLANG_ENGLISH_CARIBBEAN	datapath-windows/ovsext/resource.h	484;"	d
SUBLANG_ENGLISH_EIRE	datapath-windows/ovsext/resource.h	425;"	d
SUBLANG_ENGLISH_INDIA	datapath-windows/ovsext/resource.h	567;"	d
SUBLANG_ENGLISH_JAMAICA	datapath-windows/ovsext/resource.h	473;"	d
SUBLANG_ENGLISH_MALAYSIA	datapath-windows/ovsext/resource.h	575;"	d
SUBLANG_ENGLISH_NZ	datapath-windows/ovsext/resource.h	410;"	d
SUBLANG_ENGLISH_PHILIPPINES	datapath-windows/ovsext/resource.h	529;"	d
SUBLANG_ENGLISH_SINGAPORE	datapath-windows/ovsext/resource.h	582;"	d
SUBLANG_ENGLISH_SOUTH_AFRICA	datapath-windows/ovsext/resource.h	440;"	d
SUBLANG_ENGLISH_TRINIDAD	datapath-windows/ovsext/resource.h	508;"	d
SUBLANG_ENGLISH_UK	datapath-windows/ovsext/resource.h	278;"	d
SUBLANG_ENGLISH_US	datapath-windows/ovsext/resource.h	117;"	d
SUBLANG_ENGLISH_ZIMBABWE	datapath-windows/ovsext/resource.h	519;"	d
SUBLANG_ESTONIAN_ESTONIA	datapath-windows/ovsext/resource.h	118;"	d
SUBLANG_FAEROESE_FAROE_ISLANDS	datapath-windows/ovsext/resource.h	119;"	d
SUBLANG_FILIPINO_PHILIPPINES	datapath-windows/ovsext/resource.h	120;"	d
SUBLANG_FINNISH_FINLAND	datapath-windows/ovsext/resource.h	121;"	d
SUBLANG_FRENCH	datapath-windows/ovsext/resource.h	122;"	d
SUBLANG_FRENCH_BELGIAN	datapath-windows/ovsext/resource.h	279;"	d
SUBLANG_FRENCH_CANADIAN	datapath-windows/ovsext/resource.h	340;"	d
SUBLANG_FRENCH_LUXEMBOURG	datapath-windows/ovsext/resource.h	411;"	d
SUBLANG_FRENCH_MONACO	datapath-windows/ovsext/resource.h	426;"	d
SUBLANG_FRENCH_SWISS	datapath-windows/ovsext/resource.h	389;"	d
SUBLANG_FRISIAN_NETHERLANDS	datapath-windows/ovsext/resource.h	123;"	d
SUBLANG_FULAH_SENEGAL	datapath-windows/ovsext/resource.h	280;"	d
SUBLANG_GALICIAN_GALICIAN	datapath-windows/ovsext/resource.h	124;"	d
SUBLANG_GEORGIAN_GEORGIA	datapath-windows/ovsext/resource.h	125;"	d
SUBLANG_GERMAN	datapath-windows/ovsext/resource.h	126;"	d
SUBLANG_GERMAN_AUSTRIAN	datapath-windows/ovsext/resource.h	341;"	d
SUBLANG_GERMAN_LIECHTENSTEIN	datapath-windows/ovsext/resource.h	412;"	d
SUBLANG_GERMAN_LUXEMBOURG	datapath-windows/ovsext/resource.h	390;"	d
SUBLANG_GERMAN_SWISS	datapath-windows/ovsext/resource.h	281;"	d
SUBLANG_GREEK_GREECE	datapath-windows/ovsext/resource.h	127;"	d
SUBLANG_GREENLANDIC_GREENLAND	datapath-windows/ovsext/resource.h	128;"	d
SUBLANG_GUJARATI_INDIA	datapath-windows/ovsext/resource.h	129;"	d
SUBLANG_HAUSA_NIGERIA_LATIN	datapath-windows/ovsext/resource.h	130;"	d
SUBLANG_HAWAIIAN_US	datapath-windows/ovsext/resource.h	131;"	d
SUBLANG_HEBREW_ISRAEL	datapath-windows/ovsext/resource.h	132;"	d
SUBLANG_HINDI_INDIA	datapath-windows/ovsext/resource.h	133;"	d
SUBLANG_HUNGARIAN_HUNGARY	datapath-windows/ovsext/resource.h	134;"	d
SUBLANG_ICELANDIC_ICELAND	datapath-windows/ovsext/resource.h	135;"	d
SUBLANG_IGBO_NIGERIA	datapath-windows/ovsext/resource.h	136;"	d
SUBLANG_INDONESIAN_INDONESIA	datapath-windows/ovsext/resource.h	137;"	d
SUBLANG_INUKTITUT_CANADA	datapath-windows/ovsext/resource.h	138;"	d
SUBLANG_INUKTITUT_CANADA_LATIN	datapath-windows/ovsext/resource.h	282;"	d
SUBLANG_IRISH_IRELAND	datapath-windows/ovsext/resource.h	283;"	d
SUBLANG_ITALIAN	datapath-windows/ovsext/resource.h	139;"	d
SUBLANG_ITALIAN_SWISS	datapath-windows/ovsext/resource.h	284;"	d
SUBLANG_JAPANESE_JAPAN	datapath-windows/ovsext/resource.h	140;"	d
SUBLANG_KANNADA_INDIA	datapath-windows/ovsext/resource.h	141;"	d
SUBLANG_KASHMIRI_INDIA	datapath-windows/ovsext/resource.h	286;"	d
SUBLANG_KASHMIRI_SASIA	datapath-windows/ovsext/resource.h	285;"	d
SUBLANG_KAZAK_KAZAKHSTAN	datapath-windows/ovsext/resource.h	142;"	d
SUBLANG_KHMER_CAMBODIA	datapath-windows/ovsext/resource.h	143;"	d
SUBLANG_KICHE_GUATEMALA	datapath-windows/ovsext/resource.h	144;"	d
SUBLANG_KINYARWANDA_RWANDA	datapath-windows/ovsext/resource.h	145;"	d
SUBLANG_KONKANI_INDIA	datapath-windows/ovsext/resource.h	146;"	d
SUBLANG_KOREAN	datapath-windows/ovsext/resource.h	147;"	d
SUBLANG_KYRGYZ_KYRGYZSTAN	datapath-windows/ovsext/resource.h	148;"	d
SUBLANG_LAO_LAO	datapath-windows/ovsext/resource.h	149;"	d
SUBLANG_LATVIAN_LATVIA	datapath-windows/ovsext/resource.h	150;"	d
SUBLANG_LITHUANIAN	datapath-windows/ovsext/resource.h	151;"	d
SUBLANG_LOWER_SORBIAN_GERMANY	datapath-windows/ovsext/resource.h	287;"	d
SUBLANG_LUXEMBOURGISH_LUXEMBOURG	datapath-windows/ovsext/resource.h	152;"	d
SUBLANG_MACEDONIAN_MACEDONIA	datapath-windows/ovsext/resource.h	153;"	d
SUBLANG_MALAYALAM_INDIA	datapath-windows/ovsext/resource.h	155;"	d
SUBLANG_MALAY_BRUNEI_DARUSSALAM	datapath-windows/ovsext/resource.h	288;"	d
SUBLANG_MALAY_MALAYSIA	datapath-windows/ovsext/resource.h	154;"	d
SUBLANG_MALTESE_MALTA	datapath-windows/ovsext/resource.h	156;"	d
SUBLANG_MAORI_NEW_ZEALAND	datapath-windows/ovsext/resource.h	157;"	d
SUBLANG_MAPUDUNGUN_CHILE	datapath-windows/ovsext/resource.h	158;"	d
SUBLANG_MARATHI_INDIA	datapath-windows/ovsext/resource.h	159;"	d
SUBLANG_MOHAWK_MOHAWK	datapath-windows/ovsext/resource.h	160;"	d
SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA	datapath-windows/ovsext/resource.h	161;"	d
SUBLANG_MONGOLIAN_PRC	datapath-windows/ovsext/resource.h	289;"	d
SUBLANG_NEPALI_INDIA	datapath-windows/ovsext/resource.h	290;"	d
SUBLANG_NEPALI_NEPAL	datapath-windows/ovsext/resource.h	162;"	d
SUBLANG_NEUTRAL	datapath-windows/ovsext/resource.h	28;"	d
SUBLANG_NORWEGIAN_BOKMAL	datapath-windows/ovsext/resource.h	163;"	d
SUBLANG_NORWEGIAN_NYNORSK	datapath-windows/ovsext/resource.h	291;"	d
SUBLANG_OCCITAN_FRANCE	datapath-windows/ovsext/resource.h	164;"	d
SUBLANG_ODIA_INDIA	datapath-windows/ovsext/resource.h	165;"	d
SUBLANG_ORIYA_INDIA	datapath-windows/ovsext/resource.h	166;"	d
SUBLANG_PASHTO_AFGHANISTAN	datapath-windows/ovsext/resource.h	167;"	d
SUBLANG_PERSIAN_IRAN	datapath-windows/ovsext/resource.h	168;"	d
SUBLANG_POLISH_POLAND	datapath-windows/ovsext/resource.h	169;"	d
SUBLANG_PORTUGUESE	datapath-windows/ovsext/resource.h	292;"	d
SUBLANG_PORTUGUESE_BRAZILIAN	datapath-windows/ovsext/resource.h	170;"	d
SUBLANG_PULAR_SENEGAL	datapath-windows/ovsext/resource.h	293;"	d
SUBLANG_PUNJABI_INDIA	datapath-windows/ovsext/resource.h	171;"	d
SUBLANG_PUNJABI_PAKISTAN	datapath-windows/ovsext/resource.h	294;"	d
SUBLANG_QUECHUA_BOLIVIA	datapath-windows/ovsext/resource.h	172;"	d
SUBLANG_QUECHUA_ECUADOR	datapath-windows/ovsext/resource.h	295;"	d
SUBLANG_QUECHUA_PERU	datapath-windows/ovsext/resource.h	342;"	d
SUBLANG_ROMANIAN_ROMANIA	datapath-windows/ovsext/resource.h	173;"	d
SUBLANG_ROMANSH_SWITZERLAND	datapath-windows/ovsext/resource.h	174;"	d
SUBLANG_RUSSIAN_RUSSIA	datapath-windows/ovsext/resource.h	175;"	d
SUBLANG_SAKHA_RUSSIA	datapath-windows/ovsext/resource.h	176;"	d
SUBLANG_SAMI_INARI_FINLAND	datapath-windows/ovsext/resource.h	485;"	d
SUBLANG_SAMI_LULE_NORWAY	datapath-windows/ovsext/resource.h	391;"	d
SUBLANG_SAMI_LULE_SWEDEN	datapath-windows/ovsext/resource.h	413;"	d
SUBLANG_SAMI_NORTHERN_FINLAND	datapath-windows/ovsext/resource.h	343;"	d
SUBLANG_SAMI_NORTHERN_NORWAY	datapath-windows/ovsext/resource.h	177;"	d
SUBLANG_SAMI_NORTHERN_SWEDEN	datapath-windows/ovsext/resource.h	296;"	d
SUBLANG_SAMI_SKOLT_FINLAND	datapath-windows/ovsext/resource.h	474;"	d
SUBLANG_SAMI_SOUTHERN_NORWAY	datapath-windows/ovsext/resource.h	427;"	d
SUBLANG_SAMI_SOUTHERN_SWEDEN	datapath-windows/ovsext/resource.h	441;"	d
SUBLANG_SANSKRIT_INDIA	datapath-windows/ovsext/resource.h	178;"	d
SUBLANG_SCOTTISH_GAELIC	datapath-windows/ovsext/resource.h	179;"	d
SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC	datapath-windows/ovsext/resource.h	442;"	d
SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN	datapath-windows/ovsext/resource.h	428;"	d
SUBLANG_SERBIAN_CROATIA	datapath-windows/ovsext/resource.h	180;"	d
SUBLANG_SERBIAN_CYRILLIC	datapath-windows/ovsext/resource.h	344;"	d
SUBLANG_SERBIAN_LATIN	datapath-windows/ovsext/resource.h	297;"	d
SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC	datapath-windows/ovsext/resource.h	520;"	d
SUBLANG_SERBIAN_MONTENEGRO_LATIN	datapath-windows/ovsext/resource.h	509;"	d
SUBLANG_SERBIAN_SERBIA_CYRILLIC	datapath-windows/ovsext/resource.h	497;"	d
SUBLANG_SERBIAN_SERBIA_LATIN	datapath-windows/ovsext/resource.h	486;"	d
SUBLANG_SINDHI_AFGHANISTAN	datapath-windows/ovsext/resource.h	299;"	d
SUBLANG_SINDHI_INDIA	datapath-windows/ovsext/resource.h	181;"	d
SUBLANG_SINDHI_PAKISTAN	datapath-windows/ovsext/resource.h	298;"	d
SUBLANG_SINHALESE_SRI_LANKA	datapath-windows/ovsext/resource.h	182;"	d
SUBLANG_SLOVAK_SLOVAKIA	datapath-windows/ovsext/resource.h	184;"	d
SUBLANG_SLOVENIAN_SLOVENIA	datapath-windows/ovsext/resource.h	185;"	d
SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA	datapath-windows/ovsext/resource.h	183;"	d
SUBLANG_SPANISH	datapath-windows/ovsext/resource.h	186;"	d
SUBLANG_SPANISH_ARGENTINA	datapath-windows/ovsext/resource.h	510;"	d
SUBLANG_SPANISH_BOLIVIA	datapath-windows/ovsext/resource.h	568;"	d
SUBLANG_SPANISH_CHILE	datapath-windows/ovsext/resource.h	530;"	d
SUBLANG_SPANISH_COLOMBIA	datapath-windows/ovsext/resource.h	487;"	d
SUBLANG_SPANISH_COSTA_RICA	datapath-windows/ovsext/resource.h	414;"	d
SUBLANG_SPANISH_DOMINICAN_REPUBLIC	datapath-windows/ovsext/resource.h	443;"	d
SUBLANG_SPANISH_ECUADOR	datapath-windows/ovsext/resource.h	521;"	d
SUBLANG_SPANISH_EL_SALVADOR	datapath-windows/ovsext/resource.h	576;"	d
SUBLANG_SPANISH_GUATEMALA	datapath-windows/ovsext/resource.h	392;"	d
SUBLANG_SPANISH_HONDURAS	datapath-windows/ovsext/resource.h	583;"	d
SUBLANG_SPANISH_MEXICAN	datapath-windows/ovsext/resource.h	300;"	d
SUBLANG_SPANISH_MODERN	datapath-windows/ovsext/resource.h	345;"	d
SUBLANG_SPANISH_NICARAGUA	datapath-windows/ovsext/resource.h	588;"	d
SUBLANG_SPANISH_PANAMA	datapath-windows/ovsext/resource.h	429;"	d
SUBLANG_SPANISH_PARAGUAY	datapath-windows/ovsext/resource.h	542;"	d
SUBLANG_SPANISH_PERU	datapath-windows/ovsext/resource.h	498;"	d
SUBLANG_SPANISH_PUERTO_RICO	datapath-windows/ovsext/resource.h	593;"	d
SUBLANG_SPANISH_URUGUAY	datapath-windows/ovsext/resource.h	536;"	d
SUBLANG_SPANISH_US	datapath-windows/ovsext/resource.h	601;"	d
SUBLANG_SPANISH_VENEZUELA	datapath-windows/ovsext/resource.h	475;"	d
SUBLANG_SWAHILI_KENYA	datapath-windows/ovsext/resource.h	187;"	d
SUBLANG_SWEDISH	datapath-windows/ovsext/resource.h	188;"	d
SUBLANG_SWEDISH_FINLAND	datapath-windows/ovsext/resource.h	301;"	d
SUBLANG_SYRIAC_SYRIA	datapath-windows/ovsext/resource.h	189;"	d
SUBLANG_SYS_DEFAULT	datapath-windows/ovsext/resource.h	270;"	d
SUBLANG_TAJIK_TAJIKISTAN	datapath-windows/ovsext/resource.h	190;"	d
SUBLANG_TAMAZIGHT_ALGERIA_LATIN	datapath-windows/ovsext/resource.h	302;"	d
SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH	datapath-windows/ovsext/resource.h	393;"	d
SUBLANG_TAMIL_INDIA	datapath-windows/ovsext/resource.h	191;"	d
SUBLANG_TAMIL_SRI_LANKA	datapath-windows/ovsext/resource.h	303;"	d
SUBLANG_TATAR_RUSSIA	datapath-windows/ovsext/resource.h	192;"	d
SUBLANG_TELUGU_INDIA	datapath-windows/ovsext/resource.h	193;"	d
SUBLANG_THAI_THAILAND	datapath-windows/ovsext/resource.h	194;"	d
SUBLANG_TIBETAN_PRC	datapath-windows/ovsext/resource.h	195;"	d
SUBLANG_TIGRIGNA_ERITREA	datapath-windows/ovsext/resource.h	304;"	d
SUBLANG_TIGRINYA_ERITREA	datapath-windows/ovsext/resource.h	305;"	d
SUBLANG_TIGRINYA_ETHIOPIA	datapath-windows/ovsext/resource.h	196;"	d
SUBLANG_TSWANA_BOTSWANA	datapath-windows/ovsext/resource.h	306;"	d
SUBLANG_TSWANA_SOUTH_AFRICA	datapath-windows/ovsext/resource.h	197;"	d
SUBLANG_TURKISH_TURKEY	datapath-windows/ovsext/resource.h	198;"	d
SUBLANG_TURKMEN_TURKMENISTAN	datapath-windows/ovsext/resource.h	199;"	d
SUBLANG_UIGHUR_PRC	datapath-windows/ovsext/resource.h	200;"	d
SUBLANG_UI_CUSTOM_DEFAULT	datapath-windows/ovsext/resource.h	406;"	d
SUBLANG_UKRAINIAN_UKRAINE	datapath-windows/ovsext/resource.h	201;"	d
SUBLANG_UPPER_SORBIAN_GERMANY	datapath-windows/ovsext/resource.h	202;"	d
SUBLANG_URDU_INDIA	datapath-windows/ovsext/resource.h	307;"	d
SUBLANG_URDU_PAKISTAN	datapath-windows/ovsext/resource.h	203;"	d
SUBLANG_UZBEK_CYRILLIC	datapath-windows/ovsext/resource.h	308;"	d
SUBLANG_UZBEK_LATIN	datapath-windows/ovsext/resource.h	204;"	d
SUBLANG_VALENCIAN_VALENCIA	datapath-windows/ovsext/resource.h	309;"	d
SUBLANG_VIETNAMESE_VIETNAM	datapath-windows/ovsext/resource.h	205;"	d
SUBLANG_WELSH_UNITED_KINGDOM	datapath-windows/ovsext/resource.h	206;"	d
SUBLANG_WOLOF_SENEGAL	datapath-windows/ovsext/resource.h	207;"	d
SUBLANG_XHOSA_SOUTH_AFRICA	datapath-windows/ovsext/resource.h	208;"	d
SUBLANG_YAKUT_RUSSIA	datapath-windows/ovsext/resource.h	209;"	d
SUBLANG_YI_PRC	datapath-windows/ovsext/resource.h	210;"	d
SUBLANG_YORUBA_NIGERIA	datapath-windows/ovsext/resource.h	211;"	d
SUBLANG_ZULU_SOUTH_AFRICA	datapath-windows/ovsext/resource.h	212;"	d
SUBVERSION_MASK	datapath-windows/ovsext/resource.h	1024;"	d
SUCCESS	python/ovs/db/idl.py	/^    SUCCESS = "success"          # Commit successful.$/;"	v	class:Transaction
SUFFIXES	Makefile	/^SUFFIXES = .in .xml $(am__append_44) .ovsidl .ovsschema$/;"	m
SUFFIXES	utilities/ovs-dpctl-top	/^SUFFIXES = {1000: ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],$/;"	v
SUPERIOR	lib/rstp-state-machines.c	/^    SUPERIOR = 1,$/;"	e	enum:vector_comparison	file:
SUPERIOR_DESIGNATED_INFO	lib/rstp-common.h	/^    SUPERIOR_DESIGNATED_INFO,$/;"	e	enum:rstp_rcvd_info
SUPPORTED_GSO_TYPES	datapath/linux/compat/stt.c	53;"	d	file:
SUPPORTED_GSO_TYPES	datapath/linux/stt.c	53;"	d	file:
SVEC_EMPTY_INITIALIZER	lib/svec.h	33;"	d
SVEC_FOR_EACH	lib/svec.h	67;"	d
SVEC_H	lib/svec.h	18;"	d
SWITCH	tests/test-sflow.c	/^        uint32_t SWITCH;$/;"	m	struct:sflow_xdr::__anon230	file:
SW_FLOW_KEY_MEMCPY	datapath/flow_netlink.c	106;"	d	file:
SW_FLOW_KEY_MEMCPY	datapath/linux/flow_netlink.c	106;"	d	file:
SW_FLOW_KEY_MEMCPY_OFFSET	datapath/flow_netlink.c	97;"	d	file:
SW_FLOW_KEY_MEMCPY_OFFSET	datapath/linux/flow_netlink.c	97;"	d	file:
SW_FLOW_KEY_MEMSET_FIELD	datapath/flow_netlink.c	110;"	d	file:
SW_FLOW_KEY_MEMSET_FIELD	datapath/linux/flow_netlink.c	110;"	d	file:
SW_FLOW_KEY_PUT	datapath/flow_netlink.c	87;"	d	file:
SW_FLOW_KEY_PUT	datapath/linux/flow_netlink.c	87;"	d	file:
SW_FORCEMINIMIZE	datapath-windows/ovsext/resource.h	499;"	d
SW_HIDE	datapath-windows/ovsext/resource.h	5;"	d
SW_MAX	datapath-windows/ovsext/resource.h	500;"	d
SW_MAXIMIZE	datapath-windows/ovsext/resource.h	317;"	d
SW_MINIMIZE	datapath-windows/ovsext/resource.h	415;"	d
SW_NORMAL	datapath-windows/ovsext/resource.h	45;"	d
SW_OTHERUNZOOM	datapath-windows/ovsext/resource.h	351;"	d
SW_OTHERZOOM	datapath-windows/ovsext/resource.h	229;"	d
SW_PARENTCLOSING	datapath-windows/ovsext/resource.h	47;"	d
SW_PARENTOPENING	datapath-windows/ovsext/resource.h	319;"	d
SW_RESTORE	datapath-windows/ovsext/resource.h	476;"	d
SW_SHOW	datapath-windows/ovsext/resource.h	397;"	d
SW_SHOWDEFAULT	datapath-windows/ovsext/resource.h	488;"	d
SW_SHOWMAXIMIZED	datapath-windows/ovsext/resource.h	316;"	d
SW_SHOWMINIMIZED	datapath-windows/ovsext/resource.h	227;"	d
SW_SHOWMINNOACTIVE	datapath-windows/ovsext/resource.h	431;"	d
SW_SHOWNA	datapath-windows/ovsext/resource.h	444;"	d
SW_SHOWNOACTIVATE	datapath-windows/ovsext/resource.h	349;"	d
SW_SHOWNORMAL	datapath-windows/ovsext/resource.h	44;"	d
SYSCONFIG_HWCONF	utilities/bugtool/ovs-bugtool	/^SYSCONFIG_HWCONF = '\/etc\/sysconfig\/hwconf'$/;"	v
SYSCONFIG_NETWORK	utilities/bugtool/ovs-bugtool	/^SYSCONFIG_NETWORK = '\/etc\/sysconfig\/network'$/;"	v
SYSCONFIG_NETWORK_SCRIPTS	utilities/bugtool/ovs-bugtool	/^SYSCONFIG_NETWORK_SCRIPTS = '\/etc\/sysconfig\/network-scripts'$/;"	v
SYSCTL	utilities/bugtool/ovs-bugtool	/^SYSCTL = 'sysctl'$/;"	v
SYSLOG_DIRECT_H	lib/syslog-direct.h	18;"	d
SYSLOG_H	include/windows/syslog.h	18;"	d
SYSLOG_LIBC_H	lib/syslog-libc.h	18;"	d
SYSLOG_PROVIDER_H	lib/syslog-provider.h	18;"	d
SYSTEM_KMOD_TESTSUITE	Makefile	/^SYSTEM_KMOD_TESTSUITE = $(srcdir)\/tests\/system-kmod-testsuite$/;"	m
SYSTEM_KMOD_TESTSUITE	tests/automake.mk	/^SYSTEM_KMOD_TESTSUITE = $(srcdir)\/tests\/system-kmod-testsuite$/;"	m
SYSTEM_KMOD_TESTSUITE_AT	Makefile	/^SYSTEM_KMOD_TESTSUITE_AT = \\$/;"	m
SYSTEM_KMOD_TESTSUITE_AT	tests/automake.mk	/^SYSTEM_KMOD_TESTSUITE_AT = \\$/;"	m
SYSTEM_STATS_INTERVAL	vswitchd/system-stats.c	525;"	d	file:
SYSTEM_TESTSUITE_AT	Makefile	/^SYSTEM_TESTSUITE_AT = \\$/;"	m
SYSTEM_TESTSUITE_AT	tests/automake.mk	/^SYSTEM_TESTSUITE_AT = \\$/;"	m
SYSTEM_USERSPACE_TESTSUITE	Makefile	/^SYSTEM_USERSPACE_TESTSUITE = $(srcdir)\/tests\/system-userspace-testsuite$/;"	m
SYSTEM_USERSPACE_TESTSUITE	tests/automake.mk	/^SYSTEM_USERSPACE_TESTSUITE = $(srcdir)\/tests\/system-userspace-testsuite$/;"	m
SYSTEM_USERSPACE_TESTSUITE_AT	Makefile	/^SYSTEM_USERSPACE_TESTSUITE_AT = \\$/;"	m
SYSTEM_USERSPACE_TESTSUITE_AT	tests/automake.mk	/^SYSTEM_USERSPACE_TESTSUITE_AT = \\$/;"	m
SYS_RESOURCE_H	include/windows/sys/resource.h	18;"	d
S_CONNECTING	lib/learning-switch.c	/^    S_CONNECTING,               \/* Waiting for connection to complete. *\/$/;"	e	enum:lswitch_state	file:
S_FEATURES_REPLY	lib/learning-switch.c	/^    S_FEATURES_REPLY,           \/* Waiting for features reply. *\/$/;"	e	enum:lswitch_state	file:
S_SWITCHING	lib/learning-switch.c	/^    S_SWITCHING,                \/* Switching flows. *\/$/;"	e	enum:lswitch_state	file:
SchemaHelper	python/ovs/db/idl.py	/^class SchemaHelper(object):$/;"	c
SelectPoll	python/ovs/poller.py	/^SelectPoll = _SelectSelect$/;"	v
ServiceStartAction.Restart	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Start: "Start",$/;"	p
ServiceStartAction.Start	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Stop: "Stop",$/;"	p
ServiceStartAction.Stop	windows/ovs-windows-installer/Actions/OVSActions.js	/^var ServiceStartAction = {$/;"	p
ServiceStartMode.Auto	windows/ovs-windows-installer/Actions/OVSActions.js	/^    System: "System",$/;"	p
ServiceStartMode.Boot	windows/ovs-windows-installer/Actions/OVSActions.js	/^var ServiceStartMode = {$/;"	p
ServiceStartMode.Disabled	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Manual: "Manual",$/;"	p
ServiceStartMode.Manual	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Auto: "Auto",$/;"	p
ServiceStartMode.System	windows/ovs-windows-installer/Actions/OVSActions.js	/^    Boot: "Boot",$/;"	p
Session	python/ovs/jsonrpc.py	/^class Session(object):$/;"	c
Session	tests/MockXenAPI.py	/^class Session(object):$/;"	c
SetController	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def SetController(self, ip):$/;"	m	class:VSwitchControllerDialogue
SimpleHTTPRequestHandler	tests/test-l7.py	/^from SimpleHTTPServer import SimpleHTTPRequestHandler$/;"	i
Source	datapath-windows/ovsext/NetProto.h	/^    UINT8       Source[ETH_ADDR_LENGTH];$/;"	m	struct:EthHdr
Stats	python/ovs/reconnect.py	/^        class Stats(object):$/;"	c	function:Reconnect.get_stats
StatusUpdateHandler	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def StatusUpdateHandler(cls, inPane):$/;"	m	class:XSFeatureVSwitch
Stream	python/ovs/stream.py	/^class Stream(object):$/;"	c
StringIO	python/ovs/json.py	/^import StringIO$/;"	i
StringIO	utilities/bugtool/ovs-bugtool	/^import StringIO$/;"	i
StringIOmtime	utilities/bugtool/ovs-bugtool	/^class StringIOmtime(StringIO.StringIO):$/;"	c
StringType	python/ovs/db/types.py	/^StringType = AtomicType("string", "", (str, unicode))$/;"	v
SttHdr	datapath-windows/ovsext/Stt.h	/^typedef struct SttHdr {$/;"	s
SttHdr	datapath-windows/ovsext/Stt.h	/^} SttHdr, *PSttHdr;$/;"	t	typeref:struct:SttHdr
SumData	utilities/ovs-dpctl-top	/^class SumData(object):$/;"	c
TABLE_H	lib/table.h	18;"	d
TABLE_LONG_OPTIONS	lib/table.h	90;"	d
TABLE_OPTION_ENUMS	lib/table.h	85;"	d
TABLE_OPTION_HANDLERS	lib/table.h	97;"	d
TABLE_STYLE_DEFAULT	lib/table.h	83;"	d
TBL_INTERNAL	ofproto/ofproto-dpif.h	/^enum { TBL_INTERNAL = N_TABLES - 1 };    \/* Used for internal hidden rules. *\/$/;"	e	enum:__anon186
TBL_MIN_BUCKETS	datapath/flow_table.c	49;"	d	file:
TBL_MIN_BUCKETS	datapath/linux/flow_table.c	49;"	d	file:
TBSTYLE_ALTDRAG	datapath-windows/ovsext/resource.h	1219;"	d
TBSTYLE_AUTOSIZE	datapath-windows/ovsext/resource.h	552;"	d
TBSTYLE_BUTTON	datapath-windows/ovsext/resource.h	16;"	d
TBSTYLE_CHECK	datapath-windows/ovsext/resource.h	252;"	d
TBSTYLE_CUSTOMERASE	datapath-windows/ovsext/resource.h	1445;"	d
TBSTYLE_DROPDOWN	datapath-windows/ovsext/resource.h	456;"	d
TBSTYLE_FLAT	datapath-windows/ovsext/resource.h	1424;"	d
TBSTYLE_GROUP	datapath-windows/ovsext/resource.h	365;"	d
TBSTYLE_LIST	datapath-windows/ovsext/resource.h	1438;"	d
TBSTYLE_NOPREFIX	datapath-windows/ovsext/resource.h	638;"	d
TBSTYLE_REGISTERDROP	datapath-windows/ovsext/resource.h	1452;"	d
TBSTYLE_SEP	datapath-windows/ovsext/resource.h	71;"	d
TBSTYLE_TOOLTIPS	datapath-windows/ovsext/resource.h	1030;"	d
TBSTYLE_TRANSPARENT	datapath-windows/ovsext/resource.h	1535;"	d
TBSTYLE_WRAPABLE	datapath-windows/ovsext/resource.h	1090;"	d
TBS_AUTOTICKS	datapath-windows/ovsext/resource.h	73;"	d
TBS_BOTH	datapath-windows/ovsext/resource.h	457;"	d
TBS_BOTTOM	datapath-windows/ovsext/resource.h	18;"	d
TBS_DOWNISLEFT	datapath-windows/ovsext/resource.h	1221;"	d
TBS_ENABLESELRANGE	datapath-windows/ovsext/resource.h	640;"	d
TBS_FIXEDLENGTH	datapath-windows/ovsext/resource.h	721;"	d
TBS_HORZ	datapath-windows/ovsext/resource.h	17;"	d
TBS_LEFT	datapath-windows/ovsext/resource.h	367;"	d
TBS_NOTHUMB	datapath-windows/ovsext/resource.h	851;"	d
TBS_NOTICKS	datapath-windows/ovsext/resource.h	554;"	d
TBS_NOTIFYBEFOREMOVE	datapath-windows/ovsext/resource.h	1428;"	d
TBS_REVERSED	datapath-windows/ovsext/resource.h	1092;"	d
TBS_RIGHT	datapath-windows/ovsext/resource.h	19;"	d
TBS_TOOLTIPS	datapath-windows/ovsext/resource.h	1034;"	d
TBS_TOP	datapath-windows/ovsext/resource.h	366;"	d
TBS_TRANSPARENTBKGND	datapath-windows/ovsext/resource.h	1440;"	d
TBS_VERT	datapath-windows/ovsext/resource.h	254;"	d
TC	utilities/bugtool/ovs-bugtool	/^TC = 'tc'$/;"	v
TCA_CODEL_INTERVAL	lib/netdev-linux.c	2878;"	d	file:
TCA_CODEL_LIMIT	lib/netdev-linux.c	2877;"	d	file:
TCA_CODEL_TARGET	lib/netdev-linux.c	2876;"	d	file:
TCA_FQ_CODEL_ECN	lib/netdev-linux.c	3098;"	d	file:
TCA_FQ_CODEL_FLOWS	lib/netdev-linux.c	3099;"	d	file:
TCA_FQ_CODEL_INTERVAL	lib/netdev-linux.c	3097;"	d	file:
TCA_FQ_CODEL_LIMIT	lib/netdev-linux.c	3096;"	d	file:
TCA_FQ_CODEL_QUANTUM	lib/netdev-linux.c	3100;"	d	file:
TCA_FQ_CODEL_TARGET	lib/netdev-linux.c	3095;"	d	file:
TCPHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct TCPHdr {$/;"	s
TCPHdr	datapath-windows/ovsext/NetProto.h	/^} TCPHdr;$/;"	t	typeref:struct:TCPHdr
TCPServer	tests/test-l7.py	/^from SocketServer import TCPServer$/;"	i
TCPServerV6	tests/test-l7.py	/^class TCPServerV6(HTTPServer):$/;"	c
TCPStream	python/ovs/stream.py	/^class TCPStream(Stream):$/;"	c
TCP_ACK	lib/packets.h	697;"	d
TCP_CSUM_OFFSET	datapath-windows/ovsext/NetProto.h	39;"	d
TCP_CSUM_OFFSET	datapath-windows/ovsext/User.c	206;"	d	file:
TCP_CTL	lib/packets.h	703;"	d
TCP_CTL_OFS	datapath-windows/ovsext/PacketParser.h	64;"	d
TCP_CWR	lib/packets.h	700;"	d
TCP_DATA_LENGTH	datapath-windows/ovsext/NetProto.h	66;"	d
TCP_DATA_OFFSET_NO_OPTIONS	datapath-windows/ovsext/NetProto.h	69;"	d
TCP_DATA_OFFSET_WITH_TIMESTAMP	datapath-windows/ovsext/NetProto.h	70;"	d
TCP_ECE	lib/packets.h	699;"	d
TCP_FIN	lib/packets.h	693;"	d
TCP_FLAGS	datapath-windows/ovsext/PacketParser.h	65;"	d
TCP_FLAGS	lib/packets.h	704;"	d
TCP_FLAGS_BE16	datapath/flow.c	67;"	d	file:
TCP_FLAGS_BE16	datapath/linux/flow.c	67;"	d	file:
TCP_FLAGS_BE16	lib/packets.h	705;"	d
TCP_FLAGS_BE32	lib/flow.c	84;"	d	file:
TCP_FLAGS_BE32	lib/flow.c	87;"	d	file:
TCP_HDR_LEN	datapath-windows/ovsext/NetProto.h	65;"	d
TCP_HDR_MIN_LENGTH	datapath-windows/ovsext/NetProto.h	38;"	d
TCP_HDR_MIN_LENGTH_IN_UNITS	datapath-windows/ovsext/NetProto.h	52;"	d
TCP_HEADER_LEN	lib/packets.h	708;"	d
TCP_NS	lib/packets.h	701;"	d
TCP_OFFSET	lib/packets.h	706;"	d
TCP_OPT_EOL	datapath-windows/ovsext/NetProto.h	163;"	d
TCP_OPT_LEN_MD5SIG	datapath-windows/ovsext/NetProto.h	175;"	d
TCP_OPT_LEN_MSS	datapath-windows/ovsext/NetProto.h	171;"	d
TCP_OPT_LEN_SACK_PERM	datapath-windows/ovsext/NetProto.h	173;"	d
TCP_OPT_LEN_TIMESTAMP	datapath-windows/ovsext/NetProto.h	174;"	d
TCP_OPT_LEN_WINDOW	datapath-windows/ovsext/NetProto.h	172;"	d
TCP_OPT_MD5SIG	datapath-windows/ovsext/NetProto.h	169;"	d
TCP_OPT_MSS	datapath-windows/ovsext/NetProto.h	164;"	d
TCP_OPT_NOP	datapath-windows/ovsext/NetProto.h	162;"	d
TCP_OPT_SACK	datapath-windows/ovsext/NetProto.h	167;"	d
TCP_OPT_SACK_PERM	datapath-windows/ovsext/NetProto.h	166;"	d
TCP_OPT_TIMESTAMP	datapath-windows/ovsext/NetProto.h	168;"	d
TCP_OPT_WINDOW	datapath-windows/ovsext/NetProto.h	165;"	d
TCP_PSH	lib/packets.h	696;"	d
TCP_RST	lib/packets.h	695;"	d
TCP_SYN	lib/packets.h	694;"	d
TCP_URG	lib/packets.h	698;"	d
TCS_BOTTOM	datapath-windows/ovsext/resource.h	260;"	d
TCS_BUTTONS	datapath-windows/ovsext/resource.h	1039;"	d
TCS_FIXEDWIDTH	datapath-windows/ovsext/resource.h	1225;"	d
TCS_FLATBUTTONS	datapath-windows/ovsext/resource.h	464;"	d
TCS_FOCUSNEVER	datapath-windows/ovsext/resource.h	1539;"	d
TCS_FOCUSONBUTTONDOWN	datapath-windows/ovsext/resource.h	1443;"	d
TCS_FORCEICONLEFT	datapath-windows/ovsext/resource.h	561;"	d
TCS_FORCELABELLEFT	datapath-windows/ovsext/resource.h	646;"	d
TCS_HOTTRACK	datapath-windows/ovsext/resource.h	726;"	d
TCS_MULTILINE	datapath-windows/ovsext/resource.h	1096;"	d
TCS_MULTISELECT	datapath-windows/ovsext/resource.h	374;"	d
TCS_OWNERDRAWFIXED	datapath-windows/ovsext/resource.h	1449;"	d
TCS_RAGGEDRIGHT	datapath-windows/ovsext/resource.h	1431;"	d
TCS_RIGHT	datapath-windows/ovsext/resource.h	261;"	d
TCS_RIGHTJUSTIFY	datapath-windows/ovsext/resource.h	24;"	d
TCS_SCROLLOPPOSITE	datapath-windows/ovsext/resource.h	80;"	d
TCS_SINGLELINE	datapath-windows/ovsext/resource.h	23;"	d
TCS_TABS	datapath-windows/ovsext/resource.h	22;"	d
TCS_TOOLTIPS	datapath-windows/ovsext/resource.h	1456;"	d
TCS_VERTICAL	datapath-windows/ovsext/resource.h	856;"	d
TC_H_MAJ_MASK	include/windows/linux/pkt_sched.h	20;"	d
TC_H_MAKE	include/windows/linux/pkt_sched.h	24;"	d
TC_H_MIN_MASK	include/windows/linux/pkt_sched.h	22;"	d
TC_INITIALIZER	lib/netdev-linux.c	208;"	d	file:
TC_RTAB_SIZE	lib/netdev-linux.c	109;"	d	file:
TEST	tests/test-lockfile.c	242;"	d	file:
TEST	tests/test-lockfile.c	257;"	d	file:
TESTPKI_FILES	Makefile	/^TESTPKI_FILES = \\$/;"	m
TESTPKI_FILES	tests/automake.mk	/^TESTPKI_FILES = \\$/;"	m
TESTSUITE	Makefile	/^TESTSUITE = $(srcdir)\/tests\/testsuite$/;"	m
TESTSUITE	tests/automake.mk	/^TESTSUITE = $(srcdir)\/tests\/testsuite$/;"	m
TESTSUITE_AT	Makefile	/^TESTSUITE_AT = \\$/;"	m
TESTSUITE_AT	tests/automake.mk	/^TESTSUITE_AT = \\$/;"	m
TESTSUITE_PATCH	Makefile	/^TESTSUITE_PATCH = $(srcdir)\/tests\/testsuite.patch$/;"	m
TESTSUITE_PATCH	tests/automake.mk	/^TESTSUITE_PATCH = $(srcdir)\/tests\/testsuite.patch$/;"	m
TEST_ATOMIC_ORDER	tests/test-atomic.c	115;"	d	file:
TEST_ATOMIC_TYPE	tests/test-atomic.c	29;"	d	file:
TEST_ATOMIC_TYPE_EXPLICIT	tests/test-atomic.c	71;"	d	file:
TEST_CASE	tests/test-csum.c	40;"	d	file:
TEST_TYPE	tests/test-type-props.c	31;"	d	file:
TF_CSV	lib/table.h	/^    TF_CSV,                     \/* Comma-separated lines. *\/$/;"	e	enum:table_format
TF_HTML	lib/table.h	/^    TF_HTML,                    \/* HTML table. *\/$/;"	e	enum:table_format
TF_JSON	lib/table.h	/^    TF_JSON                     \/* JSON. *\/$/;"	e	enum:table_format
TF_LIST	lib/table.h	/^    TF_LIST,                    \/* One cell per line, one row per paragraph. *\/$/;"	e	enum:table_format
TF_TABLE	lib/table.h	/^    TF_TABLE,                   \/* 2-d table. *\/$/;"	e	enum:table_format
TIMER_H	lib/timer.h	18;"	d
TIMEVAL_H	lib/timeval.h	18;"	d
TIME_MAX	lib/timeval.h	40;"	d
TIME_MIN	lib/timeval.h	41;"	d
TME_HOVER	datapath-windows/ovsext/resource.h	64;"	d
TME_LEAVE	datapath-windows/ovsext/resource.h	245;"	d
TME_NONCLIENT	datapath-windows/ovsext/resource.h	549;"	d
TNL_ARP_CACHE_H	lib/tnl-arp-cache.h	18;"	d
TNL_PORT_H	lib/tnl-ports.h	18;"	d
TNL_PUSH_HEADER_SIZE	datapath/linux/compat/include/linux/openvswitch.h	649;"	d
TNL_PUSH_HEADER_SIZE	include/odp-netlink.h	654;"	d
TOKEN_BUCKET_INIT	include/openvswitch/token-bucket.h	33;"	d
TOPOLOGY_CHANGE_NOTIFICATION_BPDU	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_NOTIFICATION_BPDU = 0x80,$/;"	e	enum:rstp_bpdu_type
TOPOLOGY_CHANGE_NOTIFICATION_BPDU_SIZE	lib/rstp-state-machines.c	/^    TOPOLOGY_CHANGE_NOTIFICATION_BPDU_SIZE = 4,$/;"	e	enum:bpdu_size	file:
TOPOLOGY_CHANGE_SM_ACKNOWLEDGED_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_ACKNOWLEDGED_EXEC,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_ACTIVE	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_ACTIVE,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_ACTIVE_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_ACTIVE_EXEC,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_DETECTED_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_DETECTED_EXEC,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_INACTIVE	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_INACTIVE,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_INACTIVE_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_INACTIVE_EXEC,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_INIT	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_INIT,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_LEARNING	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_LEARNING,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_LEARNING_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_LEARNING_EXEC,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_NOTIFIED_TCN_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_NOTIFIED_TCN_EXEC,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_NOTIFIED_TC_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_NOTIFIED_TC_EXEC,$/;"	e	enum:topology_change_state_machine
TOPOLOGY_CHANGE_SM_PROPAGATING_EXEC	lib/rstp-common.h	/^    TOPOLOGY_CHANGE_SM_PROPAGATING_EXEC,$/;"	e	enum:topology_change_state_machine
TP_PORTS_OFS32	lib/classifier.c	55;"	d	file:
TP_PORTS_OFS64	lib/classifier.c	58;"	d	file:
TP_STATUS_VLAN_TPID_VALID	lib/netdev-linux.c	128;"	d	file:
TP_STATUS_VLAN_VALID	lib/netdev-linux.c	125;"	d	file:
TRIE_PREFIX_BITS	lib/classifier-private.h	208;"	d
TRY_AGAIN	python/ovs/db/idl.py	/^    TRY_AGAIN = "try again"      # Commit failed because a "verify" operation$/;"	v	class:Transaction
TRY_LOCK_FUNCTION	lib/ovs-thread.c	80;"	d	file:
TTS_ALWAYSTIP	datapath-windows/ovsext/resource.h	72;"	d
TTS_BALLOON	datapath-windows/ovsext/resource.h	720;"	d
TTS_CLOSE	datapath-windows/ovsext/resource.h	850;"	d
TTS_NOANIMATE	datapath-windows/ovsext/resource.h	553;"	d
TTS_NOFADE	datapath-windows/ovsext/resource.h	639;"	d
TTS_NOPREFIX	datapath-windows/ovsext/resource.h	253;"	d
TTS_USEVISUALSTYLE	datapath-windows/ovsext/resource.h	1032;"	d
TUNNEL4_IN	tests/test-sflow.c	/^	uint32_t TUNNEL4_IN;$/;"	m	struct:sflow_xdr::__anon230	file:
TUNNEL4_OUT	tests/test-sflow.c	/^	uint32_t TUNNEL4_OUT;$/;"	m	struct:sflow_xdr::__anon230	file:
TUNNEL_CLASS	lib/netdev-vport.c	1430;"	d	file:
TUNNEL_CRIT_OPT	datapath/linux/compat/include/net/ip_tunnels.h	68;"	d
TUNNEL_CSUM	datapath/linux/compat/include/net/ip_tunnels.h	42;"	d
TUNNEL_DONT_FRAGMENT	datapath/linux/compat/include/net/ip_tunnels.h	63;"	d
TUNNEL_GENEVE_OPT	datapath/linux/compat/include/net/ip_tunnels.h	72;"	d
TUNNEL_H	ofproto/tunnel.h	17;"	d
TUNNEL_KEY	datapath/linux/compat/include/net/ip_tunnels.h	44;"	d
TUNNEL_NO_KEY	datapath/linux/compat/include/net/ip_tunnels.h	49;"	d
TUNNEL_OAM	datapath/linux/compat/include/net/ip_tunnels.h	67;"	d
TUNNEL_OPTIONS_PRESENT	datapath/linux/compat/include/net/ip_tunnels.h	80;"	d
TUNNEL_OPTIONS_PRESENT	datapath/linux/compat/include/net/ip_tunnels.h	81;"	d
TUNNEL_REC	datapath/linux/compat/include/net/ip_tunnels.h	47;"	d
TUNNEL_ROUTING	datapath/linux/compat/include/net/ip_tunnels.h	43;"	d
TUNNEL_SEQ	datapath/linux/compat/include/net/ip_tunnels.h	45;"	d
TUNNEL_STRICT	datapath/linux/compat/include/net/ip_tunnels.h	46;"	d
TUNNEL_VERSION	datapath/linux/compat/include/net/ip_tunnels.h	48;"	d
TUNNEL_VNI_IN	tests/test-sflow.c	/^	uint32_t TUNNEL_VNI_IN;$/;"	m	struct:sflow_xdr::__anon230	file:
TUNNEL_VNI_OUT	tests/test-sflow.c	/^	uint32_t TUNNEL_VNI_OUT;$/;"	m	struct:sflow_xdr::__anon230	file:
TUNNEL_VXLAN_OPT	datapath/linux/compat/include/net/ip_tunnels.h	76;"	d
TUN_METADATA_H	lib/tun-metadata.h	18;"	d
TUN_METADATA_NUM_OPTS	lib/tun-metadata.h	36;"	d
TUN_METADATA_OFFSET	datapath/flow.h	64;"	d
TUN_METADATA_OPTS	datapath/flow.h	66;"	d
TUN_METADATA_TOT_OPT_SIZE	lib/tun-metadata.h	37;"	d
TVS_CHECKBOXES	datapath-windows/ovsext/resource.h	1037;"	d
TVS_DISABLEDRAGDROP	datapath-windows/ovsext/resource.h	559;"	d
TVS_EDITLABELS	datapath-windows/ovsext/resource.h	462;"	d
TVS_EX_AUTOHSCROLL	datapath-windows/ovsext/resource.h	645;"	d
TVS_EX_DIMMEDCHECKBOXES	datapath-windows/ovsext/resource.h	1095;"	d
TVS_EX_DOUBLEBUFFER	datapath-windows/ovsext/resource.h	373;"	d
TVS_EX_DRAWIMAGEASYNC	datapath-windows/ovsext/resource.h	1224;"	d
TVS_EX_EXCLUSIONCHECKBOXES	datapath-windows/ovsext/resource.h	1038;"	d
TVS_EX_FADEINOUTEXPANDOS	datapath-windows/ovsext/resource.h	725;"	d
TVS_EX_MULTISELECT	datapath-windows/ovsext/resource.h	259;"	d
TVS_EX_NOINDENTSTATE	datapath-windows/ovsext/resource.h	463;"	d
TVS_EX_NOSINGLECOLLAPSE	datapath-windows/ovsext/resource.h	79;"	d
TVS_EX_PARTIALCHECKBOXES	datapath-windows/ovsext/resource.h	855;"	d
TVS_EX_RICHTOOLTIP	datapath-windows/ovsext/resource.h	560;"	d
TVS_FULLROWSELECT	datapath-windows/ovsext/resource.h	1442;"	d
TVS_HASBUTTONS	datapath-windows/ovsext/resource.h	78;"	d
TVS_HASLINES	datapath-windows/ovsext/resource.h	258;"	d
TVS_INFOTIP	datapath-windows/ovsext/resource.h	1430;"	d
TVS_LINESATROOT	datapath-windows/ovsext/resource.h	372;"	d
TVS_NOHSCROLL	datapath-windows/ovsext/resource.h	1538;"	d
TVS_NONEVENHEIGHT	datapath-windows/ovsext/resource.h	1455;"	d
TVS_NOSCROLL	datapath-windows/ovsext/resource.h	1448;"	d
TVS_NOTOOLTIPS	datapath-windows/ovsext/resource.h	854;"	d
TVS_RTLREADING	datapath-windows/ovsext/resource.h	724;"	d
TVS_SHOWSELALWAYS	datapath-windows/ovsext/resource.h	644;"	d
TVS_SINGLEEXPAND	datapath-windows/ovsext/resource.h	1223;"	d
TVS_TRACKSELECT	datapath-windows/ovsext/resource.h	1094;"	d
TXN_ABORTED	lib/ovsdb-idl.h	/^    TXN_ABORTED,                \/* ovsdb_idl_txn_abort() called. *\/$/;"	e	enum:ovsdb_idl_txn_status
TXN_ERROR	lib/ovsdb-idl.h	/^    TXN_ERROR                   \/* Commit failed due to a hard error. *\/$/;"	e	enum:ovsdb_idl_txn_status
TXN_INCOMPLETE	lib/ovsdb-idl.h	/^    TXN_INCOMPLETE,             \/* Commit in progress, please wait. *\/$/;"	e	enum:ovsdb_idl_txn_status
TXN_NOT_LOCKED	lib/ovsdb-idl.h	/^    TXN_NOT_LOCKED,             \/* Server hasn't given us the lock yet. *\/$/;"	e	enum:ovsdb_idl_txn_status
TXN_SUCCESS	lib/ovsdb-idl.h	/^    TXN_SUCCESS,                \/* Commit successful. *\/$/;"	e	enum:ovsdb_idl_txn_status
TXN_TRY_AGAIN	lib/ovsdb-idl.h	/^    TXN_TRY_AGAIN,              \/* Commit failed because a "verify" operation$/;"	e	enum:ovsdb_idl_txn_status
TXN_UNCHANGED	lib/ovsdb-idl.h	/^    TXN_UNCHANGED,              \/* Transaction didn't include any changes. *\/$/;"	e	enum:ovsdb_idl_txn_status
TXN_UNCOMMITTED	lib/ovsdb-idl.h	/^    TXN_UNCOMMITTED,            \/* Not yet committed or aborted. *\/$/;"	e	enum:ovsdb_idl_txn_status
TYPES	build-aux/extract-ofp-fields	/^TYPES = {"u8":       (1,   False),$/;"	v
TYPE_IS_BOOL	lib/type-props.h	23;"	d
TYPE_IS_INTEGER	lib/type-props.h	27;"	d
TYPE_IS_SIGNED	lib/type-props.h	30;"	d
TYPE_MAXIMUM	lib/type-props.h	45;"	d
TYPE_MINIMUM	lib/type-props.h	44;"	d
TYPE_PROPS_H	lib/type-props.h	18;"	d
TYPE_VALUE_BITS	lib/type-props.h	40;"	d
T_BEGIN_ARRAY	lib/json.c	/^    T_BEGIN_ARRAY = '[',$/;"	e	enum:json_token_type	file:
T_BEGIN_OBJECT	lib/json.c	/^    T_BEGIN_OBJECT = '{',$/;"	e	enum:json_token_type	file:
T_END_ARRAY	lib/json.c	/^    T_END_ARRAY = ']',$/;"	e	enum:json_token_type	file:
T_END_OBJECT	lib/json.c	/^    T_END_OBJECT = '}',$/;"	e	enum:json_token_type	file:
T_EOF	lib/json.c	/^    T_EOF = 0,$/;"	e	enum:json_token_type	file:
T_ERROR	python/ovs/jsonrpc.py	/^    T_ERROR = 3                 # Error reply.$/;"	v	class:Message
T_FALSE	lib/json.c	/^    T_FALSE = UCHAR_MAX + 1,$/;"	e	enum:json_token_type	file:
T_INTEGER	lib/json.c	/^    T_INTEGER,$/;"	e	enum:json_token_type	file:
T_NAME_SEPARATOR	lib/json.c	/^    T_NAME_SEPARATOR = ':',$/;"	e	enum:json_token_type	file:
T_NOTIFY	python/ovs/jsonrpc.py	/^    T_NOTIFY = 1                # Notification.$/;"	v	class:Message
T_NULL	lib/json.c	/^    T_NULL,$/;"	e	enum:json_token_type	file:
T_REAL	lib/json.c	/^    T_REAL,$/;"	e	enum:json_token_type	file:
T_REPLY	python/ovs/jsonrpc.py	/^    T_REPLY = 2                 # Successful reply.$/;"	v	class:Message
T_REQUEST	python/ovs/jsonrpc.py	/^    T_REQUEST = 0               # Request.$/;"	v	class:Message
T_STRING	lib/json.c	/^    T_STRING$/;"	e	enum:json_token_type	file:
T_TRUE	lib/json.c	/^    T_TRUE,$/;"	e	enum:json_token_type	file:
T_VALUE_SEPARATOR	lib/json.c	/^    T_VALUE_SEPARATOR = ',',$/;"	e	enum:json_token_type	file:
Table	tests/MockXenAPI.py	/^class Table(object):$/;"	c
TableSchema	python/ovs/db/schema.py	/^class TableSchema(object):$/;"	c
TcpListenerConnection	python/ovstest/tcp.py	/^class TcpListenerConnection(Protocol):$/;"	c
TcpListenerFactory	python/ovstest/tcp.py	/^class TcpListenerFactory(Factory):$/;"	c
TcpSenderConnection	python/ovstest/tcp.py	/^class TcpSenderConnection(Protocol):$/;"	c
TcpSenderFactory	python/ovstest/tcp.py	/^class TcpSenderFactory(ClientFactory):$/;"	c
Te0	lib/aes128.c	/^static const uint32_t Te0[256] = {$/;"	v	file:
Te1	lib/aes128.c	/^static const uint32_t Te1[256] = {$/;"	v	file:
Te2	lib/aes128.c	/^static const uint32_t Te2[256] = {$/;"	v	file:
Te3	lib/aes128.c	/^static const uint32_t Te3[256] = {$/;"	v	file:
Te4	lib/aes128.c	/^static const uint32_t Te4[256] = {$/;"	v	file:
TestArena	python/ovstest/rpcserver.py	/^class TestArena(xmlrpc.XMLRPC):$/;"	c
TestsuiteFlowParse	utilities/ovs-dpctl-top	/^    class TestsuiteFlowParse(unittest.TestCase):$/;"	c
Transaction	python/ovs/db/idl.py	/^class Transaction(object):$/;"	c
Tunnel_Ip	vtep/ovs-vtep	/^Tunnel_Ip = ""$/;"	v
Type	datapath-windows/ovsext/NetProto.h	/^    UINT16      Type;$/;"	m	struct:EthHdr
Type	python/ovs/db/types.py	/^class Type(object):$/;"	c
UDPHdr	datapath-windows/ovsext/NetProto.h	/^typedef struct UDPHdr {$/;"	s
UDPHdr	datapath-windows/ovsext/NetProto.h	/^} UDPHdr;$/;"	t	typeref:struct:UDPHdr
UDPReceiver	utilities/ovs-vlan-test	/^class UDPReceiver:$/;"	c
UDP_CSUM_OFFSET	datapath-windows/ovsext/NetProto.h	40;"	d
UDP_CSUM_OFFSET	datapath-windows/ovsext/User.c	207;"	d	file:
UDP_HEADER_LEN	lib/packets.h	684;"	d
UDS_ALIGNLEFT	datapath-windows/ovsext/resource.h	458;"	d
UDS_ALIGNRIGHT	datapath-windows/ovsext/resource.h	368;"	d
UDS_ARROWKEYS	datapath-windows/ovsext/resource.h	641;"	d
UDS_AUTOBUDDY	datapath-windows/ovsext/resource.h	555;"	d
UDS_HORZ	datapath-windows/ovsext/resource.h	722;"	d
UDS_HOTTRACK	datapath-windows/ovsext/resource.h	1035;"	d
UDS_NOTHOUSANDS	datapath-windows/ovsext/resource.h	852;"	d
UDS_SETBUDDYINT	datapath-windows/ovsext/resource.h	255;"	d
UDS_WRAP	datapath-windows/ovsext/resource.h	74;"	d
UISF_ACTIVE	datapath-windows/ovsext/resource.h	354;"	d
UISF_HIDEACCEL	datapath-windows/ovsext/resource.h	236;"	d
UISF_HIDEFOCUS	datapath-windows/ovsext/resource.h	55;"	d
UIS_CLEAR	datapath-windows/ovsext/resource.h	235;"	d
UIS_INITIALIZE	datapath-windows/ovsext/resource.h	324;"	d
UIS_SET	datapath-windows/ovsext/resource.h	54;"	d
UKEY_DELETE	ofproto/ofproto-dpif-upcall.c	/^    UKEY_DELETE,$/;"	e	enum:reval_result	file:
UKEY_KEEP	ofproto/ofproto-dpif-upcall.c	/^    UKEY_KEEP,$/;"	e	enum:reval_result	file:
UKEY_MODIFY	ofproto/ofproto-dpif-upcall.c	/^    UKEY_MODIFY$/;"	e	enum:reval_result	file:
ULLONG_FOR_EACH_1	lib/bitmap.h	273;"	d
ULLONG_GET	lib/bitmap.h	282;"	d
ULLONG_SET0	lib/bitmap.h	278;"	d
ULLONG_SET1	lib/bitmap.h	279;"	d
UNALIGNED_H	lib/unaligned.h	18;"	d
UNCHANGED	python/ovs/db/idl.py	/^    UNCHANGED = "unchanged"      # Transaction didn't include any changes.$/;"	v	class:Transaction
UNCOMMITTED	python/ovs/db/idl.py	/^    UNCOMMITTED = "uncommitted"  # Not yet committed or aborted.$/;"	v	class:Transaction
UNICODE_H	lib/unicode.h	18;"	d
UNICODE_NOCHAR	datapath-windows/ovsext/resource.h	1564;"	d
UNINSTALL_LOCAL	Makefile	/^UNINSTALL_LOCAL = $(am__append_38) ovs-uninstall-local$/;"	m
UNIXCTL_H	lib/unixctl.h	18;"	d
UNLOCK_FUNCTION	lib/ovs-thread.c	108;"	d	file:
UNROLL_LOOPS	lib/sha1.c	40;"	d	file:
UPCALL_MAX_BATCH	ofproto/ofproto-dpif-upcall.c	44;"	d	file:
UPTIME	utilities/bugtool/ovs-bugtool	/^UPTIME = 'uptime'$/;"	v
USER_ACTION_COOKIE_FLOW_SAMPLE	lib/odp-util.h	/^    USER_ACTION_COOKIE_FLOW_SAMPLE,  \/* Packet for per-flow sampling. *\/$/;"	e	enum:user_action_cookie_type
USER_ACTION_COOKIE_IPFIX	lib/odp-util.h	/^    USER_ACTION_COOKIE_IPFIX,        \/* Packet for per-bridge IPFIX sampling. *\/$/;"	e	enum:user_action_cookie_type
USER_ACTION_COOKIE_SFLOW	lib/odp-util.h	/^    USER_ACTION_COOKIE_SFLOW,        \/* Packet for per-bridge sFlow sampling. *\/$/;"	e	enum:user_action_cookie_type
USER_ACTION_COOKIE_SLOW_PATH	lib/odp-util.h	/^    USER_ACTION_COOKIE_SLOW_PATH,    \/* Userspace must process this flow. *\/$/;"	e	enum:user_action_cookie_type
USER_ACTION_COOKIE_UNSPEC	lib/odp-util.h	/^    USER_ACTION_COOKIE_UNSPEC,$/;"	e	enum:user_action_cookie_type
USER_HZ	vswitchd/system-stats.c	229;"	d	file:
USE_UPSTREAM_VXLAN	datapath/linux/compat/include/net/vxlan.h	12;"	d
USHRT_MAX	datapath/linux/compat/include/linux/kernel.h	50;"	d
UTIL_H	lib/util.h	18;"	d
UUID_ARGS	lib/uuid.h	47;"	d
UUID_BIT	lib/uuid.h	24;"	d
UUID_FMT	lib/uuid.h	46;"	d
UUID_H	lib/uuid.h	17;"	d
UUID_LEN	lib/uuid.h	45;"	d
UUID_OCTET	lib/uuid.h	/^BUILD_ASSERT_DECL(sizeof(struct uuid) == UUID_OCTET);$/;"	v
UUID_OCTET	lib/uuid.h	25;"	d
UdpListener	python/ovstest/udp.py	/^class UdpListener(DatagramProtocol):$/;"	c
UdpSender	python/ovstest/udp.py	/^class UdpSender(DatagramProtocol):$/;"	c
UniqueServerAction	python/ovstest/args.py	/^class UniqueServerAction(argparse.Action):$/;"	c
UnixStream	python/ovs/stream.py	/^class UnixStream(Stream):$/;"	c
UnixctlClient	python/ovs/unixctl/client.py	/^class UnixctlClient(object):$/;"	c
UnixctlClient	python/ovs/unixctl/server.py	/^class UnixctlClient(object):$/;"	c
UnixctlConnection	python/ovs/unixctl/server.py	/^class UnixctlConnection(object):$/;"	c
UnixctlServer	python/ovs/unixctl/server.py	/^class UnixctlServer(object):$/;"	c
UpdateFields	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def UpdateFields(self):$/;"	m	class:VSwitchControllerDialogue
UpdateFieldsGETCONTROLLER	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def UpdateFieldsGETCONTROLLER(self):$/;"	m	class:VSwitchControllerDialogue
UpdateFieldsINITIAL	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def UpdateFieldsINITIAL(self):$/;"	m	class:VSwitchControllerDialogue
Usage	xenserver/opt_xensource_libexec_interface-reconfigure	/^class Usage(Exception):$/;"	c
UuidType	python/ovs/db/types.py	/^UuidType = AtomicType("uuid", ovs.ovsuuid.zero(), (uuid.UUID,))$/;"	v
VALGRIND	Makefile	/^VALGRIND = valgrind --log-file=valgrind.%p --leak-check=full \\$/;"	m
VALGRIND	tests/automake.mk	/^VALGRIND = valgrind --log-file=valgrind.%p --leak-check=full \\$/;"	m
VALGRIND_H	lib/valgrind.h	18;"	d
VALID_CARRIER	lib/netdev-bsd.c	/^    VALID_CARRIER = 1 << 5$/;"	e	enum:__anon105	file:
VALID_DRVINFO	lib/netdev-linux.c	/^    VALID_DRVINFO           = 1 << 7,$/;"	e	enum:__anon110	file:
VALID_ETHERADDR	lib/netdev-bsd.c	/^    VALID_ETHERADDR = 1 << 1,$/;"	e	enum:__anon105	file:
VALID_ETHERADDR	lib/netdev-linux.c	/^    VALID_ETHERADDR         = 1 << 1,$/;"	e	enum:__anon110	file:
VALID_ETHERADDR	lib/netdev-windows.c	/^    VALID_ETHERADDR         = 1 << 0,$/;"	e	enum:__anon113	file:
VALID_FEATURES	lib/netdev-linux.c	/^    VALID_FEATURES          = 1 << 8,$/;"	e	enum:__anon110	file:
VALID_IFFLAG	lib/netdev-windows.c	/^    VALID_IFFLAG            = 1 << 5,$/;"	e	enum:__anon113	file:
VALID_IFINDEX	lib/netdev-bsd.c	/^    VALID_IFINDEX = 1 << 0,$/;"	e	enum:__anon105	file:
VALID_IFINDEX	lib/netdev-linux.c	/^    VALID_IFINDEX           = 1 << 0,$/;"	e	enum:__anon110	file:
VALID_IN4	lib/netdev-bsd.c	/^    VALID_IN4 = 1 << 2,$/;"	e	enum:__anon105	file:
VALID_IN4	lib/netdev-linux.c	/^    VALID_IN4               = 1 << 2,$/;"	e	enum:__anon110	file:
VALID_IN6	lib/netdev-bsd.c	/^    VALID_IN6 = 1 << 3,$/;"	e	enum:__anon105	file:
VALID_IN6	lib/netdev-linux.c	/^    VALID_IN6               = 1 << 3,$/;"	e	enum:__anon110	file:
VALID_MTU	lib/netdev-bsd.c	/^    VALID_MTU = 1 << 4,$/;"	e	enum:__anon105	file:
VALID_MTU	lib/netdev-linux.c	/^    VALID_MTU               = 1 << 4,$/;"	e	enum:__anon110	file:
VALID_MTU	lib/netdev-windows.c	/^    VALID_MTU               = 1 << 1,$/;"	e	enum:__anon113	file:
VALID_POLICING	lib/netdev-linux.c	/^    VALID_POLICING          = 1 << 5,$/;"	e	enum:__anon110	file:
VALID_VPORT_STAT_ERROR	lib/netdev-linux.c	/^    VALID_VPORT_STAT_ERROR  = 1 << 6,$/;"	e	enum:__anon110	file:
VALUE_WIDTH	utilities/ovs-dpctl-top	/^    VALUE_WIDTH = 9$/;"	v	class:Columns
VAR_LOG_CORE_DIR	utilities/bugtool/ovs-bugtool	/^VAR_LOG_CORE_DIR = '\/var\/log\/core'$/;"	v
VAR_LOG_DIR	utilities/bugtool/ovs-bugtool	/^VAR_LOG_DIR = '\/var\/log\/'$/;"	v
VCONN_PROVIDER_H	lib/vconn-provider.h	18;"	d
VCS_CONNECTED	lib/vconn.c	/^    VCS_CONNECTED,              \/* Connection established. *\/$/;"	e	enum:vconn_state	file:
VCS_CONNECTING	lib/vconn.c	/^    VCS_CONNECTING,             \/* Underlying vconn is not connected. *\/$/;"	e	enum:vconn_state	file:
VCS_DISCONNECTED	lib/vconn.c	/^    VCS_DISCONNECTED            \/* Connection failed or connection closed. *\/$/;"	e	enum:vconn_state	file:
VCS_RECV_HELLO	lib/vconn.c	/^    VCS_RECV_HELLO,             \/* Waiting to receive OFPT_HELLO message. *\/$/;"	e	enum:vconn_state	file:
VCS_SEND_ERROR	lib/vconn.c	/^    VCS_SEND_ERROR,             \/* Sending OFPT_ERROR message. *\/$/;"	e	enum:vconn_state	file:
VCS_SEND_HELLO	lib/vconn.c	/^    VCS_SEND_HELLO,             \/* Waiting to send OFPT_HELLO message. *\/$/;"	e	enum:vconn_state	file:
VERSION	Makefile	/^VERSION = 2.4.90$/;"	m
VERSION	build-aux/extract-ofp-fields	/^VERSION = {"1.0": 0x01,$/;"	v
VERSION	build-aux/extract-ofp-msgs	/^VERSION = {"1.0": 0x01,$/;"	v
VERSION	config.h	235;"	d
VERSION	datapath/Makefile	/^VERSION = 2.4.90$/;"	m
VERSION	datapath/datapath.c	/^MODULE_VERSION(VERSION);$/;"	v
VERSION	datapath/linux/datapath.c	/^MODULE_VERSION(VERSION);$/;"	v
VERSION	python/ovs/version.py	/^VERSION = "2.4.90"$/;"	v
VERSION	python/setup.py	/^VERSION = "unknown"$/;"	v
VERSION	vtep/ovs-vtep	/^VERSION = "0.99"$/;"	v
VERS_SHIFT	lib/bfd.c	146;"	d	file:
VER_DEBUG	datapath-windows/ovsext/resource.h	39;"	d
VER_PACKAGEBUILD_QFE	datapath-windows/ovsext/resource.h	1458;"	d
VER_PRERELEASE	datapath-windows/ovsext/resource.h	40;"	d
VER_PRODUCTBUILD	datapath-windows/ovsext/resource.h	1450;"	d
VER_PRODUCTBUILD_QFE	datapath-windows/ovsext/resource.h	1457;"	d
VER_PRODUCTMAJORVERSION	datapath-windows/ovsext/resource.h	430;"	d
VER_PRODUCTMINORVERSION	datapath-windows/ovsext/resource.h	348;"	d
VER_PRODUCTVERSION_W	datapath-windows/ovsext/resource.h	1404;"	d
VFFF_ISSHAREDFILE	datapath-windows/ovsext/resource.h	222;"	d
VFF_BUFFTOOSMALL	datapath-windows/ovsext/resource.h	396;"	d
VFF_CURNEDEST	datapath-windows/ovsext/resource.h	223;"	d
VFF_FILEINUSE	datapath-windows/ovsext/resource.h	312;"	d
VHOST_ENQ_RETRY_USECS	lib/netdev-dpdk.c	108;"	d	file:
VIF	tests/MockXenAPI.py	/^class VIF(Table):$/;"	c
VIFF_DONTDELETEOLD	datapath-windows/ovsext/resource.h	313;"	d
VIFF_FORCEINSTALL	datapath-windows/ovsext/resource.h	224;"	d
VK_ACCEPT	datapath-windows/ovsext/resource.h	626;"	d
VK_ADD	datapath-windows/ovsext/resource.h	802;"	d
VK_APPS	datapath-windows/ovsext/resource.h	774;"	d
VK_ATTN	datapath-windows/ovsext/resource.h	1011;"	d
VK_BACK	datapath-windows/ovsext/resource.h	445;"	d
VK_BROWSER_BACK	datapath-windows/ovsext/resource.h	910;"	d
VK_BROWSER_FAVORITES	datapath-windows/ovsext/resource.h	919;"	d
VK_BROWSER_FORWARD	datapath-windows/ovsext/resource.h	912;"	d
VK_BROWSER_HOME	datapath-windows/ovsext/resource.h	921;"	d
VK_BROWSER_REFRESH	datapath-windows/ovsext/resource.h	914;"	d
VK_BROWSER_SEARCH	datapath-windows/ovsext/resource.h	918;"	d
VK_BROWSER_STOP	datapath-windows/ovsext/resource.h	916;"	d
VK_CANCEL	datapath-windows/ovsext/resource.h	320;"	d
VK_CAPITAL	datapath-windows/ovsext/resource.h	589;"	d
VK_CLEAR	datapath-windows/ovsext/resource.h	511;"	d
VK_CONTROL	datapath-windows/ovsext/resource.h	569;"	d
VK_CONVERT	datapath-windows/ovsext/resource.h	620;"	d
VK_CRSEL	datapath-windows/ovsext/resource.h	1013;"	d
VK_DECIMAL	datapath-windows/ovsext/resource.h	808;"	d
VK_DELETE	datapath-windows/ovsext/resource.h	689;"	d
VK_DIVIDE	datapath-windows/ovsext/resource.h	810;"	d
VK_DOWN	datapath-windows/ovsext/resource.h	670;"	d
VK_END	datapath-windows/ovsext/resource.h	656;"	d
VK_EREOF	datapath-windows/ovsext/resource.h	1017;"	d
VK_ESCAPE	datapath-windows/ovsext/resource.h	617;"	d
VK_EXECUTE	datapath-windows/ovsext/resource.h	679;"	d
VK_EXSEL	datapath-windows/ovsext/resource.h	1015;"	d
VK_F1	datapath-windows/ovsext/resource.h	812;"	d
VK_F10	datapath-windows/ovsext/resource.h	827;"	d
VK_F11	datapath-windows/ovsext/resource.h	828;"	d
VK_F12	datapath-windows/ovsext/resource.h	830;"	d
VK_F13	datapath-windows/ovsext/resource.h	832;"	d
VK_F14	datapath-windows/ovsext/resource.h	835;"	d
VK_F15	datapath-windows/ovsext/resource.h	837;"	d
VK_F16	datapath-windows/ovsext/resource.h	840;"	d
VK_F17	datapath-windows/ovsext/resource.h	843;"	d
VK_F18	datapath-windows/ovsext/resource.h	859;"	d
VK_F19	datapath-windows/ovsext/resource.h	863;"	d
VK_F2	datapath-windows/ovsext/resource.h	814;"	d
VK_F20	datapath-windows/ovsext/resource.h	867;"	d
VK_F21	datapath-windows/ovsext/resource.h	871;"	d
VK_F22	datapath-windows/ovsext/resource.h	874;"	d
VK_F23	datapath-windows/ovsext/resource.h	878;"	d
VK_F24	datapath-windows/ovsext/resource.h	881;"	d
VK_F3	datapath-windows/ovsext/resource.h	815;"	d
VK_F4	datapath-windows/ovsext/resource.h	816;"	d
VK_F5	datapath-windows/ovsext/resource.h	819;"	d
VK_F6	datapath-windows/ovsext/resource.h	820;"	d
VK_F7	datapath-windows/ovsext/resource.h	822;"	d
VK_F8	datapath-windows/ovsext/resource.h	823;"	d
VK_F9	datapath-windows/ovsext/resource.h	824;"	d
VK_FINAL	datapath-windows/ovsext/resource.h	607;"	d
VK_HANGEUL	datapath-windows/ovsext/resource.h	596;"	d
VK_HANGUL	datapath-windows/ovsext/resource.h	597;"	d
VK_HANJA	datapath-windows/ovsext/resource.h	610;"	d
VK_HELP	datapath-windows/ovsext/resource.h	693;"	d
VK_HOME	datapath-windows/ovsext/resource.h	659;"	d
VK_ICO_00	datapath-windows/ovsext/resource.h	988;"	d
VK_ICO_CLEAR	datapath-windows/ovsext/resource.h	990;"	d
VK_ICO_HELP	datapath-windows/ovsext/resource.h	987;"	d
VK_INSERT	datapath-windows/ovsext/resource.h	686;"	d
VK_JUNJA	datapath-windows/ovsext/resource.h	604;"	d
VK_KANA	datapath-windows/ovsext/resource.h	595;"	d
VK_KANJI	datapath-windows/ovsext/resource.h	611;"	d
VK_LAUNCH_APP1	datapath-windows/ovsext/resource.h	939;"	d
VK_LAUNCH_APP2	datapath-windows/ovsext/resource.h	941;"	d
VK_LAUNCH_MAIL	datapath-windows/ovsext/resource.h	935;"	d
VK_LAUNCH_MEDIA_SELECT	datapath-windows/ovsext/resource.h	937;"	d
VK_LBUTTON	datapath-windows/ovsext/resource.h	48;"	d
VK_LCONTROL	datapath-windows/ovsext/resource.h	902;"	d
VK_LEFT	datapath-windows/ovsext/resource.h	662;"	d
VK_LMENU	datapath-windows/ovsext/resource.h	906;"	d
VK_LSHIFT	datapath-windows/ovsext/resource.h	898;"	d
VK_LWIN	datapath-windows/ovsext/resource.h	770;"	d
VK_MBUTTON	datapath-windows/ovsext/resource.h	352;"	d
VK_MEDIA_NEXT_TRACK	datapath-windows/ovsext/resource.h	927;"	d
VK_MEDIA_PLAY_PAUSE	datapath-windows/ovsext/resource.h	933;"	d
VK_MEDIA_PREV_TRACK	datapath-windows/ovsext/resource.h	929;"	d
VK_MEDIA_STOP	datapath-windows/ovsext/resource.h	931;"	d
VK_MENU	datapath-windows/ovsext/resource.h	577;"	d
VK_MODECHANGE	datapath-windows/ovsext/resource.h	629;"	d
VK_MULTIPLY	datapath-windows/ovsext/resource.h	800;"	d
VK_NEXT	datapath-windows/ovsext/resource.h	653;"	d
VK_NONAME	datapath-windows/ovsext/resource.h	1020;"	d
VK_NONCONVERT	datapath-windows/ovsext/resource.h	623;"	d
VK_NUMLOCK	datapath-windows/ovsext/resource.h	888;"	d
VK_NUMPAD0	datapath-windows/ovsext/resource.h	779;"	d
VK_NUMPAD1	datapath-windows/ovsext/resource.h	781;"	d
VK_NUMPAD2	datapath-windows/ovsext/resource.h	783;"	d
VK_NUMPAD3	datapath-windows/ovsext/resource.h	785;"	d
VK_NUMPAD4	datapath-windows/ovsext/resource.h	788;"	d
VK_NUMPAD5	datapath-windows/ovsext/resource.h	791;"	d
VK_NUMPAD6	datapath-windows/ovsext/resource.h	793;"	d
VK_NUMPAD7	datapath-windows/ovsext/resource.h	794;"	d
VK_NUMPAD8	datapath-windows/ovsext/resource.h	797;"	d
VK_NUMPAD9	datapath-windows/ovsext/resource.h	799;"	d
VK_OEM_1	datapath-windows/ovsext/resource.h	945;"	d
VK_OEM_102	datapath-windows/ovsext/resource.h	986;"	d
VK_OEM_2	datapath-windows/ovsext/resource.h	955;"	d
VK_OEM_3	datapath-windows/ovsext/resource.h	956;"	d
VK_OEM_4	datapath-windows/ovsext/resource.h	980;"	d
VK_OEM_5	datapath-windows/ovsext/resource.h	981;"	d
VK_OEM_6	datapath-windows/ovsext/resource.h	982;"	d
VK_OEM_7	datapath-windows/ovsext/resource.h	983;"	d
VK_OEM_8	datapath-windows/ovsext/resource.h	984;"	d
VK_OEM_ATTN	datapath-windows/ovsext/resource.h	999;"	d
VK_OEM_AUTO	datapath-windows/ovsext/resource.h	1005;"	d
VK_OEM_AX	datapath-windows/ovsext/resource.h	985;"	d
VK_OEM_BACKTAB	datapath-windows/ovsext/resource.h	1009;"	d
VK_OEM_CLEAR	datapath-windows/ovsext/resource.h	1022;"	d
VK_OEM_COMMA	datapath-windows/ovsext/resource.h	949;"	d
VK_OEM_COPY	datapath-windows/ovsext/resource.h	1003;"	d
VK_OEM_CUSEL	datapath-windows/ovsext/resource.h	998;"	d
VK_OEM_ENLW	datapath-windows/ovsext/resource.h	1007;"	d
VK_OEM_FINISH	datapath-windows/ovsext/resource.h	1001;"	d
VK_OEM_FJ_JISHO	datapath-windows/ovsext/resource.h	892;"	d
VK_OEM_FJ_LOYA	datapath-windows/ovsext/resource.h	896;"	d
VK_OEM_FJ_MASSHOU	datapath-windows/ovsext/resource.h	894;"	d
VK_OEM_FJ_ROYA	datapath-windows/ovsext/resource.h	897;"	d
VK_OEM_FJ_TOUROKU	datapath-windows/ovsext/resource.h	895;"	d
VK_OEM_JUMP	datapath-windows/ovsext/resource.h	993;"	d
VK_OEM_MINUS	datapath-windows/ovsext/resource.h	951;"	d
VK_OEM_NEC_EQUAL	datapath-windows/ovsext/resource.h	891;"	d
VK_OEM_PA1	datapath-windows/ovsext/resource.h	994;"	d
VK_OEM_PA2	datapath-windows/ovsext/resource.h	995;"	d
VK_OEM_PA3	datapath-windows/ovsext/resource.h	996;"	d
VK_OEM_PERIOD	datapath-windows/ovsext/resource.h	953;"	d
VK_OEM_PLUS	datapath-windows/ovsext/resource.h	947;"	d
VK_OEM_RESET	datapath-windows/ovsext/resource.h	992;"	d
VK_OEM_WSCTRL	datapath-windows/ovsext/resource.h	997;"	d
VK_PA1	datapath-windows/ovsext/resource.h	1021;"	d
VK_PACKET	datapath-windows/ovsext/resource.h	991;"	d
VK_PAUSE	datapath-windows/ovsext/resource.h	584;"	d
VK_PLAY	datapath-windows/ovsext/resource.h	1018;"	d
VK_PRINT	datapath-windows/ovsext/resource.h	676;"	d
VK_PRIOR	datapath-windows/ovsext/resource.h	650;"	d
VK_PROCESSKEY	datapath-windows/ovsext/resource.h	989;"	d
VK_RBUTTON	datapath-windows/ovsext/resource.h	230;"	d
VK_RCONTROL	datapath-windows/ovsext/resource.h	904;"	d
VK_RETURN	datapath-windows/ovsext/resource.h	522;"	d
VK_RIGHT	datapath-windows/ovsext/resource.h	667;"	d
VK_RMENU	datapath-windows/ovsext/resource.h	908;"	d
VK_RSHIFT	datapath-windows/ovsext/resource.h	900;"	d
VK_RWIN	datapath-windows/ovsext/resource.h	772;"	d
VK_SCROLL	datapath-windows/ovsext/resource.h	889;"	d
VK_SELECT	datapath-windows/ovsext/resource.h	673;"	d
VK_SEPARATOR	datapath-windows/ovsext/resource.h	804;"	d
VK_SHIFT	datapath-windows/ovsext/resource.h	544;"	d
VK_SLEEP	datapath-windows/ovsext/resource.h	777;"	d
VK_SNAPSHOT	datapath-windows/ovsext/resource.h	682;"	d
VK_SPACE	datapath-windows/ovsext/resource.h	632;"	d
VK_SUBTRACT	datapath-windows/ovsext/resource.h	806;"	d
VK_TAB	datapath-windows/ovsext/resource.h	477;"	d
VK_UP	datapath-windows/ovsext/resource.h	664;"	d
VK_VOLUME_DOWN	datapath-windows/ovsext/resource.h	925;"	d
VK_VOLUME_MUTE	datapath-windows/ovsext/resource.h	923;"	d
VK_VOLUME_UP	datapath-windows/ovsext/resource.h	926;"	d
VK_XBUTTON1	datapath-windows/ovsext/resource.h	398;"	d
VK_XBUTTON2	datapath-windows/ovsext/resource.h	416;"	d
VK_ZOOM	datapath-windows/ovsext/resource.h	1019;"	d
VLANDEV_H	lib/vlandev.h	18;"	d
VLAN_BITMAP_H	lib/vlan-bitmap.h	17;"	d
VLAN_CFI	lib/packets.h	420;"	d
VLAN_CFI_MASK	datapath/linux/compat/include/linux/if_vlan.h	108;"	d
VLAN_CFI_SHIFT	lib/packets.h	421;"	d
VLAN_ETH_HEADER_LEN	lib/packets.h	454;"	d
VLAN_H	datapath/vlan.h	20;"	d
VLAN_HEADER_LEN	lib/packets.h	447;"	d
VLAN_PCP_MASK	lib/packets.h	417;"	d
VLAN_PCP_SHIFT	lib/packets.h	418;"	d
VLAN_PRIO_MASK	datapath/linux/compat/include/linux/if_vlan.h	106;"	d
VLAN_PRIO_SHIFT	datapath/linux/compat/include/linux/if_vlan.h	107;"	d
VLAN_TAG_PRESENT	datapath/linux/compat/include/linux/if_vlan.h	109;"	d
VLAN_TAG_SIZE	datapath-windows/ovsext/User.c	947;"	d	file:
VLAN_VID_MASK	lib/packets.h	414;"	d
VLAN_VID_SHIFT	lib/packets.h	415;"	d
VLF_ANY_DESTINATION	include/openvswitch/vlog.h	/^    VLF_ANY_DESTINATION = -1$/;"	e	enum:vlog_destination
VLF_N_DESTINATIONS	include/openvswitch/vlog.h	/^    VLF_N_DESTINATIONS,$/;"	e	enum:vlog_destination
VLL_N_LEVELS	include/openvswitch/vlog.h	/^    VLL_N_LEVELS$/;"	e	enum:vlog_level
VLOG	include/openvswitch/vlog.h	262;"	d
VLOG_ABORT	include/openvswitch/vlog.h	194;"	d
VLOG_DBG	include/openvswitch/vlog.h	199;"	d
VLOG_DBG_ONCE	include/openvswitch/vlog.h	231;"	d
VLOG_DBG_RL	include/openvswitch/vlog.h	215;"	d
VLOG_DEFINE_MODULE	include/openvswitch/vlog.h	95;"	d
VLOG_DEFINE_MODULE__	include/openvswitch/vlog.h	292;"	d
VLOG_DEFINE_THIS_MODULE	include/openvswitch/vlog.h	183;"	d
VLOG_DESTINATION	include/openvswitch/vlog.h	69;"	d
VLOG_DESTINATION	include/openvswitch/vlog.h	71;"	d
VLOG_DESTINATION	lib/vlog.c	95;"	d	file:
VLOG_DESTINATION	lib/vlog.c	97;"	d	file:
VLOG_DESTINATIONS	include/openvswitch/vlog.h	/^    VLOG_DESTINATIONS$/;"	e	enum:vlog_destination
VLOG_DESTINATIONS	include/openvswitch/vlog.h	64;"	d
VLOG_DROP_DBG	include/openvswitch/vlog.h	225;"	d
VLOG_DROP_ERR	include/openvswitch/vlog.h	222;"	d
VLOG_DROP_INFO	include/openvswitch/vlog.h	224;"	d
VLOG_DROP_WARN	include/openvswitch/vlog.h	223;"	d
VLOG_EMER	include/openvswitch/vlog.h	195;"	d
VLOG_ERR	include/openvswitch/vlog.h	196;"	d
VLOG_ERRP	include/openvswitch/vlog.h	284;"	d
VLOG_ERR_BUF	include/openvswitch/vlog.h	219;"	d
VLOG_ERR_ONCE	include/openvswitch/vlog.h	228;"	d
VLOG_ERR_RL	include/openvswitch/vlog.h	212;"	d
VLOG_FATAL	include/openvswitch/vlog.h	193;"	d
VLOG_INFO	include/openvswitch/vlog.h	198;"	d
VLOG_INFO_ONCE	include/openvswitch/vlog.h	230;"	d
VLOG_INFO_RL	include/openvswitch/vlog.h	214;"	d
VLOG_IS_DBG_ENABLED	include/openvswitch/vlog.h	207;"	d
VLOG_IS_ERR_ENABLED	include/openvswitch/vlog.h	204;"	d
VLOG_IS_INFO_ENABLED	include/openvswitch/vlog.h	206;"	d
VLOG_IS_WARN_ENABLED	include/openvswitch/vlog.h	205;"	d
VLOG_LEVEL	include/openvswitch/vlog.h	54;"	d
VLOG_LEVEL	include/openvswitch/vlog.h	56;"	d
VLOG_LEVEL	lib/vlog.c	56;"	d	file:
VLOG_LEVEL	lib/vlog.c	58;"	d	file:
VLOG_LEVEL	lib/vlog.c	63;"	d	file:
VLOG_LEVEL	lib/vlog.c	65;"	d	file:
VLOG_LEVEL	lib/vlog.c	71;"	d	file:
VLOG_LEVELS	include/openvswitch/vlog.h	/^    VLOG_LEVELS$/;"	e	enum:vlog_level
VLOG_LEVELS	include/openvswitch/vlog.h	46;"	d
VLOG_LEVELS	lib/vlog.c	74;"	d	file:
VLOG_LONG_OPTIONS	include/openvswitch/vlog.h	239;"	d
VLOG_MSG_TOKENS	include/openvswitch/vlog.h	115;"	d
VLOG_ONCE	include/openvswitch/vlog.h	276;"	d
VLOG_OPTION_ENUMS	include/openvswitch/vlog.h	234;"	d
VLOG_OPTION_HANDLERS	include/openvswitch/vlog.h	245;"	d
VLOG_RATE_LIMIT_INIT	include/openvswitch/vlog.h	119;"	d
VLOG_RL	include/openvswitch/vlog.h	269;"	d
VLOG_WARN	include/openvswitch/vlog.h	197;"	d
VLOG_WARN_BUF	include/openvswitch/vlog.h	220;"	d
VLOG_WARN_ONCE	include/openvswitch/vlog.h	229;"	d
VLOG_WARN_RL	include/openvswitch/vlog.h	213;"	d
VM	tests/MockXenAPI.py	/^class VM(Table):$/;"	c
VPORT_ALIGN	datapath/vport.h	194;"	d
VPORT_E_RX_DROPPED	datapath/vport.h	/^	VPORT_E_RX_DROPPED,$/;"	e	enum:vport_err_type
VPORT_E_RX_ERROR	datapath/vport.h	/^	VPORT_E_RX_ERROR,$/;"	e	enum:vport_err_type
VPORT_E_TX_DROPPED	datapath/vport.h	/^	VPORT_E_TX_DROPPED,$/;"	e	enum:vport_err_type
VPORT_E_TX_ERROR	datapath/vport.h	/^	VPORT_E_TX_ERROR,$/;"	e	enum:vport_err_type
VPORT_FUNCTIONS	lib/netdev-vport.c	1360;"	d	file:
VPORT_H	datapath/vport.h	20;"	d
VPORT_HASH_BUCKETS	datapath/linux/vport.c	47;"	d	file:
VPORT_HASH_BUCKETS	datapath/vport.c	47;"	d	file:
VPORT_INTERNAL_DEV_H	datapath/vport-internal_dev.h	20;"	d
VPORT_NETDEV_H	datapath/vport-netdev.h	20;"	d
VPORT_NIC_ENTER	datapath-windows/ovsext/Vport.c	35;"	d	file:
VPORT_NIC_EXIT	datapath-windows/ovsext/Vport.c	39;"	d	file:
VPORT_PORT_ENTER	datapath-windows/ovsext/Vport.c	43;"	d	file:
VPORT_PORT_EXIT	datapath-windows/ovsext/Vport.c	46;"	d	file:
VPORT_SOCK_POOL_SIZE	lib/dpif-netlink.c	149;"	d	file:
VPORT_VXLAN_H	datapath/vport-vxlan.h	2;"	d
VSTUDIO_CONFIG	Makefile	/^VSTUDIO_CONFIG = $/;"	m
VSTUDIO_CONFIG	datapath/Makefile	/^VSTUDIO_CONFIG = $/;"	m
VSTUDIO_DDK	config.h	241;"	d
VSWITCHD_BRIDGE_H	vswitchd/bridge.h	17;"	d
VSWITCHD_SYSTEM_STATS	vswitchd/system-stats.h	17;"	d
VSWITCHD_XENSERVER_H	vswitchd/xenserver.h	17;"	d
VSWITCH_DOT_DIAGRAM_ARG	Makefile	/^VSWITCH_DOT_DIAGRAM_ARG = --er-diagram=$(VSWITCH_PIC)$/;"	m
VSWITCH_DOT_DIAGRAM_ARG	vswitchd/automake.mk	/^VSWITCH_DOT_DIAGRAM_ARG = --er-diagram=$(VSWITCH_PIC)$/;"	m
VSWITCH_PIC	Makefile	/^VSWITCH_PIC = vswitchd\/vswitch.pic$/;"	m
VSWITCH_PIC	vswitchd/automake.mk	/^VSWITCH_PIC = vswitchd\/vswitch.pic$/;"	m
VS_USER_DEFINED	datapath-windows/ovsext/resource.h	790;"	d
VS_VERSION_INFO	datapath-windows/ovsext/resource.h	221;"	d
VSwitchConfig	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^class VSwitchConfig:$/;"	c
VSwitchControllerDialogue	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^class VSwitchControllerDialogue(Dialogue):$/;"	c
VSwitchService	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^class VSwitchService:$/;"	c
VTEPREC_ACL_COL_ACL_ENTRIES	vtep/vtep-idl.h	/^    VTEPREC_ACL_COL_ACL_ENTRIES,$/;"	e	enum:__anon239
VTEPREC_ACL_COL_ACL_FAULT_STATUS	vtep/vtep-idl.h	/^    VTEPREC_ACL_COL_ACL_FAULT_STATUS,$/;"	e	enum:__anon239
VTEPREC_ACL_COL_ACL_NAME	vtep/vtep-idl.h	/^    VTEPREC_ACL_COL_ACL_NAME,$/;"	e	enum:__anon239
VTEPREC_ACL_ENTRY_COL_ACLE_FAULT_STATUS	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_ACLE_FAULT_STATUS,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_ACTION	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_ACTION,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_DEST_IP	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_DEST_IP,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_DEST_MAC	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_DEST_MAC,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_DEST_MASK	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_DEST_MASK,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_DEST_PORT_MAX	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_DEST_PORT_MAX,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_DEST_PORT_MIN	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_DEST_PORT_MIN,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_DIRECTION	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_DIRECTION,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_ETHERTYPE	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_ETHERTYPE,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_ICMP_CODE	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_ICMP_CODE,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_ICMP_TYPE	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_ICMP_TYPE,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_PROTOCOL	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_PROTOCOL,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_SEQUENCE	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_SEQUENCE,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_SOURCE_IP	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_SOURCE_IP,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_SOURCE_MAC	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_SOURCE_MAC,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_SOURCE_MASK	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_SOURCE_MASK,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_SOURCE_PORT_MAX	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_SOURCE_PORT_MAX,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_SOURCE_PORT_MIN	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_SOURCE_PORT_MIN,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_TCP_FLAGS	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_TCP_FLAGS,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_COL_TCP_FLAGS_MASK	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_COL_TCP_FLAGS_MASK,$/;"	e	enum:__anon240
VTEPREC_ACL_ENTRY_FOR_EACH	vtep/vtep-idl.h	197;"	d
VTEPREC_ACL_ENTRY_FOR_EACH_SAFE	vtep/vtep-idl.h	201;"	d
VTEPREC_ACL_ENTRY_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_ACL_ENTRY_N_COLUMNS$/;"	e	enum:__anon240
VTEPREC_ACL_FOR_EACH	vtep/vtep-idl.h	46;"	d
VTEPREC_ACL_FOR_EACH_SAFE	vtep/vtep-idl.h	50;"	d
VTEPREC_ACL_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_ACL_N_COLUMNS$/;"	e	enum:__anon239
VTEPREC_ARP_SOURCES_LOCAL_COL_LOCATOR	vtep/vtep-idl.h	/^    VTEPREC_ARP_SOURCES_LOCAL_COL_LOCATOR,$/;"	e	enum:__anon241
VTEPREC_ARP_SOURCES_LOCAL_COL_SRC_MAC	vtep/vtep-idl.h	/^    VTEPREC_ARP_SOURCES_LOCAL_COL_SRC_MAC,$/;"	e	enum:__anon241
VTEPREC_ARP_SOURCES_LOCAL_FOR_EACH	vtep/vtep-idl.h	299;"	d
VTEPREC_ARP_SOURCES_LOCAL_FOR_EACH_SAFE	vtep/vtep-idl.h	303;"	d
VTEPREC_ARP_SOURCES_LOCAL_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_ARP_SOURCES_LOCAL_N_COLUMNS$/;"	e	enum:__anon241
VTEPREC_ARP_SOURCES_REMOTE_COL_LOCATOR	vtep/vtep-idl.h	/^    VTEPREC_ARP_SOURCES_REMOTE_COL_LOCATOR,$/;"	e	enum:__anon242
VTEPREC_ARP_SOURCES_REMOTE_COL_SRC_MAC	vtep/vtep-idl.h	/^    VTEPREC_ARP_SOURCES_REMOTE_COL_SRC_MAC,$/;"	e	enum:__anon242
VTEPREC_ARP_SOURCES_REMOTE_FOR_EACH	vtep/vtep-idl.h	347;"	d
VTEPREC_ARP_SOURCES_REMOTE_FOR_EACH_SAFE	vtep/vtep-idl.h	351;"	d
VTEPREC_ARP_SOURCES_REMOTE_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_ARP_SOURCES_REMOTE_N_COLUMNS$/;"	e	enum:__anon242
VTEPREC_GLOBAL_COL_MANAGERS	vtep/vtep-idl.h	/^    VTEPREC_GLOBAL_COL_MANAGERS,$/;"	e	enum:__anon243
VTEPREC_GLOBAL_COL_SWITCHES	vtep/vtep-idl.h	/^    VTEPREC_GLOBAL_COL_SWITCHES,$/;"	e	enum:__anon243
VTEPREC_GLOBAL_FOR_EACH	vtep/vtep-idl.h	397;"	d
VTEPREC_GLOBAL_FOR_EACH_SAFE	vtep/vtep-idl.h	401;"	d
VTEPREC_GLOBAL_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_GLOBAL_N_COLUMNS$/;"	e	enum:__anon243
VTEPREC_IDL_HEADER	vtep/vtep-idl.h	4;"	d
VTEPREC_LOGICAL_BINDING_STATS_COL_BYTES_FROM_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_BINDING_STATS_COL_BYTES_FROM_LOCAL,$/;"	e	enum:__anon244
VTEPREC_LOGICAL_BINDING_STATS_COL_BYTES_TO_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_BINDING_STATS_COL_BYTES_TO_LOCAL,$/;"	e	enum:__anon244
VTEPREC_LOGICAL_BINDING_STATS_COL_PACKETS_FROM_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_BINDING_STATS_COL_PACKETS_FROM_LOCAL,$/;"	e	enum:__anon244
VTEPREC_LOGICAL_BINDING_STATS_COL_PACKETS_TO_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_BINDING_STATS_COL_PACKETS_TO_LOCAL,$/;"	e	enum:__anon244
VTEPREC_LOGICAL_BINDING_STATS_FOR_EACH	vtep/vtep-idl.h	455;"	d
VTEPREC_LOGICAL_BINDING_STATS_FOR_EACH_SAFE	vtep/vtep-idl.h	459;"	d
VTEPREC_LOGICAL_BINDING_STATS_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_BINDING_STATS_N_COLUMNS$/;"	e	enum:__anon244
VTEPREC_LOGICAL_ROUTER_COL_ACL_BINDING	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_ROUTER_COL_ACL_BINDING,$/;"	e	enum:__anon245
VTEPREC_LOGICAL_ROUTER_COL_DESCRIPTION	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_ROUTER_COL_DESCRIPTION,$/;"	e	enum:__anon245
VTEPREC_LOGICAL_ROUTER_COL_LR_FAULT_STATUS	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_ROUTER_COL_LR_FAULT_STATUS,$/;"	e	enum:__anon245
VTEPREC_LOGICAL_ROUTER_COL_NAME	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_ROUTER_COL_NAME,$/;"	e	enum:__anon245
VTEPREC_LOGICAL_ROUTER_COL_STATIC_ROUTES	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_ROUTER_COL_STATIC_ROUTES,$/;"	e	enum:__anon245
VTEPREC_LOGICAL_ROUTER_COL_SWITCH_BINDING	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_ROUTER_COL_SWITCH_BINDING,$/;"	e	enum:__anon245
VTEPREC_LOGICAL_ROUTER_FOR_EACH	vtep/vtep-idl.h	534;"	d
VTEPREC_LOGICAL_ROUTER_FOR_EACH_SAFE	vtep/vtep-idl.h	538;"	d
VTEPREC_LOGICAL_ROUTER_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_ROUTER_N_COLUMNS$/;"	e	enum:__anon245
VTEPREC_LOGICAL_SWITCH_COL_DESCRIPTION	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_SWITCH_COL_DESCRIPTION,$/;"	e	enum:__anon246
VTEPREC_LOGICAL_SWITCH_COL_NAME	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_SWITCH_COL_NAME,$/;"	e	enum:__anon246
VTEPREC_LOGICAL_SWITCH_COL_TUNNEL_KEY	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_SWITCH_COL_TUNNEL_KEY,$/;"	e	enum:__anon246
VTEPREC_LOGICAL_SWITCH_FOR_EACH	vtep/vtep-idl.h	600;"	d
VTEPREC_LOGICAL_SWITCH_FOR_EACH_SAFE	vtep/vtep-idl.h	604;"	d
VTEPREC_LOGICAL_SWITCH_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_LOGICAL_SWITCH_N_COLUMNS$/;"	e	enum:__anon246
VTEPREC_MANAGER_COL_INACTIVITY_PROBE	vtep/vtep-idl.h	/^    VTEPREC_MANAGER_COL_INACTIVITY_PROBE,$/;"	e	enum:__anon247
VTEPREC_MANAGER_COL_IS_CONNECTED	vtep/vtep-idl.h	/^    VTEPREC_MANAGER_COL_IS_CONNECTED,$/;"	e	enum:__anon247
VTEPREC_MANAGER_COL_MAX_BACKOFF	vtep/vtep-idl.h	/^    VTEPREC_MANAGER_COL_MAX_BACKOFF,$/;"	e	enum:__anon247
VTEPREC_MANAGER_COL_OTHER_CONFIG	vtep/vtep-idl.h	/^    VTEPREC_MANAGER_COL_OTHER_CONFIG,$/;"	e	enum:__anon247
VTEPREC_MANAGER_COL_STATUS	vtep/vtep-idl.h	/^    VTEPREC_MANAGER_COL_STATUS,$/;"	e	enum:__anon247
VTEPREC_MANAGER_COL_TARGET	vtep/vtep-idl.h	/^    VTEPREC_MANAGER_COL_TARGET,$/;"	e	enum:__anon247
VTEPREC_MANAGER_FOR_EACH	vtep/vtep-idl.h	673;"	d
VTEPREC_MANAGER_FOR_EACH_SAFE	vtep/vtep-idl.h	677;"	d
VTEPREC_MANAGER_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_MANAGER_N_COLUMNS$/;"	e	enum:__anon247
VTEPREC_MCAST_MACS_LOCAL_COL_IPADDR	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_LOCAL_COL_IPADDR,$/;"	e	enum:__anon248
VTEPREC_MCAST_MACS_LOCAL_COL_LOCATOR_SET	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_LOCAL_COL_LOCATOR_SET,$/;"	e	enum:__anon248
VTEPREC_MCAST_MACS_LOCAL_COL_LOGICAL_SWITCH	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_LOCAL_COL_LOGICAL_SWITCH,$/;"	e	enum:__anon248
VTEPREC_MCAST_MACS_LOCAL_COL_MAC	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_LOCAL_COL_MAC,$/;"	e	enum:__anon248
VTEPREC_MCAST_MACS_LOCAL_FOR_EACH	vtep/vtep-idl.h	743;"	d
VTEPREC_MCAST_MACS_LOCAL_FOR_EACH_SAFE	vtep/vtep-idl.h	747;"	d
VTEPREC_MCAST_MACS_LOCAL_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_LOCAL_N_COLUMNS$/;"	e	enum:__anon248
VTEPREC_MCAST_MACS_REMOTE_COL_IPADDR	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_REMOTE_COL_IPADDR,$/;"	e	enum:__anon249
VTEPREC_MCAST_MACS_REMOTE_COL_LOCATOR_SET	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_REMOTE_COL_LOCATOR_SET,$/;"	e	enum:__anon249
VTEPREC_MCAST_MACS_REMOTE_COL_LOGICAL_SWITCH	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_REMOTE_COL_LOGICAL_SWITCH,$/;"	e	enum:__anon249
VTEPREC_MCAST_MACS_REMOTE_COL_MAC	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_REMOTE_COL_MAC,$/;"	e	enum:__anon249
VTEPREC_MCAST_MACS_REMOTE_FOR_EACH	vtep/vtep-idl.h	807;"	d
VTEPREC_MCAST_MACS_REMOTE_FOR_EACH_SAFE	vtep/vtep-idl.h	811;"	d
VTEPREC_MCAST_MACS_REMOTE_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_MCAST_MACS_REMOTE_N_COLUMNS$/;"	e	enum:__anon249
VTEPREC_N_TABLES	vtep/vtep-idl.h	/^    VTEPREC_N_TABLES$/;"	e	enum:__anon257
VTEPREC_PHYSICAL_LOCATOR_COL_DST_IP	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_LOCATOR_COL_DST_IP,$/;"	e	enum:__anon250
VTEPREC_PHYSICAL_LOCATOR_COL_ENCAPSULATION_TYPE	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_LOCATOR_COL_ENCAPSULATION_TYPE,$/;"	e	enum:__anon250
VTEPREC_PHYSICAL_LOCATOR_FOR_EACH	vtep/vtep-idl.h	861;"	d
VTEPREC_PHYSICAL_LOCATOR_FOR_EACH_SAFE	vtep/vtep-idl.h	865;"	d
VTEPREC_PHYSICAL_LOCATOR_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_LOCATOR_N_COLUMNS$/;"	e	enum:__anon250
VTEPREC_PHYSICAL_LOCATOR_SET_COL_LOCATORS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_LOCATOR_SET_COL_LOCATORS,$/;"	e	enum:__anon251
VTEPREC_PHYSICAL_LOCATOR_SET_FOR_EACH	vtep/vtep-idl.h	905;"	d
VTEPREC_PHYSICAL_LOCATOR_SET_FOR_EACH_SAFE	vtep/vtep-idl.h	909;"	d
VTEPREC_PHYSICAL_LOCATOR_SET_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_LOCATOR_SET_N_COLUMNS$/;"	e	enum:__anon251
VTEPREC_PHYSICAL_PORT_COL_ACL_BINDINGS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_PORT_COL_ACL_BINDINGS,$/;"	e	enum:__anon252
VTEPREC_PHYSICAL_PORT_COL_DESCRIPTION	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_PORT_COL_DESCRIPTION,$/;"	e	enum:__anon252
VTEPREC_PHYSICAL_PORT_COL_NAME	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_PORT_COL_NAME,$/;"	e	enum:__anon252
VTEPREC_PHYSICAL_PORT_COL_PORT_FAULT_STATUS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_PORT_COL_PORT_FAULT_STATUS,$/;"	e	enum:__anon252
VTEPREC_PHYSICAL_PORT_COL_VLAN_BINDINGS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_PORT_COL_VLAN_BINDINGS,$/;"	e	enum:__anon252
VTEPREC_PHYSICAL_PORT_COL_VLAN_STATS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_PORT_COL_VLAN_STATS,$/;"	e	enum:__anon252
VTEPREC_PHYSICAL_PORT_FOR_EACH	vtep/vtep-idl.h	977;"	d
VTEPREC_PHYSICAL_PORT_FOR_EACH_SAFE	vtep/vtep-idl.h	981;"	d
VTEPREC_PHYSICAL_PORT_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_PORT_N_COLUMNS$/;"	e	enum:__anon252
VTEPREC_PHYSICAL_SWITCH_COL_DESCRIPTION	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_COL_DESCRIPTION,$/;"	e	enum:__anon253
VTEPREC_PHYSICAL_SWITCH_COL_MANAGEMENT_IPS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_COL_MANAGEMENT_IPS,$/;"	e	enum:__anon253
VTEPREC_PHYSICAL_SWITCH_COL_NAME	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_COL_NAME,$/;"	e	enum:__anon253
VTEPREC_PHYSICAL_SWITCH_COL_PORTS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_COL_PORTS,$/;"	e	enum:__anon253
VTEPREC_PHYSICAL_SWITCH_COL_SWITCH_FAULT_STATUS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_COL_SWITCH_FAULT_STATUS,$/;"	e	enum:__anon253
VTEPREC_PHYSICAL_SWITCH_COL_TUNNELS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_COL_TUNNELS,$/;"	e	enum:__anon253
VTEPREC_PHYSICAL_SWITCH_COL_TUNNEL_IPS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_COL_TUNNEL_IPS,$/;"	e	enum:__anon253
VTEPREC_PHYSICAL_SWITCH_FOR_EACH	vtep/vtep-idl.h	1067;"	d
VTEPREC_PHYSICAL_SWITCH_FOR_EACH_SAFE	vtep/vtep-idl.h	1071;"	d
VTEPREC_PHYSICAL_SWITCH_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_PHYSICAL_SWITCH_N_COLUMNS$/;"	e	enum:__anon253
VTEPREC_TABLE_ACL	vtep/vtep-idl.h	/^    VTEPREC_TABLE_ACL,$/;"	e	enum:__anon257
VTEPREC_TABLE_ACL_ENTRY	vtep/vtep-idl.h	/^    VTEPREC_TABLE_ACL_ENTRY,$/;"	e	enum:__anon257
VTEPREC_TABLE_ARP_SOURCES_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_TABLE_ARP_SOURCES_LOCAL,$/;"	e	enum:__anon257
VTEPREC_TABLE_ARP_SOURCES_REMOTE	vtep/vtep-idl.h	/^    VTEPREC_TABLE_ARP_SOURCES_REMOTE,$/;"	e	enum:__anon257
VTEPREC_TABLE_GLOBAL	vtep/vtep-idl.h	/^    VTEPREC_TABLE_GLOBAL,$/;"	e	enum:__anon257
VTEPREC_TABLE_LOGICAL_BINDING_STATS	vtep/vtep-idl.h	/^    VTEPREC_TABLE_LOGICAL_BINDING_STATS,$/;"	e	enum:__anon257
VTEPREC_TABLE_LOGICAL_ROUTER	vtep/vtep-idl.h	/^    VTEPREC_TABLE_LOGICAL_ROUTER,$/;"	e	enum:__anon257
VTEPREC_TABLE_LOGICAL_SWITCH	vtep/vtep-idl.h	/^    VTEPREC_TABLE_LOGICAL_SWITCH,$/;"	e	enum:__anon257
VTEPREC_TABLE_MANAGER	vtep/vtep-idl.h	/^    VTEPREC_TABLE_MANAGER,$/;"	e	enum:__anon257
VTEPREC_TABLE_MCAST_MACS_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_TABLE_MCAST_MACS_LOCAL,$/;"	e	enum:__anon257
VTEPREC_TABLE_MCAST_MACS_REMOTE	vtep/vtep-idl.h	/^    VTEPREC_TABLE_MCAST_MACS_REMOTE,$/;"	e	enum:__anon257
VTEPREC_TABLE_PHYSICAL_LOCATOR	vtep/vtep-idl.h	/^    VTEPREC_TABLE_PHYSICAL_LOCATOR,$/;"	e	enum:__anon257
VTEPREC_TABLE_PHYSICAL_LOCATOR_SET	vtep/vtep-idl.h	/^    VTEPREC_TABLE_PHYSICAL_LOCATOR_SET,$/;"	e	enum:__anon257
VTEPREC_TABLE_PHYSICAL_PORT	vtep/vtep-idl.h	/^    VTEPREC_TABLE_PHYSICAL_PORT,$/;"	e	enum:__anon257
VTEPREC_TABLE_PHYSICAL_SWITCH	vtep/vtep-idl.h	/^    VTEPREC_TABLE_PHYSICAL_SWITCH,$/;"	e	enum:__anon257
VTEPREC_TABLE_TUNNEL	vtep/vtep-idl.h	/^    VTEPREC_TABLE_TUNNEL,$/;"	e	enum:__anon257
VTEPREC_TABLE_UCAST_MACS_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_TABLE_UCAST_MACS_LOCAL,$/;"	e	enum:__anon257
VTEPREC_TABLE_UCAST_MACS_REMOTE	vtep/vtep-idl.h	/^    VTEPREC_TABLE_UCAST_MACS_REMOTE,$/;"	e	enum:__anon257
VTEPREC_TUNNEL_COL_BFD_CONFIG_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_TUNNEL_COL_BFD_CONFIG_LOCAL,$/;"	e	enum:__anon254
VTEPREC_TUNNEL_COL_BFD_CONFIG_REMOTE	vtep/vtep-idl.h	/^    VTEPREC_TUNNEL_COL_BFD_CONFIG_REMOTE,$/;"	e	enum:__anon254
VTEPREC_TUNNEL_COL_BFD_PARAMS	vtep/vtep-idl.h	/^    VTEPREC_TUNNEL_COL_BFD_PARAMS,$/;"	e	enum:__anon254
VTEPREC_TUNNEL_COL_BFD_STATUS	vtep/vtep-idl.h	/^    VTEPREC_TUNNEL_COL_BFD_STATUS,$/;"	e	enum:__anon254
VTEPREC_TUNNEL_COL_LOCAL	vtep/vtep-idl.h	/^    VTEPREC_TUNNEL_COL_LOCAL,$/;"	e	enum:__anon254
VTEPREC_TUNNEL_COL_REMOTE	vtep/vtep-idl.h	/^    VTEPREC_TUNNEL_COL_REMOTE,$/;"	e	enum:__anon254
VTEPREC_TUNNEL_FOR_EACH	vtep/vtep-idl.h	1150;"	d
VTEPREC_TUNNEL_FOR_EACH_SAFE	vtep/vtep-idl.h	1154;"	d
VTEPREC_TUNNEL_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_TUNNEL_N_COLUMNS$/;"	e	enum:__anon254
VTEPREC_UCAST_MACS_LOCAL_COL_IPADDR	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_LOCAL_COL_IPADDR,$/;"	e	enum:__anon255
VTEPREC_UCAST_MACS_LOCAL_COL_LOCATOR	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_LOCAL_COL_LOCATOR,$/;"	e	enum:__anon255
VTEPREC_UCAST_MACS_LOCAL_COL_LOGICAL_SWITCH	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_LOCAL_COL_LOGICAL_SWITCH,$/;"	e	enum:__anon255
VTEPREC_UCAST_MACS_LOCAL_COL_MAC	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_LOCAL_COL_MAC,$/;"	e	enum:__anon255
VTEPREC_UCAST_MACS_LOCAL_FOR_EACH	vtep/vtep-idl.h	1220;"	d
VTEPREC_UCAST_MACS_LOCAL_FOR_EACH_SAFE	vtep/vtep-idl.h	1224;"	d
VTEPREC_UCAST_MACS_LOCAL_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_LOCAL_N_COLUMNS$/;"	e	enum:__anon255
VTEPREC_UCAST_MACS_REMOTE_COL_IPADDR	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_REMOTE_COL_IPADDR,$/;"	e	enum:__anon256
VTEPREC_UCAST_MACS_REMOTE_COL_LOCATOR	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_REMOTE_COL_LOCATOR,$/;"	e	enum:__anon256
VTEPREC_UCAST_MACS_REMOTE_COL_LOGICAL_SWITCH	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_REMOTE_COL_LOGICAL_SWITCH,$/;"	e	enum:__anon256
VTEPREC_UCAST_MACS_REMOTE_COL_MAC	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_REMOTE_COL_MAC,$/;"	e	enum:__anon256
VTEPREC_UCAST_MACS_REMOTE_FOR_EACH	vtep/vtep-idl.h	1284;"	d
VTEPREC_UCAST_MACS_REMOTE_FOR_EACH_SAFE	vtep/vtep-idl.h	1288;"	d
VTEPREC_UCAST_MACS_REMOTE_N_COLUMNS	vtep/vtep-idl.h	/^    VTEPREC_UCAST_MACS_REMOTE_N_COLUMNS$/;"	e	enum:__anon256
VTEP_DOT_DIAGRAM_ARG	Makefile	/^VTEP_DOT_DIAGRAM_ARG = --er-diagram=$(VTEP_PIC)$/;"	m
VTEP_DOT_DIAGRAM_ARG	vtep/automake.mk	/^VTEP_DOT_DIAGRAM_ARG = --er-diagram=$(VTEP_PIC)$/;"	m
VTEP_ENCAP_TYPE	ovn/controller-vtep/ovn-controller-vtep.h	35;"	d
VTEP_IDL_FILES	Makefile	/^VTEP_IDL_FILES = \\$/;"	m
VTEP_IDL_FILES	vtep/automake.mk	/^VTEP_IDL_FILES = \\$/;"	m
VTEP_PIC	Makefile	/^VTEP_PIC = vtep\/vtep.pic$/;"	m
VTEP_PIC	vtep/automake.mk	/^VTEP_PIC = vtep\/vtep.pic$/;"	m
VXLAN	ovn/controller/ovn-controller.h	/^    VXLAN  = 1 << 0$/;"	e	enum:chassis_tunnel_type
VXLANHdr	datapath-windows/ovsext/Vxlan.h	/^typedef struct VXLANHdr {$/;"	s
VXLANHdr	datapath-windows/ovsext/Vxlan.h	/^} VXLANHdr;$/;"	t	typeref:struct:VXLANHdr
VXLAN_DEFAULT_INSTANCE_ID	datapath-windows/ovsext/Vxlan.c	48;"	d	file:
VXLAN_DEFAULT_TTL	datapath-windows/ovsext/Vxlan.c	46;"	d	file:
VXLAN_DST_PORT	lib/netdev-vport.c	56;"	d	file:
VXLAN_FLAGS	lib/packets.h	951;"	d
VXLAN_F_GBP	datapath/linux/compat/include/net/vxlan.h	79;"	d
VXLAN_F_RCV_FLAGS	datapath/linux/compat/include/net/vxlan.h	87;"	d
VXLAN_F_UDP_CSUM	datapath/linux/compat/include/net/vxlan.h	83;"	d
VXLAN_GBP_DONT_LEARN	datapath/linux/compat/include/net/vxlan.h	75;"	d
VXLAN_GBP_ID_MASK	datapath/linux/compat/include/net/vxlan.h	77;"	d
VXLAN_GBP_POLICY_APPLIED	datapath/linux/compat/include/net/vxlan.h	76;"	d
VXLAN_GBP_USED_BITS	datapath/linux/compat/include/net/vxlan.h	67;"	d
VXLAN_HF_GBP	datapath/linux/compat/include/net/vxlan.h	21;"	d
VXLAN_HF_VNI	datapath/linux/compat/include/net/vxlan.h	19;"	d
VXLAN_HLEN	datapath/linux/compat/include/net/vxlan.h	26;"	d
VXLAN_HLEN	lib/netdev-vport.c	60;"	d	file:
VXLAN_ID_IS_VALID	datapath-windows/ovsext/Vxlan.c	42;"	d	file:
VXLAN_MULTICAST_TTL	datapath-windows/ovsext/Vxlan.c	47;"	d	file:
VXLAN_N_VID	datapath/linux/compat/include/net/vxlan.h	24;"	d
VXLAN_TUNNELID_TO_VNI	datapath-windows/ovsext/Vxlan.c	43;"	d	file:
VXLAN_UDP_PORT	datapath-windows/ovsext/Vxlan.h	86;"	d
VXLAN_UDP_PORT_NBO	datapath-windows/ovsext/Vxlan.h	87;"	d
VXLAN_VID_MASK	datapath/linux/compat/include/net/vxlan.h	25;"	d
VXLAN_VNI_TO_TUNNELID	datapath-windows/ovsext/Vxlan.c	44;"	d	file:
ValidateNetlinkCmd	datapath-windows/ovsext/Datapath.c	/^ValidateNetlinkCmd(UINT32 devOp,$/;"	f	file:
VlanClient	utilities/ovs-vlan-test	/^class VlanClient:$/;"	c
VlanServer	utilities/ovs-vlan-test	/^class VlanServer:$/;"	c
VlanServerHandler	utilities/ovs-vlan-test	/^class VlanServerHandler(BaseHTTPServer.BaseHTTPRequestHandler):$/;"	c
Vlog	python/ovs/vlog.py	/^class Vlog:$/;"	c
Void	python/ovs/reconnect.py	/^    class Void(object):$/;"	c	class:Reconnect
VoidType	python/ovs/db/types.py	/^VoidType = AtomicType("void", None, ())$/;"	v
WAIT_CONNECT	include/openvswitch/vconn.h	/^    WAIT_CONNECT,$/;"	e	enum:vconn_wait_type
WAIT_RECV	include/openvswitch/vconn.h	/^    WAIT_RECV,$/;"	e	enum:vconn_wait_type
WAIT_SEND	include/openvswitch/vconn.h	/^    WAIT_SEND$/;"	e	enum:vconn_wait_type
WARNING_FLAGS	Makefile	/^WARNING_FLAGS =  -Wall -Wextra -Wno-sign-compare -Wpointer-arith -Wswitch-enum -Wunused-parameter -Wbad-function-cast -Wcast-align -Wmissing-prototypes -Wmissing-field-initializers -fno-strict-aliasing$/;"	m
WARNING_FLAGS	datapath/Makefile	/^WARNING_FLAGS =  -Wall -Wextra -Wno-sign-compare -Wpointer-arith -Wswitch-enum -Wunused-parameter -Wbad-function-cast -Wcast-align -Wmissing-prototypes -Wmissing-field-initializers -fno-strict-aliasing$/;"	m
WA_ACTIVE	datapath-windows/ovsext/resource.h	50;"	d
WA_CLICKACTIVE	datapath-windows/ovsext/resource.h	232;"	d
WA_INACTIVE	datapath-windows/ovsext/resource.h	8;"	d
WC_MASK_FIELD	lib/flow.h	327;"	d
WC_MASK_FIELD_MASK	lib/flow.h	329;"	d
WC_UNMASK_FIELD	lib/flow.h	331;"	d
WHEEL_DELTA	datapath-windows/ovsext/resource.h	825;"	d
WIN32_LEAN_AND_MEAN	include/windows/unistd.h	19;"	d
WINAPI_FAMILY_DESKTOP_APP	datapath-windows/ovsext/resource.h	787;"	d
WINAPI_FAMILY_PC_APP	datapath-windows/ovsext/resource.h	225;"	d
WINAPI_FAMILY_PHONE_APP	datapath-windows/ovsext/resource.h	314;"	d
WINAPI_PARTITION_APP	datapath-windows/ovsext/resource.h	41;"	d
WINDEFS_H	include/windows/windefs.h	18;"	d
WINDOWS	lib/dpif-netlink.c	/^enum { WINDOWS = 0 };$/;"	e	enum:__anon88	file:
WINDOWS	lib/dpif-netlink.c	/^enum { WINDOWS = 1 };$/;"	e	enum:__anon87	file:
WMSZ_BOTTOM	datapath-windows/ovsext/resource.h	418;"	d
WMSZ_BOTTOMLEFT	datapath-windows/ovsext/resource.h	433;"	d
WMSZ_BOTTOMRIGHT	datapath-windows/ovsext/resource.h	447;"	d
WMSZ_LEFT	datapath-windows/ovsext/resource.h	57;"	d
WMSZ_RIGHT	datapath-windows/ovsext/resource.h	238;"	d
WMSZ_TOP	datapath-windows/ovsext/resource.h	325;"	d
WMSZ_TOPLEFT	datapath-windows/ovsext/resource.h	355;"	d
WMSZ_TOPRIGHT	datapath-windows/ovsext/resource.h	400;"	d
WM_ACTIVATE	datapath-windows/ovsext/resource.h	417;"	d
WM_ACTIVATEAPP	datapath-windows/ovsext/resource.h	621;"	d
WM_AFXFIRST	datapath-windows/ovsext/resource.h	1208;"	d
WM_AFXLAST	datapath-windows/ovsext/resource.h	1209;"	d
WM_APP	datapath-windows/ovsext/resource.h	1533;"	d
WM_APPCOMMAND	datapath-windows/ovsext/resource.h	1196;"	d
WM_ASKCBFORMATNAME	datapath-windows/ovsext/resource.h	1187;"	d
WM_CANCELJOURNAL	datapath-windows/ovsext/resource.h	747;"	d
WM_CANCELMODE	datapath-windows/ovsext/resource.h	630;"	d
WM_CAPTURECHANGED	datapath-windows/ovsext/resource.h	1117;"	d
WM_CHANGECBCHAIN	datapath-windows/ovsext/resource.h	1188;"	d
WM_CHANGEUISTATE	datapath-windows/ovsext/resource.h	1072;"	d
WM_CHAR	datapath-windows/ovsext/resource.h	1042;"	d
WM_CHARTOITEM	datapath-windows/ovsext/resource.h	694;"	d
WM_CHILDACTIVATE	datapath-windows/ovsext/resource.h	654;"	d
WM_CLEAR	datapath-windows/ovsext/resource.h	1178;"	d
WM_CLIPBOARDUPDATE	datapath-windows/ovsext/resource.h	1198;"	d
WM_CLOSE	datapath-windows/ovsext/resource.h	545;"	d
WM_COMMAND	datapath-windows/ovsext/resource.h	1055;"	d
WM_COMMNOTIFY	datapath-windows/ovsext/resource.h	733;"	d
WM_COMPACTING	datapath-windows/ovsext/resource.h	729;"	d
WM_COMPAREITEM	datapath-windows/ovsext/resource.h	707;"	d
WM_CONTEXTMENU	datapath-windows/ovsext/resource.h	831;"	d
WM_COPY	datapath-windows/ovsext/resource.h	1175;"	d
WM_COPYDATA	datapath-windows/ovsext/resource.h	745;"	d
WM_CREATE	datapath-windows/ovsext/resource.h	49;"	d
WM_CTLCOLORBTN	datapath-windows/ovsext/resource.h	1078;"	d
WM_CTLCOLORDLG	datapath-windows/ovsext/resource.h	1079;"	d
WM_CTLCOLOREDIT	datapath-windows/ovsext/resource.h	1076;"	d
WM_CTLCOLORLISTBOX	datapath-windows/ovsext/resource.h	1077;"	d
WM_CTLCOLORMSGBOX	datapath-windows/ovsext/resource.h	1075;"	d
WM_CTLCOLORSCROLLBAR	datapath-windows/ovsext/resource.h	1080;"	d
WM_CTLCOLORSTATIC	datapath-windows/ovsext/resource.h	1081;"	d
WM_CUT	datapath-windows/ovsext/resource.h	1173;"	d
WM_DDE_FIRST	datapath-windows/ovsext/resource.h	1212;"	d
WM_DEADCHAR	datapath-windows/ovsext/resource.h	1043;"	d
WM_DELETEITEM	datapath-windows/ovsext/resource.h	687;"	d
WM_DESTROY	datapath-windows/ovsext/resource.h	231;"	d
WM_DESTROYCLIPBOARD	datapath-windows/ovsext/resource.h	1182;"	d
WM_DEVICECHANGE	datapath-windows/ovsext/resource.h	1120;"	d
WM_DEVMODECHANGE	datapath-windows/ovsext/resource.h	618;"	d
WM_DISPLAYCHANGE	datapath-windows/ovsext/resource.h	838;"	d
WM_DPICHANGED	datapath-windows/ovsext/resource.h	1170;"	d
WM_DRAWCLIPBOARD	datapath-windows/ovsext/resource.h	1183;"	d
WM_DRAWITEM	datapath-windows/ovsext/resource.h	680;"	d
WM_DROPFILES	datapath-windows/ovsext/resource.h	1134;"	d
WM_DWMCOLORIZATIONCOLORCHANGED	datapath-windows/ovsext/resource.h	1201;"	d
WM_DWMCOMPOSITIONCHANGED	datapath-windows/ovsext/resource.h	1199;"	d
WM_DWMNCRENDERINGCHANGED	datapath-windows/ovsext/resource.h	1200;"	d
WM_DWMSENDICONICLIVEPREVIEWBITMAP	datapath-windows/ovsext/resource.h	1204;"	d
WM_DWMSENDICONICTHUMBNAIL	datapath-windows/ovsext/resource.h	1203;"	d
WM_DWMWINDOWMAXIMIZEDCHANGE	datapath-windows/ovsext/resource.h	1202;"	d
WM_ENABLE	datapath-windows/ovsext/resource.h	489;"	d
WM_ENDSESSION	datapath-windows/ovsext/resource.h	602;"	d
WM_ENTERIDLE	datapath-windows/ovsext/resource.h	1066;"	d
WM_ENTERMENULOOP	datapath-windows/ovsext/resource.h	1113;"	d
WM_ENTERSIZEMOVE	datapath-windows/ovsext/resource.h	1132;"	d
WM_ERASEBKGND	datapath-windows/ovsext/resource.h	590;"	d
WM_EXITMENULOOP	datapath-windows/ovsext/resource.h	1114;"	d
WM_EXITSIZEMOVE	datapath-windows/ovsext/resource.h	1133;"	d
WM_FONTCHANGE	datapath-windows/ovsext/resource.h	624;"	d
WM_GESTURE	datapath-windows/ovsext/resource.h	1062;"	d
WM_GESTURENOTIFY	datapath-windows/ovsext/resource.h	1063;"	d
WM_GETDLGCODE	datapath-windows/ovsext/resource.h	882;"	d
WM_GETFONT	datapath-windows/ovsext/resource.h	697;"	d
WM_GETHOTKEY	datapath-windows/ovsext/resource.h	700;"	d
WM_GETICON	datapath-windows/ovsext/resource.h	841;"	d
WM_GETMINMAXINFO	datapath-windows/ovsext/resource.h	660;"	d
WM_GETOBJECT	datapath-windows/ovsext/resource.h	712;"	d
WM_GETTEXT	datapath-windows/ovsext/resource.h	523;"	d
WM_GETTEXTLENGTH	datapath-windows/ovsext/resource.h	531;"	d
WM_GETTITLEBARINFOEX	datapath-windows/ovsext/resource.h	1205;"	d
WM_HANDHELDFIRST	datapath-windows/ovsext/resource.h	1206;"	d
WM_HANDHELDLAST	datapath-windows/ovsext/resource.h	1207;"	d
WM_HELP	datapath-windows/ovsext/resource.h	760;"	d
WM_HOTKEY	datapath-windows/ovsext/resource.h	1193;"	d
WM_HSCROLL	datapath-windows/ovsext/resource.h	1058;"	d
WM_HSCROLLCLIPBOARD	datapath-windows/ovsext/resource.h	1189;"	d
WM_ICONERASEBKGND	datapath-windows/ovsext/resource.h	668;"	d
WM_IME_CHAR	datapath-windows/ovsext/resource.h	1159;"	d
WM_IME_COMPOSITION	datapath-windows/ovsext/resource.h	1052;"	d
WM_IME_COMPOSITIONFULL	datapath-windows/ovsext/resource.h	1157;"	d
WM_IME_CONTROL	datapath-windows/ovsext/resource.h	1156;"	d
WM_IME_ENDCOMPOSITION	datapath-windows/ovsext/resource.h	1051;"	d
WM_IME_KEYDOWN	datapath-windows/ovsext/resource.h	1161;"	d
WM_IME_KEYLAST	datapath-windows/ovsext/resource.h	1053;"	d
WM_IME_KEYUP	datapath-windows/ovsext/resource.h	1162;"	d
WM_IME_NOTIFY	datapath-windows/ovsext/resource.h	1155;"	d
WM_IME_REQUEST	datapath-windows/ovsext/resource.h	1160;"	d
WM_IME_SELECT	datapath-windows/ovsext/resource.h	1158;"	d
WM_IME_SETCONTEXT	datapath-windows/ovsext/resource.h	1154;"	d
WM_IME_STARTCOMPOSITION	datapath-windows/ovsext/resource.h	1050;"	d
WM_INITDIALOG	datapath-windows/ovsext/resource.h	1054;"	d
WM_INITMENU	datapath-windows/ovsext/resource.h	1060;"	d
WM_INITMENUPOPUP	datapath-windows/ovsext/resource.h	1061;"	d
WM_INPUT	datapath-windows/ovsext/resource.h	1025;"	d
WM_INPUTLANGCHANGE	datapath-windows/ovsext/resource.h	756;"	d
WM_INPUTLANGCHANGEREQUEST	datapath-windows/ovsext/resource.h	754;"	d
WM_INPUT_DEVICE_CHANGE	datapath-windows/ovsext/resource.h	1023;"	d
WM_KEYDOWN	datapath-windows/ovsext/resource.h	1027;"	d
WM_KEYFIRST	datapath-windows/ovsext/resource.h	1026;"	d
WM_KEYLAST	datapath-windows/ovsext/resource.h	1049;"	d
WM_KEYUP	datapath-windows/ovsext/resource.h	1041;"	d
WM_KILLFOCUS	datapath-windows/ovsext/resource.h	446;"	d
WM_LBUTTONDBLCLK	datapath-windows/ovsext/resource.h	1099;"	d
WM_LBUTTONDOWN	datapath-windows/ovsext/resource.h	1097;"	d
WM_LBUTTONUP	datapath-windows/ovsext/resource.h	1098;"	d
WM_MBUTTONDBLCLK	datapath-windows/ovsext/resource.h	1105;"	d
WM_MBUTTONDOWN	datapath-windows/ovsext/resource.h	1103;"	d
WM_MBUTTONUP	datapath-windows/ovsext/resource.h	1104;"	d
WM_MDIACTIVATE	datapath-windows/ovsext/resource.h	1123;"	d
WM_MDICASCADE	datapath-windows/ovsext/resource.h	1128;"	d
WM_MDICREATE	datapath-windows/ovsext/resource.h	1121;"	d
WM_MDIDESTROY	datapath-windows/ovsext/resource.h	1122;"	d
WM_MDIGETACTIVE	datapath-windows/ovsext/resource.h	1130;"	d
WM_MDIICONARRANGE	datapath-windows/ovsext/resource.h	1129;"	d
WM_MDIMAXIMIZE	datapath-windows/ovsext/resource.h	1126;"	d
WM_MDINEXT	datapath-windows/ovsext/resource.h	1125;"	d
WM_MDIREFRESHMENU	datapath-windows/ovsext/resource.h	1135;"	d
WM_MDIRESTORE	datapath-windows/ovsext/resource.h	1124;"	d
WM_MDISETMENU	datapath-windows/ovsext/resource.h	1131;"	d
WM_MDITILE	datapath-windows/ovsext/resource.h	1127;"	d
WM_MEASUREITEM	datapath-windows/ovsext/resource.h	683;"	d
WM_MENUCHAR	datapath-windows/ovsext/resource.h	1065;"	d
WM_MENUCOMMAND	datapath-windows/ovsext/resource.h	1071;"	d
WM_MENUDRAG	datapath-windows/ovsext/resource.h	1068;"	d
WM_MENUGETOBJECT	datapath-windows/ovsext/resource.h	1069;"	d
WM_MENURBUTTONUP	datapath-windows/ovsext/resource.h	1067;"	d
WM_MENUSELECT	datapath-windows/ovsext/resource.h	1064;"	d
WM_MOUSEACTIVATE	datapath-windows/ovsext/resource.h	651;"	d
WM_MOUSEFIRST	datapath-windows/ovsext/resource.h	1084;"	d
WM_MOUSEHOVER	datapath-windows/ovsext/resource.h	1164;"	d
WM_MOUSEHWHEEL	datapath-windows/ovsext/resource.h	1110;"	d
WM_MOUSELAST	datapath-windows/ovsext/resource.h	1111;"	d
WM_MOUSELEAVE	datapath-windows/ovsext/resource.h	1166;"	d
WM_MOUSEMOVE	datapath-windows/ovsext/resource.h	1085;"	d
WM_MOUSEWHEEL	datapath-windows/ovsext/resource.h	1106;"	d
WM_MOVE	datapath-windows/ovsext/resource.h	321;"	d
WM_MOVING	datapath-windows/ovsext/resource.h	1118;"	d
WM_NCACTIVATE	datapath-windows/ovsext/resource.h	879;"	d
WM_NCCALCSIZE	datapath-windows/ovsext/resource.h	868;"	d
WM_NCCREATE	datapath-windows/ovsext/resource.h	860;"	d
WM_NCDESTROY	datapath-windows/ovsext/resource.h	864;"	d
WM_NCHITTEST	datapath-windows/ovsext/resource.h	872;"	d
WM_NCLBUTTONDBLCLK	datapath-windows/ovsext/resource.h	905;"	d
WM_NCLBUTTONDOWN	datapath-windows/ovsext/resource.h	901;"	d
WM_NCLBUTTONUP	datapath-windows/ovsext/resource.h	903;"	d
WM_NCMBUTTONDBLCLK	datapath-windows/ovsext/resource.h	917;"	d
WM_NCMBUTTONDOWN	datapath-windows/ovsext/resource.h	913;"	d
WM_NCMBUTTONUP	datapath-windows/ovsext/resource.h	915;"	d
WM_NCMOUSEHOVER	datapath-windows/ovsext/resource.h	1163;"	d
WM_NCMOUSELEAVE	datapath-windows/ovsext/resource.h	1165;"	d
WM_NCMOUSEMOVE	datapath-windows/ovsext/resource.h	899;"	d
WM_NCPAINT	datapath-windows/ovsext/resource.h	875;"	d
WM_NCPOINTERDOWN	datapath-windows/ovsext/resource.h	1141;"	d
WM_NCPOINTERUP	datapath-windows/ovsext/resource.h	1142;"	d
WM_NCPOINTERUPDATE	datapath-windows/ovsext/resource.h	1140;"	d
WM_NCRBUTTONDBLCLK	datapath-windows/ovsext/resource.h	911;"	d
WM_NCRBUTTONDOWN	datapath-windows/ovsext/resource.h	907;"	d
WM_NCRBUTTONUP	datapath-windows/ovsext/resource.h	909;"	d
WM_NCXBUTTONDBLCLK	datapath-windows/ovsext/resource.h	924;"	d
WM_NCXBUTTONDOWN	datapath-windows/ovsext/resource.h	920;"	d
WM_NCXBUTTONUP	datapath-windows/ovsext/resource.h	922;"	d
WM_NEXTDLGCTL	datapath-windows/ovsext/resource.h	671;"	d
WM_NEXTMENU	datapath-windows/ovsext/resource.h	1115;"	d
WM_NOTIFY	datapath-windows/ovsext/resource.h	751;"	d
WM_NOTIFYFORMAT	datapath-windows/ovsext/resource.h	764;"	d
WM_NULL	datapath-windows/ovsext/resource.h	7;"	d
WM_PAINT	datapath-windows/ovsext/resource.h	537;"	d
WM_PAINTCLIPBOARD	datapath-windows/ovsext/resource.h	1184;"	d
WM_PAINTICON	datapath-windows/ovsext/resource.h	665;"	d
WM_PALETTECHANGED	datapath-windows/ovsext/resource.h	1192;"	d
WM_PALETTEISCHANGING	datapath-windows/ovsext/resource.h	1191;"	d
WM_PARENTNOTIFY	datapath-windows/ovsext/resource.h	1112;"	d
WM_PASTE	datapath-windows/ovsext/resource.h	1177;"	d
WM_PENWINFIRST	datapath-windows/ovsext/resource.h	1210;"	d
WM_PENWINLAST	datapath-windows/ovsext/resource.h	1211;"	d
WM_POINTERACTIVATE	datapath-windows/ovsext/resource.h	1148;"	d
WM_POINTERCAPTURECHANGED	datapath-windows/ovsext/resource.h	1149;"	d
WM_POINTERDEVICECHANGE	datapath-windows/ovsext/resource.h	1136;"	d
WM_POINTERDEVICEINRANGE	datapath-windows/ovsext/resource.h	1137;"	d
WM_POINTERDEVICEOUTOFRANGE	datapath-windows/ovsext/resource.h	1138;"	d
WM_POINTERDOWN	datapath-windows/ovsext/resource.h	1144;"	d
WM_POINTERENTER	datapath-windows/ovsext/resource.h	1146;"	d
WM_POINTERHWHEEL	datapath-windows/ovsext/resource.h	1152;"	d
WM_POINTERLEAVE	datapath-windows/ovsext/resource.h	1147;"	d
WM_POINTERUP	datapath-windows/ovsext/resource.h	1145;"	d
WM_POINTERUPDATE	datapath-windows/ovsext/resource.h	1143;"	d
WM_POINTERWHEEL	datapath-windows/ovsext/resource.h	1151;"	d
WM_POWER	datapath-windows/ovsext/resource.h	741;"	d
WM_POWERBROADCAST	datapath-windows/ovsext/resource.h	1119;"	d
WM_PRINT	datapath-windows/ovsext/resource.h	1194;"	d
WM_PRINTCLIENT	datapath-windows/ovsext/resource.h	1195;"	d
WM_QUERYDRAGICON	datapath-windows/ovsext/resource.h	704;"	d
WM_QUERYENDSESSION	datapath-windows/ovsext/resource.h	570;"	d
WM_QUERYNEWPALETTE	datapath-windows/ovsext/resource.h	1190;"	d
WM_QUERYOPEN	datapath-windows/ovsext/resource.h	585;"	d
WM_QUERYUISTATE	datapath-windows/ovsext/resource.h	1074;"	d
WM_QUEUESYNC	datapath-windows/ovsext/resource.h	657;"	d
WM_QUIT	datapath-windows/ovsext/resource.h	578;"	d
WM_RBUTTONDBLCLK	datapath-windows/ovsext/resource.h	1102;"	d
WM_RBUTTONDOWN	datapath-windows/ovsext/resource.h	1100;"	d
WM_RBUTTONUP	datapath-windows/ovsext/resource.h	1101;"	d
WM_RENDERALLFORMATS	datapath-windows/ovsext/resource.h	1181;"	d
WM_RENDERFORMAT	datapath-windows/ovsext/resource.h	1180;"	d
WM_SETCURSOR	datapath-windows/ovsext/resource.h	633;"	d
WM_SETFOCUS	datapath-windows/ovsext/resource.h	432;"	d
WM_SETFONT	datapath-windows/ovsext/resource.h	696;"	d
WM_SETHOTKEY	datapath-windows/ovsext/resource.h	698;"	d
WM_SETICON	datapath-windows/ovsext/resource.h	844;"	d
WM_SETREDRAW	datapath-windows/ovsext/resource.h	501;"	d
WM_SETTEXT	datapath-windows/ovsext/resource.h	512;"	d
WM_SHOWWINDOW	datapath-windows/ovsext/resource.h	608;"	d
WM_SIZE	datapath-windows/ovsext/resource.h	399;"	d
WM_SIZECLIPBOARD	datapath-windows/ovsext/resource.h	1186;"	d
WM_SIZING	datapath-windows/ovsext/resource.h	1116;"	d
WM_SPOOLERSTATUS	datapath-windows/ovsext/resource.h	677;"	d
WM_STYLECHANGED	datapath-windows/ovsext/resource.h	836;"	d
WM_STYLECHANGING	datapath-windows/ovsext/resource.h	833;"	d
WM_SYNCPAINT	datapath-windows/ovsext/resource.h	884;"	d
WM_SYSCHAR	datapath-windows/ovsext/resource.h	1046;"	d
WM_SYSCOLORCHANGE	datapath-windows/ovsext/resource.h	598;"	d
WM_SYSCOMMAND	datapath-windows/ovsext/resource.h	1056;"	d
WM_SYSDEADCHAR	datapath-windows/ovsext/resource.h	1047;"	d
WM_SYSKEYDOWN	datapath-windows/ovsext/resource.h	1044;"	d
WM_SYSKEYUP	datapath-windows/ovsext/resource.h	1045;"	d
WM_TABLET_FIRST	datapath-windows/ovsext/resource.h	1168;"	d
WM_TABLET_LAST	datapath-windows/ovsext/resource.h	1169;"	d
WM_TCARD	datapath-windows/ovsext/resource.h	758;"	d
WM_THEMECHANGED	datapath-windows/ovsext/resource.h	1197;"	d
WM_TIMECHANGE	datapath-windows/ovsext/resource.h	627;"	d
WM_TIMER	datapath-windows/ovsext/resource.h	1057;"	d
WM_TOUCH	datapath-windows/ovsext/resource.h	1139;"	d
WM_TOUCHHITTESTING	datapath-windows/ovsext/resource.h	1150;"	d
WM_UNDO	datapath-windows/ovsext/resource.h	1179;"	d
WM_UNICHAR	datapath-windows/ovsext/resource.h	1048;"	d
WM_UNINITMENUPOPUP	datapath-windows/ovsext/resource.h	1070;"	d
WM_UPDATEUISTATE	datapath-windows/ovsext/resource.h	1073;"	d
WM_USER	datapath-windows/ovsext/resource.h	1216;"	d
WM_USERCHANGED	datapath-windows/ovsext/resource.h	762;"	d
WM_VKEYTOITEM	datapath-windows/ovsext/resource.h	690;"	d
WM_VSCROLL	datapath-windows/ovsext/resource.h	1059;"	d
WM_VSCROLLCLIPBOARD	datapath-windows/ovsext/resource.h	1185;"	d
WM_WINDOWPOSCHANGED	datapath-windows/ovsext/resource.h	739;"	d
WM_WINDOWPOSCHANGING	datapath-windows/ovsext/resource.h	737;"	d
WM_WININICHANGE	datapath-windows/ovsext/resource.h	613;"	d
WM_WTSSESSION_CHANGE	datapath-windows/ovsext/resource.h	1167;"	d
WM_XBUTTONDBLCLK	datapath-windows/ovsext/resource.h	1109;"	d
WM_XBUTTONDOWN	datapath-windows/ovsext/resource.h	1107;"	d
WM_XBUTTONUP	datapath-windows/ovsext/resource.h	1108;"	d
WORDS_BIGENDIAN	config.h	250;"	d
WVR_ALIGNBOTTOM	datapath-windows/ovsext/resource.h	715;"	d
WVR_ALIGNLEFT	datapath-windows/ovsext/resource.h	635;"	d
WVR_ALIGNRIGHT	datapath-windows/ovsext/resource.h	845;"	d
WVR_ALIGNTOP	datapath-windows/ovsext/resource.h	547;"	d
WVR_HREDRAW	datapath-windows/ovsext/resource.h	1028;"	d
WVR_VALIDRECTS	datapath-windows/ovsext/resource.h	1217;"	d
WVR_VREDRAW	datapath-windows/ovsext/resource.h	1086;"	d
W_CONNECT	python/ovs/stream.py	/^    W_CONNECT = 0               # Connect complete (success or failure).$/;"	v	class:Stream
W_RECV	python/ovs/stream.py	/^    W_RECV = 1                  # Data received.$/;"	v	class:Stream
W_SEND	python/ovs/stream.py	/^    W_SEND = 2                  # Send buffer room available.$/;"	v	class:Stream
X8	lib/netdev-linux.c	2478;"	d	file:
XBUTTON1	datapath-windows/ovsext/resource.h	56;"	d
XBUTTON2	datapath-windows/ovsext/resource.h	237;"	d
XC_BOND	ofproto/ofproto-dpif-xlate.c	/^    XC_BOND,$/;"	e	enum:xc_type	file:
XC_ENTRY_FOR_EACH	ofproto/ofproto-dpif-xlate.c	431;"	d	file:
XC_FIN_TIMEOUT	ofproto/ofproto-dpif-xlate.c	/^    XC_FIN_TIMEOUT,$/;"	e	enum:xc_type	file:
XC_GROUP	ofproto/ofproto-dpif-xlate.c	/^    XC_GROUP,$/;"	e	enum:xc_type	file:
XC_LEARN	ofproto/ofproto-dpif-xlate.c	/^    XC_LEARN,$/;"	e	enum:xc_type	file:
XC_MIRROR	ofproto/ofproto-dpif-xlate.c	/^    XC_MIRROR,$/;"	e	enum:xc_type	file:
XC_NETDEV	ofproto/ofproto-dpif-xlate.c	/^    XC_NETDEV,$/;"	e	enum:xc_type	file:
XC_NETFLOW	ofproto/ofproto-dpif-xlate.c	/^    XC_NETFLOW,$/;"	e	enum:xc_type	file:
XC_NORMAL	ofproto/ofproto-dpif-xlate.c	/^    XC_NORMAL,$/;"	e	enum:xc_type	file:
XC_RULE	ofproto/ofproto-dpif-xlate.c	/^    XC_RULE,$/;"	e	enum:xc_type	file:
XC_TNL_ARP	ofproto/ofproto-dpif-xlate.c	/^    XC_TNL_ARP,$/;"	e	enum:xc_type	file:
XPTHREAD_FUNC1	lib/ovs-thread.c	130;"	d	file:
XPTHREAD_FUNC2	lib/ovs-thread.c	139;"	d	file:
XPTHREAD_FUNC3	lib/ovs-thread.c	148;"	d	file:
XSFeatureVSwitch	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^class XSFeatureVSwitch:$/;"	c
XenAPI	tests/MockXenAPI.py	/^class XenAPI(object):$/;"	c
XenAPI	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^            import XenAPI$/;"	i
XenAPI	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import XenAPI$/;"	i
XenAPIPlugin	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^import XenAPIPlugin$/;"	i
YUM_LOG	utilities/bugtool/ovs-bugtool	/^YUM_LOG = '\/var\/log\/yum.log'$/;"	v
YUM_REPOS_DIR	utilities/bugtool/ovs-bugtool	/^YUM_REPOS_DIR = '\/etc\/yum.repos.d'$/;"	v
ZCAT	utilities/bugtool/ovs-bugtool	/^ZCAT = 'zcat'$/;"	v
_ALL_SOURCE	config.h	214;"	d
_APS_NEXT_COMMAND_VALUE	datapath-windows/ovsext/resource.h	1572;"	d
_APS_NEXT_CONTROL_VALUE	datapath-windows/ovsext/resource.h	1573;"	d
_APS_NEXT_RESOURCE_VALUE	datapath-windows/ovsext/resource.h	1571;"	d
_APS_NEXT_SYMED_VALUE	datapath-windows/ovsext/resource.h	1574;"	d
_BOND_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_BOND_ATTRS = { 'uuid': (_str_to_xml,_str_from_xml),$/;"	v
_BOND_XML_TAG	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_BOND_XML_TAG = "bond"$/;"	v
_DARWIN_USE_64_BIT_INODE	config.h	260;"	d
_DIAGASSERT	lib/getopt_long.c	62;"	d	file:
_DIAGASSERT	lib/strsep.c	44;"	d	file:
_ETHTOOL_OTHERCONFIG_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_ETHTOOL_OTHERCONFIG_ATTRS = ['ethtool-%s' % x for x in 'autoneg', 'speed', 'duplex', 'rx', 'tx', 'sg', 'tso', 'ufo', 'gso', 'gro', 'lro' ]$/;"	v
_FlowNlDumpCmdHandler	datapath-windows/ovsext/Flow.c	/^_FlowNlDumpCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
_FlowNlGetCmdHandler	datapath-windows/ovsext/Flow.c	/^_FlowNlGetCmdHandler(POVS_USER_PARAMS_CONTEXT usrParamsCtx,$/;"	f
_GENL_MSG_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^typedef struct _GENL_MSG_HDR {$/;"	s
_GETOPT_H_	include/windows/getopt.h	31;"	d
_GNU_SOURCE	config.h	218;"	d
_InsertedRow	python/ovs/db/idl.py	/^class _InsertedRow(object):$/;"	c
_LINUX_OPENVSWITCH_H	datapath/linux/compat/include/linux/openvswitch.h	41;"	d
_LINUX_RECIPROCAL_DIV_WRAPPER_H	datapath/linux/compat/include/linux/reciprocal_div.h	2;"	d
_LINUX_U64_STATS_SYNC_WRAPPER_H	datapath/linux/compat/include/linux/u64_stats_sync.h	2;"	d
_LLDPD_H	lib/lldp/lldpd.h	20;"	d
_LLDPD_STRUCTS_H	lib/lldp/lldpd-structs.h	20;"	d
_LLDP_H	lib/lldp/lldp-const.h	19;"	d
_LLDP_TLV_H	lib/lldp/lldp-tlv.h	19;"	d
_MapFlowActionToNlAction	datapath-windows/ovsext/Flow.c	/^_MapFlowActionToNlAction(PNL_BUFFER nlBuf, uint32_t actionsLen,$/;"	f	file:
_MapFlowArpKeyToNlKey	datapath-windows/ovsext/Flow.c	/^_MapFlowArpKeyToNlKey(PNL_BUFFER nlBuf, ArpKey *arpFlowPutKey)$/;"	f	file:
_MapFlowInfoToNl	datapath-windows/ovsext/Flow.c	/^_MapFlowInfoToNl(PNL_BUFFER nlBuf, OvsFlowInfo *flowInfo)$/;"	f	file:
_MapFlowIpv4KeyToNlKey	datapath-windows/ovsext/Flow.c	/^_MapFlowIpv4KeyToNlKey(PNL_BUFFER nlBuf, IpKey *ipv4FlowPutKey)$/;"	f	file:
_MapFlowIpv6KeyToNlKey	datapath-windows/ovsext/Flow.c	/^_MapFlowIpv6KeyToNlKey(PNL_BUFFER nlBuf, Ipv6Key *ipv6FlowPutKey,$/;"	f	file:
_MapFlowStatsToNlStats	datapath-windows/ovsext/Flow.c	/^_MapFlowStatsToNlStats(PNL_BUFFER nlBuf, OvsFlowStats *flowStats)$/;"	f	file:
_MapKeyAttrToFlowPut	datapath-windows/ovsext/Flow.c	/^_MapKeyAttrToFlowPut(PNL_ATTR *keyAttrs,$/;"	f	file:
_MapNlAttrToOvsPktExec	datapath-windows/ovsext/User.c	/^_MapNlAttrToOvsPktExec(PNL_ATTR *nlAttrs, PNL_ATTR *keyAttrs,$/;"	f	file:
_MapNlToFlowPut	datapath-windows/ovsext/Flow.c	/^_MapNlToFlowPut(POVS_MESSAGE msgIn, PNL_ATTR keyAttr,$/;"	f	file:
_MapNlToFlowPutFlags	datapath-windows/ovsext/Flow.c	/^_MapNlToFlowPutFlags(PGENL_MSG_HDR genlMsgHdr,$/;"	f	file:
_MapTunAttrToFlowPut	datapath-windows/ovsext/Flow.c	/^_MapTunAttrToFlowPut(PNL_ATTR *keyAttrs,$/;"	f	file:
_NETINET_ICMP6_H_	include/windows/netinet/icmp6.h	62;"	d
_NETINET_IP6_H_	include/windows/netinet/ip6.h	62;"	d
_NETLINK_CMD	datapath-windows/ovsext/Datapath.c	/^typedef struct _NETLINK_CMD {$/;"	s	file:
_NETLINK_FAMILY	datapath-windows/ovsext/Datapath.c	/^typedef struct _NETLINK_FAMILY {$/;"	s	file:
_NETWORK_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_NETWORK_ATTRS = { 'uuid': (_str_to_xml,_str_from_xml),$/;"	v
_NETWORK_OTHERCONFIG_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_NETWORK_OTHERCONFIG_ATTRS = [ 'mtu',$/;"	v
_NETWORK_XML_TAG	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_NETWORK_XML_TAG = "network"$/;"	v
_NET_FLOW_KEYS_WRAPPER_H	datapath/linux/compat/include/net/flow_keys.h	2;"	d
_NET_MPLS_WRAPPER_H	datapath/linux/compat/include/net/mpls.h	15;"	d
_NL_ATTR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^typedef struct _NL_ATTR {$/;"	s
_NL_BUF	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^typedef struct _NL_BUF {$/;"	s
_NL_ERROR_	datapath-windows/ovsext/Netlink/NetlinkError.h	/^typedef enum _NL_ERROR_$/;"	g
_NL_MSG_HDR	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^typedef struct _NL_MSG_HDR {$/;"	s
_NL_POLICY	datapath-windows/ovsext/Netlink/Netlink.h	/^typedef struct _NL_POLICY$/;"	s
_NlBufCopyAtOffsetUnsafe	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^_NlBufCopyAtOffsetUnsafe(PNL_BUFFER nlBuf, PCHAR data,$/;"	f	file:
_NlBufCopyAtTailUnsafe	datapath-windows/ovsext/Netlink/NetlinkBuf.c	/^_NlBufCopyAtTailUnsafe(PNL_BUFFER nlBuf, PCHAR data, UINT32 len)$/;"	f	file:
_NlMsgErr	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^typedef struct _NlMsgErr$/;"	s
_OVS_ACTION_STATS	datapath-windows/ovsext/Actions.c	/^typedef struct _OVS_ACTION_STATS {$/;"	s	file:
_OVS_BUFFER_CONTEXT	datapath-windows/ovsext/BufferMgmt.h	/^typedef union _OVS_BUFFER_CONTEXT {$/;"	u
_OVS_DATAPATH	datapath-windows/ovsext/Switch.h	/^typedef struct _OVS_DATAPATH$/;"	s
_OVS_DEVICE_EXTENSION	datapath-windows/ovsext/Datapath.h	/^typedef struct _OVS_DEVICE_EXTENSION {$/;"	s
_OVS_EVENT_ENTRY	datapath-windows/ovsext/DpInternal.h	/^typedef struct _OVS_EVENT_ENTRY {$/;"	s
_OVS_EVENT_POLL	datapath-windows/ovsext/DpInternal.h	/^typedef struct _OVS_EVENT_POLL {$/;"	s
_OVS_EVENT_QUEUE	datapath-windows/ovsext/Event.h	/^typedef struct _OVS_EVENT_QUEUE {$/;"	s
_OVS_EVENT_QUEUE_ELEM	datapath-windows/ovsext/Event.h	/^typedef struct _OVS_EVENT_QUEUE_ELEM {$/;"	s
_OVS_EVENT_STATUS	datapath-windows/ovsext/DpInternal.h	/^typedef struct _OVS_EVENT_STATUS {$/;"	s
_OVS_EVENT_SUBSCRIBE	datapath-windows/ovsext/DpInternal.h	/^typedef struct _OVS_EVENT_SUBSCRIBE {$/;"	s
_OVS_FWD_ENTRY	datapath-windows/ovsext/IpHelper.h	/^typedef struct _OVS_FWD_ENTRY {$/;"	s
_OVS_FWD_INFO	datapath-windows/ovsext/IpHelper.h	/^typedef union  _OVS_FWD_INFO {$/;"	u
_OVS_FWD_REQUEST_INFO	datapath-windows/ovsext/IpHelper.h	/^typedef struct _OVS_FWD_REQUEST_INFO {$/;"	s
_OVS_IPFORWARD_ENTRY	datapath-windows/ovsext/IpHelper.h	/^typedef struct _OVS_IPFORWARD_ENTRY {$/;"	s
_OVS_IPNEIGH_ENTRY	datapath-windows/ovsext/IpHelper.h	/^typedef struct _OVS_IPNEIGH_ENTRY {$/;"	s
_OVS_IP_HELPER_REQUEST	datapath-windows/ovsext/IpHelper.h	/^typedef struct _OVS_IP_HELPER_REQUEST {$/;"	s
_OVS_IP_HELPER_THREAD_CONTEXT	datapath-windows/ovsext/IpHelper.h	/^typedef struct _OVS_IP_HELPER_THREAD_CONTEXT {$/;"	s
_OVS_MESSAGE	datapath-windows/ovsext/Netlink/Netlink.h	/^typedef struct _OVS_MESSAGE {$/;"	s
_OVS_MESSAGE_ERROR	datapath-windows/ovsext/Netlink/Netlink.h	/^typedef struct _OVS_MESSAGE_ERROR {$/;"	s
_OVS_NBL_POOL	datapath-windows/ovsext/BufferMgmt.h	/^typedef struct _OVS_NBL_POOL {$/;"	s
_OVS_OID_CONTEXT	datapath-windows/ovsext/Oid.c	/^typedef struct _OVS_OID_CONTEXT {$/;"	s	file:
_OVS_OPEN_INSTANCE	datapath-windows/ovsext/Datapath.h	/^typedef struct _OVS_OPEN_INSTANCE {$/;"	s
_OVS_PACKET_HDR_INFO	datapath-windows/ovsext/NetProto.h	/^typedef union _OVS_PACKET_HDR_INFO {$/;"	u
_OVS_PACKET_INFO	datapath-windows/ovsext/DpInternal.h	/^typedef struct _OVS_PACKET_INFO {$/;"	s
_OVS_PACKET_QUEUE_ELEM	datapath-windows/ovsext/User.h	/^typedef struct _OVS_PACKET_QUEUE_ELEM {$/;"	s
_OVS_STT_PKT_ENTRY	datapath-windows/ovsext/Stt.h	/^typedef struct _OVS_STT_PKT_ENTRY {$/;"	s
_OVS_STT_PKT_KEY	datapath-windows/ovsext/Stt.h	/^typedef struct _OVS_STT_PKT_KEY {$/;"	s
_OVS_STT_THREAD_CTX	datapath-windows/ovsext/Stt.h	/^typedef struct _OVS_STT_THREAD_CTX {$/;"	s
_OVS_STT_VPORT	datapath-windows/ovsext/Stt.h	/^typedef struct _OVS_STT_VPORT {$/;"	s
_OVS_SWITCH_CONTEXT	datapath-windows/ovsext/Switch.h	/^typedef struct _OVS_SWITCH_CONTEXT$/;"	s
_OVS_TUNFLT_INIT_CONTEXT	datapath-windows/ovsext/Vport.c	/^typedef struct _OVS_TUNFLT_INIT_CONTEXT {$/;"	s	file:
_OVS_TUNFLT_OPERATION	datapath-windows/ovsext/TunnelFilter.c	/^typedef enum _OVS_TUNFLT_OPERATION {$/;"	g	file:
_OVS_TUNFLT_REQUEST	datapath-windows/ovsext/TunnelFilter.c	/^typedef struct _OVS_TUNFLT_REQUEST {$/;"	s	file:
_OVS_TUNFLT_REQUEST_LIST	datapath-windows/ovsext/TunnelFilter.c	/^typedef struct _OVS_TUNFLT_REQUEST_LIST {$/;"	s	file:
_OVS_TUNFLT_THREAD_CONTEXT	datapath-windows/ovsext/TunnelFilter.c	/^typedef struct _OVS_TUNFLT_THREAD_CONTEXT {$/;"	s	file:
_OVS_USER_PACKET_QUEUE	datapath-windows/ovsext/User.h	/^typedef struct _OVS_USER_PACKET_QUEUE {$/;"	s
_OVS_USER_PARAMS_CONTEXT	datapath-windows/ovsext/Datapath.h	/^typedef struct _OVS_USER_PARAMS_CONTEXT {$/;"	s
_OVS_USER_STATS	datapath-windows/ovsext/User.h	/^typedef struct _OVS_USER_STATS {$/;"	s
_OVS_VPORT_ENTRY	datapath-windows/ovsext/Vport.h	/^typedef struct _OVS_VPORT_ENTRY {$/;"	s
_OVS_VPORT_ERR_STATS	datapath-windows/ovsext/Vport.h	/^typedef struct _OVS_VPORT_ERR_STATS {$/;"	s
_OVS_VPORT_EXT_INFO	datapath-windows/ovsext/DpInternal.h	/^typedef struct _OVS_VPORT_EXT_INFO {$/;"	s
_OVS_VPORT_FULL_STATS	datapath-windows/ovsext/Vport.h	/^typedef struct _OVS_VPORT_FULL_STATS {$/;"	s
_OVS_VPORT_GET	datapath-windows/ovsext/DpInternal.h	/^typedef struct _OVS_VPORT_GET {$/;"	s
_OVS_VPORT_STATS	datapath-windows/ovsext/Vport.h	/^typedef struct _OVS_VPORT_STATS {$/;"	s
_OVS_VXLAN_VPORT	datapath-windows/ovsext/Vxlan.h	/^typedef struct _OVS_VXLAN_VPORT {$/;"	s
_OvsFlow	datapath-windows/ovsext/Flow.h	/^typedef struct _OvsFlow {$/;"	s
_OvsLayers	datapath-windows/ovsext/Flow.h	/^typedef struct _OvsLayers {$/;"	s
_PIF_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_PIF_ATTRS = { 'uuid': (_str_to_xml,_str_from_xml),$/;"	v
_PIF_OTHERCONFIG_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^                        [ 'bond-%s' % x for x in 'mode', 'miimon', 'downdelay',$/;"	v
_PIF_XML_TAG	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_PIF_XML_TAG = "pif"$/;"	v
_POOL_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_POOL_ATTRS = { 'other_config': (lambda x, p, t, v: _otherconfig_to_xml(x, p, v, _POOL_OTHERCONFIG_ATTRS),$/;"	v
_POOL_OTHERCONFIG_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_POOL_OTHERCONFIG_ATTRS = ['vswitch-controller-fail-mode']$/;"	v
_POOL_XML_TAG	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_POOL_XML_TAG = "pool"$/;"	v
_POSIX_PTHREAD_SEMANTICS	config.h	222;"	d
_SAL_VERSION	datapath-windows/ovsext/resource.h	594;"	d
_SC_NPROCESSORS_ONLN	include/windows/unistd.h	33;"	d
_SC_PAGESIZE	include/windows/unistd.h	32;"	d
_SC_PHYS_PAGES	include/windows/unistd.h	34;"	d
_SC_UIO_MAXIOV	include/windows/unistd.h	29;"	d
_SFLAPPResources_counters	lib/sflow.h	/^typedef struct _SFLAPPResources_counters {$/;"	s
_SFLAddress	lib/sflow.h	/^typedef struct _SFLAddress {$/;"	s
_SFLAddress_value	lib/sflow.h	/^typedef union _SFLAddress_value {$/;"	u
_SFLAgent	lib/sflow_api.h	/^typedef struct _SFLAgent {$/;"	s
_SFLCounters_sample	lib/sflow.h	/^typedef struct _SFLCounters_sample {$/;"	s
_SFLCounters_sample_element	lib/sflow.h	/^typedef struct _SFLCounters_sample_element {$/;"	s
_SFLCounters_sample_expanded	lib/sflow.h	/^typedef struct _SFLCounters_sample_expanded {$/;"	s
_SFLCounters_type	lib/sflow.h	/^typedef union _SFLCounters_type {$/;"	u
_SFLDataSource_instance	lib/sflow_api.h	/^typedef struct _SFLDataSource_instance {$/;"	s
_SFLEthernet_counters	lib/sflow.h	/^typedef struct _SFLEthernet_counters {$/;"	s
_SFLExtended_as_path_segment	lib/sflow.h	/^typedef struct _SFLExtended_as_path_segment {$/;"	s
_SFLExtended_gateway	lib/sflow.h	/^typedef struct _SFLExtended_gateway {$/;"	s
_SFLExtended_mpls	lib/sflow.h	/^typedef struct _SFLExtended_mpls {$/;"	s
_SFLExtended_mpls_FTN	lib/sflow.h	/^typedef struct _SFLExtended_mpls_FTN {$/;"	s
_SFLExtended_mpls_LDP_FEC	lib/sflow.h	/^typedef struct _SFLExtended_mpls_LDP_FEC {$/;"	s
_SFLExtended_mpls_tunnel	lib/sflow.h	/^typedef struct _SFLExtended_mpls_tunnel {$/;"	s
_SFLExtended_mpls_vc	lib/sflow.h	/^typedef struct _SFLExtended_mpls_vc {$/;"	s
_SFLExtended_nat	lib/sflow.h	/^typedef struct _SFLExtended_nat {$/;"	s
_SFLExtended_router	lib/sflow.h	/^typedef struct _SFLExtended_router {$/;"	s
_SFLExtended_switch	lib/sflow.h	/^typedef struct _SFLExtended_switch {$/;"	s
_SFLExtended_url	lib/sflow.h	/^typedef struct _SFLExtended_url {$/;"	s
_SFLExtended_user	lib/sflow.h	/^typedef struct _SFLExtended_user {$/;"	s
_SFLExtended_vlan_tunnel	lib/sflow.h	/^typedef struct _SFLExtended_vlan_tunnel {$/;"	s
_SFLExtended_vni	lib/sflow.h	/^typedef struct _SFLExtended_vni {$/;"	s
_SFLFlow_sample	lib/sflow.h	/^typedef struct _SFLFlow_sample {$/;"	s
_SFLFlow_sample_element	lib/sflow.h	/^typedef struct _SFLFlow_sample_element {$/;"	s
_SFLFlow_sample_expanded	lib/sflow.h	/^typedef struct _SFLFlow_sample_expanded {$/;"	s
_SFLFlow_type	lib/sflow.h	/^typedef union _SFLFlow_type {$/;"	u
_SFLIf_counters	lib/sflow.h	/^typedef struct _SFLIf_counters {$/;"	s
_SFLLACP_counters	lib/sflow.h	/^typedef struct _SFLLACP_counters {$/;"	s
_SFLLACP_portState	lib/sflow.h	/^typedef  union _SFLLACP_portState {$/;"	u
_SFLLabelStack	lib/sflow.h	/^typedef struct _SFLLabelStack {$/;"	s
_SFLOVSDP_counters	lib/sflow.h	/^typedef struct _SFLOVSDP_counters {$/;"	s
_SFLPoller	lib/sflow_api.h	/^typedef struct _SFLPoller {$/;"	s
_SFLReceiver	lib/sflow_api.h	/^typedef struct _SFLReceiver {$/;"	s
_SFLSampleCollector	lib/sflow_api.h	/^typedef struct _SFLSampleCollector {$/;"	s
_SFLSample_datagram_hdr	lib/sflow.h	/^typedef struct _SFLSample_datagram_hdr {$/;"	s
_SFLSampled_ethernet	lib/sflow.h	/^typedef struct _SFLSampled_ethernet {$/;"	s
_SFLSampled_header	lib/sflow.h	/^typedef struct _SFLSampled_header {$/;"	s
_SFLSampled_ipv4	lib/sflow.h	/^typedef struct _SFLSampled_ipv4 {$/;"	s
_SFLSampled_ipv6	lib/sflow.h	/^typedef struct _SFLSampled_ipv6 {$/;"	s
_SFLSampler	lib/sflow_api.h	/^typedef struct _SFLSampler {$/;"	s
_SFLString	lib/sflow.h	/^typedef struct _SFLString {$/;"	s
_SFLTokenring_counters	lib/sflow.h	/^typedef struct _SFLTokenring_counters {$/;"	s
_SFLVg_counters	lib/sflow.h	/^typedef struct _SFLVg_counters {$/;"	s
_SFLVlan_counters	lib/sflow.h	/^typedef struct _SFLVlan_counters {$/;"	s
_SOCKET_METHODS	python/ovs/stream.py	/^    _SOCKET_METHODS = {}$/;"	v	class:Stream
_SelectSelect	python/ovs/poller.py	/^class _SelectSelect(object):$/;"	c
_Serializer	python/ovs/json.py	/^class _Serializer(object):$/;"	c
_TANDEM_SOURCE	config.h	226;"	d
_TUNNEL_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_TUNNEL_ATTRS = { 'uuid': (_str_to_xml,_str_from_xml),$/;"	v
_TUNNEL_XML_TAG	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_TUNNEL_XML_TAG = "tunnel"$/;"	v
_UAPI_MPLS_WRAPPER_H	datapath/linux/compat/include/linux/mpls.h	2;"	d
_UNISTD_H	include/windows/unistd.h	17;"	d
_USE_ATTRIBUTES_FOR_SAL	datapath-windows/ovsext/resource.h	37;"	d
_USE_DECLSPECS_FOR_SAL	datapath-windows/ovsext/resource.h	36;"	d
_UnixctlCommand	python/ovs/unixctl/__init__.py	/^class _UnixctlCommand(object):$/;"	c
_VLAN_ATTRS	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_VLAN_ATTRS = { 'uuid': (_str_to_xml,_str_from_xml),$/;"	v
_VLAN_XML_TAG	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_VLAN_XML_TAG = "vlan"$/;"	v
_WIN32_IE	datapath-windows/ovsext/resource.h	1434;"	d
_WIN32_IE_IE100	datapath-windows/ovsext/resource.h	1433;"	d
_WIN32_IE_IE20	datapath-windows/ovsext/resource.h	1083;"	d
_WIN32_IE_IE30	datapath-windows/ovsext/resource.h	1172;"	d
_WIN32_IE_IE302	datapath-windows/ovsext/resource.h	1176;"	d
_WIN32_IE_IE40	datapath-windows/ovsext/resource.h	1215;"	d
_WIN32_IE_IE401	datapath-windows/ovsext/resource.h	1228;"	d
_WIN32_IE_IE50	datapath-windows/ovsext/resource.h	1384;"	d
_WIN32_IE_IE501	datapath-windows/ovsext/resource.h	1386;"	d
_WIN32_IE_IE55	datapath-windows/ovsext/resource.h	1388;"	d
_WIN32_IE_IE60	datapath-windows/ovsext/resource.h	1393;"	d
_WIN32_IE_IE60SP1	datapath-windows/ovsext/resource.h	1396;"	d
_WIN32_IE_IE60SP2	datapath-windows/ovsext/resource.h	1402;"	d
_WIN32_IE_IE70	datapath-windows/ovsext/resource.h	1420;"	d
_WIN32_IE_IE80	datapath-windows/ovsext/resource.h	1421;"	d
_WIN32_IE_IE90	datapath-windows/ovsext/resource.h	1432;"	d
_WIN32_IE_WS03	datapath-windows/ovsext/resource.h	1399;"	d
_WIN32_WINDOWS	datapath-windows/ovsext/resource.h	1244;"	d
_WIN32_WINNT_LONGHORN	datapath-windows/ovsext/resource.h	1392;"	d
_WIN32_WINNT_NT4	datapath-windows/ovsext/resource.h	1214;"	d
_WIN32_WINNT_VISTA	datapath-windows/ovsext/resource.h	1390;"	d
_WIN32_WINNT_WIN2K	datapath-windows/ovsext/resource.h	1383;"	d
_WIN32_WINNT_WIN6	datapath-windows/ovsext/resource.h	1389;"	d
_WIN32_WINNT_WIN7	datapath-windows/ovsext/resource.h	1395;"	d
_WIN32_WINNT_WIN8	datapath-windows/ovsext/resource.h	1398;"	d
_WIN32_WINNT_WINBLUE	datapath-windows/ovsext/resource.h	1401;"	d
_WIN32_WINNT_WINXP	datapath-windows/ovsext/resource.h	1385;"	d
_WIN32_WINNT_WS03	datapath-windows/ovsext/resource.h	1387;"	d
_WIN32_WINNT_WS08	datapath-windows/ovsext/resource.h	1391;"	d
_XOPEN_IOV_MAX	include/windows/unistd.h	30;"	d
__4hex_re	python/ovs/json.py	/^    __4hex_re = re.compile("[0-9a-fA-F]{4}")$/;"	v	class:Parser
__ARG_PLACEHOLDER_1	datapath/linux/compat/include/linux/kconfig.h	29;"	d
__ARRAY_CHECK	lib/util.h	97;"	d
__ARRAY_FAIL	lib/util.h	101;"	d
__ARRAY_SIZE	lib/util.h	102;"	d
__ARRAY_SIZE	lib/util.h	106;"	d
__ARRAY_SIZE_NOCHECK	lib/util.h	94;"	d
__ATOMIC_H_	datapath-windows/ovsext/Atomic.h	18;"	d
__BUFFER_MGMT_H_	datapath-windows/ovsext/BufferMgmt.h	18;"	d
__CHECKSUM_H_	datapath-windows/ovsext/Checksum.h	18;"	d
__CMSG_ALIGNTO	include/sparse/sys/socket.h	58;"	d
__CTRL_ATTR_MAX	lib/netlink-protocol.h	/^        __CTRL_ATTR_MAX,$/;"	e	enum:__anon116
__CTRL_ATTR_MCAST_GRP_MAX	lib/netlink-protocol.h	/^    __CTRL_ATTR_MCAST_GRP_MAX,$/;"	e	enum:__anon118
__CTRL_ATTR_OP_MAX	lib/netlink-protocol.h	/^        __CTRL_ATTR_OP_MAX,$/;"	e	enum:__anon117
__CTRL_CMD_MAX	lib/netlink-protocol.h	/^        __CTRL_CMD_MAX,$/;"	e	enum:__anon115
__DATAPATH_H_	datapath-windows/ovsext/Datapath.h	25;"	d
__DEBUG_H_	datapath-windows/ovsext/Debug.h	18;"	d
__DP_INTERNAL_H_	datapath-windows/ovsext/DpInternal.h	18;"	d
__ETHERNET_H_	datapath-windows/ovsext/Ethernet.h	18;"	d
__EVENT_H_	datapath-windows/ovsext/Event.h	18;"	d
__EXTENSIONS__	config.h	230;"	d
__FLOW_H_	datapath-windows/ovsext/Flow.h	18;"	d
__IFLA_MAX	include/windows/net/if.h	/^    __IFLA_MAX$/;"	e	enum:__anon76
__IP_HELPER_H_	datapath-windows/ovsext/IpHelper.h	18;"	d
__JHASH_H_	datapath-windows/ovsext/Jhash.h	18;"	d
__KERNEL_H_WRAPPER	datapath/linux/compat/include/linux/kernel.h	2;"	d
__LINUX_BUG_WRAPPER_H	datapath/linux/compat/include/linux/bug.h	2;"	d
__LINUX_COMPILER_WRAPPER_H	datapath/linux/compat/include/linux/compiler.h	2;"	d
__LINUX_CPUMASK_WRAPPER_H	datapath/linux/compat/include/linux/cpumask.h	2;"	d
__LINUX_ERR_WRAPPER_H	datapath/linux/compat/include/linux/err.h	2;"	d
__LINUX_ETHERDEVICE_WRAPPER_H	datapath/linux/compat/include/linux/etherdevice.h	2;"	d
__LINUX_FLEX_ARRAY_WRAPPER_H	datapath/linux/compat/include/linux/flex_array.h	2;"	d
__LINUX_GRE_WRAPPER_H	datapath/linux/compat/include/net/gre.h	2;"	d
__LINUX_GSO_WRAPPER_H	datapath/linux/compat/gso.h	2;"	d
__LINUX_ICMPV6_WRAPPER_H	datapath/linux/compat/include/linux/icmpv6.h	2;"	d
__LINUX_ICMP_WRAPPER_H	datapath/linux/compat/include/linux/icmp.h	2;"	d
__LINUX_IF_ARP_WRAPPER_H	datapath/linux/compat/include/linux/if_arp.h	2;"	d
__LINUX_IF_ETHER_WRAPPER_H	datapath/linux/compat/include/linux/if_ether.h	2;"	d
__LINUX_IF_VLAN_WRAPPER_H	datapath/linux/compat/include/linux/if_vlan.h	2;"	d
__LINUX_IF_WRAPPER_H	datapath/linux/compat/include/linux/if.h	2;"	d
__LINUX_IN_WRAPPER_H	datapath/linux/compat/include/linux/in.h	2;"	d
__LINUX_IPV6_WRAPPER_H	datapath/linux/compat/include/linux/ipv6.h	2;"	d
__LINUX_IP_WRAPPER_H	datapath/linux/compat/include/linux/ip.h	2;"	d
__LINUX_JIFFIES_WRAPPER_H	datapath/linux/compat/include/linux/jiffies.h	2;"	d
__LINUX_KCONFIG_WRAPPER_H	datapath/linux/compat/include/linux/kconfig.h	2;"	d
__LINUX_LIST_WRAPPER_H	datapath/linux/compat/include/linux/list.h	2;"	d
__LINUX_NETDEVICE_WRAPPER_H	datapath/linux/compat/include/linux/netdevice.h	2;"	d
__LINUX_NETDEV_FEATURES_WRAPPER_H	datapath/linux/compat/include/linux/netdev_features.h	2;"	d
__LINUX_NETLINK_WRAPPER_H	datapath/linux/compat/include/linux/netlink.h	2;"	d
__LINUX_NET_WRAPPER_H	datapath/linux/compat/include/linux/net.h	2;"	d
__LINUX_PERCPU_WRAPPER_H	datapath/linux/compat/include/linux/percpu.h	2;"	d
__LINUX_PKT_SCHED_H	include/windows/linux/pkt_sched.h	18;"	d
__LINUX_POISON_WRAPPER_H	datapath/linux/compat/include/linux/poison.h	2;"	d
__LINUX_RANDOM_WRAPPER_H	datapath/linux/compat/include/linux/random.h	2;"	d
__LINUX_RCULIST_WRAPPER_H	datapath/linux/compat/include/linux/rculist.h	2;"	d
__LINUX_SCTP_WRAPPER_H	datapath/linux/compat/include/linux/sctp.h	2;"	d
__LINUX_SKBUFF_WRAPPER_H	datapath/linux/compat/include/linux/skbuff.h	2;"	d
__LINUX_STDDEF_WRAPPER_H	datapath/linux/compat/include/linux/stddef.h	2;"	d
__LINUX_TCP_WRAPPER_H	datapath/linux/compat/include/linux/tcp.h	2;"	d
__LINUX_TYPES_WRAPPER_H	datapath/linux/compat/include/linux/types.h	2;"	d
__LINUX_UDP_WRAPPER_H	datapath/linux/compat/include/linux/udp.h	2;"	d
__LINUX_WORKQUEUE_WRAPPER_H	datapath/linux/compat/include/linux/workqueue.h	2;"	d
__MMX__	include/sparse/emmintrin.h	23;"	d
__MMX__	include/sparse/emmintrin.h	25;"	d
__NETINET_IN_H	include/windows/netinet/in.h	18;"	d
__NETINET_IN_SPARSE	include/sparse/netinet/in.h	22;"	d
__NETINET_IP6_SPARSE	include/sparse/netinet/ip6.h	22;"	d
__NETINET_IP_H	include/windows/netinet/ip.h	18;"	d
__NETLINK_BUF_H_	datapath-windows/ovsext/Netlink/NetlinkBuf.h	18;"	d
__NETLINK_H_	datapath-windows/ovsext/Netlink/Netlink.h	18;"	d
__NETLINK_PROTO_H_	datapath-windows/ovsext/Netlink/NetlinkProto.h	18;"	d
__NETPACKET_PACKET_H	include/windows/netpacket/packet.h	18;"	d
__NETPACKET_PACKET_SPARSE	include/sparse/netpacket/packet.h	22;"	d
__NET_CHECKSUM_WRAPPER_H	datapath/linux/compat/include/net/checksum.h	2;"	d
__NET_DST_WRAPPER_H	datapath/linux/compat/include/net/dst.h	2;"	d
__NET_GENERIC_NETLINK_WRAPPER_H	datapath/linux/compat/include/net/genetlink.h	2;"	d
__NET_GENEVE_WRAPPER_H	datapath/linux/compat/include/net/geneve.h	2;"	d
__NET_IF_H	include/windows/net/if.h	18;"	d
__NET_INET_FRAG_WRAPPER_H	datapath/linux/compat/include/net/inet_frag.h	2;"	d
__NET_IPV6_WRAPPER_H	datapath/linux/compat/include/net/ipv6.h	2;"	d
__NET_IP_TUNNELS_WRAPPER_H	datapath/linux/compat/include/net/ip_tunnels.h	2;"	d
__NET_IP_WRAPPER_H	datapath/linux/compat/include/net/ip.h	2;"	d
__NET_NETLINK_WRAPPER_H	datapath/linux/compat/include/net/netlink.h	2;"	d
__NET_NET_NAMESPACE_WRAPPER_H	datapath/linux/compat/include/net/net_namespace.h	2;"	d
__NET_PROTO_H_	datapath-windows/ovsext/NetProto.h	18;"	d
__NET_SOCK_WRAPPER_H	datapath/linux/compat/include/net/sock.h	2;"	d
__NET_STT_H	datapath/linux/compat/include/net/stt.h	2;"	d
__NET_UDP_TUNNEL_WRAPPER_H	datapath/linux/compat/include/net/udp_tunnel.h	2;"	d
__NET_UDP_WRAPPER_H	datapath/linux/compat/include/net/udp.h	2;"	d
__NET_VXLAN_WRAPPER_H	datapath/linux/compat/include/net/vxlan.h	2;"	d
__OID_H_	datapath-windows/ovsext/Oid.h	18;"	d
__OVS_ACTION_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_ACTION_ATTR_MAX,	      \/* Nothing past this will be accepted$/;"	e	enum:ovs_action_attr
__OVS_ACTION_ATTR_MAX	include/odp-netlink.h	/^	__OVS_ACTION_ATTR_MAX,	      \/* Nothing past this will be accepted$/;"	e	enum:ovs_action_attr
__OVS_CT_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_CT_ATTR_MAX$/;"	e	enum:ovs_ct_attr
__OVS_CT_ATTR_MAX	include/odp-netlink.h	/^	__OVS_CT_ATTR_MAX$/;"	e	enum:ovs_ct_attr
__OVS_DP_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_DP_ATTR_MAX$/;"	e	enum:ovs_datapath_attr
__OVS_DP_ATTR_MAX	include/odp-netlink.h	/^	__OVS_DP_ATTR_MAX$/;"	e	enum:ovs_datapath_attr
__OVS_DP_INTERFACE_EXT_H_	datapath-windows/include/OvsDpInterfaceExt.h	18;"	d
__OVS_FLOW_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_FLOW_ATTR_MAX$/;"	e	enum:ovs_flow_attr
__OVS_FLOW_ATTR_MAX	include/odp-netlink.h	/^	__OVS_FLOW_ATTR_MAX$/;"	e	enum:ovs_flow_attr
__OVS_FRAG_TYPE_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_FRAG_TYPE_MAX$/;"	e	enum:ovs_frag_type
__OVS_FRAG_TYPE_MAX	include/odp-netlink.h	/^	__OVS_FRAG_TYPE_MAX$/;"	e	enum:ovs_frag_type
__OVS_KEY_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_KEY_ATTR_MAX$/;"	e	enum:ovs_key_attr
__OVS_KEY_ATTR_MAX	include/odp-netlink.h	/^	__OVS_KEY_ATTR_MAX$/;"	e	enum:ovs_key_attr
__OVS_NL_ATTR_CTRL_MAX	datapath-windows/include/OvsDpInterfaceExt.h	/^    __OVS_NL_ATTR_CTRL_MAX$/;"	e	enum:ovs_nl_mcast_attr
__OVS_PACKET_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_PACKET_ATTR_MAX$/;"	e	enum:ovs_packet_attr
__OVS_PACKET_ATTR_MAX	include/odp-netlink.h	/^	__OVS_PACKET_ATTR_MAX$/;"	e	enum:ovs_packet_attr
__OVS_SAMPLE_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_SAMPLE_ATTR_MAX,$/;"	e	enum:ovs_sample_attr
__OVS_SAMPLE_ATTR_MAX	include/odp-netlink.h	/^	__OVS_SAMPLE_ATTR_MAX,$/;"	e	enum:ovs_sample_attr
__OVS_STT_H_	datapath-windows/ovsext/Stt.h	18;"	d
__OVS_TUNNEL_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_TUNNEL_ATTR_MAX$/;"	e	enum:__anon46
__OVS_TUNNEL_ATTR_MAX	include/odp-netlink.h	/^	__OVS_TUNNEL_ATTR_MAX$/;"	e	enum:__anon80
__OVS_TUNNEL_KEY_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_TUNNEL_KEY_ATTR_MAX$/;"	e	enum:ovs_tunnel_key_attr
__OVS_TUNNEL_KEY_ATTR_MAX	include/odp-netlink.h	/^	__OVS_TUNNEL_KEY_ATTR_MAX$/;"	e	enum:ovs_tunnel_key_attr
__OVS_USERSPACE_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_USERSPACE_ATTR_MAX$/;"	e	enum:ovs_userspace_attr
__OVS_USERSPACE_ATTR_MAX	include/odp-netlink.h	/^	__OVS_USERSPACE_ATTR_MAX$/;"	e	enum:ovs_userspace_attr
__OVS_VPORT_ATTR_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_VPORT_ATTR_MAX$/;"	e	enum:ovs_vport_attr
__OVS_VPORT_ATTR_MAX	include/odp-netlink.h	/^	__OVS_VPORT_ATTR_MAX$/;"	e	enum:ovs_vport_attr
__OVS_VPORT_TYPE_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_VPORT_TYPE_MAX$/;"	e	enum:ovs_vport_type
__OVS_VPORT_TYPE_MAX	include/odp-netlink.h	/^	__OVS_VPORT_TYPE_MAX$/;"	e	enum:ovs_vport_type
__OVS_VXLAN_EXT_MAX	datapath/linux/compat/include/linux/openvswitch.h	/^	__OVS_VXLAN_EXT_MAX,$/;"	e	enum:__anon45
__OVS_VXLAN_EXT_MAX	include/odp-netlink.h	/^	__OVS_VXLAN_EXT_MAX,$/;"	e	enum:__anon79
__OVS_WIN_NETDEV_ATTR_MAX	datapath-windows/include/OvsDpInterfaceExt.h	/^    __OVS_WIN_NETDEV_ATTR_MAX$/;"	e	enum:ovs_win_netdev_attr
__PACKETIO_H_	datapath-windows/ovsext/PacketIO.h	18;"	d
__PACKET_PARSER_H_	datapath-windows/ovsext/PacketParser.h	18;"	d
__PERF_COUNTER_H	lib/perf-counter.h	18;"	d
__RCUPDATE_WRAPPER_H	datapath/linux/compat/include/linux/rcupdate.h	2;"	d
__RTNETLINK_WRAPPER_H	datapath/linux/compat/include/linux/rtnetlink.h	2;"	d
__SCTP_CHECKSUM_WRAPPER_H	datapath/linux/compat/include/net/sctp/checksum.h	2;"	d
__SSE2__	include/sparse/emmintrin.h	21;"	d
__SSE2__	include/sparse/emmintrin.h	27;"	d
__SSE__	include/sparse/emmintrin.h	22;"	d
__SSE__	include/sparse/emmintrin.h	26;"	d
__STATE	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    __STATE = {"OPEN":"OPEN",$/;"	v	class:ConfigurationFile
__SWITCH_H_	datapath-windows/ovsext/Switch.h	22;"	d
__SYS_EPOLL_H	include/windows/sys/epoll.h	18;"	d
__SYS_MATH_SPARSE	include/sparse/math.h	22;"	d
__SYS_SOCKET_H	include/windows/sys/socket.h	18;"	d
__SYS_SOCKET_SPARSE	include/sparse/sys/socket.h	22;"	d
__SYS_UIO_H	include/windows/sys/uio.h	18;"	d
__SYS_WAIT_SPARSE	include/sparse/sys/wait.h	22;"	d
__S_CONNECTED	python/ovs/stream.py	/^    __S_CONNECTED = 1$/;"	v	class:Stream
__S_CONNECTING	python/ovs/stream.py	/^    __S_CONNECTING = 0$/;"	v	class:Stream
__S_DISCONNECTED	python/ovs/stream.py	/^    __S_DISCONNECTED = 2$/;"	v	class:Stream
__TUNNEL_H_	datapath-windows/ovsext/Tunnel.h	18;"	d
__TUNNEL_INTF_H_	datapath-windows/ovsext/TunnelIntf.h	18;"	d
__TYPES_H_	datapath-windows/ovsext/Types.h	18;"	d
__USER_H_	datapath-windows/ovsext/User.h	22;"	d
__UTIL_H_	datapath-windows/ovsext/Util.h	18;"	d
__VPORT_H_	datapath-windows/ovsext/Vport.h	18;"	d
__VXLAN_H_	datapath-windows/ovsext/Vxlan.h	18;"	d
___NET_RANDOM_STATIC_KEY_INIT	datapath/linux/compat/include/linux/net.h	37;"	d
___config_enabled	datapath/linux/compat/include/linux/kconfig.h	33;"	d
__acquire_handle	python/ovstest/rpcserver.py	/^    def __acquire_handle(self, value):$/;"	m	class:TestArena	file:
__add_action	datapath/flow_netlink.c	/^static struct nlattr *__add_action(struct sw_flow_actions **sfa,$/;"	f	file:
__add_action	datapath/linux/flow_netlink.c	/^static struct nlattr *__add_action(struct sw_flow_actions **sfa,$/;"	f	file:
__always_unused	datapath/linux/compat/include/linux/compiler-gcc.h	12;"	d
__be16	datapath-windows/ovsext/Types.h	/^typedef uint16 __u16, __be16;$/;"	t
__be32	datapath-windows/ovsext/Types.h	/^typedef uint32 __u32, __be32;$/;"	t
__be64	datapath-windows/ovsext/Types.h	/^typedef uint64 __u64, __be64;$/;"	t
__build_header	datapath/linux/vport-gre.c	/^static struct sk_buff *__build_header(struct sk_buff *skb,$/;"	f	file:
__build_header	datapath/vport-gre.c	/^static struct sk_buff *__build_header(struct sk_buff *skb,$/;"	f	file:
__call__	python/ovstest/args.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:UniqueServerAction	file:
__check_json_type	python/ovs/db/idl.py	/^    def __check_json_type(json, types, name):$/;"	m	class:Transaction	file:
__clear	python/ovs/db/idl.py	/^    def __clear(self):$/;"	m	class:Idl	file:
__cmp__	python/ovs/db/data.py	/^    def __cmp__(self, other):$/;"	m	class:Atom	file:
__cmp__	python/ovs/db/data.py	/^    def __cmp__(self, other):$/;"	m	class:Datum	file:
__cmsg_nxthdr	include/sparse/sys/socket.h	/^__cmsg_nxthdr(struct msghdr *msg, struct cmsghdr *cmsg)$/;"	f
__complete_key	utilities/ovs-vsctl-bashcomp.bash	/^__complete_key () {$/;"	f
__config_enabled	datapath/linux/compat/include/linux/kconfig.h	32;"	d
__connect	python/ovs/jsonrpc.py	/^    def __connect(self):$/;"	m	class:Session	file:
__contains__	python/ovs/db/data.py	/^    def __contains__(self, item):$/;"	m	class:Datum	file:
__create_bond_device	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def __create_bond_device(name):$/;"	f	file:
__create_row	python/ovs/db/idl.py	/^    def __create_row(self, table, uuid):$/;"	m	class:Idl	file:
__del__	python/ovs/stream.py	/^    def __del__(self):$/;"	m	class:PassiveStream	file:
__del__	python/ovs/stream.py	/^    def __del__(self):$/;"	m	class:Stream	file:
__del__	utilities/bugtool/ovs-bugtool	/^    def __del__(self):$/;"	m	class:ProcOutput	file:
__del__	vtep/ovs-vtep	/^    def __del__(self):$/;"	m	class:Logical_Switch	file:
__delete_handle	python/ovstest/rpcserver.py	/^    def __delete_handle(self, handle):$/;"	m	class:TestArena	file:
__destroy_bond_device	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def __destroy_bond_device(name):$/;"	f	file:
__disassemble	python/ovs/db/idl.py	/^    def __disassemble(self):$/;"	m	class:Transaction	file:
__disconnect	python/ovs/jsonrpc.py	/^    def __disconnect(self):$/;"	m	class:Session	file:
__do_parse_update	python/ovs/db/idl.py	/^    def __do_parse_update(self, table_updates):$/;"	m	class:Idl	file:
__do_send_lock_request	python/ovs/db/idl.py	/^    def __do_send_lock_request(self, method):$/;"	m	class:Idl	file:
__dp_destroy	datapath/datapath.c	/^static void __dp_destroy(struct datapath *dp)$/;"	f	file:
__dp_destroy	datapath/linux/datapath.c	/^static void __dp_destroy(struct datapath *dp)$/;"	f	file:
__drv_typeBitset	datapath-windows/ovsext/resource.h	311;"	d
__drv_typeCond	datapath-windows/ovsext/resource.h	220;"	d
__drv_typeConst	datapath-windows/ovsext/resource.h	38;"	d
__drv_typeExpr	datapath-windows/ovsext/resource.h	347;"	d
__eq__	python/ovs/db/types.py	/^    def __eq__(self, other):$/;"	m	class:BaseType	file:
__eq__	python/ovs/db/types.py	/^    def __eq__(self, other):$/;"	m	class:Type	file:
__error	python/ovs/db/idl.py	/^    def __error(self):$/;"	m	class:Idl	file:
__error	python/ovs/json.py	/^    def __error(self, message):$/;"	m	class:Parser	file:
__fa_get_part	datapath/linux/compat/flex_array.c	/^__fa_get_part(struct flex_array *fa, int part_nr, gfp_t flags)$/;"	f	file:
__fa_get_part	datapath/linux/flex_array.c	/^__fa_get_part(struct flex_array *fa, int part_nr, gfp_t flags)$/;"	f	file:
__file_handler	python/ovs/vlog.py	/^    __file_handler = None$/;"	v	class:Vlog
__flow_hash_3words	datapath/linux/compat/flow_dissector.c	/^static __always_inline u32 __flow_hash_3words(u32 a, u32 b, u32 c)$/;"	f	file:
__flow_hash_3words	datapath/linux/flow_dissector.c	/^static __always_inline u32 __flow_hash_3words(u32 a, u32 b, u32 c)$/;"	f	file:
__flow_hash_secret_init	datapath/linux/compat/flow_dissector.c	/^static __always_inline void __flow_hash_secret_init(void)$/;"	f	file:
__flow_hash_secret_init	datapath/linux/flow_dissector.c	/^static __always_inline void __flow_hash_secret_init(void)$/;"	f	file:
__follow_ref_table	python/ovs/db/schema.py	/^    def __follow_ref_table(self, column, base, base_name):$/;"	m	class:DbSchema	file:
__from_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __from_xml(self, e, attrs):$/;"	m	class:DatabaseCache	file:
__func__	include/windows/windefs.h	34;"	d
__genl_register_family	datapath/linux/compat/include/net/genetlink.h	87;"	d
__get	python/ovs/db/parser.py	/^    def __get(self, name, types, optional, default=None):$/;"	m	class:Parser	file:
__get_bond_records_from_xapi	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __get_bond_records_from_xapi(self, session):$/;"	m	class:DatabaseCache	file:
__get_handle_resources	python/ovstest/rpcserver.py	/^    def __get_handle_resources(self, handle):$/;"	m	class:TestArena	file:
__get_network_records_from_xapi	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __get_network_records_from_xapi(self, session):$/;"	m	class:DatabaseCache	file:
__get_pif_records_from_xapi	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __get_pif_records_from_xapi(self, session, host):$/;"	m	class:DatabaseCache	file:
__get_pool_records_from_xapi	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __get_pool_records_from_xapi(self, session):$/;"	m	class:DatabaseCache	file:
__get_tunnel_records_from_xapi	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __get_tunnel_records_from_xapi(self, session):$/;"	m	class:DatabaseCache	file:
__get_vlan_records_from_xapi	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __get_vlan_records_from_xapi(self, session):$/;"	m	class:DatabaseCache	file:
__getattr__	python/ovs/db/idl.py	/^    def __getattr__(self, column_name):$/;"	m	class:Row	file:
__getattr__	utilities/ovs-dpctl-top	/^    def __getattr__(self, name):$/;"	m	class:SumData	file:
__getitem__	python/ovs/db/data.py	/^    def __getitem__(self, key):$/;"	m	class:Datum	file:
__has_extension	include/openvswitch/compiler.h	24;"	d
__has_feature	include/openvswitch/compiler.h	21;"	d
__hash__	python/ovs/db/data.py	/^    __hash__ = None$/;"	v	class:Datum
__hash__	python/ovs/db/data.py	/^    def __hash__(self):$/;"	m	class:Atom	file:
__iadd__	utilities/ovs-dpctl-top	/^    def __iadd__(self, other):$/;"	m	class:SumData	file:
__indent_line	python/ovs/json.py	/^    def __indent_line(self):$/;"	m	class:_Serializer	file:
__init__	debian/ovs-monitor-ipsec	/^    def __init__(self):$/;"	f
__init__	debian/ovs-monitor-ipsec	/^    def __init__(self):$/;"	m	class:IPsec
__init__	ofproto/ipfix-gen-entities	/^    def __init__(self):$/;"	m	class:IpfixEntityHandler
__init__	python/ovs/db/data.py	/^    def __init__(self, msg, json=None):$/;"	m	class:ConstraintViolation
__init__	python/ovs/db/data.py	/^    def __init__(self, type_, value=None):$/;"	m	class:Atom
__init__	python/ovs/db/data.py	/^    def __init__(self, type_, values={}):$/;"	m	class:Datum
__init__	python/ovs/db/error.py	/^    def __init__(self, msg, json=None, tag=None):$/;"	m	class:Error
__init__	python/ovs/db/idl.py	/^    def __init__(self, idl):$/;"	m	class:Transaction
__init__	python/ovs/db/idl.py	/^    def __init__(self, idl, table, uuid, data):$/;"	m	class:Row
__init__	python/ovs/db/idl.py	/^    def __init__(self, location=None, schema_json=None):$/;"	m	class:SchemaHelper
__init__	python/ovs/db/idl.py	/^    def __init__(self, op_index):$/;"	m	class:_InsertedRow
__init__	python/ovs/db/idl.py	/^    def __init__(self, remote, schema):$/;"	m	class:Idl
__init__	python/ovs/db/parser.py	/^    def __init__(self, json, name):$/;"	m	class:Parser
__init__	python/ovs/db/schema.py	/^    def __init__(self, name, columns, mutable=True, max_rows=sys.maxint,$/;"	m	class:TableSchema
__init__	python/ovs/db/schema.py	/^    def __init__(self, name, mutable, persistent, type_):$/;"	m	class:ColumnSchema
__init__	python/ovs/db/schema.py	/^    def __init__(self, name, version, tables):$/;"	m	class:DbSchema
__init__	python/ovs/db/schema.py	/^    def __init__(self, name, version, tables, idlPrefix, idlHeader):$/;"	m	class:IdlSchema
__init__	python/ovs/db/types.py	/^    def __init__(self, key, value=None, n_min=DEFAULT_MIN, n_max=DEFAULT_MAX):$/;"	m	class:Type
__init__	python/ovs/db/types.py	/^    def __init__(self, name, default, python_types):$/;"	m	class:AtomicType
__init__	python/ovs/db/types.py	/^    def __init__(self, type_, enum=None, min=None, max=None,$/;"	m	class:BaseType
__init__	python/ovs/json.py	/^    def __init__(self, check_trailer=False):$/;"	m	class:Parser
__init__	python/ovs/json.py	/^    def __init__(self, stream, pretty, sort_keys):$/;"	m	class:_Serializer
__init__	python/ovs/jsonrpc.py	/^    def __init__(self, reconnect, rpc):$/;"	m	class:Session
__init__	python/ovs/jsonrpc.py	/^    def __init__(self, stream):$/;"	m	class:Connection
__init__	python/ovs/jsonrpc.py	/^    def __init__(self, type_, method, params, result, error, id):$/;"	m	class:Message
__init__	python/ovs/poller.py	/^    def __init__(self):$/;"	m	class:Poller
__init__	python/ovs/poller.py	/^    def __init__(self):$/;"	m	class:_SelectSelect
__init__	python/ovs/reconnect.py	/^    def __init__(self, now):$/;"	m	class:Reconnect
__init__	python/ovs/stream.py	/^    def __init__(self, sock, name, bind_path):$/;"	m	class:PassiveStream
__init__	python/ovs/stream.py	/^    def __init__(self, socket, name, status):$/;"	m	class:Stream
__init__	python/ovs/unixctl/__init__.py	/^    def __init__(self, usage, min_args, max_args, callback, aux):$/;"	m	class:_UnixctlCommand
__init__	python/ovs/unixctl/client.py	/^    def __init__(self, conn):$/;"	m	class:UnixctlClient
__init__	python/ovs/unixctl/server.py	/^    def __init__(self, conn):$/;"	m	class:UnixctlClient
__init__	python/ovs/unixctl/server.py	/^    def __init__(self, listener):$/;"	m	class:UnixctlServer
__init__	python/ovs/unixctl/server.py	/^    def __init__(self, rpc):$/;"	m	class:UnixctlConnection
__init__	python/ovs/vlog.py	/^    def __init__(self, name):$/;"	m	class:Vlog
__init__	python/ovstest/rpcserver.py	/^    def __init__(self):$/;"	m	class:TestArena
__init__	python/ovstest/tcp.py	/^    def __init__(self):$/;"	m	class:TcpListenerConnection
__init__	python/ovstest/tcp.py	/^    def __init__(self):$/;"	m	class:TcpListenerFactory
__init__	python/ovstest/tcp.py	/^    def __init__(self, duration):$/;"	m	class:TcpSenderFactory
__init__	python/ovstest/tcp.py	/^    def __init__(self, proto, duration):$/;"	m	class:Producer
__init__	python/ovstest/udp.py	/^    def __init__(self):$/;"	m	class:UdpListener
__init__	python/ovstest/udp.py	/^    def __init__(self, host, count, size, duration):$/;"	m	class:UdpSender
__init__	tests/MockXenAPI.py	/^    def __init__(self):$/;"	m	class:Network
__init__	tests/MockXenAPI.py	/^    def __init__(self):$/;"	m	class:Pool
__init__	tests/MockXenAPI.py	/^    def __init__(self):$/;"	m	class:Session
__init__	tests/MockXenAPI.py	/^    def __init__(self):$/;"	m	class:VIF
__init__	tests/MockXenAPI.py	/^    def __init__(self):$/;"	m	class:VM
__init__	tests/MockXenAPI.py	/^    def __init__(self):$/;"	m	class:XenAPI
__init__	tests/MockXenAPI.py	/^    def __init__(self, attrs):$/;"	m	class:RecordRef
__init__	tests/MockXenAPI.py	/^    def __init__(self, records):$/;"	m	class:Table
__init__	utilities/bugtool/ovs-bugtool	/^    def __init__(self, buf=''):$/;"	m	class:StringIOmtime
__init__	utilities/bugtool/ovs-bugtool	/^    def __init__(self, command, max_time, inst=None, filter=None, binary=False):$/;"	m	class:ProcOutput
__init__	utilities/ovs-dpctl-top	/^    def __init__(self):$/;"	m	class:Columns
__init__	utilities/ovs-dpctl-top	/^    def __init__(self, accumulate):$/;"	m	class:FlowDB
__init__	utilities/ovs-dpctl-top	/^    def __init__(self, console_width, field_select):$/;"	m	class:Render
__init__	utilities/ovs-dpctl-top	/^    def __init__(self, field_type, field, packets, flow_bytes, key):$/;"	m	class:SumData
__init__	utilities/ovs-dpctl-top	/^    def __init__(self, field_type, generator):$/;"	m	class:OutputFormat
__init__	utilities/ovs-dpctl-top	/^    def __init__(self, flow_db, interval):$/;"	m	class:DecayThread
__init__	utilities/ovs-dpctl-top	/^    def __init__(self, label, fmt):$/;"	m	class:RowMeta
__init__	utilities/ovs-dpctl-top	/^    def __init__(self, sortable, width):$/;"	m	class:ColMeta
__init__	utilities/ovs-pcap	/^    def __init__(self, file_name):$/;"	m	class:PcapReader
__init__	utilities/ovs-vlan-test	/^    def __init__(self, server_ip, server_port, vlan_ip, vlan_port):$/;"	m	class:VlanClient
__init__	utilities/ovs-vlan-test	/^    def __init__(self, server_ip, server_port, vlan_ip, vlan_port):$/;"	m	class:VlanServer
__init__	utilities/ovs-vlan-test	/^    def __init__(self, vlan_ip, vlan_port):$/;"	m	class:UDPReceiver
__init__	vtep/ovs-vtep	/^    def __init__(self, ls_name):$/;"	m	class:Logical_Switch
__init__	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __init__(self, msg):$/;"	m	class:Error
__init__	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __init__(self, path):$/;"	m	class:ConfigurationFile
__init__	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __init__(self, pif):$/;"	m	class:Datapath
__init__	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __init__(self, session_ref=None, cache_file=None):$/;"	m	class:DatabaseCache
__init__	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def __init__(self, pif):$/;"	m	class:DatapathBridge
__init__	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def __init__(self, pif):$/;"	m	class:DatapathVswitch
__init__	xenserver/opt_xensource_libexec_interface-reconfigure	/^    def __init__(self, msg):$/;"	m	class:Usage
__init__	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def __init__(self):$/;"	m	class:VSwitchControllerDialogue
__init__	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def __init__(self, name, processname=None):$/;"	m	class:VSwitchService
__inited	python/ovs/vlog.py	/^    __inited = False$/;"	v	class:Vlog
__int128	include/sparse/bmi2intrin.h	23;"	d
__int128	include/sparse/bmi2intrin.h	25;"	d
__ipv4_tun_to_nlattr	datapath/flow_netlink.c	/^static int __ipv4_tun_to_nlattr(struct sk_buff *skb,$/;"	f	file:
__ipv4_tun_to_nlattr	datapath/linux/flow_netlink.c	/^static int __ipv4_tun_to_nlattr(struct sk_buff *skb,$/;"	f	file:
__is_enabled	python/ovs/vlog.py	/^    def __is_enabled(self, level):$/;"	m	class:Vlog	file:
__is_leading_surrogate	python/ovs/json.py	/^    def __is_leading_surrogate(c):$/;"	m	class:Parser	file:
__is_trailing_surrogate	python/ovs/json.py	/^    def __is_trailing_surrogate(c):$/;"	m	class:Parser	file:
__isub__	utilities/ovs-dpctl-top	/^    def __isub__(self, other):$/;"	m	class:SumData	file:
__lex_4hex	python/ovs/json.py	/^    def __lex_4hex(self, s):$/;"	m	class:Parser	file:
__lex_alpha	python/ovs/json.py	/^    __lex_alpha = {}$/;"	v	class:Parser
__lex_finish_keyword	python/ovs/json.py	/^    def __lex_finish_keyword(self):$/;"	m	class:Parser	file:
__lex_finish_number	python/ovs/json.py	/^    def __lex_finish_number(self):$/;"	m	class:Parser	file:
__lex_finish_string	python/ovs/json.py	/^    def __lex_finish_string(self):$/;"	m	class:Parser	file:
__lex_input	python/ovs/json.py	/^    def __lex_input(self, c):$/;"	m	class:Parser	file:
__lex_keyword	python/ovs/json.py	/^    def __lex_keyword(self, c):$/;"	m	class:Parser	file:
__lex_number	python/ovs/json.py	/^    def __lex_number(self, c):$/;"	m	class:Parser	file:
__lex_start	python/ovs/json.py	/^    def __lex_start(self, c):$/;"	m	class:Parser	file:
__lex_start_actions	python/ovs/json.py	/^    __lex_start_actions = {}$/;"	v	class:Parser
__lex_start_alpha	python/ovs/json.py	/^    def __lex_start_alpha(self, c):$/;"	m	class:Parser	file:
__lex_start_error	python/ovs/json.py	/^    def __lex_start_error(self, c):$/;"	m	class:Parser	file:
__lex_start_number	python/ovs/json.py	/^    def __lex_start_number(self, c):$/;"	m	class:Parser	file:
__lex_start_space	python/ovs/json.py	/^    def __lex_start_space(self, c):$/;"	m	class:Parser	file:
__lex_start_string	python/ovs/json.py	/^    def __lex_start_string(self, _):$/;"	m	class:Parser	file:
__lex_start_token	python/ovs/json.py	/^    def __lex_start_token(self, c):$/;"	m	class:Parser	file:
__lex_string	python/ovs/json.py	/^    def __lex_string(self, c):$/;"	m	class:Parser	file:
__lex_string_escape	python/ovs/json.py	/^    def __lex_string_escape(self, c):$/;"	m	class:Parser	file:
__log	python/ovs/vlog.py	/^    def __log(self, level, message, **kwargs):$/;"	m	class:Vlog	file:
__log_file	python/ovs/vlog.py	/^    __log_file = None$/;"	v	class:Vlog
__log_msg	python/ovs/jsonrpc.py	/^    def __log_msg(self, title, msg):$/;"	m	class:Connection	file:
__log_patterns	python/ovs/vlog.py	/^    __log_patterns = PATTERNS$/;"	v	class:Vlog
__log_wakeup	python/ovs/poller.py	/^    def __log_wakeup(self, events):$/;"	m	class:Poller	file:
__m128i	include/sparse/rte_vect.h	/^typedef int __m128i;$/;"	t
__may_retry	python/ovs/reconnect.py	/^    def __may_retry(self):$/;"	m	class:Reconnect	file:
__mfl	python/ovs/vlog.py	/^    __mfl = {}  # Module -> destination -> level$/;"	v	class:Vlog
__msg_num	python/ovs/vlog.py	/^    __msg_num = 0$/;"	v	class:Vlog
__n_from_json	python/ovs/db/types.py	/^    def __n_from_json(json, default):$/;"	m	class:Type	file:
__ne__	python/ovs/db/types.py	/^    def __ne__(self, other):$/;"	m	class:BaseType	file:
__ne__	python/ovs/db/types.py	/^    def __ne__(self, other):$/;"	m	class:Type	file:
__need_quotes_re	python/ovs/db/data.py	/^    __need_quotes_re = re.compile("$|true|false|[^_a-zA-Z]|.*[^-._a-zA-Z]")$/;"	v	class:Atom
__net_get_random_once	datapath/linux/compat/include/linux/net.h	33;"	d
__netdev_dpdk_vhost_send	lib/netdev-dpdk.c	/^__netdev_dpdk_vhost_send(struct netdev *netdev, struct dp_packet **pkts,$/;"	f	file:
__number_re	python/ovs/json.py	/^    __number_re = re.compile("(-)?(0|[1-9][0-9]*)"$/;"	v	class:Parser
__ovs_flow_tun_info_init	datapath/flow.h	/^static inline void __ovs_flow_tun_info_init(struct ovs_tunnel_info *tun_info,$/;"	f
__ovs_nla_copy_actions	datapath/flow_netlink.c	/^static int __ovs_nla_copy_actions(const struct nlattr *attr,$/;"	f	file:
__ovs_nla_copy_actions	datapath/linux/flow_netlink.c	/^static int __ovs_nla_copy_actions(const struct nlattr *attr,$/;"	f	file:
__ovs_nla_put_key	datapath/flow_netlink.c	/^static int __ovs_nla_put_key(const struct sw_flow_key *swkey,$/;"	f	file:
__ovs_nla_put_key	datapath/linux/flow_netlink.c	/^static int __ovs_nla_put_key(const struct sw_flow_key *swkey,$/;"	f	file:
__packed	datapath/flow.h	/^} __packed;$/;"	v	typeref:struct:arp_eth_header
__packed	datapath/linux/compat/include/linux/compiler-gcc.h	8;"	d
__packet_data	lib/dp-packet.h	/^__packet_data(const struct dp_packet *b)$/;"	f
__packet_set_data	lib/dp-packet.h	/^__packet_set_data(struct dp_packet *b, uint16_t v)$/;"	f
__parse_array_init	python/ovs/json.py	/^    def __parse_array_init(self, token, string):$/;"	m	class:Parser	file:
__parse_array_next	python/ovs/json.py	/^    def __parse_array_next(self, token, unused_string):$/;"	m	class:Parser	file:
__parse_array_value	python/ovs/json.py	/^    def __parse_array_value(self, token, string):$/;"	m	class:Parser	file:
__parse_end	python/ovs/json.py	/^    def __parse_end(self, unused_token, unused_string):$/;"	m	class:Parser	file:
__parse_flow_nlattrs	datapath/flow_netlink.c	/^static int __parse_flow_nlattrs(const struct nlattr *attr,$/;"	f	file:
__parse_flow_nlattrs	datapath/linux/flow_netlink.c	/^static int __parse_flow_nlattrs(const struct nlattr *attr,$/;"	f	file:
__parse_lock_notify	python/ovs/db/idl.py	/^    def __parse_lock_notify(self, params, new_has_lock):$/;"	m	class:Idl	file:
__parse_lock_reply	python/ovs/db/idl.py	/^    def __parse_lock_reply(self, result):$/;"	m	class:Idl	file:
__parse_object_colon	python/ovs/json.py	/^    def __parse_object_colon(self, token, unused_string):$/;"	m	class:Parser	file:
__parse_object_init	python/ovs/json.py	/^    def __parse_object_init(self, token, string):$/;"	m	class:Parser	file:
__parse_object_name	python/ovs/json.py	/^    def __parse_object_name(self, token, string):$/;"	m	class:Parser	file:
__parse_object_next	python/ovs/json.py	/^    def __parse_object_next(self, token, unused_string):$/;"	m	class:Parser	file:
__parse_object_value	python/ovs/json.py	/^    def __parse_object_value(self, token, string):$/;"	m	class:Parser	file:
__parse_start	python/ovs/json.py	/^    def __parse_start(self, token, unused_string):$/;"	m	class:Parser	file:
__parse_uint	python/ovs/db/types.py	/^    def __parse_uint(parser, name, default):$/;"	m	class:BaseType	file:
__parse_update	python/ovs/db/idl.py	/^    def __parse_update(self, update):$/;"	m	class:Idl	file:
__parse_value	python/ovs/json.py	/^    def __parse_value(self, token, string, next_state):$/;"	m	class:Parser	file:
__parser_input	python/ovs/json.py	/^    def __parser_input(self, token, string=None):$/;"	m	class:Parser	file:
__parser_pop	python/ovs/json.py	/^    def __parser_pop(self):$/;"	m	class:Parser	file:
__parser_push	python/ovs/json.py	/^    def __parser_push(self, new_json, next_state):$/;"	m	class:Parser	file:
__percpu	datapath/linux/compat/include/linux/compiler.h	7;"	d
__pif_on_host	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __pif_on_host(self,pif):$/;"	m	class:DatabaseCache	file:
__process_inc_reply	python/ovs/db/idl.py	/^    def __process_inc_reply(self, ops):$/;"	m	class:Transaction	file:
__process_insert_reply	python/ovs/db/idl.py	/^    def __process_insert_reply(self, insert, ops):$/;"	m	class:Transaction	file:
__process_msg	python/ovs/jsonrpc.py	/^    def __process_msg(self):$/;"	m	class:Connection	file:
__process_update	python/ovs/db/idl.py	/^    def __process_update(self, table, uuid, old, new):$/;"	m	class:Idl	file:
__push_array	python/ovs/json.py	/^    def __push_array(self):$/;"	m	class:Parser	file:
__push_object	python/ovs/json.py	/^    def __push_object(self):$/;"	m	class:Parser	file:
__push_stt_header	datapath/linux/compat/stt.c	/^static int __push_stt_header(struct sk_buff *skb, __be64 tun_id,$/;"	f	file:
__push_stt_header	datapath/linux/stt.c	/^static int __push_stt_header(struct sk_buff *skb, __be64 tun_id,$/;"	f	file:
__put_value	python/ovs/json.py	/^    def __put_value(self, value):$/;"	m	class:Parser	file:
__pychecker__	python/ovs/db/idl.py	/^__pychecker__ = 'no-classattr no-objattrs'$/;"	v
__pychecker__	python/ovs/json.py	/^__pychecker__ = 'no-stringiter'$/;"	v
__pychecker__	vtep/ovs-vtep	/^__pychecker__ = 'no-reuseattr'  # Remove in pychecker >= 0.8.19.$/;"	v
__raise_error	python/ovs/db/parser.py	/^    def __raise_error(self, message):$/;"	m	class:Parser	file:
__rcu	datapath/linux/compat/include/linux/compiler.h	11;"	d
__read_mostly	datapath/datapath.c	/^int ovs_net_id __read_mostly;$/;"	v
__read_mostly	datapath/flow_table.c	/^struct kmem_cache *flow_stats_cache __read_mostly;$/;"	v	typeref:struct:flow_stats_cache
__read_mostly	datapath/linux/compat/flow_dissector.c	/^static u32 hashrnd __read_mostly;$/;"	v	file:
__read_mostly	datapath/linux/compat/gre.c	/^static const struct gre_protocol __rcu *gre_proto[GREPROTO_MAX] __read_mostly;$/;"	v	typeref:struct:gre_proto	file:
__read_mostly	datapath/linux/compat/gso.c	/^static int vlan_tso __read_mostly;$/;"	v	file:
__read_mostly	datapath/linux/compat/stt.c	/^static struct nf_hook_ops nf_hook_ops __read_mostly = {$/;"	v	typeref:struct:nf_hook_ops	file:
__read_mostly	datapath/linux/compat/stt.c	/^static struct stt_percpu __percpu *stt_percpu_data __read_mostly;$/;"	v	typeref:struct:stt_percpu_data	file:
__read_mostly	datapath/linux/compat/stt.c	/^static u32 frag_hash_seed __read_mostly;$/;"	v	file:
__read_mostly	datapath/linux/datapath.c	/^int ovs_net_id __read_mostly;$/;"	v
__read_mostly	datapath/linux/flow_dissector.c	/^static u32 hashrnd __read_mostly;$/;"	v	file:
__read_mostly	datapath/linux/flow_table.c	/^struct kmem_cache *flow_stats_cache __read_mostly;$/;"	v	typeref:struct:flow_stats_cache
__read_mostly	datapath/linux/gre.c	/^static const struct gre_protocol __rcu *gre_proto[GREPROTO_MAX] __read_mostly;$/;"	v	typeref:struct:gre_proto	file:
__read_mostly	datapath/linux/gso.c	/^static int vlan_tso __read_mostly;$/;"	v	file:
__read_mostly	datapath/linux/stt.c	/^static struct nf_hook_ops nf_hook_ops __read_mostly = {$/;"	v	typeref:struct:nf_hook_ops	file:
__read_mostly	datapath/linux/stt.c	/^static struct stt_percpu __percpu *stt_percpu_data __read_mostly;$/;"	v	typeref:struct:stt_percpu_data	file:
__read_mostly	datapath/linux/stt.c	/^static u32 frag_hash_seed __read_mostly;$/;"	v	file:
__read_mostly	datapath/linux/vport-internal_dev.c	/^static struct rtnl_link_ops internal_dev_link_ops __read_mostly = {$/;"	v	typeref:struct:internal_dev_link_ops	file:
__read_mostly	datapath/vport-internal_dev.c	/^static struct rtnl_link_ops internal_dev_link_ops __read_mostly = {$/;"	v	typeref:struct:internal_dev_link_ops	file:
__read_pidfile	python/ovs/daemon.py	/^def __read_pidfile(pidfile, delete_if_stale):$/;"	f	file:
__read_xensource_inventory	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __read_xensource_inventory(self):$/;"	m	class:DatabaseCache	file:
__records	tests/MockXenAPI.py	/^    __records = ({"uuid": "6ab1b260-398e-49ba-827b-c7696108964c",$/;"	v	class:VIF
__records	tests/MockXenAPI.py	/^    __records = ({"uuid": "7a793edf-e5f4-4994-a0f9-cee784c0cda3",$/;"	v	class:Pool
__records	tests/MockXenAPI.py	/^    __records = ({"uuid": "9b66c68b-a74e-4d34-89a5-20a8ab352d1e",$/;"	v	class:Network
__records	tests/MockXenAPI.py	/^    __records = ({"uuid": "fcb8a3f6-dc04-41d2-8b8a-55afd2b755b8",$/;"	v	class:VM
__repr__	utilities/ovs-dpctl-top	/^    def __repr__(self):$/;"	m	class:SumData	file:
__reset	python/ovs/poller.py	/^    def __reset(self):$/;"	m	class:Poller	file:
__root_set_size	python/ovs/db/schema.py	/^    def __root_set_size(self):$/;"	m	class:DbSchema	file:
__row_update	python/ovs/db/idl.py	/^    def __row_update(self, table, row, row_json):$/;"	m	class:Idl	file:
__rt_entry_delete	lib/ovs-router.c	/^__rt_entry_delete(const struct cls_rule *cr)$/;"	f	file:
__rte_pktmbuf_init	lib/netdev-dpdk.c	/^__rte_pktmbuf_init(struct rte_mempool *mp,$/;"	f	file:
__scs_connecting	python/ovs/stream.py	/^    def __scs_connecting(self):$/;"	m	class:Stream	file:
__send_lock_request	python/ovs/db/idl.py	/^    def __send_lock_request(self):$/;"	m	class:Idl	file:
__send_monitor_request	python/ovs/db/idl.py	/^    def __send_monitor_request(self):$/;"	m	class:Idl	file:
__send_unlock_request	python/ovs/db/idl.py	/^    def __send_unlock_request(self):$/;"	m	class:Idl	file:
__serialize_string	python/ovs/json.py	/^    def __serialize_string(self, s):$/;"	m	class:_Serializer	file:
__set_error_json	python/ovs/db/idl.py	/^    def __set_error_json(self, json):$/;"	m	class:Transaction	file:
__setattr__	python/ovs/db/idl.py	/^    def __setattr__(self, column_name, value):$/;"	m	class:Row	file:
__sk_user_data	datapath/linux/compat/include/net/sock.h	7;"	d
__skb_cow	datapath/linux/compat/include/linux/skbuff.h	/^static inline int __skb_cow(struct sk_buff *skb, unsigned int headroom,$/;"	f
__skb_fill_page_desc	datapath/linux/compat/include/linux/skbuff.h	/^static inline void __skb_fill_page_desc(struct sk_buff *skb, int i,$/;"	f
__skb_frag_ref	datapath/linux/compat/include/linux/skbuff.h	/^static inline void __skb_frag_ref(skb_frag_t *frag)$/;"	f
__skb_frag_set_page	datapath/linux/compat/include/linux/skbuff.h	/^static inline void __skb_frag_set_page(skb_frag_t *frag, struct page *page)$/;"	f
__skb_frag_unref	datapath/linux/compat/include/linux/skbuff.h	/^static inline void __skb_frag_unref(skb_frag_t *frag)$/;"	f
__skb_get_hash	datapath/linux/compat/include/linux/skbuff.h	288;"	d
__skb_gso_segment	datapath/linux/compat/gso.c	226;"	d	file:
__skb_gso_segment	datapath/linux/compat/include/linux/netdevice.h	97;"	d
__skb_gso_segment	datapath/linux/compat/netdevice.c	107;"	d	file:
__skb_gso_segment	datapath/linux/gso.c	226;"	d	file:
__skb_gso_segment	datapath/linux/netdevice.c	107;"	d	file:
__skb_network_protocol	datapath/linux/compat/gso.c	/^static __be16 __skb_network_protocol(struct sk_buff *skb)$/;"	f	file:
__skb_network_protocol	datapath/linux/gso.c	/^static __be16 __skb_network_protocol(struct sk_buff *skb)$/;"	f	file:
__skb_vlan_pop	datapath/linux/compat/skbuff-openvswitch.c	/^static int __skb_vlan_pop(struct sk_buff *skb, u16 *vlan_tci)$/;"	f	file:
__skb_vlan_pop	datapath/linux/skbuff-openvswitch.c	/^static int __skb_vlan_pop(struct sk_buff *skb, u16 *vlan_tci)$/;"	f	file:
__skb_warn_lro_forwarding	datapath/linux/compat/skbuff-openvswitch.c	/^void __skb_warn_lro_forwarding(const struct sk_buff *skb)$/;"	f
__skb_warn_lro_forwarding	datapath/linux/skbuff-openvswitch.c	/^void __skb_warn_lro_forwarding(const struct sk_buff *skb)$/;"	f
__start_time	python/ovs/vlog.py	/^    __start_time = 0$/;"	v	class:Vlog
__str__	python/ovs/db/data.py	/^    def __str__(self):$/;"	m	class:Datum	file:
__str__	python/ovs/db/types.py	/^    def __str__(self):$/;"	m	class:AtomicType	file:
__str__	python/ovs/jsonrpc.py	/^    def __str__(self):$/;"	m	class:Message	file:
__str__	utilities/ovs-dpctl-top	/^    def __str__(self):$/;"	m	class:SumData	file:
__string_needs_quotes	python/ovs/db/data.py	/^    def __string_needs_quotes(s):$/;"	m	class:Atom	file:
__stt_sock_release	datapath/linux/compat/stt.c	/^static void __stt_sock_release(struct stt_sock *stt_sock)$/;"	f	file:
__stt_sock_release	datapath/linux/stt.c	/^static void __stt_sock_release(struct stt_sock *stt_sock)$/;"	f	file:
__sum16	datapath/linux/compat/include/linux/types.h	/^typedef __u16 __bitwise __sum16;$/;"	t
__sync_add_and_fetch	include/sparse/rte_atomic.h	22;"	d
__sync_synchronize	configure	/^        __sync_synchronize();                   \\$/;"	f
__table_instance_destroy	datapath/flow_table.c	/^static void __table_instance_destroy(struct table_instance *ti)$/;"	f	file:
__table_instance_destroy	datapath/linux/flow_table.c	/^static void __table_instance_destroy(struct table_instance *ti)$/;"	f	file:
__this_module	datapath/linux/openvswitch.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	datapath/linux/vport-geneve.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	datapath/linux/vport-gre.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	datapath/linux/vport-lisp.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	datapath/linux/vport-stt.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__this_module	datapath/linux/vport-vxlan.mod.c	/^struct module __this_module$/;"	v	typeref:struct:module
__timer_wait	python/ovs/poller.py	/^    def __timer_wait(self, msec):$/;"	m	class:Poller	file:
__to_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def __to_xml(self, xml, parent, key, ref, rec, attrs):$/;"	m	class:DatabaseCache	file:
__try_to_segment	datapath/linux/compat/stt.c	/^static int __try_to_segment(struct sk_buff *skb, bool csum_partial,$/;"	f	file:
__try_to_segment	datapath/linux/stt.c	/^static int __try_to_segment(struct sk_buff *skb, bool csum_partial,$/;"	f	file:
__txn_abort_all	python/ovs/db/idl.py	/^    def __txn_abort_all(self):$/;"	m	class:Idl	file:
__txn_process_reply	python/ovs/db/idl.py	/^    def __txn_process_reply(self, msg):$/;"	m	class:Idl	file:
__types	python/ovs/jsonrpc.py	/^    __types = {T_REQUEST: "request",$/;"	v	class:Message
__u16	datapath-windows/ovsext/Types.h	/^typedef uint16 __u16, __be16;$/;"	t
__u32	datapath-windows/ovsext/Types.h	/^typedef uint32 __u32, __be32;$/;"	t
__u64	datapath-windows/ovsext/Types.h	/^typedef uint64 __u64, __be64;$/;"	t
__u8	datapath-windows/ovsext/Types.h	/^typedef uint8 __u8;$/;"	t
__unescape	python/ovs/json.py	/^    __unescape = {'"': u'"',$/;"	v	class:Parser
__update_has_lock	python/ovs/db/idl.py	/^    def __update_has_lock(self, new_has_lock):$/;"	m	class:Idl	file:
__used	datapath/linux/openvswitch.mod.c	/^__used$/;"	v	file:
__used	datapath/linux/openvswitch.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__used	datapath/linux/vport-geneve.mod.c	/^__used$/;"	v	file:
__used	datapath/linux/vport-geneve.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__used	datapath/linux/vport-gre.mod.c	/^__used$/;"	v	file:
__used	datapath/linux/vport-gre.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__used	datapath/linux/vport-lisp.mod.c	/^__used$/;"	v	file:
__used	datapath/linux/vport-lisp.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__used	datapath/linux/vport-stt.mod.c	/^__used$/;"	v	file:
__used	datapath/linux/vport-stt.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__used	datapath/linux/vport-vxlan.mod.c	/^__used$/;"	v	file:
__used	datapath/linux/vport-vxlan.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__utf16_decode_surrogate_pair	python/ovs/json.py	/^    def __utf16_decode_surrogate_pair(leading, trailing):$/;"	m	class:Parser	file:
__validate_arg	python/ovs/jsonrpc.py	/^    def __validate_arg(self, value, name, must_have):$/;"	m	class:Message	file:
__vlan_hwaccel_push_inside	datapath/linux/compat/include/linux/if_vlan.h	/^static inline struct sk_buff *__vlan_hwaccel_push_inside(struct sk_buff *skb)$/;"	f
__vlan_hwaccel_put_tag	datapath/linux/compat/include/linux/if_vlan.h	100;"	d
__vlan_insert_tag	datapath/linux/compat/include/linux/if_vlan.h	151;"	d
__wsum	datapath/linux/compat/include/linux/types.h	/^typedef __u32 __bitwise __wsum;$/;"	t
_add_cert	debian/ovs-monitor-ipsec	/^    def _add_cert(self, host, vals):$/;"	f
_add_psk	debian/ovs-monitor-ipsec	/^    def _add_psk(self, host, psk):$/;"	f
_added_hook	python/ovs/fatal_signal.py	/^_added_hook = False$/;"	v
_atexit_handler	python/ovs/fatal_signal.py	/^def _atexit_handler():$/;"	f
_bool_from_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _bool_from_xml(n):$/;"	f
_bool_to_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _bool_to_xml(xml, parent, tag, val):$/;"	f
_build_message	python/ovs/vlog.py	/^    def _build_message(self, message, destination, level, msg_num):$/;"	m	class:Vlog
_call_hooks	python/ovs/fatal_signal.py	/^def _call_hooks(signr):$/;"	f
_cancel_files	python/ovs/fatal_signal.py	/^def _cancel_files():$/;"	f
_chdir	python/ovs/daemon.py	/^_chdir = True$/;"	v
_check_already_running	python/ovs/daemon.py	/^def _check_already_running():$/;"	f
_check_id	python/ovs/db/schema.py	/^def _check_id(name, json):$/;"	f
_close	python/ovs/unixctl/server.py	/^    def _close(self):$/;"	m	class:UnixctlConnection
_close_standard_fds	python/ovs/daemon.py	/^def _close_standard_fds():$/;"	f
_commafy	python/ovs/db/types.py	/^def _commafy(s):$/;"	f
_config_enabled	datapath/linux/compat/include/linux/kconfig.h	31;"	d
_configure_bond_interface	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def _configure_bond_interface(pif):$/;"	f
_configure_physical_interface	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def _configure_physical_interface(pif):$/;"	f
_configure_pif	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def _configure_pif(pif):$/;"	f
_configure_vlan_interface	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def _configure_vlan_interface(pif):$/;"	f
_create_id	python/ovs/jsonrpc.py	/^    def _create_id():$/;"	m	class:Message
_daemonize_fd	python/ovs/daemon.py	/^_daemonize_fd = None$/;"	v
_db	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^_db = None$/;"	v
_del_cert	debian/ovs-monitor-ipsec	/^    def _del_cert(self, host):$/;"	f
_detach	python/ovs/daemon.py	/^_detach = False$/;"	v
_fatal	python/ovs/daemon.py	/^def _fatal(msg):$/;"	f
_field_type_select_get	utilities/ovs-dpctl-top	/^    def _field_type_select_get(self):$/;"	m	class:Render
_fields_	python/ovs/timeval.py	/^        _fields_ = [$/;"	v	class:timespec
_files	python/ovs/fatal_signal.py	/^_files = {}$/;"	v
_find_method	python/ovs/stream.py	/^    def _find_method(name):$/;"	m	class:Stream
_fork_and_wait_for_startup	python/ovs/daemon.py	/^def _fork_and_wait_for_startup():$/;"	f
_fork_notify_startup	python/ovs/daemon.py	/^def _fork_notify_startup(fd):$/;"	f
_format_field	python/ovs/vlog.py	/^    def _format_field(self, tmp, match, replace):$/;"	m	class:Vlog
_format_time	python/ovs/vlog.py	/^    def _format_time(self, tmp):$/;"	m	class:Vlog
_hooks	python/ovs/fatal_signal.py	/^_hooks = []$/;"	v
_increment	python/ovs/db/idl.py	/^    def _increment(self, row, column):$/;"	m	class:Transaction
_init	python/ovs/fatal_signal.py	/^def _init():$/;"	f
_inited	python/ovs/fatal_signal.py	/^_inited = False$/;"	v
_keep_table_columns	python/ovs/db/idl.py	/^    def _keep_table_columns(self, schema, table_name, columns):$/;"	m	class:SchemaHelper
_make_pidfile	python/ovs/daemon.py	/^def _make_pidfile():$/;"	f
_map_from_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _map_from_xml(n, attrs):$/;"	f
_map_to_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _map_to_xml(xml, parent, tag, val, attrs):$/;"	f
_modifyPoolConfig	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def _modifyPoolConfig(self, session, value):$/;"	m	class:VSwitchControllerDialogue
_monitor	python/ovs/daemon.py	/^_monitor = False$/;"	v
_monitor_daemon	python/ovs/daemon.py	/^def _monitor_daemon(daemon_pid):$/;"	f
_next_id	python/ovs/jsonrpc.py	/^    _next_id = 0$/;"	v	class:Message
_open	python/ovs/stream.py	/^    def _open(suffix, dscp):$/;"	m	class:Stream
_open	python/ovs/stream.py	/^    def _open(suffix, dscp):$/;"	m	class:TCPStream
_open	python/ovs/stream.py	/^    def _open(suffix, dscp):$/;"	m	class:UnixStream
_otherconfig_from_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _otherconfig_from_xml(n, attrs):$/;"	f
_otherconfig_to_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _otherconfig_to_xml(xml, parent, val, attrs):$/;"	f
_overwrite_pidfile	python/ovs/daemon.py	/^_overwrite_pidfile = False$/;"	v
_ovs_command_complete	utilities/ovs-appctl-bashcomp.bash	/^_ovs_command_complete() {$/;"	f
_ovs_vsctl	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl () {$/;"	f
_ovs_vsctl_bashcomp	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_bashcomp () {$/;"	f
_ovs_vsctl_bashcomp_command	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_bashcomp_command () {$/;"	f
_ovs_vsctl_bashcomp_globalopt	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_bashcomp_globalopt () {$/;"	f
_ovs_vsctl_bashcomp_localopt	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_bashcomp_localopt () {$/;"	f
_ovs_vsctl_check_startswith_string	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_check_startswith_string () {$/;"	f
_ovs_vsctl_complete_argument	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_argument() {$/;"	f
_ovs_vsctl_complete_bridge	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_bridge () {$/;"	f
_ovs_vsctl_complete_bridge_fail_mode	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_bridge_fail_mode () {$/;"	f
_ovs_vsctl_complete_column	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_column () {$/;"	f
_ovs_vsctl_complete_column_optkey_value	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_column_optkey_value () {$/;"	f
_ovs_vsctl_complete_dashdash	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_dashdash () {$/;"	f
_ovs_vsctl_complete_filename	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_filename () {$/;"	f
_ovs_vsctl_complete_iface	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_iface () {$/;"	f
_ovs_vsctl_complete_key	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_key () {$/;"	f
_ovs_vsctl_complete_key_given_table_column	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_key_given_table_column () {$/;"	f
_ovs_vsctl_complete_key_value	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_key_value () {$/;"	f
_ovs_vsctl_complete_new	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_new () {$/;"	f
_ovs_vsctl_complete_port	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_port () {$/;"	f
_ovs_vsctl_complete_record	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_record () {$/;"	f
_ovs_vsctl_complete_sysiface	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_sysiface () {$/;"	f
_ovs_vsctl_complete_table	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_table () {$/;"	f
_ovs_vsctl_complete_target	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_target () {$/;"	f
_ovs_vsctl_complete_value	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_complete_value () {$/;"	f
_ovs_vsctl_detect_nonzero_completions	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_detect_nonzero_completions () {$/;"	f
_ovs_vsctl_detect_nospace	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_detect_nospace () {$/;"	f
_ovs_vsctl_expand_command	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_expand_command () {$/;"	f
_ovs_vsctl_get_PS1	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_get_PS1 () {$/;"	f
_ovs_vsctl_get_sys_intf	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_get_sys_intf () {$/;"	f
_ovs_vsctl_possible_completions_of_argument	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_possible_completions_of_argument () {$/;"	f
_ovs_vsctl_process_messages	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_process_messages () {$/;"	f
_ovs_vsctl_trim_compreply	utilities/ovs-vsctl-bashcomp.bash	/^_ovs_vsctl_trim_compreply() {$/;"	f
_pidfile	python/ovs/daemon.py	/^_pidfile = None$/;"	v
_pidfile_dev	python/ovs/daemon.py	/^_pidfile_dev = None$/;"	v
_pidfile_ino	python/ovs/daemon.py	/^_pidfile_ino = None$/;"	v
_process_command	python/ovs/unixctl/server.py	/^    def _process_command(self, request):$/;"	m	class:UnixctlConnection
_process_reply	python/ovs/db/idl.py	/^    def _process_reply(self, msg):$/;"	m	class:Transaction
_reply_impl	python/ovs/unixctl/server.py	/^    def _reply_impl(self, success, body):$/;"	m	class:UnixctlConnection
_row_to_uuid	python/ovs/db/idl.py	/^def _row_to_uuid(value):$/;"	f
_sh	utilities/ovs-dev.py	/^def _sh(*args, **kwargs):$/;"	f
_should_restart	python/ovs/daemon.py	/^def _should_restart(status):$/;"	f
_signal_handler	python/ovs/fatal_signal.py	/^def _signal_handler(signr, _):$/;"	f
_signal_status_msg	python/ovs/process.py	/^def _signal_status_msg(type_, signr):$/;"	f
_str_from_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _str_from_xml(n):$/;"	f
_str_to_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _str_to_xml(xml, parent, tag, val):$/;"	f
_strlist_from_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _strlist_from_xml(n, ltag, itag):$/;"	f
_strlist_to_xml	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def _strlist_to_xml(xml, parent, ltag, itag, val):$/;"	f
_substitute_uuids	python/ovs/db/idl.py	/^    def _substitute_uuids(self, json):$/;"	m	class:Transaction
_transition	python/ovs/reconnect.py	/^    def _transition(self, now, state):$/;"	m	class:Reconnect
_unixctl_help	python/ovs/unixctl/__init__.py	/^def _unixctl_help(conn, unused_argv, unused_aux):$/;"	f
_unixctl_version	python/ovs/unixctl/server.py	/^def _unixctl_version(conn, unused_argv, version):$/;"	f
_unixctl_vlog_list	python/ovs/vlog.py	/^    def _unixctl_vlog_list(conn, unused_argv, unused_aux):$/;"	m	class:Vlog
_unixctl_vlog_reopen	python/ovs/vlog.py	/^    def _unixctl_vlog_reopen(conn, unused_argv, unused_aux):$/;"	m	class:Vlog
_unixctl_vlog_set	python/ovs/vlog.py	/^    def _unixctl_vlog_set(conn, argv, unused_aux):$/;"	m	class:Vlog
_unlink	python/ovs/fatal_signal.py	/^def _unlink(file_):$/;"	f
_unlink_files	python/ovs/fatal_signal.py	/^def _unlink_files():$/;"	f
_updateActiveServers	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def _updateActiveServers(self, session):$/;"	m	class:VSwitchControllerDialogue
_updateThisServer	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def _updateThisServer(self, session):$/;"	m	class:VSwitchControllerDialogue
_using_eventlet_green_select	python/ovs/poller.py	/^    def _using_eventlet_green_select():$/;"	f
_uuid_name_from_uuid	python/ovs/db/idl.py	/^def _uuid_name_from_uuid(uuid):$/;"	f
_uuid_to_row	python/ovs/db/idl.py	/^def _uuid_to_row(atom, base):$/;"	f
_verify_certs	debian/ovs-monitor-ipsec	/^    def _verify_certs(self, vals):$/;"	f
_wait	python/ovs/unixctl/server.py	/^    def _wait(self, poller):$/;"	m	class:UnixctlConnection
_waitpid	python/ovs/daemon.py	/^def _waitpid(pid, options):$/;"	f
_where_uuid_equals	python/ovs/db/idl.py	/^def _where_uuid_equals(uuid):$/;"	f
_write	python/ovs/db/idl.py	/^    def _write(self, row, column, datum):$/;"	m	class:Transaction
a	tests/test-atomic.c	/^static uint32_t a;$/;"	v	file:
a	tests/test-sflow.c	/^    } a;$/;"	m	struct:sflow_addr	typeref:union:sflow_addr::__anon229	file:
aa_configure	lib/ovs-lldp.c	/^aa_configure(const struct aa_settings *s)$/;"	f
aa_get_vlan_queue_size	lib/ovs-lldp.c	/^aa_get_vlan_queue_size(void)$/;"	f
aa_get_vlan_queued	lib/ovs-lldp.c	/^aa_get_vlan_queued(struct ovs_list *list)$/;"	f
aa_mapping	vswitchd/bridge.c	/^struct aa_mapping {$/;"	s	file:
aa_mapping_internal	lib/ovs-lldp.c	/^struct aa_mapping_internal {$/;"	s	file:
aa_mapping_register	lib/ovs-lldp.c	/^aa_mapping_register(void *aux, const struct aa_mapping_settings *s)$/;"	f
aa_mapping_set	ofproto/ofproto-dpif.c	/^aa_mapping_set(struct ofproto *ofproto_ OVS_UNUSED, void *aux,$/;"	f	file:
aa_mapping_set	ofproto/ofproto-provider.h	/^    int (*aa_mapping_set)(struct ofproto *ofproto, void *aux,$/;"	m	struct:ofproto_class
aa_mapping_settings	lib/ovs-lldp.h	/^struct aa_mapping_settings {$/;"	s
aa_mapping_unregister	lib/ovs-lldp.c	/^aa_mapping_unregister(void *aux)$/;"	f
aa_mapping_unregister_mapping	lib/ovs-lldp.c	/^aa_mapping_unregister_mapping(struct lldp *lldp,$/;"	f	file:
aa_mapping_unset	ofproto/ofproto-dpif.c	/^aa_mapping_unset(struct ofproto *ofproto OVS_UNUSED, void *aux)$/;"	f	file:
aa_mapping_unset	ofproto/ofproto-provider.h	/^    int (*aa_mapping_unset)(struct ofproto *ofproto, void *aux);$/;"	m	struct:ofproto_class
aa_print_element_status_port	lib/ovs-lldp.c	/^aa_print_element_status_port(struct ds *ds, struct lldpd_hardware *hw)$/;"	f	file:
aa_refresh_timer	vswitchd/bridge.c	/^static long long int aa_refresh_timer = LLONG_MIN;$/;"	v	file:
aa_settings	lib/ovs-lldp.h	/^struct aa_settings {$/;"	s
aa_status	lib/ovs-lldp.c	/^enum aa_status {$/;"	g	file:
aa_status_to_str	lib/ovs-lldp.c	/^aa_status_to_str(uint8_t status)$/;"	f	file:
aa_vlan_get_queue_size	ofproto/ofproto-dpif.c	/^aa_vlan_get_queue_size(struct ofproto *ofproto OVS_UNUSED)$/;"	f	file:
aa_vlan_get_queue_size	ofproto/ofproto-provider.h	/^    unsigned int (*aa_vlan_get_queue_size)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
aa_vlan_get_queued	ofproto/ofproto-dpif.c	/^aa_vlan_get_queued(struct ofproto *ofproto OVS_UNUSED, struct ovs_list *list)$/;"	f	file:
aa_vlan_get_queued	ofproto/ofproto-provider.h	/^    int (*aa_vlan_get_queued)(struct ofproto *ofproto, struct ovs_list *list);$/;"	m	struct:ofproto_class
abort	python/ovs/db/idl.py	/^    def abort(self):$/;"	m	class:Transaction
abs_builddir	Makefile	/^abs_builddir = \/root\/openvswitch-2.4.0\/ovs$/;"	m
abs_builddir	datapath/Makefile	/^abs_builddir = \/root\/openvswitch-2.4.0\/ovs\/datapath$/;"	m
abs_file_name	lib/util.c	/^abs_file_name(const char *dir, const char *file_name)$/;"	f
abs_file_name	python/ovs/util.py	/^def abs_file_name(dir_, file_name):$/;"	f
abs_srcdir	Makefile	/^abs_srcdir = \/root\/openvswitch-2.4.0\/ovs$/;"	m
abs_srcdir	datapath/Makefile	/^abs_srcdir = \/root\/openvswitch-2.4.0\/ovs\/datapath$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/root\/openvswitch-2.4.0\/ovs$/;"	m
abs_top_builddir	datapath/Makefile	/^abs_top_builddir = \/root\/openvswitch-2.4.0\/ovs$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/root\/openvswitch-2.4.0\/ovs$/;"	m
abs_top_srcdir	datapath/Makefile	/^abs_top_srcdir = \/root\/openvswitch-2.4.0\/ovs$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	datapath/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	datapath/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	datapath/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	configure	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_compute_int	configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
accept	lib/stream-provider.h	/^    int (*accept)(struct pstream *pstream, struct stream **new_streamp);$/;"	m	struct:pstream_class
accept	lib/vconn-provider.h	/^    int (*accept)(struct pvconn *pvconn, struct vconn **new_vconnp);$/;"	m	struct:pvconn_class
accept	python/ovs/stream.py	/^    def accept(self):$/;"	m	class:PassiveStream
accept_cb	lib/stream-fd.c	/^    int (*accept_cb)(int fd, const struct sockaddr_storage *, size_t ss_len,$/;"	m	struct:fd_pstream	file:
accumulate_get	utilities/ovs-dpctl-top	/^    def accumulate_get(self):$/;"	m	class:FlowDB
accumulate_toggle	utilities/ovs-dpctl-top	/^    def accumulate_toggle(self):$/;"	m	class:FlowDB
ack	datapath-windows/ovsext/NetProto.h	/^             ack:1,$/;"	m	struct:TCPHdr
ackNo	datapath-windows/ovsext/Stt.h	/^    UINT64 ackNo;$/;"	m	struct:_OVS_STT_VPORT
ackSeq	datapath-windows/ovsext/Stt.h	/^    UINT32 ackSeq;$/;"	m	struct:_OVS_STT_PKT_KEY
ack_seq	datapath-windows/ovsext/NetProto.h	/^   UINT32    ack_seq;$/;"	m	struct:TCPHdr
ack_seq	datapath/linux/compat/stt.c	/^static __be32 ack_seq(void)$/;"	f	file:
ack_seq	datapath/linux/stt.c	/^static __be32 ack_seq(void)$/;"	f	file:
acl_cmp	ovn/utilities/ovn-nbctl.c	/^acl_cmp(const void *acl1_, const void *acl2_)$/;"	f	file:
acl_entries	vtep/vtep-idl.h	/^	struct vteprec_acl_entry **acl_entries;$/;"	m	struct:vteprec_acl	typeref:struct:vteprec_acl::vteprec_acl_entry
acl_fault_status	vtep/vtep-idl.h	/^	char **acl_fault_status;$/;"	m	struct:vteprec_acl
acl_name	vtep/vtep-idl.h	/^	char *acl_name;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_acl
acle_fault_status	vtep/vtep-idl.h	/^	char **acle_fault_status;$/;"	m	struct:vteprec_acl_entry
acls	ovn/lib/ovn-nb-idl.h	/^	struct nbrec_acl **acls;$/;"	m	struct:nbrec_logical_switch	typeref:struct:nbrec_logical_switch::nbrec_acl
action	datapath-windows/ovsext/User.h	/^    UINT64 action;$/;"	m	struct:_OVS_USER_STATS
action	ovn/lib/ovn-nb-idl.h	/^	char *action;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_acl
action	vtep/vtep-idl.h	/^	char *action;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_acl_entry
actionBufferLen	datapath-windows/ovsext/Flow.h	/^    UINT32 actionBufferLen;  \/\/ used for flow reuse$/;"	m	struct:_OvsFlow
action_array_len	include/openflow/openflow-1.5.h	/^    ovs_be16 action_array_len;      \/* Length of all actions in bytes. *\/$/;"	m	struct:ofp15_bucket
action_context	ovn/lib/actions.c	/^struct action_context {$/;"	s	file:
action_down	xenserver/opt_xensource_libexec_interface-reconfigure	/^def action_down(pif):$/;"	f
action_error	ovn/lib/actions.c	/^action_error(struct action_context *ctx, const char *message, ...)$/;"	f
action_error_handle_common	ovn/lib/actions.c	/^action_error_handle_common(struct action_context *ctx)$/;"	f	file:
action_fifo	datapath/actions.c	/^struct action_fifo {$/;"	s	file:
action_fifo	datapath/linux/actions.c	/^struct action_fifo {$/;"	s	file:
action_fifo_get	datapath/actions.c	/^static struct deferred_action *action_fifo_get(struct action_fifo *fifo)$/;"	f	file:
action_fifo_get	datapath/linux/actions.c	/^static struct deferred_action *action_fifo_get(struct action_fifo *fifo)$/;"	f	file:
action_fifo_init	datapath/actions.c	/^static void action_fifo_init(struct action_fifo *fifo)$/;"	f	file:
action_fifo_init	datapath/linux/actions.c	/^static void action_fifo_init(struct action_fifo *fifo)$/;"	f	file:
action_fifo_is_empty	datapath/actions.c	/^static bool action_fifo_is_empty(const struct action_fifo *fifo)$/;"	f	file:
action_fifo_is_empty	datapath/linux/actions.c	/^static bool action_fifo_is_empty(const struct action_fifo *fifo)$/;"	f	file:
action_fifo_put	datapath/actions.c	/^static struct deferred_action *action_fifo_put(struct action_fifo *fifo)$/;"	f	file:
action_fifo_put	datapath/linux/actions.c	/^static struct deferred_action *action_fifo_put(struct action_fifo *fifo)$/;"	f	file:
action_fifos	datapath/actions.c	/^static struct action_fifo __percpu *action_fifos;$/;"	v	typeref:struct:__percpu	file:
action_fifos	datapath/linux/actions.c	/^static struct action_fifo __percpu *action_fifos;$/;"	v	typeref:struct:__percpu	file:
action_fifos_exit	datapath/actions.c	/^void action_fifos_exit(void)$/;"	f
action_fifos_exit	datapath/linux/actions.c	/^void action_fifos_exit(void)$/;"	f
action_fifos_init	datapath/actions.c	/^int action_fifos_init(void)$/;"	f
action_fifos_init	datapath/linux/actions.c	/^int action_fifos_init(void)$/;"	f
action_force_rewrite	xenserver/opt_xensource_libexec_interface-reconfigure	/^def action_force_rewrite(bridge, config):$/;"	f
action_get_int	ovn/lib/actions.c	/^action_get_int(struct action_context *ctx, int *value)$/;"	f	file:
action_normal	lib/learning-switch.c	/^    bool action_normal;         \/* Use OFPP_NORMAL? *\/$/;"	m	struct:lswitch	file:
action_normal	utilities/ovs-testcontroller.c	/^static bool action_normal = false;$/;"	v	file:
action_rewrite	xenserver/opt_xensource_libexec_interface-reconfigure	/^def action_rewrite():$/;"	f
action_set	ofproto/ofproto-dpif-xlate.c	/^    struct ofpbuf action_set;   \/* Action set. *\/$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::ofpbuf	file:
action_set_has_group	ofproto/ofproto-dpif-xlate.c	/^    bool action_set_has_group;  \/* Action set contains OFPACT_GROUP? *\/$/;"	m	struct:xlate_ctx	file:
action_set_len	ofproto/ofproto-dpif-rid.h	/^    uint32_t action_set_len;      \/* How much of 'ofpacts' consists of an$/;"	m	struct:recirc_state
action_syntax_error	ovn/lib/actions.c	/^action_syntax_error(struct action_context *ctx, const char *message, ...)$/;"	f
action_up	xenserver/opt_xensource_libexec_interface-reconfigure	/^def action_up(pif, force):$/;"	f
actions	datapath-windows/ovsext/DpInternal.h	/^    PNL_ATTR  actions;$/;"	m	struct:OvsFlowPut
actions	datapath-windows/ovsext/DpInternal.h	/^    PNL_ATTR actions;$/;"	m	struct:OvsFlowInfo
actions	datapath-windows/ovsext/DpInternal.h	/^   PNL_ATTR actions;$/;"	m	struct:OvsPacketExecute
actions	datapath-windows/ovsext/Flow.h	/^    NL_ATTR actions[1];$/;"	m	struct:_OvsFlow
actions	datapath/actions.c	/^	const struct nlattr *actions;$/;"	m	struct:deferred_action	typeref:struct:deferred_action::nlattr	file:
actions	datapath/datapath.h	/^	const struct nlattr *actions;$/;"	m	struct:dp_upcall_info	typeref:struct:dp_upcall_info::nlattr
actions	datapath/flow.h	/^	struct nlattr actions[];$/;"	m	struct:sw_flow_actions	typeref:struct:sw_flow_actions::nlattr
actions	datapath/linux/actions.c	/^	const struct nlattr *actions;$/;"	m	struct:deferred_action	typeref:struct:deferred_action::nlattr	file:
actions	include/openflow/openflow-1.2.h	/^    ovs_be32  actions[OFPGT12_N_TYPES];    \/* Bitmaps of supported OFPAT_*. *\/$/;"	m	struct:ofp12_group_features_stats
actions	include/openflow/openflow-common.h	/^    ovs_be32 actions;       \/* Bitmap of supported "ofp_action_type"s.$/;"	m	struct:ofp_switch_features
actions	lib/dpctl.c	/^    struct ofpbuf actions;$/;"	m	struct:actions_for_flow	typeref:struct:actions_for_flow::ofpbuf	file:
actions	lib/dpif-netdev.c	/^    OVSRCU_TYPE(struct dp_netdev_actions *) actions;$/;"	m	struct:dp_netdev_flow	file:
actions	lib/dpif-netdev.c	/^    struct nlattr actions[];    \/* Sequence of OVS_ACTION_ATTR_* attributes. *\/$/;"	m	struct:dp_netdev_actions	typeref:struct:dp_netdev_actions::nlattr	file:
actions	lib/dpif-netlink.c	/^    const struct nlattr *actions;       \/* OVS_FLOW_ATTR_ACTIONS. *\/$/;"	m	struct:dpif_netlink_flow	typeref:struct:dpif_netlink_flow::nlattr	file:
actions	lib/dpif.h	/^    const struct nlattr *actions;   \/* Actions to execute on packet. *\/$/;"	m	struct:dpif_execute	typeref:struct:dpif_execute::nlattr
actions	lib/dpif.h	/^    const struct nlattr *actions;   \/* Actions to perform on flow. *\/$/;"	m	struct:dpif_flow_put	typeref:struct:dpif_flow_put::nlattr
actions	lib/dpif.h	/^    const struct nlattr *actions; \/* Actions, as OVS_ACTION_ATTR_ *\/$/;"	m	struct:dpif_flow	typeref:struct:dpif_flow::nlattr
actions	lib/dpif.h	/^    struct nlattr *actions;    \/* Argument to OVS_ACTION_ATTR_USERSPACE. *\/$/;"	m	struct:dpif_upcall	typeref:struct:dpif_upcall::nlattr
actions	lib/ofp-actions.h	/^    struct ofpact actions[0];$/;"	m	struct:ofpact_conntrack	typeref:struct:ofpact_conntrack::ofpact
actions	lib/ofp-actions.h	/^    struct ofpact actions[];$/;"	m	struct:ofpact_nest	typeref:struct:ofpact_nest::ofpact
actions	ofproto/ofproto-dpif-upcall.c	/^    OVSRCU_TYPE(struct ofpbuf *) actions;$/;"	m	struct:udpif_key	file:
actions	ofproto/ofproto-dpif-upcall.c	/^    const struct nlattr *actions;  \/* Flow actions in DPIF_UC_ACTION Upcalls. *\/$/;"	m	struct:upcall	typeref:struct:upcall::nlattr	file:
actions	ofproto/ofproto-provider.h	/^    const struct rule_actions * const actions;$/;"	m	struct:rule
actions	ovn/lib/ovn-sb-idl.h	/^	char *actions;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_logical_flow
actions	ovn/northd/ovn-northd.c	/^    char *actions;$/;"	m	struct:ovn_lflow	file:
actionsLen	datapath-windows/ovsext/DpInternal.h	/^    uint32_t actionsLen;         \/* Sizeof of buffer for actions. *\/$/;"	m	struct:OvsFlowGetInput
actionsLen	datapath-windows/ovsext/DpInternal.h	/^    uint32_t actionsLen;$/;"	m	struct:OvsFlowDumpInput
actionsLen	datapath-windows/ovsext/DpInternal.h	/^    uint32_t actionsLen;$/;"	m	struct:OvsFlowInfo
actionsLen	datapath-windows/ovsext/DpInternal.h	/^    uint32_t actionsLen;$/;"	m	struct:OvsFlowPut
actionsLen	datapath-windows/ovsext/DpInternal.h	/^   uint32_t actionsLen;$/;"	m	struct:OvsPacketExecute
actionsLen	datapath-windows/ovsext/Flow.h	/^    UINT32 actionsLen;$/;"	m	struct:_OvsFlow
actions_for_flow	lib/dpctl.c	/^struct actions_for_flow {$/;"	s	file:
actions_len	datapath/datapath.h	/^	int actions_len;$/;"	m	struct:dp_upcall_info
actions_len	datapath/flow.h	/^	u32 actions_len;$/;"	m	struct:sw_flow_actions
actions_len	include/openflow/openflow-1.0.h	/^    ovs_be16 actions_len;         \/* Size of action array in bytes. *\/$/;"	m	struct:ofp10_packet_out
actions_len	include/openflow/openflow-1.1.h	/^    ovs_be16 actions_len;     \/* Size of action array in bytes. *\/$/;"	m	struct:ofp11_packet_out
actions_len	lib/dpif-netlink.c	/^    size_t actions_len;$/;"	m	struct:dpif_netlink_flow	file:
actions_len	lib/dpif.h	/^    size_t actions_len;             \/* Length of 'actions' in bytes. *\/$/;"	m	struct:dpif_execute
actions_len	lib/dpif.h	/^    size_t actions_len;             \/* Length of 'actions' in bytes. *\/$/;"	m	struct:dpif_flow_put
actions_len	lib/dpif.h	/^    size_t actions_len;           \/* 'actions' length in bytes. *\/$/;"	m	struct:dpif_flow
actions_output_to_local_port	ofproto/ofproto-dpif-xlate.c	/^actions_output_to_local_port(const struct xlate_ctx *ctx)$/;"	f	file:
actions_parse	ovn/lib/actions.c	/^actions_parse(struct lexer *lexer, const struct shash *symtab,$/;"	f
actions_parse_string	ovn/lib/actions.c	/^actions_parse_string(const char *s, const struct shash *symtab,$/;"	f
active	lib/lacp.c	/^    bool active;                  \/* Active or Passive. *\/$/;"	m	struct:lacp	file:
active	lib/lacp.h	/^    bool active;                      \/* Active or passive mode? *\/$/;"	m	struct:lacp_settings
active	lib/stp.c	/^    bool active;                 \/* Timer in use? *\/$/;"	m	struct:stp_timer	file:
active_count	include/openflow/openflow-1.0.h	/^    ovs_be32 active_count;   \/* Number of active entries. *\/$/;"	m	struct:ofp10_table_stats
active_count	include/openflow/openflow-1.1.h	/^    ovs_be32 active_count;   \/* Number of active entries. *\/$/;"	m	struct:ofp11_table_stats
active_count	include/openflow/openflow-1.2.h	/^    ovs_be32 active_count;   \/* Number of active entries. *\/$/;"	m	struct:ofp12_table_stats
active_count	include/openflow/openflow-1.3.h	/^    ovs_be32 active_count;  \/* Number of active entries. *\/$/;"	m	struct:ofp13_table_stats
active_count	lib/ofp-util.h	/^    uint32_t active_count;      \/* Number of active entries. *\/$/;"	m	struct:ofputil_table_stats
active_mapping_queue	lib/ovs-lldp.h	/^    struct ovs_list     active_mapping_queue;$/;"	m	struct:lldp	typeref:struct:lldp::ovs_list
active_slave	ofproto/bond.c	/^    struct bond_slave *active_slave;$/;"	m	struct:bond	typeref:struct:bond::bond_slave	file:
active_slave_changed	ofproto/bond.c	/^    bool active_slave_changed; \/* Set to true whenever the bond changes$/;"	m	struct:bond	file:
active_slave_mac	ofproto/bond.c	/^    struct eth_addr active_slave_mac;$/;"	m	struct:bond	typeref:struct:bond::eth_addr	file:
active_slave_mac	ofproto/bond.h	/^    struct eth_addr active_slave_mac;$/;"	m	struct:bond_settings	typeref:struct:bond_settings::eth_addr
active_timeout	lib/vswitch-idl.h	/^	int64_t active_timeout;$/;"	m	struct:ovsrec_netflow
active_timeout	ofproto/netflow.c	/^    long long int active_timeout; \/* Timeout for flows that are still active. *\/$/;"	m	struct:netflow	file:
active_timeout	ofproto/netflow.h	/^    int active_timeout;$/;"	m	struct:netflow_options
activity	python/ovs/reconnect.py	/^    def activity(self, now):$/;"	m	class:Reconnect
actor	lib/lacp.c	/^    struct lacp_info actor;   \/* LACP actor information. *\/$/;"	m	struct:lacp_pdu	typeref:struct:lacp_pdu::lacp_info	file:
actorAdmin	lib/sflow.h	/^	uint8_t actorAdmin;$/;"	m	struct:_SFLLACP_portState::__anon158
actorOper	lib/sflow.h	/^	uint8_t actorOper;$/;"	m	struct:_SFLLACP_portState::__anon158
actorSystemID	lib/sflow.h	/^    struct eth_addr actorSystemID;   \/* 6 bytes *\/$/;"	m	struct:_SFLLACP_counters	typeref:struct:_SFLLACP_counters::eth_addr
actor_len	lib/lacp.c	/^    uint8_t actor_len;        \/* Always 20. *\/$/;"	m	struct:lacp_pdu	file:
actor_type	lib/lacp.c	/^    uint8_t actor_type;       \/* Always 1. *\/$/;"	m	struct:lacp_pdu	file:
actset_output	lib/flow.h	/^    ofp_port_t actset_output;   \/* Output port in action set. *\/$/;"	m	struct:flow
actset_output	ofproto/ofproto-dpif-rid.h	/^    ofp_port_t actset_output;     \/* Output port in action set. *\/$/;"	m	struct:recirc_metadata
actual	ovsdb/execution.c	/^    struct ovsdb_row_hash *actual;$/;"	m	struct:wait_auxdata	typeref:struct:wait_auxdata::ovsdb_row_hash	file:
addFlow	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def addFlow(switch, flow):$/;"	f
addID	datapath-windows/ovsext/TunnelFilter.c	/^        PUINT64                 addID;$/;"	m	union:_OVS_TUNFLT_REQUEST::__anon25	file:
add_action	datapath/flow_netlink.c	/^static int add_action(struct sw_flow_actions **sfa, int attrtype,$/;"	f	file:
add_action	datapath/linux/flow_netlink.c	/^static int add_action(struct sw_flow_actions **sfa, int attrtype,$/;"	f	file:
add_allowed_ofp_versions	lib/ofp-version-opt.c	/^add_allowed_ofp_versions(uint32_t bitmap)$/;"	f
add_args	python/ovs/daemon.py	/^def add_args(parser):$/;"	f
add_args	python/ovs/vlog.py	/^def add_args(parser):$/;"	f
add_bfd	vtep/ovs-vtep	/^def add_bfd(remote_ip):$/;"	f
add_binding	vtep/ovs-vtep	/^def add_binding(binding, ls):$/;"	f
add_bridge_mappings	ovn/controller/patch.c	/^add_bridge_mappings(struct controller_ctx *ctx,$/;"	f	file:
add_bridge_to_cache	utilities/ovs-vsctl.c	/^add_bridge_to_cache(struct vsctl_context *vsctl_ctx,$/;"	f	file:
add_cmp_flow	ovn/lib/expr.c	/^add_cmp_flow(const struct expr *cmp, const struct simap *ports,$/;"	f	file:
add_column	ovsdb/ovsdb-client.c	/^add_column(const char *server, const struct ovsdb_column *column,$/;"	f	file:
add_column	ovsdb/table.c	/^add_column(struct ovsdb_table_schema *ts, struct ovsdb_column *column)$/;"	f	file:
add_column_noalert	ovn/northd/ovn-northd.c	/^add_column_noalert(struct ovsdb_idl *idl,$/;"	f	file:
add_command	tests/ovstest.c	/^add_command(struct ovs_cmdl_command *cmd)$/;"	f	file:
add_comment	python/ovs/db/idl.py	/^    def add_comment(self, comment):$/;"	m	class:Transaction
add_conjunction	lib/ofp-actions.c	/^add_conjunction(struct ofpbuf *out,$/;"	f	file:
add_conjunction	ovn/lib/expr.c	/^add_conjunction(const struct expr *and, const struct simap *ports,$/;"	f	file:
add_deferred_actions	datapath/actions.c	/^static struct deferred_action *add_deferred_actions(struct sk_buff *skb,$/;"	f	file:
add_deferred_actions	datapath/linux/actions.c	/^static struct deferred_action *add_deferred_actions(struct sk_buff *skb,$/;"	f	file:
add_del_bridges	vswitchd/bridge.c	/^add_del_bridges(const struct ovsrec_open_vswitch *cfg)$/;"	f	file:
add_del_mcast_entry	vtep/vtep-ctl.c	/^add_del_mcast_entry(struct ctl_context *ctx, bool add, bool local)$/;"	f	file:
add_disjunction	ovn/lib/expr.c	/^add_disjunction(const struct expr *or, const struct simap *ports,$/;"	f	file:
add_double	ovsdb/mutation.c	/^add_double(double *x, double y)$/;"	f	file:
add_entry	debian/ovs-monitor-ipsec	/^    def add_entry(self, host, vals):$/;"	f
add_entry	debian/ovs-monitor-ipsec	/^    def add_entry(self, local_ip, remote_ip, vals):$/;"	m	class:IPsec
add_file_to_unlink	python/ovs/fatal_signal.py	/^def add_file_to_unlink(file):$/;"	f
add_group	ofproto/ofproto.c	/^add_group(struct ofproto *ofproto, struct ofputil_group_mod *gm)$/;"	f	file:
add_hook	python/ovs/fatal_signal.py	/^def add_hook(hook, cancel, run_at_exit):$/;"	f
add_id_to_iface	ofproto/netflow.c	/^    bool add_id_to_iface;         \/* Put the 7 least significiant bits of$/;"	m	struct:netflow	file:
add_id_to_iface	ofproto/netflow.h	/^    bool add_id_to_iface;$/;"	m	struct:netflow_options
add_id_to_interface	lib/vswitch-idl.h	/^	bool add_id_to_interface;$/;"	m	struct:ovsrec_netflow
add_iface_to_cache	utilities/ovs-vsctl.c	/^add_iface_to_cache(struct vsctl_context *vsctl_ctx, struct vsctl_port *parent,$/;"	f	file:
add_int	ovsdb/mutation.c	/^add_int(int64_t *x, int64_t y)$/;"	f	file:
add_internal_flows	ofproto/ofproto-dpif.c	/^add_internal_flows(struct ofproto_dpif *ofproto)$/;"	f	file:
add_internal_miss_flow	ofproto/ofproto-dpif.c	/^add_internal_miss_flow(struct ofproto_dpif *ofproto, int id,$/;"	f	file:
add_lbinding	vtep/ovs-vtep	/^    def add_lbinding(self, lbinding):$/;"	m	class:Logical_Switch
add_logical_patch_ports	ovn/controller/patch.c	/^add_logical_patch_ports(struct controller_ctx *ctx,$/;"	f	file:
add_logical_register	ovn/controller/lflow.c	/^add_logical_register(struct shash *symtab, enum mf_field_id id)$/;"	f	file:
add_ls_binding_to_cache	vtep/vtep-ctl.c	/^add_ls_binding_to_cache(struct vtep_ctl_port *port,$/;"	f	file:
add_lswitch_to_cache	vtep/vtep-ctl.c	/^add_lswitch_to_cache(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
add_manager_options	ovsdb/ovsdb-server.c	/^add_manager_options(struct shash *remotes, const struct ovsdb_row *row)$/;"	f	file:
add_managers	utilities/ovs-ctl	/^add_managers () {$/;"	f
add_managers	utilities/ovs-ctl.in	/^add_managers () {$/;"	f
add_mcast_entry	vtep/vtep-ctl.c	/^add_mcast_entry(struct ctl_context *ctx,$/;"	f	file:
add_mcast_mac_to_cache	vtep/vtep-ctl.c	/^add_mcast_mac_to_cache(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
add_monitored_table	ovsdb/ovsdb-client.c	/^add_monitored_table(int argc, char *argv[],$/;"	f	file:
add_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation add_mutation = {$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
add_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation add_mutation;$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
add_nested_action_end	datapath/flow_netlink.c	/^static inline void add_nested_action_end(struct sw_flow_actions *sfa,$/;"	f	file:
add_nested_action_end	datapath/linux/flow_netlink.c	/^static inline void add_nested_action_end(struct sw_flow_actions *sfa,$/;"	f	file:
add_nested_action_start	datapath/flow_netlink.c	/^static inline int add_nested_action_start(struct sw_flow_actions **sfa,$/;"	f	file:
add_nested_action_start	datapath/linux/flow_netlink.c	/^static inline int add_nested_action_start(struct sw_flow_actions **sfa,$/;"	f	file:
add_ofp_port	vswitchd/bridge.c	/^add_ofp_port(ofp_port_t port, ofp_port_t *ports, size_t *n, size_t *allocated)$/;"	f	file:
add_option	lib/db-ctl-base.c	/^add_option(struct option **optionsp, size_t *n_optionsp,$/;"	f	file:
add_ploc_to_cache	vtep/vtep-ctl.c	/^add_ploc_to_cache(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
add_ploc_to_mcast_mac	vtep/vtep-ctl.c	/^add_ploc_to_mcast_mac(struct vtep_ctl_mcast_mac *mcast_mac,$/;"	f	file:
add_port	utilities/ovs-docker	/^add_port () {$/;"	f
add_port	utilities/ovs-vsctl.c	/^add_port(struct ctl_context *ctx,$/;"	f	file:
add_port	vtep/vtep-ctl.c	/^add_port(struct ctl_context *ctx, const char *ps_name,$/;"	f	file:
add_port_queue	utilities/ovs-testcontroller.c	/^add_port_queue(char *s)$/;"	f	file:
add_port_to_cache	utilities/ovs-vsctl.c	/^add_port_to_cache(struct vsctl_context *vsctl_ctx, struct vsctl_bridge *parent,$/;"	f	file:
add_port_to_cache	vtep/vtep-ctl.c	/^add_port_to_cache(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
add_ports	tests/testsuite	/^add_ports () {$/;"	f
add_pr_rule	ofproto/bond.c	/^add_pr_rule(struct bond *bond, const struct match *match,$/;"	f	file:
add_pswitch_to_cache	vtep/vtep-ctl.c	/^add_pswitch_to_cache(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
add_ref_table	lib/ovsdb-idl.c	/^add_ref_table(struct ovsdb_idl *idl, const struct ovsdb_base_type *base)$/;"	f	file:
add_remote	ovsdb/ovsdb-server.c	/^add_remote(struct shash *remotes, const char *target)$/;"	f	file:
add_remote_mac	vtep/ovs-vtep	/^    def add_remote_mac(self, mac, tunnel):$/;"	m	class:Logical_Switch
add_route	ovn/northd/ovn-northd.c	/^add_route(struct hmap *lflows, struct ovn_datapath *od,$/;"	f	file:
add_router	lib/netdev-provider.h	/^    int (*add_router)(struct netdev *netdev, struct in_addr router);$/;"	m	struct:netdev_class
add_rule	ofproto/in-band.c	/^add_rule(struct in_band *ib, const struct match *match, int priority)$/;"	f	file:
add_snooper	ofproto/connmgr.c	/^add_snooper(struct connmgr *mgr, struct vconn *vconn)$/;"	f	file:
add_sort_criterion	utilities/ovs-ofctl.c	/^add_sort_criterion(enum sort_order order, const char *field)$/;"	f	file:
add_symbol	ovn/lib/expr.c	/^add_symbol(struct shash *symtab, const char *name, int width,$/;"	f	file:
add_syslog_handler	python/ovs/vlog.py	/^    def add_syslog_handler(facility=None):$/;"	m	class:Vlog
add_tnlid	ovn/northd/ovn-northd.c	/^add_tnlid(struct hmap *set, uint32_t tnlid)$/;"	f	file:
add_to_bridge	xenserver/etc_xensource_scripts_vif	/^add_to_bridge()$/;"	f
add_top_level_commands	tests/ovstest.c	/^add_top_level_commands(void)$/;"	f	file:
add_tunnel	vtep/ovs-vtep	/^    def add_tunnel(self, tunnel):$/;"	m	class:Logical_Switch
add_ucast_entry	vtep/vtep-ctl.c	/^add_ucast_entry(struct ctl_context *ctx, bool local)$/;"	f	file:
add_version	lib/classifier-private.h	/^    const cls_version_t add_version;        \/* Version rule was added in. *\/$/;"	m	struct:cls_match
add_vlan_splinter_ports	vswitchd/bridge.c	/^add_vlan_splinter_ports(struct bridge *br,$/;"	f	file:
add_weak_ref	ovsdb/transaction.c	/^add_weak_ref(struct ovsdb_txn *txn,$/;"	f	file:
added_hook	lib/fatal-signal.c	/^static bool added_hook;$/;"	v	file:
addr	datapath/flow.h	/^			} addr;$/;"	m	struct:sw_flow_key::__anon33::__anon34	typeref:struct:sw_flow_key::__anon33::__anon34::__anon35
addr	datapath/flow.h	/^			} addr;$/;"	m	struct:sw_flow_key::__anon33::__anon37	typeref:struct:sw_flow_key::__anon33::__anon37::__anon38
addr	lib/mcast-snooping.h	/^    struct in6_addr addr;$/;"	m	struct:mcast_group	typeref:struct:mcast_group::in6_addr
addr	lib/sflow.h	/^    u_char addr[16];$/;"	m	struct:__anon154
addr	lib/sflow.h	/^    u_int32_t addr;$/;"	m	struct:__anon153
addr2line	utilities/ovs-parse-backtrace	/^def addr2line(binary, addr):$/;"	f
addr2line_cache	utilities/ovs-parse-backtrace	/^addr2line_cache = {}  # None if addr2line is missing or broken.$/;"	v
addr4	lib/tnl-ports.c	/^    ovs_be32 addr4;$/;"	m	struct:ip_device	file:
addr6	lib/tnl-ports.c	/^    struct in6_addr addr6;$/;"	m	struct:ip_device	typeref:struct:ip_device::in6_addr	file:
addr_is_ipv6	lib/socket-util.c	/^addr_is_ipv6(const char *host_name)$/;"	f
addr_list	lib/tnl-ports.c	/^static struct ovs_list addr_list;$/;"	v	typeref:struct:ovs_list	file:
address	lib/netdev-dummy.c	/^    struct in_addr address, netmask;$/;"	m	struct:netdev_dummy	typeref:struct:netdev_dummy::in_addr	file:
address	lib/netdev-linux.c	/^    struct in_addr address, netmask;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::in_addr	file:
address	lib/sflow.h	/^    SFLAddress_value address;$/;"	m	struct:_SFLAddress
address	ofproto/ofproto.h	/^    rstp_identifier address;$/;"	m	struct:ofproto_rstp_settings
addressEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t addressEncodingLength(SFLAddress *addr) {$/;"	f	file:
address_family	tests/test-l7.py	/^    address_family = socket.AF_INET6$/;"	v	class:TCPServerV6
addresses	ovn/lib/ovn-nb-idl.h	/^	char **addresses;$/;"	m	struct:nbrec_logical_port
adjust_limits	ofproto/pinsched.c	/^adjust_limits(int *rate_limit, int *burst_limit)$/;"	f	file:
admin_edge_port	ofproto/ofproto.h	/^    bool admin_edge_port;$/;"	m	struct:ofproto_port_rstp_settings
admin_p2p_mac_state	ofproto/ofproto.h	/^    uint8_t admin_p2p_mac_state;$/;"	m	struct:ofproto_port_rstp_settings
admin_port_state	lib/rstp-common.h	/^enum admin_port_state {$/;"	g
admin_port_state	ofproto/ofproto.h	/^    bool admin_port_state;$/;"	m	struct:ofproto_port_rstp_settings
admin_state	lib/vswitch-idl.h	/^	char *admin_state;$/;"	m	struct:ovsrec_interface
advance_txq	ofproto/pinsched.c	/^advance_txq(struct pinsched *ps)$/;"	f	file:
advertise	include/openflow/openflow-1.0.h	/^    ovs_be32 advertise;     \/* Bitmap of "ofp_port_features"s.  Zero all$/;"	m	struct:ofp10_port_mod
advertise	include/openflow/openflow-1.1.h	/^    ovs_be32 advertise;     \/* Bitmap of OFPPF_* and OFPPF11_*.  Zero all bits$/;"	m	struct:ofp11_port_mod
advertise	include/openflow/openflow-1.4.h	/^    ovs_be32      advertise;  \/* Bitmap of OFPPF_*.  Zero all bits to prevent$/;"	m	struct:ofp14_port_mod_prop_ethernet
advertise	lib/ofp-util.h	/^    enum netdev_features advertise;$/;"	m	struct:ofputil_port_mod	typeref:enum:ofputil_port_mod::netdev_features
advertised	include/openflow/openflow-1.0.h	/^    ovs_be32 advertised;    \/* Features being advertised by the port. *\/$/;"	m	struct:ofp10_phy_port
advertised	include/openflow/openflow-1.1.h	/^    ovs_be32 advertised;    \/* Features being advertised by the port. *\/$/;"	m	struct:ofp11_port
advertised	include/openflow/openflow-1.4.h	/^    ovs_be32 advertised;    \/* Features being advertised by the port. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
advertised	lib/netdev-linux.c	/^    enum netdev_features advertised; \/* Cached from ETHTOOL_GSET. *\/$/;"	m	struct:netdev_linux	typeref:enum:netdev_linux::netdev_features	file:
advertised	lib/ofp-util.h	/^    enum netdev_features advertised; \/* Features advertised by the port. *\/$/;"	m	struct:ofputil_phy_port	typeref:enum:ofputil_phy_port::netdev_features
aes128	lib/aes128.h	/^struct aes128 {$/;"	s
aes128_encrypt	lib/aes128.c	/^aes128_encrypt(const struct aes128 *aes, const void *input_, void *output_)$/;"	f
aes128_schedule	lib/aes128.c	/^aes128_schedule(struct aes128 *aes, const uint8_t key[16])$/;"	f
af_inet_ifreq_ioctl	lib/socket-util-unix.c	/^af_inet_ifreq_ioctl(const char *name, struct ifreq *ifr, unsigned long int cmd,$/;"	f
af_inet_ioctl	lib/socket-util-unix.c	/^af_inet_ioctl(unsigned long int command, const void *arg)$/;"	f
af_link_ioctl	lib/netdev-bsd.c	/^af_link_ioctl(unsigned long command, const void *arg)$/;"	f
af_packet_sock	lib/netdev-linux.c	/^af_packet_sock(void)$/;"	f	file:
age_secs	ofproto/ofproto.c	/^age_secs(long long int age_ms)$/;"	f	file:
ageing_time	ofproto/ofproto.h	/^    uint32_t ageing_time;$/;"	m	struct:ofproto_rstp_settings
agent	lib/sflow_api.h	/^    struct _SFLAgent *agent;    \/* pointer to my agent *\/$/;"	m	struct:_SFLReceiver	typeref:struct:_SFLReceiver::_SFLAgent
agent	lib/sflow_api.h	/^    struct _SFLAgent *agent; \/* pointer to my agent *\/$/;"	m	struct:_SFLPoller	typeref:struct:_SFLPoller::_SFLAgent
agent	lib/sflow_api.h	/^    struct _SFLAgent *agent; \/* pointer to my agent *\/$/;"	m	struct:_SFLSampler	typeref:struct:_SFLSampler::_SFLAgent
agent	lib/vswitch-idl.h	/^	char *agent;$/;"	m	struct:ovsrec_sflow
agentAddr	tests/test-sflow.c	/^    struct sflow_addr agentAddr;$/;"	m	struct:sflow_xdr	typeref:struct:sflow_xdr::sflow_addr	file:
agentIPStr	tests/test-sflow.c	/^    char agentIPStr[INET6_ADDRSTRLEN + 2];$/;"	m	struct:sflow_xdr	file:
agent_address	lib/sflow.h	/^    SFLAddress agent_address;        \/* IP address of sampling agent *\/$/;"	m	struct:_SFLSample_datagram_hdr
agent_device	ofproto/ofproto.h	/^    char *agent_device;$/;"	m	struct:ofproto_sflow_options
aggregate	lib/ofp-util.h	/^    bool aggregate;             \/* Aggregate results? *\/$/;"	m	struct:ofputil_flow_stats_request
aiocb_head	lib/async-append-aio.c	/^    unsigned int aiocb_head, aiocb_tail;$/;"	m	struct:async_append	file:
aiocb_tail	lib/async-append-aio.c	/^    unsigned int aiocb_head, aiocb_tail;$/;"	m	struct:async_append	file:
aiocbs	lib/async-append-aio.c	/^    struct aiocb *aiocbs;$/;"	m	struct:async_append	typeref:struct:async_append::aiocb	file:
aix_post_process_depfile	build-aux/depcomp	/^aix_post_process_depfile ()$/;"	f
alg	lib/ofp-actions.c	/^    ovs_be16 alg;               \/* Well-known port number for the protocol.$/;"	m	struct:nx_action_conntrack	file:
algorithm	lib/ofp-actions.c	/^    ovs_be16 algorithm;         \/* One of NX_BD_ALG_*. *\/$/;"	m	struct:nx_action_bundle	file:
algorithm	lib/ofp-actions.c	/^    ovs_be16 algorithm;         \/* One of NX_MP_ALG_*. *\/$/;"	m	struct:nx_action_multipath	file:
algorithm	lib/ofp-actions.h	/^    enum nx_bd_algorithm algorithm;$/;"	m	struct:ofpact_bundle	typeref:enum:ofpact_bundle::nx_bd_algorithm
algorithm	lib/ofp-actions.h	/^    enum nx_mp_algorithm algorithm;$/;"	m	struct:ofpact_multipath	typeref:enum:ofpact_multipath::nx_mp_algorithm
algorithm_hrw	lib/multipath.c	/^algorithm_hrw(uint32_t hash, unsigned int n_links)$/;"	f	file:
algorithm_iter_hash	lib/multipath.c	/^algorithm_iter_hash(uint32_t hash, unsigned int n_links, unsigned int modulo)$/;"	f	file:
all	lib/sflow.h	/^    uint32_t all;$/;"	m	union:_SFLLACP_portState
all_bfds__	lib/bfd.c	/^static struct hmap all_bfds__ = HMAP_INITIALIZER(&all_bfds__);$/;"	v	typeref:struct:hmap	file:
all_bonds__	ofproto/bond.c	/^static struct hmap all_bonds__ = HMAP_INITIALIZER(&all_bonds__);$/;"	v	typeref:struct:hmap	file:
all_bridges	vswitchd/bridge.c	/^static struct hmap all_bridges = HMAP_INITIALIZER(&all_bridges);$/;"	v	typeref:struct:hmap	file:
all_cfms__	lib/cfm.c	/^static struct hmap all_cfms__ = HMAP_INITIALIZER(&all_cfms__);$/;"	v	typeref:struct:hmap	file:
all_commands	lib/db-ctl-base.c	/^static struct shash all_commands = SHASH_INITIALIZER(&all_commands);$/;"	v	typeref:struct:shash	file:
all_commands	lib/dpctl.c	/^static const struct dpctl_command all_commands[] = {$/;"	v	typeref:struct:dpctl_command	file:
all_commands	ovsdb/ovsdb-client.c	/^static const struct ovsdb_client_command all_commands[] = {$/;"	v	typeref:struct:ovsdb_client_command	file:
all_commands	ovsdb/ovsdb-tool.c	/^static const struct ovs_cmdl_command all_commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
all_commands	tests/test-jsonrpc.c	/^static struct ovs_cmdl_command all_commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
all_commands	tests/test-ovsdb.c	/^static struct ovs_cmdl_command all_commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
all_commands	tests/test-reconnect.c	/^static const struct ovs_cmdl_command all_commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
all_commands	utilities/ovs-benchmark.c	/^static const struct ovs_cmdl_command all_commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
all_commands	utilities/ovs-ofctl.c	/^static const struct ovs_cmdl_command all_commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
all_conns	ofproto/connmgr.c	/^    struct ovs_list all_conns;   \/* All controllers. *\/$/;"	m	struct:connmgr	typeref:struct:connmgr::ovs_list	file:
all_cpu_cores	lib/ovs-numa.c	/^static struct hmap all_cpu_cores = HMAP_INITIALIZER(&all_cpu_cores);$/;"	v	typeref:struct:hmap	file:
all_dbs	ovsdb/ovsdb-server.c	/^    struct shash *all_dbs;$/;"	m	struct:server_config	typeref:struct:server_config::shash	file:
all_dpif_backers	ofproto/ofproto-dpif.c	/^static struct shash all_dpif_backers = SHASH_INITIALIZER(&all_dpif_backers);$/;"	v	typeref:struct:shash	file:
all_frags	lib/meta-flow.c	/^static const struct frag_handling all_frags[] = {$/;"	v	typeref:struct:frag_handling	file:
all_lacps__	lib/lacp.c	/^static struct ovs_list all_lacps__ = OVS_LIST_INITIALIZER(&all_lacps__);$/;"	v	typeref:struct:ovs_list	file:
all_lldps__	lib/ovs-lldp.c	/^static struct hmap all_lldps__ = HMAP_INITIALIZER(&all_lldps__);$/;"	v	typeref:struct:hmap	file:
all_mappings__	lib/ovs-lldp.c	/^static struct hmap all_mappings__ = HMAP_INITIALIZER(&all_mappings__);$/;"	v	typeref:struct:hmap	file:
all_notifiers	lib/netlink-notifier.c	/^    struct ovs_list all_notifiers;   \/* All nln notifiers. *\/$/;"	m	struct:nln	typeref:struct:nln::ovs_list	file:
all_notifiers	lib/rtbsd.c	/^static struct ovs_list all_notifiers = OVS_LIST_INITIALIZER(&all_notifiers);$/;"	v	typeref:struct:ovs_list	file:
all_numa_nodes	lib/ovs-numa.c	/^static struct hmap all_numa_nodes = HMAP_INITIALIZER(&all_numa_nodes);$/;"	v	typeref:struct:hmap	file:
all_ofproto_dpifs	ofproto/ofproto-dpif.c	/^static struct hmap all_ofproto_dpifs = HMAP_INITIALIZER(&all_ofproto_dpifs);$/;"	v	typeref:struct:hmap	file:
all_ofproto_dpifs_node	ofproto/ofproto-dpif.c	/^    struct hmap_node all_ofproto_dpifs_node; \/* In 'all_ofproto_dpifs'. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::hmap_node	file:
all_ofprotos	ofproto/ofproto.c	/^static struct hmap all_ofprotos = HMAP_INITIALIZER(&all_ofprotos);$/;"	v	typeref:struct:hmap	file:
all_processes	lib/process.c	/^static struct ovs_list all_processes = OVS_LIST_INITIALIZER(&all_processes);$/;"	v	typeref:struct:ovs_list	file:
all_rstps__	lib/rstp.c	/^static struct ovs_list all_rstps__ = OVS_LIST_INITIALIZER(&all_rstps__);$/;"	v	typeref:struct:ovs_list	file:
all_slashes_name	lib/util.c	/^all_slashes_name(const char *s)$/;"	f	file:
all_stps__	lib/stp.c	/^static struct ovs_list all_stps__ = OVS_LIST_INITIALIZER(&all_stps__);$/;"	v	typeref:struct:ovs_list	file:
all_udpifs	ofproto/ofproto-dpif-upcall.c	/^static struct ovs_list all_udpifs = OVS_LIST_INITIALIZER(&all_udpifs);$/;"	v	typeref:struct:ovs_list	file:
alloc	lib/netdev-provider.h	/^    struct netdev *(*alloc)(void);$/;"	m	struct:netdev_class	typeref:struct:netdev_class::alloc
alloc	ofproto/ofproto-dpif.c	/^alloc(void)$/;"	f	file:
alloc	ofproto/ofproto-provider.h	/^    struct ofproto *(*alloc)(void);$/;"	m	struct:ofproto_class	typeref:struct:ofproto_class::alloc
allocFn	lib/sflow_api.h	/^    allocFn_t allocFn;$/;"	m	struct:_SFLAgent
allocFn_t	lib/sflow_api.h	/^typedef void *(*allocFn_t)(void *magic,               \/* callback to allocate space on heap *\/$/;"	t
alloc_buckets	datapath/flow_table.c	/^static struct flex_array *alloc_buckets(unsigned int n_buckets)$/;"	f	file:
alloc_buckets	datapath/linux/flow_table.c	/^static struct flex_array *alloc_buckets(unsigned int n_buckets)$/;"	f	file:
alloc_default_atoms	lib/ovsdb-data.c	/^alloc_default_atoms(enum ovsdb_atomic_type type, size_t n)$/;"	f	file:
alloc_map	lib/tun-metadata.c	/^    unsigned long alloc_map[BITMAP_N_LONGS(TUN_METADATA_TOT_OPT_SIZE \/ 4)];$/;"	m	struct:tun_table	file:
alloc_netdev	datapath/linux/compat/include/linux/netdevice.h	30;"	d
alloc_netdev	datapath/linux/compat/include/linux/netdevice.h	32;"	d
alloc_offset	lib/tun-metadata.h	/^    int alloc_offset;           \/* Byte offset into 'opts', multiple of 4.  *\/$/;"	m	struct:tun_metadata_allocation
alloc_ofp_port	ofproto/ofproto.c	/^alloc_ofp_port(struct ofproto *ofproto, const char *netdev_name)$/;"	f	file:
alloc_port_no	ofproto/ofproto-provider.h	/^    uint16_t alloc_port_no;     \/* Last allocated OpenFlow port number. *\/$/;"	m	struct:ofproto
alloc_xid	lib/ofp-msgs.c	/^alloc_xid(void)$/;"	f	file:
allocate_row	ovsdb/row.c	/^allocate_row(const struct ovsdb_table *table)$/;"	f	file:
allocate_tnlid	ovn/northd/ovn-northd.c	/^allocate_tnlid(struct hmap *set, const char *name, uint32_t max,$/;"	f	file:
allocated	lib/dynamic-string.h	/^    size_t allocated;   \/* Bytes allocated, not including null terminator. *\/$/;"	m	struct:ds
allocated	lib/heap.h	/^    size_t allocated;           \/* Max 'n' before 'array' must be enlarged. *\/$/;"	m	struct:heap
allocated	lib/ofpbuf.h	/^    uint32_t allocated;         \/* Number of bytes allocated. *\/$/;"	m	struct:ofpbuf
allocated	lib/pvector.h	/^    size_t allocated;  \/* Number of allocated entries. *\/$/;"	m	struct:pvector_impl
allocated	lib/svec.h	/^    size_t allocated;$/;"	m	struct:svec
allocated	ovn/lib/expr.h	/^    size_t n, allocated;$/;"	m	struct:expr_match
allocated_columns	lib/table.h	/^    size_t n_columns, allocated_columns;$/;"	m	struct:table
allocated_columns	ovsdb/column.h	/^    size_t n_columns, allocated_columns;$/;"	m	struct:ovsdb_column_set
allocated_commands	tests/ovstest.c	/^static size_t allocated_commands = 0;$/;"	v	file:
allocated_coverage_counters	lib/coverage.c	/^static size_t allocated_coverage_counters = 0;$/;"	v	file:
allocated_criteria	utilities/ovs-ofctl.c	/^static size_t n_criteria, allocated_criteria;$/;"	v	file:
allocated_height	lib/json.c	/^    size_t height, allocated_height;$/;"	m	struct:json_parser	file:
allocated_neoteric_ifaces	utilities/ovs-vsctl.c	/^static size_t allocated_neoteric_ifaces;$/;"	v	file:
allocated_ofproto_classes	ofproto/ofproto.c	/^static size_t allocated_ofproto_classes;$/;"	v	file:
allocated_ports	ovn/northd/ovn-northd.c	/^    size_t n_ports, allocated_ports;$/;"	m	struct:ovn_multicast	file:
allocated_recs	vswitchd/bridge.c	/^static size_t n_recs, allocated_recs;$/;"	v	file:
allocated_rows	lib/table.h	/^    size_t n_rows, allocated_rows;$/;"	m	struct:table
allocated_rows	ovsdb/row.h	/^    size_t n_rows, allocated_rows;$/;"	m	struct:ovsdb_row_set
allocated_rules	tests/test-classifier.c	/^    size_t allocated_rules;$/;"	m	struct:tcls	file:
allocation_size	lib/ovsdb-idl-provider.h	/^    size_t allocation_size;$/;"	m	struct:ovsdb_idl_table_class
allowed_protocols	utilities/ovs-ofctl.c	/^static enum ofputil_protocol allowed_protocols = OFPUTIL_P_ANY;$/;"	v	typeref:enum:ofputil_protocol	file:
allowed_versions	lib/ofp-version-opt.c	/^static uint32_t allowed_versions = 0;$/;"	v	file:
allowed_versions	lib/rconn.c	/^    uint32_t allowed_versions;$/;"	m	struct:rconn	file:
allowed_versions	lib/vconn-provider.h	/^    uint32_t allowed_versions;  \/* Bitmap of versions we will accept. *\/$/;"	m	struct:vconn
allowed_versions	lib/vconn-provider.h	/^    uint32_t allowed_versions;$/;"	m	struct:pvconn
allowed_versions	ofproto/connmgr.c	/^    uint32_t allowed_versions;  \/* OpenFlow protocol versions that may$/;"	m	struct:ofservice	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__EXEEXT_1	Makefile	/^am__EXEEXT_1 = utilities\/nlmon$(EXEEXT)$/;"	m
am__EXEEXT_3	Makefile	/^am__EXEEXT_3 = utilities\/ovs-vlan-bug-workaround$(EXEEXT)$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/absolute-header.m4 \\$/;"	m
am__aclocal_m4_deps	datapath/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/absolute-header.m4 \\$/;"	m
am__append_1	datapath/Makefile	/^am__append_1 = linux$/;"	m
am__append_14	Makefile	/^am__append_14 = \\$/;"	m
am__append_15	Makefile	/^am__append_15 = -Wno-unused$/;"	m
am__append_16	Makefile	/^am__append_16 = -Wno-unused-parameter$/;"	m
am__append_17	Makefile	/^am__append_17 = \\$/;"	m
am__append_20	Makefile	/^am__append_20 = lib\/async-append-aio.c$/;"	m
am__append_24	Makefile	/^am__append_24 = lib\/stream-ssl.c$/;"	m
am__append_25	Makefile	/^am__append_25 = lib\/dhparams.c$/;"	m
am__append_28	Makefile	/^am__append_28 = \\$/;"	m
am__append_29	Makefile	/^am__append_29 = utilities\/ovs-vlan-bug-workaround$/;"	m
am__append_30	Makefile	/^am__append_30 = utilities\/nlmon$/;"	m
am__append_31	Makefile	/^am__append_31 = utilities\/bugtool\/ovs-bugtool$/;"	m
am__append_32	Makefile	/^am__append_32 = utilities\/bugtool\/ovs-bugtool$/;"	m
am__append_33	Makefile	/^am__append_33 = utilities\/bugtool\/ovs-bugtool.8$/;"	m
am__append_34	Makefile	/^am__append_34 = utilities\/bugtool\/ovs-bugtool.8.in$/;"	m
am__append_35	Makefile	/^am__append_35 = utilities\/bugtool\/ovs-bugtool.8$/;"	m
am__append_36	Makefile	/^am__append_36 = $(bugtool_scripts)$/;"	m
am__append_37	Makefile	/^am__append_37 = bugtool-install-data-local$/;"	m
am__append_38	Makefile	/^am__append_38 = bugtool-uninstall-local$/;"	m
am__append_40	Makefile	/^am__append_40 = \\$/;"	m
am__append_41	Makefile	/^am__append_41 = $(TESTPKI_FILES)$/;"	m
am__append_42	Makefile	/^am__append_42 = $(TESTPKI_FILES) tests\/ovs-pki.log$/;"	m
am__append_43	Makefile	/^am__append_43 = clean-pki$/;"	m
am__append_44	Makefile	/^am__append_44 = .h .hstamp$/;"	m
am__append_45	Makefile	/^am__append_45 = $(HSTAMP_FILES)$/;"	m
am__append_46	Makefile	/^am__append_46 = $(HSTAMP_FILES)$/;"	m
am__append_47	Makefile	/^am__append_47 = vswitchd\/vswitch.gv vswitchd\/vswitch.pic$/;"	m
am__append_48	Makefile	/^am__append_48 = vtep\/vtep.gv vtep\/vtep.pic$/;"	m
am__append_50	Makefile	/^am__append_50 = ovn\/ovn-sb.gv ovn\/ovn-sb.pic$/;"	m
am__append_51	Makefile	/^am__append_51 = ovn\/ovn-nb.gv ovn\/ovn-nb.pic$/;"	m
am__append_6	Makefile	/^am__append_6 = dist-hook-git$/;"	m
am__append_7	Makefile	/^am__append_7 = all-distfiles all-gitfiles \\$/;"	m
am__append_8	Makefile	/^am__append_8 = manpage-check$/;"	m
am__append_9	Makefile	/^am__append_9 = manpage-check$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	datapath/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	datapath/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	datapath/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	datapath/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	datapath/Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \\$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	datapath/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	datapath/Makefile	/^am__leading_dot = .$/;"	m
am__lib_libopenvswitch_la_SOURCES_DIST	Makefile	/^am__lib_libopenvswitch_la_SOURCES_DIST = lib\/aes128.c lib\/aes128.h \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	datapath/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	datapath/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	datapath/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__noinst_HEADERS_DIST	Makefile	/^am__noinst_HEADERS_DIST = CONTRIBUTING.md CodingStyle.md DESIGN.md \\$/;"	m
am__objects_10	Makefile	/^am__objects_10 = lib\/stream-ssl.lo$/;"	m
am__objects_12	Makefile	/^am__objects_12 = lib\/dhparams.lo$/;"	m
am__objects_13	Makefile	/^am__objects_13 = tests\/test-unix-socket.$(OBJEXT)$/;"	m
am__objects_2	Makefile	/^am__objects_2 = lib\/daemon-unix.lo lib\/latch-unix.lo \\$/;"	m
am__objects_3	Makefile	/^am__objects_3 = lib\/dpif-netlink.lo lib\/if-notifier.lo \\$/;"	m
am__objects_6	Makefile	/^am__objects_6 = lib\/async-append-aio.lo$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	datapath/Makefile	/^am__quote = $/;"	m
am__recursive_targets	Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	datapath/Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__relativize	datapath/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tagged_files	datapath/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = tar --format=posix -chf - "$$tardir"$/;"	m
am__tar	datapath/Makefile	/^am__tar = tar --format=posix -chf - "$$tardir"$/;"	m
am__tests_ovstest_SOURCES_DIST	Makefile	/^am__tests_ovstest_SOURCES_DIST = tests\/ovstest.c tests\/ovstest.h \\$/;"	m
am__tests_test_dpdkr_SOURCES_DIST	Makefile	/^am__tests_test_dpdkr_SOURCES_DIST = tests\/dpdk\/ring_client.c$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	datapath/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	datapath/Makefile	/^am__untar = tar -xf -$/;"	m
am__utilities_nlmon_SOURCES_DIST	Makefile	/^am__utilities_nlmon_SOURCES_DIST = utilities\/nlmon.c$/;"	m
am__utilities_ovs_vlan_bug_workaround_SOURCES_DIST	Makefile	/^am__utilities_ovs_vlan_bug_workaround_SOURCES_DIST =  \\$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	datapath/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	datapath/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	datapath/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	datapath/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	datapath/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	datapath/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	datapath/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	datapath/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	datapath/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_lib_libopenvswitch_la_OBJECTS	Makefile	/^am_lib_libopenvswitch_la_OBJECTS = lib\/aes128.lo lib\/backtrace.lo \\$/;"	m
am_lib_libsflow_la_OBJECTS	Makefile	/^am_lib_libsflow_la_OBJECTS = lib\/lib_libsflow_la-sflow_agent.lo \\$/;"	m
am_ofproto_libofproto_la_OBJECTS	Makefile	/^am_ofproto_libofproto_la_OBJECTS =  \\$/;"	m
am_ovn_controller_ovn_controller_OBJECTS	Makefile	/^am_ovn_controller_ovn_controller_OBJECTS =  \\$/;"	m
am_ovn_controller_vtep_ovn_controller_vtep_OBJECTS	Makefile	/^am_ovn_controller_vtep_ovn_controller_vtep_OBJECTS =  \\$/;"	m
am_ovn_lib_libovn_la_OBJECTS	Makefile	/^am_ovn_lib_libovn_la_OBJECTS = ovn\/lib\/actions.lo ovn\/lib\/expr.lo \\$/;"	m
am_ovn_northd_ovn_northd_OBJECTS	Makefile	/^am_ovn_northd_ovn_northd_OBJECTS = ovn\/northd\/ovn-northd.$(OBJEXT)$/;"	m
am_ovn_utilities_ovn_nbctl_OBJECTS	Makefile	/^am_ovn_utilities_ovn_nbctl_OBJECTS =  \\$/;"	m
am_ovn_utilities_ovn_sbctl_OBJECTS	Makefile	/^am_ovn_utilities_ovn_sbctl_OBJECTS =  \\$/;"	m
am_ovsdb_libovsdb_la_OBJECTS	Makefile	/^am_ovsdb_libovsdb_la_OBJECTS = ovsdb\/ovsdb_libovsdb_la-column.lo \\$/;"	m
am_ovsdb_ovsdb_client_OBJECTS	Makefile	/^am_ovsdb_ovsdb_client_OBJECTS = ovsdb\/ovsdb-client.$(OBJEXT)$/;"	m
am_ovsdb_ovsdb_server_OBJECTS	Makefile	/^am_ovsdb_ovsdb_server_OBJECTS = ovsdb\/ovsdb-server.$(OBJEXT)$/;"	m
am_ovsdb_ovsdb_tool_OBJECTS	Makefile	/^am_ovsdb_ovsdb_tool_OBJECTS = ovsdb\/ovsdb-tool.$(OBJEXT)$/;"	m
am_tests_ovstest_OBJECTS	Makefile	/^am_tests_ovstest_OBJECTS = tests\/ovstest.$(OBJEXT) \\$/;"	m
am_tests_test_lib_OBJECTS	Makefile	/^am_tests_test_lib_OBJECTS = tests\/test-lib.$(OBJEXT)$/;"	m
am_tests_test_ovsdb_OBJECTS	Makefile	/^am_tests_test_ovsdb_OBJECTS = tests\/test-ovsdb.$(OBJEXT)$/;"	m
am_tests_test_strtok_r_OBJECTS	Makefile	/^am_tests_test_strtok_r_OBJECTS = tests\/test-strtok_r.$(OBJEXT)$/;"	m
am_tests_test_type_props_OBJECTS	Makefile	/^am_tests_test_type_props_OBJECTS = tests\/test-type-props.$(OBJEXT)$/;"	m
am_utilities_nlmon_OBJECTS	Makefile	/^am_utilities_nlmon_OBJECTS = utilities\/nlmon.$(OBJEXT)$/;"	m
am_utilities_ovs_appctl_OBJECTS	Makefile	/^am_utilities_ovs_appctl_OBJECTS = utilities\/ovs-appctl.$(OBJEXT)$/;"	m
am_utilities_ovs_benchmark_OBJECTS	Makefile	/^am_utilities_ovs_benchmark_OBJECTS =  \\$/;"	m
am_utilities_ovs_dpctl_OBJECTS	Makefile	/^am_utilities_ovs_dpctl_OBJECTS = utilities\/ovs-dpctl.$(OBJEXT)$/;"	m
am_utilities_ovs_ofctl_OBJECTS	Makefile	/^am_utilities_ovs_ofctl_OBJECTS = utilities\/ovs-ofctl.$(OBJEXT)$/;"	m
am_utilities_ovs_testcontroller_OBJECTS	Makefile	/^am_utilities_ovs_testcontroller_OBJECTS =  \\$/;"	m
am_utilities_ovs_vlan_bug_workaround_OBJECTS	Makefile	/^am_utilities_ovs_vlan_bug_workaround_OBJECTS =  \\$/;"	m
am_utilities_ovs_vsctl_OBJECTS	Makefile	/^am_utilities_ovs_vsctl_OBJECTS = utilities\/ovs-vsctl.$(OBJEXT)$/;"	m
am_vswitchd_ovs_vswitchd_OBJECTS	Makefile	/^am_vswitchd_ovs_vswitchd_OBJECTS = vswitchd\/bridge.$(OBJEXT) \\$/;"	m
am_vtep_vtep_ctl_OBJECTS	Makefile	/^am_vtep_vtep_ctl_OBJECTS = vtep\/vtep-ctl.$(OBJEXT)$/;"	m
ambig	lib/getopt_long.c	/^static const char ambig[] = "ambiguous option -- %.*s";$/;"	v	file:
andor	ovn/lib/expr.h	/^        struct ovs_list andor;$/;"	m	union:expr::__anon200	typeref:struct:expr::__anon200::ovs_list
annotateSchema	ovsdb/ovsdb-idlc	/^def annotateSchema(schemaFile, annotationFile):$/;"	f
annotation_nesting	ovn/lib/expr.c	/^struct annotation_nesting {$/;"	s	file:
answer_port_query	lib/dpif-netdev.c	/^answer_port_query(const struct dp_netdev_port *port,$/;"	f	file:
anyWarnings	build-aux/check-structs	/^anyWarnings = False$/;"	v
any_addresses_changed	ofproto/in-band.c	/^any_addresses_changed(struct in_band *ib,$/;"	f	file:
any_extras_changed	ofproto/connmgr.c	/^any_extras_changed(const struct connmgr *mgr,$/;"	f	file:
any_random_flow	tests/test-classifier.c	/^any_random_flow(struct flow *flow)$/;"	f	file:
appResources	lib/sflow.h	/^    SFLAPPResources_counters appResources;$/;"	m	union:_SFLCounters_type
append_group_desc	ofproto/ofproto.c	/^append_group_desc(struct ofgroup *group, struct ovs_list *replies)$/;"	f	file:
append_group_stats	ofproto/ofproto.c	/^append_group_stats(struct ofgroup *group, struct ovs_list *replies)$/;"	f	file:
append_port_desc	ofproto/ofproto.c	/^append_port_desc(struct ofport *port, struct ovs_list *replies)$/;"	f	file:
append_port_stat	ofproto/ofproto.c	/^append_port_stat(struct ofport *port, struct ovs_list *replies)$/;"	f	file:
apply	lib/ofp-util.h	/^        } write, apply;$/;"	m	struct:ofputil_table_features::ofputil_table_instruction_features	typeref:struct:ofputil_table_features::ofputil_table_instruction_features::ofputil_table_action_features
apply	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def apply(self):$/;"	m	class:ConfigurationFile
apply_actions	include/openflow/openflow-1.1.h	/^    ovs_be32 apply_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp11_table_stats
apply_actions	include/openflow/openflow-1.2.h	/^    ovs_be32 apply_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp12_table_stats
apply_mask	lib/meta-flow.c	/^apply_mask(const uint8_t *src, const uint8_t *mask, uint8_t *dst, size_t n)$/;"	f	file:
apply_setfields	include/openflow/openflow-1.2.h	/^    ovs_be64 apply_setfields;\/* Bitmap of (1 << OFPXMT_*) header fields that$/;"	m	struct:ofp12_table_stats
approximate_size	utilities/ovs-dpctl-top	/^def approximate_size(size, a_kilobyte_is_1024_bytes=True):$/;"	f
ar_hln	datapath-windows/ovsext/NetProto.h	/^   UINT8    ar_hln;                \/* Length of hardware address.  *\/$/;"	m	struct:ArpHdr
ar_hln	datapath/flow.h	/^	unsigned char   ar_hln;	\/* length of hardware address   *\/$/;"	m	struct:arp_eth_header
ar_hln	lib/packets.h	/^    uint8_t ar_hln;            \/* Hardware address length. *\/$/;"	m	struct:arp_eth_header
ar_hrd	datapath-windows/ovsext/NetProto.h	/^   UINT16   ar_hrd;                \/* Format of hardware address.  *\/$/;"	m	struct:ArpHdr
ar_hrd	datapath/flow.h	/^	__be16      ar_hrd;	\/* format of hardware address   *\/$/;"	m	struct:arp_eth_header
ar_hrd	lib/packets.h	/^    ovs_be16 ar_hrd;           \/* Hardware type. *\/$/;"	m	struct:arp_eth_header
ar_op	datapath-windows/ovsext/NetProto.h	/^   UINT16   ar_op;                 \/* ARP opcode (command).  *\/$/;"	m	struct:ArpHdr
ar_op	datapath/flow.h	/^	__be16      ar_op;	\/* ARP opcode (command)     *\/$/;"	m	struct:arp_eth_header
ar_op	lib/packets.h	/^    ovs_be16 ar_op;            \/* Opcode. *\/$/;"	m	struct:arp_eth_header
ar_pln	datapath-windows/ovsext/NetProto.h	/^   UINT8    ar_pln;                \/* Length of protocol address.  *\/$/;"	m	struct:ArpHdr
ar_pln	datapath/flow.h	/^	unsigned char   ar_pln;	\/* length of protocol address   *\/$/;"	m	struct:arp_eth_header
ar_pln	lib/packets.h	/^    uint8_t ar_pln;            \/* Protocol address length. *\/$/;"	m	struct:arp_eth_header
ar_pro	datapath-windows/ovsext/NetProto.h	/^   UINT16   ar_pro;                \/* Format of protocol address.  *\/$/;"	m	struct:ArpHdr
ar_pro	datapath/flow.h	/^	__be16      ar_pro;	\/* format of protocol address   *\/$/;"	m	struct:arp_eth_header
ar_pro	lib/packets.h	/^    ovs_be16 ar_pro;           \/* Protocol type. *\/$/;"	m	struct:arp_eth_header
ar_sha	datapath/actions.c	/^    unsigned char       ar_sha[ETH_ALEN];   \/* sender hardware address  *\/$/;"	m	struct:arpft	file:
ar_sha	datapath/flow.h	/^	unsigned char       ar_sha[ETH_ALEN];	\/* sender hardware address  *\/$/;"	m	struct:arp_eth_header
ar_sha	datapath/linux/actions.c	/^    unsigned char       ar_sha[ETH_ALEN];   \/* sender hardware address  *\/$/;"	m	struct:arpft	file:
ar_sha	lib/packets.h	/^    struct eth_addr ar_sha;     \/* Sender hardware address. *\/$/;"	m	struct:arp_eth_header	typeref:struct:arp_eth_header::eth_addr
ar_sip	datapath/actions.c	/^    unsigned char       ar_sip[4];      \/* sender IP address        *\/$/;"	m	struct:arpft	file:
ar_sip	datapath/flow.h	/^	unsigned char       ar_sip[4];		\/* sender IP address        *\/$/;"	m	struct:arp_eth_header
ar_sip	datapath/linux/actions.c	/^    unsigned char       ar_sip[4];      \/* sender IP address        *\/$/;"	m	struct:arpft	file:
ar_spa	lib/packets.h	/^    ovs_16aligned_be32 ar_spa;  \/* Sender protocol address. *\/$/;"	m	struct:arp_eth_header
ar_tha	datapath/actions.c	/^    unsigned char       ar_tha[ETH_ALEN];   \/* target hardware address  *\/$/;"	m	struct:arpft	file:
ar_tha	datapath/flow.h	/^	unsigned char       ar_tha[ETH_ALEN];	\/* target hardware address  *\/$/;"	m	struct:arp_eth_header
ar_tha	datapath/linux/actions.c	/^    unsigned char       ar_tha[ETH_ALEN];   \/* target hardware address  *\/$/;"	m	struct:arpft	file:
ar_tha	lib/packets.h	/^    struct eth_addr ar_tha;     \/* Target hardware address. *\/$/;"	m	struct:arp_eth_header	typeref:struct:arp_eth_header::eth_addr
ar_tip	datapath/actions.c	/^    unsigned char       ar_tip[4];$/;"	m	struct:arpft	file:
ar_tip	datapath/flow.h	/^	unsigned char       ar_tip[4];		\/* target IP address        *\/$/;"	m	struct:arp_eth_header
ar_tip	datapath/linux/actions.c	/^    unsigned char       ar_tip[4];$/;"	m	struct:arpft	file:
ar_tpa	lib/packets.h	/^    ovs_16aligned_be32 ar_tpa;  \/* Target protocol address. *\/$/;"	m	struct:arp_eth_header
arg	build-aux/extract-ofp-actions	/^                        arg = "%s(arg)" % hton$/;"	v
arg	build-aux/extract-ofp-actions	/^                        arg = "arg"$/;"	v
arg	build-aux/extract-ofp-actions	/^                    arg = "ALIGNED_CAST(const %s *, a)" % base_argtype$/;"	v
arg	lib/lldp/lldpd.h	/^    char arg;        \/* Argument to enable this protocol *\/$/;"	m	struct:protocol
arg	lib/ofp-actions.c	/^    ovs_be32 arg;               \/* Algorithm-specific argument. *\/$/;"	m	struct:nx_action_multipath	file:
arg	lib/ofp-actions.h	/^    uint32_t arg;               \/* Algorithm-specific argument. *\/$/;"	m	struct:ofpact_multipath
arg	lib/ovs-thread.c	/^    void *arg;$/;"	m	struct:ovsthread_aux	file:
arg	ovsdb/condition.h	/^    struct ovsdb_datum arg;$/;"	m	struct:ovsdb_clause	typeref:struct:ovsdb_clause::ovsdb_datum
arg	ovsdb/mutation.h	/^    struct ovsdb_datum arg;$/;"	m	struct:ovsdb_mutation	typeref:struct:ovsdb_mutation::ovsdb_datum
arg_len	lib/ofp-actions.c	/^    unsigned short int arg_len;$/;"	m	struct:ofpact_raw_instance	file:
arg_ofs	lib/ofp-actions.c	/^    unsigned short int arg_ofs;$/;"	m	struct:ofpact_raw_instance	file:
arg_structs	build-aux/extract-ofp-actions	/^arg_structs = set()$/;"	v
arg_to_kwords	utilities/ovs-appctl-bashcomp.bash	/^arg_to_kwords() {$/;"	f
argc	lib/command-line.h	/^    int argc;$/;"	m	struct:ovs_cmdl_context
argc	lib/db-ctl-base.h	/^    int argc;$/;"	m	struct:ctl_command
argc	lib/db-ctl-base.h	/^    int argc;$/;"	m	struct:ctl_context
argparse	debian/ovs-monitor-ipsec	/^import argparse$/;"	i
argparse	python/ovstest/args.py	/^import argparse$/;"	i
argparse	tests/appctl.py	/^import argparse$/;"	i
argparse	tests/test-daemon.py	/^import argparse$/;"	i
argparse	tests/test-jsonrpc.py	/^import argparse$/;"	i
argparse	tests/test-l7.py	/^import argparse$/;"	i
argparse	tests/test-unixctl.py	/^import argparse$/;"	i
argparse	tests/test-vlog.py	/^import argparse$/;"	i
argparse	utilities/ovs-dpctl-top	/^    import argparse$/;"	i
argparse	utilities/ovs-pipegen.py	/^import argparse$/;"	i
argparse	utilities/ovs-test	/^import argparse$/;"	i
argparse	vtep/ovs-vtep	/^import argparse$/;"	i
argparse	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import argparse$/;"	i
args	ovsdb/ovsdb-idlc	/^                args = ['%(type)s%(name)s' % member for member in members]$/;"	v
args	ovsdb/ovsdb-idlc	/^                args = ['const struct smap *']$/;"	v
args	tests/test-jsonrpc.py	/^    args = args.command_args$/;"	v
args	tests/test-jsonrpc.py	/^    args = parser.parse_args()$/;"	v
args	utilities/ovs-l3ping	/^        args = args.l3_initialize_args()$/;"	v
args	utilities/ovs-l3ping	/^import ovstest.args as args$/;"	i
args	utilities/ovs-test	/^import ovstest.args as args$/;"	i
args_get	utilities/ovs-dpctl-top	/^def args_get():$/;"	f
args_needed	ovsdb/ovsdb-client.c	/^enum args_needed {$/;"	g	file:
arguments	lib/db-ctl-base.h	/^    const char *arguments;$/;"	m	struct:ctl_command_syntax
argv	lib/command-line.h	/^    char **argv;$/;"	m	struct:ovs_cmdl_context
argv	lib/db-ctl-base.h	/^    char **argv;$/;"	m	struct:ctl_command
argv	lib/db-ctl-base.h	/^    char **argv;$/;"	m	struct:ctl_context
argv	utilities/bugtool/ovs-bugtool	/^        argv = sys.argv$/;"	v
argv0	build-aux/xml2nroff	/^argv0 = sys.argv[0]$/;"	v
argv0	ovsdb/ovsdb-doc	/^argv0 = sys.argv[0]$/;"	v
argv0	ovsdb/ovsdb-dot	/^argv0 = sys.argv[0]$/;"	v
argv0	ovsdb/ovsdb-idlc	/^argv0 = sys.argv[0]$/;"	v
argv0	utilities/ovs-pcap	/^argv0 = sys.argv[0]$/;"	v
argv0	utilities/ovs-tcpundump	/^argv0 = sys.argv[0]$/;"	v
arp	datapath/flow.h	/^			} arp;$/;"	m	struct:sw_flow_key::__anon33::__anon34	typeref:struct:sw_flow_key::__anon33::__anon34::__anon36
arpKey	datapath-windows/ovsext/DpInternal.h	/^        ArpKey arpKey;           \/* size 24 *\/$/;"	m	union:OvsFlowKey::__anon10
arpSha	datapath-windows/ovsext/DpInternal.h	/^    uint8_t arpSha[6];           \/* ARP\/ND source hardware address. *\/$/;"	m	struct:ArpKey
arpSha	datapath-windows/ovsext/DpInternal.h	/^    uint8_t arpSha[6];           \/* ARP\/ND source hardware address. *\/$/;"	m	struct:Icmp6Key
arpTha	datapath-windows/ovsext/DpInternal.h	/^    uint8_t arpTha[6];           \/* ARP\/ND target hardware address. *\/$/;"	m	struct:ArpKey
arpTha	datapath-windows/ovsext/DpInternal.h	/^    uint8_t arpTha[6];           \/* ARP\/ND target hardware address. *\/$/;"	m	struct:Icmp6Key
arp_entry_free	lib/tnl-arp-cache.c	/^arp_entry_free(struct tnl_arp_entry *arp)$/;"	f	file:
arp_eth_header	datapath/flow.h	/^struct arp_eth_header {$/;"	s
arp_eth_header	lib/packets.h	/^struct arp_eth_header {$/;"	s
arp_hdr	datapath/linux/compat/include/linux/if_arp.h	/^static inline struct arphdr *arp_hdr(const struct sk_buff *skb)$/;"	f
arp_lookup	lib/netdev-provider.h	/^    int (*arp_lookup)(const struct netdev *netdev, ovs_be32 ip,$/;"	m	struct:netdev_class
arp_op	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 arp_op;$/;"	m	struct:ovs_key_arp
arp_op	include/odp-netlink.h	/^	ovs_be16 arp_op;$/;"	m	struct:ovs_key_arp
arp_sha	datapath-windows/ovsext/NetProto.h	/^   Eth_Address   arp_sha;         \/* sender hardware address *\/$/;"	m	struct:EtherArp
arp_sha	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   arp_sha[ETH_ALEN];$/;"	m	struct:ovs_key_arp
arp_sha	include/odp-netlink.h	/^	struct eth_addr arp_sha;$/;"	m	struct:ovs_key_arp	typeref:struct:ovs_key_arp::eth_addr
arp_sha	lib/flow.h	/^    struct eth_addr arp_sha;    \/* ARP\/ND source hardware address. *\/$/;"	m	struct:flow	typeref:struct:flow::eth_addr
arp_sip	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 arp_sip;$/;"	m	struct:ovs_key_arp
arp_sip	include/odp-netlink.h	/^	ovs_be32 arp_sip;$/;"	m	struct:ovs_key_arp
arp_spa	datapath-windows/ovsext/NetProto.h	/^   UINT8         arp_spa[4];      \/* sender protocol address *\/$/;"	m	struct:EtherArp
arp_tha	datapath-windows/ovsext/NetProto.h	/^   Eth_Address   arp_tha;         \/* target hardware address *\/$/;"	m	struct:EtherArp
arp_tha	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   arp_tha[ETH_ALEN];$/;"	m	struct:ovs_key_arp
arp_tha	include/odp-netlink.h	/^	struct eth_addr arp_tha;$/;"	m	struct:ovs_key_arp	typeref:struct:ovs_key_arp::eth_addr
arp_tha	lib/flow.h	/^    struct eth_addr arp_tha;    \/* ARP\/ND target hardware address. *\/$/;"	m	struct:flow	typeref:struct:flow::eth_addr
arp_tip	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 arp_tip;$/;"	m	struct:ovs_key_arp
arp_tip	include/odp-netlink.h	/^	ovs_be32 arp_tip;$/;"	m	struct:ovs_key_arp
arp_tpa	datapath-windows/ovsext/NetProto.h	/^   UINT8         arp_tpa[4];      \/* target protocol address *\/$/;"	m	struct:EtherArp
arpft	datapath/actions.c	/^struct arpft {$/;"	s	file:
arpft	datapath/linux/actions.c	/^struct arpft {$/;"	s	file:
arphdr_ok	datapath/flow.c	/^static bool arphdr_ok(struct sk_buff *skb)$/;"	f	file:
arphdr_ok	datapath/linux/flow.c	/^static bool arphdr_ok(struct sk_buff *skb)$/;"	f	file:
array	lib/heap.h	/^    struct heap_node **array;   \/* Data in elements 1...n, element 0 unused. *\/$/;"	m	struct:heap	typeref:struct:heap::heap_node
array	lib/json.h	/^        struct json_array array;$/;"	m	union:json::__anon93	typeref:struct:json::__anon93::json_array
array	python/ovstest/udp.py	/^import array$/;"	i
array	python/ovstest/util.py	/^import array$/;"	i
array_contains	tests/test-classifier.c	/^array_contains(int *array, int n, int value)$/;"	f	file:
as	lib/sflow.h	/^    u_int32_t as;                             \/* AS number for this gateway *\/$/;"	m	struct:_SFLExtended_gateway
as	lib/sflow.h	/^    } as;$/;"	m	struct:_SFLExtended_as_path_segment	typeref:union:_SFLExtended_as_path_segment::__anon155
as	tests/system-kmod-testsuite	/^as() {$/;"	f
as	tests/system-userspace-testsuite	/^as() {$/;"	f
as	tests/testsuite	/^as() {$/;"	f
as	utilities/ovs-sim	/^as() {$/;"	f
as	utilities/ovs-sim.in	/^as() {$/;"	f
as_dict	python/ovs/db/data.py	/^    def as_dict(self):$/;"	m	class:Datum
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_append	tests/system-kmod-testsuite	/^  as_fn_append ()$/;"	f
as_fn_append	tests/system-userspace-testsuite	/^  as_fn_append ()$/;"	f
as_fn_append	tests/testsuite	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	tests/system-kmod-testsuite	/^  as_fn_arith ()$/;"	f
as_fn_arith	tests/system-userspace-testsuite	/^  as_fn_arith ()$/;"	f
as_fn_arith	tests/testsuite	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_error	tests/system-kmod-testsuite	/^as_fn_error ()$/;"	f
as_fn_error	tests/system-userspace-testsuite	/^as_fn_error ()$/;"	f
as_fn_error	tests/testsuite	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	tests/system-kmod-testsuite	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	tests/system-userspace-testsuite	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	tests/testsuite	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_exit	tests/system-kmod-testsuite	/^as_fn_exit ()$/;"	f
as_fn_exit	tests/system-userspace-testsuite	/^as_fn_exit ()$/;"	f
as_fn_exit	tests/testsuite	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	tests/system-kmod-testsuite	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	tests/system-userspace-testsuite	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	tests/testsuite	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	tests/system-kmod-testsuite	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	tests/system-userspace-testsuite	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	tests/testsuite	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	tests/system-kmod-testsuite	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	tests/system-userspace-testsuite	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	tests/testsuite	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	tests/system-kmod-testsuite	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	tests/system-userspace-testsuite	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	tests/testsuite	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	tests/system-kmod-testsuite	/^as_fn_set_status ()$/;"	f
as_fn_set_status	tests/system-userspace-testsuite	/^as_fn_set_status ()$/;"	f
as_fn_set_status	tests/testsuite	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	tests/system-kmod-testsuite	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	tests/system-userspace-testsuite	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	tests/testsuite	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
as_fn_unset	tests/system-kmod-testsuite	/^as_fn_unset ()$/;"	f
as_fn_unset	tests/system-userspace-testsuite	/^as_fn_unset ()$/;"	f
as_fn_unset	tests/testsuite	/^as_fn_unset ()$/;"	f
as_list	python/ovs/db/data.py	/^    def as_list(self):$/;"	m	class:Datum
as_scalar	python/ovs/db/data.py	/^    def as_scalar(self):$/;"	m	class:Datum
assert	include/sparse/assert.h	22;"	d
assert_single_threaded	lib/ovs-thread.h	513;"	d
assert_single_threaded_at	lib/ovs-thread.c	/^assert_single_threaded_at(const char *where)$/;"	f
assess_weak_refs	ovsdb/transaction.c	/^assess_weak_refs(struct ovsdb_txn *txn, struct ovsdb_txn_row *txn_row)$/;"	f	file:
assign_c_value_casting_away_const	python/ovs/db/types.py	/^    def assign_c_value_casting_away_const(self, dst, src):$/;"	m	class:BaseType
assign_constant_set_type	ovn/lib/expr.c	/^assign_constant_set_type(struct expr_context *ctx,$/;"	f	file:
assoc_list	utilities/ovs-dpctl-top	/^    def assoc_list(obj):$/;"	m	class:Columns
async_append	lib/async-append-aio.c	/^struct async_append {$/;"	s	file:
async_append_create	lib/async-append-aio.c	/^async_append_create(int fd)$/;"	f
async_append_create	lib/async-append-null.c	/^async_append_create(int fd OVS_UNUSED)$/;"	f
async_append_destroy	lib/async-append-aio.c	/^async_append_destroy(struct async_append *ap)$/;"	f
async_append_destroy	lib/async-append-null.c	/^async_append_destroy(struct async_append *ap)$/;"	f
async_append_flush	lib/async-append-aio.c	/^async_append_flush(struct async_append *ap)$/;"	f
async_append_flush	lib/async-append-null.c	/^async_append_flush(struct async_append *ap OVS_UNUSED)$/;"	f
async_append_is_empty	lib/async-append-aio.c	/^async_append_is_empty(const struct async_append *ap)$/;"	f	file:
async_append_is_full	lib/async-append-aio.c	/^async_append_is_full(const struct async_append *ap)$/;"	f	file:
async_append_wait	lib/async-append-aio.c	/^async_append_wait(struct async_append *ap)$/;"	f	file:
async_append_write	lib/async-append-aio.c	/^async_append_write(struct async_append *ap, const void *data_, size_t size)$/;"	f
async_append_write	lib/async-append-null.c	/^async_append_write(struct async_append *ap OVS_UNUSED,$/;"	f
at_fn_banner	tests/system-kmod-testsuite	/^at_fn_banner ()$/;"	f
at_fn_banner	tests/system-userspace-testsuite	/^at_fn_banner ()$/;"	f
at_fn_banner	tests/testsuite	/^at_fn_banner ()$/;"	f
at_fn_check_prepare_dynamic	tests/system-kmod-testsuite	/^at_fn_check_prepare_dynamic ()$/;"	f
at_fn_check_prepare_dynamic	tests/system-userspace-testsuite	/^at_fn_check_prepare_dynamic ()$/;"	f
at_fn_check_prepare_dynamic	tests/testsuite	/^at_fn_check_prepare_dynamic ()$/;"	f
at_fn_check_prepare_notrace	tests/system-kmod-testsuite	/^at_fn_check_prepare_notrace ()$/;"	f
at_fn_check_prepare_notrace	tests/system-userspace-testsuite	/^at_fn_check_prepare_notrace ()$/;"	f
at_fn_check_prepare_notrace	tests/testsuite	/^at_fn_check_prepare_notrace ()$/;"	f
at_fn_check_prepare_trace	tests/system-kmod-testsuite	/^at_fn_check_prepare_trace ()$/;"	f
at_fn_check_prepare_trace	tests/system-userspace-testsuite	/^at_fn_check_prepare_trace ()$/;"	f
at_fn_check_prepare_trace	tests/testsuite	/^at_fn_check_prepare_trace ()$/;"	f
at_fn_check_skip	tests/system-kmod-testsuite	/^at_fn_check_skip ()$/;"	f
at_fn_check_skip	tests/system-userspace-testsuite	/^at_fn_check_skip ()$/;"	f
at_fn_check_skip	tests/testsuite	/^at_fn_check_skip ()$/;"	f
at_fn_check_status	tests/system-kmod-testsuite	/^at_fn_check_status ()$/;"	f
at_fn_check_status	tests/system-userspace-testsuite	/^at_fn_check_status ()$/;"	f
at_fn_check_status	tests/testsuite	/^at_fn_check_status ()$/;"	f
at_fn_create_debugging_script	tests/system-kmod-testsuite	/^at_fn_create_debugging_script ()$/;"	f
at_fn_create_debugging_script	tests/system-userspace-testsuite	/^at_fn_create_debugging_script ()$/;"	f
at_fn_create_debugging_script	tests/testsuite	/^at_fn_create_debugging_script ()$/;"	f
at_fn_diff_devnull	tests/system-kmod-testsuite	/^at_fn_diff_devnull ()$/;"	f
at_fn_diff_devnull	tests/system-userspace-testsuite	/^at_fn_diff_devnull ()$/;"	f
at_fn_diff_devnull	tests/testsuite	/^at_fn_diff_devnull ()$/;"	f
at_fn_filter_trace	tests/system-kmod-testsuite	/^at_fn_filter_trace ()$/;"	f
at_fn_filter_trace	tests/system-userspace-testsuite	/^at_fn_filter_trace ()$/;"	f
at_fn_filter_trace	tests/testsuite	/^at_fn_filter_trace ()$/;"	f
at_fn_group_banner	tests/system-kmod-testsuite	/^at_fn_group_banner ()$/;"	f
at_fn_group_banner	tests/system-userspace-testsuite	/^at_fn_group_banner ()$/;"	f
at_fn_group_banner	tests/testsuite	/^at_fn_group_banner ()$/;"	f
at_fn_group_postprocess	tests/system-kmod-testsuite	/^at_fn_group_postprocess ()$/;"	f
at_fn_group_postprocess	tests/system-userspace-testsuite	/^at_fn_group_postprocess ()$/;"	f
at_fn_group_postprocess	tests/testsuite	/^at_fn_group_postprocess ()$/;"	f
at_fn_group_prepare	tests/system-kmod-testsuite	/^at_fn_group_prepare ()$/;"	f
at_fn_group_prepare	tests/system-userspace-testsuite	/^at_fn_group_prepare ()$/;"	f
at_fn_group_prepare	tests/testsuite	/^at_fn_group_prepare ()$/;"	f
at_fn_log_failure	tests/system-kmod-testsuite	/^at_fn_log_failure ()$/;"	f
at_fn_log_failure	tests/system-userspace-testsuite	/^at_fn_log_failure ()$/;"	f
at_fn_log_failure	tests/testsuite	/^at_fn_log_failure ()$/;"	f
at_fn_test	tests/system-kmod-testsuite	/^at_fn_test ()$/;"	f
at_fn_test	tests/system-userspace-testsuite	/^at_fn_test ()$/;"	f
at_fn_test	tests/testsuite	/^at_fn_test ()$/;"	f
at_fn_validate_ranges	tests/system-kmod-testsuite	/^at_fn_validate_ranges ()$/;"	f
at_fn_validate_ranges	tests/system-userspace-testsuite	/^at_fn_validate_ranges ()$/;"	f
at_fn_validate_ranges	tests/testsuite	/^at_fn_validate_ranges ()$/;"	f
atexit	python/ovs/fatal_signal.py	/^import atexit$/;"	i
atom_arrays_compare_3way	lib/ovsdb-data.c	/^atom_arrays_compare_3way(const union ovsdb_atom *a,$/;"	f	file:
atomic_add	lib/ovs-atomic-c11.h	34;"	d
atomic_add	lib/ovs-atomic-clang.h	70;"	d
atomic_add	lib/ovs-atomic-gcc4+.h	145;"	d
atomic_add	lib/ovs-atomic-gcc4.7+.h	64;"	d
atomic_add	lib/ovs-atomic-i586.h	445;"	d
atomic_add	lib/ovs-atomic-msvc.h	202;"	d
atomic_add	lib/ovs-atomic-pthreads.h	80;"	d
atomic_add	lib/ovs-atomic-x86_64.h	296;"	d
atomic_add32	lib/ovs-atomic-msvc.h	193;"	d
atomic_add64	datapath-windows/ovsext/Atomic.h	/^atomic_add64(UINT64 *ptr, UINT32 val)$/;"	f
atomic_add_32__	lib/ovs-atomic-i586.h	410;"	d
atomic_add__	lib/ovs-atomic-i586.h	403;"	d
atomic_add__	lib/ovs-atomic-x86_64.h	277;"	d
atomic_add_explicit	lib/ovs-atomic-c11.h	45;"	d
atomic_add_explicit	lib/ovs-atomic-clang.h	81;"	d
atomic_add_explicit	lib/ovs-atomic-gcc4+.h	151;"	d
atomic_add_explicit	lib/ovs-atomic-gcc4.7+.h	75;"	d
atomic_add_explicit	lib/ovs-atomic-i586.h	441;"	d
atomic_add_explicit	lib/ovs-atomic-msvc.h	205;"	d
atomic_add_explicit	lib/ovs-atomic-pthreads.h	86;"	d
atomic_add_explicit	lib/ovs-atomic-x86_64.h	284;"	d
atomic_add_generic	lib/ovs-atomic-msvc.h	198;"	d
atomic_add_relaxed	lib/ovs-atomic.h	402;"	d
atomic_and	lib/ovs-atomic-c11.h	42;"	d
atomic_and	lib/ovs-atomic-clang.h	78;"	d
atomic_and	lib/ovs-atomic-gcc4+.h	149;"	d
atomic_and	lib/ovs-atomic-gcc4.7+.h	72;"	d
atomic_and	lib/ovs-atomic-i586.h	467;"	d
atomic_and	lib/ovs-atomic-msvc.h	236;"	d
atomic_and	lib/ovs-atomic-pthreads.h	84;"	d
atomic_and	lib/ovs-atomic-x86_64.h	334;"	d
atomic_and32	lib/ovs-atomic-msvc.h	228;"	d
atomic_and_explicit	lib/ovs-atomic-c11.h	53;"	d
atomic_and_explicit	lib/ovs-atomic-clang.h	89;"	d
atomic_and_explicit	lib/ovs-atomic-gcc4+.h	159;"	d
atomic_and_explicit	lib/ovs-atomic-gcc4.7+.h	83;"	d
atomic_and_explicit	lib/ovs-atomic-i586.h	465;"	d
atomic_and_explicit	lib/ovs-atomic-msvc.h	239;"	d
atomic_and_explicit	lib/ovs-atomic-pthreads.h	94;"	d
atomic_and_explicit	lib/ovs-atomic-x86_64.h	332;"	d
atomic_and_generic	lib/ovs-atomic-msvc.h	232;"	d
atomic_and_relaxed	lib/ovs-atomic.h	410;"	d
atomic_aux	tests/test-atomic.c	/^struct atomic_aux {$/;"	s	file:
atomic_bool	lib/ovs-atomic.h	/^typedef ATOMIC(bool)               atomic_bool;$/;"	t
atomic_char	lib/ovs-atomic.h	/^typedef ATOMIC(char)               atomic_char;$/;"	t
atomic_compare_exchange16	lib/ovs-atomic-msvc.h	/^atomic_compare_exchange16(int16_t volatile *dst, int16_t *expected,$/;"	f
atomic_compare_exchange32	lib/ovs-atomic-msvc.h	/^atomic_compare_exchange32(int32_t volatile *dst, int32_t *expected,$/;"	f
atomic_compare_exchange64	lib/ovs-atomic-msvc.h	/^atomic_compare_exchange64(int64_t volatile *dst, int64_t *expected,$/;"	f
atomic_compare_exchange8	lib/ovs-atomic-msvc.h	/^atomic_compare_exchange8(int8_t volatile *dst, int8_t *expected, int8_t src)$/;"	f
atomic_compare_exchange_8__	lib/ovs-atomic-i586.h	326;"	d
atomic_compare_exchange_8__	lib/ovs-atomic-i586.h	339;"	d
atomic_compare_exchange__	lib/ovs-atomic-i586.h	351;"	d
atomic_compare_exchange__	lib/ovs-atomic-x86_64.h	230;"	d
atomic_compare_exchange_locked	lib/ovs-atomic-locked.h	24;"	d
atomic_compare_exchange_strong	lib/ovs-atomic-clang.h	56;"	d
atomic_compare_exchange_strong	lib/ovs-atomic-gcc4+.h	109;"	d
atomic_compare_exchange_strong	lib/ovs-atomic-gcc4.7+.h	50;"	d
atomic_compare_exchange_strong	lib/ovs-atomic-i586.h	394;"	d
atomic_compare_exchange_strong	lib/ovs-atomic-msvc.h	304;"	d
atomic_compare_exchange_strong	lib/ovs-atomic-pthreads.h	70;"	d
atomic_compare_exchange_strong	lib/ovs-atomic-x86_64.h	268;"	d
atomic_compare_exchange_strong_explicit	lib/ovs-atomic-clang.h	60;"	d
atomic_compare_exchange_strong_explicit	lib/ovs-atomic-gcc4+.h	123;"	d
atomic_compare_exchange_strong_explicit	lib/ovs-atomic-gcc4.7+.h	54;"	d
atomic_compare_exchange_strong_explicit	lib/ovs-atomic-i586.h	363;"	d
atomic_compare_exchange_strong_explicit	lib/ovs-atomic-msvc.h	373;"	d
atomic_compare_exchange_strong_explicit	lib/ovs-atomic-pthreads.h	72;"	d
atomic_compare_exchange_strong_explicit	lib/ovs-atomic-x86_64.h	247;"	d
atomic_compare_exchange_strong_relaxed	lib/ovs-atomic.h	394;"	d
atomic_compare_exchange_weak	lib/ovs-atomic-clang.h	63;"	d
atomic_compare_exchange_weak	lib/ovs-atomic-gcc4+.h	126;"	d
atomic_compare_exchange_weak	lib/ovs-atomic-gcc4.7+.h	57;"	d
atomic_compare_exchange_weak	lib/ovs-atomic-i586.h	398;"	d
atomic_compare_exchange_weak	lib/ovs-atomic-msvc.h	309;"	d
atomic_compare_exchange_weak	lib/ovs-atomic-pthreads.h	75;"	d
atomic_compare_exchange_weak	lib/ovs-atomic-x86_64.h	272;"	d
atomic_compare_exchange_weak_explicit	lib/ovs-atomic-clang.h	67;"	d
atomic_compare_exchange_weak_explicit	lib/ovs-atomic-gcc4+.h	128;"	d
atomic_compare_exchange_weak_explicit	lib/ovs-atomic-gcc4.7+.h	61;"	d
atomic_compare_exchange_weak_explicit	lib/ovs-atomic-i586.h	400;"	d
atomic_compare_exchange_weak_explicit	lib/ovs-atomic-msvc.h	310;"	d
atomic_compare_exchange_weak_explicit	lib/ovs-atomic-pthreads.h	77;"	d
atomic_compare_exchange_weak_explicit	lib/ovs-atomic-x86_64.h	274;"	d
atomic_compare_exchange_weak_relaxed	lib/ovs-atomic.h	398;"	d
atomic_compare_unreachable	lib/ovs-atomic-msvc.h	/^atomic_compare_unreachable()$/;"	f
atomic_compiler_barrier	lib/ovs-atomic-i586.h	/^atomic_compiler_barrier(memory_order order)$/;"	f
atomic_compiler_barrier	lib/ovs-atomic-msvc.h	/^atomic_compiler_barrier(memory_order order)$/;"	f
atomic_compiler_barrier	lib/ovs-atomic-x86_64.h	/^atomic_compiler_barrier(memory_order order)$/;"	f
atomic_consumer	tests/test-atomic.c	/^atomic_consumer(void * arg1 OVS_UNUSED)$/;"	f	file:
atomic_count	lib/ovs-atomic.h	/^typedef struct atomic_count {$/;"	s
atomic_count	lib/ovs-atomic.h	/^} atomic_count;$/;"	t	typeref:struct:atomic_count
atomic_count_dec	lib/ovs-atomic.h	/^atomic_count_dec(atomic_count *count)$/;"	f
atomic_count_get	lib/ovs-atomic.h	/^atomic_count_get(atomic_count *count)$/;"	f
atomic_count_inc	lib/ovs-atomic.h	/^atomic_count_inc(atomic_count *count)$/;"	f
atomic_count_init	lib/ovs-atomic.h	/^atomic_count_init(atomic_count *count, unsigned int value)$/;"	f
atomic_count_set	lib/ovs-atomic.h	/^atomic_count_set(atomic_count *count, unsigned int value)$/;"	f
atomic_exchange_8__	lib/ovs-atomic-i586.h	183;"	d
atomic_exchange_8__	lib/ovs-atomic-i586.h	200;"	d
atomic_exchange__	lib/ovs-atomic-i586.h	212;"	d
atomic_exchange__	lib/ovs-atomic-x86_64.h	174;"	d
atomic_flag	lib/ovs-atomic-flag-gcc4.7+.h	/^} atomic_flag;$/;"	t	typeref:struct:__anon137
atomic_flag	lib/ovs-atomic-gcc4+.h	/^} atomic_flag;$/;"	t	typeref:struct:__anon139
atomic_flag	lib/ovs-atomic-i586.h	/^typedef ATOMIC(int) atomic_flag;$/;"	t
atomic_flag	lib/ovs-atomic-msvc.h	/^typedef ATOMIC(int32_t) atomic_flag;$/;"	t
atomic_flag	lib/ovs-atomic-pthreads.h	/^} atomic_flag;$/;"	t	typeref:struct:__anon144
atomic_flag	lib/ovs-atomic-x86_64.h	/^typedef ATOMIC(int) atomic_flag;$/;"	t
atomic_flag_clear	lib/ovs-atomic-flag-gcc4.7+.h	/^atomic_flag_clear(volatile atomic_flag *object)$/;"	f
atomic_flag_clear	lib/ovs-atomic-gcc4+.h	202;"	d
atomic_flag_clear	lib/ovs-atomic-i586.h	483;"	d
atomic_flag_clear	lib/ovs-atomic-msvc.h	403;"	d
atomic_flag_clear	lib/ovs-atomic-pthreads.h	/^atomic_flag_clear(volatile atomic_flag *flag_)$/;"	f
atomic_flag_clear	lib/ovs-atomic-x86_64.h	350;"	d
atomic_flag_clear_explicit	lib/ovs-atomic-flag-gcc4.7+.h	/^atomic_flag_clear_explicit(volatile atomic_flag *object, memory_order order)$/;"	f
atomic_flag_clear_explicit	lib/ovs-atomic-gcc4+.h	/^atomic_flag_clear_explicit(volatile atomic_flag *object,$/;"	f
atomic_flag_clear_explicit	lib/ovs-atomic-i586.h	481;"	d
atomic_flag_clear_explicit	lib/ovs-atomic-msvc.h	401;"	d
atomic_flag_clear_explicit	lib/ovs-atomic-pthreads.h	/^atomic_flag_clear_explicit(volatile atomic_flag *flag,$/;"	f
atomic_flag_clear_explicit	lib/ovs-atomic-x86_64.h	348;"	d
atomic_flag_clear_relaxed	lib/ovs-atomic.h	414;"	d
atomic_flag_test_and_set	lib/ovs-atomic-flag-gcc4.7+.h	/^atomic_flag_test_and_set(volatile atomic_flag *object)$/;"	f
atomic_flag_test_and_set	lib/ovs-atomic-gcc4+.h	186;"	d
atomic_flag_test_and_set	lib/ovs-atomic-i586.h	478;"	d
atomic_flag_test_and_set	lib/ovs-atomic-msvc.h	395;"	d
atomic_flag_test_and_set	lib/ovs-atomic-pthreads.h	/^atomic_flag_test_and_set(volatile atomic_flag *flag_)$/;"	f
atomic_flag_test_and_set	lib/ovs-atomic-x86_64.h	345;"	d
atomic_flag_test_and_set_explicit	lib/ovs-atomic-flag-gcc4.7+.h	/^atomic_flag_test_and_set_explicit(volatile atomic_flag *object,$/;"	f
atomic_flag_test_and_set_explicit	lib/ovs-atomic-gcc4+.h	/^atomic_flag_test_and_set_explicit(volatile atomic_flag *object,$/;"	f
atomic_flag_test_and_set_explicit	lib/ovs-atomic-i586.h	476;"	d
atomic_flag_test_and_set_explicit	lib/ovs-atomic-msvc.h	398;"	d
atomic_flag_test_and_set_explicit	lib/ovs-atomic-pthreads.h	/^atomic_flag_test_and_set_explicit(volatile atomic_flag *flag,$/;"	f
atomic_flag_test_and_set_explicit	lib/ovs-atomic-x86_64.h	343;"	d
atomic_flag_test_and_set_relaxed	lib/ovs-atomic.h	412;"	d
atomic_inc64	datapath-windows/ovsext/Atomic.h	/^atomic_inc64(UINT64 *ptr)$/;"	f
atomic_init	lib/ovs-atomic-clang.h	28;"	d
atomic_init	lib/ovs-atomic-gcc4+.h	47;"	d
atomic_init	lib/ovs-atomic-gcc4.7+.h	34;"	d
atomic_init	lib/ovs-atomic-i586.h	123;"	d
atomic_init	lib/ovs-atomic-msvc.h	56;"	d
atomic_init	lib/ovs-atomic-pthreads.h	46;"	d
atomic_init	lib/ovs-atomic-x86_64.h	124;"	d
atomic_int	lib/ovs-atomic.h	/^typedef ATOMIC(int)                atomic_int;$/;"	t
atomic_int16_t	lib/ovs-atomic.h	/^typedef ATOMIC(int16_t)   atomic_int16_t;$/;"	t
atomic_int32_t	lib/ovs-atomic.h	/^typedef ATOMIC(int32_t)   atomic_int32_t;$/;"	t
atomic_int8_t	lib/ovs-atomic.h	/^typedef ATOMIC(int8_t)    atomic_int8_t;$/;"	t
atomic_intmax_t	lib/ovs-atomic.h	/^typedef ATOMIC(intmax_t)           atomic_intmax_t;$/;"	t
atomic_intptr_t	lib/ovs-atomic.h	/^typedef ATOMIC(intptr_t)           atomic_intptr_t;$/;"	t
atomic_is_lock_free	lib/ovs-atomic-gcc4+.h	73;"	d
atomic_is_lock_free	lib/ovs-atomic-gcc4.7+.h	38;"	d
atomic_is_lock_free	lib/ovs-atomic-i586.h	169;"	d
atomic_is_lock_free	lib/ovs-atomic-pthreads.h	60;"	d
atomic_is_lock_free	lib/ovs-atomic-x86_64.h	170;"	d
atomic_llong	lib/ovs-atomic.h	/^typedef ATOMIC(long long)          atomic_llong;$/;"	t
atomic_long	lib/ovs-atomic.h	/^typedef ATOMIC(long)               atomic_long;$/;"	t
atomic_op	lib/ovs-atomic-msvc.h	188;"	d
atomic_op__	lib/ovs-atomic-gcc4+.h	131;"	d
atomic_op__	lib/ovs-atomic-i586.h	425;"	d
atomic_op__	lib/ovs-atomic-x86_64.h	306;"	d
atomic_op_locked	lib/ovs-atomic-locked.h	39;"	d
atomic_op_locked_add	lib/ovs-atomic-locked.h	34;"	d
atomic_op_locked_and	lib/ovs-atomic-locked.h	38;"	d
atomic_op_locked_or	lib/ovs-atomic-locked.h	36;"	d
atomic_op_locked_sub	lib/ovs-atomic-locked.h	35;"	d
atomic_op_locked_xor	lib/ovs-atomic-locked.h	37;"	d
atomic_or	lib/ovs-atomic-c11.h	38;"	d
atomic_or	lib/ovs-atomic-clang.h	74;"	d
atomic_or	lib/ovs-atomic-gcc4+.h	147;"	d
atomic_or	lib/ovs-atomic-gcc4.7+.h	68;"	d
atomic_or	lib/ovs-atomic-i586.h	457;"	d
atomic_or	lib/ovs-atomic-msvc.h	262;"	d
atomic_or	lib/ovs-atomic-pthreads.h	82;"	d
atomic_or	lib/ovs-atomic-x86_64.h	324;"	d
atomic_or32	lib/ovs-atomic-msvc.h	254;"	d
atomic_or_explicit	lib/ovs-atomic-c11.h	49;"	d
atomic_or_explicit	lib/ovs-atomic-clang.h	85;"	d
atomic_or_explicit	lib/ovs-atomic-gcc4+.h	155;"	d
atomic_or_explicit	lib/ovs-atomic-gcc4.7+.h	79;"	d
atomic_or_explicit	lib/ovs-atomic-i586.h	455;"	d
atomic_or_explicit	lib/ovs-atomic-msvc.h	265;"	d
atomic_or_explicit	lib/ovs-atomic-pthreads.h	90;"	d
atomic_or_explicit	lib/ovs-atomic-x86_64.h	322;"	d
atomic_or_generic	lib/ovs-atomic-msvc.h	258;"	d
atomic_or_relaxed	lib/ovs-atomic.h	406;"	d
atomic_producer	tests/test-atomic.c	/^atomic_producer(void * arg1 OVS_UNUSED)$/;"	f	file:
atomic_ptrdiff_t	lib/ovs-atomic.h	/^typedef ATOMIC(ptrdiff_t)          atomic_ptrdiff_t;$/;"	t
atomic_read	lib/ovs-atomic-c11.h	28;"	d
atomic_read	lib/ovs-atomic-clang.h	50;"	d
atomic_read	lib/ovs-atomic-gcc4+.h	93;"	d
atomic_read	lib/ovs-atomic-gcc4.7+.h	44;"	d
atomic_read	lib/ovs-atomic-i586.h	318;"	d
atomic_read	lib/ovs-atomic-msvc.h	169;"	d
atomic_read	lib/ovs-atomic-pthreads.h	66;"	d
atomic_read	lib/ovs-atomic-x86_64.h	227;"	d
atomic_read64	lib/ovs-atomic-msvc.h	163;"	d
atomic_readX	lib/ovs-atomic-msvc.h	157;"	d
atomic_read_8__	lib/ovs-atomic-i586.h	276;"	d
atomic_read_8__	lib/ovs-atomic-i586.h	290;"	d
atomic_read_explicit	lib/ovs-atomic-c11.h	30;"	d
atomic_read_explicit	lib/ovs-atomic-clang.h	52;"	d
atomic_read_explicit	lib/ovs-atomic-gcc4+.h	95;"	d
atomic_read_explicit	lib/ovs-atomic-gcc4.7+.h	46;"	d
atomic_read_explicit	lib/ovs-atomic-i586.h	305;"	d
atomic_read_explicit	lib/ovs-atomic-msvc.h	172;"	d
atomic_read_explicit	lib/ovs-atomic-pthreads.h	67;"	d
atomic_read_explicit	lib/ovs-atomic-x86_64.h	218;"	d
atomic_read_locked	lib/ovs-atomic-locked.h	17;"	d
atomic_read_relaxed	lib/ovs-atomic.h	392;"	d
atomic_reader	tests/test-atomic.c	/^atomic_reader(void *aux_)$/;"	f	file:
atomic_schar	lib/ovs-atomic.h	/^typedef ATOMIC(signed char)        atomic_schar;$/;"	t
atomic_short	lib/ovs-atomic.h	/^typedef ATOMIC(short)              atomic_short;$/;"	t
atomic_signal_fence	lib/ovs-atomic-clang.h	42;"	d
atomic_signal_fence	lib/ovs-atomic-gcc4+.h	/^atomic_signal_fence(memory_order order)$/;"	f
atomic_signal_fence	lib/ovs-atomic-gcc4.7+.h	37;"	d
atomic_signal_fence	lib/ovs-atomic-i586.h	/^atomic_signal_fence(memory_order order)$/;"	f
atomic_signal_fence	lib/ovs-atomic-msvc.h	/^atomic_signal_fence(memory_order order)$/;"	f
atomic_signal_fence	lib/ovs-atomic-pthreads.h	/^atomic_signal_fence(memory_order order OVS_UNUSED)$/;"	f
atomic_signal_fence	lib/ovs-atomic-x86_64.h	/^atomic_signal_fence(memory_order order)$/;"	f
atomic_size_t	lib/ovs-atomic.h	/^typedef ATOMIC(size_t)             atomic_size_t;$/;"	t
atomic_store	lib/ovs-atomic-clang.h	44;"	d
atomic_store	lib/ovs-atomic-gcc4+.h	77;"	d
atomic_store	lib/ovs-atomic-gcc4.7+.h	40;"	d
atomic_store	lib/ovs-atomic-i586.h	270;"	d
atomic_store	lib/ovs-atomic-msvc.h	127;"	d
atomic_store	lib/ovs-atomic-pthreads.h	62;"	d
atomic_store	lib/ovs-atomic-x86_64.h	211;"	d
atomic_store32	lib/ovs-atomic-msvc.h	92;"	d
atomic_store64	lib/ovs-atomic-msvc.h	110;"	d
atomic_storeX	lib/ovs-atomic-msvc.h	119;"	d
atomic_store_8__	lib/ovs-atomic-i586.h	243;"	d
atomic_store_8__	lib/ovs-atomic-i586.h	249;"	d
atomic_store_explicit	lib/ovs-atomic-clang.h	46;"	d
atomic_store_explicit	lib/ovs-atomic-gcc4+.h	79;"	d
atomic_store_explicit	lib/ovs-atomic-gcc4.7+.h	42;"	d
atomic_store_explicit	lib/ovs-atomic-i586.h	253;"	d
atomic_store_explicit	lib/ovs-atomic-msvc.h	130;"	d
atomic_store_explicit	lib/ovs-atomic-pthreads.h	63;"	d
atomic_store_explicit	lib/ovs-atomic-x86_64.h	198;"	d
atomic_store_locked	lib/ovs-atomic-locked.h	11;"	d
atomic_store_relaxed	lib/ovs-atomic.h	390;"	d
atomic_sub	lib/ovs-atomic-c11.h	36;"	d
atomic_sub	lib/ovs-atomic-clang.h	72;"	d
atomic_sub	lib/ovs-atomic-gcc4+.h	146;"	d
atomic_sub	lib/ovs-atomic-gcc4.7+.h	66;"	d
atomic_sub	lib/ovs-atomic-i586.h	452;"	d
atomic_sub	lib/ovs-atomic-msvc.h	220;"	d
atomic_sub	lib/ovs-atomic-pthreads.h	81;"	d
atomic_sub	lib/ovs-atomic-x86_64.h	301;"	d
atomic_sub_explicit	lib/ovs-atomic-c11.h	47;"	d
atomic_sub_explicit	lib/ovs-atomic-clang.h	83;"	d
atomic_sub_explicit	lib/ovs-atomic-gcc4+.h	153;"	d
atomic_sub_explicit	lib/ovs-atomic-gcc4.7+.h	77;"	d
atomic_sub_explicit	lib/ovs-atomic-i586.h	448;"	d
atomic_sub_explicit	lib/ovs-atomic-msvc.h	223;"	d
atomic_sub_explicit	lib/ovs-atomic-pthreads.h	88;"	d
atomic_sub_explicit	lib/ovs-atomic-x86_64.h	299;"	d
atomic_sub_relaxed	lib/ovs-atomic.h	404;"	d
atomic_thread_fence	lib/ovs-atomic-clang.h	41;"	d
atomic_thread_fence	lib/ovs-atomic-gcc4+.h	/^atomic_thread_fence(memory_order order)$/;"	f
atomic_thread_fence	lib/ovs-atomic-gcc4.7+.h	36;"	d
atomic_thread_fence	lib/ovs-atomic-i586.h	/^atomic_thread_fence(memory_order order)$/;"	f
atomic_thread_fence	lib/ovs-atomic-msvc.h	/^atomic_thread_fence(memory_order order)$/;"	f
atomic_thread_fence	lib/ovs-atomic-pthreads.h	/^atomic_thread_fence(memory_order order OVS_UNUSED)$/;"	f
atomic_thread_fence	lib/ovs-atomic-x86_64.h	/^atomic_thread_fence(memory_order order)$/;"	f
atomic_thread_fence_if_seq_cst	lib/ovs-atomic-gcc4+.h	/^atomic_thread_fence_if_seq_cst(memory_order order)$/;"	f
atomic_uchar	lib/ovs-atomic.h	/^typedef ATOMIC(unsigned char)      atomic_uchar;$/;"	t
atomic_uint	lib/ovs-atomic.h	/^typedef ATOMIC(unsigned int)       atomic_uint;$/;"	t
atomic_uint16_t	lib/ovs-atomic.h	/^typedef ATOMIC(uint16_t)  atomic_uint16_t;$/;"	t
atomic_uint32_t	lib/ovs-atomic.h	/^typedef ATOMIC(uint32_t)  atomic_uint32_t;$/;"	t
atomic_uint8_t	lib/ovs-atomic.h	/^typedef ATOMIC(uint8_t)   atomic_uint8_t;$/;"	t
atomic_uintmax_t	lib/ovs-atomic.h	/^typedef ATOMIC(uintmax_t)          atomic_uintmax_t;$/;"	t
atomic_uintptr_t	lib/ovs-atomic.h	/^typedef ATOMIC(uintptr_t)          atomic_uintptr_t;$/;"	t
atomic_ullong	lib/ovs-atomic.h	/^typedef ATOMIC(unsigned long long) atomic_ullong;$/;"	t
atomic_ulong	lib/ovs-atomic.h	/^typedef ATOMIC(unsigned long)      atomic_ulong;$/;"	t
atomic_ushort	lib/ovs-atomic.h	/^typedef ATOMIC(unsigned short)     atomic_ushort;$/;"	t
atomic_writer	tests/test-atomic.c	/^atomic_writer(void *aux_)$/;"	f	file:
atomic_xor	lib/ovs-atomic-c11.h	40;"	d
atomic_xor	lib/ovs-atomic-clang.h	76;"	d
atomic_xor	lib/ovs-atomic-gcc4+.h	148;"	d
atomic_xor	lib/ovs-atomic-gcc4.7+.h	70;"	d
atomic_xor	lib/ovs-atomic-i586.h	462;"	d
atomic_xor	lib/ovs-atomic-msvc.h	288;"	d
atomic_xor	lib/ovs-atomic-pthreads.h	83;"	d
atomic_xor	lib/ovs-atomic-x86_64.h	329;"	d
atomic_xor32	lib/ovs-atomic-msvc.h	280;"	d
atomic_xor_explicit	lib/ovs-atomic-c11.h	51;"	d
atomic_xor_explicit	lib/ovs-atomic-clang.h	87;"	d
atomic_xor_explicit	lib/ovs-atomic-gcc4+.h	157;"	d
atomic_xor_explicit	lib/ovs-atomic-gcc4.7+.h	81;"	d
atomic_xor_explicit	lib/ovs-atomic-i586.h	460;"	d
atomic_xor_explicit	lib/ovs-atomic-msvc.h	291;"	d
atomic_xor_explicit	lib/ovs-atomic-pthreads.h	92;"	d
atomic_xor_explicit	lib/ovs-atomic-x86_64.h	327;"	d
atomic_xor_generic	lib/ovs-atomic-msvc.h	284;"	d
atomic_xor_relaxed	lib/ovs-atomic.h	408;"	d
attach_child	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def attach_child(self, child):$/;"	m	class:ConfigurationFile
attached	lib/lacp.c	/^    bool attached;                \/* Attached. Traffic may flow. *\/$/;"	m	struct:slave	file:
attachedAggID	lib/sflow.h	/^    uint32_t attachedAggID;$/;"	m	struct:_SFLLACP_counters
attr	datapath-windows/ovsext/DpInternal.h	/^    uint64_t attr[NUM_PKT_ATTR_REQUIRED];$/;"	m	union:OvsIPv4TunnelKey
attr_len_tbl	lib/odp-util.c	/^struct attr_len_tbl {$/;"	s	file:
attrbuf	datapath/linux/compat/include/net/genetlink.h	/^	struct nlattr **        attrbuf;        \/* private *\/$/;"	m	struct:rpl_genl_family	typeref:struct:rpl_genl_family::nlattr
author	python/setup.py	/^    author='Open vSwitch',$/;"	v
author_email	python/setup.py	/^    author_email='dev@openvswitch.org',$/;"	v
authorizer	tests/test-l7.py	/^            authorizer = DummyAuthorizer()$/;"	v	class:get_ftpd.OVSFTPHandler
auto_attach	lib/vswitch-idl.h	/^	struct ovsrec_autoattach *auto_attach;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_autoattach
auto_edge	ofproto/ofproto.h	/^    bool auto_edge;$/;"	m	struct:ofproto_port_rstp_settings
auto_prov_mode	lib/lldp/aa-structs.h	/^    uint16_t                         auto_prov_mode;$/;"	m	struct:lldpd_aa_element_tlv
autoattach_insert_mapping	utilities/ovs-vsctl.c	/^autoattach_insert_mapping(struct ovsrec_autoattach *aa,$/;"	f	file:
aux	lib/dpctl.h	/^    void *aux;$/;"	m	struct:dpctl_params
aux	lib/fatal-signal.c	/^    void *aux;$/;"	m	struct:hook	file:
aux	lib/if-notifier-bsd.c	/^    void *aux;$/;"	m	struct:if_notifier	file:
aux	lib/if-notifier.c	/^    void *aux;$/;"	m	struct:if_notifier	file:
aux	lib/lacp.c	/^    void *aux;                    \/* Handle used to identify this slave. *\/$/;"	m	struct:slave	file:
aux	lib/netlink-notifier.c	/^    void *aux;$/;"	m	struct:nln_notifier	file:
aux	lib/ovs-lldp.c	/^    void             *aux;$/;"	m	struct:aa_mapping_internal	file:
aux	lib/ovs-rcu.c	/^    void *aux;$/;"	m	struct:ovsrcu_cb	file:
aux	lib/rstp-common.h	/^    void *aux;$/;"	m	struct:rstp
aux	lib/rtbsd.h	/^    void *aux;$/;"	m	struct:rtbsd_notifier
aux	lib/stp.c	/^    void *aux;                      \/* Auxiliary data the user may retrieve. *\/$/;"	m	struct:stp_port	file:
aux	lib/stp.c	/^    void *aux;$/;"	m	struct:stp	file:
aux	lib/unixctl.c	/^    void *aux;$/;"	m	struct:unixctl_command	file:
aux	ofproto/bond.c	/^    void *aux;                  \/* Client-provided handle for this slave. *\/$/;"	m	struct:bond_slave	file:
aux	ofproto/ofproto-dpif-mirror.c	/^    void *aux;                  \/* Key supplied by ofproto's client. *\/$/;"	m	struct:mirror	file:
aux	ofproto/ofproto-dpif.c	/^    void *aux;                  \/* Key supplied by ofproto's client. *\/$/;"	m	struct:ofbundle	file:
aux	tests/test-classifier.c	/^    int aux;                    \/* Auxiliary data. *\/$/;"	m	struct:test_rule	file:
aux_len	lib/packets.h	/^    uint8_t aux_len;$/;"	m	struct:igmpv3_record
aux_len	lib/packets.h	/^    uint8_t aux_len;$/;"	m	struct:mld2_record
auxdata_has_vlan_tci	lib/netdev-linux.c	/^auxdata_has_vlan_tci(const struct tpacket_auxdata *aux)$/;"	f	file:
auxdata_to_vlan_tpid	lib/netdev-linux.c	/^auxdata_to_vlan_tpid(const struct tpacket_auxdata *aux)$/;"	f	file:
auxes	tests/test-atomic.c	/^static struct atomic_aux *auxes = NULL;$/;"	v	typeref:struct:atomic_aux	file:
auxiliary_id	include/openflow/openflow-common.h	/^    uint8_t auxiliary_id;   \/* OF 1.3: Identify auxiliary connections *\/$/;"	m	struct:ofp_switch_features
auxiliary_id	lib/ofp-util.h	/^    uint8_t auxiliary_id;       \/* Identify auxiliary connections *\/$/;"	m	struct:ofputil_switch_features
available	lib/ovs-numa.c	/^    bool available;            \/* If the core can be pinned. *\/$/;"	m	struct:cpu_core	file:
avg_n_flows	ofproto/ofproto-dpif-upcall.c	/^    unsigned int avg_n_flows;$/;"	m	struct:udpif	file:
b	lib/ovs-atomic-flag-gcc4.7+.h	/^    unsigned char b;$/;"	m	struct:__anon137
b	lib/ovs-atomic-gcc4+.h	/^    int b;$/;"	m	struct:__anon139
b	lib/ovs-atomic-pthreads.h	/^    bool b;$/;"	m	struct:__anon144
b	tests/idltest.h	/^	bool b;$/;"	m	struct:idltest_simple
b	tests/test-atomic.c	/^    uint32_t b;$/;"	m	struct:atomic_aux	file:
ba	tests/idltest.h	/^	bool *ba;$/;"	m	struct:idltest_simple
backer	ofproto/ofproto-dpif-upcall.c	/^    struct dpif_backer *backer;        \/* Opaque dpif_backer pointer. *\/$/;"	m	struct:udpif	typeref:struct:udpif::dpif_backer	file:
backer	ofproto/ofproto-dpif.c	/^    struct dpif_backer *backer;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::dpif_backer	file:
backlog	lib/jsonrpc.c	/^    size_t backlog;$/;"	m	struct:jsonrpc	file:
backoff	lib/rconn.c	/^    int backoff;$/;"	m	struct:rconn	file:
backoff	lib/reconnect.c	/^    int backoff;$/;"	m	struct:reconnect	file:
backoff	lib/reconnect.h	/^    int backoff;                     \/* Current backoff duration.  *\/$/;"	m	struct:reconnect_stats
backoffThreshold	lib/sflow_api.h	/^    u_int32_t backoffThreshold;$/;"	m	struct:_SFLSampler
backoff_deadline	lib/rconn.c	/^    time_t backoff_deadline;$/;"	m	struct:rconn	file:
backtrace	lib/backtrace.c	/^VLOG_DEFINE_THIS_MODULE(backtrace);$/;"	v
backtrace	lib/backtrace.h	/^struct backtrace {$/;"	s
backtrace_capture	lib/backtrace.c	/^backtrace_capture(struct backtrace *b)$/;"	f
backtrace_capture	lib/backtrace.c	/^backtrace_capture(struct backtrace *backtrace)$/;"	f
backtrace_format	lib/backtrace.c	/^backtrace_format(const struct backtrace *b, struct ds *ds)$/;"	f	file:
bad_group_cmd	lib/ofp-util.c	/^bad_group_cmd(enum ofp15_group_mod_command cmd)$/;"	f	file:
bad_ofmsg_rl	lib/ofp-util.c	/^static struct vlog_rate_limit bad_ofmsg_rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
bad_ofmsg_rl	lib/vconn.c	/^static struct vlog_rate_limit bad_ofmsg_rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
bad_pids	utilities/ovs-check-dead-ifs	/^bad_pids = set()$/;"	v
bal_node	ofproto/bond.c	/^    struct ovs_list bal_node;   \/* In bond_rebalance()'s 'bals' list. *\/$/;"	m	struct:bond_slave	typeref:struct:bond_slave::ovs_list	file:
balance	ofproto/bond.c	/^    enum bond_mode balance;     \/* Balancing mode, one of BM_*. *\/$/;"	m	struct:bond	typeref:enum:bond::bond_mode	file:
balance	ofproto/bond.h	/^    enum bond_mode balance;$/;"	m	struct:bond_settings	typeref:enum:bond_settings::bond_mode
band	ofproto/connmgr.c	/^    enum ofproto_band band;     \/* In-band or out-of-band? *\/$/;"	m	struct:ofconn	typeref:enum:ofconn::ofproto_band	file:
band	ofproto/ofproto.h	/^    enum ofproto_band band;     \/* In-band or out-of-band? *\/$/;"	m	struct:ofproto_controller	typeref:enum:ofproto_controller::ofproto_band
band_stats	include/openflow/openflow-1.3.h	/^    struct ofp13_meter_band_stats band_stats[0];  \/* The band_stats length is$/;"	m	struct:ofp13_meter_stats	typeref:struct:ofp13_meter_stats::ofp13_meter_band_stats
band_types	include/openflow/openflow-1.3.h	/^    ovs_be32   band_types;    \/* Bitmaps of OFPMBT13_* values supported. *\/$/;"	m	struct:ofp13_meter_features
band_types	lib/ofp-util.h	/^    uint32_t band_types;        \/* Can support max 32 band types. *\/$/;"	m	struct:ofputil_meter_features
bands	lib/ofp-util.h	/^            struct ofpbuf bands;$/;"	m	struct:ofputil_requestforward::__anon134::__anon135	typeref:struct:ofputil_requestforward::__anon134::__anon135::ofpbuf
bands	lib/ofp-util.h	/^    struct ofputil_meter_band *bands;$/;"	m	struct:ofputil_meter_config	typeref:struct:ofputil_meter_config::ofputil_meter_band
bands	lib/ofp-util.h	/^    struct ofputil_meter_band_stats *bands;$/;"	m	struct:ofputil_meter_stats	typeref:struct:ofputil_meter_stats::ofputil_meter_band_stats
bands	ofproto/ofproto.c	/^    struct ofputil_meter_band *bands;$/;"	m	struct:meter	typeref:struct:meter::ofputil_meter_band	file:
bandwidth	python/ovstest/args.py	/^def bandwidth(string):$/;"	f
bandwidth	utilities/ovs-l3ping	/^            bandwidth = args.targetBandwidth$/;"	v
bandwidth	utilities/ovs-test	/^            bandwidth = ovs_args.targetBandwidth$/;"	v
bandwidth_to_string	python/ovstest/util.py	/^def bandwidth_to_string(bwidth):$/;"	f
barrier_aux	utilities/ovs-ofctl.c	/^struct barrier_aux {$/;"	s	file:
base	lib/id-pool.c	/^    uint32_t base;         \/* IDs in the range of [base, base + n_ids). *\/$/;"	m	struct:id_pool	file:
base	lib/ofpbuf.h	/^    void *base;                 \/* First byte of allocated space. *\/$/;"	m	struct:ofpbuf
base	ovn/utilities/ovn-sbctl.c	/^    struct ctl_context base;$/;"	m	struct:sbctl_context	typeref:struct:sbctl_context::ctl_context	file:
base	utilities/ovs-vsctl.c	/^    struct ctl_context base;$/;"	m	struct:vsctl_context	typeref:struct:vsctl_context::ctl_context	file:
base	vtep/vtep-ctl.c	/^    struct ctl_context base;$/;"	m	struct:vtep_ctl_context	typeref:struct:vtep_ctl_context::ctl_context	file:
base64	utilities/bugtool/ovs-bugtool	/^import base64$/;"	i
base_argtype	build-aux/extract-ofp-actions	/^            base_argtype = versions[0]["base_argtype"]$/;"	v
base_argtype	build-aux/extract-ofp-actions	/^        base_argtype = versions[0]["base_argtype"]$/;"	v
base_dpif_classes	lib/dpif.c	/^static const struct dpif_class *base_dpif_classes[] = {$/;"	v	typeref:struct:dpif_class	file:
base_flow	ofproto/ofproto-dpif-xlate.c	/^    struct flow base_flow;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::flow	file:
base_name	lib/dpif-provider.h	/^    char *base_name;$/;"	m	struct:dpif
base_name	lib/util.c	/^base_name(const char *file_name)$/;"	f
basis	lib/cmap.c	/^    uint32_t basis;             \/* Basis for rehashing client's hash values. *\/$/;"	m	struct:cmap_impl	file:
basis	lib/ofp-actions.c	/^    ovs_be16 basis;             \/* Universal hash parameter. *\/$/;"	m	struct:nx_action_bundle	file:
basis	lib/ofp-actions.c	/^    ovs_be16 basis;             \/* Universal hash parameter. *\/$/;"	m	struct:nx_action_multipath	file:
basis	lib/ofp-actions.h	/^    uint16_t basis;             \/* Universal hash parameter. *\/$/;"	m	struct:ofpact_bundle
basis	lib/ofp-actions.h	/^    uint16_t basis;             \/* Universal hash parameter. *\/$/;"	m	struct:ofpact_multipath
basis	ofproto/bond.c	/^    uint32_t basis;             \/* Basis for flow hash function. *\/$/;"	m	struct:bond	file:
basis	ofproto/bond.h	/^    uint32_t basis;             \/* Flow hashing basis. *\/$/;"	m	struct:bond_settings
batch	lib/dpif-netdev.c	/^    struct packet_batch *batch;$/;"	m	struct:dp_netdev_flow	typeref:struct:dp_netdev_flow::packet_batch	file:
bcast	ovn/northd/ovn-northd.c	/^    ovs_be32 bcast;             \/* 192.168.10.255. *\/$/;"	m	struct:ovn_port	file:
bd_cfg	ovn/utilities/ovn-sbctl.c	/^    const struct sbrec_port_binding *bd_cfg;$/;"	m	struct:sbctl_port_binding	typeref:struct:sbctl_port_binding::sbrec_port_binding	file:
be128	lib/meta-flow.h	/^    ovs_be128 be128;$/;"	m	union:mf_value
be16	include/openvswitch/types.h	/^        ovs_be16 be16[3];$/;"	m	union:eth_addr::__anon66
be16	lib/meta-flow.h	/^    ovs_be16 be16;$/;"	m	union:mf_value
be16	lib/meta-flow.h	/^    ovs_be16 be16[64];$/;"	m	union:mf_subvalue
be16	lib/packets.h	/^    ovs_be16 be16[8];$/;"	m	union:ovs_16aligned_in6_addr
be32	include/openvswitch/types.h	/^    ovs_be32 be32[4];$/;"	m	union:__anon63
be32	lib/classifier.c	/^    ovs_be32 be32;         \/* For access. *\/$/;"	m	union:trie_prefix	file:
be32	lib/meta-flow.h	/^    ovs_be32 be32;$/;"	m	union:mf_value
be32	lib/meta-flow.h	/^    ovs_be32 be32[32];$/;"	m	union:mf_subvalue
be32	lib/packets.h	/^    ovs_16aligned_be32 be32[4];$/;"	m	union:ovs_16aligned_in6_addr
be32_prefix_mask	lib/util.h	/^static inline ovs_be32 be32_prefix_mask(int plen)$/;"	f
be32ofs	lib/classifier.c	/^    uint8_t be32ofs;         \/* U32 offset of the field in question. *\/$/;"	m	struct:trie_ctx	file:
be64	include/openvswitch/types.h	/^    } be64;$/;"	m	union:__anon63	typeref:struct:__anon63::__anon64
be64	lib/meta-flow.h	/^    ovs_be64 be64;$/;"	m	union:mf_value
be64	lib/meta-flow.h	/^    ovs_be64 be64[16];$/;"	m	union:mf_subvalue
be64_get_low32	datapath/linux/vport-gre.c	/^static __be32 be64_get_low32(__be64 x)$/;"	f	file:
be64_get_low32	datapath/vport-gre.c	/^static __be32 be64_get_low32(__be64 x)$/;"	f	file:
be_get_bit_at	lib/classifier.c	/^be_get_bit_at(const ovs_be32 value[], unsigned int ofs)$/;"	f	file:
be_set_bit_at	lib/classifier.c	/^be_set_bit_at(ovs_be32 value[], unsigned int ofs)$/;"	f	file:
begin	utilities/ovs-dpctl-top	/^    def begin(self):$/;"	m	class:FlowDB
benchmark	tests/test-classifier.c	/^benchmark(bool use_wc)$/;"	f	file:
benchmark_cmap	tests/test-cmap.c	/^benchmark_cmap(void)$/;"	f	file:
benchmark_cmap_batched	tests/test-cmap.c	/^benchmark_cmap_batched(void)$/;"	f	file:
benchmark_hmap	tests/test-cmap.c	/^benchmark_hmap(void)$/;"	f	file:
bfd	lib/bfd.c	/^VLOG_DEFINE_THIS_MODULE(bfd);$/;"	v
bfd	lib/bfd.c	/^struct bfd {$/;"	s	file:
bfd	lib/vswitch-idl.h	/^	struct smap bfd;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::smap
bfd	ofproto/ofproto-dpif-monitor.c	/^    struct bfd *bfd;                  \/* Reference to bfd. *\/$/;"	m	struct:mport	typeref:struct:mport::bfd	file:
bfd	ofproto/ofproto-dpif-xlate.c	/^            struct bfd *bfd;$/;"	m	struct:xc_entry::__anon188::__anon189	typeref:struct:xc_entry::__anon188::__anon189::bfd	file:
bfd	ofproto/ofproto-dpif-xlate.c	/^    struct bfd *bfd;                 \/* BFD handle or null. *\/$/;"	m	struct:xport	typeref:struct:xport::bfd	file:
bfd	ofproto/ofproto-dpif.c	/^    struct bfd *bfd;            \/* BFD, if any. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::bfd	file:
bfd_account_rx	lib/bfd.c	/^bfd_account_rx(struct bfd *bfd, const struct dpif_flow_stats *stats)$/;"	f
bfd_bridge	vtep/ovs-vtep	/^bfd_bridge = "vtep_bfd"$/;"	v
bfd_config_local	vtep/vtep-idl.h	/^	struct smap bfd_config_local;$/;"	m	struct:vteprec_tunnel	typeref:struct:vteprec_tunnel::smap
bfd_config_remote	vtep/vtep-idl.h	/^	struct smap bfd_config_remote;$/;"	m	struct:vteprec_tunnel	typeref:struct:vteprec_tunnel::smap
bfd_diag_str	lib/bfd.c	/^bfd_diag_str(enum diag diag) {$/;"	f	file:
bfd_flag_str	lib/bfd.c	/^bfd_flag_str(enum flags flags)$/;"	f	file:
bfd_init	lib/bfd.c	/^bfd_init(void)$/;"	f
bfd_lookup_ip	lib/bfd.c	/^bfd_lookup_ip(const char *host_name, struct in_addr *addr)$/;"	f	file:
bfd_params	vtep/vtep-idl.h	/^	struct smap bfd_params;$/;"	m	struct:vteprec_tunnel	typeref:struct:vteprec_tunnel::smap
bfd_ref	lib/bfd.c	/^bfd_ref(const struct bfd *bfd_)$/;"	f
bfd_ref	vtep/ovs-vtep	/^bfd_ref = {}$/;"	v
bfd_should_process_flow	lib/bfd.c	/^bfd_should_process_flow(const struct bfd *bfd_, const struct flow *flow,$/;"	f
bfd_state_str	lib/bfd.c	/^bfd_state_str(enum state state)$/;"	f	file:
bfd_status	lib/vswitch-idl.h	/^	struct smap bfd_status;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::smap
bfd_status	vtep/vtep-idl.h	/^	struct smap bfd_status;$/;"	m	struct:vteprec_tunnel	typeref:struct:vteprec_tunnel::smap
bfd_status_changed	ofproto/ofproto-dpif.c	/^bfd_status_changed(struct ofport *ofport_)$/;"	f	file:
bfd_status_changed	ofproto/ofproto-provider.h	/^    bool (*bfd_status_changed)(struct ofport *ofport);$/;"	m	struct:ofproto_class
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = utilities\/ovs-appctl$(EXEEXT) \\$/;"	m
bin_SCRIPTS	Makefile	/^bin_SCRIPTS = utilities\/ovs-docker utilities\/ovs-pki $(am__append_28)$/;"	m
bin_to_hex	tests/test-sflow.c	/^bin_to_hex(int hexit)$/;"	f	file:
binary	utilities/ovs-parse-backtrace	/^            binary = debug$/;"	v
binary	utilities/ovs-parse-backtrace	/^        binary = "\/usr\/sbin\/ovs-vswitchd"$/;"	v
binary	utilities/ovs-parse-backtrace	/^        binary = args[0]$/;"	v
binascii	utilities/ovs-pcap	/^import binascii$/;"	i
bind_local_port	utilities/ovs-benchmark.c	/^bind_local_port(int fd, unsigned short int *local_port,$/;"	f	file:
bind_unix_socket	lib/socket-util-unix.c	/^bind_unix_socket(int fd, struct sockaddr *sun, socklen_t sun_len)$/;"	f	file:
binding	ovn/controller-vtep/binding.c	/^VLOG_DEFINE_THIS_MODULE(binding);$/;"	v
binding	ovn/controller/binding.c	/^VLOG_DEFINE_THIS_MODULE(binding);$/;"	v
binding_cleanup	ovn/controller-vtep/binding.c	/^binding_cleanup(struct controller_vtep_ctx *ctx)$/;"	f
binding_cleanup	ovn/controller/binding.c	/^binding_cleanup(struct controller_ctx *ctx, const char *chassis_id)$/;"	f
binding_register_ovs_idl	ovn/controller/binding.c	/^binding_register_ovs_idl(struct ovsdb_idl *ovs_idl)$/;"	f
binding_run	ovn/controller-vtep/binding.c	/^binding_run(struct controller_vtep_ctx *ctx)$/;"	f
binding_run	ovn/controller/binding.c	/^binding_run(struct controller_ctx *ctx, const struct ovsrec_bridge *br_int,$/;"	f
bindings	vtep/vtep-ctl.c	/^    struct shash bindings;      \/* Maps from vlan to vtep_ctl_lswitch. *\/$/;"	m	struct:vtep_ctl_port	typeref:struct:vtep_ctl_port::shash	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	datapath/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bitmap_allocate	lib/bitmap.h	/^bitmap_allocate(size_t n_bits)$/;"	f
bitmap_allocate1	lib/bitmap.h	/^bitmap_allocate1(size_t n_bits)$/;"	f
bitmap_and	lib/bitmap.h	/^bitmap_and(unsigned long *dst, const unsigned long *arg, size_t n)$/;"	f
bitmap_bit__	lib/bitmap.h	/^bitmap_bit__(size_t offset)$/;"	f
bitmap_clone	lib/bitmap.h	/^bitmap_clone(const unsigned long *bitmap, size_t n_bits)$/;"	f
bitmap_count1	lib/bitmap.h	/^bitmap_count1(const unsigned long int *bitmap, size_t n)$/;"	f
bitmap_equal	lib/bitmap.h	/^bitmap_equal(const unsigned long *a, const unsigned long *b, size_t n)$/;"	f
bitmap_free	lib/bitmap.h	/^bitmap_free(unsigned long *bitmap)$/;"	f
bitmap_init1	lib/bitmap.h	/^bitmap_init1(unsigned long *bitmap, size_t n_bits)$/;"	f
bitmap_is_all_zeros	lib/bitmap.h	/^bitmap_is_all_zeros(const unsigned long *bitmap, size_t n)$/;"	f
bitmap_is_set	lib/bitmap.h	/^bitmap_is_set(const unsigned long *bitmap, size_t offset)$/;"	f
bitmap_n_bytes	lib/bitmap.h	/^bitmap_n_bytes(size_t n_bits)$/;"	f
bitmap_n_longs	lib/bitmap.h	/^bitmap_n_longs(size_t n_bits)$/;"	f
bitmap_not	lib/bitmap.h	/^bitmap_not(unsigned long *dst, size_t n)$/;"	f
bitmap_or	lib/bitmap.h	/^bitmap_or(unsigned long *dst, const unsigned long *arg, size_t n)$/;"	f
bitmap_scan	lib/bitmap.h	/^bitmap_scan(const unsigned long *bitmap, bool target, size_t start, size_t end)$/;"	f
bitmap_set	lib/bitmap.h	/^bitmap_set(unsigned long *bitmap, size_t offset, bool value)$/;"	f
bitmap_set0	lib/bitmap.h	/^bitmap_set0(unsigned long *bitmap, size_t offset)$/;"	f
bitmap_set1	lib/bitmap.h	/^bitmap_set1(unsigned long *bitmap, size_t offset)$/;"	f
bitmap_set_multiple	lib/bitmap.h	/^bitmap_set_multiple(unsigned long *bitmap, size_t start, size_t count,$/;"	f
bitmap_set_n__	lib/bitmap.h	/^bitmap_set_n__(unsigned long *bitmap, size_t start, size_t n, bool value)$/;"	f
bitmap_unit__	lib/bitmap.h	/^bitmap_unit__(const unsigned long *bitmap, size_t offset)$/;"	f
bitwise_copy	lib/util.c	/^bitwise_copy(const void *src_, unsigned int src_len, unsigned int src_ofs,$/;"	f
bitwise_get	lib/util.c	/^bitwise_get(const void *src, unsigned int src_len,$/;"	f
bitwise_get_bit	lib/util.c	/^bitwise_get_bit(const void *src_, unsigned int len, unsigned int ofs)$/;"	f
bitwise_is_all_zeros	lib/util.c	/^bitwise_is_all_zeros(const void *p_, unsigned int len, unsigned int ofs,$/;"	f
bitwise_one	lib/util.c	/^bitwise_one(void *dst_, unsigned int dst_len, unsigned dst_ofs,$/;"	f
bitwise_put	lib/util.c	/^bitwise_put(uint64_t value,$/;"	f
bitwise_put0	lib/util.c	/^bitwise_put0(void *dst_, unsigned int len, unsigned int ofs)$/;"	f
bitwise_put1	lib/util.c	/^bitwise_put1(void *dst_, unsigned int len, unsigned int ofs)$/;"	f
bitwise_put_bit	lib/util.c	/^bitwise_put_bit(void *dst, unsigned int len, unsigned int ofs, bool b)$/;"	f
bitwise_rscan	lib/util.c	/^bitwise_rscan(const void *p, unsigned int len, bool target, int start, int end)$/;"	f
bitwise_scan	lib/util.c	/^bitwise_scan(const void *p, unsigned int len, bool target, unsigned int start,$/;"	f
bitwise_toggle_bit	lib/util.c	/^bitwise_toggle_bit(void *dst_, unsigned int len, unsigned int ofs)$/;"	f
bitwise_zero	lib/util.c	/^bitwise_zero(void *dst_, unsigned int dst_len, unsigned dst_ofs,$/;"	f
block	python/ovs/poller.py	/^    def block(self):$/;"	m	class:Poller
block_xml_to_nroff	python/build/nroff.py	/^def block_xml_to_nroff(nodes, para='.PP'):$/;"	f
bm	lib/meta-flow.h	/^    unsigned long bm[BITMAP_N_LONGS(MFF_N_IDS)];$/;"	m	struct:mf_bitmap
bogus_packet_counter	ofproto/fail-open.c	/^    struct rconn_packet_counter *bogus_packet_counter;$/;"	m	struct:fail_open	typeref:struct:fail_open::rconn_packet_counter	file:
bond	ofproto/bond.c	/^    struct bond *bond;          \/* The bond that contains this slave. *\/$/;"	m	struct:bond_slave	typeref:struct:bond_slave::bond	file:
bond	ofproto/bond.c	/^VLOG_DEFINE_THIS_MODULE(bond);$/;"	v
bond	ofproto/bond.c	/^struct bond {$/;"	s	file:
bond	ofproto/ofproto-dpif-xlate.c	/^            struct bond *bond;$/;"	m	struct:xc_entry::__anon188::__anon192	typeref:struct:xc_entry::__anon188::__anon192::bond	file:
bond	ofproto/ofproto-dpif-xlate.c	/^        } bond;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon192	file:
bond	ofproto/ofproto-dpif-xlate.c	/^    struct bond *bond;             \/* Nonnull iff more than one port. *\/$/;"	m	struct:xbundle	typeref:struct:xbundle::bond	file:
bond	ofproto/ofproto-dpif.c	/^    struct bond *bond;          \/* Nonnull iff more than one port. *\/$/;"	m	struct:ofbundle	typeref:struct:ofbundle::bond	file:
bond	ofproto/ofproto.h	/^    struct bond_settings *bond; \/* Must be nonnull iff if n_slaves > 1. *\/$/;"	m	struct:ofproto_bundle_settings	typeref:struct:ofproto_bundle_settings::bond_settings
bond_account	ofproto/bond.c	/^bond_account(struct bond *bond, const struct flow *flow, uint16_t vlan,$/;"	f
bond_active_slave	lib/vswitch-idl.h	/^	char *bond_active_slave;$/;"	m	struct:ovsrec_port
bond_active_slave_changed	ofproto/bond.c	/^bond_active_slave_changed(struct bond *bond)$/;"	f	file:
bond_check_admissibility	ofproto/bond.c	/^bond_check_admissibility(struct bond *bond, const void *slave_,$/;"	f
bond_choose_active_slave	ofproto/bond.c	/^bond_choose_active_slave(struct bond *bond)$/;"	f	file:
bond_choose_output_slave	ofproto/bond.c	/^bond_choose_output_slave(struct bond *bond, const struct flow *flow,$/;"	f
bond_choose_slave	ofproto/bond.c	/^bond_choose_slave(const struct bond *bond)$/;"	f	file:
bond_compose_learning_packet	ofproto/bond.c	/^bond_compose_learning_packet(struct bond *bond, const struct eth_addr eth_src,$/;"	f
bond_create	ofproto/bond.c	/^bond_create(const struct bond_settings *s, struct ofproto_dpif *ofproto)$/;"	f
bond_device_exists	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def bond_device_exists(name):$/;"	f
bond_downdelay	lib/vswitch-idl.h	/^	int64_t bond_downdelay;$/;"	m	struct:ovsrec_port
bond_enable_slave	ofproto/bond.c	/^bond_enable_slave(struct bond_slave *slave, bool enable)$/;"	f	file:
bond_entry	ofproto/bond.c	/^struct bond_entry {$/;"	s	file:
bond_entry_reset	ofproto/bond.c	/^bond_entry_reset(struct bond *bond)$/;"	f	file:
bond_fake_iface	lib/vswitch-idl.h	/^	bool bond_fake_iface;$/;"	m	struct:ovsrec_port
bond_find_slave_by_mac	ofproto/bond.c	/^bond_find_slave_by_mac(const struct bond *bond, const struct eth_addr mac)$/;"	f	file:
bond_get_changed_active_slave	ofproto/bond.c	/^bond_get_changed_active_slave(const char *name, struct eth_addr *mac,$/;"	f
bond_hash	ofproto/bond.c	/^bond_hash(const struct bond *bond, const struct flow *flow, uint16_t vlan)$/;"	f	file:
bond_hash_src	ofproto/bond.c	/^bond_hash_src(const struct eth_addr mac, uint16_t vlan, uint32_t basis)$/;"	f	file:
bond_hash_tcp	ofproto/bond.c	/^bond_hash_tcp(const struct flow *flow, uint16_t vlan, uint32_t basis)$/;"	f	file:
bond_init	ofproto/bond.c	/^bond_init(void)$/;"	f
bond_link_status_update	ofproto/bond.c	/^bond_link_status_update(struct bond_slave *slave)$/;"	f	file:
bond_lookup_slave	ofproto/bond.c	/^bond_lookup_slave(struct bond *bond, const char *slave_name)$/;"	f	file:
bond_may_recirc	ofproto/bond.c	/^bond_may_recirc(const struct bond *bond, uint32_t *recirc_id,$/;"	f
bond_mode	lib/vswitch-idl.h	/^	char *bond_mode;$/;"	m	struct:ovsrec_port
bond_mode	ofproto/bond.h	/^enum bond_mode {$/;"	g
bond_mode_from_string	ofproto/bond.c	/^bond_mode_from_string(enum bond_mode *balance, const char *s)$/;"	f
bond_mode_to_string	ofproto/bond.c	/^bond_mode_to_string(enum bond_mode balance) {$/;"	f
bond_op	ofproto/bond.c	/^enum bond_op {$/;"	g	file:
bond_pr_rule_op	ofproto/bond.c	/^struct bond_pr_rule_op {$/;"	s	file:
bond_rebalance	ofproto/bond.c	/^bond_rebalance(struct bond *bond)$/;"	f
bond_reconfigure	ofproto/bond.c	/^bond_reconfigure(struct bond *bond, const struct bond_settings *s)$/;"	f
bond_ref	ofproto/bond.c	/^bond_ref(const struct bond *bond_)$/;"	f
bond_revalidate	ofproto/bond.c	/^    bool bond_revalidate;       \/* True if flows need revalidation. *\/$/;"	m	struct:bond	file:
bond_run	ofproto/bond.c	/^bond_run(struct bond *bond, enum lacp_status lacp_status)$/;"	f
bond_settings	ofproto/bond.h	/^struct bond_settings {$/;"	s
bond_should_send_learning_packets	ofproto/bond.c	/^bond_should_send_learning_packets(struct bond *bond)$/;"	f
bond_slave	ofproto/bond.c	/^struct bond_slave {$/;"	s	file:
bond_slave_lookup	ofproto/bond.c	/^bond_slave_lookup(struct bond *bond, const void *slave_)$/;"	f	file:
bond_slave_register	ofproto/bond.c	/^bond_slave_register(struct bond *bond, void *slave_,$/;"	f
bond_slave_set_may_enable	ofproto/bond.c	/^bond_slave_set_may_enable(struct bond *bond, void *slave_, bool may_enable)$/;"	f
bond_slave_set_netdev	ofproto/bond.c	/^bond_slave_set_netdev(struct bond *bond, void *slave_, struct netdev *netdev)$/;"	f
bond_slave_unregister	ofproto/bond.c	/^bond_slave_unregister(struct bond *bond, const void *slave_)$/;"	f
bond_unixctl_disable_slave	ofproto/bond.c	/^bond_unixctl_disable_slave(struct unixctl_conn *conn,$/;"	f	file:
bond_unixctl_enable_slave	ofproto/bond.c	/^bond_unixctl_enable_slave(struct unixctl_conn *conn,$/;"	f	file:
bond_unixctl_hash	ofproto/bond.c	/^bond_unixctl_hash(struct unixctl_conn *conn, int argc, const char *argv[],$/;"	f	file:
bond_unixctl_list	ofproto/bond.c	/^bond_unixctl_list(struct unixctl_conn *conn,$/;"	f	file:
bond_unixctl_migrate	ofproto/bond.c	/^bond_unixctl_migrate(struct unixctl_conn *conn,$/;"	f	file:
bond_unixctl_set_active_slave	ofproto/bond.c	/^bond_unixctl_set_active_slave(struct unixctl_conn *conn,$/;"	f	file:
bond_unixctl_show	ofproto/bond.c	/^bond_unixctl_show(struct unixctl_conn *conn,$/;"	f	file:
bond_unref	ofproto/bond.c	/^bond_unref(struct bond *bond)$/;"	f
bond_update_post_recirc_rules	ofproto/bond.c	/^bond_update_post_recirc_rules(struct bond* bond, const bool force)$/;"	f
bond_updelay	lib/vswitch-idl.h	/^	int64_t bond_updelay;$/;"	m	struct:ovsrec_port
bond_verdict	ofproto/bond.h	/^enum bond_verdict {$/;"	g
bond_wait	ofproto/bond.c	/^bond_wait(struct bond *bond)$/;"	f
bonding_driver_loaded	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def bonding_driver_loaded():$/;"	f
bool	datapath/linux/compat/include/linux/types.h	/^typedef _Bool bool;$/;"	t
boolean	lib/ovsdb-data.h	/^    bool boolean;$/;"	m	union:ovsdb_atom
boolean	ovn/lib/expr.h	/^        bool boolean;$/;"	m	union:expr::__anon200
bootTime	lib/sflow_api.h	/^    time_t bootTime;        \/* time when we booted or started *\/$/;"	m	struct:_SFLAgent
boot_time	lib/timeval.c	/^static long long int boot_time;$/;"	v	file:
boot_time	ofproto/netflow.c	/^    long long int boot_time;      \/* Time when netflow_create() was called. *\/$/;"	m	struct:netflow	file:
booted	lib/cfm.c	/^    bool booted;           \/* A full fault interval has occurred. *\/$/;"	m	struct:cfm	file:
booted	vswitchd/system-stats.c	/^    long long int booted;       \/* ms since monitor started. *\/$/;"	m	struct:process_info	file:
bootstrap_ca_cert	lib/stream-ssl.c	/^static bool bootstrap_ca_cert;$/;"	v	file:
bootstrap_ca_cert	lib/vswitch-idl.h	/^	bool bootstrap_ca_cert;$/;"	m	struct:ovsrec_ssl
bootstrap_ca_cert	ovsdb/ovsdb-server.c	/^static bool bootstrap_ca_cert;$/;"	v	file:
both_modules	datapath/Makefile	/^both_modules = \\$/;"	m
both_modules	datapath/Modules.mk	/^both_modules = \\$/;"	m
bound_port	lib/stream-provider.h	/^    ovs_be16 bound_port;$/;"	m	struct:pstream
bound_port	ovsdb/jsonrpc-server.h	/^    ovs_be16 bound_port;$/;"	m	struct:ovsdb_jsonrpc_remote_status
bpdu	tests/test-rstp.c	/^struct bpdu {$/;"	s	file:
bpdu	tests/test-stp.c	/^struct bpdu {$/;"	s	file:
bpdu_size	lib/rstp-state-machines.c	/^enum bpdu_size {$/;"	g	file:
br_cfg	utilities/ovs-vsctl.c	/^    struct ovsrec_bridge *br_cfg;$/;"	m	struct:vsctl_bridge	typeref:struct:vsctl_bridge::ovsrec_bridge	file:
br_int	ovn/controller/encaps.c	/^    const struct ovsrec_bridge *br_int;$/;"	m	struct:tunnel_ctx	typeref:struct:tunnel_ctx::ovsrec_bridge	file:
br_name	lib/tnl-arp-cache.c	/^    char br_name[IFNAMSIZ];$/;"	m	struct:tnl_arp_entry	file:
br_name	ofproto/ofproto-dpif-xlate.c	/^            char br_name[IFNAMSIZ];$/;"	m	struct:xc_entry::__anon188::__anon197	file:
br_name	ofproto/ofproto.h	/^    char *br_name;              \/* Name of owning bridge. *\/$/;"	m	struct:iface_hint
br_name	vswitchd/bridge.c	/^    char *br_name;$/;"	m	struct:aa_mapping	file:
br_refresh_datapath_info	vswitchd/bridge.c	/^br_refresh_datapath_info(struct bridge *br)$/;"	f	file:
br_refresh_rstp_status	vswitchd/bridge.c	/^br_refresh_rstp_status(struct bridge *br)$/;"	f	file:
br_refresh_stp_status	vswitchd/bridge.c	/^br_refresh_stp_status(struct bridge *br)$/;"	f	file:
br_should_route_hook	datapath/linux/vport-netdev.c	/^EXPORT_SYMBOL(br_should_route_hook);$/;"	v
br_should_route_hook	datapath/vport-netdev.c	/^EXPORT_SYMBOL(br_should_route_hook);$/;"	v
br_type	ofproto/ofproto.h	/^    char *br_type;              \/* Type of owning bridge. *\/$/;"	m	struct:iface_hint
bridge	lib/vswitch-idl.h	/^	struct ovsrec_bridge *bridge;$/;"	m	struct:ovsrec_flow_sample_collector_set	typeref:struct:ovsrec_flow_sample_collector_set::ovsrec_bridge
bridge	ovn/controller/encaps.c	/^    const struct ovsrec_bridge *bridge;$/;"	m	struct:port_hash_node	typeref:struct:port_hash_node::ovsrec_bridge	file:
bridge	tests/test-rstp.c	/^    struct bridge *bridge;$/;"	m	struct:lan_conn	typeref:struct:lan_conn::bridge	file:
bridge	tests/test-rstp.c	/^struct bridge {$/;"	s	file:
bridge	tests/test-stp.c	/^    struct bridge *bridge;$/;"	m	struct:lan_conn	typeref:struct:lan_conn::bridge	file:
bridge	tests/test-stp.c	/^struct bridge {$/;"	s	file:
bridge	utilities/ovs-vsctl.c	/^    struct vsctl_bridge *bridge;$/;"	m	struct:vsctl_port	typeref:struct:vsctl_port::vsctl_bridge	file:
bridge	vswitchd/bridge.c	/^    struct bridge *bridge;$/;"	m	struct:aa_mapping	typeref:struct:aa_mapping::bridge	file:
bridge	vswitchd/bridge.c	/^    struct bridge *bridge;$/;"	m	struct:mirror	typeref:struct:mirror::bridge	file:
bridge	vswitchd/bridge.c	/^    struct bridge *bridge;$/;"	m	struct:port	typeref:struct:port::bridge	file:
bridge	vswitchd/bridge.c	/^VLOG_DEFINE_THIS_MODULE(bridge);$/;"	v
bridge	vswitchd/bridge.c	/^struct bridge {$/;"	s	file:
bridgePort	lib/sflow_api.h	/^    u_int32_t bridgePort; \/* port number local to bridge *\/$/;"	m	struct:_SFLPoller
bridge_aa_mapping_configure	vswitchd/bridge.c	/^bridge_aa_mapping_configure(struct aa_mapping *m)$/;"	f	file:
bridge_aa_mapping_create	vswitchd/bridge.c	/^bridge_aa_mapping_create(struct bridge *br,$/;"	f	file:
bridge_aa_mapping_destroy	vswitchd/bridge.c	/^bridge_aa_mapping_destroy(struct aa_mapping *m)$/;"	f	file:
bridge_aa_mapping_find	vswitchd/bridge.c	/^bridge_aa_mapping_find(struct bridge *br, const int64_t isid)$/;"	f	file:
bridge_aa_need_refresh	vswitchd/bridge.c	/^bridge_aa_need_refresh(struct bridge *br)$/;"	f	file:
bridge_aa_refresh_queued	vswitchd/bridge.c	/^bridge_aa_refresh_queued(struct bridge *br)$/;"	f	file:
bridge_aa_update_trunks	vswitchd/bridge.c	/^bridge_aa_update_trunks(struct port *port, struct bridge_aa_vlan *m)$/;"	f	file:
bridge_aa_vlan	lib/ovs-lldp.h	/^struct bridge_aa_vlan {$/;"	s
bridge_aa_vlan_oper	lib/ovs-lldp.h	/^enum bridge_aa_vlan_oper {$/;"	g
bridge_add_ports	vswitchd/bridge.c	/^bridge_add_ports(struct bridge *br, const struct shash *wanted_ports)$/;"	f	file:
bridge_add_ports__	vswitchd/bridge.c	/^bridge_add_ports__(struct bridge *br, const struct shash *wanted_ports,$/;"	f	file:
bridge_collect_wanted_ports	vswitchd/bridge.c	/^bridge_collect_wanted_ports(struct bridge *br,$/;"	f	file:
bridge_configure_aa	vswitchd/bridge.c	/^bridge_configure_aa(struct bridge *br)$/;"	f	file:
bridge_configure_datapath_id	vswitchd/bridge.c	/^bridge_configure_datapath_id(struct bridge *br)$/;"	f	file:
bridge_configure_dp_desc	vswitchd/bridge.c	/^bridge_configure_dp_desc(struct bridge *br)$/;"	f	file:
bridge_configure_forward_bpdu	vswitchd/bridge.c	/^bridge_configure_forward_bpdu(struct bridge *br)$/;"	f	file:
bridge_configure_ipfix	vswitchd/bridge.c	/^bridge_configure_ipfix(struct bridge *br)$/;"	f	file:
bridge_configure_local_iface_netdev	vswitchd/bridge.c	/^bridge_configure_local_iface_netdev(struct bridge *br,$/;"	f	file:
bridge_configure_mac_table	vswitchd/bridge.c	/^bridge_configure_mac_table(struct bridge *br)$/;"	f	file:
bridge_configure_mcast_snooping	vswitchd/bridge.c	/^bridge_configure_mcast_snooping(struct bridge *br)$/;"	f	file:
bridge_configure_mirrors	vswitchd/bridge.c	/^bridge_configure_mirrors(struct bridge *br)$/;"	f	file:
bridge_configure_netflow	vswitchd/bridge.c	/^bridge_configure_netflow(struct bridge *br)$/;"	f	file:
bridge_configure_remotes	vswitchd/bridge.c	/^bridge_configure_remotes(struct bridge *br,$/;"	f	file:
bridge_configure_rstp	vswitchd/bridge.c	/^bridge_configure_rstp(struct bridge *br, bool enable_rstp)$/;"	f	file:
bridge_configure_sflow	vswitchd/bridge.c	/^bridge_configure_sflow(struct bridge *br, int *sflow_bridge_number)$/;"	f	file:
bridge_configure_spanning_tree	vswitchd/bridge.c	/^bridge_configure_spanning_tree(struct bridge *br)$/;"	f	file:
bridge_configure_stp	vswitchd/bridge.c	/^bridge_configure_stp(struct bridge *br, bool enable_stp)$/;"	f	file:
bridge_configure_tables	vswitchd/bridge.c	/^bridge_configure_tables(struct bridge *br)$/;"	f	file:
bridge_create	vswitchd/bridge.c	/^bridge_create(const struct ovsrec_bridge *br_cfg)$/;"	f	file:
bridge_del_ports	vswitchd/bridge.c	/^bridge_del_ports(struct bridge *br, const struct shash *wanted_ports)$/;"	f	file:
bridge_delete_ofprotos	vswitchd/bridge.c	/^bridge_delete_ofprotos(void)$/;"	f	file:
bridge_delete_or_reconfigure_ports	vswitchd/bridge.c	/^bridge_delete_or_reconfigure_ports(struct bridge *br)$/;"	f	file:
bridge_delete_port	ovn/controller/encaps.c	/^bridge_delete_port(const struct ovsrec_bridge *br,$/;"	f	file:
bridge_delete_port	utilities/ovs-vsctl.c	/^bridge_delete_port(struct ovsrec_bridge *br, struct ovsrec_port *port)$/;"	f	file:
bridge_destroy	vswitchd/bridge.c	/^bridge_destroy(struct bridge *br)$/;"	f	file:
bridge_detection_state_machine	lib/rstp-common.h	/^enum bridge_detection_state_machine {$/;"	g
bridge_exit	vswitchd/bridge.c	/^bridge_exit(void)$/;"	f
bridge_exporter	ofproto/ofproto-dpif-ipfix.c	/^    struct dpif_ipfix_bridge_exporter bridge_exporter;$/;"	m	struct:dpif_ipfix	typeref:struct:dpif_ipfix::dpif_ipfix_bridge_exporter	file:
bridge_exporter_enabled	ofproto/ofproto-dpif-ipfix.c	/^bridge_exporter_enabled(struct dpif_ipfix *di)$/;"	f	file:
bridge_forward_delay	lib/stp.c	/^    int bridge_forward_delay;       \/* 8.5.3.10: forward_delay as root. *\/$/;"	m	struct:stp	file:
bridge_forward_delay	ofproto/ofproto.h	/^    uint16_t bridge_forward_delay;$/;"	m	struct:ofproto_rstp_settings
bridge_get_allowed_versions	vswitchd/bridge.c	/^bridge_get_allowed_versions(struct bridge *br)$/;"	f	file:
bridge_get_controllers	vswitchd/bridge.c	/^bridge_get_controllers(const struct bridge *br,$/;"	f	file:
bridge_get_memory_usage	vswitchd/bridge.c	/^bridge_get_memory_usage(struct simap *usage)$/;"	f
bridge_has_bond_fake_iface	vswitchd/bridge.c	/^bridge_has_bond_fake_iface(const struct bridge *br, const char *name)$/;"	f	file:
bridge_hello_time	lib/stp.c	/^    int bridge_hello_time;          \/* 8.5.3.9: hello_time as root. *\/$/;"	m	struct:stp	file:
bridge_id	lib/stp.c	/^    stp_identifier bridge_id;       \/* 8.5.3.7: This bridge. *\/$/;"	m	struct:stp	file:
bridge_id	ofproto/ofproto.h	/^    rstp_identifier bridge_id;$/;"	m	struct:ofproto_rstp_status
bridge_id	ofproto/ofproto.h	/^    stp_identifier bridge_id;$/;"	m	struct:ofproto_stp_status
bridge_init	vswitchd/bridge.c	/^bridge_init(const char *remote)$/;"	f
bridge_init_ofproto	vswitchd/bridge.c	/^bridge_init_ofproto(const struct ovsrec_open_vswitch *cfg)$/;"	f	file:
bridge_insert_port	utilities/ovs-vsctl.c	/^bridge_insert_port(struct ovsrec_bridge *br, struct ovsrec_port *port)$/;"	f	file:
bridge_lookup	vswitchd/bridge.c	/^bridge_lookup(const char *name)$/;"	f	file:
bridge_max_age	lib/stp.c	/^    int bridge_max_age;             \/* 8.5.3.8: max_age when we're root. *\/$/;"	m	struct:stp	file:
bridge_max_age	ofproto/ofproto.h	/^    uint16_t bridge_max_age;$/;"	m	struct:ofproto_rstp_settings
bridge_ofproto_controller_for_mgmt	vswitchd/bridge.c	/^bridge_ofproto_controller_for_mgmt(const struct bridge *br,$/;"	f	file:
bridge_ofproto_controller_from_ovsrec	vswitchd/bridge.c	/^bridge_ofproto_controller_from_ovsrec(const struct ovsrec_controller *c,$/;"	f	file:
bridge_pick_datapath_id	vswitchd/bridge.c	/^bridge_pick_datapath_id(struct bridge *br,$/;"	f	file:
bridge_pick_local_hw_addr	vswitchd/bridge.c	/^bridge_pick_local_hw_addr(struct bridge *br, struct eth_addr *ea,$/;"	f	file:
bridge_port_id	lib/rstp-common.h	/^    uint16_t bridge_port_id;$/;"	m	struct:rstp_priority_vector
bridge_port_id	ofproto/ofproto.h	/^    uint16_t bridge_port_id;$/;"	m	struct:ofproto_rstp_status
bridge_reconfigure	vswitchd/bridge.c	/^COVERAGE_DEFINE(bridge_reconfigure);$/;"	v
bridge_reconfigure	vswitchd/bridge.c	/^bridge_reconfigure(const struct ovsrec_open_vswitch *ovs_cfg)$/;"	f	file:
bridge_run	vswitchd/bridge.c	/^bridge_run(void)$/;"	f
bridge_run__	vswitchd/bridge.c	/^bridge_run__(void)$/;"	f	file:
bridge_unixctl_dump_flows	vswitchd/bridge.c	/^bridge_unixctl_dump_flows(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
bridge_unixctl_dump_flows	vswitchd/bridge.c	/^static unixctl_cb_func bridge_unixctl_dump_flows;$/;"	v	file:
bridge_unixctl_reconnect	vswitchd/bridge.c	/^bridge_unixctl_reconnect(struct unixctl_conn *conn, int argc,$/;"	f	file:
bridge_unixctl_reconnect	vswitchd/bridge.c	/^static unixctl_cb_func bridge_unixctl_reconnect;$/;"	v	file:
bridge_wait	vswitchd/bridge.c	/^bridge_wait(void)$/;"	f
bridges	lib/vswitch-idl.h	/^	struct ovsrec_bridge **bridges;$/;"	m	struct:ovsrec_open_vswitch	typeref:struct:ovsrec_open_vswitch::ovsrec_bridge
bridges	tests/test-rstp.c	/^    struct bridge *bridges[16];$/;"	m	struct:test_case	typeref:struct:test_case::bridge	file:
bridges	tests/test-stp.c	/^    struct bridge *bridges[16];$/;"	m	struct:test_case	typeref:struct:test_case::bridge	file:
bridges	utilities/ovs-vsctl.c	/^    struct shash bridges;   \/* Maps from bridge name to struct vsctl_bridge. *\/$/;"	m	struct:vsctl_context	typeref:struct:vsctl_context::shash	file:
bring_down	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def bring_down(self):$/;"	m	class:Datapath
bring_down	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def bring_down(self):$/;"	m	class:DatapathBridge
bring_down	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def bring_down(self):$/;"	m	class:DatapathVswitch
bring_down_existing	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def bring_down_existing(self):$/;"	m	class:Datapath
bring_down_existing	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def bring_down_existing(self):$/;"	m	class:DatapathBridge
bring_down_existing	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def bring_down_existing(self):$/;"	m	class:DatapathVswitch
bring_down_interface	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def bring_down_interface(pif, destroy=False):$/;"	f
bring_up_interface	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def bring_up_interface(pif):$/;"	f
broadcastPkts	lib/sflow.h	/^    u_int32_t broadcastPkts;$/;"	m	struct:_SFLVlan_counters
bucket	lib/cmap.h	/^    unsigned int bucket;$/;"	m	struct:cmap_position
bucket	ofproto/ofproto-dpif-xlate.c	/^            struct ofputil_bucket *bucket;$/;"	m	struct:xc_entry::__anon188::__anon196	typeref:struct:xc_entry::__anon188::__anon196::ofputil_bucket	file:
bucket	ofproto/ofproto-dpif.c	/^    uint32_t bucket;$/;"	m	struct:port_dump_state	file:
bucket_array_len	include/openflow/openflow-1.5.h	/^    ovs_be16 bucket_array_len;    \/* Length of action buckets data. *\/$/;"	m	struct:ofp15_group_mod
bucket_counter	lib/ofp-util.h	/^struct bucket_counter {$/;"	s
bucket_id	include/openflow/openflow-1.5.h	/^    ovs_be32 bucket_id;             \/* Bucket Id used to identify bucket*\/$/;"	m	struct:ofp15_bucket
bucket_id	lib/ofp-util.h	/^    uint32_t bucket_id;         \/* Bucket Id used to identify bucket*\/$/;"	m	struct:ofputil_bucket
bucket_idx	lib/cmap.h	/^    uint32_t bucket_idx;$/;"	m	struct:cmap_cursor
bucket_is_alive	ofproto/ofproto-dpif-xlate.c	/^bucket_is_alive(const struct xlate_ctx *ctx,$/;"	f	file:
bucket_list_len	include/openflow/openflow-1.5.h	/^    ovs_be16 bucket_list_len;     \/* Length of action buckets data. *\/$/;"	m	struct:ofp15_group_desc_stats
bucket_stats	lib/ofp-util.h	/^    struct bucket_counter *bucket_stats;$/;"	m	struct:ofputil_group_stats	typeref:struct:ofputil_group_stats::bucket_counter
buckets	datapath/flow_table.h	/^	struct flex_array *buckets;$/;"	m	struct:table_instance	typeref:struct:table_instance::flex_array
buckets	lib/cmap.c	/^    struct cmap_bucket buckets[];$/;"	m	struct:cmap_impl	typeref:struct:cmap_impl::cmap_bucket	file:
buckets	lib/hindex.h	/^    struct hindex_node **buckets; \/* Must point to 'one' iff 'mask' == 0. *\/$/;"	m	struct:hindex	typeref:struct:hindex::hindex_node
buckets	lib/hmap.h	/^    struct hmap_node **buckets; \/* Must point to 'one' iff 'mask' == 0. *\/$/;"	m	struct:hmap	typeref:struct:hmap::hmap_node
buckets	lib/ofp-util.h	/^    struct ovs_list buckets;      \/* Contains "struct ofputil_bucket"s. *\/$/;"	m	struct:ofputil_group_mod	typeref:struct:ofputil_group_mod::ovs_list
buckets	lib/ofp-util.h	/^    struct ovs_list buckets;    \/* Contains "struct ofputil_bucket"s. *\/$/;"	m	struct:ofputil_group_desc	typeref:struct:ofputil_group_desc::ovs_list
buckets	lib/ovs-thread.h	/^    void *volatile buckets[16];$/;"	m	struct:ovsthread_stats
buckets	ofproto/ofproto-provider.h	/^    struct ovs_list buckets;        \/* Contains "struct ofputil_bucket"s. *\/$/;"	m	struct:ofgroup	typeref:struct:ofgroup::ovs_list
buf	lib/dpif-netdev.c	/^    uint64_t buf[FLOW_MAX_PACKET_U64S];$/;"	m	struct:netdev_flow_key	file:
buf	lib/dpif-netlink.c	/^    struct ofpbuf buf;$/;"	m	struct:dpif_netlink_port_state	typeref:struct:dpif_netlink_port_state::ofpbuf	file:
buf	lib/netdev-linux.c	/^    struct ofpbuf buf;$/;"	m	struct:queue_dump_state	typeref:struct:queue_dump_state::ofpbuf	file:
buf	ofproto/ofproto-dpif-upcall.c	/^        struct odputil_keybuf buf;$/;"	m	union:udpif_key::__anon198	typeref:struct:udpif_key::__anon198::odputil_keybuf	file:
bufLen	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^    UINT32 bufLen;      \/* original length of buffer *\/$/;"	m	struct:_NL_BUF
bufRemLen	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^    UINT32 bufRemLen;   \/* remaining length of buffer *\/$/;"	m	struct:_NL_BUF
buf_size	lib/netdev-dpdk.c	/^    int buf_size;$/;"	m	struct:netdev_dpdk	file:
buffer	lib/async-append-aio.c	/^    uint8_t *buffer;$/;"	m	struct:async_append	file:
buffer	lib/byteq.h	/^    uint8_t *buffer;            \/* Circular queue. *\/$/;"	m	struct:byteq
buffer	lib/dpif.h	/^    struct ofpbuf *buffer;          \/* Storage for output parameters. *\/$/;"	m	struct:dpif_flow_get	typeref:struct:dpif_flow_get::ofpbuf
buffer	lib/json.c	/^    struct ds buffer;           \/* Buffer for accumulating token text. *\/$/;"	m	struct:json_parser	typeref:struct:json_parser::ds	file:
buffer	ofproto/pktbuf.c	/^    struct dp_packet *buffer;$/;"	m	struct:packet	typeref:struct:packet::dp_packet	file:
buffer_hz	lib/netdev-linux.c	/^static unsigned int buffer_hz;$/;"	v	file:
buffer_id	include/openflow/nicira-ext.h	/^    ovs_be32 buffer_id;           \/* Buffered packet to apply to (or -1).$/;"	m	struct:nx_flow_mod
buffer_id	include/openflow/nicira-ext.h	/^    ovs_be32 buffer_id;       \/* ID assigned by datapath. *\/$/;"	m	struct:nx_packet_in
buffer_id	include/openflow/openflow-1.0.h	/^    ovs_be32 buffer_id;           \/* Buffered packet to apply to (or -1).$/;"	m	struct:ofp10_flow_mod
buffer_id	include/openflow/openflow-1.0.h	/^    ovs_be32 buffer_id;           \/* ID assigned by datapath or UINT32_MAX. *\/$/;"	m	struct:ofp10_packet_out
buffer_id	include/openflow/openflow-1.0.h	/^    ovs_be32 buffer_id;     \/* ID assigned by datapath. *\/$/;"	m	struct:ofp10_packet_in
buffer_id	include/openflow/openflow-1.1.h	/^    ovs_be32 buffer_id;          \/* Buffered packet to apply to (or -1).$/;"	m	struct:ofp11_flow_mod
buffer_id	include/openflow/openflow-1.1.h	/^    ovs_be32 buffer_id;       \/* ID assigned by datapath (-1 if none). *\/$/;"	m	struct:ofp11_packet_out
buffer_id	include/openflow/openflow-1.1.h	/^    ovs_be32 buffer_id;     \/* ID assigned by datapath. *\/$/;"	m	struct:ofp11_packet_in
buffer_id	include/openflow/openflow-1.2.h	/^    ovs_be32 buffer_id;     \/* ID assigned by datapath. *\/$/;"	m	struct:ofp12_packet_in
buffer_id	lib/ofp-util.h	/^    uint32_t buffer_id;         \/* Buffer id or UINT32_MAX if no buffer. *\/$/;"	m	struct:ofputil_packet_out
buffer_id	lib/ofp-util.h	/^    uint32_t buffer_id;$/;"	m	struct:ofputil_flow_mod
buffer_id	lib/ofp-util.h	/^    uint32_t buffer_id;$/;"	m	struct:ofputil_packet_in
buffer_idx	ofproto/pktbuf.c	/^    unsigned int buffer_idx;$/;"	m	struct:pktbuf	file:
bugtool_plugins	Makefile	/^bugtool_plugins = \\$/;"	m
bugtool_plugins	utilities/bugtool/automake.mk	/^bugtool_plugins = \\$/;"	m
bugtool_scripts	Makefile	/^bugtool_scripts = \\$/;"	m
bugtool_scripts	utilities/bugtool/automake.mk	/^bugtool_scripts = \\$/;"	m
bugtoolpluginsdir	Makefile	/^bugtoolpluginsdir = $(pkgdatadir)\/bugtool-plugins$/;"	m
bugtoolpluginsdir	utilities/bugtool/automake.mk	/^bugtoolpluginsdir = $(pkgdatadir)\/bugtool-plugins$/;"	m
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	datapath/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_acls	ovn/northd/ovn-northd.c	/^build_acls(struct ovn_datapath *od, struct hmap *lflows)$/;"	f	file:
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	datapath/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	datapath/Makefile	/^build_cpu = x86_64$/;"	m
build_datapaths	ovn/northd/ovn-northd.c	/^build_datapaths(struct northd_context *ctx, struct hmap *datapaths)$/;"	f	file:
build_header	lib/netdev-provider.h	/^    int (*build_header)(const struct netdev *, struct ovs_action_push_tnl *data,$/;"	m	struct:netdev_class
build_headers	datapath/Makefile	/^build_headers = $(foreach module,$(build_modules),$($(module)_headers))$/;"	m
build_headers	datapath/Modules.mk	/^build_headers = $(foreach module,$(build_modules),$($(module)_headers))$/;"	m
build_lflows	ovn/northd/ovn-northd.c	/^build_lflows(struct northd_context *ctx, struct hmap *datapaths,$/;"	f	file:
build_links	datapath/Makefile	/^build_links = $(notdir $(build_sources))$/;"	m
build_links	datapath/Modules.mk	/^build_links = $(notdir $(build_sources))$/;"	m
build_lrouter_flows	ovn/northd/ovn-northd.c	/^build_lrouter_flows(struct hmap *datapaths, struct hmap *ports,$/;"	f	file:
build_lswitch_flows	ovn/northd/ovn-northd.c	/^build_lswitch_flows(struct hmap *datapaths, struct hmap *ports,$/;"	f	file:
build_modules	datapath/Makefile	/^build_modules = $(both_modules)	# Modules to build$/;"	m
build_modules	datapath/Modules.mk	/^build_modules = $(both_modules)	# Modules to build$/;"	m
build_multi_modules	datapath/Makefile	/^build_multi_modules = \\$/;"	m
build_multi_modules	datapath/Modules.mk	/^build_multi_modules = \\$/;"	m
build_objects	datapath/Makefile	/^build_objects = $(notdir $(patsubst %.c,%.o,$(build_sources)))$/;"	m
build_objects	datapath/Modules.mk	/^build_objects = $(notdir $(patsubst %.c,%.o,$(build_sources)))$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	datapath/Makefile	/^build_os = linux-gnu$/;"	m
build_port_security	ovn/northd/ovn-northd.c	/^build_port_security(const char *eth_addr_field,$/;"	f	file:
build_ports	ovn/northd/ovn-northd.c	/^build_ports(struct northd_context *ctx, struct hmap *datapaths,$/;"	f	file:
build_simple_tree	tests/test-ovn.c	/^build_simple_tree(enum expr_type type, int n, struct expr ***terminalp)$/;"	f	file:
build_sources	datapath/Makefile	/^build_sources = $(foreach module,$(build_modules),$($(module)_sources))$/;"	m
build_sources	datapath/Modules.mk	/^build_sources = $(foreach module,$(build_modules),$($(module)_sources))$/;"	m
build_tree_shape	tests/test-ovn.c	/^build_tree_shape(enum expr_type type, const struct tree_shape **tsp,$/;"	f	file:
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	datapath/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_tunnel_send	ofproto/ofproto-dpif-xlate.c	/^build_tunnel_send(struct xlate_ctx *ctx, const struct xport *xport,$/;"	f	file:
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
build_vendor	datapath/Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	datapath/Makefile	/^builddir = .$/;"	m
bundle	lib/bundle.c	/^VLOG_DEFINE_THIS_MODULE(bundle);$/;"	v
bundle	ofproto/ofproto-dpif.c	/^    struct ofbundle *bundle;    \/* Bundle that contains this port, if any. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::ofbundle	file:
bundle	utilities/ovs-ofctl.c	/^static bool bundle = false;$/;"	v	file:
bundle_add_port	ofproto/ofproto-dpif.c	/^bundle_add_port(struct ofbundle *bundle, ofp_port_t ofp_port,$/;"	f	file:
bundle_check	lib/bundle.c	/^bundle_check(const struct ofpact_bundle *bundle, ofp_port_t max_ports,$/;"	f
bundle_del_port	ofproto/ofproto-dpif.c	/^bundle_del_port(struct ofport_dpif *port)$/;"	f	file:
bundle_destroy	ofproto/ofproto-dpif.c	/^bundle_destroy(struct ofbundle *bundle)$/;"	f	file:
bundle_error_reporter	utilities/ovs-ofctl.c	/^bundle_error_reporter(const struct ofp_header *oh)$/;"	f	file:
bundle_execute	lib/bundle.c	/^bundle_execute(const struct ofpact_bundle *bundle,$/;"	f
bundle_flags_to_name	lib/ofp-print.c	/^bundle_flags_to_name(uint32_t bit)$/;"	f	file:
bundle_flow_mod__	utilities/ovs-ofctl.c	/^bundle_flow_mod__(const char *remote, struct ofputil_flow_mod *fms,$/;"	f	file:
bundle_flush_macs	ofproto/ofproto-dpif.c	/^bundle_flush_macs(struct ofbundle *bundle, bool all_ofprotos)$/;"	f	file:
bundle_format	lib/bundle.c	/^bundle_format(const struct ofpact_bundle *bundle, struct ds *s)$/;"	f
bundle_hash	ofproto/connmgr.c	/^bundle_hash(uint32_t id)$/;"	f	file:
bundle_id	include/openflow/openflow-1.4.h	/^    ovs_be32 bundle_id;     \/* Identify the bundle. *\/$/;"	m	struct:ofp14_bundle_ctrl_msg
bundle_id	lib/ofp-util.h	/^    uint32_t            bundle_id;$/;"	m	struct:ofputil_bundle_add_msg
bundle_id	lib/ofp-util.h	/^    uint32_t    bundle_id;$/;"	m	struct:ofputil_bundle_ctrl_msg
bundle_lookup	ofproto/ofproto-dpif.c	/^bundle_lookup(const struct ofproto_dpif *ofproto, void *aux)$/;"	f	file:
bundle_move	ofproto/ofproto-dpif.c	/^bundle_move(struct ofbundle *old, struct ofbundle *new)$/;"	f	file:
bundle_node	ofproto/ofproto-dpif-xlate.c	/^    struct ovs_list bundle_node;     \/* In parent xbundle (if it exists). *\/$/;"	m	struct:xport	typeref:struct:xport::ovs_list	file:
bundle_node	ofproto/ofproto-dpif.c	/^    struct ovs_list bundle_node;\/* In struct ofbundle's "ports" list. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::ovs_list	file:
bundle_parse	lib/bundle.c	/^bundle_parse(const char *s, struct ofpbuf *ofpacts)$/;"	f
bundle_parse__	lib/bundle.c	/^bundle_parse__(const char *s, char **save_ptr,$/;"	f	file:
bundle_parse_load	lib/bundle.c	/^bundle_parse_load(const char *s, struct ofpbuf *ofpacts)$/;"	f
bundle_remove	ofproto/ofproto-dpif.c	/^bundle_remove(struct ofport *port_)$/;"	f	file:
bundle_remove	ofproto/ofproto-provider.h	/^    void (*bundle_remove)(struct ofport *ofport);$/;"	m	struct:ofproto_class
bundle_remove_all	ofproto/connmgr.c	/^bundle_remove_all(struct ofconn *ofconn)$/;"	f	file:
bundle_run	ofproto/ofproto-dpif.c	/^bundle_run(struct ofbundle *bundle)$/;"	f	file:
bundle_send_learning_packets	ofproto/ofproto-dpif.c	/^bundle_send_learning_packets(struct ofbundle *bundle)$/;"	f	file:
bundle_set	ofproto/ofproto-dpif.c	/^bundle_set(struct ofproto *ofproto_, void *aux,$/;"	f	file:
bundle_set	ofproto/ofproto-provider.h	/^    int (*bundle_set)(struct ofproto *ofproto, void *aux,$/;"	m	struct:ofproto_class
bundle_state	ofproto/bundles.h	/^enum bundle_state {$/;"	g
bundle_transact	utilities/ovs-ofctl.c	/^bundle_transact(struct vconn *vconn, struct ovs_list *requests, uint16_t flags)$/;"	f	file:
bundle_update	ofproto/ofproto-dpif.c	/^bundle_update(struct ofbundle *bundle)$/;"	f	file:
bundle_wait	ofproto/ofproto-dpif.c	/^bundle_wait(struct ofbundle *bundle)$/;"	f	file:
bundles	ofproto/bundles.c	/^VLOG_DEFINE_THIS_MODULE(bundles);$/;"	v
bundles	ofproto/connmgr.c	/^    struct hmap bundles;$/;"	m	struct:ofconn	typeref:struct:ofconn::hmap	file:
bundles	ofproto/ofproto-dpif.c	/^    struct hmap bundles;        \/* Contains "struct ofbundle"s. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::hmap	file:
burst	include/openvswitch/token-bucket.h	/^    unsigned int burst;         \/* Max cumulative tokens credit. *\/$/;"	m	struct:token_bucket
burst	lib/netdev-linux.c	/^    unsigned int burst;         \/* In bytes. *\/$/;"	m	struct:htb_class	file:
burst_limit	ofproto/connmgr.c	/^    int burst_limit;            \/* Limit on accumulating packet credits. *\/$/;"	m	struct:ofservice	file:
burst_limit	ofproto/ofproto.h	/^    int burst_limit;            \/* Limit on accumulating packet credits. *\/$/;"	m	struct:ofproto_controller
burst_pkts	lib/netdev-dpdk.c	/^    struct rte_mbuf *burst_pkts[MAX_TX_QUEUE_LEN];$/;"	m	struct:dpdk_tx_queue	typeref:struct:dpdk_tx_queue::rte_mbuf	file:
burst_size	include/openflow/openflow-1.3.h	/^    ovs_be32    burst_size;  \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_drop
burst_size	include/openflow/openflow-1.3.h	/^    ovs_be32    burst_size;  \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
burst_size	include/openflow/openflow-1.3.h	/^    ovs_be32    burst_size;  \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_experimenter
burst_size	include/openflow/openflow-1.3.h	/^    ovs_be32 burst_size; \/* Size of bursts. *\/$/;"	m	struct:ofp13_meter_band_header
burst_size	lib/ofp-util.h	/^    uint32_t burst_size;$/;"	m	struct:ofputil_meter_band
byteCount	datapath-windows/ovsext/DpInternal.h	/^    Ovs64AlignedU64 byteCount;$/;"	m	struct:OvsFlowStats
byteCount	datapath-windows/ovsext/Flow.h	/^    UINT64 byteCount;$/;"	m	struct:_OvsFlow
byte_band_count	include/openflow/openflow-1.3.h	/^    ovs_be64    byte_band_count;        \/* Number of bytes in band. *\/$/;"	m	struct:ofp13_meter_band_stats
byte_count	datapath/flow.h	/^	u64 byte_count;			\/* Number of bytes matched. *\/$/;"	m	struct:flow_stats
byte_count	include/openflow/nicira-ext.h	/^    ovs_be64 byte_count;      \/* Number of bytes, UINT64_MAX if unknown. *\/$/;"	m	struct:nx_flow_stats
byte_count	include/openflow/nicira-ext.h	/^    ovs_be64 byte_count;$/;"	m	struct:nx_flow_removed
byte_count	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 byte_count;   \/* Number of bytes in flow. *\/$/;"	m	struct:ofp10_flow_stats
byte_count	include/openflow/openflow-1.0.h	/^    ovs_be64 byte_count;$/;"	m	struct:ofp10_flow_removed
byte_count	include/openflow/openflow-1.1.h	/^    ovs_be64 byte_count;       \/* Number of bytes in flow. *\/$/;"	m	struct:ofp11_flow_stats
byte_count	include/openflow/openflow-1.1.h	/^    ovs_be64 byte_count;       \/* Number of bytes processed by group. *\/$/;"	m	struct:ofp11_group_stats
byte_count	include/openflow/openflow-1.1.h	/^    ovs_be64 byte_count;     \/* Number of bytes processed by bucket. *\/$/;"	m	struct:ofp11_bucket_counter
byte_count	include/openflow/openflow-1.1.h	/^    ovs_be64 byte_count;$/;"	m	struct:ofp11_flow_removed
byte_count	include/openflow/openflow-1.2.h	/^    ovs_be64 byte_count;$/;"	m	struct:ofp12_flow_removed
byte_count	include/openflow/openflow-common.h	/^    ovs_32aligned_be64 byte_count;   \/* Number of bytes in flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
byte_count	lib/dpif-netdev.c	/^    atomic_ullong byte_count;      \/* Number of bytes matched. *\/$/;"	m	struct:dp_netdev_flow_stats	file:
byte_count	lib/dpif-netdev.c	/^    unsigned int byte_count;$/;"	m	struct:packet_batch	file:
byte_count	lib/netflow.h	/^    ovs_be32 byte_count;           \/* Number of bytes. *\/$/;"	m	struct:netflow_v5_record
byte_count	lib/ofp-util.h	/^    uint64_t byte_count;        \/* Byte count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_aggregate_stats
byte_count	lib/ofp-util.h	/^    uint64_t byte_count;        \/* Byte count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_flow_removed
byte_count	lib/ofp-util.h	/^    uint64_t byte_count;        \/* Byte count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_flow_stats
byte_count	lib/ofp-util.h	/^    uint64_t byte_count;        \/* Byte count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_group_stats
byte_count	lib/ofp-util.h	/^    uint64_t byte_count;     \/* Number of bytes processed by bucket. *\/$/;"	m	struct:bucket_counter
byte_count	lib/ofp-util.h	/^    uint64_t byte_count;$/;"	m	struct:ofputil_meter_band_stats
byte_count	ofproto/netflow.c	/^    uint64_t byte_count;          \/* Bytes from subrules. *\/$/;"	m	struct:netflow_flow	file:
byte_count	ofproto/ofproto-dpif-mirror.c	/^    int64_t byte_count;         \/* Number of bytes sent. *\/$/;"	m	struct:mirror	file:
byte_in_count	include/openflow/openflow-1.3.h	/^    ovs_be64  byte_in_count;     \/* Number of bytes in input. *\/$/;"	m	struct:ofp13_meter_stats
byte_in_count	lib/ofp-util.h	/^    uint64_t byte_in_count;$/;"	m	struct:ofputil_meter_stats
byte_number	lib/json.c	/^    int byte_number;$/;"	m	struct:json_parser	file:
byteq	lib/async-append-aio.c	/^    struct byteq byteq;$/;"	m	struct:async_append	typeref:struct:async_append::byteq	file:
byteq	lib/byteq.h	/^struct byteq {$/;"	s
byteq_advance_head	lib/byteq.c	/^byteq_advance_head(struct byteq *q, unsigned int n)$/;"	f
byteq_advance_tail	lib/byteq.c	/^byteq_advance_tail(struct byteq *q, unsigned int n)$/;"	f
byteq_avail	lib/byteq.c	/^byteq_avail(const struct byteq *q)$/;"	f
byteq_get	lib/byteq.c	/^byteq_get(struct byteq *q)$/;"	f
byteq_head	lib/byteq.c	/^byteq_head(struct byteq *q)$/;"	f
byteq_headroom	lib/byteq.c	/^byteq_headroom(const struct byteq *q)$/;"	f
byteq_init	lib/byteq.c	/^byteq_init(struct byteq *q, uint8_t *buffer, size_t size)$/;"	f
byteq_is_empty	lib/byteq.c	/^byteq_is_empty(const struct byteq *q)$/;"	f
byteq_is_full	lib/byteq.c	/^byteq_is_full(const struct byteq *q)$/;"	f
byteq_put	lib/byteq.c	/^byteq_put(struct byteq *q, uint8_t c)$/;"	f
byteq_put_string	lib/byteq.c	/^byteq_put_string(struct byteq *q, const char *s)$/;"	f
byteq_putn	lib/byteq.c	/^byteq_putn(struct byteq *q, const void *p_, size_t n)$/;"	f
byteq_read	lib/byteq.c	/^byteq_read(struct byteq *q, int fd)$/;"	f
byteq_tail	lib/byteq.c	/^byteq_tail(const struct byteq *q)$/;"	f
byteq_tailroom	lib/byteq.c	/^byteq_tailroom(const struct byteq *q)$/;"	f
byteq_used	lib/byteq.c	/^byteq_used(const struct byteq *q)$/;"	f
byteq_write	lib/byteq.c	/^byteq_write(struct byteq *q, int fd)$/;"	f
bytes_from_local	vtep/vtep-idl.h	/^	int64_t bytes_from_local;$/;"	m	struct:vteprec_logical_binding_stats
bytes_to_local	vtep/vtep-idl.h	/^	int64_t bytes_to_local;$/;"	m	struct:vteprec_logical_binding_stats
c	lib/tun-metadata.h	/^    struct tun_metadata_loc_chain c;$/;"	m	struct:tun_metadata_loc	typeref:struct:tun_metadata_loc::tun_metadata_loc_chain
cDeclComment	python/ovs/db/types.py	/^    def cDeclComment(self):$/;"	m	class:Type
cInitAtom	python/ovs/db/data.py	/^    def cInitAtom(self, var):$/;"	m	class:Atom
cInitBaseType	python/ovs/db/types.py	/^    def cInitBaseType(self, indent, var):$/;"	m	class:BaseType
cInitDatum	python/ovs/db/data.py	/^    def cInitDatum(self, var):$/;"	m	class:Datum
cInitType	python/ovs/db/types.py	/^    def cInitType(self, indent, var):$/;"	m	class:Type
cMembers	ovsdb/ovsdb-idlc	/^def cMembers(prefix, tableName, columnName, column, const):$/;"	f
c_advertise_version	lib/lldp/lldpd-structs.h	/^    int c_advertise_version; \/* Should the precise version be advertised? *\/$/;"	m	struct:lldpd_config
c_bond_slave_src_mac_type	lib/lldp/lldpd-structs.h	/^    int c_bond_slave_src_mac_type; \/* Src mac type in lldp frames over bond$/;"	m	struct:lldpd_config
c_cap_available	lib/lldp/lldpd-structs.h	/^    u_int16_t       c_cap_available;$/;"	m	struct:lldpd_chassis
c_cap_enabled	lib/lldp/lldpd-structs.h	/^    u_int16_t       c_cap_enabled;$/;"	m	struct:lldpd_chassis
c_cid_pattern	lib/lldp/lldpd-structs.h	/^    char *c_cid_pattern;    \/* Pattern to match interfaces to use for chassis$/;"	m	struct:lldpd_config
c_descr	lib/lldp/lldpd-structs.h	/^    char            *c_descr;$/;"	m	struct:lldpd_chassis
c_description	lib/lldp/lldpd-structs.h	/^    char *c_description;    \/* Override chassis description *\/$/;"	m	struct:lldpd_config
c_hostname	lib/lldp/lldpd-structs.h	/^    char *c_hostname;       \/* Override system name *\/$/;"	m	struct:lldpd_config
c_id	lib/lldp/lldpd-structs.h	/^    uint8_t         *c_id;        \/* Typically an Ethernet address. *\/$/;"	m	struct:lldpd_chassis
c_id_len	lib/lldp/lldpd-structs.h	/^    int             c_id_len;$/;"	m	struct:lldpd_chassis
c_id_subtype	lib/lldp/lldpd-structs.h	/^    u_int8_t        c_id_subtype;$/;"	m	struct:lldpd_chassis
c_iface_pattern	lib/lldp/lldpd-structs.h	/^    char *c_iface_pattern;  \/* Pattern to match interfaces to use *\/$/;"	m	struct:lldpd_config
c_index	lib/lldp/lldpd-structs.h	/^    u_int16_t       c_index;      \/* Monotonic index *\/$/;"	m	struct:lldpd_chassis
c_lldp_portid_type	lib/lldp/lldpd-structs.h	/^    int c_lldp_portid_type; \/* The PortID type *\/$/;"	m	struct:lldpd_config
c_max_neighbors	lib/lldp/lldpd-structs.h	/^    int c_max_neighbors;    \/* Maximum number of neighbors (per protocol) *\/$/;"	m	struct:lldpd_config
c_mgmt	lib/lldp/lldpd-structs.h	/^    struct ovs_list c_mgmt;     \/* Contains "struct lldp_mgmt"s. *\/$/;"	m	struct:lldpd_chassis	typeref:struct:lldpd_chassis::ovs_list
c_mgmt_pattern	lib/lldp/lldpd-structs.h	/^    char *c_mgmt_pattern;   \/* Pattern to match a management address *\/$/;"	m	struct:lldpd_config
c_name	lib/lldp/lldpd-structs.h	/^    char            *c_name;$/;"	m	struct:lldpd_chassis
c_paused	lib/lldp/lldpd-structs.h	/^    int c_paused;           \/* lldpd is paused *\/$/;"	m	struct:lldpd_config
c_platform	lib/lldp/lldpd-structs.h	/^    char *c_platform;       \/* Override platform description (for CDP) *\/$/;"	m	struct:lldpd_config
c_promisc	lib/lldp/lldpd-structs.h	/^    int c_promisc;          \/* Interfaces should be in promiscuous mode *\/$/;"	m	struct:lldpd_config
c_protocol	lib/lldp/lldpd-structs.h	/^    u_int8_t        c_protocol;   \/* Protocol used to get this chassis *\/$/;"	m	struct:lldpd_chassis
c_receiveonly	lib/lldp/lldpd-structs.h	/^    int c_receiveonly;      \/* Receive only mode *\/$/;"	m	struct:lldpd_config
c_refcount	lib/lldp/lldpd-structs.h	/^    u_int16_t       c_refcount;   \/* Reference count by ports *\/$/;"	m	struct:lldpd_chassis
c_set_ifdescr	lib/lldp/lldpd-structs.h	/^    int c_set_ifdescr;      \/* Set interface description *\/$/;"	m	struct:lldpd_config
c_smart	lib/lldp/lldpd-structs.h	/^    int c_smart;            \/* Bitmask for smart configuration (see SMART_*) *\/$/;"	m	struct:lldpd_config
c_ttl	lib/lldp/lldpd-structs.h	/^    u_int16_t       c_ttl;$/;"	m	struct:lldpd_chassis
c_tx_hold	lib/lldp/lldpd-structs.h	/^    int c_tx_hold;          \/* Transmit hold *\/$/;"	m	struct:lldpd_config
c_tx_interval	lib/lldp/lldpd-structs.h	/^    int c_tx_interval;      \/* Transmit interval *\/$/;"	m	struct:lldpd_config
ca_cert	lib/stream-ssl.c	/^static struct ssl_config_file ca_cert;$/;"	v	typeref:struct:ssl_config_file	file:
ca_cert	lib/vswitch-idl.h	/^	char *ca_cert;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_ssl
ca_cert_file	ovsdb/ovsdb-server.c	/^static char *ca_cert_file;$/;"	v	file:
cacert_filename	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^cacert_filename = '\/etc\/openvswitch\/vswitchd.cacert'$/;"	v
cache_active_timeout	lib/vswitch-idl.h	/^	int64_t *cache_active_timeout;$/;"	m	struct:ovsrec_ipfix
cache_active_timeout	ofproto/ofproto-dpif-ipfix.c	/^    uint32_t cache_active_timeout;  \/* In seconds. *\/$/;"	m	struct:dpif_ipfix_exporter	file:
cache_active_timeout	ofproto/ofproto.h	/^    uint32_t cache_active_timeout;$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
cache_active_timeout	ofproto/ofproto.h	/^    uint32_t cache_active_timeout;$/;"	m	struct:ofproto_ipfix_flow_exporter_options
cache_flow_key_map	ofproto/ofproto-dpif-ipfix.c	/^    struct hmap cache_flow_key_map;  \/* ipfix_flow_cache_entry. *\/$/;"	m	struct:dpif_ipfix_exporter	typeref:struct:dpif_ipfix_exporter::hmap	file:
cache_flow_start_timestamp_list	ofproto/ofproto-dpif-ipfix.c	/^    struct ovs_list cache_flow_start_timestamp_list;  \/* ipfix_flow_cache_entry. *\/$/;"	m	struct:dpif_ipfix_exporter	typeref:struct:dpif_ipfix_exporter::ovs_list	file:
cache_flow_start_timestamp_list_node	ofproto/ofproto-dpif-ipfix.c	/^    struct ovs_list cache_flow_start_timestamp_list_node;$/;"	m	struct:ipfix_flow_cache_entry	typeref:struct:ipfix_flow_cache_entry::ovs_list	file:
cache_max_flows	lib/vswitch-idl.h	/^	int64_t *cache_max_flows;$/;"	m	struct:ovsrec_ipfix
cache_max_flows	ofproto/ofproto-dpif-ipfix.c	/^    uint32_t cache_max_flows;$/;"	m	struct:dpif_ipfix_exporter	file:
cache_max_flows	ofproto/ofproto.h	/^    uint32_t cache_max_flows;$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
cache_max_flows	ofproto/ofproto.h	/^    uint32_t cache_max_flows;$/;"	m	struct:ofproto_ipfix_flow_exporter_options
cache_notifier_ref	lib/netdev-bsd.c	/^cache_notifier_ref(void)$/;"	f	file:
cache_notifier_refcount	lib/netdev-bsd.c	/^static int cache_notifier_refcount;$/;"	v	file:
cache_notifier_unref	lib/netdev-bsd.c	/^cache_notifier_unref(void)$/;"	f	file:
cache_valid	lib/netdev-bsd.c	/^    unsigned int cache_valid;$/;"	m	struct:netdev_bsd	file:
cache_valid	lib/netdev-linux.c	/^    unsigned int cache_valid;$/;"	m	struct:netdev_linux	file:
cache_valid	lib/netdev-windows.c	/^    unsigned int cache_valid;$/;"	m	struct:netdev_windows	file:
cache_valid	lib/vlandev.c	/^static bool cache_valid;$/;"	v	file:
cache_valid	ovn/utilities/ovn-sbctl.c	/^    bool cache_valid;$/;"	m	struct:sbctl_context	file:
cache_valid	utilities/ovs-vsctl.c	/^    bool cache_valid;$/;"	m	struct:vsctl_context	file:
cache_valid	vtep/vtep-ctl.c	/^    bool cache_valid;$/;"	m	struct:vtep_ctl_context	file:
calc_duration	ofproto/ofproto.c	/^calc_duration(long long int start, long long int now,$/;"	f	file:
calc_mask	lib/hmap.c	/^calc_mask(size_t capacity)$/;"	f	file:
calc_max_n	lib/cmap.c	/^calc_max_n(uint32_t mask)$/;"	f	file:
calc_min_n	lib/cmap.c	/^calc_min_n(uint32_t mask)$/;"	f	file:
call_hook_script	xenserver/etc_xensource_scripts_vif	/^call_hook_script() {$/;"	f
call_hooks	lib/fatal-signal.c	/^call_hooks(int sig_nr)$/;"	f	file:
call_prog	vtep/ovs-vtep	/^def call_prog(prog, args_list):$/;"	f
call_setkey	debian/ovs-monitor-ipsec	/^    def call_setkey(self, cmds):$/;"	m	class:IPsec
callback	datapath-windows/ovsext/TunnelFilter.c	/^    PFNTunnelVportPendingOp callback;$/;"	m	struct:_OVS_TUNFLT_REQUEST	file:
camelcase_to_uppercase	ofproto/ipfix-gen-entities	/^    def camelcase_to_uppercase(s):$/;"	f
can_checksum_protocol	datapath/linux/compat/netdevice.c	/^static bool can_checksum_protocol(netdev_features_t features, __be16 protocol)$/;"	f	file:
can_checksum_protocol	datapath/linux/netdevice.c	/^static bool can_checksum_protocol(netdev_features_t features, __be16 protocol)$/;"	f	file:
can_segment	datapath/linux/compat/stt.c	/^static bool can_segment(struct sk_buff *head, bool ipv4, bool tcp, bool csum_partial)$/;"	f	file:
can_segment	datapath/linux/stt.c	/^static bool can_segment(struct sk_buff *head, bool ipv4, bool tcp, bool csum_partial)$/;"	f	file:
cancel_cb	lib/fatal-signal.c	/^    void (*cancel_cb)(void *aux);$/;"	m	struct:hook	file:
cancel_files	lib/fatal-signal.c	/^cancel_files(void *aux OVS_UNUSED)$/;"	f	file:
cannotGrowDest	datapath-windows/ovsext/Actions.c	/^    UINT32 cannotGrowDest;$/;"	m	struct:_OVS_ACTION_STATS	file:
canonical	datapath-windows/ovsext/Ethernet.h	/^           canonical:1,        \/\/ bit order? (should always be 0)$/;"	m	struct:Eth_802_1pq_Tag
cap	utilities/bugtool/ovs-bugtool	/^            cap = v['cap']$/;"	v
cap	utilities/bugtool/ovs-bugtool	/^       cap = v['cap']$/;"	v
cap	utilities/bugtool/ovs-bugtool	/^def cap(key, pii=PII_MAYBE, min_size=-1, max_size=-1, min_time=-1,$/;"	f
cap_sizes	utilities/bugtool/ovs-bugtool	/^cap_sizes = {}$/;"	v
capabilities	include/openflow/openflow-1.2.h	/^    ovs_be32  capabilities;    \/* Bitmap of OFPGFC12_* capability supported. *\/$/;"	m	struct:ofp12_group_features_stats
capabilities	include/openflow/openflow-1.3.h	/^    ovs_be32   capabilities;  \/* Bitmaps of "ofp13_meter_flags". *\/$/;"	m	struct:ofp13_meter_features
capabilities	include/openflow/openflow-1.3.h	/^    ovs_be32 capabilities;    \/* Bitmap of OFPTC_* values *\/$/;"	m	struct:ofp13_table_features
capabilities	include/openflow/openflow-common.h	/^    ovs_be32 capabilities;  \/* OFPC_*, OFPC10_*, OFPC11_*, OFPC12_*. *\/$/;"	m	struct:ofp_switch_features
capabilities	lib/ofp-util.h	/^    enum ofputil_capabilities capabilities;$/;"	m	struct:ofputil_switch_features	typeref:enum:ofputil_switch_features::ofputil_capabilities
capabilities	lib/ofp-util.h	/^    uint32_t  capabilities;    \/* Bitmap of OFPGFC12_* capability supported. *\/$/;"	m	struct:ofputil_group_features
capabilities	lib/ofp-util.h	/^    uint32_t capabilities;      \/* Supported flags. *\/$/;"	m	struct:ofputil_meter_features
capability	utilities/bugtool/ovs-bugtool	/^def capability(document, key):$/;"	f
capacity	ofproto/ofproto-provider.h	/^    size_t capacity;            \/* Number of rules that will fit in 'rules'. *\/$/;"	m	struct:rule_collection
caps	utilities/bugtool/ovs-bugtool	/^caps = {}$/;"	v
caption	lib/table.h	/^    char *caption;$/;"	m	struct:table
carrier	lib/netdev-bsd.c	/^    int carrier;$/;"	m	struct:netdev_bsd	file:
carrier_resets	lib/netdev-linux.c	/^    long long int carrier_resets;$/;"	m	struct:netdev_linux	file:
carrier_seq	ofproto/ofproto-dpif.c	/^    long long int carrier_seq;  \/* Carrier status changes. *\/$/;"	m	struct:ofport_dpif	file:
carrier_status	lib/netdev-vport.c	/^    bool carrier_status;$/;"	m	struct:netdev_vport	file:
cb	datapath-windows/ovsext/IpHelper.h	/^    OvsIPHelperCallback cb;$/;"	m	struct:_OVS_FWD_REQUEST_INFO
cb	lib/if-notifier-bsd.c	/^    if_notify_func *cb;$/;"	m	struct:if_notifier	file:
cb	lib/if-notifier.c	/^    if_notify_func *cb;$/;"	m	struct:if_notifier	file:
cb	lib/netlink-notifier.c	/^    nln_notify_func *cb;$/;"	m	struct:nln_notifier	file:
cb	lib/rtbsd.h	/^    rtbsd_notify_func *cb;$/;"	m	struct:rtbsd_notifier
cb	lib/unixctl.c	/^    unixctl_cb_func *cb;$/;"	m	struct:unixctl_command	file:
cbData1	datapath-windows/ovsext/IpHelper.h	/^    PVOID             cbData1;$/;"	m	struct:_OVS_FWD_REQUEST_INFO
cbData2	datapath-windows/ovsext/IpHelper.h	/^    PVOID             cbData2;$/;"	m	struct:_OVS_FWD_REQUEST_INFO
cbs	lib/ovs-rcu.c	/^    struct ovsrcu_cb cbs[16];$/;"	m	struct:ovsrcu_cbset	typeref:struct:ovsrcu_cbset::ovsrcu_cb	file:
cbset	lib/ovs-rcu.c	/^    struct ovsrcu_cbset *cbset;$/;"	m	struct:ovsrcu_perthread	typeref:struct:ovsrcu_perthread::ovsrcu_cbset	file:
ccm_interval	lib/cfm.c	/^    uint8_t ccm_interval;  \/* The CCM transmission interval. *\/$/;"	m	struct:cfm	file:
ccm_interval_ms	lib/cfm.c	/^    int ccm_interval_ms;   \/* 'ccm_interval' in milliseconds. *\/$/;"	m	struct:cfm	file:
ccm_interval_to_ms	lib/cfm.c	/^ccm_interval_to_ms(uint8_t interval)$/;"	f	file:
ccm_pcp	lib/cfm.c	/^    uint8_t ccm_pcp;       \/* Priority of CCM PDUs. *\/$/;"	m	struct:cfm	file:
ccm_pcp	lib/cfm.h	/^    uint8_t ccm_pcp;            \/* CCM Priority. Zero if none. *\/$/;"	m	struct:cfm_settings
ccm_vlan	lib/cfm.c	/^    uint16_t ccm_vlan;     \/* Vlan tag of CCM PDUs.  CFM_RANDOM_VLAN if$/;"	m	struct:cfm	file:
ccm_vlan	lib/cfm.h	/^    uint16_t ccm_vlan;          \/* CCM Vlan tag. Zero if none.$/;"	m	struct:cfm_settings
cell	lib/table.h	/^struct cell {$/;"	s
cell_destroy	lib/table.c	/^cell_destroy(struct cell *cell)$/;"	f	file:
cell_format	lib/table.h	/^    enum cell_format cell_format; \/* CF_*. *\/$/;"	m	struct:table_style	typeref:enum:table_style::cell_format
cell_format	lib/table.h	/^enum cell_format {$/;"	g
cell_to_text	lib/table.c	/^cell_to_text(struct cell *cell, const struct table_style *style)$/;"	f	file:
cells	lib/table.h	/^    struct cell *cells;$/;"	m	struct:table	typeref:struct:table::cell
cert_dir	debian/ovs-monitor-ipsec	/^    cert_dir = "\/etc\/racoon\/certs"$/;"	v	class:Racoon
certificate	lib/stream-ssl.c	/^static struct ssl_config_file certificate;$/;"	v	typeref:struct:ssl_config_file	file:
certificate	lib/vswitch-idl.h	/^	char *certificate;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_ssl
certificate_file	ovsdb/ovsdb-server.c	/^static char *certificate_file;$/;"	v	file:
cfg	vswitchd/bridge.c	/^    const struct ovsrec_bridge *cfg;$/;"	m	struct:bridge	typeref:struct:bridge::ovsrec_bridge	file:
cfg	vswitchd/bridge.c	/^    const struct ovsrec_interface *cfg;$/;"	m	struct:iface	typeref:struct:iface::ovsrec_interface	file:
cfg	vswitchd/bridge.c	/^    const struct ovsrec_mirror *cfg;$/;"	m	struct:mirror	typeref:struct:mirror::ovsrec_mirror	file:
cfg	vswitchd/bridge.c	/^    const struct ovsrec_port *cfg;$/;"	m	struct:port	typeref:struct:port::ovsrec_port	file:
cfg_min_rx	lib/bfd.c	/^    long long int cfg_min_rx;     \/* Configured required minimum RX rate. *\/$/;"	m	struct:bfd	file:
cfg_min_tx	lib/bfd.c	/^    long long int cfg_min_tx;     \/* Configured minimum TX rate. *\/$/;"	m	struct:bfd	file:
cfm	lib/cfm.c	/^VLOG_DEFINE_THIS_MODULE(cfm);$/;"	v
cfm	lib/cfm.c	/^struct cfm {$/;"	s	file:
cfm	ofproto/ofproto-dpif-monitor.c	/^    struct cfm *cfm;                  \/* Reference to cfm. *\/$/;"	m	struct:mport	typeref:struct:mport::cfm	file:
cfm	ofproto/ofproto-dpif-xlate.c	/^    struct cfm *cfm;                 \/* CFM handle or null. *\/$/;"	m	struct:xport	typeref:struct:xport::cfm	file:
cfm	ofproto/ofproto-dpif.c	/^    struct cfm *cfm;            \/* Connectivity Fault Management, if any. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::cfm	file:
cfm_ccm_addr	lib/cfm.c	/^cfm_ccm_addr(struct cfm *cfm)$/;"	f	file:
cfm_fault	lib/vswitch-idl.h	/^	bool *cfm_fault;$/;"	m	struct:ovsrec_interface
cfm_fault_bit_index	lib/cfm.h	/^enum cfm_fault_bit_index {$/;"	g
cfm_fault_reason	lib/cfm.h	/^enum cfm_fault_reason {$/;"	g
cfm_fault_reason_to_str	lib/cfm.c	/^cfm_fault_reason_to_str(int reason)$/;"	f
cfm_fault_status	lib/vswitch-idl.h	/^	char **cfm_fault_status;$/;"	m	struct:ovsrec_interface
cfm_flap_count	lib/vswitch-idl.h	/^	int64_t *cfm_flap_count;$/;"	m	struct:ovsrec_interface
cfm_health	lib/vswitch-idl.h	/^	int64_t *cfm_health;$/;"	m	struct:ovsrec_interface
cfm_init	lib/cfm.c	/^cfm_init(void)$/;"	f
cfm_is_valid_mpid	lib/cfm.c	/^cfm_is_valid_mpid(bool extended, uint64_t mpid)$/;"	f	file:
cfm_mpid	lib/vswitch-idl.h	/^	int64_t *cfm_mpid;$/;"	m	struct:ovsrec_interface
cfm_ref	lib/cfm.c	/^cfm_ref(const struct cfm *cfm_)$/;"	f
cfm_remote_mpids	lib/vswitch-idl.h	/^	int64_t *cfm_remote_mpids;$/;"	m	struct:ovsrec_interface
cfm_remote_opstate	lib/vswitch-idl.h	/^	char *cfm_remote_opstate;$/;"	m	struct:ovsrec_interface
cfm_settings	lib/cfm.h	/^struct cfm_settings {$/;"	s
cfm_should_process_flow	lib/cfm.c	/^cfm_should_process_flow(const struct cfm *cfm_, const struct flow *flow,$/;"	f
cfm_status	lib/cfm.h	/^struct cfm_status {$/;"	s
cfm_status_changed	ofproto/ofproto-dpif.c	/^cfm_status_changed(struct ofport *ofport_)$/;"	f	file:
cfm_status_changed	ofproto/ofproto-provider.h	/^    bool (*cfm_status_changed)(struct ofport *ofport);$/;"	m	struct:ofproto_class
cfm_unixctl_set_fault	lib/cfm.c	/^static unixctl_cb_func cfm_unixctl_set_fault;$/;"	v	file:
cfm_unixctl_show	lib/cfm.c	/^static unixctl_cb_func cfm_unixctl_show;$/;"	v	file:
ch_cfg	ovn/utilities/ovn-sbctl.c	/^    const struct sbrec_chassis *ch_cfg;$/;"	m	struct:sbctl_chassis	typeref:struct:sbctl_chassis::sbrec_chassis	file:
chaddr	datapath/actions.c	/^  u8 chaddr[DHCP_CHADDR_MAX], sname[64], file[128];$/;"	m	struct:dhcphdr	file:
chaddr	datapath/linux/actions.c	/^  u8 chaddr[DHCP_CHADDR_MAX], sname[64], file[128];$/;"	m	struct:dhcphdr	file:
chaddr	lib/dhcp.h	/^    uint8_t chaddr[16];         \/* Client hardware address. *\/$/;"	m	struct:dhcp_header
change	lib/netlink-notifier.c	/^    void *change;                \/* Change passed to parse. *\/$/;"	m	struct:nln	file:
changeService	windows/ovs-windows-installer/Actions/OVSActions.js	/^function changeService(serviceName, startMode, startAction) {$/;"	f
changeServiceAction	windows/ovs-windows-installer/Actions/OVSActions.js	/^function changeServiceAction() {$/;"	f
change_detection_enabled	lib/stp.c	/^    bool change_detection_enabled;  \/* 8.5.5.10: Detect topology changes? *\/$/;"	m	struct:stp_port	file:
change_seq	lib/dpif-netdev.c	/^    atomic_uint change_seq;         \/* For reloading pmd ports. *\/$/;"	m	struct:dp_netdev_pmd_thread	file:
change_seq	lib/netdev-provider.h	/^    uint64_t change_seq;$/;"	m	struct:netdev
change_seq	lib/netdev-windows.c	/^    unsigned int change_seq;$/;"	m	struct:netdev_windows	file:
change_seq	lib/tnl-ports.c	/^    uint64_t change_seq;$/;"	m	struct:ip_device	file:
change_seq	ofproto/bond.c	/^    unsigned int change_seq;    \/* Tracks changes in 'netdev'. *\/$/;"	m	struct:bond_slave	file:
change_seq	ofproto/ofproto-dpif.c	/^    uint64_t change_seq;           \/* Connectivity status changes. *\/$/;"	m	struct:ofproto_dpif	file:
change_seq	ofproto/ofproto-provider.h	/^    uint64_t change_seq;        \/* Change sequence for netdev status. *\/$/;"	m	struct:ofproto
change_seq	ofproto/ofproto-provider.h	/^    uint64_t change_seq;$/;"	m	struct:ofport
change_seq	ofproto/tunnel.c	/^    uint64_t change_seq;$/;"	m	struct:tnl_port	file:
change_seq	vswitchd/bridge.c	/^    uint64_t change_seq;$/;"	m	struct:iface	file:
change_seqno	lib/ovsdb-idl.c	/^    unsigned int change_seqno;$/;"	m	struct:ovsdb_idl	file:
changed	ovsdb/transaction.c	/^    unsigned long changed[];    \/* Bits set to 1 for columns that changed. *\/$/;"	m	struct:ovsdb_txn_row	file:
changed	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def changed(self):$/;"	m	class:ConfigurationFile
changes	ovsdb/monitor.c	/^    struct hmap changes;$/;"	m	struct:ovsdb_monitor_table	typeref:struct:ovsdb_monitor_table::hmap	file:
channels	lib/dpif-netlink.c	/^    struct dpif_channel *channels;\/* Array of channels for each handler. *\/$/;"	m	struct:dpif_handler	typeref:struct:dpif_handler::dpif_channel	file:
characters	ofproto/ipfix-gen-entities	/^    def characters(self, content):$/;"	f
chassis	ovn/controller/chassis.c	/^VLOG_DEFINE_THIS_MODULE(chassis);$/;"	v
chassis	ovn/lib/ovn-sb-idl.h	/^	struct sbrec_chassis *chassis;$/;"	m	struct:sbrec_port_binding	typeref:struct:sbrec_port_binding::sbrec_chassis
chassis	ovn/utilities/ovn-sbctl.c	/^    struct shash chassis;$/;"	m	struct:sbctl_context	typeref:struct:sbctl_context::shash	file:
chassis_cleanup	ovn/controller/chassis.c	/^chassis_cleanup(struct controller_ctx *ctx, const char *chassis_id)$/;"	f
chassis_id	ovn/controller/physical.c	/^    const char *chassis_id;$/;"	m	struct:chassis_tunnel	file:
chassis_mac	tests/test-aa.c	/^static const struct eth_addr chassis_mac = { { { 0x5e, 0x10, 0x8e, 0xe7, 0x84, 0xad } } };$/;"	v	typeref:struct:eth_addr	file:
chassis_register_ovs_idl	ovn/controller/chassis.c	/^chassis_register_ovs_idl(struct ovsdb_idl *ovs_idl)$/;"	f
chassis_run	ovn/controller/chassis.c	/^chassis_run(struct controller_ctx *ctx, const char *chassis_id)$/;"	f
chassis_tunnel	ovn/controller/physical.c	/^struct chassis_tunnel {$/;"	s	file:
chassis_tunnel_find	ovn/controller/physical.c	/^chassis_tunnel_find(struct hmap *tunnels, const char *chassis_id)$/;"	f	file:
chassis_tunnel_type	ovn/controller/ovn-controller.h	/^enum chassis_tunnel_type {$/;"	g
chassisid_to_string	lib/ovs-lldp.c	/^chassisid_to_string(uint8_t *array, size_t len, char **str)$/;"	f	file:
chdir_	lib/daemon-unix.c	/^static bool chdir_ = true;$/;"	v	file:
check	datapath-windows/ovsext/NetProto.h	/^   UINT16    check;$/;"	m	struct:TCPHdr
check	datapath-windows/ovsext/NetProto.h	/^   UINT16    check;$/;"	m	struct:UDPHdr
check	datapath-windows/ovsext/NetProto.h	/^   UINT16   check;$/;"	m	struct:IPHdr
check	tests/test-lockfile.c	/^check(int a, int b,$/;"	f	file:
check	tests/test-vconn.c	/^check(int a, int b, const char *as, const char *file, int line)$/;"	f	file:
check	utilities/ovs-dev.py	/^def check():$/;"	f
checkStructs	build-aux/check-structs	/^def checkStructs():$/;"	f
check_256byte_hash	tests/test-hash.c	/^check_256byte_hash(void (*hash)(const void *, size_t, uint32_t, ovs_u128 *),$/;"	f	file:
check_3word_hash	tests/test-hash.c	/^check_3word_hash(uint32_t (*hash)(const uint32_t[], size_t, uint32_t),$/;"	f	file:
check_DATA	Makefile	/^check_DATA = $(am__append_41)$/;"	m
check_SCRIPTS	Makefile	/^check_SCRIPTS = utilities\/ovs-appctl-bashcomp.bash \\$/;"	m
check_allowed	xenserver/opt_xensource_libexec_interface-reconfigure	/^def check_allowed(pif):$/;"	f
check_already_running	lib/daemon-unix.c	/^check_already_running(void)$/;"	f	file:
check_async	tests/testsuite	/^check_async () {$/;"	f
check_attr_len	datapath/flow_netlink.c	/^static bool check_attr_len(unsigned int attr_len, unsigned int expected_len)$/;"	f	file:
check_attr_len	datapath/linux/flow_netlink.c	/^static bool check_attr_len(unsigned int attr_len, unsigned int expected_len)$/;"	f	file:
check_attr_len	lib/odp-util.c	/^check_attr_len(struct ds *ds, const struct nlattr *a, const struct nlattr *ma,$/;"	f	file:
check_checksum	datapath/linux/compat/gre.c	/^static __sum16 check_checksum(struct sk_buff *skb)$/;"	f	file:
check_checksum	datapath/linux/gre.c	/^static __sum16 check_checksum(struct sk_buff *skb)$/;"	f	file:
check_clz32	tests/test-util.c	/^check_clz32(uint32_t x, int n)$/;"	f	file:
check_clz64	tests/test-util.c	/^check_clz64(uint64_t x, int n)$/;"	f	file:
check_cmap	tests/test-cmap.c	/^check_cmap(struct cmap *cmap, const int values[], size_t n,$/;"	f	file:
check_conflicts	ovn/utilities/ovn-sbctl.c	/^check_conflicts(struct sbctl_context *sbctl_ctx, const char *name,$/;"	f	file:
check_conflicts	utilities/ovs-vsctl.c	/^check_conflicts(struct vsctl_context *vsctl_ctx, const char *name,$/;"	f	file:
check_connection_completion	lib/socket-util.c	/^check_connection_completion(int fd)$/;"	f
check_connection_completion	python/ovs/socket_util.py	/^def check_connection_completion(sock):$/;"	f
check_constraints	python/ovs/db/data.py	/^    def check_constraints(self):$/;"	m	class:Datum
check_constraints	python/ovs/db/data.py	/^    def check_constraints(self, base):$/;"	m	class:Atom
check_count_1bits	tests/test-util.c	/^check_count_1bits(uint64_t x, int n)$/;"	f	file:
check_ctz32	tests/test-util.c	/^check_ctz32(uint32_t x, int n)$/;"	f	file:
check_ctz64	tests/test-util.c	/^check_ctz64(uint64_t x, int n)$/;"	f	file:
check_db_conflict	ovn/controller-vtep/binding.c	/^check_db_conflict(struct shash *ls_to_db,$/;"	f	file:
check_errno	tests/test-vconn.c	/^check_errno(int a, int b, const char *as, const char *file, int line)$/;"	f	file:
check_expectations	lib/odp-util.c	/^check_expectations(uint64_t present_attrs, int out_of_range_attr,$/;"	f	file:
check_force_cores	utilities/ovs-ctl	/^check_force_cores () {$/;"	f
check_force_cores	utilities/ovs-ctl.in	/^check_force_cores () {$/;"	f
check_hash_bytes128	tests/test-hash.c	/^check_hash_bytes128(void (*hash)(const void *, size_t, uint32_t, ovs_u128 *),$/;"	f	file:
check_header	datapath/flow.c	/^static int check_header(struct sk_buff *skb, int len)$/;"	f	file:
check_header	datapath/linux/flow.c	/^static int check_header(struct sk_buff *skb, int len)$/;"	f	file:
check_heap	tests/test-heap.c	/^check_heap(const struct heap *heap, const uint32_t priorities[], size_t n)$/;"	f	file:
check_hindex	tests/test-hindex.c	/^check_hindex(struct hindex *hindex, const int values[], size_t n,$/;"	f	file:
check_hmap	tests/test-hmap.c	/^check_hmap(struct hmap *hmap, const int values[], size_t n,$/;"	f	file:
check_index_uniqueness	ovsdb/transaction.c	/^check_index_uniqueness(struct ovsdb_txn *txn OVS_UNUSED,$/;"	f	file:
check_int_div	ovsdb/mutation.c	/^check_int_div(int64_t x, int64_t y)$/;"	f	file:
check_iphdr	datapath/flow.c	/^static int check_iphdr(struct sk_buff *skb)$/;"	f	file:
check_iphdr	datapath/linux/flow.c	/^static int check_iphdr(struct sk_buff *skb)$/;"	f	file:
check_json_type	lib/ovsdb-idl.c	/^check_json_type(const struct json *json, enum json_type type, const char *name)$/;"	f	file:
check_link_status	lib/netdev-dpdk.c	/^check_link_status(struct netdev_dpdk *dev)$/;"	f	file:
check_list	tests/test-list.c	/^check_list(struct ovs_list *list, const int values[], size_t n)$/;"	f	file:
check_log_2_floor	tests/test-util.c	/^check_log_2_floor(uint32_t x, int n)$/;"	f	file:
check_logs	tests/system-kmod-testsuite	/^check_logs () {$/;"	f
check_logs	tests/system-userspace-testsuite	/^check_logs () {$/;"	f
check_logs	tests/testsuite	/^check_logs () {$/;"	f
check_masked_set_action	ofproto/ofproto-dpif.c	/^check_masked_set_action(struct dpif_backer *backer)$/;"	f	file:
check_max_mpls_depth	ofproto/ofproto-dpif.c	/^check_max_mpls_depth(struct dpif_backer *backer)$/;"	f	file:
check_max_rows	ovsdb/transaction.c	/^check_max_rows(struct ovsdb_txn *txn)$/;"	f	file:
check_mutable	lib/db-ctl-base.c	/^check_mutable(const struct ovsdb_idl_row *row,$/;"	f	file:
check_ovsdb_error	ovsdb/ovsdb-client.c	/^check_ovsdb_error(struct ovsdb_error *error)$/;"	f	file:
check_ovsdb_error	ovsdb/ovsdb-tool.c	/^check_ovsdb_error(struct ovsdb_error *error)$/;"	f	file:
check_ovsdb_error	tests/test-ovsdb.c	/^check_ovsdb_error(struct ovsdb_error *error)$/;"	f	file:
check_patches	tests/testsuite	/^check_patches () {$/;"	f
check_pb_conflict	ovn/controller-vtep/binding.c	/^check_pb_conflict(struct shash *ls_to_pb,$/;"	f	file:
check_rdp2	tests/test-util.c	/^check_rdp2(uint32_t x, int n)$/;"	f	file:
check_real_range	ovsdb/mutation.c	/^check_real_range(double x)$/;"	f	file:
check_received_aa	tests/test-aa.c	/^check_received_aa(struct lldpd_port *sport,$/;"	f	file:
check_received_chassis	tests/test-aa.c	/^check_received_chassis(struct lldpd_chassis *schassis,$/;"	f	file:
check_received_port	tests/test-aa.c	/^check_received_port(struct lldpd_port *sport,$/;"	f	file:
check_recirc	ofproto/ofproto-dpif.c	/^check_recirc(struct dpif_backer *backer)$/;"	f	file:
check_recursion	rhel/etc_sysconfig_network-scripts_ifup-ovs	/^check_recursion ()$/;"	f
check_ref_count	ovsdb/transaction.c	/^check_ref_count(struct ovsdb_txn *txn OVS_UNUSED, struct ovsdb_txn_row *r)$/;"	f	file:
check_rup2	tests/test-util.c	/^check_rup2(uint32_t x, int n)$/;"	f	file:
check_service	lib/daemon-windows.c	/^check_service()$/;"	f	file:
check_space	utilities/bugtool/ovs-bugtool	/^def check_space(cap, name, size):$/;"	f
check_stream_classes	lib/stream.c	/^check_stream_classes(void)$/;"	f	file:
check_string_constraints	lib/ovsdb-data.c	/^check_string_constraints(const char *s,$/;"	f	file:
check_support	ofproto/ofproto-dpif.c	/^check_support(struct dpif_backer *backer)$/;"	f	file:
check_table_id	ofproto/ofproto.c	/^check_table_id(const struct ofproto *ofproto, uint8_t table_id)$/;"	f	file:
check_tnl_key	lib/bfd.c	/^    atomic_bool check_tnl_key;    \/* Verify tunnel key of inbound packets? *\/$/;"	m	struct:bfd	file:
check_tnl_key	lib/cfm.c	/^    atomic_bool check_tnl_key; \/* Verify the tunnel key of inbound packets? *\/$/;"	m	struct:cfm	file:
check_tnl_key	lib/cfm.h	/^    bool check_tnl_key;         \/* Verify inbound packet key? *\/$/;"	m	struct:cfm_settings
check_tries	lib/classifier.c	/^check_tries(struct trie_ctx trie_ctx[CLS_MAX_TRIES], unsigned int n_tries,$/;"	f	file:
check_txn	ovsdb/ovsdb-client.c	/^check_txn(int error, struct jsonrpc_msg **reply_)$/;"	f	file:
check_type	utilities/ovs-pki	/^check_type() {$/;"	f
check_type	utilities/ovs-pki.in	/^check_type() {$/;"	f
check_ufid	ofproto/ofproto-dpif.c	/^check_ufid(struct dpif_backer *backer)$/;"	f	file:
check_variable_length_userdata	ofproto/ofproto-dpif.c	/^check_variable_length_userdata(struct dpif_backer *backer)$/;"	f	file:
check_vconn_classes	lib/vconn.c	/^check_vconn_classes(void)$/;"	f	file:
check_word_hash	tests/test-hash.c	/^check_word_hash(uint32_t (*hash)(uint32_t), const char *name,$/;"	f	file:
checksum	datapath-windows/ovsext/NetProto.h	/^   UINT16   checksum;$/;"	m	struct:ICMPHdr
children	utilities/ovs-vsctl.c	/^    struct hmap children;        \/* VLAN bridges indexed by 'vlan'. *\/$/;"	m	struct:vsctl_bridge	typeref:struct:vsctl_bridge::hmap	file:
children_node	utilities/ovs-vsctl.c	/^    struct hmap_node children_node; \/* Node in parent's 'children' hmap. *\/$/;"	m	struct:vsctl_bridge	typeref:struct:vsctl_bridge::hmap_node	file:
choose	tests/test-classifier.c	/^choose(unsigned int n, unsigned int *idxp)$/;"	f	file:
choose_output_slave	ofproto/bond.c	/^choose_output_slave(const struct bond *bond, const struct flow *flow,$/;"	f	file:
chx1	datapath-windows/ovsext/resource.h	1245;"	d
chx10	datapath-windows/ovsext/resource.h	1254;"	d
chx11	datapath-windows/ovsext/resource.h	1255;"	d
chx12	datapath-windows/ovsext/resource.h	1256;"	d
chx13	datapath-windows/ovsext/resource.h	1257;"	d
chx14	datapath-windows/ovsext/resource.h	1258;"	d
chx15	datapath-windows/ovsext/resource.h	1259;"	d
chx16	datapath-windows/ovsext/resource.h	1260;"	d
chx2	datapath-windows/ovsext/resource.h	1246;"	d
chx3	datapath-windows/ovsext/resource.h	1247;"	d
chx4	datapath-windows/ovsext/resource.h	1248;"	d
chx5	datapath-windows/ovsext/resource.h	1249;"	d
chx6	datapath-windows/ovsext/resource.h	1250;"	d
chx7	datapath-windows/ovsext/resource.h	1251;"	d
chx8	datapath-windows/ovsext/resource.h	1252;"	d
chx9	datapath-windows/ovsext/resource.h	1253;"	d
ciaddr	datapath/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::in_addr	file:
ciaddr	datapath/linux/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::in_addr	file:
ciaddr	lib/dhcp.h	/^    ovs_be32 ciaddr;            \/* Client IP, if it has a lease for one. *\/$/;"	m	struct:dhcp_header
cksum	ovsdb/ovsdb.h	/^    char *cksum;$/;"	m	struct:ovsdb_schema
clamp	lib/stp.c	/^clamp(int x, int min, int max)$/;"	f	file:
class	lib/dpif-netdev.c	/^    const struct dpif_class *const class;$/;"	m	struct:dp_netdev	file:
class	lib/ovsdb-idl.c	/^    const struct ovsdb_idl_class *class;$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::ovsdb_idl_class	file:
class	tests/test-ovsdb.c	/^    struct do_query_distinct_class *class;$/;"	m	struct:do_query_distinct_row	typeref:struct:do_query_distinct_row::do_query_distinct_class	file:
class_delete	lib/netdev-linux.c	/^    int (*class_delete)(struct netdev *, struct tc_queue *queue);$/;"	m	struct:tc_ops	file:
class_dump_stats	lib/netdev-linux.c	/^    int (*class_dump_stats)(const struct netdev *netdev,$/;"	m	struct:tc_ops	file:
class_get	lib/netdev-linux.c	/^    int (*class_get)(const struct netdev *netdev, const struct tc_queue *queue,$/;"	m	struct:tc_ops	file:
class_get_stats	lib/netdev-linux.c	/^    int (*class_get_stats)(const struct netdev *netdev,$/;"	m	struct:tc_ops	file:
class_set	lib/netdev-linux.c	/^    int (*class_set)(struct netdev *, unsigned int queue_id,$/;"	m	struct:tc_ops	file:
classifier	lib/classifier.c	/^VLOG_DEFINE_THIS_MODULE(classifier);$/;"	v
classifier	lib/classifier.h	/^struct classifier {$/;"	s
classifier_count	lib/classifier.c	/^classifier_count(const struct classifier *cls)$/;"	f
classifier_defer	lib/classifier.h	/^classifier_defer(struct classifier *cls)$/;"	f
classifier_destroy	lib/classifier.c	/^classifier_destroy(struct classifier *cls)$/;"	f
classifier_find_match_exactly	lib/classifier.c	/^classifier_find_match_exactly(const struct classifier *cls,$/;"	f
classifier_find_rule_exactly	lib/classifier.c	/^classifier_find_rule_exactly(const struct classifier *cls,$/;"	f
classifier_init	lib/classifier.c	/^classifier_init(struct classifier *cls, const uint8_t *flow_segments)$/;"	f
classifier_insert	lib/classifier.c	/^classifier_insert(struct classifier *cls, const struct cls_rule *rule,$/;"	f
classifier_is_empty	lib/classifier.c	/^classifier_is_empty(const struct classifier *cls)$/;"	f
classifier_lookup	lib/classifier.c	/^classifier_lookup(const struct classifier *cls, cls_version_t version,$/;"	f
classifier_lookup__	lib/classifier.c	/^classifier_lookup__(const struct classifier *cls, cls_version_t version,$/;"	f	file:
classifier_publish	lib/classifier.h	/^classifier_publish(struct classifier *cls)$/;"	f
classifier_remove	lib/classifier.c	/^classifier_remove(struct classifier *cls, const struct cls_rule *cls_rule)$/;"	f
classifier_replace	lib/classifier.c	/^classifier_replace(struct classifier *cls, const struct cls_rule *rule,$/;"	f
classifier_rule_overlaps	lib/classifier.c	/^classifier_rule_overlaps(const struct classifier *cls,$/;"	f
classifier_set_prefix_fields	lib/classifier.c	/^classifier_set_prefix_fields(struct classifier *cls,$/;"	f
classifiers	python/setup.py	/^    classifiers=[$/;"	v
classifyOut	datapath-windows/ovsext/Tunnel.h	/^   FWPS_CLASSIFY_OUT *classifyOut;$/;"	m	struct:OVS_TUNNEL_PENDED_PACKET_
classify_upcall	ofproto/ofproto-dpif-upcall.c	/^classify_upcall(enum dpif_upcall_type type, const struct nlattr *userdata)$/;"	f	file:
clause	lib/classifier.h	/^    uint8_t clause;$/;"	m	struct:cls_conjunction
clause	lib/ofp-actions.c	/^    uint8_t clause;$/;"	m	struct:nx_action_conjunction	file:
clause	lib/ofp-actions.h	/^    uint8_t clause;$/;"	m	struct:ofpact_conjunction
clauses	lib/classifier.c	/^    uint64_t clauses;$/;"	m	struct:conjunctive_match	file:
clauses	ovsdb/condition.h	/^    struct ovsdb_clause *clauses;$/;"	m	struct:ovsdb_condition	typeref:struct:ovsdb_condition::ovsdb_clause
clean_percpu	datapath/linux/compat/stt.c	/^static void clean_percpu(struct work_struct *work)$/;"	f	file:
clean_percpu	datapath/linux/stt.c	/^static void clean_percpu(struct work_struct *work)$/;"	f	file:
cleanup	lib/lldp/lldpd-structs.h	/^    int (*cleanup)(struct lldpd *, struct lldpd_hardware *); \/* Cleanup *\/$/;"	m	struct:lldpd_ops
cleanup	python/ovstest/rpcserver.py	/^    def cleanup(self):$/;"	m	class:TestArena
cleanup	tests/ovstest.c	/^cleanup(void)$/;"	f	file:
cleanup_ls	vtep/ovs-vtep	/^    def cleanup_ls(self):$/;"	m	class:Logical_Switch
cleanup_ovsdb	utilities/bugtool/ovs-bugtool	/^def cleanup_ovsdb():$/;"	f
clear	lib/dpif-netlink.c	/^    bool clear;                         \/* OVS_FLOW_ATTR_CLEAR. *\/$/;"	m	struct:dpif_netlink_flow	file:
clear_conntrack	ofproto/ofproto-dpif-xlate.c	/^clear_conntrack(struct flow *flow)$/;"	f	file:
clear_gso	datapath/linux/compat/stt.c	/^static int clear_gso(struct sk_buff *skb)$/;"	f	file:
clear_gso	datapath/linux/stt.c	/^static int clear_gso(struct sk_buff *skb)$/;"	f	file:
clear_macs	vtep/vtep-ctl.c	/^clear_macs(struct ctl_context *ctx, bool local)$/;"	f	file:
clear_skb_priorities	ofproto/ofproto-dpif-xlate.c	/^clear_skb_priorities(struct xport *xport)$/;"	f	file:
clear_slot	lib/ovs-thread.c	/^clear_slot(struct ovsthread_key_slots *slots, unsigned int index)$/;"	f	file:
client	tests/appctl.py	/^import ovs.unixctl.client$/;"	i
client_id	tests/dpdk/ring_client.c	/^static uint8_t client_id = 0;$/;"	v	file:
clock	lib/timeval.c	/^struct clock {$/;"	s	file:
clock_gettime	lib/timeval.c	/^clock_gettime(clock_t id, struct timespec *ts)$/;"	f	file:
clock_gettime	python/ovs/timeval.py	/^    clock_gettime = getattr(librt, clock_gettime_name)$/;"	v
clock_gettime_name	python/ovs/timeval.py	/^        clock_gettime_name = '__clock_gettime50'$/;"	v
clock_gettime_name	python/ovs/timeval.py	/^    clock_gettime_name = 'clock_gettime'$/;"	v
clockid_t	lib/timeval.c	/^typedef unsigned int clockid_t;$/;"	t	file:
clone_atoms	lib/ovsdb-data.c	/^clone_atoms(const union ovsdb_atom *old, enum ovsdb_atomic_type type, size_t n)$/;"	f	file:
clone_monitor_row_data	ovsdb/monitor.c	/^clone_monitor_row_data(const struct ovsdb_monitor_table *mt,$/;"	f	file:
clone_rule	tests/test-classifier.c	/^clone_rule(const struct test_rule *src)$/;"	f	file:
close	lib/dpif-provider.h	/^    void (*close)(struct dpif *dpif);$/;"	m	struct:dpif_class
close	lib/stream-provider.h	/^    void (*close)(struct pstream *pstream);$/;"	m	struct:pstream_class
close	lib/stream-provider.h	/^    void (*close)(struct stream *stream);$/;"	m	struct:stream_class
close	lib/vconn-provider.h	/^    void (*close)(struct pvconn *pvconn);$/;"	m	struct:pvconn_class
close	lib/vconn-provider.h	/^    void (*close)(struct vconn *vconn);$/;"	m	struct:vconn_class
close	python/ovs/db/idl.py	/^    def close(self):$/;"	m	class:Idl
close	python/ovs/jsonrpc.py	/^    def close(self):$/;"	m	class:Connection
close	python/ovs/jsonrpc.py	/^    def close(self):$/;"	m	class:Session
close	python/ovs/stream.py	/^    def close(self):$/;"	m	class:PassiveStream
close	python/ovs/stream.py	/^    def close(self):$/;"	m	class:Stream
close	python/ovs/unixctl/client.py	/^    def close(self):$/;"	m	class:UnixctlClient
close	python/ovs/unixctl/server.py	/^    def close(self):$/;"	m	class:UnixctlClient
close	python/ovs/unixctl/server.py	/^    def close(self):$/;"	m	class:UnixctlServer
close	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def close(self):$/;"	m	class:ConfigurationFile
close_db	ovsdb/ovsdb-server.c	/^close_db(struct db *db)$/;"	f	file:
close_dpif_backer	ofproto/ofproto-dpif.c	/^close_dpif_backer(struct dpif_backer *backer)$/;"	f	file:
close_standard_fds	lib/daemon.c	/^close_standard_fds(void)$/;"	f
closesocket	lib/socket-util.h	95;"	d
cls	lib/classifier.h	/^    const struct classifier *cls;$/;"	m	struct:cls_cursor	typeref:struct:cls_cursor::classifier
cls	lib/dpif-netdev.c	/^    struct dpcls cls;$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::dpcls	file:
cls	lib/ovs-router.c	/^static struct classifier cls;$/;"	v	typeref:struct:classifier	file:
cls	lib/tnl-ports.c	/^static struct classifier cls;   \/* Tunnel ports. *\/$/;"	v	typeref:struct:classifier	file:
cls	ofproto/ofproto-provider.h	/^    struct classifier cls;      \/* Contains "struct rule"s. *\/$/;"	m	struct:oftable	typeref:struct:oftable::classifier
cls	tests/test-classifier.c	/^    const struct classifier *cls;$/;"	m	struct:cls_aux	typeref:struct:cls_aux::classifier	file:
cls_aux	tests/test-classifier.c	/^struct cls_aux {$/;"	s	file:
cls_conjunction	lib/classifier.h	/^struct cls_conjunction {$/;"	s
cls_conjunction_set	lib/classifier.c	/^struct cls_conjunction_set {$/;"	s	file:
cls_conjunction_set_alloc	lib/classifier.c	/^cls_conjunction_set_alloc(struct cls_match *match,$/;"	f	file:
cls_conjunction_set_size	lib/classifier.c	/^cls_conjunction_set_size(size_t n)$/;"	f	file:
cls_cursor	lib/classifier.h	/^struct cls_cursor {$/;"	s
cls_cursor_advance	lib/classifier.c	/^cls_cursor_advance(struct cls_cursor *cursor)$/;"	f
cls_cursor_next	lib/classifier.c	/^cls_cursor_next(struct cls_cursor *cursor)$/;"	f	file:
cls_cursor_start	lib/classifier.c	/^cls_cursor_start(const struct classifier *cls, const struct cls_rule *target,$/;"	f
cls_field	tests/test-classifier.c	/^struct cls_field {$/;"	s	file:
cls_fields	tests/test-classifier.c	/^static const struct cls_field cls_fields[CLS_N_FIELDS] = {$/;"	v	typeref:struct:cls_field	file:
cls_match	lib/classifier-private.h	/^struct cls_match {$/;"	s
cls_match	lib/classifier.h	/^    struct cls_match *cls_match;  \/* NULL if not in a classifier. *\/$/;"	m	struct:cls_rule	typeref:struct:cls_rule::cls_match
cls_match_alloc	lib/classifier.c	/^cls_match_alloc(const struct cls_rule *rule, cls_version_t version,$/;"	f	file:
cls_match_free_cb	lib/classifier.c	/^cls_match_free_cb(struct cls_match *rule)$/;"	f
cls_match_insert	lib/classifier-private.h	/^cls_match_insert(struct cls_match *prev, struct cls_match *next,$/;"	f
cls_match_is_eventually_invisible	lib/classifier-private.h	/^cls_match_is_eventually_invisible(const struct cls_match *rule)$/;"	f
cls_match_next	lib/classifier-private.h	/^cls_match_next(const struct cls_match *rule)$/;"	f
cls_match_next_protected	lib/classifier-private.h	/^cls_match_next_protected(const struct cls_match *rule)$/;"	f
cls_match_remove	lib/classifier-private.h	/^cls_match_remove(struct cls_match *prev, struct cls_match *rule)$/;"	f
cls_match_replace	lib/classifier-private.h	/^cls_match_replace(struct cls_match *prev,$/;"	f
cls_match_set_remove_version	lib/classifier-private.h	/^cls_match_set_remove_version(struct cls_match *rule, cls_version_t version)$/;"	f
cls_match_visible_in_version	lib/classifier-private.h	/^cls_match_visible_in_version(const struct cls_match *rule,$/;"	f
cls_rule	lib/classifier-private.h	/^    const struct cls_rule *cls_rule;$/;"	m	struct:cls_match	typeref:struct:cls_match::cls_rule
cls_rule	lib/classifier.h	/^struct cls_rule {$/;"	s
cls_rule	tests/test-classifier.c	/^    struct cls_rule cls_rule;   \/* Classifier rule data. *\/$/;"	m	struct:test_rule	typeref:struct:test_rule::cls_rule	file:
cls_rule_clone	lib/classifier.c	/^cls_rule_clone(struct cls_rule *dst, const struct cls_rule *src)$/;"	f
cls_rule_equal	lib/classifier.c	/^cls_rule_equal(const struct cls_rule *a, const struct cls_rule *b)$/;"	f
cls_rule_format	lib/classifier.c	/^cls_rule_format(const struct cls_rule *rule, struct ds *s)$/;"	f
cls_rule_init	lib/classifier.c	/^cls_rule_init(struct cls_rule *rule, const struct match *match, int priority)$/;"	f
cls_rule_init__	lib/classifier.c	/^cls_rule_init__(struct cls_rule *rule, unsigned int priority)$/;"	f	file:
cls_rule_init_from_minimatch	lib/classifier.c	/^cls_rule_init_from_minimatch(struct cls_rule *rule,$/;"	f
cls_rule_is_catchall	lib/classifier.c	/^cls_rule_is_catchall(const struct cls_rule *rule)$/;"	f
cls_rule_is_loose_match	lib/classifier.c	/^cls_rule_is_loose_match(const struct cls_rule *rule,$/;"	f
cls_rule_make_invisible_in_version	lib/classifier.c	/^cls_rule_make_invisible_in_version(const struct cls_rule *rule,$/;"	f
cls_rule_move	lib/classifier.c	/^cls_rule_move(struct cls_rule *dst, struct cls_rule *src)$/;"	f
cls_rule_restore_visibility	lib/classifier.c	/^cls_rule_restore_visibility(const struct cls_rule *rule)$/;"	f
cls_rule_set_conjunctions	lib/classifier.c	/^cls_rule_set_conjunctions(struct cls_rule *cr,$/;"	f
cls_rule_visible_in_version	lib/classifier.c	/^cls_rule_visible_in_version(const struct cls_rule *rule, cls_version_t version)$/;"	f
cls_subtable	lib/classifier-private.h	/^struct cls_subtable {$/;"	s
cls_trie	lib/classifier.h	/^struct cls_trie {$/;"	s
cls_version_t	lib/classifier.h	/^typedef uint64_t cls_version_t;$/;"	t
clz32	lib/util.h	/^clz32(uint32_t n)$/;"	f
clz64	lib/util.h	/^clz64(uint64_t n)$/;"	f
cmap	lib/cmap.h	/^struct cmap {$/;"	s
cmap	ofproto/ofproto-dpif-upcall.c	/^    struct cmap cmap;                  \/* Datapath flow keys. *\/$/;"	m	struct:umap	typeref:struct:umap::cmap	file:
cmap	tests/test-cmap.c	/^    struct cmap *cmap;$/;"	m	struct:cmap_aux	typeref:struct:cmap_aux::cmap	file:
cmap_aux	tests/test-cmap.c	/^struct cmap_aux {$/;"	s	file:
cmap_bucket	lib/cmap.c	/^struct cmap_bucket {$/;"	s	file:
cmap_count	lib/cmap.c	/^cmap_count(const struct cmap *cmap)$/;"	f
cmap_cursor	lib/cmap.h	/^struct cmap_cursor {$/;"	s
cmap_cursor_advance	lib/cmap.c	/^cmap_cursor_advance(struct cmap_cursor *cursor)$/;"	f
cmap_cursor_start	lib/cmap.c	/^cmap_cursor_start(const struct cmap *cmap)$/;"	f
cmap_destroy	lib/cmap.c	/^cmap_destroy(struct cmap *cmap)$/;"	f
cmap_expand	lib/cmap.c	/^COVERAGE_DEFINE(cmap_expand);$/;"	v
cmap_find	lib/cmap.c	/^cmap_find(const struct cmap *cmap, uint32_t hash)$/;"	f
cmap_find__	lib/cmap.c	/^cmap_find__(const struct cmap_bucket *b1, const struct cmap_bucket *b2,$/;"	f	file:
cmap_find_batch	lib/cmap.c	/^cmap_find_batch(const struct cmap *cmap, unsigned long map,$/;"	f
cmap_find_bucket_protected	lib/cmap.c	/^cmap_find_bucket_protected(struct cmap_impl *impl, uint32_t hash, uint32_t h)$/;"	f	file:
cmap_find_empty_slot_protected	lib/cmap.c	/^cmap_find_empty_slot_protected(const struct cmap_bucket *b)$/;"	f	file:
cmap_find_in_bucket	lib/cmap.c	/^cmap_find_in_bucket(const struct cmap_bucket *bucket, uint32_t hash)$/;"	f	file:
cmap_find_protected	lib/cmap.c	/^cmap_find_protected(const struct cmap *cmap, uint32_t hash)$/;"	f
cmap_find_slot_protected	lib/cmap.c	/^cmap_find_slot_protected(struct cmap_bucket *b, uint32_t hash)$/;"	f	file:
cmap_first	lib/cmap.h	/^cmap_first(const struct cmap *cmap)$/;"	f
cmap_get_impl	lib/cmap.c	/^cmap_get_impl(const struct cmap *cmap)$/;"	f	file:
cmap_impl	lib/cmap.c	/^struct cmap_impl {$/;"	s	file:
cmap_impl_create	lib/cmap.c	/^cmap_impl_create(uint32_t mask)$/;"	f	file:
cmap_init	lib/cmap.c	/^cmap_init(struct cmap *cmap)$/;"	f
cmap_insert	lib/cmap.c	/^cmap_insert(struct cmap *cmap, struct cmap_node *node, uint32_t hash)$/;"	f
cmap_insert_bfs	lib/cmap.c	/^cmap_insert_bfs(struct cmap_impl *impl, struct cmap_node *new_node,$/;"	f	file:
cmap_insert_bucket	lib/cmap.c	/^cmap_insert_bucket(struct cmap_node *node, uint32_t hash,$/;"	f	file:
cmap_insert_dup	lib/cmap.c	/^cmap_insert_dup(struct cmap_node *new_node, uint32_t hash,$/;"	f	file:
cmap_is_empty	lib/cmap.c	/^cmap_is_empty(const struct cmap *cmap)$/;"	f
cmap_next_position	lib/cmap.c	/^cmap_next_position(const struct cmap *cmap,$/;"	f
cmap_node	lib/classifier-private.h	/^    struct cmap_node cmap_node;    \/* Within classifier's 'subtables_map'. *\/$/;"	m	struct:cls_subtable	typeref:struct:cls_subtable::cmap_node
cmap_node	lib/classifier-private.h	/^    struct cmap_node cmap_node; \/* Within struct cls_subtable 'rules'. *\/$/;"	m	struct:cls_match	typeref:struct:cls_match::cmap_node
cmap_node	lib/cmap.h	/^struct cmap_node {$/;"	s
cmap_node	lib/dpif-netdev.c	/^    struct cmap_node cmap_node;   \/* Within struct dpcls_subtable 'rules'. *\/$/;"	m	struct:dpcls_rule	typeref:struct:dpcls_rule::cmap_node	file:
cmap_node	lib/tnl-arp-cache.c	/^    struct cmap_node cmap_node;$/;"	m	struct:tnl_arp_entry	typeref:struct:tnl_arp_entry::cmap_node	file:
cmap_node	ofproto/ofproto-dpif-upcall.c	/^    struct cmap_node cmap_node;     \/* In parent revalidator 'ukeys' map. *\/$/;"	m	struct:udpif_key	typeref:struct:udpif_key::cmap_node	file:
cmap_node_next	lib/cmap.h	/^cmap_node_next(const struct cmap_node *node)$/;"	f
cmap_node_next_protected	lib/cmap.h	/^cmap_node_next_protected(const struct cmap_node *node)$/;"	f
cmap_position	lib/cmap.h	/^struct cmap_position {$/;"	s
cmap_rehash	lib/cmap.c	/^cmap_rehash(struct cmap *cmap, uint32_t mask)$/;"	f	file:
cmap_remove	lib/cmap.h	/^cmap_remove(struct cmap *cmap, struct cmap_node *node, uint32_t hash)$/;"	f
cmap_replace	lib/cmap.c	/^cmap_replace(struct cmap *cmap, struct cmap_node *old_node,$/;"	f
cmap_replace__	lib/cmap.c	/^cmap_replace__(struct cmap_impl *impl, struct cmap_node *node,$/;"	f	file:
cmap_set_bucket	lib/cmap.c	/^cmap_set_bucket(struct cmap_bucket *b, int i,$/;"	f	file:
cmap_shrink	lib/cmap.c	/^COVERAGE_DEFINE(cmap_shrink);$/;"	v
cmap_try_insert	lib/cmap.c	/^cmap_try_insert(struct cmap_impl *impl, struct cmap_node *node, uint32_t hash)$/;"	f	file:
cmap_try_rehash	lib/cmap.c	/^cmap_try_rehash(const struct cmap_impl *old, struct cmap_impl *new)$/;"	f	file:
cmb1	datapath-windows/ovsext/resource.h	1341;"	d
cmb10	datapath-windows/ovsext/resource.h	1350;"	d
cmb11	datapath-windows/ovsext/resource.h	1351;"	d
cmb12	datapath-windows/ovsext/resource.h	1352;"	d
cmb13	datapath-windows/ovsext/resource.h	1353;"	d
cmb14	datapath-windows/ovsext/resource.h	1354;"	d
cmb15	datapath-windows/ovsext/resource.h	1355;"	d
cmb16	datapath-windows/ovsext/resource.h	1356;"	d
cmb2	datapath-windows/ovsext/resource.h	1342;"	d
cmb3	datapath-windows/ovsext/resource.h	1343;"	d
cmb4	datapath-windows/ovsext/resource.h	1344;"	d
cmb5	datapath-windows/ovsext/resource.h	1345;"	d
cmb6	datapath-windows/ovsext/resource.h	1346;"	d
cmb7	datapath-windows/ovsext/resource.h	1347;"	d
cmb8	datapath-windows/ovsext/resource.h	1348;"	d
cmb9	datapath-windows/ovsext/resource.h	1349;"	d
cmd	datapath-windows/ovsext/Datapath.c	/^    UINT16 cmd;$/;"	m	struct:_NETLINK_CMD	file:
cmd	datapath-windows/ovsext/DpInternal.h	/^    uint32_t cmd;$/;"	m	struct:_OVS_PACKET_INFO
cmd	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT8 cmd;$/;"	m	struct:_GENL_MSG_HDR
cmd	datapath/datapath.h	/^	u8 cmd;$/;"	m	struct:dp_upcall_info
cmd	lib/dpif-netlink.c	/^    uint8_t cmd;$/;"	m	struct:dpif_netlink_dp	file:
cmd	lib/dpif-netlink.c	/^    uint8_t cmd;$/;"	m	struct:dpif_netlink_flow	file:
cmd	lib/dpif-netlink.h	/^    uint8_t cmd;$/;"	m	struct:dpif_netlink_vport
cmd	lib/netdev-windows.c	/^    uint8_t cmd;$/;"	m	struct:netdev_windows_netdev_info	file:
cmd	lib/netlink-protocol.h	/^    uint8_t cmd;$/;"	m	struct:genlmsghdr
cmdAsStr	utilities/bugtool/ovs-bugtool	/^    def cmdAsStr(self):$/;"	m	class:ProcOutput
cmd_add	lib/db-ctl-base.c	/^cmd_add(struct ctl_context *ctx)$/;"	f	file:
cmd_add_aa_mapping	utilities/ovs-vsctl.c	/^cmd_add_aa_mapping(struct ctl_context *ctx)$/;"	f	file:
cmd_add_bond	utilities/ovs-vsctl.c	/^cmd_add_bond(struct ctl_context *ctx)$/;"	f	file:
cmd_add_br	utilities/ovs-vsctl.c	/^cmd_add_br(struct ctl_context *ctx)$/;"	f	file:
cmd_add_ls	vtep/vtep-ctl.c	/^cmd_add_ls(struct ctl_context *ctx)$/;"	f	file:
cmd_add_mcast_local	vtep/vtep-ctl.c	/^cmd_add_mcast_local(struct ctl_context *ctx)$/;"	f	file:
cmd_add_mcast_remote	vtep/vtep-ctl.c	/^cmd_add_mcast_remote(struct ctl_context *ctx)$/;"	f	file:
cmd_add_port	utilities/ovs-vsctl.c	/^cmd_add_port(struct ctl_context *ctx)$/;"	f	file:
cmd_add_port	vtep/vtep-ctl.c	/^cmd_add_port(struct ctl_context *ctx)$/;"	f	file:
cmd_add_ps	vtep/vtep-ctl.c	/^cmd_add_ps(struct ctl_context *ctx)$/;"	f	file:
cmd_add_ucast_local	vtep/vtep-ctl.c	/^cmd_add_ucast_local(struct ctl_context *ctx)$/;"	f	file:
cmd_add_ucast_remote	vtep/vtep-ctl.c	/^cmd_add_ucast_remote(struct ctl_context *ctx)$/;"	f	file:
cmd_bind_ls	vtep/vtep-ctl.c	/^cmd_bind_ls(struct ctl_context *ctx)$/;"	f	file:
cmd_br_exists	utilities/ovs-vsctl.c	/^cmd_br_exists(struct ctl_context *ctx)$/;"	f	file:
cmd_br_get_external_id	utilities/ovs-vsctl.c	/^cmd_br_get_external_id(struct ctl_context *ctx)$/;"	f	file:
cmd_br_set_external_id	utilities/ovs-vsctl.c	/^cmd_br_set_external_id(struct ctl_context *ctx)$/;"	f	file:
cmd_br_to_parent	utilities/ovs-vsctl.c	/^cmd_br_to_parent(struct ctl_context *ctx)$/;"	f	file:
cmd_br_to_vlan	utilities/ovs-vsctl.c	/^cmd_br_to_vlan(struct ctl_context *ctx)$/;"	f	file:
cmd_chassis_add	ovn/utilities/ovn-sbctl.c	/^cmd_chassis_add(struct ctl_context *ctx)$/;"	f	file:
cmd_chassis_del	ovn/utilities/ovn-sbctl.c	/^cmd_chassis_del(struct ctl_context *ctx)$/;"	f	file:
cmd_clear	lib/db-ctl-base.c	/^cmd_clear(struct ctl_context *ctx)$/;"	f	file:
cmd_clear_local_macs	vtep/vtep-ctl.c	/^cmd_clear_local_macs(struct ctl_context *ctx)$/;"	f	file:
cmd_clear_remote_macs	vtep/vtep-ctl.c	/^cmd_clear_remote_macs(struct ctl_context *ctx)$/;"	f	file:
cmd_create	lib/db-ctl-base.c	/^cmd_create(struct ctl_context *ctx)$/;"	f	file:
cmd_del_aa_mapping	utilities/ovs-vsctl.c	/^cmd_del_aa_mapping(struct ctl_context *ctx)$/;"	f	file:
cmd_del_br	utilities/ovs-vsctl.c	/^cmd_del_br(struct ctl_context *ctx)$/;"	f	file:
cmd_del_controller	utilities/ovs-vsctl.c	/^cmd_del_controller(struct ctl_context *ctx)$/;"	f	file:
cmd_del_fail_mode	utilities/ovs-vsctl.c	/^cmd_del_fail_mode(struct ctl_context *ctx)$/;"	f	file:
cmd_del_ls	vtep/vtep-ctl.c	/^cmd_del_ls(struct ctl_context *ctx)$/;"	f	file:
cmd_del_manager	utilities/ovs-vsctl.c	/^cmd_del_manager(struct ctl_context *ctx)$/;"	f	file:
cmd_del_manager	vtep/vtep-ctl.c	/^cmd_del_manager(struct ctl_context *ctx)$/;"	f	file:
cmd_del_mcast_local	vtep/vtep-ctl.c	/^cmd_del_mcast_local(struct ctl_context *ctx)$/;"	f	file:
cmd_del_mcast_remote	vtep/vtep-ctl.c	/^cmd_del_mcast_remote(struct ctl_context *ctx)$/;"	f	file:
cmd_del_port	utilities/ovs-vsctl.c	/^cmd_del_port(struct ctl_context *ctx)$/;"	f	file:
cmd_del_port	vtep/vtep-ctl.c	/^cmd_del_port(struct ctl_context *ctx)$/;"	f	file:
cmd_del_ps	vtep/vtep-ctl.c	/^cmd_del_ps(struct ctl_context *ctx)$/;"	f	file:
cmd_del_ssl	utilities/ovs-vsctl.c	/^cmd_del_ssl(struct ctl_context *ctx)$/;"	f	file:
cmd_del_ucast_local	vtep/vtep-ctl.c	/^cmd_del_ucast_local(struct ctl_context *ctx)$/;"	f	file:
cmd_del_ucast_remote	vtep/vtep-ctl.c	/^cmd_del_ucast_remote(struct ctl_context *ctx)$/;"	f	file:
cmd_destroy	lib/db-ctl-base.c	/^cmd_destroy(struct ctl_context *ctx)$/;"	f	file:
cmd_emer_reset	utilities/ovs-vsctl.c	/^cmd_emer_reset(struct ctl_context *ctx)$/;"	f	file:
cmd_find	lib/db-ctl-base.c	/^cmd_find(struct ctl_context *ctx)$/;"	f	file:
cmd_get	lib/db-ctl-base.c	/^cmd_get(struct ctl_context *ctx)$/;"	f	file:
cmd_get_aa_mapping	utilities/ovs-vsctl.c	/^cmd_get_aa_mapping(struct ctl_context *ctx)$/;"	f	file:
cmd_get_controller	utilities/ovs-vsctl.c	/^cmd_get_controller(struct ctl_context *ctx)$/;"	f	file:
cmd_get_fail_mode	utilities/ovs-vsctl.c	/^cmd_get_fail_mode(struct ctl_context *ctx)$/;"	f	file:
cmd_get_manager	utilities/ovs-vsctl.c	/^cmd_get_manager(struct ctl_context *ctx)$/;"	f	file:
cmd_get_manager	vtep/vtep-ctl.c	/^cmd_get_manager(struct ctl_context *ctx)$/;"	f	file:
cmd_get_ssl	utilities/ovs-vsctl.c	/^cmd_get_ssl(struct ctl_context *ctx)$/;"	f	file:
cmd_help	utilities/ovs-benchmark.c	/^cmd_help(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
cmd_iface_to_br	utilities/ovs-vsctl.c	/^cmd_iface_to_br(struct ctl_context *ctx)$/;"	f	file:
cmd_init	utilities/ovs-vsctl.c	/^cmd_init(struct ctl_context *ctx OVS_UNUSED)$/;"	f	file:
cmd_latency	utilities/ovs-benchmark.c	/^cmd_latency(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
cmd_lflow_list	ovn/utilities/ovn-sbctl.c	/^cmd_lflow_list(struct ctl_context *ctx)$/;"	f	file:
cmd_list	lib/db-ctl-base.c	/^cmd_list(struct ctl_context *ctx)$/;"	f	file:
cmd_list_bindings	vtep/vtep-ctl.c	/^cmd_list_bindings(struct ctl_context *ctx)$/;"	f	file:
cmd_list_br	utilities/ovs-vsctl.c	/^cmd_list_br(struct ctl_context *ctx)$/;"	f	file:
cmd_list_ifaces	utilities/ovs-vsctl.c	/^cmd_list_ifaces(struct ctl_context *ctx)$/;"	f	file:
cmd_list_local_macs	vtep/vtep-ctl.c	/^cmd_list_local_macs(struct ctl_context *ctx)$/;"	f	file:
cmd_list_ls	vtep/vtep-ctl.c	/^cmd_list_ls(struct ctl_context *ctx)$/;"	f	file:
cmd_list_ports	utilities/ovs-vsctl.c	/^cmd_list_ports(struct ctl_context *ctx)$/;"	f	file:
cmd_list_ports	vtep/vtep-ctl.c	/^cmd_list_ports(struct ctl_context *ctx)$/;"	f	file:
cmd_list_ps	vtep/vtep-ctl.c	/^cmd_list_ps(struct ctl_context *ctx)$/;"	f	file:
cmd_list_remote_macs	vtep/vtep-ctl.c	/^cmd_list_remote_macs(struct ctl_context *ctx)$/;"	f	file:
cmd_listen	utilities/ovs-benchmark.c	/^cmd_listen(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
cmd_lport_bind	ovn/utilities/ovn-sbctl.c	/^cmd_lport_bind(struct ctl_context *ctx)$/;"	f	file:
cmd_lport_unbind	ovn/utilities/ovn-sbctl.c	/^cmd_lport_unbind(struct ctl_context *ctx)$/;"	f	file:
cmd_ls_exists	vtep/vtep-ctl.c	/^cmd_ls_exists(struct ctl_context *ctx)$/;"	f	file:
cmd_output	utilities/bugtool/ovs-bugtool	/^def cmd_output(cap, args, label=None, filter=None, binary=False):$/;"	f
cmd_port_to_br	utilities/ovs-vsctl.c	/^cmd_port_to_br(struct ctl_context *ctx)$/;"	f	file:
cmd_ps_exists	vtep/vtep-ctl.c	/^cmd_ps_exists(struct ctl_context *ctx)$/;"	f	file:
cmd_rate	utilities/ovs-benchmark.c	/^cmd_rate(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
cmd_remove	lib/db-ctl-base.c	/^cmd_remove(struct ctl_context *ctx)$/;"	f	file:
cmd_set	lib/db-ctl-base.c	/^cmd_set(struct ctl_context *ctx)$/;"	f	file:
cmd_set_controller	utilities/ovs-vsctl.c	/^cmd_set_controller(struct ctl_context *ctx)$/;"	f	file:
cmd_set_fail_mode	utilities/ovs-vsctl.c	/^cmd_set_fail_mode(struct ctl_context *ctx)$/;"	f	file:
cmd_set_manager	utilities/ovs-vsctl.c	/^cmd_set_manager(struct ctl_context *ctx)$/;"	f	file:
cmd_set_manager	vtep/vtep-ctl.c	/^cmd_set_manager(struct ctl_context *ctx)$/;"	f	file:
cmd_set_ssl	utilities/ovs-vsctl.c	/^cmd_set_ssl(struct ctl_context *ctx)$/;"	f	file:
cmd_show	lib/db-ctl-base.c	/^cmd_show(struct ctl_context *ctx)$/;"	f	file:
cmd_show_find_table_by_name	lib/db-ctl-base.c	/^cmd_show_find_table_by_name(const char *name)$/;"	f	file:
cmd_show_find_table_by_row	lib/db-ctl-base.c	/^cmd_show_find_table_by_row(const struct ovsdb_idl_row *row)$/;"	f	file:
cmd_show_row	lib/db-ctl-base.c	/^cmd_show_row(struct ctl_context *ctx, const struct ovsdb_idl_row *row,$/;"	f	file:
cmd_show_table	lib/db-ctl-base.h	/^struct cmd_show_table {$/;"	s
cmd_show_tables	lib/db-ctl-base.c	/^static const struct cmd_show_table *cmd_show_tables;$/;"	v	typeref:struct:cmd_show_table	file:
cmd_show_tables	ovn/utilities/ovn-sbctl.c	/^static struct cmd_show_table cmd_show_tables[] = {$/;"	v	typeref:struct:cmd_show_table	file:
cmd_show_tables	utilities/ovs-vsctl.c	/^static struct cmd_show_table cmd_show_tables[] = {$/;"	v	typeref:struct:cmd_show_table	file:
cmd_show_tables	vtep/vtep-ctl.c	/^static struct cmd_show_table cmd_show_tables[] = {$/;"	v	typeref:struct:cmd_show_table	file:
cmd_show_weak_ref	lib/db-ctl-base.c	/^cmd_show_weak_ref(struct ctl_context *ctx, const struct cmd_show_table *show,$/;"	f	file:
cmd_unbind_ls	vtep/vtep-ctl.c	/^cmd_unbind_ls(struct ctl_context *ctx)$/;"	f	file:
cmd_wait_until	lib/db-ctl-base.c	/^cmd_wait_until(struct ctl_context *ctx)$/;"	f	file:
cmds	datapath-windows/ovsext/Datapath.c	/^    NETLINK_CMD *cmds;          \/* Array of netlink commands and handlers. *\/$/;"	m	struct:_NETLINK_FAMILY	file:
cmp	ovn/lib/expr.h	/^        } cmp;$/;"	m	union:expr::__anon200	typeref:struct:expr::__anon200::__anon201
cmp_key	datapath/flow_table.c	/^static bool cmp_key(const struct sw_flow_key *key1,$/;"	f	file:
cmp_key	datapath/linux/flow_table.c	/^static bool cmp_key(const struct sw_flow_key *key1,$/;"	f	file:
cmsg_data	include/sparse/sys/socket.h	/^    unsigned char cmsg_data[];$/;"	m	struct:cmsghdr
cmsg_len	include/sparse/sys/socket.h	/^    size_t cmsg_len;$/;"	m	struct:cmsghdr
cmsg_level	include/sparse/sys/socket.h	/^    int cmsg_level;$/;"	m	struct:cmsghdr
cmsg_type	include/sparse/sys/socket.h	/^    int cmsg_type;$/;"	m	struct:cmsghdr
cmsghdr	include/sparse/sys/socket.h	/^struct cmsghdr {$/;"	s
cnt_ids	lib/ofp-actions.h	/^    uint16_t cnt_ids[];$/;"	m	struct:ofpact_cnt_ids
coalesce_skb	datapath/linux/compat/stt.c	/^static int coalesce_skb(struct sk_buff **headp)$/;"	f	file:
coalesce_skb	datapath/linux/stt.c	/^static int coalesce_skb(struct sk_buff **headp)$/;"	f	file:
code	datapath-windows/ovsext/NetProto.h	/^   UINT8    code;$/;"	m	struct:ICMPHdr
code	include/openflow/nicira-ext.h	/^    ovs_be16 code;              \/* Vendor-defined subtype. *\/$/;"	m	struct:nx_vendor_error
code	include/openflow/openflow-common.h	/^    ovs_be16 code;$/;"	m	struct:ofp_error_msg
code	lib/ofp-errors.c	/^    int type, code;$/;"	m	struct:triplet	file:
code	lib/packets.h	/^    uint8_t code;$/;"	m	struct:mld_header
codecs	tests/test-json.py	/^import codecs$/;"	i
codel	lib/netdev-linux.c	/^struct codel {$/;"	s	file:
codel_get__	lib/netdev-linux.c	/^codel_get__(const struct netdev *netdev_)$/;"	f	file:
codel_install__	lib/netdev-linux.c	/^codel_install__(struct netdev *netdev_, uint32_t target, uint32_t limit,$/;"	f	file:
codel_parse_qdisc_details__	lib/netdev-linux.c	/^codel_parse_qdisc_details__(struct netdev *netdev OVS_UNUSED,$/;"	f	file:
codel_parse_tca_options__	lib/netdev-linux.c	/^codel_parse_tca_options__(struct nlattr *nl_options, struct codel *codel)$/;"	f	file:
codel_qdisc_get	lib/netdev-linux.c	/^codel_qdisc_get(const struct netdev *netdev, struct smap *details)$/;"	f	file:
codel_qdisc_set	lib/netdev-linux.c	/^codel_qdisc_set(struct netdev *netdev, const struct smap *details)$/;"	f	file:
codel_setup_qdisc__	lib/netdev-linux.c	/^codel_setup_qdisc__(struct netdev *netdev, uint32_t target, uint32_t limit,$/;"	f	file:
codel_tc_destroy	lib/netdev-linux.c	/^codel_tc_destroy(struct tc *tc)$/;"	f	file:
codel_tc_install	lib/netdev-linux.c	/^codel_tc_install(struct netdev *netdev, const struct smap *details)$/;"	f	file:
codel_tc_load	lib/netdev-linux.c	/^codel_tc_load(struct netdev *netdev, struct ofpbuf *nlmsg)$/;"	f	file:
collect_all_info	utilities/bugtool/ovs-bugtool	/^            collect_all_info = False$/;"	v
collect_data	utilities/bugtool/ovs-bugtool	/^def collect_data():$/;"	f
collect_garbage	ovsdb/transaction.c	/^collect_garbage(struct ovsdb_txn *txn, struct ovsdb_txn_row *txn_row)$/;"	f	file:
collect_in_band_managers	vswitchd/bridge.c	/^collect_in_band_managers(const struct ovsrec_open_vswitch *ovs_cfg,$/;"	f	file:
collect_information	utilities/ovs-test	/^def collect_information(node):$/;"	f
collect_ovsdb	utilities/bugtool/ovs-bugtool	/^def collect_ovsdb():$/;"	f
collect_splinter_vlans	vswitchd/bridge.c	/^collect_splinter_vlans(const struct ovsrec_open_vswitch *ovs_cfg)$/;"	f	file:
collector_delay	lib/lacp.c	/^    ovs_be16 collector_delay; \/* Maximum collector delay. Set to UINT16_MAX. *\/$/;"	m	struct:lacp_pdu	file:
collector_len	lib/lacp.c	/^    uint8_t collector_len;    \/* Always 16. *\/$/;"	m	struct:lacp_pdu	file:
collector_set_id	lib/odp-util.h	/^        uint32_t collector_set_id; \/* ID of IPFIX collector set. *\/$/;"	m	struct:user_action_cookie::__anon125
collector_set_id	lib/ofp-actions.c	/^    ovs_be32 collector_set_id;      \/* ID of collector set in OVSDB. *\/$/;"	m	struct:nx_action_sample	file:
collector_set_id	lib/ofp-actions.h	/^    uint32_t collector_set_id;$/;"	m	struct:ofpact_sample
collector_set_id	ofproto/ofproto.h	/^    uint32_t collector_set_id;$/;"	m	struct:ofproto_ipfix_flow_exporter_options
collector_type	lib/lacp.c	/^    uint8_t collector_type;   \/* Always 3. *\/$/;"	m	struct:lacp_pdu	file:
collectors	ofproto/collectors.c	/^VLOG_DEFINE_THIS_MODULE(collectors);$/;"	v
collectors	ofproto/collectors.c	/^struct collectors {$/;"	s	file:
collectors	ofproto/netflow.c	/^    struct collectors *collectors; \/* NetFlow collectors. *\/$/;"	m	struct:netflow	typeref:struct:netflow::collectors	file:
collectors	ofproto/netflow.h	/^    struct sset collectors;$/;"	m	struct:netflow_options	typeref:struct:netflow_options::sset
collectors	ofproto/ofproto-dpif-ipfix.c	/^    struct collectors *collectors;$/;"	m	struct:dpif_ipfix_exporter	typeref:struct:dpif_ipfix_exporter::collectors	file:
collectors	ofproto/ofproto-dpif-sflow.c	/^    struct collectors *collectors;$/;"	m	struct:dpif_sflow	typeref:struct:dpif_sflow::collectors	file:
collectors_count	ofproto/collectors.c	/^collectors_count(const struct collectors *c)$/;"	f
collectors_create	ofproto/collectors.c	/^collectors_create(const struct sset *targets, uint16_t default_port,$/;"	f
collectors_destroy	ofproto/collectors.c	/^collectors_destroy(struct collectors *c)$/;"	f
collectors_send	ofproto/collectors.c	/^collectors_send(const struct collectors *c, const void *payload, size_t n)$/;"	f
collisions	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 collisions;   \/* Number of collisions. *\/$/;"	m	struct:ofp10_port_stats
collisions	include/openflow/openflow-1.1.h	/^    ovs_be64 collisions;      \/* Number of collisions. *\/$/;"	m	struct:ofp11_port_stats
collisions	include/openflow/openflow-1.4.h	/^    ovs_be64 collisions;     \/* Number of collisions. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
collisions	lib/netdev-linux.c	/^    uint64_t collisions;$/;"	m	struct:rtnl_link_stats64	file:
collisions	lib/netdev.h	/^    uint64_t collisions;$/;"	m	struct:netdev_stats
column	lib/table.c	/^struct column {$/;"	s	file:
column	ovsdb/condition.h	/^    const struct ovsdb_column *column;$/;"	m	struct:ovsdb_clause	typeref:struct:ovsdb_clause::ovsdb_column
column	ovsdb/monitor.c	/^    const struct ovsdb_column *column;$/;"	m	struct:ovsdb_monitor_column	typeref:struct:ovsdb_monitor_column::ovsdb_column	file:
column	ovsdb/mutation.h	/^    const struct ovsdb_column *column;$/;"	m	struct:ovsdb_mutation	typeref:struct:ovsdb_mutation::ovsdb_column
columnGroupToNroff	ovsdb/ovsdb-doc	/^def columnGroupToNroff(table, groupXml, documented_columns):$/;"	f
column_number	lib/json.c	/^    int column_number;$/;"	m	struct:json_parser	file:
column_picker	utilities/ovs-dpctl-top	/^def column_picker(order, obj):$/;"	f
column_select_event	utilities/ovs-dpctl-top	/^    def column_select_event(self):$/;"	m	class:Render
column_set_from_json	python/ovs/db/schema.py	/^def column_set_from_json(json, columns):$/;"	f
columns	lib/db-ctl-base.h	/^    const struct ovsdb_idl_column *columns[3]; \/* Seems like a good number. *\/$/;"	m	struct:cmd_show_table	typeref:struct:cmd_show_table::ovsdb_idl_column
columns	lib/ovsdb-idl-provider.h	/^    const struct ovsdb_idl_column *columns;$/;"	m	struct:ovsdb_idl_table_class	typeref:struct:ovsdb_idl_table_class::ovsdb_idl_column
columns	lib/ovsdb-idl-provider.h	/^    struct shash columns;    \/* Contains "const struct ovsdb_idl_column *"s. *\/$/;"	m	struct:ovsdb_idl_table	typeref:struct:ovsdb_idl_table::shash
columns	lib/table.h	/^    struct column *columns;$/;"	m	struct:table	typeref:struct:table::column
columns	ovsdb/column.h	/^    const struct ovsdb_column **columns;$/;"	m	struct:ovsdb_column_set	typeref:struct:ovsdb_column_set::ovsdb_column
columns	ovsdb/execution.c	/^    const struct ovsdb_column_set *columns;$/;"	m	struct:update_row_cbdata	typeref:struct:update_row_cbdata::ovsdb_column_set	file:
columns	ovsdb/monitor.c	/^    struct ovsdb_monitor_column *columns;$/;"	m	struct:ovsdb_monitor_table	typeref:struct:ovsdb_monitor_table::ovsdb_monitor_column	file:
columns	ovsdb/ovsdb-client.c	/^    const struct ovsdb_column **columns;$/;"	m	struct:dump_table_aux	typeref:struct:dump_table_aux::ovsdb_column	file:
columns	ovsdb/ovsdb-client.c	/^    struct ovsdb_column_set columns;$/;"	m	struct:monitored_table	typeref:struct:monitored_table::ovsdb_column_set	file:
columns	ovsdb/row.c	/^    const struct ovsdb_column_set *columns;$/;"	m	struct:ovsdb_row_set_sort_cbdata	typeref:struct:ovsdb_row_set_sort_cbdata::ovsdb_column_set	file:
columns	ovsdb/row.h	/^    struct ovsdb_column_set columns;$/;"	m	struct:ovsdb_row_hash	typeref:struct:ovsdb_row_hash::ovsdb_column_set
columns	ovsdb/table.h	/^    struct shash columns;       \/* Contains "struct ovsdb_column *"s. *\/$/;"	m	struct:ovsdb_table_schema	typeref:struct:ovsdb_table_schema::shash
commafy	python/ovs/db/types.py	/^def commafy(x):$/;"	f
command	datapath-windows/ovsext/IpHelper.h	/^    UINT32            command;$/;"	m	struct:_OVS_IP_HELPER_REQUEST
command	include/openflow/nicira-ext.h	/^    ovs_be16 command;             \/* OFPFC_* + possibly a table ID (see comment$/;"	m	struct:nx_flow_mod
command	include/openflow/nicira-ext.h	/^    ovs_be16 command;           \/* One of NTGTMC_* *\/$/;"	m	struct:nx_geneve_table_mod
command	include/openflow/openflow-1.0.h	/^    ovs_be16 command;             \/* One of OFPFC_*. *\/$/;"	m	struct:ofp10_flow_mod
command	include/openflow/openflow-1.1.h	/^    ovs_be16 command;             \/* One of OFPGC11_*. *\/$/;"	m	struct:ofp11_group_mod
command	include/openflow/openflow-1.1.h	/^    uint8_t command;             \/* One of OFPFC_*. *\/$/;"	m	struct:ofp11_flow_mod
command	include/openflow/openflow-1.3.h	/^    ovs_be16          command;      \/* One of OFPMC_*. *\/$/;"	m	struct:ofp13_meter_mod
command	include/openflow/openflow-1.4.h	/^    uint8_t command;            \/* One of OFPFMC14_*. *\/$/;"	m	struct:ofp14_flow_monitor_request
command	include/openflow/openflow-1.5.h	/^    ovs_be16 command;             \/* One of OFPGC15_*. *\/$/;"	m	struct:ofp15_group_mod
command	lib/ofp-util.h	/^    uint16_t command;             \/* One of OFPGC15_*. *\/$/;"	m	struct:ofputil_group_mod
command	lib/ofp-util.h	/^    uint16_t command;$/;"	m	struct:ofputil_flow_mod
command	lib/ofp-util.h	/^    uint16_t command;$/;"	m	struct:ofputil_geneve_table_mod
command	lib/ofp-util.h	/^    uint16_t command;$/;"	m	struct:ofputil_meter_mod
command_bucket_id	include/openflow/openflow-1.5.h	/^    ovs_be32 command_bucket_id;   \/* Bucket Id used as part of$/;"	m	struct:ofp15_group_mod
command_bucket_id	lib/ofp-util.h	/^    uint32_t command_bucket_id;   \/* Bucket Id used as part of$/;"	m	struct:ofputil_group_mod
command_line	lib/command-line.c	/^VLOG_DEFINE_THIS_MODULE(command_line);$/;"	v
command_name	tests/test-jsonrpc.py	/^    command_name = args.command[0]$/;"	v
command_register	python/ovs/unixctl/__init__.py	/^def command_register(name, usage, min_args, max_args, callback, aux):$/;"	f
commands	lib/unixctl.c	/^static struct shash commands = SHASH_INITIALIZER(&commands);$/;"	v	typeref:struct:shash	file:
commands	python/ovs/unixctl/__init__.py	/^commands = {}$/;"	v
commands	tests/ovstest.c	/^static struct ovs_cmdl_command *commands = NULL;$/;"	v	typeref:struct:ovs_cmdl_command	file:
commands	tests/test-bitmap.c	/^static const struct ovs_cmdl_command commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
commands	tests/test-classifier.c	/^static const struct ovs_cmdl_command commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
commands	tests/test-cmap.c	/^static const struct ovs_cmdl_command commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
commands	tests/test-heap.c	/^static const struct ovs_cmdl_command commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
commands	tests/test-util.c	/^static const struct ovs_cmdl_command commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
commands	tests/test-vconn.c	/^static const struct ovs_cmdl_command commands[] = {$/;"	v	typeref:struct:ovs_cmdl_command	file:
commands	utilities/bugtool/ovs-bugtool	/^import commands$/;"	i
commands	utilities/ovs-dev.py	/^commands = []$/;"	v
comment	lib/ovsdb-idl.c	/^    struct ds comment;$/;"	m	struct:ovsdb_idl_txn	typeref:struct:ovsdb_idl_txn::ds	file:
comment	ovsdb/transaction.c	/^    struct ds comment;$/;"	m	struct:ovsdb_txn	typeref:struct:ovsdb_txn::ds	file:
commit	debian/ovs-monitor-ipsec	/^    def commit(self):$/;"	f
commit	lib/odp-util.c	/^commit(enum ovs_key_attr attr, bool use_masked_set,$/;"	f	file:
commit	ovsdb/ovsdb.h	/^    struct ovsdb_error *(*commit)(struct ovsdb_replica *,$/;"	m	struct:ovsdb_replica_class	typeref:struct:ovsdb_replica_class::commit
commit	python/ovs/db/idl.py	/^    def commit(self):$/;"	m	class:Transaction
commit	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def commit(self):$/;"	m	class:ConfigurationFile
commit_block	python/ovs/db/idl.py	/^    def commit_block(self):$/;"	m	class:Transaction
commit_icmp_action	lib/odp-util.c	/^commit_icmp_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_ls_bindings	vtep/vtep-ctl.c	/^commit_ls_bindings(struct vtep_ctl_port *port)$/;"	f	file:
commit_masked_set_action	lib/odp-util.c	/^commit_masked_set_action(struct ofpbuf *odp_actions,$/;"	f
commit_mcast_entries	vtep/vtep-ctl.c	/^commit_mcast_entries(struct vtep_ctl_mcast_mac *mcast_mac)$/;"	f	file:
commit_mpls_action	lib/odp-util.c	/^commit_mpls_action(const struct flow *flow, struct flow *base,$/;"	f	file:
commit_odp_actions	lib/odp-util.c	/^commit_odp_actions(const struct flow *flow, struct flow *base,$/;"	f
commit_odp_tunnel_action	lib/odp-util.c	/^commit_odp_tunnel_action(const struct flow *flow, struct flow *base,$/;"	f
commit_set_action	lib/odp-util.c	/^commit_set_action(struct ofpbuf *odp_actions, enum ovs_key_attr key_type,$/;"	f	file:
commit_set_arp_action	lib/odp-util.c	/^commit_set_arp_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_ether_addr_action	lib/odp-util.c	/^commit_set_ether_addr_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_icmp_action	lib/odp-util.c	/^commit_set_icmp_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_ipv4_action	lib/odp-util.c	/^commit_set_ipv4_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_ipv6_action	lib/odp-util.c	/^commit_set_ipv6_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_nd_action	lib/odp-util.c	/^commit_set_nd_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_nw_action	lib/odp-util.c	/^commit_set_nw_action(const struct flow *flow, struct flow *base,$/;"	f	file:
commit_set_pkt_mark_action	lib/odp-util.c	/^commit_set_pkt_mark_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_port_action	lib/odp-util.c	/^commit_set_port_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_set_priority_action	lib/odp-util.c	/^commit_set_priority_action(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
commit_vlan_action	lib/odp-util.c	/^commit_vlan_action(ovs_be16 vlan_tci, struct flow *base,$/;"	f	file:
committing_txn	lib/ovsdb-idl.h	/^    struct ovsdb_idl_txn *committing_txn;$/;"	m	struct:ovsdb_idl_loop	typeref:struct:ovsdb_idl_loop::ovsdb_idl_txn
communities	lib/sflow.h	/^    u_int32_t *communities;                   \/* set of communities *\/$/;"	m	struct:_SFLExtended_gateway
communities_length	lib/sflow.h	/^    u_int32_t communities_length;             \/* number of communities *\/$/;"	m	struct:_SFLExtended_gateway
compact_or_convert	ovsdb/ovsdb-tool.c	/^compact_or_convert(const char *src_name_, const char *dst_name_,$/;"	f	file:
compare_actions_for_flow	lib/dpctl.c	/^compare_actions_for_flow(const void *a_, const void *b_)$/;"	f	file:
compare_atoms	tests/test-ovsdb.c	/^compare_atoms(const void *a_, const void *b_)$/;"	f	file:
compare_atoms_atomic_type	tests/test-ovsdb.c	/^static enum ovsdb_atomic_type compare_atoms_atomic_type;$/;"	v	typeref:enum:ovsdb_atomic_type	file:
compare_classifiers	tests/test-classifier.c	/^compare_classifiers(struct classifier *cls, size_t n_invisible_rules,$/;"	f	file:
compare_clauses_3way	ovsdb/condition.c	/^compare_clauses_3way(const void *a_, const void *b_)$/;"	f	file:
compare_cmps_3way	ovn/lib/expr.c	/^compare_cmps_3way(const struct expr *a, const struct expr *b)$/;"	f	file:
compare_cmps_cb	ovn/lib/expr.c	/^compare_cmps_cb(const void *a_, const void *b_)$/;"	f	file:
compare_columns	ovsdb/ovsdb-client.c	/^compare_columns(const void *a_, const void *b_)$/;"	f	file:
compare_coverage_counters	lib/coverage.c	/^compare_coverage_counters(const void *a_, const void *b_)$/;"	f	file:
compare_data	ovsdb/ovsdb-client.c	/^compare_data(size_t a_y, size_t b_y, size_t x,$/;"	f	file:
compare_expr_sort	ovn/lib/expr.c	/^compare_expr_sort(const void *a_, const void *b_)$/;"	f	file:
compare_flows	utilities/ovs-ofctl.c	/^compare_flows(const void *afs_, const void *bfs_)$/;"	f	file:
compare_ints	tests/test-cmap.c	/^compare_ints(const void *a_, const void *b_)$/;"	f	file:
compare_ints	tests/test-hindex.c	/^compare_ints(const void *a_, const void *b_)$/;"	f	file:
compare_ints	tests/test-hmap.c	/^compare_ints(const void *a_, const void *b_)$/;"	f	file:
compare_lines	tests/ovsdb-monitor-sort.pl	/^sub compare_lines {$/;"	s
compare_link1	tests/test-ovsdb.c	/^compare_link1(const void *a_, const void *b_)$/;"	f	file:
compare_nodes_by_key	lib/smap.c	/^compare_nodes_by_key(const void *a_, const void *b_)$/;"	f	file:
compare_nodes_by_name	lib/shash.c	/^compare_nodes_by_name(const void *a_, const void *b_)$/;"	f	file:
compare_nodes_by_name	lib/simap.c	/^compare_nodes_by_name(const void *a_, const void *b_)$/;"	f	file:
compare_output_actions	lib/dpctl.c	/^compare_output_actions(const void *a_, const void *b_)$/;"	f	file:
compare_ovsdb_monitor_column	ovsdb/monitor.c	/^compare_ovsdb_monitor_column(const void *a_, const void *b_)$/;"	f	file:
compare_ports	lib/ofp-print.c	/^compare_ports(const void *a_, const void *b_)$/;"	f	file:
compare_rows	ovsdb/ovsdb-client.c	/^compare_rows(size_t a_y, size_t b_y, void *aux_)$/;"	f	file:
compare_rows_by_uuid	tests/test-ovsdb.c	/^compare_rows_by_uuid(const void *a_, const void *b_)$/;"	f	file:
compare_rstp_priority_vectors	lib/rstp-state-machines.c	/^compare_rstp_priority_vectors(const struct rstp_priority_vector *v1,$/;"	f	file:
compare_string_pointers	lib/sset.c	/^compare_string_pointers(const void *a_, const void *b_)$/;"	f	file:
compare_strings	lib/svec.c	/^compare_strings(const void *a_, const void *b_)$/;"	f	file:
compare_token	tests/test-ovn.c	/^compare_token(const struct lex_token *a, const struct lex_token *b)$/;"	f	file:
compare_uint32s	tests/test-heap.c	/^compare_uint32s(const void *a_, const void *b_)$/;"	f	file:
compat_exit_net	datapath/linux/compat/include/net/net_namespace.h	22;"	d
compat_family	datapath/linux/compat/include/net/genetlink.h	/^	struct genl_family	compat_family;$/;"	m	struct:rpl_genl_family	typeref:struct:rpl_genl_family::genl_family
compat_init_net	datapath/linux/compat/include/net/net_namespace.h	20;"	d
compiler_barrier	lib/ovs-atomic-i586.h	81;"	d
compiler_barrier	lib/ovs-atomic-x86_64.h	85;"	d
complete_bridge	utilities/ovs-appctl-bashcomp.bash	/^complete_bridge () {$/;"	f
complete_dp	utilities/ovs-appctl-bashcomp.bash	/^complete_dp () {$/;"	f
complete_iface	utilities/ovs-appctl-bashcomp.bash	/^complete_iface () {$/;"	f
complete_port	utilities/ovs-appctl-bashcomp.bash	/^complete_port () {$/;"	f
completionList	datapath-windows/ovsext/Actions.c	/^    OvsCompletionList *completionList;$/;"	m	struct:OvsForwardingContext	file:
completion_SCRIPTS	Makefile	/^completion_SCRIPTS = utilities\/ovs-appctl-bashcomp.bash \\$/;"	m
completiondir	Makefile	/^completiondir = $(sysconfdir)\/bash_completion.d$/;"	m
completions	ovsdb/server.h	/^    struct ovs_list completions;\/* Completed triggers. *\/$/;"	m	struct:ovsdb_session	typeref:struct:ovsdb_session::ovs_list
compose_arp	lib/packets.c	/^compose_arp(struct dp_packet *b, uint16_t arp_op,$/;"	f
compose_conntrack_action	ofproto/ofproto-dpif-xlate.c	/^compose_conntrack_action(struct xlate_ctx *ctx, struct ofpact_conntrack *ofc)$/;"	f	file:
compose_dec_mpls_ttl_action	ofproto/ofproto-dpif-xlate.c	/^compose_dec_mpls_ttl_action(struct xlate_ctx *ctx)$/;"	f	file:
compose_dec_ttl	ofproto/ofproto-dpif-xlate.c	/^compose_dec_ttl(struct xlate_ctx *ctx, struct ofpact_cnt_ids *ids)$/;"	f	file:
compose_ipfix_action	ofproto/ofproto-dpif-xlate.c	/^compose_ipfix_action(struct xlate_ctx *ctx, odp_port_t output_odp_port)$/;"	f	file:
compose_lacp_pdu	lib/lacp.c	/^compose_lacp_pdu(const struct lacp_info *actor,$/;"	f	file:
compose_mpls_pop_action	ofproto/ofproto-dpif-xlate.c	/^compose_mpls_pop_action(struct xlate_ctx *ctx, ovs_be16 eth_type)$/;"	f	file:
compose_mpls_push_action	ofproto/ofproto-dpif-xlate.c	/^compose_mpls_push_action(struct xlate_ctx *ctx, struct ofpact_push_mpls *mpls)$/;"	f	file:
compose_output_action	ofproto/ofproto-dpif-xlate.c	/^compose_output_action(struct xlate_ctx *ctx, ofp_port_t ofp_port,$/;"	f	file:
compose_output_action__	ofproto/ofproto-dpif-xlate.c	/^compose_output_action__(struct xlate_ctx *ctx, ofp_port_t ofp_port,$/;"	f	file:
compose_rarp	lib/packets.c	/^compose_rarp(struct dp_packet *b, const struct eth_addr eth_src)$/;"	f
compose_recirculate_action	ofproto/ofproto-dpif-xlate.c	/^compose_recirculate_action(struct xlate_ctx *ctx)$/;"	f	file:
compose_recirculate_action__	ofproto/ofproto-dpif-xlate.c	/^compose_recirculate_action__(struct xlate_ctx *ctx, uint8_t table)$/;"	f	file:
compose_report	lib/memory.c	/^compose_report(const struct simap *usage, struct ds *s)$/;"	f	file:
compose_sample_action	ofproto/ofproto-dpif-xlate.c	/^compose_sample_action(struct xlate_ctx *ctx,$/;"	f	file:
compose_set_mpls_label_action	ofproto/ofproto-dpif-xlate.c	/^compose_set_mpls_label_action(struct xlate_ctx *ctx, ovs_be32 label)$/;"	f	file:
compose_set_mpls_tc_action	ofproto/ofproto-dpif-xlate.c	/^compose_set_mpls_tc_action(struct xlate_ctx *ctx, uint8_t tc)$/;"	f	file:
compose_set_mpls_ttl_action	ofproto/ofproto-dpif-xlate.c	/^compose_set_mpls_ttl_action(struct xlate_ctx *ctx, uint8_t ttl)$/;"	f	file:
compose_sflow_action	ofproto/ofproto-dpif-xlate.c	/^compose_sflow_action(struct xlate_ctx *ctx)$/;"	f	file:
compose_slow_path	ofproto/ofproto-dpif-upcall.c	/^compose_slow_path(struct udpif *udpif, struct xlate_out *xout,$/;"	f	file:
compose_table_xlate	ofproto/ofproto-dpif-xlate.c	/^compose_table_xlate(struct xlate_ctx *ctx, const struct xport *out_dev,$/;"	f	file:
computeCountersSampleSize	lib/sflow_receiver.c	/^static int computeCountersSampleSize(SFLReceiver *receiver, SFL_COUNTERS_SAMPLE_TYPE *cs)$/;"	f	file:
computeFlowSampleSize	lib/sflow_receiver.c	/^static int computeFlowSampleSize(SFLReceiver *receiver, SFL_FLOW_SAMPLE_TYPE *fs)$/;"	f	file:
cond	lib/dpif-netdev.c	/^    pthread_cond_t cond;            \/* For synchronizing pmd thread reload. *\/$/;"	m	struct:dp_netdev_pmd_thread	file:
cond	vswitchd/system-stats.c	/^static pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
cond_mutex	lib/dpif-netdev.c	/^    struct ovs_mutex cond_mutex;    \/* Mutex for condition variable. *\/$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::ovs_mutex	file:
conf	utilities/ovs-dev.py	/^def conf():$/;"	f
conf_file	debian/ovs-monitor-ipsec	/^    conf_file = "\/etc\/racoon\/racoon.conf"$/;"	v	class:Racoon
config	include/openflow/openflow-1.0.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* and OFPPC10_* flags. *\/$/;"	m	struct:ofp10_phy_port
config	include/openflow/openflow-1.0.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp10_port_mod
config	include/openflow/openflow-1.1.h	/^    ovs_be32 config;         \/* Bitmap of OFPTC_* values *\/$/;"	m	struct:ofp11_table_stats
config	include/openflow/openflow-1.1.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp11_port
config	include/openflow/openflow-1.1.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp11_port_mod
config	include/openflow/openflow-1.1.h	/^    ovs_be32 config;        \/* Bitmap of OFPTC_* flags *\/$/;"	m	struct:ofp11_table_mod
config	include/openflow/openflow-1.2.h	/^    ovs_be32 config;         \/* Bitmap of OFPTC_* values *\/$/;"	m	struct:ofp12_table_stats
config	include/openflow/openflow-1.4.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp14_port
config	include/openflow/openflow-1.4.h	/^    ovs_be32 config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp14_port_mod
config	include/openflow/openflow-1.4.h	/^    ovs_be32 config;        \/* Bitmap of OFPTC_* flags *\/$/;"	m	struct:ofp14_table_mod
config	include/openflow/openflow-1.4.h	/^    ovs_be32 config;       \/* Bitmap of OFPTC_* values. *\/$/;"	m	struct:ofp14_table_desc
config	lib/ofp-util.h	/^    enum ofputil_port_config config;$/;"	m	struct:ofputil_phy_port	typeref:enum:ofputil_phy_port::ofputil_port_config
config	lib/ofp-util.h	/^    enum ofputil_port_config config;$/;"	m	struct:ofputil_port_mod	typeref:enum:ofputil_port_mod::ofputil_port_config
config	ofproto/ofproto-dpif-xlate.c	/^    enum ofputil_port_config config; \/* OpenFlow port configuration. *\/$/;"	m	struct:xport	typeref:enum:xport::ofputil_port_config	file:
config_enabled	datapath/linux/compat/include/linux/kconfig.h	30;"	d
config_pending	lib/stp.c	/^    bool config_pending;            \/* 8.5.5.9: Send BPDU when hold expires? *\/$/;"	m	struct:stp_port	file:
config_tmpfile	ovsdb/ovsdb-server.c	/^    FILE *config_tmpfile;$/;"	m	struct:server_config	file:
configure	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def configure(self):$/;"	m	class:Datapath
configure	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def configure(self):$/;"	m	class:DatapathBridge
configure	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def configure(self):$/;"	m	class:DatapathVswitch
configure_datapath	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def configure_datapath(pif):$/;"	f
configure_ipdev	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def configure_ipdev(self, cfg):$/;"	m	class:Datapath
configure_ipdev	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def configure_ipdev(self, cfg):$/;"	m	class:DatapathBridge
configure_ipdev	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def configure_ipdev(self, cfg):$/;"	m	class:DatapathVswitch
configure_l3	python/ovstest/tests.py	/^def configure_l3(conf, tunnel_mode):$/;"	f
configure_netdev	tests/testsuite	/^        configure_netdev () {$/;"	f
configure_ovs	.travis/build.sh	/^function configure_ovs()$/;"	f
configure_splinter_port	vswitchd/bridge.c	/^configure_splinter_port(struct port *port)$/;"	f	file:
conforms_to_type	python/ovs/db/data.py	/^    def conforms_to_type(self):$/;"	m	class:Datum
conj	lib/classifier.c	/^    struct cls_conjunction conj[];$/;"	m	struct:cls_conjunction_set	typeref:struct:cls_conjunction_set::cls_conjunction	file:
conj_id	lib/flow.h	/^    uint32_t conj_id;           \/* Conjunction ID. *\/$/;"	m	struct:flow
conj_set	lib/classifier-private.h	/^    OVSRCU_TYPE(struct cls_conjunction_set *) conj_set;$/;"	m	struct:cls_match
conjunctions	ovn/lib/expr.h	/^    struct cls_conjunction *conjunctions;$/;"	m	struct:expr_match	typeref:struct:expr_match::cls_conjunction
conjunctive_match	lib/classifier.c	/^struct conjunctive_match {$/;"	s	file:
conn	lib/timeval.c	/^    struct unixctl_conn *conn; \/* Connection waiting for warp response. *\/$/;"	m	struct:large_warp	typeref:struct:large_warp::unixctl_conn	file:
conn	utilities/ovs-ofctl.c	/^    struct unixctl_conn *conn;  \/* Connection waiting for barrier response. *\/$/;"	m	struct:barrier_aux	typeref:struct:barrier_aux::unixctl_conn	file:
conn_max	lib/sflow.h	/^    uint32_t conn_max;$/;"	m	struct:_SFLAPPResources_counters
conn_open	lib/sflow.h	/^    uint32_t conn_open;$/;"	m	struct:_SFLAPPResources_counters
conn_seq	ofproto/ofproto-dpif-upcall.c	/^    uint64_t conn_seq;                 \/* Corresponds to 'dump_seq' when$/;"	m	struct:udpif	file:
conn_type	lib/lldp/aa-structs.h	/^    uint16_t conn_type;$/;"	m	struct:lldp_aa_element_system_id
connect	lib/stream-provider.h	/^    int (*connect)(struct stream *stream);$/;"	m	struct:stream_class
connect	lib/vconn-provider.h	/^    int (*connect)(struct vconn *vconn);$/;"	m	struct:vconn_class
connect	python/ovs/stream.py	/^    def connect(self):$/;"	m	class:Stream
connect_failed	python/ovs/reconnect.py	/^    def connect_failed(self, now, error):$/;"	m	class:Reconnect
connect_to_target	tests/appctl.py	/^def connect_to_target(target):$/;"	f
connect_to_target	utilities/ovs-appctl.c	/^connect_to_target(const char *target)$/;"	f	file:
connect_wait	python/ovs/stream.py	/^    def connect_wait(self, poller):$/;"	m	class:Stream
connected	python/ovs/reconnect.py	/^    def connected(self, now):$/;"	m	class:Reconnect
connecting	python/ovs/reconnect.py	/^    def connecting(self, now):$/;"	m	class:Reconnect
connectionLost	python/ovstest/tcp.py	/^    def connectionLost(self, reason):$/;"	m	class:TcpListenerConnection
connectionMade	python/ovstest/tcp.py	/^    def connectionMade(self):$/;"	m	class:TcpSenderConnection
connection_mode	lib/vswitch-idl.h	/^	char *connection_mode;$/;"	m	struct:ovsrec_controller
connection_mode	lib/vswitch-idl.h	/^	char *connection_mode;$/;"	m	struct:ovsrec_manager
connectivity_seq	lib/connectivity.c	/^static struct seq *connectivity_seq;$/;"	v	typeref:struct:seq	file:
connectivity_seq_get	lib/connectivity.c	/^connectivity_seq_get(void)$/;"	f
connectivity_seqno	vswitchd/bridge.c	/^static uint64_t connectivity_seqno = LLONG_MIN;$/;"	v	file:
connmgr	ofproto/connmgr.c	/^    struct connmgr *connmgr;    \/* Connection's manager. *\/$/;"	m	struct:ofconn	typeref:struct:ofconn::connmgr	file:
connmgr	ofproto/connmgr.c	/^VLOG_DEFINE_THIS_MODULE(connmgr);$/;"	v
connmgr	ofproto/connmgr.c	/^struct connmgr {$/;"	s	file:
connmgr	ofproto/fail-open.c	/^    struct connmgr *connmgr;$/;"	m	struct:fail_open	typeref:struct:fail_open::connmgr	file:
connmgr	ofproto/ofproto-provider.h	/^    struct connmgr *connmgr;$/;"	m	struct:ofproto	typeref:struct:ofproto::connmgr
connmgr_count_hidden_rules	ofproto/connmgr.c	/^connmgr_count_hidden_rules(const struct connmgr *mgr)$/;"	f
connmgr_create	ofproto/connmgr.c	/^connmgr_create(struct ofproto *ofproto,$/;"	f
connmgr_destroy	ofproto/connmgr.c	/^connmgr_destroy(struct connmgr *mgr)$/;"	f
connmgr_failure_duration	ofproto/connmgr.c	/^connmgr_failure_duration(const struct connmgr *mgr)$/;"	f
connmgr_free_controller_info	ofproto/connmgr.c	/^connmgr_free_controller_info(struct shash *info)$/;"	f
connmgr_get_controller_info	ofproto/connmgr.c	/^connmgr_get_controller_info(struct connmgr *mgr, struct shash *info)$/;"	f
connmgr_get_fail_mode	ofproto/connmgr.c	/^connmgr_get_fail_mode(const struct connmgr *mgr)$/;"	f
connmgr_get_max_probe_interval	ofproto/connmgr.c	/^connmgr_get_max_probe_interval(const struct connmgr *mgr)$/;"	f
connmgr_get_memory_usage	ofproto/connmgr.c	/^connmgr_get_memory_usage(const struct connmgr *mgr, struct simap *usage)$/;"	f
connmgr_get_snoops	ofproto/connmgr.c	/^connmgr_get_snoops(const struct connmgr *mgr, struct sset *snoops)$/;"	f
connmgr_has_controllers	ofproto/connmgr.c	/^connmgr_has_controllers(const struct connmgr *mgr)$/;"	f
connmgr_has_in_band	ofproto/connmgr.c	/^connmgr_has_in_band(struct connmgr *mgr)$/;"	f
connmgr_has_snoops	ofproto/connmgr.c	/^connmgr_has_snoops(const struct connmgr *mgr)$/;"	f
connmgr_is_any_controller_admitted	ofproto/connmgr.c	/^connmgr_is_any_controller_admitted(const struct connmgr *mgr)$/;"	f
connmgr_is_any_controller_connected	ofproto/connmgr.c	/^connmgr_is_any_controller_connected(const struct connmgr *mgr)$/;"	f
connmgr_reconnect	ofproto/connmgr.c	/^connmgr_reconnect(const struct connmgr *mgr)$/;"	f
connmgr_send_flow_removed	ofproto/connmgr.c	/^connmgr_send_flow_removed(struct connmgr *mgr,$/;"	f
connmgr_send_packet_in	ofproto/connmgr.c	/^connmgr_send_packet_in(struct connmgr *mgr,$/;"	f
connmgr_send_port_status	ofproto/connmgr.c	/^connmgr_send_port_status(struct connmgr *mgr, struct ofconn *source,$/;"	f
connmgr_send_requestforward	ofproto/connmgr.c	/^connmgr_send_requestforward(struct connmgr *mgr, const struct ofconn *source,$/;"	f
connmgr_set_extra_in_band_remotes	ofproto/connmgr.c	/^connmgr_set_extra_in_band_remotes(struct connmgr *mgr,$/;"	f
connmgr_set_fail_mode	ofproto/connmgr.c	/^connmgr_set_fail_mode(struct connmgr *mgr, enum ofproto_fail_mode fail_mode)$/;"	f
connmgr_set_in_band_queue	ofproto/connmgr.c	/^connmgr_set_in_band_queue(struct connmgr *mgr, int queue_id)$/;"	f
connmgr_set_snoops	ofproto/connmgr.c	/^connmgr_set_snoops(struct connmgr *mgr, const struct sset *snoops)$/;"	f
connmgr_wait	ofproto/connmgr.c	/^connmgr_wait(struct connmgr *mgr)$/;"	f
conns	lib/memory.c	/^static struct unixctl_conn **conns;$/;"	v	typeref:struct:unixctl_conn	file:
conns	lib/unixctl.c	/^    struct ovs_list conns;$/;"	m	struct:unixctl_server	typeref:struct:unixctl_server::ovs_list	file:
conns	ofproto/ofproto-dpif-upcall.c	/^    struct unixctl_conn **conns;       \/* Connections waiting on dump_seq. *\/$/;"	m	struct:udpif	typeref:struct:udpif::unixctl_conn	file:
conns	tests/test-rstp.c	/^    struct lan_conn conns[16];$/;"	m	struct:lan	typeref:struct:lan::lan_conn	file:
conns	tests/test-stp.c	/^    struct lan_conn conns[16];$/;"	m	struct:lan	typeref:struct:lan::lan_conn	file:
conntracked	ofproto/ofproto-dpif-rid.h	/^    bool conntracked;             \/* Conntrack occurred prior to recirc. *\/$/;"	m	struct:recirc_state
conntracked	ofproto/ofproto-dpif-xlate.c	/^    bool conntracked;$/;"	m	struct:xlate_ctx	file:
console_width_set	utilities/ovs-dpctl-top	/^    def console_width_set(self, console_width):$/;"	m	class:Render
constant_hash	tests/test-cmap.c	/^constant_hash(int value OVS_UNUSED)$/;"	f	file:
constant_hash	tests/test-hindex.c	/^constant_hash(int value OVS_UNUSED)$/;"	f	file:
constant_hash	tests/test-hmap.c	/^constant_hash(int value OVS_UNUSED)$/;"	f	file:
constify	ovsdb/ovsdb-idlc	/^def constify(cType, const):$/;"	f
constrain_match	ovn/lib/expr.c	/^constrain_match(const struct expr *expr, const struct simap *ports,$/;"	f	file:
constraint_schema	tests/testsuite	/^constraint_schema () {$/;"	f
constraintsToEnglish	python/ovs/db/types.py	/^    def constraintsToEnglish(self, escapeLiteral=returnUnchanged,$/;"	m	class:BaseType
constraintsToEnglish	python/ovs/db/types.py	/^    def constraintsToEnglish(self, escapeLiteral=returnUnchanged,$/;"	m	class:Type
construct	lib/netdev-provider.h	/^    int (*construct)(struct netdev *);$/;"	m	struct:netdev_class
construct	ofproto/ofproto-dpif.c	/^construct(struct ofproto *ofproto_)$/;"	f	file:
construct	ofproto/ofproto-provider.h	/^    int (*construct)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
construct_filename	utilities/bugtool/ovs-bugtool	/^def construct_filename(k, v):$/;"	f
consume_skb	datapath/linux/compat/include/linux/skbuff.h	220;"	d
contain_all_digits	lib/ovs-numa.c	/^contain_all_digits(const char *str)$/;"	f	file:
context	datapath-windows/ovsext/TunnelFilter.c	/^    PVOID                   context;$/;"	m	struct:_OVS_TUNFLT_REQUEST	file:
control	datapath-windows/ovsext/Ethernet.h	/^    UINT16  control;$/;"	m	struct:Eth_LLC16
control	datapath-windows/ovsext/Ethernet.h	/^    UINT8   control;$/;"	m	struct:Eth_LLC8
controlFlowState	datapath-windows/ovsext/Switch.h	/^    OVS_SWITCH_CONTROLFLOW_STATE controlFlowState;$/;"	m	struct:_OVS_SWITCH_CONTEXT
control_handler	lib/daemon-windows.c	/^control_handler(DWORD request)$/;"	f
control_ip	ofproto/ofproto.h	/^    char *control_ip;$/;"	m	struct:ofproto_sflow_options
controller	lib/vswitch-idl.h	/^	struct ovsrec_controller **controller;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_controller
controller	utilities/ovs-testcontroller.c	/^VLOG_DEFINE_THIS_MODULE(controller);$/;"	v
controller_burst_limit	lib/vswitch-idl.h	/^	int64_t *controller_burst_limit;$/;"	m	struct:ovsrec_controller
controller_ctx	ovn/controller/ovn-controller.h	/^struct controller_ctx {$/;"	s
controller_id	include/openflow/nicira-ext.h	/^    ovs_be16 controller_id;     \/* New controller connection ID. *\/$/;"	m	struct:nx_controller_id
controller_id	lib/ofp-actions.c	/^    ovs_be16 controller_id;         \/* Controller ID to send packet-in. *\/$/;"	m	struct:nx_action_controller	file:
controller_id	lib/ofp-actions.h	/^    uint16_t controller_id;     \/* Controller ID to send packet-in. *\/$/;"	m	struct:ofpact_controller
controller_id	ofproto/connmgr.c	/^    uint16_t controller_id;     \/* Connection controller ID. *\/$/;"	m	struct:ofconn	file:
controller_id	ofproto/connmgr.h	/^    uint16_t controller_id;     \/* Controller ID to send to. *\/$/;"	m	struct:ofproto_packet_in
controller_rate_limit	lib/vswitch-idl.h	/^	int64_t *controller_rate_limit;$/;"	m	struct:ovsrec_controller
controller_vtep_ctx	ovn/controller-vtep/ovn-controller-vtep.h	/^struct controller_vtep_ctx {$/;"	s
controllers	ofproto/connmgr.c	/^    struct hmap controllers;     \/* All OFCONN_PRIMARY controllers. *\/$/;"	m	struct:connmgr	typeref:struct:connmgr::hmap	file:
convert_stats	lib/netdev-bsd.c	/^convert_stats(const struct netdev *netdev, struct netdev_stats *stats,$/;"	f	file:
convert_stats_system	lib/netdev-bsd.c	/^convert_stats_system(struct netdev_stats *stats, const struct if_data *ifd)$/;"	f	file:
convert_stats_tap	lib/netdev-bsd.c	/^convert_stats_tap(struct netdev_stats *stats, const struct if_data *ifd)$/;"	f	file:
cookie	datapath-windows/ovsext/Datapath.h	/^    UINT32 cookie;$/;"	m	struct:_OVS_OPEN_INSTANCE
cookie	datapath-windows/ovsext/DpInternal.h	/^    uint32_t cookie;$/;"	m	struct:_OVS_EVENT_POLL
cookie	datapath-windows/ovsext/DpInternal.h	/^    uint32_t cookie;$/;"	m	struct:_OVS_EVENT_SUBSCRIBE
cookie	include/openflow/nicira-ext.h	/^    ovs_be64 cookie;              \/* Opaque controller-issued identifier. *\/$/;"	m	struct:nx_flow_mod
cookie	include/openflow/nicira-ext.h	/^    ovs_be64 cookie;            \/* Opaque controller-issued identifier. *\/$/;"	m	struct:nx_flow_update_full
cookie	include/openflow/nicira-ext.h	/^    ovs_be64 cookie;          \/* Cookie of the rule that was looked up. *\/$/;"	m	struct:nx_packet_in
cookie	include/openflow/nicira-ext.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:nx_flow_removed
cookie	include/openflow/nicira-ext.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:nx_flow_stats
cookie	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 cookie;       \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp10_flow_stats
cookie	include/openflow/openflow-1.0.h	/^    ovs_be64 cookie;             \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp10_flow_mod
cookie	include/openflow/openflow-1.0.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp10_flow_removed
cookie	include/openflow/openflow-1.1.h	/^    ovs_be64 cookie;             \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp11_flow_mod
cookie	include/openflow/openflow-1.1.h	/^    ovs_be64 cookie;           \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp11_flow_stats
cookie	include/openflow/openflow-1.1.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp11_flow_removed
cookie	include/openflow/openflow-1.1.h	/^    ovs_be64 cookie;          \/* Require matching entries to contain this$/;"	m	struct:ofp11_flow_stats_request
cookie	include/openflow/openflow-1.2.h	/^    ovs_be64 cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp12_flow_removed
cookie	include/openflow/openflow-1.3.h	/^    ovs_be64 cookie;          \/* Cookie of the flow entry that was looked up *\/$/;"	m	struct:ofp13_packet_in
cookie	lib/ofp-actions.c	/^    ovs_be64 cookie;            \/* Cookie for new flow. *\/$/;"	m	struct:nx_action_learn	file:
cookie	lib/ofp-actions.h	/^    ovs_be64 cookie;            \/* Cookie for new flow. *\/$/;"	m	struct:ofpact_learn
cookie	lib/ofp-util.h	/^    ovs_be64 cookie;                     \/* Flow's cookie. *\/$/;"	m	struct:ofputil_packet_in
cookie	lib/ofp-util.h	/^    ovs_be64 cookie;         \/* Cookie bits to match. *\/$/;"	m	struct:ofputil_flow_mod
cookie	lib/ofp-util.h	/^    ovs_be64 cookie;$/;"	m	struct:ofputil_flow_removed
cookie	lib/ofp-util.h	/^    ovs_be64 cookie;$/;"	m	struct:ofputil_flow_stats
cookie	lib/ofp-util.h	/^    ovs_be64 cookie;$/;"	m	struct:ofputil_flow_stats_request
cookie	lib/ofp-util.h	/^    ovs_be64 cookie;$/;"	m	struct:ofputil_flow_update
cookie	ofproto/ofproto.c	/^    ovs_be64 cookie;$/;"	m	struct:rule_criteria	file:
cookie	ofproto/pktbuf.c	/^    uint32_t cookie;$/;"	m	struct:packet	file:
cookie	utilities/ovs-ofctl.c	/^    ovs_be64 cookie;$/;"	m	struct:fte_version	file:
cookie_mask	include/openflow/openflow-1.1.h	/^    ovs_be64 cookie_mask;        \/* Mask used to restrict the cookie bits$/;"	m	struct:ofp11_flow_mod
cookie_mask	include/openflow/openflow-1.1.h	/^    ovs_be64 cookie_mask;     \/* Mask used to restrict the cookie bits that$/;"	m	struct:ofp11_flow_stats_request
cookie_mask	lib/ofp-util.h	/^    ovs_be64 cookie_mask;    \/* 1-bit in each 'cookie' bit to match. *\/$/;"	m	struct:ofputil_flow_mod
cookie_mask	lib/ofp-util.h	/^    ovs_be64 cookie_mask;$/;"	m	struct:ofputil_flow_stats_request
cookie_mask	ofproto/ofproto.c	/^    ovs_be64 cookie_mask;$/;"	m	struct:rule_criteria	file:
copy	python/ovs/db/data.py	/^    def copy(self):$/;"	m	class:Datum
copy	python/ovs/db/schema.py	/^    def copy(self):$/;"	m	class:DbSchema
copy	python/ovs/db/types.py	/^    def copy(self):$/;"	m	class:BaseType
copy	python/ovs/db/types.py	/^    def copy(self):$/;"	m	class:Type
copy	python/ovs/unixctl/client.py	/^import copy$/;"	i
copy	python/ovs/unixctl/server.py	/^import copy$/;"	i
copy	utilities/ovs-dpctl-top	/^import copy$/;"	i
copyCValue	python/ovs/db/types.py	/^    def copyCValue(self, dst, src):$/;"	m	class:BaseType
copy_action	datapath/flow_netlink.c	/^static int copy_action(const struct nlattr *from,$/;"	f	file:
copy_action	datapath/linux/flow_netlink.c	/^static int copy_action(const struct nlattr *from,$/;"	f	file:
copy_buckets_for_insert_bucket	ofproto/ofproto.c	/^copy_buckets_for_insert_bucket(const struct ofgroup *ofgroup,$/;"	f	file:
copy_buckets_for_remove_bucket	ofproto/ofproto.c	/^copy_buckets_for_remove_bucket(const struct ofgroup *ofgroup,$/;"	f	file:
copy_entry_value	lib/nx-match.c	/^copy_entry_value(const struct mf_field *field, union mf_value *value,$/;"	f	file:
copy_headers	datapath/linux/compat/stt.c	/^static int copy_headers(struct sk_buff *head, struct sk_buff *frag,$/;"	f	file:
copy_headers	datapath/linux/stt.c	/^static int copy_headers(struct sk_buff *head, struct sk_buff *frag,$/;"	f	file:
copy_skb_metadata	datapath/linux/compat/stt.c	/^static void copy_skb_metadata(struct sk_buff *to, struct sk_buff *from)$/;"	f	file:
copy_skb_metadata	datapath/linux/stt.c	/^static void copy_skb_metadata(struct sk_buff *to, struct sk_buff *from)$/;"	f	file:
core_id	lib/dpif-netdev.c	/^    unsigned core_id;               \/* CPU core id of this pmd thread. *\/$/;"	m	struct:dp_netdev_pmd_thread	file:
core_id	lib/ovs-numa.c	/^    unsigned core_id;          \/* Core id. *\/$/;"	m	struct:cpu_core	file:
core_id	lib/ovs-numa.h	/^    unsigned core_id;$/;"	m	struct:ovs_numa_info
core_id_to_qid	lib/dpif-netdev.c	/^core_id_to_qid(unsigned core_id)$/;"	f	file:
cores	lib/ovs-numa.c	/^    struct ovs_list cores;          \/* List of cpu cores on the numa node. *\/$/;"	m	struct:numa_node	typeref:struct:numa_node::ovs_list	file:
count	datapath/flow_table.h	/^	int count, max;$/;"	m	struct:mask_array
count	datapath/flow_table.h	/^	unsigned int count;$/;"	m	struct:flow_table
count	lib/coverage.h	/^    unsigned int (*const count)(void); \/* Gets, zeros this thread's count. *\/$/;"	m	struct:coverage_counter
count	lib/netdev-dpdk.c	/^    int count;$/;"	m	struct:dpdk_tx_queue	file:
count	lib/netflow.h	/^    ovs_be16 count;                \/* Number of records in this message. *\/$/;"	m	struct:netflow_v5_header
count	lib/ovs-atomic.h	/^    atomic_uint count;$/;"	m	struct:atomic_count
count	lib/ovs-atomic.h	/^    atomic_uint count;$/;"	m	struct:ovs_refcount
count	lib/ovs-thread.h	/^    atomic_count count;       \/* Number of threads already hit the barrier. *\/$/;"	m	struct:ovs_barrier
count	tests/test-ovsdb.c	/^    int count;$/;"	m	struct:do_query_distinct_class	file:
count	utilities/ovs-parse-backtrace	/^            count = 0$/;"	v
count	utilities/ovs-parse-backtrace	/^            count = int(match.group(1))$/;"	v
count_1bits	lib/util.h	/^count_1bits(uint64_t x)$/;"	f
count_1bits_32__	lib/util.h	/^count_1bits_32__(uint32_t x)$/;"	f
count_1bits_8	lib/util.c	/^const uint8_t count_1bits_8[256] = {$/;"	v
count_cpu_cores	lib/ovs-thread.c	/^count_cpu_cores(void)$/;"	f
count_crashes	vswitchd/system-stats.c	/^count_crashes(pid_t pid)$/;"	f	file:
count_fields	lib/stream.c	/^count_fields(const char *s_)$/;"	f	file:
count_hi	lib/sha1.h	/^    uint32_t count_lo, count_hi; \/* 64-bit bit counts. *\/$/;"	m	struct:sha1_ctx
count_lo	lib/sha1.h	/^    uint32_t count_lo, count_hi; \/* 64-bit bit counts. *\/$/;"	m	struct:sha1_ctx
count_ones	tests/test-classifier.c	/^count_ones(unsigned long int x)$/;"	f	file:
count_output_actions	ofproto/ofproto-dpif-xlate.c	/^count_output_actions(const struct ofpbuf *odp_actions)$/;"	f	file:
count_rx_pdus	lib/lacp.c	/^    uint32_t count_rx_pdus;       \/* dot3adAggPortStatsLACPDUsRx *\/$/;"	m	struct:slave	file:
count_rx_pdus_bad	lib/lacp.c	/^    uint32_t count_rx_pdus_bad;   \/* dot3adAggPortStatsIllegalRx *\/$/;"	m	struct:slave	file:
count_skb_priorities	ofproto/ofproto-dpif-xlate.c	/^count_skb_priorities(const struct xport *xport)$/;"	f	file:
count_tx_pdus	lib/lacp.c	/^    uint32_t count_tx_pdus;       \/* dot3adAggPortStatsLACPDUsTx *\/$/;"	m	struct:slave	file:
counter	lib/cmap.c	/^    atomic_uint32_t counter;$/;"	m	struct:cmap_bucket	file:
counter	lib/uuid.c	/^static uint64_t counter[2];$/;"	v	file:
counterBlock	lib/sflow.h	/^    SFLCounters_type counterBlock;$/;"	m	struct:_SFLCounters_sample_element
counter_changed	lib/cmap.c	/^counter_changed(const struct cmap_bucket *b_, uint32_t c)$/;"	f	file:
countersCountdown	lib/sflow_api.h	/^    time_t countersCountdown;$/;"	m	struct:_SFLPoller
countersSampleSeqNo	lib/sflow_api.h	/^    u_int32_t countersSampleSeqNo;$/;"	m	struct:_SFLPoller
counts	tests/test-ovsdb.c	/^    int *counts;$/;"	m	struct:do_query_cbdata	file:
coverage	lib/coverage.c	/^VLOG_DEFINE_THIS_MODULE(coverage);$/;"	v
coverage_array_sum	lib/coverage.c	/^coverage_array_sum(const unsigned int *arr, const unsigned int len)$/;"	f	file:
coverage_clear	lib/coverage.c	/^coverage_clear(void)$/;"	f
coverage_clear__	lib/coverage.c	/^coverage_clear__(bool trylock)$/;"	f	file:
coverage_counter	lib/coverage.h	/^struct coverage_counter {$/;"	s
coverage_counter_register	lib/coverage.c	/^coverage_counter_register(struct coverage_counter* counter)$/;"	f
coverage_counters	lib/coverage.c	/^static struct coverage_counter **coverage_counters = NULL;$/;"	v	typeref:struct:coverage_counter	file:
coverage_hash	lib/coverage.c	/^coverage_hash(void)$/;"	f	file:
coverage_hit	lib/coverage.c	/^coverage_hit(uint32_t hash)$/;"	f	file:
coverage_init	lib/coverage.c	/^coverage_init(void)$/;"	f
coverage_log	lib/coverage.c	/^coverage_log(void)$/;"	f
coverage_mutex	lib/coverage.c	/^static struct ovs_mutex coverage_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
coverage_read	lib/coverage.c	/^coverage_read(struct svec *lines)$/;"	f	file:
coverage_run	lib/coverage.c	/^coverage_run(void)$/;"	f
coverage_run_time	lib/coverage.c	/^static long long int coverage_run_time = LLONG_MIN;$/;"	v	file:
coverage_try_clear	lib/coverage.c	/^coverage_try_clear(void)$/;"	f
coverage_unixctl_show	lib/coverage.c	/^coverage_unixctl_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
cpath_down	lib/bfd.c	/^    bool cpath_down;              \/* Concatenated Path Down. *\/$/;"	m	struct:bfd	file:
cpu	lib/timeval.c	/^    unsigned long long int cpu; \/* Total user+system CPU usage when sampled. *\/$/;"	m	struct:cpu_usage	file:
cpu_barrier	lib/ovs-atomic-i586.h	82;"	d
cpu_barrier	lib/ovs-atomic-x86_64.h	86;"	d
cpu_core	lib/ovs-numa.c	/^struct cpu_core {$/;"	s	file:
cpu_tracker	lib/timeval.c	/^struct cpu_tracker {$/;"	s	file:
cpu_usage	lib/timeval.c	/^    int cpu_usage;$/;"	m	struct:cpu_tracker	file:
cpu_usage	lib/timeval.c	/^struct cpu_usage {$/;"	s	file:
cputime	vswitchd/system-stats.c	/^    long long int cputime;      \/* ms of CPU used during 'uptime'. *\/$/;"	m	struct:process_info	file:
cputime	vswitchd/system-stats.c	/^    long long int cputime;      \/* ms of CPU used during 'uptime'. *\/$/;"	m	struct:raw_process_info	file:
cr	lib/dpif-netdev.c	/^    struct dpcls_rule cr;        \/* In owning dp_netdev's 'cls'. *\/$/;"	m	struct:dp_netdev_flow	typeref:struct:dp_netdev_flow::dpcls_rule	file:
cr	lib/ovs-router.c	/^    struct cls_rule cr;$/;"	m	struct:ovs_router_entry	typeref:struct:ovs_router_entry::cls_rule	file:
cr	lib/tnl-ports.c	/^    struct cls_rule cr;$/;"	m	struct:tnl_port_in	typeref:struct:tnl_port_in::cls_rule	file:
cr	ofproto/ofproto-provider.h	/^    const struct cls_rule cr;      \/* In owning ofproto's classifier. *\/$/;"	m	struct:rule	typeref:struct:rule::cls_rule
cr	ofproto/ofproto.c	/^    struct cls_rule cr;$/;"	m	struct:rule_criteria	typeref:struct:rule_criteria::cls_rule	file:
cr	tests/test-ovn.c	/^    struct cls_rule cr;$/;"	m	struct:test_rule	typeref:struct:test_rule::cls_rule	file:
crashes	vswitchd/system-stats.c	/^    int crashes;                \/* # of crashes (usually 0). *\/$/;"	m	struct:process_info	file:
crc32Table	lib/crc32c.c	/^static const uint32_t crc32Table[256] = {$/;"	v	file:
crc32c	lib/crc32c.c	/^crc32c(const uint8_t *data, size_t size)$/;"	f
create	datapath/vport.h	/^	struct vport *(*create)(const struct vport_parms *);$/;"	m	struct:vport_ops	typeref:struct:vport_ops::create
create	python/ovs/unixctl/client.py	/^    def create(path):$/;"	m	class:UnixctlClient
create	python/ovs/unixctl/server.py	/^    def create(path):$/;"	m	class:UnixctlClient
create	python/ovs/unixctl/server.py	/^    def create(path, version=None):$/;"	m	class:UnixctlServer
create_bond_device	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def create_bond_device(pif):$/;"	f
create_br_int	ovn/controller/ovn-controller.c	/^create_br_int(struct controller_ctx *ctx,$/;"	f	file:
create_chassis_rec	ovn/controller-vtep/gateway.c	/^create_chassis_rec(struct ovsdb_idl_txn *txn, const char *name,$/;"	f	file:
create_dpif_netdev	lib/dpif-netdev.c	/^create_dpif_netdev(struct dp_netdev *dp)$/;"	f	file:
create_error	python/ovs/jsonrpc.py	/^    def create_error(error, id):$/;"	m	class:Message
create_netns_link	utilities/ovs-docker	/^create_netns_link () {$/;"	f
create_notify	python/ovs/jsonrpc.py	/^    def create_notify(method, params):$/;"	m	class:Message
create_patch_port	ovn/controller/patch.c	/^create_patch_port(struct controller_ctx *ctx,$/;"	f	file:
create_patch_ports	ovn/controller/patch.c	/^create_patch_ports(struct controller_ctx *ctx,$/;"	f	file:
create_pl	ovn/controller-vtep/vtep.c	/^create_pl(struct ovsdb_idl_txn *vtep_idl_txn, const char *chassis_ip)$/;"	f	file:
create_reply	python/ovs/jsonrpc.py	/^    def create_reply(result, id):$/;"	m	class:Message
create_request	python/ovs/jsonrpc.py	/^    def create_request(method, params):$/;"	m	class:Message
create_symbol	lib/db-ctl-base.c	/^create_symbol(struct ovsdb_symbol_table *symtab, const char *id, bool *newp)$/;"	f	file:
create_symtab	tests/test-ovn.c	/^create_symtab(struct shash *symtab)$/;"	f	file:
create_umr	ovn/controller-vtep/vtep.c	/^create_umr(struct ovsdb_idl_txn *vtep_idl_txn, const char *mac,$/;"	f	file:
create_vtep_tunnel	vtep/ovs-vtep	/^def create_vtep_tunnel(remote_ip):$/;"	f
created	lib/netdev-linux.c	/^    long long int created;      \/* Time queue was created, in msecs. *\/$/;"	m	struct:tc_queue	file:
created	lib/netdev.h	/^    long long int created;$/;"	m	struct:netdev_queue_stats
created	lib/ovsdb-data.h	/^    bool created;               \/* Already used to create row? *\/$/;"	m	struct:ovsdb_symbol
created	ofproto/netflow.c	/^    long long int created;        \/* Time flow was created since time out. *\/$/;"	m	struct:netflow_flow	file:
created	ofproto/ofproto-provider.h	/^    const long long int created;      \/* Creation time. *\/$/;"	m	struct:ofgroup
created	ofproto/ofproto-provider.h	/^    long long int created;      \/* Time created, in msec. *\/$/;"	m	struct:ofport
created	ofproto/ofproto.c	/^    long long int created;      \/* Time created. *\/$/;"	m	struct:meter	file:
created	ovsdb/trigger.h	/^    long long int created;      \/* Time created. *\/$/;"	m	struct:ovsdb_trigger
creation_time	lib/rconn.c	/^    time_t creation_time;$/;"	m	struct:rconn	file:
creation_time	lib/reconnect.c	/^    long long int creation_time;$/;"	m	struct:reconnect	file:
creation_time	lib/reconnect.h	/^    long long int creation_time;     \/* Time reconnect_create() called. *\/$/;"	m	struct:reconnect_stats
cring_rx	lib/netdev-dpdk.c	/^    struct rte_ring *cring_rx;$/;"	m	struct:dpdk_ring	typeref:struct:dpdk_ring::rte_ring	file:
cring_tx	lib/netdev-dpdk.c	/^    struct rte_ring *cring_tx;$/;"	m	struct:dpdk_ring	typeref:struct:dpdk_ring::rte_ring	file:
criteria	utilities/ovs-ofctl.c	/^static struct sort_criterion *criteria;$/;"	v	typeref:struct:sort_criterion	file:
critical	datapath/linux/compat/include/net/geneve.h	/^	u8 critical:1;$/;"	m	struct:genevehdr
critical	lib/geneve.h	/^    uint8_t critical:1;$/;"	m	struct:genevehdr
crush_and_numeric	ovn/lib/expr.c	/^crush_and_numeric(struct expr *expr, const struct expr_symbol *symbol)$/;"	f	file:
crush_and_string	ovn/lib/expr.c	/^crush_and_string(struct expr *expr, const struct expr_symbol *symbol)$/;"	f	file:
crush_cmps	ovn/lib/expr.c	/^crush_cmps(struct expr *expr, const struct expr_symbol *symbol)$/;"	f	file:
crush_or	ovn/lib/expr.c	/^crush_or(struct expr *expr, const struct expr_symbol *symbol)$/;"	f	file:
cs	ovsdb/ovsdb-idlc	/^            cs = "%s_col_%s" % (structName, columnName)$/;"	v
csSeqNo	tests/test-sflow.c	/^    uint32_t csSeqNo;$/;"	m	struct:sflow_xdr	file:
csum	datapath-windows/ovsext/NetProto.h	/^   UINT16   csum;$/;"	m	struct:IGMPHdr
csum	lib/csum.c	/^csum(const void *data, size_t n)$/;"	f
csum	lib/netdev.h	/^    bool csum;$/;"	m	struct:netdev_tunnel_config
csum	lib/packets.h	/^    ovs_be16 csum;$/;"	m	struct:igmpv3_header
csum	lib/packets.h	/^    ovs_be16 csum;$/;"	m	struct:mld_header
csum	tests/test-csum.c	/^    uint16_t csum;$/;"	m	struct:test_case	file:
csum_add16	lib/csum.c	/^csum_add16(uint32_t partial, ovs_be16 new)$/;"	f
csum_add32	lib/csum.c	/^csum_add32(uint32_t partial, ovs_be32 new)$/;"	f
csum_and_copy_to_user	datapath/linux/compat/include/net/checksum.h	17;"	d
csum_continue	lib/csum.c	/^csum_continue(uint32_t partial, const void *data_, size_t n)$/;"	f
csum_finish	lib/csum.c	/^csum_finish(uint32_t partial)$/;"	f
csum_replace2	datapath/linux/compat/include/net/checksum.h	/^static inline void csum_replace2(__sum16 *sum, __be16 from, __be16 to)$/;"	f
csum_replace4	datapath/linux/compat/include/net/checksum.h	/^static inline void csum_replace4(__sum16 *sum, __be32 from, __be32 to)$/;"	f
csum_unfold	datapath/linux/compat/include/net/checksum.h	/^static inline __wsum csum_unfold(__sum16 n)$/;"	f
ct_label	lib/flow.h	/^    ovs_u128 ct_label;          \/* Connection label. *\/$/;"	m	struct:flow
ct_label	lib/odp-util.h	/^    bool ct_label;$/;"	m	struct:odp_support
ct_label	lib/packets.h	/^    ovs_u128 ct_label;          \/* Connection label. *\/$/;"	m	struct:pkt_metadata
ct_labels	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8	ct_labels[OVS_CT_LABELS_LEN];$/;"	m	struct:ovs_key_ct_labels
ct_labels	include/odp-netlink.h	/^	uint8_t	ct_labels[OVS_CT_LABELS_LEN];$/;"	m	struct:ovs_key_ct_labels
ct_mark	lib/flow.h	/^    uint32_t ct_mark;           \/* Connection mark.*\/$/;"	m	struct:flow
ct_mark	lib/odp-util.h	/^    bool ct_mark;$/;"	m	struct:odp_support
ct_mark	lib/packets.h	/^    uint32_t ct_mark;           \/* Connection mark. *\/$/;"	m	struct:pkt_metadata
ct_state	lib/flow.h	/^    uint16_t ct_state;          \/* Connection tracking state. *\/$/;"	m	struct:flow
ct_state	lib/odp-util.h	/^    bool ct_state;$/;"	m	struct:odp_support
ct_state	lib/packets.h	/^    uint16_t ct_state;          \/* Connection state. *\/$/;"	m	struct:pkt_metadata
ct_state_to_string	lib/flow.c	/^const char *ct_state_to_string(uint32_t state)$/;"	f
ct_zone	lib/flow.h	/^    uint16_t ct_zone;           \/* Connection tracking zone. *\/$/;"	m	struct:flow
ct_zone	lib/odp-util.h	/^    bool ct_zone;$/;"	m	struct:odp_support
ct_zone	lib/packets.h	/^    uint16_t ct_zone;           \/* Connection zone. *\/$/;"	m	struct:pkt_metadata
ct_zone_list	ovn/controller/ovn-controller.c	/^ct_zone_list(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ct_zone_list	ovn/controller/ovn-controller.c	/^static unixctl_cb_func ct_zone_list;$/;"	v	file:
ct_zones	ovn/lib/actions.c	/^    const struct simap *ct_zones; \/* Map from port name to conntrack zone. *\/$/;"	m	struct:action_context	typeref:struct:action_context::simap	file:
ctl1	datapath-windows/ovsext/resource.h	1381;"	d
ctlFirst	datapath-windows/ovsext/resource.h	1226;"	d
ctlLast	datapath-windows/ovsext/resource.h	1382;"	d
ctl_add_cmd_options	lib/db-ctl-base.c	/^ctl_add_cmd_options(struct option **options_p, size_t *n_options_p,$/;"	f
ctl_command	lib/db-ctl-base.h	/^struct ctl_command {$/;"	s
ctl_command_syntax	lib/db-ctl-base.h	/^struct ctl_command_syntax {$/;"	s
ctl_context	lib/db-ctl-base.h	/^struct ctl_context {$/;"	s
ctl_context_done	lib/db-ctl-base.c	/^ctl_context_done(struct ctl_context *ctx,$/;"	f
ctl_context_done_command	lib/db-ctl-base.c	/^ctl_context_done_command(struct ctl_context *ctx,$/;"	f
ctl_context_init	lib/db-ctl-base.c	/^ctl_context_init(struct ctl_context *ctx, struct ctl_command *command,$/;"	f
ctl_context_init_command	lib/db-ctl-base.c	/^ctl_context_init_command(struct ctl_context *ctx,$/;"	f
ctl_default_db	lib/db-ctl-base.c	/^ctl_default_db(void)$/;"	f
ctl_exit	lib/db-ctl-base.c	/^ctl_exit(int status)$/;"	f	file:
ctl_exit_func	lib/db-ctl-base.c	/^static void (*ctl_exit_func)(int status) = NULL;$/;"	v	file:
ctl_fatal	lib/db-ctl-base.c	/^ctl_fatal(const char *format, ...)$/;"	f
ctl_get_db_cmd_usage	lib/db-ctl-base.c	/^ctl_get_db_cmd_usage(void)$/;"	f
ctl_init	lib/db-ctl-base.c	/^ctl_init(const struct ctl_table_class tables_[],$/;"	f
ctl_might_write_to_db	lib/db-ctl-base.c	/^ctl_might_write_to_db(char **argv)$/;"	f
ctl_parse_commands	lib/db-ctl-base.c	/^ctl_parse_commands(int argc, char *argv[], struct shash *local_options,$/;"	f
ctl_print_commands	lib/db-ctl-base.c	/^ctl_print_commands(void)$/;"	f
ctl_print_options	lib/db-ctl-base.c	/^ctl_print_options(const struct option *options)$/;"	f
ctl_register_command	lib/db-ctl-base.c	/^ctl_register_command(const struct ctl_command_syntax *command)$/;"	f	file:
ctl_register_commands	lib/db-ctl-base.c	/^ctl_register_commands(const struct ctl_command_syntax *commands)$/;"	f
ctl_row_id	lib/db-ctl-base.h	/^struct ctl_row_id {$/;"	s
ctl_set_column	lib/db-ctl-base.c	/^void ctl_set_column(const char *table_name,$/;"	f
ctl_table_class	lib/db-ctl-base.h	/^struct ctl_table_class {$/;"	s
ctx	lib/stream-ssl.c	/^static SSL_CTX *ctx;$/;"	v	file:
ctx_first_recirculation_action	ofproto/ofproto-dpif-xlate.c	/^ctx_first_recirculation_action(const struct xlate_ctx *ctx)$/;"	f	file:
ctx_trigger_recirculation	ofproto/ofproto-dpif-xlate.c	/^ctx_trigger_recirculation(struct xlate_ctx *ctx)$/;"	f	file:
ctypes	python/ovs/timeval.py	/^    import ctypes$/;"	i
ctz32	lib/util.h	/^ctz32(uint32_t n)$/;"	f
ctz64	lib/util.h	/^ctz64(uint64_t n)$/;"	f
curNbl	datapath-windows/ovsext/Actions.c	/^    PNET_BUFFER_LIST curNbl;$/;"	m	struct:OvsForwardingContext	file:
cur_cfg	lib/vswitch-idl.h	/^	int64_t cur_cfg;$/;"	m	struct:ovsrec_open_vswitch
cur_ltable	ovn/lib/actions.c	/^    uint8_t cur_ltable;         \/* 0 <= cur_ltable < n_tables. *\/$/;"	m	struct:action_context	file:
cur_pmd	lib/dpif-netdev.c	/^    struct dp_netdev_pmd_thread *cur_pmd;$/;"	m	struct:dpif_netdev_flow_dump	typeref:struct:dpif_netdev_flow_dump::dp_netdev_pmd_thread	file:
cur_queue	lib/netdev-linux.c	/^    size_t cur_queue;$/;"	m	struct:netdev_linux_queue_state	file:
curr	include/openflow/openflow-1.0.h	/^    ovs_be32 curr;          \/* Current features. *\/$/;"	m	struct:ofp10_phy_port
curr	include/openflow/openflow-1.1.h	/^    ovs_be32 curr;          \/* Current features. *\/$/;"	m	struct:ofp11_port
curr	include/openflow/openflow-1.4.h	/^    ovs_be32 curr;          \/* Current features. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
curr	lib/ofp-util.h	/^    enum netdev_features curr;       \/* Current features. *\/$/;"	m	struct:ofputil_phy_port	typeref:enum:ofputil_phy_port::netdev_features
currMacAddress	datapath-windows/ovsext/Vport.h	/^    UINT8                  currMacAddress[ETH_ADDR_LEN];$/;"	m	struct:_OVS_VPORT_ENTRY
curr_speed	include/openflow/openflow-1.1.h	/^    ovs_be32 curr_speed;    \/* Current port bitrate in kbps. *\/$/;"	m	struct:ofp11_port
curr_speed	include/openflow/openflow-1.4.h	/^    ovs_be32 curr_speed;    \/* Current port bitrate in kbps. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
curr_speed	lib/ofp-util.h	/^    uint32_t curr_speed;        \/* Current speed, in kbps. *\/$/;"	m	struct:ofputil_phy_port
current	lib/netdev-linux.c	/^    enum netdev_features current;    \/* Cached from ETHTOOL_GSET. *\/$/;"	m	struct:netdev_linux	typeref:enum:netdev_linux::netdev_features	file:
current_column	lib/table.h	/^    size_t current_column;$/;"	m	struct:table
curses	utilities/ovs-dpctl-top	/^import curses$/;"	i
curses_screen_begin	utilities/ovs-dpctl-top	/^def curses_screen_begin():$/;"	f
curses_screen_end	utilities/ovs-dpctl-top	/^def curses_screen_end(stdscr):$/;"	f
cuse_dev_name	lib/netdev-dpdk.c	/^static char *cuse_dev_name = NULL;    \/* Character device cuse_dev_name. *\/$/;"	v	file:
cwr	datapath-windows/ovsext/NetProto.h	/^             cwr:1;$/;"	m	struct:TCPHdr
cycles	lib/dpif-netdev.c	/^    struct dp_netdev_pmd_cycles cycles;$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::dp_netdev_pmd_cycles	file:
cycles_counter	lib/dpif-netdev.c	/^cycles_counter(void)$/;"	f	file:
cycles_zero	lib/dpif-netdev.c	/^    uint64_t cycles_zero[PMD_N_CYCLES];$/;"	m	struct:dp_netdev_pmd_thread	file:
d	build-aux/extract-ofp-actions	/^                    d = domain[vendor][type_][version]$/;"	v
d	lib/hindex.h	/^    struct hindex_node *d;$/;"	m	struct:hindex_node	typeref:struct:hindex_node::hindex_node
d	lib/odp-util.c	/^    struct geneve_opt d[63];$/;"	m	struct:geneve_scan	typeref:struct:geneve_scan::geneve_opt	file:
d	ovsdb/ovsdb-idlc	/^            d = {'cs': cs, 'c': columnName, 's': structName}$/;"	v
dAddr	datapath-windows/ovsext/Stt.h	/^    UINT32 dAddr;$/;"	m	struct:_OVS_STT_PKT_KEY
d_ip	ofproto/ofproto-dpif-xlate.c	/^            ovs_be32 d_ip;$/;"	m	struct:xc_entry::__anon188::__anon197	file:
daddr	datapath-windows/ovsext/NetProto.h	/^    struct in6_addr daddr;$/;"	m	struct:IPv6Hdr	typeref:struct:IPv6Hdr::in6_addr
daddr	datapath-windows/ovsext/NetProto.h	/^   UINT32   daddr;$/;"	m	struct:IPHdr
daddr	datapath/linux/compat/stt.c	/^	__be32 daddr;$/;"	m	struct:pkt_key	file:
daddr	datapath/linux/stt.c	/^	__be32 daddr;$/;"	m	struct:pkt_key	file:
daemon	debian/ovs-monitor-ipsec	/^import ovs.daemon$/;"	i
daemon	lib/daemon.c	/^VLOG_DEFINE_THIS_MODULE(daemon);$/;"	v
daemon	tests/appctl.py	/^import ovs.daemon$/;"	i
daemon	tests/test-daemon.py	/^import ovs.daemon$/;"	i
daemon	tests/test-jsonrpc.py	/^import ovs.daemon$/;"	i
daemon	tests/test-unixctl.py	/^import ovs.daemon$/;"	i
daemon	vtep/ovs-vtep	/^import ovs.daemon$/;"	i
daemon	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.daemon$/;"	i
daemon_become_new_user	lib/daemon-unix.c	/^daemon_become_new_user(bool access_datapath)$/;"	f
daemon_become_new_user	lib/daemon-windows.c	/^daemon_become_new_user(bool access_datapath OVS_UNUSED)$/;"	f
daemon_become_new_user__	lib/daemon-unix.c	/^daemon_become_new_user__(bool access_datapath)$/;"	f	file:
daemon_become_new_user_linux	lib/daemon-unix.c	/^daemon_become_new_user_linux(bool access_datapath OVS_UNUSED)$/;"	f	file:
daemon_become_new_user_unix	lib/daemon-unix.c	/^daemon_become_new_user_unix(void)$/;"	f	file:
daemon_save_fd	lib/daemon.c	/^daemon_save_fd(int fd)$/;"	f
daemon_set_monitor	lib/daemon-unix.c	/^daemon_set_monitor(void)$/;"	f
daemon_set_new_user	lib/daemon-unix.c	/^daemon_set_new_user(const char *user_spec)$/;"	f
daemon_set_new_user	lib/daemon-windows.c	/^daemon_set_new_user(const char *user_spec OVS_UNUSED)$/;"	f
daemon_switch_group	lib/daemon-unix.c	/^daemon_switch_group(gid_t real, gid_t effective,$/;"	f	file:
daemon_switch_user	lib/daemon-unix.c	/^daemon_switch_user(const uid_t real, const uid_t effective, const uid_t saved,$/;"	f	file:
daemon_unix	lib/daemon-unix.c	/^VLOG_DEFINE_THIS_MODULE(daemon_unix);$/;"	v
daemon_usage	lib/daemon-unix.c	/^daemon_usage(void)$/;"	f
daemon_usage	lib/daemon-windows.c	/^daemon_usage(void)$/;"	f
daemon_windows	lib/daemon-windows.c	/^VLOG_DEFINE_THIS_MODULE(daemon_windows);$/;"	v
daemonize	lib/daemon.c	/^daemonize(void)$/;"	f
daemonize	python/ovs/daemon.py	/^def daemonize():$/;"	f
daemonize_complete	lib/daemon-unix.c	/^daemonize_complete(void)$/;"	f
daemonize_complete	lib/daemon-windows.c	/^daemonize_complete(void)$/;"	f
daemonize_complete	python/ovs/daemon.py	/^def daemonize_complete():$/;"	f
daemonize_fd	lib/daemon-unix.c	/^static int daemonize_fd = -1;$/;"	v	file:
daemonize_post_detach	lib/daemon-unix.c	/^daemonize_post_detach(void)$/;"	f	file:
daemonize_start	lib/daemon-unix.c	/^daemonize_start(bool access_datapath)$/;"	f
daemonize_start	lib/daemon-windows.c	/^daemonize_start(bool access_datapath OVS_UNUSED)$/;"	f
daemonize_start	python/ovs/daemon.py	/^def daemonize_start():$/;"	f
daemonize_txn	vswitchd/bridge.c	/^static struct ovsdb_idl_txn *daemonize_txn;$/;"	v	typeref:struct:ovsdb_idl_txn	file:
daemons	utilities/ovs-ctl	/^daemons () {$/;"	f
daemons	utilities/ovs-ctl.in	/^daemons () {$/;"	f
data	datapath-windows/ovsext/DpInternal.h	/^    uint8_t  data[0];$/;"	m	struct:_OVS_PACKET_INFO
data	datapath/linux/compat/include/net/vxlan.h	/^	void		 *data;$/;"	m	struct:vxlan_sock
data	include/openflow/openflow-1.0.h	/^    uint8_t data[0];        \/* Ethernet frame, halfway through 32-bit word,$/;"	m	struct:ofp10_packet_in
data	include/openflow/openflow-common.h	/^    uint8_t data[0];          \/* Variable-length data.  Interpreted based$/;"	m	struct:ofp_error_msg
data	include/windows/sys/epoll.h	/^    data_t data;$/;"	m	struct:epoll_event
data	include/windows/sys/epoll.h	/^typedef union data {$/;"	u
data	lib/flow.c	/^    uint64_t *data;$/;"	m	struct:mf_ctx	file:
data	lib/hmapx.h	/^    void *data;$/;"	m	struct:hmapx_node
data	lib/netdev-bsd.c	/^    void *data;$/;"	m	struct:pcap_arg	file:
data	lib/ofp-actions.h	/^    uint8_t data[];$/;"	m	struct:ofpact_note
data	lib/ofpbuf.h	/^    void *data;                 \/* First byte actually in use. *\/$/;"	m	struct:ofpbuf
data	lib/sflow_api.h	/^    u_int32_t data[(SFL_MAX_DATAGRAM_SIZE + SFL_DATA_PAD) \/ sizeof(u_int32_t)];$/;"	m	struct:_SFLSampleCollector
data	lib/sha1.h	/^    uint32_t data[16];           \/* SHA data buffer *\/$/;"	m	struct:sha1_ctx
data	lib/shash.h	/^    void *data;$/;"	m	struct:shash_node
data	lib/simap.h	/^    unsigned int data;$/;"	m	struct:simap_node
data	ovsdb/ovsdb-client.c	/^    struct ovsdb_datum **data;$/;"	m	struct:dump_table_aux	typeref:struct:dump_table_aux::ovsdb_datum	file:
data	python/ovs/db/types.py	/^import ovs.db.data$/;"	i
data	tests/test-atomic.c	/^    ATOMIC(uint32_t *) data;$/;"	m	struct:atomic_aux	file:
data	tests/test-csum.c	/^    char *data;$/;"	m	struct:test_case	file:
data	tests/test-ovsdb.py	/^from ovs.db import data$/;"	i
data	tests/test-rstp.c	/^    void *data;$/;"	m	struct:bpdu	file:
data	tests/test-sha1.c	/^    char *data;$/;"	m	struct:test_vector	file:
data	tests/test-stp.c	/^    void *data;$/;"	m	struct:bpdu	file:
data	utilities/bugtool/ovs-bugtool	/^data = {}$/;"	v
dataFlowState	datapath-windows/ovsext/Switch.h	/^    OVS_SWITCH_DATAFLOW_STATE dataFlowState;$/;"	m	struct:_OVS_SWITCH_CONTEXT
dataOffsetDelta	datapath-windows/ovsext/BufferMgmt.h	/^            UINT32 dataOffsetDelta;$/;"	m	union:_OVS_BUFFER_CONTEXT::__anon2::__anon3
dataReceived	python/ovstest/tcp.py	/^    def dataReceived(self, data):$/;"	m	class:TcpListenerConnection
dataReceived	python/ovstest/tcp.py	/^    def dataReceived(self, data):$/;"	m	class:TcpSenderConnection
data_pull	lib/flow.c	/^data_pull(const void **datap, size_t *sizep, size_t size)$/;"	f	file:
data_t	include/windows/sys/epoll.h	/^} data_t;$/;"	t	typeref:union:data
data_try_pull	lib/flow.c	/^data_try_pull(const void **datap, size_t *sizep, size_t size)$/;"	f	file:
database	lib/ovsdb-idl-provider.h	/^    const char *database;       \/* <db-name> for this database. *\/$/;"	m	struct:ovsdb_idl_class
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	datapath/Makefile	/^datadir = ${datarootdir}$/;"	m
datagramReceived	python/ovstest/udp.py	/^    def datagramReceived(self, data, (_1, _2)):$/;"	m	class:UdpListener
datagramReceived	python/ovstest/udp.py	/^    def datagramReceived(self, data, (host, port)):$/;"	m	class:UdpSender
datagram_version	lib/sflow.h	/^    u_int32_t datagram_version;      \/* (enum SFLDatagram_version) = VERSION5 = 5 *\/$/;"	m	struct:_SFLSample_datagram_hdr
datap	lib/sflow_api.h	/^    u_int32_t *datap; \/* packet fill pointer *\/$/;"	m	struct:_SFLSampleCollector
datap	tests/test-sflow.c	/^    ovs_be32 *datap;$/;"	m	struct:sflow_xdr	file:
datapath	datapath-windows/ovsext/Switch.h	/^    OVS_DATAPATH            datapath;$/;"	m	struct:_OVS_SWITCH_CONTEXT
datapath	datapath/datapath.h	/^struct datapath {$/;"	s
datapath	ovn/lib/ovn-sb-idl.h	/^	struct sbrec_datapath_binding *datapath;$/;"	m	struct:sbrec_multicast_group	typeref:struct:sbrec_multicast_group::sbrec_datapath_binding
datapath	ovn/lib/ovn-sb-idl.h	/^	struct sbrec_datapath_binding *datapath;$/;"	m	struct:sbrec_port_binding	typeref:struct:sbrec_port_binding::sbrec_datapath_binding
datapath	ovn/northd/ovn-northd.c	/^    struct ovn_datapath *datapath;$/;"	m	struct:ovn_multicast	typeref:struct:ovn_multicast::ovn_datapath	file:
datapath_configure_bond	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def datapath_configure_bond(pif,slaves):$/;"	f
datapath_configure_tunnel	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def datapath_configure_tunnel(pif):$/;"	f
datapath_deconfigure_bond	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def datapath_deconfigure_bond(netdev):$/;"	f
datapath_deconfigure_ipdev	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def datapath_deconfigure_ipdev(interface):$/;"	f
datapath_deconfigure_physical	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def datapath_deconfigure_physical(netdev):$/;"	f
datapath_get_physical_pifs	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def datapath_get_physical_pifs(pif):$/;"	f
datapath_id	include/openflow/openflow-common.h	/^    ovs_be64 datapath_id;   \/* Datapath unique ID.  The lower 48-bits are for$/;"	m	struct:ofp_switch_features
datapath_id	lib/learning-switch.c	/^    unsigned long long int datapath_id;$/;"	m	struct:lswitch	file:
datapath_id	lib/ofp-util.h	/^    uint64_t datapath_id;       \/* Datapath unique ID. *\/$/;"	m	struct:ofputil_switch_features
datapath_id	lib/sflow.h	/^    u_int64_t datapath_id;$/;"	m	struct:__anon156
datapath_id	lib/vswitch-idl.h	/^	char *datapath_id;$/;"	m	struct:ovsrec_bridge
datapath_id	ofproto/ofproto-provider.h	/^    uint64_t datapath_id;       \/* Datapath ID. *\/$/;"	m	struct:ofproto
datapath_modify_config	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def datapath_modify_config(commands):$/;"	f
datapath_policy	datapath/datapath.c	/^static const struct nla_policy datapath_policy[OVS_DP_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
datapath_policy	datapath/linux/datapath.c	/^static const struct nla_policy datapath_policy[OVS_DP_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
datapath_type	lib/vswitch-idl.h	/^	char *datapath_type;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_bridge
datapath_types	lib/vswitch-idl.h	/^	char **datapath_types;$/;"	m	struct:ovsrec_open_vswitch
datapath_version	lib/vswitch-idl.h	/^	char *datapath_version;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_bridge
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	datapath/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
date	build-aux/xml2nroff	/^from datetime import date$/;"	i
date	ovsdb/ovsdb-doc	/^from datetime import date$/;"	i
date	ovsdb/ovsdb-dot	/^from datetime import date$/;"	i
datetime	python/ovs/vlog.py	/^import datetime$/;"	i
datetime	utilities/ovs-dpctl-top	/^import datetime$/;"	i
datum	lib/ovsdb-data.c	/^    struct ovsdb_datum *datum;$/;"	m	struct:ovsdb_datum_sort_cbdata	typeref:struct:ovsdb_datum_sort_cbdata::ovsdb_datum	file:
db	debian/ovs-monitor-ipsec	/^import ovs.db.idl$/;"	i
db	ovn/utilities/ovn-nbctl.c	/^static const char *db;$/;"	v	file:
db	ovn/utilities/ovn-sbctl.c	/^static const char *db;$/;"	v	file:
db	ovsdb/execution.c	/^    struct ovsdb *db;$/;"	m	struct:ovsdb_execution	typeref:struct:ovsdb_execution::ovsdb	file:
db	ovsdb/file.c	/^    struct ovsdb *db;$/;"	m	struct:ovsdb_file	typeref:struct:ovsdb_file::ovsdb	file:
db	ovsdb/jsonrpc-server.c	/^    struct ovsdb *db;$/;"	m	struct:ovsdb_jsonrpc_monitor	typeref:struct:ovsdb_jsonrpc_monitor::ovsdb	file:
db	ovsdb/monitor.c	/^    struct ovsdb *db;$/;"	m	struct:ovsdb_monitor	typeref:struct:ovsdb_monitor::ovsdb	file:
db	ovsdb/ovsdb-doc	/^import ovs.db.schema$/;"	i
db	ovsdb/ovsdb-dot	/^import ovs.db.error$/;"	i
db	ovsdb/ovsdb-dot	/^import ovs.db.schema$/;"	i
db	ovsdb/ovsdb-idlc	/^import ovs.db.error$/;"	i
db	ovsdb/ovsdb-idlc	/^import ovs.db.schema$/;"	i
db	ovsdb/ovsdb-server.c	/^    struct ovsdb *db;$/;"	m	struct:db	typeref:struct:db::ovsdb	file:
db	ovsdb/ovsdb-server.c	/^struct db {$/;"	s	file:
db	ovsdb/transaction.c	/^    struct ovsdb *db;$/;"	m	struct:ovsdb_txn	typeref:struct:ovsdb_txn::ovsdb	file:
db	ovsdb/trigger.h	/^    struct ovsdb *db;           \/* Database on which trigger acts. *\/$/;"	m	struct:ovsdb_trigger	typeref:struct:ovsdb_trigger::ovsdb
db	python/ovs/db/data.py	/^import ovs.db.parser$/;"	i
db	python/ovs/db/data.py	/^import ovs.db.types$/;"	i
db	python/ovs/db/idl.py	/^import ovs.db.parser$/;"	i
db	python/ovs/db/idl.py	/^import ovs.db.schema$/;"	i
db	python/ovs/db/schema.py	/^import ovs.db.parser$/;"	i
db	python/ovs/db/types.py	/^import ovs.db.data$/;"	i
db	python/ovs/db/types.py	/^import ovs.db.parser$/;"	i
db	python/ovs/ovsuuid.py	/^import ovs.db.parser$/;"	i
db	tests/test-ovsdb.py	/^import ovs.db.idl$/;"	i
db	tests/test-ovsdb.py	/^import ovs.db.schema$/;"	i
db	utilities/ovs-vsctl.c	/^static const char *db;$/;"	v	file:
db	vtep/vtep-ctl.c	/^static const char *db;$/;"	v	file:
db	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def db():$/;"	f
db	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.db.idl$/;"	i
db_ctl_base	lib/db-ctl-base.c	/^VLOG_DEFINE_THIS_MODULE(db_ctl_base);$/;"	v
db_ctl_commands	lib/db-ctl-base.c	/^static const struct ctl_command_syntax db_ctl_commands[] = {$/;"	v	typeref:struct:ctl_command_syntax	file:
db_init_from_cache	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def db_init_from_cache(cache):$/;"	f
db_init_from_xenapi	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def db_init_from_xenapi(session):$/;"	f
db_version	lib/vswitch-idl.h	/^	char *db_version;$/;"	m	struct:ovsrec_open_vswitch
dbcache_file	xenserver/opt_xensource_libexec_interface-reconfigure	/^dbcache_file = "\/var\/xapi\/network.dbcache"$/;"	v
dbg	python/ovs/vlog.py	/^    def dbg(self, message, **kwargs):$/;"	m	class:Vlog
dbg	utilities/bugtool/ovs-bugtool	/^            dbg = True$/;"	v
dbg	utilities/bugtool/ovs-bugtool	/^dbg = False$/;"	v
dbg_is_enabled	python/ovs/vlog.py	/^    def dbg_is_enabled(self):$/;"	m	class:Vlog
dbg_rl	ofproto/tunnel.c	/^static struct vlog_rate_limit dbg_rl = VLOG_RATE_LIMIT_INIT(60, 60);$/;"	v	typeref:struct:vlog_rate_limit	file:
dbmon	ovsdb/jsonrpc-server.c	/^    struct ovsdb_monitor *dbmon;$/;"	m	struct:ovsdb_jsonrpc_monitor	typeref:struct:ovsdb_jsonrpc_monitor::ovsdb_monitor	file:
dbs	ovsdb/server.h	/^    struct shash dbs;      \/* Maps from a db name to a "struct ovsdb *". *\/$/;"	m	struct:ovsdb_server	typeref:struct:ovsdb_server::shash
dead	lib/dpif-netdev.c	/^    bool dead;$/;"	m	struct:dp_netdev_flow	file:
deadline	lib/timeval.c	/^static long long int deadline = LLONG_MAX;$/;"	v	file:
deadline	python/ovs/reconnect.py	/^        def deadline(fsm):$/;"	m	class:Reconnect.Active
deadline	python/ovs/reconnect.py	/^        def deadline(fsm):$/;"	m	class:Reconnect.Backoff
deadline	python/ovs/reconnect.py	/^        def deadline(fsm):$/;"	m	class:Reconnect.ConnectInProgress
deadline	python/ovs/reconnect.py	/^        def deadline(fsm):$/;"	m	class:Reconnect.Idle
deadline	python/ovs/reconnect.py	/^        def deadline(fsm):$/;"	m	class:Reconnect.Listening
deadline	python/ovs/reconnect.py	/^        def deadline(fsm):$/;"	m	class:Reconnect.Reconnect
deadline	python/ovs/reconnect.py	/^        def deadline(fsm):$/;"	m	class:Reconnect.Void
dealloc	lib/netdev-provider.h	/^    void (*dealloc)(struct netdev *);$/;"	m	struct:netdev_class
dealloc	ofproto/ofproto-dpif.c	/^dealloc(struct ofproto *ofproto_)$/;"	f	file:
dealloc	ofproto/ofproto-provider.h	/^    void (*dealloc)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
dealloc_ofp_port	ofproto/ofproto.c	/^dealloc_ofp_port(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f	file:
debug	utilities/bugtool/ovs-bugtool	/^    debug = False$/;"	v	class:ProcOutput
debug	utilities/ovs-parse-backtrace	/^        debug = "\/usr\/lib\/debug%s.debug" % binary$/;"	v
decay	utilities/ovs-dpctl-top	/^    def decay(self, decayTimeInSeconds):$/;"	m	class:FlowDB
decay_detect_time	lib/bfd.c	/^    long long int decay_detect_time; \/* Decay detection time. *\/$/;"	m	struct:bfd	file:
decay_min_rx	lib/bfd.c	/^    int decay_min_rx;             \/* min_rx is set to decay_min_rx when *\/$/;"	m	struct:bfd	file:
decay_rx_ctl	lib/bfd.c	/^    int decay_rx_ctl;             \/* Count bfd packets received within decay *\/$/;"	m	struct:bfd	file:
decay_rx_packets	lib/bfd.c	/^    uint64_t decay_rx_packets;    \/* Packets received by 'netdev'. *\/$/;"	m	struct:bfd	file:
decay_timer_start	utilities/ovs-dpctl-top	/^def decay_timer_start(flow_db, accumulateDecay):$/;"	f
decimalToHexString	windows/ovs-windows-installer/Actions/OVSActions.js	/^function decimalToHexString(number) {$/;"	f
decl	build-aux/extract-ofp-actions	/^        decl = "static inline "$/;"	v
decode	lib/lldp/lldpd.h	/^    int(*decode)(PROTO_DECODE_SIG); \/* How to decode a frame *\/$/;"	m	struct:protocol
decode_NXAST_RAW_BUNDLE	lib/ofp-actions.c	/^decode_NXAST_RAW_BUNDLE(const struct nx_action_bundle *nab,$/;"	f	file:
decode_NXAST_RAW_BUNDLE_LOAD	lib/ofp-actions.c	/^decode_NXAST_RAW_BUNDLE_LOAD(const struct nx_action_bundle *nab,$/;"	f	file:
decode_NXAST_RAW_CONJUNCTION	lib/ofp-actions.c	/^decode_NXAST_RAW_CONJUNCTION(const struct nx_action_conjunction *nac,$/;"	f	file:
decode_NXAST_RAW_CONTROLLER	lib/ofp-actions.c	/^decode_NXAST_RAW_CONTROLLER(const struct nx_action_controller *nac,$/;"	f	file:
decode_NXAST_RAW_CT	lib/ofp-actions.c	/^decode_NXAST_RAW_CT(const struct nx_action_conntrack *nac,$/;"	f	file:
decode_NXAST_RAW_DEBUG_RECIRC	lib/ofp-actions.c	/^decode_NXAST_RAW_DEBUG_RECIRC(struct ofpbuf *out)$/;"	f	file:
decode_NXAST_RAW_DEC_TTL_CNT_IDS	lib/ofp-actions.c	/^decode_NXAST_RAW_DEC_TTL_CNT_IDS(const struct nx_action_cnt_ids *nac_ids,$/;"	f	file:
decode_NXAST_RAW_EXIT	lib/ofp-actions.c	/^decode_NXAST_RAW_EXIT(struct ofpbuf *out)$/;"	f	file:
decode_NXAST_RAW_FIN_TIMEOUT	lib/ofp-actions.c	/^decode_NXAST_RAW_FIN_TIMEOUT(const struct nx_action_fin_timeout *naft,$/;"	f	file:
decode_NXAST_RAW_LEARN	lib/ofp-actions.c	/^decode_NXAST_RAW_LEARN(const struct nx_action_learn *nal,$/;"	f	file:
decode_NXAST_RAW_MULTIPATH	lib/ofp-actions.c	/^decode_NXAST_RAW_MULTIPATH(const struct nx_action_multipath *nam,$/;"	f	file:
decode_NXAST_RAW_NOTE	lib/ofp-actions.c	/^decode_NXAST_RAW_NOTE(const struct nx_action_note *nan,$/;"	f	file:
decode_NXAST_RAW_OUTPUT_REG	lib/ofp-actions.c	/^decode_NXAST_RAW_OUTPUT_REG(const struct nx_action_output_reg *naor,$/;"	f	file:
decode_NXAST_RAW_OUTPUT_REG2	lib/ofp-actions.c	/^decode_NXAST_RAW_OUTPUT_REG2(const struct nx_action_output_reg2 *naor,$/;"	f	file:
decode_NXAST_RAW_POP_QUEUE	lib/ofp-actions.c	/^decode_NXAST_RAW_POP_QUEUE(struct ofpbuf *out)$/;"	f	file:
decode_NXAST_RAW_REG_LOAD	lib/ofp-actions.c	/^decode_NXAST_RAW_REG_LOAD(const struct nx_action_reg_load *narl,$/;"	f	file:
decode_NXAST_RAW_REG_LOAD2	lib/ofp-actions.c	/^decode_NXAST_RAW_REG_LOAD2(const struct nx_action_reg_load2 *narl,$/;"	f	file:
decode_NXAST_RAW_REG_MOVE	lib/ofp-actions.c	/^decode_NXAST_RAW_REG_MOVE(const struct nx_action_reg_move *narm,$/;"	f	file:
decode_NXAST_RAW_RESUBMIT	lib/ofp-actions.c	/^decode_NXAST_RAW_RESUBMIT(uint16_t port,$/;"	f	file:
decode_NXAST_RAW_RESUBMIT_TABLE	lib/ofp-actions.c	/^decode_NXAST_RAW_RESUBMIT_TABLE(const struct nx_action_resubmit *nar,$/;"	f	file:
decode_NXAST_RAW_SAMPLE	lib/ofp-actions.c	/^decode_NXAST_RAW_SAMPLE(const struct nx_action_sample *nas,$/;"	f	file:
decode_NXAST_RAW_SET_TUNNEL	lib/ofp-actions.c	/^decode_NXAST_RAW_SET_TUNNEL(uint32_t tun_id,$/;"	f	file:
decode_NXAST_RAW_SET_TUNNEL64	lib/ofp-actions.c	/^decode_NXAST_RAW_SET_TUNNEL64(uint64_t tun_id,$/;"	f	file:
decode_NXAST_RAW_STACK_POP	lib/ofp-actions.c	/^decode_NXAST_RAW_STACK_POP(const struct nx_action_stack *nasp,$/;"	f	file:
decode_NXAST_RAW_STACK_PUSH	lib/ofp-actions.c	/^decode_NXAST_RAW_STACK_PUSH(const struct nx_action_stack *nasp,$/;"	f	file:
decode_NXAST_RAW_WRITE_METADATA	lib/ofp-actions.c	/^decode_NXAST_RAW_WRITE_METADATA(const struct nx_action_write_metadata *nawm,$/;"	f	file:
decode_OFPAT_RAW10_ENQUEUE	lib/ofp-actions.c	/^decode_OFPAT_RAW10_ENQUEUE(const struct ofp10_action_enqueue *oae,$/;"	f	file:
decode_OFPAT_RAW10_OUTPUT	lib/ofp-actions.c	/^decode_OFPAT_RAW10_OUTPUT(const struct ofp10_action_output *oao,$/;"	f	file:
decode_OFPAT_RAW10_SET_VLAN_PCP	lib/ofp-actions.c	/^decode_OFPAT_RAW10_SET_VLAN_PCP(uint8_t pcp,$/;"	f	file:
decode_OFPAT_RAW10_SET_VLAN_VID	lib/ofp-actions.c	/^decode_OFPAT_RAW10_SET_VLAN_VID(uint16_t vid,$/;"	f	file:
decode_OFPAT_RAW10_STRIP_VLAN	lib/ofp-actions.c	/^decode_OFPAT_RAW10_STRIP_VLAN(struct ofpbuf *out)$/;"	f	file:
decode_OFPAT_RAW11_GROUP	lib/ofp-actions.c	/^decode_OFPAT_RAW11_GROUP(uint32_t group_id,$/;"	f	file:
decode_OFPAT_RAW11_OUTPUT	lib/ofp-actions.c	/^decode_OFPAT_RAW11_OUTPUT(const struct ofp11_action_output *oao,$/;"	f	file:
decode_OFPAT_RAW11_POP_VLAN	lib/ofp-actions.c	/^decode_OFPAT_RAW11_POP_VLAN(struct ofpbuf *out)$/;"	f	file:
decode_OFPAT_RAW11_PUSH_VLAN	lib/ofp-actions.c	/^decode_OFPAT_RAW11_PUSH_VLAN(ovs_be16 eth_type,$/;"	f	file:
decode_OFPAT_RAW11_SET_NW_ECN	lib/ofp-actions.c	/^decode_OFPAT_RAW11_SET_NW_ECN(uint8_t ecn,$/;"	f	file:
decode_OFPAT_RAW11_SET_NW_TTL	lib/ofp-actions.c	/^decode_OFPAT_RAW11_SET_NW_TTL(uint8_t ttl,$/;"	f	file:
decode_OFPAT_RAW11_SET_VLAN_PCP	lib/ofp-actions.c	/^decode_OFPAT_RAW11_SET_VLAN_PCP(uint8_t pcp,$/;"	f	file:
decode_OFPAT_RAW11_SET_VLAN_VID	lib/ofp-actions.c	/^decode_OFPAT_RAW11_SET_VLAN_VID(uint16_t vid,$/;"	f	file:
decode_OFPAT_RAW12_SET_FIELD	lib/ofp-actions.c	/^decode_OFPAT_RAW12_SET_FIELD(const struct ofp12_action_set_field *oasf,$/;"	f	file:
decode_OFPAT_RAW15_COPY_FIELD	lib/ofp-actions.c	/^decode_OFPAT_RAW15_COPY_FIELD(const struct ofp15_action_copy_field *oacf,$/;"	f	file:
decode_OFPAT_RAW15_SET_FIELD	lib/ofp-actions.c	/^decode_OFPAT_RAW15_SET_FIELD(const struct ofp12_action_set_field *oasf,$/;"	f	file:
decode_OFPAT_RAW_DEC_MPLS_TTL	lib/ofp-actions.c	/^decode_OFPAT_RAW_DEC_MPLS_TTL(struct ofpbuf *out)$/;"	f	file:
decode_OFPAT_RAW_DEC_NW_TTL	lib/ofp-actions.c	/^decode_OFPAT_RAW_DEC_NW_TTL(struct ofpbuf *out)$/;"	f	file:
decode_OFPAT_RAW_POP_MPLS	lib/ofp-actions.c	/^decode_OFPAT_RAW_POP_MPLS(ovs_be16 ethertype,$/;"	f	file:
decode_OFPAT_RAW_PUSH_MPLS	lib/ofp-actions.c	/^decode_OFPAT_RAW_PUSH_MPLS(ovs_be16 ethertype,$/;"	f	file:
decode_OFPAT_RAW_SET_DL_DST	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_DL_DST(const struct ofp_action_dl_addr *a,$/;"	f	file:
decode_OFPAT_RAW_SET_DL_SRC	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_DL_SRC(const struct ofp_action_dl_addr *a,$/;"	f	file:
decode_OFPAT_RAW_SET_ICMP_ID	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_ICMP_ID(ovs_be16 port,$/;"	f	file:
decode_OFPAT_RAW_SET_MPLS_LABEL	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_MPLS_LABEL(ovs_be32 label,$/;"	f	file:
decode_OFPAT_RAW_SET_MPLS_TC	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_MPLS_TC(uint8_t tc,$/;"	f	file:
decode_OFPAT_RAW_SET_MPLS_TTL	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_MPLS_TTL(uint8_t ttl,$/;"	f	file:
decode_OFPAT_RAW_SET_NW_DST	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_NW_DST(ovs_be32 ipv4,$/;"	f	file:
decode_OFPAT_RAW_SET_NW_SRC	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_NW_SRC(ovs_be32 ipv4,$/;"	f	file:
decode_OFPAT_RAW_SET_NW_TOS	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_NW_TOS(uint8_t dscp,$/;"	f	file:
decode_OFPAT_RAW_SET_QUEUE	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_QUEUE(uint32_t queue_id,$/;"	f	file:
decode_OFPAT_RAW_SET_TP_DST	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_TP_DST(ovs_be16 port,$/;"	f	file:
decode_OFPAT_RAW_SET_TP_SRC	lib/ofp-actions.c	/^decode_OFPAT_RAW_SET_TP_SRC(ovs_be16 port,$/;"	f	file:
decode_ONFACT_RAW13_COPY_FIELD	lib/ofp-actions.c	/^decode_ONFACT_RAW13_COPY_FIELD(const struct onf_action_copy_field *oacf,$/;"	f	file:
decode_bundle	lib/ofp-actions.c	/^decode_bundle(bool load, const struct nx_action_bundle *nab,$/;"	f	file:
decode_copy_field__	lib/ofp-actions.c	/^decode_copy_field__(ovs_be16 src_offset, ovs_be16 dst_offset, ovs_be16 n_bits,$/;"	f	file:
decode_ct_zone	lib/ofp-actions.c	/^decode_ct_zone(const struct nx_action_conntrack *nac,$/;"	f	file:
decode_geneve_table_mappings	lib/ofp-util.c	/^decode_geneve_table_mappings(struct ofpbuf *msg, unsigned int max_fields,$/;"	f	file:
decode_node	lib/ofp-actions.c	/^    struct hmap_node decode_node; \/* Based on 'hdrs'. *\/$/;"	m	struct:ofpact_raw_instance	typeref:struct:ofpact_raw_instance::hmap_node	file:
decode_ofpat_set_field	lib/ofp-actions.c	/^decode_ofpat_set_field(const struct ofp12_action_set_field *oasf,$/;"	f	file:
decode_openflow11_instruction	lib/ofp-actions.c	/^decode_openflow11_instruction(const struct ofp11_instruction *inst,$/;"	f	file:
decode_openflow11_instructions	lib/ofp-actions.c	/^decode_openflow11_instructions(const struct ofp11_instruction insts[],$/;"	f	file:
decode_set_vlan_pcp	lib/ofp-actions.c	/^decode_set_vlan_pcp(uint8_t pcp, bool push_vlan_if_needed, struct ofpbuf *out)$/;"	f	file:
decode_set_vlan_vid	lib/ofp-actions.c	/^decode_set_vlan_vid(uint16_t vid, bool push_vlan_if_needed, struct ofpbuf *out)$/;"	f	file:
decode_stack_action	lib/ofp-actions.c	/^decode_stack_action(const struct nx_action_stack *nasp,$/;"	f	file:
decode_version_range	build-aux/extract-ofp-fields	/^def decode_version_range(range):$/;"	f
decode_version_range	build-aux/extract-ofp-msgs	/^def decode_version_range(range):$/;"	f
deconfigure_bridge	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def deconfigure_bridge(pif):$/;"	f
decrement	utilities/ovs-dpctl-top	/^    def decrement(self, decr_packets, decr_bytes, decr_count):$/;"	m	class:SumData
decrement_timer	lib/rstp-state-machines.c	/^decrement_timer(uint16_t *timer)$/;"	f	file:
default	python/ovs/db/data.py	/^    def default(type_):$/;"	m	class:Atom
default	python/ovs/db/data.py	/^    def default(type_):$/;"	m	class:Datum
default	python/ovs/db/types.py	/^    def default(self):$/;"	m	class:BaseType
default_atom	python/ovs/db/types.py	/^    def default_atom(self):$/;"	m	class:AtomicType
default_db	ovn/controller-vtep/ovn-controller-vtep.c	/^default_db(void)$/;"	f	file:
default_db	ovn/northd/ovn-northd.c	/^default_db(void)$/;"	f	file:
default_db	ovsdb/ovsdb-tool.c	/^default_db(void)$/;"	f	file:
default_db_	ovn/controller-vtep/ovn-controller-vtep.c	/^static char *default_db_;$/;"	v	file:
default_db_	ovn/northd/ovn-northd.c	/^static char *default_db_;$/;"	v	file:
default_ea	vswitchd/bridge.c	/^    struct eth_addr default_ea; \/* Default MAC. *\/$/;"	m	struct:bridge	typeref:struct:bridge::eth_addr	file:
default_flows	lib/learning-switch.c	/^    const struct ofputil_flow_mod *default_flows;$/;"	m	struct:lswitch	typeref:struct:lswitch::ofputil_flow_mod	file:
default_flows	lib/learning-switch.h	/^    const struct ofputil_flow_mod *default_flows;$/;"	m	struct:lswitch_config	typeref:struct:lswitch_config::ofputil_flow_mod
default_flows	utilities/ovs-testcontroller.c	/^static struct ofputil_flow_mod *default_flows;$/;"	v	typeref:struct:ofputil_flow_mod	file:
default_gw	ovn/lib/ovn-nb-idl.h	/^	char *default_gw;$/;"	m	struct:nbrec_logical_router
default_install__	lib/netdev-linux.c	/^default_install__(struct netdev *netdev_)$/;"	f	file:
default_pattern	lib/vlog.c	/^    bool default_pattern;       \/* Whether current pattern is the default. *\/$/;"	m	struct:destination	file:
default_prefix_fields	ofproto/ofproto.c	/^const enum mf_field_id default_prefix_fields[2] =$/;"	v	typeref:enum:mf_field_id
default_queue	lib/learning-switch.c	/^    uint32_t default_queue;     \/* Default OpenFlow queue, or UINT32_MAX. *\/$/;"	m	struct:lswitch	file:
default_queue	lib/learning-switch.h	/^    uint32_t default_queue;$/;"	m	struct:lswitch_config
default_queue	utilities/ovs-testcontroller.c	/^static uint32_t default_queue = UINT32_MAX;$/;"	v	file:
default_schema	ovsdb/ovsdb-tool.c	/^default_schema(void)$/;"	f	file:
default_tc_install	lib/netdev-linux.c	/^default_tc_install(struct netdev *netdev,$/;"	f	file:
default_tc_load	lib/netdev-linux.c	/^default_tc_load(struct netdev *netdev, struct ofpbuf *nlmsg OVS_UNUSED)$/;"	f	file:
default_value	lib/dirs.c	/^    const char *default_value;  \/* Default value. *\/$/;"	m	struct:directory	file:
deferred_action	datapath/actions.c	/^struct deferred_action {$/;"	s	file:
deferred_action	datapath/linux/actions.c	/^struct deferred_action {$/;"	s	file:
define_genl_family	lib/netlink-socket.c	/^define_genl_family(uint16_t id, const char *name)$/;"	f	file:
definition	build-aux/check-structs	/^                    definition = ""$/;"	v
del	ofproto/ofproto-dpif.c	/^del(const char *type, const char *name)$/;"	f	file:
del	ofproto/ofproto-provider.h	/^    int (*del)(const char *type, const char *name);$/;"	m	struct:ofproto_class
delID	datapath-windows/ovsext/TunnelFilter.c	/^        UINT64                  delID;$/;"	m	union:_OVS_TUNFLT_REQUEST::__anon25	file:
del_aa_mapping	utilities/ovs-vsctl.c	/^del_aa_mapping(struct ovsrec_autoattach *aa,$/;"	f	file:
del_bfd	vtep/ovs-vtep	/^def del_bfd(remote_ip):$/;"	f
del_binding	vtep/ovs-vtep	/^def del_binding(binding, ls):$/;"	f
del_bridge	utilities/ovs-vsctl.c	/^del_bridge(struct vsctl_context *vsctl_ctx, struct vsctl_bridge *br)$/;"	f	file:
del_cached_bridge	utilities/ovs-vsctl.c	/^del_cached_bridge(struct vsctl_context *vsctl_ctx, struct vsctl_bridge *br)$/;"	f	file:
del_cached_iface	utilities/ovs-vsctl.c	/^del_cached_iface(struct vsctl_context *vsctl_ctx, struct vsctl_iface *iface)$/;"	f	file:
del_cached_ls_binding	vtep/vtep-ctl.c	/^del_cached_ls_binding(struct vtep_ctl_port *port, const char *vlan)$/;"	f	file:
del_cached_lswitch	vtep/vtep-ctl.c	/^del_cached_lswitch(struct vtep_ctl_context *ctx, struct vtep_ctl_lswitch *ls)$/;"	f	file:
del_cached_port	utilities/ovs-vsctl.c	/^del_cached_port(struct vsctl_context *vsctl_ctx, struct vsctl_port *port)$/;"	f	file:
del_cached_port	vtep/vtep-ctl.c	/^del_cached_port(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
del_cached_pswitch	vtep/vtep-ctl.c	/^del_cached_pswitch(struct vtep_ctl_context *ctx, struct vtep_ctl_pswitch *ps)$/;"	f	file:
del_entry	debian/ovs-monitor-ipsec	/^    def del_entry(self, host):$/;"	f
del_entry	debian/ovs-monitor-ipsec	/^    def del_entry(self, local_ip, remote_ip):$/;"	m	class:IPsec
del_lbinding	vtep/ovs-vtep	/^    def del_lbinding(self, lbinding):$/;"	m	class:Logical_Switch
del_lswitch	vtep/vtep-ctl.c	/^del_lswitch(struct vtep_ctl_context *vtepctl_ctx, struct vtep_ctl_lswitch *ls)$/;"	f	file:
del_mcast_entry	vtep/vtep-ctl.c	/^del_mcast_entry(struct ctl_context *ctx,$/;"	f	file:
del_ploc_from_mcast_mac	vtep/vtep-ctl.c	/^del_ploc_from_mcast_mac(struct vtep_ctl_mcast_mac *mcast_mac,$/;"	f	file:
del_port	utilities/ovs-docker	/^del_port () {$/;"	f
del_port	utilities/ovs-vsctl.c	/^del_port(struct vsctl_context *vsctl_ctx, struct vsctl_port *port)$/;"	f	file:
del_port	vtep/vtep-ctl.c	/^del_port(struct vtep_ctl_context *vtepctl_ctx, struct vtep_ctl_port *port)$/;"	f	file:
del_ports	utilities/ovs-docker	/^del_ports () {$/;"	f
del_pswitch	vtep/vtep-ctl.c	/^del_pswitch(struct vtep_ctl_context *vtepctl_ctx, struct vtep_ctl_pswitch *ps)$/;"	f	file:
del_remote_mac	vtep/ovs-vtep	/^    def del_remote_mac(self, mac):$/;"	m	class:Logical_Switch
del_transient_ports	utilities/ovs-ctl	/^del_transient_ports () {$/;"	f
del_transient_ports	utilities/ovs-ctl.in	/^del_transient_ports () {$/;"	f
del_tunnel	vtep/ovs-vtep	/^    def del_tunnel(self, tunnel):$/;"	m	class:Logical_Switch
del_ucast_entry	vtep/vtep-ctl.c	/^del_ucast_entry(struct ctl_context *ctx, bool local)$/;"	f	file:
del_work	datapath/linux/compat/include/net/vxlan.h	/^	struct work_struct del_work;$/;"	m	struct:vxlan_sock	typeref:struct:vxlan_sock::work_struct
delay_expires	ofproto/bond.c	/^    long long delay_expires;    \/* Time after which 'enabled' may change. *\/$/;"	m	struct:bond_slave	file:
delete	python/ovs/db/idl.py	/^    def delete(self):$/;"	m	class:Row
deleteController	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def deleteController(self):$/;"	m	class:VSwitchControllerDialogue
delete_cacert	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def delete_cacert():$/;"	f
delete_controllers	utilities/ovs-vsctl.c	/^delete_controllers(struct ovsrec_controller **controllers,$/;"	f	file:
delete_garbage_row	ovsdb/transaction.c	/^delete_garbage_row(struct ovsdb_txn *txn, struct ovsdb_txn_row *txn_row)$/;"	f	file:
delete_group	ofproto/ofproto.c	/^delete_group(struct ofproto *ofproto, uint32_t group_id)$/;"	f	file:
delete_ipdev	lib/tnl-ports.c	/^delete_ipdev(struct ip_device *ip_dev)$/;"	f	file:
delete_managers	utilities/ovs-vsctl.c	/^delete_managers(const struct ovsrec_open_vswitch *ovs)$/;"	f	file:
delete_managers	vtep/vtep-ctl.c	/^delete_managers(const struct vtep_ctl_context *vtepctl_ctx)$/;"	f	file:
delete_netns_link	utilities/ovs-docker	/^delete_netns_link () {$/;"	f
delete_op_init	ofproto/ofproto-dpif-upcall.c	/^delete_op_init(struct udpif *udpif, struct ukey_op *op, struct udpif_key *ukey)$/;"	f	file:
delete_op_init__	ofproto/ofproto-dpif-upcall.c	/^delete_op_init__(struct udpif *udpif, struct ukey_op *op,$/;"	f	file:
delete_queue	lib/netdev-provider.h	/^    int (*delete_queue)(struct netdev *netdev, unsigned int queue_id);$/;"	m	struct:netdev_class
delete_reason	lib/ofp-util.h	/^    enum ofp_flow_removed_reason delete_reason;$/;"	m	struct:ofputil_flow_mod	typeref:enum:ofputil_flow_mod::ofp_flow_removed_reason
delete_row_cb	ovsdb/execution.c	/^delete_row_cb(const struct ovsdb_row *row, void *dr_)$/;"	f	file:
delete_row_cbdata	ovsdb/execution.c	/^struct delete_row_cbdata {$/;"	s	file:
delete_row_refs	ovsdb/transaction.c	/^delete_row_refs(struct ovsdb_txn *txn, const struct ovsdb_row *row,$/;"	f	file:
delimiters	lib/odp-util.c	/^static const char *delimiters = ", \\t\\r\\n";$/;"	v	file:
delimiters_end	lib/odp-util.c	/^static const char *delimiters_end = ", \\t\\r\\n)";$/;"	v	file:
demand	lib/cfm.c	/^    bool demand;           \/* Demand mode. *\/$/;"	m	struct:cfm	file:
demand	lib/cfm.h	/^    bool demand;                \/* Run in demand mode. *\/$/;"	m	struct:cfm_settings
demand_rx_bfd_time	lib/bfd.c	/^    long long int demand_rx_bfd_time;$/;"	m	struct:bfd	file:
demand_rx_ccm_t	lib/cfm.c	/^    struct timer demand_rx_ccm_t;$/;"	m	struct:cfm	typeref:struct:cfm::timer	file:
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
deprecation	lib/ofp-actions.c	/^    const char *deprecation;$/;"	m	struct:ofpact_raw_instance	file:
depth	lib/fat-rwlock.c	/^    unsigned int depth;$/;"	m	struct:fat_rwlock_slot	file:
depth	lib/json.c	/^    int depth;$/;"	m	struct:json_serializer	file:
depth	lib/sflow.h	/^    u_int32_t depth;$/;"	m	struct:_SFLLabelStack
dequeue_packet	ofproto/pinsched.c	/^dequeue_packet(struct pinsched *ps, struct pinqueue *q)$/;"	f	file:
desc	lib/ofp-util.h	/^    struct ofputil_phy_port desc;$/;"	m	struct:ofputil_port_status	typeref:struct:ofputil_port_status::ofputil_phy_port
describe_fd	lib/socket-util.c	/^describe_fd(int fd)$/;"	f
describe_sockaddr	lib/socket-util.c	/^describe_sockaddr(struct ds *string, int fd,$/;"	f	file:
description	python/setup.py	/^    description='Open vSwitch library',$/;"	v
description	tests/test-jsonrpc.py	/^                                      description=group_description)$/;"	v
description	vtep/vtep-idl.h	/^	char *description;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_logical_router
description	vtep/vtep-idl.h	/^	char *description;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_logical_switch
description	vtep/vtep-idl.h	/^	char *description;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_physical_port
description	vtep/vtep-idl.h	/^	char *description;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_physical_switch
designated_bridge	lib/stp.c	/^    stp_identifier designated_bridge; \/* 8.5.5.6. *\/$/;"	m	struct:stp_port	file:
designated_bridge_id	lib/rstp-common.h	/^    rstp_identifier designated_bridge_id;$/;"	m	struct:rstp_priority_vector
designated_bridge_id	ofproto/ofproto.h	/^    rstp_identifier designated_bridge_id;$/;"	m	struct:ofproto_port_rstp_status
designated_cost	lib/stp.c	/^    int designated_cost;            \/* 8.5.5.5: Path cost to root on port. *\/$/;"	m	struct:stp_port	file:
designated_id	ofproto/ofproto.h	/^    rstp_identifier designated_id;$/;"	m	struct:ofproto_rstp_status
designated_path_cost	ofproto/ofproto.h	/^    uint32_t designated_path_cost;$/;"	m	struct:ofproto_port_rstp_status
designated_port	lib/stp.c	/^    int designated_port;            \/* 8.5.5.7: Port to send config msgs on. *\/$/;"	m	struct:stp_port	file:
designated_port_id	lib/rstp-common.h	/^    uint16_t designated_port_id;$/;"	m	struct:rstp_priority_vector
designated_port_id	ofproto/ofproto.h	/^    uint16_t designated_port_id;$/;"	m	struct:ofproto_port_rstp_status
designated_port_id	ofproto/ofproto.h	/^    uint16_t designated_port_id;$/;"	m	struct:ofproto_rstp_status
designated_root	lib/stp.c	/^    stp_identifier designated_root; \/* 8.5.3.1: Bridge believed to be root. *\/$/;"	m	struct:stp	file:
designated_root	lib/stp.c	/^    stp_identifier designated_root; \/* 8.5.5.4. *\/$/;"	m	struct:stp_port	file:
designated_root	ofproto/ofproto.h	/^    stp_identifier designated_root;$/;"	m	struct:ofproto_stp_status
dest	datapath-windows/ovsext/NetProto.h	/^   UINT16    dest;$/;"	m	struct:TCPHdr
dest	datapath-windows/ovsext/NetProto.h	/^   UINT16    dest;$/;"	m	struct:UDPHdr
destIPAddr	datapath-windows/ovsext/NetProto.h	/^   UINT32   destIPAddr;$/;"	m	struct:PseudoHdr
destIPAddr	datapath-windows/ovsext/NetProto.h	/^   UINT8    destIPAddr[16];$/;"	m	struct:PseudoHdrIPv6
destPortsSizeIn	datapath-windows/ovsext/Actions.c	/^    UINT32 destPortsSizeIn;$/;"	m	struct:OvsForwardingContext	file:
destPortsSizeOut	datapath-windows/ovsext/Actions.c	/^    UINT32 destPortsSizeOut;$/;"	m	struct:OvsForwardingContext	file:
dest_ip	vtep/vtep-idl.h	/^	char *dest_ip;$/;"	m	struct:vteprec_acl_entry
dest_mac	vtep/vtep-idl.h	/^	char *dest_mac;$/;"	m	struct:vteprec_acl_entry
dest_mask	vtep/vtep-idl.h	/^	char *dest_mask;$/;"	m	struct:vteprec_acl_entry
dest_port_max	vtep/vtep-idl.h	/^	int64_t *dest_port_max;$/;"	m	struct:vteprec_acl_entry
dest_port_min	vtep/vtep-idl.h	/^	int64_t *dest_port_min;$/;"	m	struct:vteprec_acl_entry
destination	lib/vlog.c	/^struct destination {$/;"	s	file:
destinationPorts	datapath-windows/ovsext/Actions.c	/^    PNDIS_SWITCH_FORWARDING_DESTINATION_ARRAY destinationPorts;$/;"	m	struct:OvsForwardingContext	file:
destinations	lib/vlog.c	/^static struct destination destinations[VLF_N_DESTINATIONS] = {$/;"	v	typeref:struct:destination	file:
destroy	datapath/vport.h	/^	void (*destroy)(struct vport *);$/;"	m	struct:vport_ops
destroy	lib/dpif-provider.h	/^    int (*destroy)(struct dpif *dpif);$/;"	m	struct:dpif_class
destroy	ovsdb/ovsdb.h	/^    void (*destroy)(struct ovsdb_replica *);$/;"	m	struct:ovsdb_replica_class
destroy_bond_device	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def destroy_bond_device(pif):$/;"	f
destroy_bridge	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def destroy_bridge(pif):$/;"	f	function:bring_down_interface
destroy_classifier	tests/test-classifier.c	/^destroy_classifier(struct classifier *cls)$/;"	f	file:
destroy_device	lib/netdev-dpdk.c	/^destroy_device(volatile struct virtio_net *dev)$/;"	f	file:
destroy_dp_rcu	datapath/datapath.c	/^static void destroy_dp_rcu(struct rcu_head *rcu)$/;"	f	file:
destroy_dp_rcu	datapath/linux/datapath.c	/^static void destroy_dp_rcu(struct rcu_head *rcu)$/;"	f	file:
destroy_rule_executes	ofproto/ofproto.c	/^destroy_rule_executes(struct ofproto *ofproto)$/;"	f	file:
destroy_subtable	lib/classifier.c	/^destroy_subtable(struct classifier *cls, struct cls_subtable *subtable)$/;"	f	file:
destroy_tap	lib/netdev-bsd.c	/^destroy_tap(int fd, const char *name)$/;"	f	file:
destroy_tnlids	ovn/northd/ovn-northd.c	/^destroy_tnlids(struct hmap *tnlids)$/;"	f	file:
destroy_vlan	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def destroy_vlan(pif):$/;"	f	function:bring_down_interface
destroy_vtep_tunnel	vtep/ovs-vtep	/^def destroy_vtep_tunnel(remote_ip):$/;"	f
destroyed	lib/dpif-netdev.c	/^    atomic_flag destroyed;$/;"	m	struct:dp_netdev	file:
destruct	lib/netdev-provider.h	/^    void (*destruct)(struct netdev *);$/;"	m	struct:netdev_class
destruct	ofproto/ofproto-dpif.c	/^destruct(struct ofproto *ofproto_)$/;"	f	file:
destruct	ofproto/ofproto-provider.h	/^    void (*destruct)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
destructor	lib/ovs-thread.c	/^    void (*destructor)(void *); \/* Called at thread exit. *\/$/;"	m	struct:ovsthread_key	file:
destructor_func	lib/ovs-thread.c	/^typedef void destructor_func(void *);$/;"	t	file:
detach	lib/daemon-unix.c	/^bool detach;                    \/* Was --detach specified? *\/$/;"	v
detach	lib/daemon-windows.c	/^bool detach;                 \/* Was --detach specified? *\/$/;"	v
detach_list	datapath/vport.h	/^	struct list_head detach_list;$/;"	m	struct:vport	typeref:struct:vport::list_head
detach_process	lib/daemon-windows.c	/^detach_process(int argc, char *argv[])$/;"	f	file:
detached	lib/daemon-unix.c	/^static bool detached;           \/* Have we already detached? *\/$/;"	v	file:
detached	lib/daemon-windows.c	/^static bool detached;        \/* Running as the child process. *\/$/;"	v	file:
details	lib/ovsdb-error.c	/^    char *details;              \/* String for "details" member. *\/$/;"	m	struct:ovsdb_error	file:
detect_time	lib/bfd.c	/^    long long int detect_time;    \/* RFC 5880 6.8.4 Detection time. *\/$/;"	m	struct:bfd	file:
determine_changes	ovsdb/transaction.c	/^determine_changes(struct ovsdb_txn *txn, struct ovsdb_txn_row *txn_row)$/;"	f	file:
dev	datapath/vport-netdev.h	/^	struct net_device *dev;$/;"	m	struct:netdev_vport	typeref:struct:netdev_vport::net_device
dev	lib/tnl-ports.c	/^    struct netdev *dev;$/;"	m	struct:ip_device	typeref:struct:ip_device::netdev	file:
dev	ofproto/ofproto-dpif-xlate.c	/^        } dev;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon189	file:
devOp	datapath-windows/ovsext/Datapath.h	/^    UINT32 devOp;        \/* Device operation of the userspace call. *\/$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
dev_disable_lro	datapath/linux/compat/dev-openvswitch.c	/^void dev_disable_lro(struct net_device *dev) { }$/;"	f
dev_disable_lro	datapath/linux/compat/dev-openvswitch.c	/^void dev_disable_lro(struct net_device *dev)$/;"	f
dev_disable_lro	datapath/linux/dev-openvswitch.c	/^void dev_disable_lro(struct net_device *dev) { }$/;"	f
dev_disable_lro	datapath/linux/dev-openvswitch.c	/^void dev_disable_lro(struct net_device *dev)$/;"	f
dev_get_by_index_rcu	datapath/linux/compat/include/linux/netdevice.h	/^static inline struct net_device *dev_get_by_index_rcu(struct net *net, int ifindex)$/;"	f
dev_name	lib/tnl-ports.c	/^    char dev_name[IFNAMSIZ];$/;"	m	struct:ip_device	file:
dev_name	lib/tnl-ports.c	/^    char dev_name[IFNAMSIZ];$/;"	m	struct:tnl_port	file:
dev_name	lib/tnl-ports.c	/^    char dev_name[IFNAMSIZ];$/;"	m	struct:tnl_port_in	file:
dev_null	utilities/bugtool/ovs-bugtool	/^dev_null = open('\/dev\/null', 'r+')$/;"	v
dev_queue_xmit	datapath/linux/compat/gso.c	87;"	d	file:
dev_queue_xmit	datapath/linux/compat/include/linux/netdevice.h	154;"	d
dev_queue_xmit	datapath/linux/gso.c	87;"	d	file:
dev_supports_vlan_tx	datapath/linux/compat/gso.c	/^static bool dev_supports_vlan_tx(struct net_device *dev)$/;"	f	file:
dev_supports_vlan_tx	datapath/linux/gso.c	/^static bool dev_supports_vlan_tx(struct net_device *dev)$/;"	f	file:
dev_table	datapath/linux/vport.c	/^static struct hlist_head *dev_table;$/;"	v	typeref:struct:hlist_head	file:
dev_table	datapath/vport.c	/^static struct hlist_head *dev_table;$/;"	v	typeref:struct:hlist_head	file:
dev_type	lib/netdev-windows.c	/^    int32_t dev_type;$/;"	m	struct:netdev_windows	file:
device	datapath/datapath.c	/^DEFINE_COMPAT_PNET_REG_FUNC(device);$/;"	v
device	datapath/linux/datapath.c	/^DEFINE_COMPAT_PNET_REG_FUNC(device);$/;"	v
device	lib/lockfile.c	/^    dev_t device;$/;"	m	struct:lockfile	file:
dgramSeqNo	tests/test-sflow.c	/^    uint32_t dgramSeqNo;$/;"	m	struct:sflow_xdr	file:
dhcp_header	lib/dhcp.h	/^struct dhcp_header {$/;"	s
dhcphdr	datapath/actions.c	/^struct dhcphdr {$/;"	s	file:
dhcphdr	datapath/linux/actions.c	/^struct dhcphdr {$/;"	s	file:
diag	lib/bfd.c	/^    enum diag diag;               \/* bfd.LocalDiag. *\/$/;"	m	struct:bfd	typeref:enum:bfd::diag	file:
diag	lib/bfd.c	/^enum diag {$/;"	g	file:
diagram_header_to_nroff	python/build/nroff.py	/^def diagram_header_to_nroff(header_node):$/;"	f
diagram_to_nroff	python/build/nroff.py	/^def diagram_to_nroff(nodes, para):$/;"	f
die_if_error	lib/db-ctl-base.c	/^die_if_error(char *error)$/;"	f	file:
die_if_error	tests/test-ovsdb.c	/^die_if_error(char *error)$/;"	f	file:
diff	tests/system-kmod-testsuite	/^    diff () {$/;"	f
diff	tests/system-userspace-testsuite	/^    diff () {$/;"	f
diff	tests/testsuite	/^    diff () {$/;"	f
diff_stats	tests/test-reconnect.c	/^diff_stats(const struct reconnect_stats *old,$/;"	f	file:
diff_stats	tests/test-reconnect.py	/^def diff_stats(old, new, delta):$/;"	f
digest	lib/sha1.h	/^    uint32_t digest[5];          \/* Message digest. *\/$/;"	m	struct:sha1_ctx
dir_encode	ovn/utilities/ovn-nbctl.c	/^dir_encode(const char *dir)$/;"	f	file:
dir_name	lib/util.c	/^dir_name(const char *file_name)$/;"	f
direct	utilities/ovs-test	/^            direct = ovs_args.direct$/;"	v
direction	lib/sflow.h	/^    u_int32_t direction;   \/* enum SFLExtended_url_direction *\/$/;"	m	struct:_SFLExtended_url
direction	ovn/lib/ovn-nb-idl.h	/^	char *direction;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_acl
direction	vtep/vtep-idl.h	/^	char *direction;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_acl_entry
directory	lib/dirs.c	/^struct directory {$/;"	s	file:
dirname	utilities/bugtool/ovs-bugtool	/^            dirname = BUG_DIR$/;"	v
dirname	utilities/bugtool/ovs-bugtool	/^            dirname = os.path.dirname(output_file)$/;"	v
dirs	debian/ovs-monitor-ipsec	/^import ovs.dirs$/;"	i
dirs	python/ovs/daemon.py	/^import ovs.dirs$/;"	i
dirs	python/ovs/unixctl/server.py	/^import ovs.dirs$/;"	i
dirs	python/ovs/vlog.py	/^import ovs.dirs$/;"	i
dirs	vtep/ovs-vtep	/^import ovs.dirs$/;"	i
dirs	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.dirs$/;"	i
disable	python/ovs/reconnect.py	/^    def disable(self, now):$/;"	m	class:Reconnect
disable_tnl_push_pop	ofproto/ofproto-dpif.c	/^disable_tnl_push_pop(struct unixctl_conn *conn OVS_UNUSED, int argc OVS_UNUSED,$/;"	f	file:
disable_upcall	lib/dpif-provider.h	/^    void (*disable_upcall)(struct dpif *);$/;"	m	struct:dpif_class
disc	lib/bfd.c	/^    uint32_t disc;                \/* bfd.LocalDiscr. Key in 'all_bfds' hmap. *\/$/;"	m	struct:bfd	file:
discards	lib/sflow.h	/^    u_int32_t discards;$/;"	m	struct:_SFLVlan_counters
disconnected	python/ovs/reconnect.py	/^    def disconnected(self, now, error):$/;"	m	class:Reconnect
discover_numa_and_core	lib/ovs-numa.c	/^discover_numa_and_core(void)$/;"	f	file:
discover_types	vswitchd/bridge.c	/^discover_types(const struct ovsrec_open_vswitch *cfg)$/;"	f	file:
disjunction_matches_string	ovn/lib/expr.c	/^disjunction_matches_string(const struct expr *or, const char *s)$/;"	f	file:
disk_list	utilities/bugtool/ovs-bugtool	/^def disk_list():$/;"	f
dispatchLock	datapath-windows/ovsext/Switch.h	/^    PNDIS_RW_LOCK_EX        dispatchLock;$/;"	m	struct:_OVS_SWITCH_CONTEXT
display_conn_state__	lib/netdev-dummy.c	/^display_conn_state__(struct ds *s, const char *name,$/;"	f	file:
dist_check_SCRIPTS	Makefile	/^dist_check_SCRIPTS = tests\/flowgen.pl$/;"	m
dist_check_SCRIPTS	tests/automake.mk	/^dist_check_SCRIPTS = tests\/flowgen.pl$/;"	m
dist_extras	datapath/Makefile	/^dist_extras = $(foreach module,$(dist_modules),$($(module)_extras))$/;"	m
dist_extras	datapath/Modules.mk	/^dist_extras = $(foreach module,$(dist_modules),$($(module)_extras))$/;"	m
dist_headers	datapath/Makefile	/^dist_headers = $(foreach module,$(dist_modules),$($(module)_headers))$/;"	m
dist_headers	datapath/Modules.mk	/^dist_headers = $(foreach module,$(dist_modules),$($(module)_headers))$/;"	m
dist_man_MANS	Makefile	/^dist_man_MANS = $/;"	m
dist_modules	datapath/Makefile	/^dist_modules = $(both_modules)	# Modules to distribute$/;"	m
dist_modules	datapath/Modules.mk	/^dist_modules = $(both_modules)	# Modules to distribute$/;"	m
dist_noinst_SCRIPTS	Makefile	/^dist_noinst_SCRIPTS = ofproto\/ipfix-gen-entities$/;"	m
dist_noinst_SCRIPTS	ofproto/automake.mk	/^dist_noinst_SCRIPTS = ofproto\/ipfix-gen-entities$/;"	m
dist_pkgdata_DATA	Makefile	/^dist_pkgdata_DATA = $/;"	m
dist_pkgdata_SCRIPTS	Makefile	/^dist_pkgdata_SCRIPTS = $/;"	m
dist_sbin_SCRIPTS	Makefile	/^dist_sbin_SCRIPTS = $/;"	m
dist_scripts_DATA	Makefile	/^dist_scripts_DATA = $/;"	m
dist_scripts_SCRIPTS	Makefile	/^dist_scripts_SCRIPTS = $/;"	m
dist_sources	datapath/Makefile	/^dist_sources = $(foreach module,$(dist_modules),$($(module)_sources))$/;"	m
dist_sources	datapath/Modules.mk	/^dist_sources = $(foreach module,$(dist_modules),$($(module)_sources))$/;"	m
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
ditto	tests/testsuite	/^ditto() {$/;"	f
div_double	ovsdb/mutation.c	/^div_double(double *x, double y)$/;"	f	file:
div_int	ovsdb/mutation.c	/^div_int(int64_t *x, int64_t y)$/;"	f	file:
div_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation div_mutation = {$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
div_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation div_mutation;$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
dix	datapath-windows/ovsext/Ethernet.h	/^        Eth_DIX      dix;      \/\/ DIX header follows$/;"	m	union:Eth_802_1pq::__anon17
dix	datapath-windows/ovsext/Ethernet.h	/^        Eth_DIX      dix;      \/\/ followed by a DIX header...$/;"	m	union:Eth_Header::__anon18
dlDst	datapath-windows/ovsext/DpInternal.h	/^    uint8_t dlDst[6];            \/* Ethernet destination address. *\/$/;"	m	struct:L2Key
dlSrc	datapath-windows/ovsext/DpInternal.h	/^    uint8_t dlSrc[6];            \/* Ethernet source address. *\/$/;"	m	struct:L2Key
dlType	datapath-windows/ovsext/DpInternal.h	/^    ovs_be16 dlType;             \/* Ethernet frame type. *\/$/;"	m	struct:L2Key
dl_addr	lib/ofp-actions.c	/^    struct eth_addr dl_addr;        \/* Ethernet address. *\/$/;"	m	struct:ofp_action_dl_addr	typeref:struct:ofp_action_dl_addr::eth_addr	file:
dl_dst	include/openflow/openflow-1.0.h	/^    struct eth_addr dl_dst;    \/* Ethernet destination address. *\/$/;"	m	struct:ofp10_match	typeref:struct:ofp10_match::eth_addr
dl_dst	include/openflow/openflow-1.1.h	/^    struct eth_addr dl_dst;    \/* Ethernet destination address. *\/$/;"	m	struct:ofp11_match	typeref:struct:ofp11_match::eth_addr
dl_dst	lib/flow.h	/^    struct eth_addr dl_dst;     \/* Ethernet destination address. *\/$/;"	m	struct:flow	typeref:struct:flow::eth_addr
dl_dst_mask	include/openflow/openflow-1.1.h	/^    struct eth_addr dl_dst_mask; \/* Ethernet destination address mask. *\/$/;"	m	struct:ofp11_match	typeref:struct:ofp11_match::eth_addr
dl_dst_values	tests/test-classifier.c	/^static struct eth_addr dl_dst_values[] = {$/;"	v	typeref:struct:eth_addr	file:
dl_src	include/openflow/openflow-1.0.h	/^    struct eth_addr dl_src;    \/* Ethernet source address. *\/$/;"	m	struct:ofp10_match	typeref:struct:ofp10_match::eth_addr
dl_src	include/openflow/openflow-1.1.h	/^    struct eth_addr dl_src;    \/* Ethernet source address. *\/$/;"	m	struct:ofp11_match	typeref:struct:ofp11_match::eth_addr
dl_src	lib/flow.h	/^    struct eth_addr dl_src;     \/* Ethernet source address. *\/$/;"	m	struct:flow	typeref:struct:flow::eth_addr
dl_src_mask	include/openflow/openflow-1.1.h	/^    struct eth_addr dl_src_mask; \/* Ethernet source address mask.  *\/$/;"	m	struct:ofp11_match	typeref:struct:ofp11_match::eth_addr
dl_src_values	tests/test-classifier.c	/^static struct eth_addr dl_src_values[] = {$/;"	v	typeref:struct:eth_addr	file:
dl_type	include/openflow/openflow-1.0.h	/^    ovs_be16 dl_type;          \/* Ethernet frame type. *\/$/;"	m	struct:ofp10_match
dl_type	include/openflow/openflow-1.1.h	/^    ovs_be16 dl_type;          \/* Ethernet frame type. *\/$/;"	m	struct:ofp11_match
dl_type	lib/flow.h	/^    ovs_be16 dl_type;           \/* Ethernet frame type. *\/$/;"	m	struct:flow
dl_type	lib/ofp-parse.c	/^    uint16_t dl_type;$/;"	m	struct:protocol	file:
dl_type_is_ip_any	lib/packets.h	/^static inline bool dl_type_is_ip_any(ovs_be16 dl_type)$/;"	f
dl_type_values	tests/test-classifier.c	/^static ovs_be16 dl_type_values[]$/;"	v	file:
dl_vlan	include/openflow/openflow-1.0.h	/^    ovs_be16 dl_vlan;          \/* Input VLAN. *\/$/;"	m	struct:ofp10_match
dl_vlan	include/openflow/openflow-1.1.h	/^    ovs_be16 dl_vlan;          \/* Input VLAN id. *\/$/;"	m	struct:ofp11_match
dl_vlan_pcp	include/openflow/openflow-1.0.h	/^    uint8_t dl_vlan_pcp;       \/* Input VLAN priority. *\/$/;"	m	struct:ofp10_match
dl_vlan_pcp	include/openflow/openflow-1.1.h	/^    uint8_t dl_vlan_pcp;       \/* Input VLAN priority. *\/$/;"	m	struct:ofp11_match
do_GET	utilities/ovs-vlan-test	/^    def do_GET(self):$/;"	m	class:VlanServerHandler
do_activity	tests/test-reconnect.c	/^do_activity(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_activity	tests/test-reconnect.py	/^def do_activity(_):$/;"	f
do_advance	tests/test-reconnect.c	/^do_advance(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_advance	tests/test-reconnect.py	/^def do_advance(arg):$/;"	f
do_bundle_commit	ofproto/ofproto.c	/^do_bundle_commit(struct ofconn *ofconn, uint32_t id, uint16_t flags)$/;"	f	file:
do_ca_cert_bootstrap	lib/stream-ssl.c	/^do_ca_cert_bootstrap(struct stream *stream)$/;"	f	file:
do_compact	ovsdb/ovsdb-tool.c	/^do_compact(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_compare_rows	tests/test-ovsdb.c	/^do_compare_rows(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_connect_failed	tests/test-reconnect.c	/^do_connect_failed(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_connect_failed	tests/test-reconnect.py	/^def do_connect_failed(arg):$/;"	f
do_connected	tests/test-reconnect.c	/^do_connected(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_connected	tests/test-reconnect.py	/^def do_connected(_):$/;"	f
do_connecting	tests/test-reconnect.c	/^do_connecting(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_connecting	tests/test-reconnect.py	/^def do_connecting(_):$/;"	f
do_convert	ovsdb/ovsdb-tool.c	/^do_convert(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_create	ovsdb/ovsdb-tool.c	/^do_create(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_db_cksum	ovsdb/ovsdb-tool.c	/^do_db_cksum(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_db_version	ovsdb/ovsdb-tool.c	/^do_db_version(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_default_atoms	tests/test-ovsdb.c	/^do_default_atoms(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_default_atoms	tests/test-ovsdb.py	/^def do_default_atoms():$/;"	f
do_default_data	tests/test-ovsdb.c	/^do_default_data(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_default_data	tests/test-ovsdb.py	/^def do_default_data():$/;"	f
do_direct_tests	python/ovstest/tests.py	/^def do_direct_tests(node1, node2, bandwidth, duration, ps):$/;"	f
do_disable	tests/test-reconnect.c	/^do_disable(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_disable	tests/test-reconnect.py	/^def do_disable(_):$/;"	f
do_disconnected	tests/test-reconnect.c	/^do_disconnected(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_disconnected	tests/test-reconnect.py	/^def do_disconnected(arg):$/;"	f
do_dump	ovsdb/ovsdb-client.c	/^do_dump(struct jsonrpc *rpc, const char *database,$/;"	f	file:
do_enable	tests/test-reconnect.c	/^do_enable(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_enable	tests/test-reconnect.py	/^def do_enable(_):$/;"	f
do_evaluate_conditions	tests/test-ovsdb.c	/^do_evaluate_conditions(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_execute	tests/test-ovsdb.c	/^do_execute(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_execute_actions	datapath/actions.c	/^static int do_execute_actions(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
do_execute_actions	datapath/linux/actions.c	/^static int do_execute_actions(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
do_execute_mutations	tests/test-ovsdb.c	/^do_execute_mutations(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_force_reconnect	tests/test-reconnect.c	/^do_force_reconnect(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_force_reconnect	tests/test-reconnect.py	/^def do_force_reconnect(_):$/;"	f
do_fork	tests/test-lockfile.c	/^do_fork(void)$/;"	f	file:
do_get_ifindex	lib/netdev-linux.c	/^do_get_ifindex(const char *netdev_name)$/;"	f	file:
do_get_schema	ovsdb/ovsdb-client.c	/^do_get_schema(struct jsonrpc *rpc, const char *database,$/;"	f	file:
do_get_schema_version	ovsdb/ovsdb-client.c	/^do_get_schema_version(struct jsonrpc *rpc, const char *database,$/;"	f	file:
do_help	ovsdb/ovsdb-client.c	/^do_help(struct jsonrpc *rpc OVS_UNUSED, const char *database OVS_UNUSED,$/;"	f	file:
do_help	ovsdb/ovsdb-tool.c	/^do_help(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_help	tests/test-jsonrpc.c	/^do_help(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_help	tests/test-ovsdb.c	/^do_help(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_host_call	xenserver/etc_init.d_openvswitch-xapi-update	/^function do_host_call {$/;"	f
do_idl	tests/test-ovsdb.c	/^do_idl(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_idl	tests/test-ovsdb.py	/^def do_idl(schema_file, remote, *commands):$/;"	f
do_init	lib/uuid.c	/^do_init(void)$/;"	f	file:
do_init_time	lib/timeval.c	/^do_init_time(void)$/;"	f	file:
do_l3_tests	python/ovstest/tests.py	/^def do_l3_tests(node1, node2, bandwidth, duration, ps, type):$/;"	f
do_list_columns	ovsdb/ovsdb-client.c	/^do_list_columns(struct jsonrpc *rpc, const char *database,$/;"	f	file:
do_list_commands	ovsdb/ovsdb-tool.c	/^do_list_commands(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_list_dbs	ovsdb/ovsdb-client.c	/^do_list_dbs(struct jsonrpc *rpc, const char *database OVS_UNUSED,$/;"	f	file:
do_list_tables	ovsdb/ovsdb-client.c	/^do_list_tables(struct jsonrpc *rpc, const char *database,$/;"	f	file:
do_listen	tests/test-jsonrpc.c	/^do_listen(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_listen	tests/test-jsonrpc.py	/^def do_listen(name):$/;"	f
do_listen_error	tests/test-reconnect.c	/^do_listen_error(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_listen_error	tests/test-reconnect.py	/^def do_listen_error(arg):$/;"	f
do_listening	tests/test-reconnect.c	/^do_listening(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_listening	tests/test-reconnect.py	/^def do_listening(_):$/;"	f
do_log_io	tests/test-ovsdb.c	/^do_log_io(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_lookup_genl_family	lib/netlink-socket.c	/^do_lookup_genl_family(const char *name, struct nlattr **attrs,$/;"	f	file:
do_monitor	ovsdb/ovsdb-client.c	/^do_monitor(struct jsonrpc *rpc, const char *database,$/;"	f	file:
do_nbctl	ovn/utilities/ovn-nbctl.c	/^do_nbctl(const char *args, struct ctl_command *commands, size_t n_commands,$/;"	f	file:
do_needs_conversion	ovsdb/ovsdb-tool.c	/^do_needs_conversion(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_notify	tests/test-jsonrpc.c	/^do_notify(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_notify	tests/test-jsonrpc.py	/^def do_notify(name, method, params_string):$/;"	f
do_open	lib/dpif.c	/^do_open(const char *name, const char *type, bool create, struct dpif **dpifp)$/;"	f	file:
do_output	datapath/actions.c	/^static void do_output(struct datapath *dp, struct sk_buff *skb, int out_port)$/;"	f	file:
do_output	datapath/linux/actions.c	/^static void do_output(struct datapath *dp, struct sk_buff *skb, int out_port)$/;"	f	file:
do_parse_atom_strings	tests/test-ovsdb.c	/^do_parse_atom_strings(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_atomic_type	tests/test-ovsdb.c	/^do_parse_atomic_type(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_atomic_type	tests/test-ovsdb.py	/^def do_parse_atomic_type(type_string):$/;"	f
do_parse_atoms	tests/test-ovsdb.c	/^do_parse_atoms(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_atoms	tests/test-ovsdb.py	/^def do_parse_atoms(type_string, *atom_strings):$/;"	f
do_parse_base_type	tests/test-ovsdb.c	/^do_parse_base_type(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_base_type	tests/test-ovsdb.py	/^def do_parse_base_type(type_string):$/;"	f
do_parse_column	tests/test-ovsdb.c	/^do_parse_column(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_column	tests/test-ovsdb.py	/^def do_parse_column(name, column_string):$/;"	f
do_parse_conditions	tests/test-ovsdb.c	/^do_parse_conditions(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_data	tests/test-ovsdb.c	/^do_parse_data(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_data	tests/test-ovsdb.py	/^def do_parse_data(type_string, *data_strings):$/;"	f
do_parse_data__	tests/test-ovsdb.c	/^do_parse_data__(int argc, char *argv[],$/;"	f	file:
do_parse_data_strings	tests/test-ovsdb.c	/^do_parse_data_strings(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_mutations	tests/test-ovsdb.c	/^do_parse_mutations(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_rows	tests/test-ovsdb.c	/^do_parse_rows(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_schema	tests/test-ovsdb.c	/^do_parse_schema(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_schema	tests/test-ovsdb.py	/^def do_parse_schema(schema_string):$/;"	f
do_parse_table	tests/test-ovsdb.c	/^do_parse_table(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_table	tests/test-ovsdb.py	/^def do_parse_table(name, table_string, default_is_root_string='false'):$/;"	f
do_parse_type	tests/test-ovsdb.c	/^do_parse_type(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_parse_type	tests/test-ovsdb.py	/^def do_parse_type(type_string):$/;"	f
do_poll	utilities/ovs-benchmark.c	/^do_poll(struct pollfd *fds, int nfds, int timeout)$/;"	f	file:
do_query	ovsdb/ovsdb-tool.c	/^do_query(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_query	tests/test-ovsdb.c	/^do_query(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_query_cb	tests/test-ovsdb.c	/^do_query_cb(const struct ovsdb_row *row, void *cbdata_)$/;"	f	file:
do_query_cbdata	tests/test-ovsdb.c	/^struct do_query_cbdata {$/;"	s	file:
do_query_distinct	tests/test-ovsdb.c	/^do_query_distinct(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_query_distinct_class	tests/test-ovsdb.c	/^struct do_query_distinct_class {$/;"	s	file:
do_query_distinct_row	tests/test-ovsdb.c	/^struct do_query_distinct_row {$/;"	s	file:
do_recv	lib/vconn.c	/^do_recv(struct vconn *vconn, struct ofpbuf **msgp)$/;"	f	file:
do_request	tests/test-jsonrpc.c	/^do_request(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_request	tests/test-jsonrpc.py	/^def do_request(name, method, params_string):$/;"	f
do_run	tests/test-reconnect.c	/^do_run(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_run	tests/test-reconnect.py	/^def do_run(arg):$/;"	f
do_sbctl	ovn/utilities/ovn-sbctl.c	/^do_sbctl(const char *args, struct ctl_command *commands, size_t n_commands,$/;"	f	file:
do_schema_cksum	ovsdb/ovsdb-tool.c	/^do_schema_cksum(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_schema_version	ovsdb/ovsdb-tool.c	/^do_schema_version(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_send	lib/vconn.c	/^do_send(struct vconn *vconn, struct ofpbuf *msg)$/;"	f	file:
do_send_packet_ins	ofproto/connmgr.c	/^do_send_packet_ins(struct ofconn *ofconn, struct ovs_list *txq)$/;"	f	file:
do_set_addr	lib/netdev-bsd.c	/^do_set_addr(struct netdev *netdev,$/;"	f	file:
do_set_addr	lib/netdev-linux.c	/^do_set_addr(struct netdev *netdev,$/;"	f	file:
do_set_max_tries	tests/test-reconnect.c	/^do_set_max_tries(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_set_max_tries	tests/test-reconnect.py	/^def do_set_max_tries(arg):$/;"	f
do_set_passive	tests/test-reconnect.c	/^do_set_passive(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_set_passive	tests/test-reconnect.py	/^def do_set_passive(_):$/;"	f
do_set_pattern	lib/vlog.c	/^do_set_pattern(enum vlog_destination destination, const char *pattern)$/;"	f	file:
do_setup	datapath/linux/vport-internal_dev.c	/^static void do_setup(struct net_device *netdev)$/;"	f	file:
do_setup	datapath/vport-internal_dev.c	/^static void do_setup(struct net_device *netdev)$/;"	f	file:
do_show_log	ovsdb/ovsdb-tool.c	/^do_show_log(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_sort_atoms	tests/test-ovsdb.c	/^do_sort_atoms(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_sort_atoms	tests/test-ovsdb.py	/^def do_sort_atoms(type_string, atom_strings):$/;"	f
do_ssl_init	lib/stream-ssl.c	/^do_ssl_init(void)$/;"	f	file:
do_tcp_tests	python/ovstest/tests.py	/^def do_tcp_tests(receiver, sender, duration):$/;"	f
do_timeout	tests/test-reconnect.c	/^do_timeout(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_timeout	tests/test-reconnect.py	/^def do_timeout(_):$/;"	f
do_transact	ovsdb/ovsdb-client.c	/^do_transact(struct jsonrpc *rpc, const char *database OVS_UNUSED,$/;"	f	file:
do_transact	ovsdb/ovsdb-tool.c	/^do_transact(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_transact	tests/test-ovsdb.c	/^do_transact(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_transact_abort	tests/test-ovsdb.c	/^do_transact_abort(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_transact_commit	tests/test-ovsdb.c	/^do_transact_commit(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_transact_db	tests/test-ovsdb.c	/^static struct ovsdb *do_transact_db;$/;"	v	typeref:struct:ovsdb	file:
do_transact_delete	tests/test-ovsdb.c	/^do_transact_delete(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_transact_find_row	tests/test-ovsdb.c	/^do_transact_find_row(const char *uuid_string)$/;"	f	file:
do_transact_get_integer	tests/test-ovsdb.c	/^do_transact_get_integer(const struct ovsdb_row *row, const char *column_name)$/;"	f	file:
do_transact_insert	tests/test-ovsdb.c	/^do_transact_insert(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_transact_modify	tests/test-ovsdb.c	/^do_transact_modify(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_transact_print	tests/test-ovsdb.c	/^do_transact_print(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
do_transact_set_i_j	tests/test-ovsdb.c	/^do_transact_set_i_j(struct ovsdb_row *row,$/;"	f	file:
do_transact_set_integer	tests/test-ovsdb.c	/^do_transact_set_integer(struct ovsdb_row *row, const char *column_name,$/;"	f	file:
do_transact_table	tests/test-ovsdb.c	/^static struct ovsdb_table *do_transact_table;$/;"	v	typeref:struct:ovsdb_table	file:
do_transact_txn	tests/test-ovsdb.c	/^static struct ovsdb_txn *do_transact_txn;$/;"	v	typeref:struct:ovsdb_txn	file:
do_trigger	tests/test-ovsdb.c	/^do_trigger(struct ovs_cmdl_context *ctx)$/;"	f	file:
do_trigger_dump	tests/test-ovsdb.c	/^do_trigger_dump(struct test_trigger *t, long long int now, const char *title)$/;"	f	file:
do_udp_tests	python/ovstest/tests.py	/^def do_udp_tests(receiver, sender, tbwidth, duration, port_sizes):$/;"	f
do_unlink_files	lib/fatal-signal.c	/^do_unlink_files(void)$/;"	f	file:
do_vlan_ioctl	lib/vlandev.c	/^do_vlan_ioctl(const char *netdev_name, struct vlan_ioctl_args *via,$/;"	f	file:
do_vlan_tests	python/ovstest/tests.py	/^def do_vlan_tests(node1, node2, bandwidth, duration, ps, tag):$/;"	f
do_vsctl	utilities/ovs-vsctl.c	/^do_vsctl(const char *args, struct ctl_command *commands, size_t n_commands,$/;"	f	file:
do_vtep_ctl	vtep/vtep-ctl.c	/^do_vtep_ctl(const char *args, struct ctl_command *commands,$/;"	f	file:
do_xlate_actions	ofproto/ofproto-dpif-xlate.c	/^do_xlate_actions(const struct ofpact *ofpacts, size_t ofpacts_len,$/;"	f	file:
doc	utilities/ovs-dev.py	/^def doc():$/;"	f
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	datapath/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docs	Makefile	/^docs = CONTRIBUTING.md CodingStyle.md DESIGN.md FAQ.md INSTALL.md \\$/;"	m
docsToNroff	ovsdb/ovsdb-doc	/^def docsToNroff(schemaFile, xmlFile, erFile, version=None):$/;"	f
documented_tables	ovsdb/ovsdb-doc	/^    documented_tables = set((name for (name, title) in summary))$/;"	v
doff	datapath-windows/ovsext/NetProto.h	/^             doff:4,$/;"	m	struct:TCPHdr
dom	build-aux/xml2nroff	/^import xml.dom.minidom$/;"	i
dom	ovsdb/ovsdb-doc	/^import xml.dom.minidom$/;"	i
done	include/openvswitch/thread.h	/^    bool done;               \/* Non-atomic, false negatives possible. *\/$/;"	m	struct:ovsthread_once
done	lib/json.c	/^    bool done;$/;"	m	struct:json_parser	file:
dont_fragment	lib/netdev.h	/^    bool dont_fragment;$/;"	m	struct:netdev_tunnel_config
dont_learn	datapath/linux/compat/include/net/vxlan.h	/^		dont_learn:1,$/;"	m	struct:vxlanhdr_gbp
dop	ofproto/ofproto-dpif-upcall.c	/^    struct dpif_op dop;           \/* Flow operation. *\/$/;"	m	struct:ukey_op	typeref:struct:ukey_op::dpif_op	file:
dot12HCInHighPriorityOctets	lib/sflow.h	/^    u_int64_t dot12HCInHighPriorityOctets;$/;"	m	struct:_SFLVg_counters
dot12HCInNormPriorityOctets	lib/sflow.h	/^    u_int64_t dot12HCInNormPriorityOctets;$/;"	m	struct:_SFLVg_counters
dot12HCOutHighPriorityOctets	lib/sflow.h	/^    u_int64_t dot12HCOutHighPriorityOctets;$/;"	m	struct:_SFLVg_counters
dot12InDataErrors	lib/sflow.h	/^    u_int32_t dot12InDataErrors;$/;"	m	struct:_SFLVg_counters
dot12InHighPriorityFrames	lib/sflow.h	/^    u_int32_t dot12InHighPriorityFrames;$/;"	m	struct:_SFLVg_counters
dot12InHighPriorityOctets	lib/sflow.h	/^    u_int64_t dot12InHighPriorityOctets;$/;"	m	struct:_SFLVg_counters
dot12InIPMErrors	lib/sflow.h	/^    u_int32_t dot12InIPMErrors;$/;"	m	struct:_SFLVg_counters
dot12InNormPriorityFrames	lib/sflow.h	/^    u_int32_t dot12InNormPriorityFrames;$/;"	m	struct:_SFLVg_counters
dot12InNormPriorityOctets	lib/sflow.h	/^    u_int64_t dot12InNormPriorityOctets;$/;"	m	struct:_SFLVg_counters
dot12InNullAddressedFrames	lib/sflow.h	/^    u_int32_t dot12InNullAddressedFrames;$/;"	m	struct:_SFLVg_counters
dot12InOversizeFrameErrors	lib/sflow.h	/^    u_int32_t dot12InOversizeFrameErrors;$/;"	m	struct:_SFLVg_counters
dot12OutHighPriorityFrames	lib/sflow.h	/^    u_int32_t dot12OutHighPriorityFrames;$/;"	m	struct:_SFLVg_counters
dot12OutHighPriorityOctets	lib/sflow.h	/^    u_int64_t dot12OutHighPriorityOctets;$/;"	m	struct:_SFLVg_counters
dot12TransitionIntoTrainings	lib/sflow.h	/^    u_int32_t dot12TransitionIntoTrainings;$/;"	m	struct:_SFLVg_counters
dot3StatsAlignmentErrors	lib/sflow.h	/^    u_int32_t dot3StatsAlignmentErrors;$/;"	m	struct:_SFLEthernet_counters
dot3StatsCarrierSenseErrors	lib/sflow.h	/^    u_int32_t dot3StatsCarrierSenseErrors;$/;"	m	struct:_SFLEthernet_counters
dot3StatsDeferredTransmissions	lib/sflow.h	/^    u_int32_t dot3StatsDeferredTransmissions;$/;"	m	struct:_SFLEthernet_counters
dot3StatsExcessiveCollisions	lib/sflow.h	/^    u_int32_t dot3StatsExcessiveCollisions;$/;"	m	struct:_SFLEthernet_counters
dot3StatsFCSErrors	lib/sflow.h	/^    u_int32_t dot3StatsFCSErrors;$/;"	m	struct:_SFLEthernet_counters
dot3StatsFrameTooLongs	lib/sflow.h	/^    u_int32_t dot3StatsFrameTooLongs;$/;"	m	struct:_SFLEthernet_counters
dot3StatsInternalMacReceiveErrors	lib/sflow.h	/^    u_int32_t dot3StatsInternalMacReceiveErrors;$/;"	m	struct:_SFLEthernet_counters
dot3StatsInternalMacTransmitErrors	lib/sflow.h	/^    u_int32_t dot3StatsInternalMacTransmitErrors;$/;"	m	struct:_SFLEthernet_counters
dot3StatsLateCollisions	lib/sflow.h	/^    u_int32_t dot3StatsLateCollisions;$/;"	m	struct:_SFLEthernet_counters
dot3StatsMultipleCollisionFrames	lib/sflow.h	/^    u_int32_t dot3StatsMultipleCollisionFrames;$/;"	m	struct:_SFLEthernet_counters
dot3StatsSQETestErrors	lib/sflow.h	/^    u_int32_t dot3StatsSQETestErrors;$/;"	m	struct:_SFLEthernet_counters
dot3StatsSingleCollisionFrames	lib/sflow.h	/^    u_int32_t dot3StatsSingleCollisionFrames;$/;"	m	struct:_SFLEthernet_counters
dot3StatsSymbolErrors	lib/sflow.h	/^    u_int32_t dot3StatsSymbolErrors;$/;"	m	struct:_SFLEthernet_counters
dot3adAggPortActorAdminState	lib/lacp.h	/^    uint8_t dot3adAggPortActorAdminState;$/;"	m	struct:lacp_slave_stats
dot3adAggPortActorOperState	lib/lacp.h	/^    uint8_t dot3adAggPortActorOperState;$/;"	m	struct:lacp_slave_stats
dot3adAggPortActorSystemID	lib/lacp.h	/^    struct eth_addr dot3adAggPortActorSystemID;$/;"	m	struct:lacp_slave_stats	typeref:struct:lacp_slave_stats::eth_addr
dot3adAggPortAttachedAggID	lib/lacp.h	/^    uint32_t dot3adAggPortAttachedAggID;$/;"	m	struct:lacp_slave_stats
dot3adAggPortPartnerAdminState	lib/lacp.h	/^    uint8_t dot3adAggPortPartnerAdminState;$/;"	m	struct:lacp_slave_stats
dot3adAggPortPartnerOperState	lib/lacp.h	/^    uint8_t dot3adAggPortPartnerOperState;$/;"	m	struct:lacp_slave_stats
dot3adAggPortPartnerOperSystemID	lib/lacp.h	/^    struct eth_addr dot3adAggPortPartnerOperSystemID;$/;"	m	struct:lacp_slave_stats	typeref:struct:lacp_slave_stats::eth_addr
dot3adAggPortStatsIllegalRx	lib/lacp.h	/^    uint32_t dot3adAggPortStatsIllegalRx;$/;"	m	struct:lacp_slave_stats
dot3adAggPortStatsLACPDUsRx	lib/lacp.h	/^    uint32_t dot3adAggPortStatsLACPDUsRx;$/;"	m	struct:lacp_slave_stats
dot3adAggPortStatsLACPDUsTx	lib/lacp.h	/^    uint32_t dot3adAggPortStatsLACPDUsTx;$/;"	m	struct:lacp_slave_stats
dot5StatsACErrors	lib/sflow.h	/^    u_int32_t dot5StatsACErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsAbortTransErrors	lib/sflow.h	/^    u_int32_t dot5StatsAbortTransErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsBurstErrors	lib/sflow.h	/^    u_int32_t dot5StatsBurstErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsFrameCopiedErrors	lib/sflow.h	/^    u_int32_t dot5StatsFrameCopiedErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsFreqErrors	lib/sflow.h	/^    u_int32_t dot5StatsFreqErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsHardErrors	lib/sflow.h	/^    u_int32_t dot5StatsHardErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsInternalErrors	lib/sflow.h	/^    u_int32_t dot5StatsInternalErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsLineErrors	lib/sflow.h	/^    u_int32_t dot5StatsLineErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsLobeWires	lib/sflow.h	/^    u_int32_t dot5StatsLobeWires;$/;"	m	struct:_SFLTokenring_counters
dot5StatsLostFrameErrors	lib/sflow.h	/^    u_int32_t dot5StatsLostFrameErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsReceiveCongestions	lib/sflow.h	/^    u_int32_t dot5StatsReceiveCongestions;$/;"	m	struct:_SFLTokenring_counters
dot5StatsRecoverys	lib/sflow.h	/^    u_int32_t dot5StatsRecoverys;$/;"	m	struct:_SFLTokenring_counters
dot5StatsRemoves	lib/sflow.h	/^    u_int32_t dot5StatsRemoves;$/;"	m	struct:_SFLTokenring_counters
dot5StatsSignalLoss	lib/sflow.h	/^    u_int32_t dot5StatsSignalLoss;$/;"	m	struct:_SFLTokenring_counters
dot5StatsSingles	lib/sflow.h	/^    u_int32_t dot5StatsSingles;$/;"	m	struct:_SFLTokenring_counters
dot5StatsSoftErrors	lib/sflow.h	/^    u_int32_t dot5StatsSoftErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsTokenErrors	lib/sflow.h	/^    u_int32_t dot5StatsTokenErrors;$/;"	m	struct:_SFLTokenring_counters
dot5StatsTransmitBeacons	lib/sflow.h	/^    u_int32_t dot5StatsTransmitBeacons;$/;"	m	struct:_SFLTokenring_counters
down_delay	ofproto/bond.h	/^    int down_delay;             \/* ms before disabling a down slave. *\/$/;"	m	struct:bond_settings
downdelay	ofproto/bond.c	/^    int updelay, downdelay;     \/* Delay before slave goes up\/down, in ms. *\/$/;"	m	struct:bond	file:
dp	datapath/vport.h	/^	struct datapath	*dp;$/;"	m	struct:vport	typeref:struct:vport::datapath
dp	datapath/vport.h	/^	struct datapath *dp;$/;"	m	struct:vport_parms	typeref:struct:vport_parms::datapath
dp	lib/dpif-netdev.c	/^    struct dp_netdev *dp;$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::dp_netdev	file:
dp	lib/dpif-netdev.c	/^    struct dp_netdev *dp;$/;"	m	struct:dpif_netdev	typeref:struct:dpif_netdev::dp_netdev	file:
dpNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t dpNo;$/;"	m	struct:OvsFlowDumpInput
dpNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t dpNo;$/;"	m	struct:OvsFlowGetInput
dpNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t dpNo;$/;"	m	struct:OvsFlowPut
dpNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t dpNo;$/;"	m	struct:_OVS_EVENT_POLL
dpNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t dpNo;$/;"	m	struct:_OVS_EVENT_SUBSCRIBE
dpNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t dpNo;$/;"	m	struct:_OVS_VPORT_EXT_INFO
dpNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t dpNo;$/;"	m	struct:_OVS_VPORT_GET
dpNo	datapath-windows/ovsext/DpInternal.h	/^   uint32_t dpNo;$/;"	m	struct:OvsPacketExecute
dpNo	datapath-windows/ovsext/Switch.h	/^    UINT32                  dpNo;$/;"	m	struct:_OVS_SWITCH_CONTEXT
dp_blacklist_provider	lib/dpif.c	/^dp_blacklist_provider(const char *type)$/;"	f
dp_cb	datapath/linux/compat/gso.h	/^	struct ovs_skb_cb dp_cb;$/;"	m	struct:ovs_gso_cb	typeref:struct:ovs_gso_cb::ovs_skb_cb
dp_class_lookup	lib/dpif.c	/^dp_class_lookup(const char *type)$/;"	f	file:
dp_class_unref	lib/dpif.c	/^dp_class_unref(struct registered_dpif_class *rc)$/;"	f	file:
dp_cleanup	datapath/datapath.c	/^module_exit(dp_cleanup);$/;"	v
dp_cleanup	datapath/datapath.c	/^static void dp_cleanup(void)$/;"	f	file:
dp_cleanup	datapath/linux/datapath.c	/^module_exit(dp_cleanup);$/;"	v
dp_cleanup	datapath/linux/datapath.c	/^static void dp_cleanup(void)$/;"	f	file:
dp_datapath_genl_family	datapath/datapath.c	/^static struct genl_family dp_datapath_genl_family = {$/;"	v	typeref:struct:genl_family	file:
dp_datapath_genl_family	datapath/datapath.c	/^static struct genl_family dp_datapath_genl_family;$/;"	v	typeref:struct:genl_family	file:
dp_datapath_genl_family	datapath/linux/datapath.c	/^static struct genl_family dp_datapath_genl_family = {$/;"	v	typeref:struct:genl_family	file:
dp_datapath_genl_family	datapath/linux/datapath.c	/^static struct genl_family dp_datapath_genl_family;$/;"	v	typeref:struct:genl_family	file:
dp_datapath_genl_ops	datapath/datapath.c	/^static struct genl_ops dp_datapath_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dp_datapath_genl_ops	datapath/linux/datapath.c	/^static struct genl_ops dp_datapath_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dp_desc	include/openflow/openflow-common.h	/^    char dp_desc[DESC_STR_LEN];        \/* Human readable description of$/;"	m	struct:ofp_desc_stats
dp_desc	ofproto/ofproto-provider.h	/^    char *dp_desc;              \/* Datapath description (NULL for default). *\/$/;"	m	struct:ofproto
dp_detach_port_notify	datapath/dp_notify.c	/^static void dp_detach_port_notify(struct vport *vport)$/;"	f	file:
dp_detach_port_notify	datapath/linux/dp_notify.c	/^static void dp_detach_port_notify(struct vport *vport)$/;"	f	file:
dp_device_event	datapath/dp_notify.c	/^static int dp_device_event(struct notifier_block *unused, unsigned long event,$/;"	f	file:
dp_device_event	datapath/linux/dp_notify.c	/^static int dp_device_event(struct notifier_block *unused, unsigned long event,$/;"	f	file:
dp_enumerate_names	lib/dpif.c	/^dp_enumerate_names(const char *type, struct sset *names)$/;"	f
dp_enumerate_types	lib/dpif.c	/^dp_enumerate_types(struct sset *types)$/;"	f
dp_flow_genl_family	datapath/datapath.c	/^static struct genl_family dp_flow_genl_family = {$/;"	v	typeref:struct:genl_family	file:
dp_flow_genl_family	datapath/datapath.c	/^static struct genl_family dp_flow_genl_family;$/;"	v	typeref:struct:genl_family	file:
dp_flow_genl_family	datapath/linux/datapath.c	/^static struct genl_family dp_flow_genl_family = {$/;"	v	typeref:struct:genl_family	file:
dp_flow_genl_family	datapath/linux/datapath.c	/^static struct genl_family dp_flow_genl_family;$/;"	v	typeref:struct:genl_family	file:
dp_flow_genl_ops	datapath/datapath.c	/^static struct genl_ops dp_flow_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dp_flow_genl_ops	datapath/linux/datapath.c	/^static struct genl_ops dp_flow_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dp_genl_families	datapath/datapath.c	/^static struct genl_family *dp_genl_families[] = {$/;"	v	typeref:struct:genl_family	file:
dp_genl_families	datapath/linux/datapath.c	/^static struct genl_family *dp_genl_families[] = {$/;"	v	typeref:struct:genl_family	file:
dp_hash	lib/flow.h	/^    uint32_t dp_hash;           \/* Datapath computed hash value. The exact$/;"	m	struct:flow
dp_hash	lib/packets.h	/^    uint32_t dp_hash;           \/* hash value computed by the recirculation$/;"	m	struct:pkt_metadata
dp_hash_node	datapath/vport.h	/^	struct hlist_node dp_hash_node;$/;"	m	struct:vport	typeref:struct:vport::hlist_node
dp_ifindex	datapath/linux/compat/include/linux/openvswitch.h	/^	int dp_ifindex;$/;"	m	struct:ovs_header
dp_ifindex	include/odp-netlink.h	/^	int dp_ifindex;$/;"	m	struct:ovs_header
dp_ifindex	lib/dpif-netlink.c	/^    int dp_ifindex;$/;"	m	struct:dpif_netlink	file:
dp_ifindex	lib/dpif-netlink.c	/^    int dp_ifindex;$/;"	m	struct:dpif_netlink_dp	file:
dp_ifindex	lib/dpif-netlink.c	/^    int dp_ifindex;$/;"	m	struct:dpif_netlink_flow	file:
dp_ifindex	lib/dpif-netlink.h	/^    int dp_ifindex;$/;"	m	struct:dpif_netlink_vport
dp_ifindex	lib/netdev-windows.c	/^    uint32_t dp_ifindex;$/;"	m	struct:netdev_windows_netdev_info	file:
dp_init	datapath/datapath.c	/^module_init(dp_init);$/;"	v
dp_init	datapath/datapath.c	/^static int __init dp_init(void)$/;"	f	file:
dp_init	datapath/linux/datapath.c	/^module_init(dp_init);$/;"	v
dp_init	datapath/linux/datapath.c	/^static int __init dp_init(void)$/;"	f	file:
dp_initialize	lib/dpif.c	/^dp_initialize(void)$/;"	f	file:
dp_list	utilities/bugtool/ovs-bugtool	/^def dp_list():$/;"	f
dp_netdev	lib/dpif-netdev.c	/^struct dp_netdev {$/;"	s	file:
dp_netdev_actions	lib/dpif-netdev.c	/^struct dp_netdev_actions {$/;"	s	file:
dp_netdev_actions_create	lib/dpif-netdev.c	/^dp_netdev_actions_create(const struct nlattr *actions, size_t size)$/;"	f
dp_netdev_actions_free	lib/dpif-netdev.c	/^dp_netdev_actions_free(struct dp_netdev_actions *actions)$/;"	f	file:
dp_netdev_clone_pkt_batch	lib/dpif-netdev.c	/^dp_netdev_clone_pkt_batch(struct dp_packet **dst_pkts,$/;"	f	file:
dp_netdev_configure_pmd	lib/dpif-netdev.c	/^dp_netdev_configure_pmd(struct dp_netdev_pmd_thread *pmd, struct dp_netdev *dp,$/;"	f	file:
dp_netdev_count_packet	lib/dpif-netdev.c	/^dp_netdev_count_packet(struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
dp_netdev_del_pmd	lib/dpif-netdev.c	/^dp_netdev_del_pmd(struct dp_netdev *dp, struct dp_netdev_pmd_thread *pmd)$/;"	f	file:
dp_netdev_del_pmds_on_numa	lib/dpif-netdev.c	/^dp_netdev_del_pmds_on_numa(struct dp_netdev *dp, int numa_id)$/;"	f	file:
dp_netdev_destroy_all_pmds	lib/dpif-netdev.c	/^dp_netdev_destroy_all_pmds(struct dp_netdev *dp)$/;"	f	file:
dp_netdev_destroy_pmd	lib/dpif-netdev.c	/^dp_netdev_destroy_pmd(struct dp_netdev_pmd_thread *pmd)$/;"	f	file:
dp_netdev_drop_packets	lib/dpif-netdev.c	/^dp_netdev_drop_packets(struct dp_packet **packets, int cnt, bool may_steal)$/;"	f	file:
dp_netdev_execute_actions	lib/dpif-netdev.c	/^dp_netdev_execute_actions(struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
dp_netdev_execute_aux	lib/dpif-netdev.c	/^struct dp_netdev_execute_aux {$/;"	s	file:
dp_netdev_flow	lib/dpif-netdev.c	/^struct dp_netdev_flow {$/;"	s	file:
dp_netdev_flow_cast	lib/dpif-netdev.c	/^dp_netdev_flow_cast(const struct dpcls_rule *cr)$/;"	f	file:
dp_netdev_flow_free	lib/dpif-netdev.c	/^dp_netdev_flow_free(struct dp_netdev_flow *flow)$/;"	f	file:
dp_netdev_flow_get_actions	lib/dpif-netdev.c	/^dp_netdev_flow_get_actions(const struct dp_netdev_flow *flow)$/;"	f
dp_netdev_flow_hash	lib/dpif-netdev.c	/^dp_netdev_flow_hash(const ovs_u128 *ufid)$/;"	f	file:
dp_netdev_flow_ref	lib/dpif-netdev.c	/^static bool dp_netdev_flow_ref(struct dp_netdev_flow *flow)$/;"	f	file:
dp_netdev_flow_stats	lib/dpif-netdev.c	/^struct dp_netdev_flow_stats {$/;"	s	file:
dp_netdev_flow_to_dpif_flow	lib/dpif-netdev.c	/^dp_netdev_flow_to_dpif_flow(const struct dp_netdev_flow *netdev_flow,$/;"	f	file:
dp_netdev_flow_unref	lib/dpif-netdev.c	/^static void dp_netdev_flow_unref(struct dp_netdev_flow *flow)$/;"	f	file:
dp_netdev_flow_used	lib/dpif-netdev.c	/^dp_netdev_flow_used(struct dp_netdev_flow *netdev_flow, int cnt, int size,$/;"	f	file:
dp_netdev_get_pmd	lib/dpif-netdev.c	/^dp_netdev_get_pmd(struct dp_netdev *dp, unsigned core_id)$/;"	f	file:
dp_netdev_input	lib/dpif-netdev.c	/^dp_netdev_input(struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
dp_netdev_lookup_port	lib/dpif-netdev.c	/^dp_netdev_lookup_port(const struct dp_netdev *dp, odp_port_t port_no)$/;"	f	file:
dp_netdev_mutex	lib/dpif-netdev.c	/^    OVS_REQUIRES(dp_netdev_mutex);$/;"	v
dp_netdev_mutex	lib/dpif-netdev.c	/^static struct ovs_mutex dp_netdev_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
dp_netdev_mutex	lib/dpif-netdev.c	/^static struct shash dp_netdevs OVS_GUARDED_BY(dp_netdev_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
dp_netdev_pmd_cycles	lib/dpif-netdev.c	/^struct dp_netdev_pmd_cycles {$/;"	s	file:
dp_netdev_pmd_find_flow	lib/dpif-netdev.c	/^dp_netdev_pmd_find_flow(const struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
dp_netdev_pmd_flow_flush	lib/dpif-netdev.c	/^dp_netdev_pmd_flow_flush(struct dp_netdev_pmd_thread *pmd)$/;"	f	file:
dp_netdev_pmd_get_next	lib/dpif-netdev.c	/^dp_netdev_pmd_get_next(struct dp_netdev *dp, struct cmap_position *pos)$/;"	f	file:
dp_netdev_pmd_lookup_flow	lib/dpif-netdev.c	/^dp_netdev_pmd_lookup_flow(const struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
dp_netdev_pmd_reload_done	lib/dpif-netdev.c	/^dp_netdev_pmd_reload_done(struct dp_netdev_pmd_thread *pmd)$/;"	f
dp_netdev_pmd_stats	lib/dpif-netdev.c	/^struct dp_netdev_pmd_stats {$/;"	s	file:
dp_netdev_pmd_thread	lib/dpif-netdev.c	/^struct dp_netdev_pmd_thread {$/;"	s	file:
dp_netdev_pmd_try_ref	lib/dpif-netdev.c	/^dp_netdev_pmd_try_ref(struct dp_netdev_pmd_thread *pmd)$/;"	f	file:
dp_netdev_pmd_unref	lib/dpif-netdev.c	/^dp_netdev_pmd_unref(struct dp_netdev_pmd_thread *pmd)$/;"	f	file:
dp_netdev_port	lib/dpif-netdev.c	/^struct dp_netdev_port {$/;"	s	file:
dp_netdev_port_state	lib/dpif-netdev.c	/^struct dp_netdev_port_state {$/;"	s	file:
dp_netdev_process_rxq_port	lib/dpif-netdev.c	/^dp_netdev_process_rxq_port(struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
dp_netdev_queue_batches	lib/dpif-netdev.c	/^dp_netdev_queue_batches(struct dp_packet *pkt,$/;"	f	file:
dp_netdev_reload_pmd__	lib/dpif-netdev.c	/^dp_netdev_reload_pmd__(struct dp_netdev_pmd_thread *pmd)$/;"	f	file:
dp_netdev_reload_pmds	lib/dpif-netdev.c	/^dp_netdev_reload_pmds(struct dp_netdev *dp)$/;"	f	file:
dp_netdev_reset_pmd_threads	lib/dpif-netdev.c	/^dp_netdev_reset_pmd_threads(struct dp_netdev *dp)$/;"	f	file:
dp_netdev_set_nonpmd	lib/dpif-netdev.c	/^dp_netdev_set_nonpmd(struct dp_netdev *dp)$/;"	f	file:
dp_netdev_set_pmds_on_numa	lib/dpif-netdev.c	/^dp_netdev_set_pmds_on_numa(struct dp_netdev *dp, int numa_id)$/;"	f	file:
dp_netdev_support	lib/dpif-netdev.c	/^static struct odp_support dp_netdev_support = {$/;"	v	typeref:struct:odp_support	file:
dp_netdev_unref	lib/dpif-netdev.c	/^dp_netdev_unref(struct dp_netdev *dp)$/;"	f	file:
dp_netdev_upcall	lib/dpif-netdev.c	/^dp_netdev_upcall(struct dp_netdev_pmd_thread *pmd, struct dp_packet *packet_,$/;"	f	file:
dp_notify_work	datapath/datapath.h	/^	struct work_struct dp_notify_work;$/;"	m	struct:ovs_net	typeref:struct:ovs_net::work_struct
dp_packet	lib/dp-packet.h	/^struct dp_packet {$/;"	s
dp_packet_adjust_layer_offset	lib/dp-packet.c	/^dp_packet_adjust_layer_offset(uint16_t *offset, int increment)$/;"	f	file:
dp_packet_at	lib/dp-packet.h	/^dp_packet_at(const struct dp_packet *b, size_t offset, size_t size)$/;"	f
dp_packet_at_assert	lib/dp-packet.h	/^dp_packet_at_assert(const struct dp_packet *b, size_t offset, size_t size)$/;"	f
dp_packet_base	lib/dp-packet.h	/^dp_packet_base(const struct dp_packet *b)$/;"	f
dp_packet_clear	lib/dp-packet.h	/^dp_packet_clear(struct dp_packet *b)$/;"	f
dp_packet_clone	lib/dp-packet.c	/^dp_packet_clone(const struct dp_packet *buffer)$/;"	f
dp_packet_clone_data	lib/dp-packet.c	/^dp_packet_clone_data(const void *data, size_t size)$/;"	f
dp_packet_clone_data_with_headroom	lib/dp-packet.c	/^dp_packet_clone_data_with_headroom(const void *data, size_t size, size_t headroom)$/;"	f
dp_packet_clone_with_headroom	lib/dp-packet.c	/^dp_packet_clone_with_headroom(const struct dp_packet *buffer, size_t headroom)$/;"	f
dp_packet_copy__	lib/dp-packet.c	/^dp_packet_copy__(struct dp_packet *b, uint8_t *new_base,$/;"	f	file:
dp_packet_data	lib/dp-packet.h	/^dp_packet_data(const struct dp_packet *b)$/;"	f
dp_packet_delete	lib/dp-packet.h	/^dp_packet_delete(struct dp_packet *b)$/;"	f
dp_packet_end	lib/dp-packet.h	/^dp_packet_end(const struct dp_packet *b)$/;"	f
dp_packet_equal	lib/dp-packet.h	/^dp_packet_equal(const struct dp_packet *a, const struct dp_packet *b)$/;"	f
dp_packet_genl_family	datapath/datapath.c	/^static struct genl_family dp_packet_genl_family = {$/;"	v	typeref:struct:genl_family	file:
dp_packet_genl_family	datapath/datapath.c	/^static struct genl_family dp_packet_genl_family;$/;"	v	typeref:struct:genl_family	file:
dp_packet_genl_family	datapath/linux/datapath.c	/^static struct genl_family dp_packet_genl_family = {$/;"	v	typeref:struct:genl_family	file:
dp_packet_genl_family	datapath/linux/datapath.c	/^static struct genl_family dp_packet_genl_family;$/;"	v	typeref:struct:genl_family	file:
dp_packet_genl_ops	datapath/datapath.c	/^static struct genl_ops dp_packet_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dp_packet_genl_ops	datapath/linux/datapath.c	/^static struct genl_ops dp_packet_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dp_packet_get_allocated	lib/dp-packet.h	/^dp_packet_get_allocated(const struct dp_packet *b)$/;"	f
dp_packet_get_icmp_payload	lib/dp-packet.h	/^dp_packet_get_icmp_payload(const struct dp_packet *b)$/;"	f
dp_packet_get_nd_payload	lib/dp-packet.h	/^dp_packet_get_nd_payload(const struct dp_packet *b)$/;"	f
dp_packet_get_rss_hash	lib/dp-packet.h	/^dp_packet_get_rss_hash(struct dp_packet *p)$/;"	f
dp_packet_get_sctp_payload	lib/dp-packet.h	/^dp_packet_get_sctp_payload(const struct dp_packet *b)$/;"	f
dp_packet_get_tcp_payload	lib/dp-packet.h	/^dp_packet_get_tcp_payload(const struct dp_packet *b)$/;"	f
dp_packet_get_udp_payload	lib/dp-packet.h	/^dp_packet_get_udp_payload(const struct dp_packet *b)$/;"	f
dp_packet_headroom	lib/dp-packet.h	/^dp_packet_headroom(const struct dp_packet *b)$/;"	f
dp_packet_init	lib/dp-packet.c	/^dp_packet_init(struct dp_packet *b, size_t size)$/;"	f
dp_packet_init__	lib/dp-packet.c	/^dp_packet_init__(struct dp_packet *b, size_t allocated, enum dp_packet_source source)$/;"	f	file:
dp_packet_init_dpdk	lib/dp-packet.c	/^dp_packet_init_dpdk(struct dp_packet *b, size_t allocated)$/;"	f
dp_packet_l2	lib/dp-packet.h	/^dp_packet_l2(const struct dp_packet *b)$/;"	f
dp_packet_l2_5	lib/dp-packet.h	/^dp_packet_l2_5(const struct dp_packet *b)$/;"	f
dp_packet_l2_pad_size	lib/dp-packet.h	/^dp_packet_l2_pad_size(const struct dp_packet *b)$/;"	f
dp_packet_l3	lib/dp-packet.h	/^dp_packet_l3(const struct dp_packet *b)$/;"	f
dp_packet_l4	lib/dp-packet.h	/^dp_packet_l4(const struct dp_packet *b)$/;"	f
dp_packet_l4_size	lib/dp-packet.h	/^dp_packet_l4_size(const struct dp_packet *b)$/;"	f
dp_packet_new	lib/dp-packet.c	/^dp_packet_new(size_t size)$/;"	f
dp_packet_new_with_headroom	lib/dp-packet.c	/^dp_packet_new_with_headroom(size_t size, size_t headroom)$/;"	f
dp_packet_pad	lib/dpif-netdev.h	/^static inline void dp_packet_pad(struct dp_packet *p)$/;"	f
dp_packet_prealloc_headroom	lib/dp-packet.c	/^dp_packet_prealloc_headroom(struct dp_packet *b, size_t size)$/;"	f
dp_packet_prealloc_tailroom	lib/dp-packet.c	/^dp_packet_prealloc_tailroom(struct dp_packet *b, size_t size)$/;"	f
dp_packet_pull	lib/dp-packet.h	/^dp_packet_pull(struct dp_packet *b, size_t size)$/;"	f
dp_packet_push	lib/dp-packet.c	/^dp_packet_push(struct dp_packet *b, const void *p, size_t size)$/;"	f
dp_packet_push_uninit	lib/dp-packet.c	/^dp_packet_push_uninit(struct dp_packet *b, size_t size)$/;"	f
dp_packet_push_zeros	lib/dp-packet.c	/^dp_packet_push_zeros(struct dp_packet *b, size_t size)$/;"	f
dp_packet_put	lib/dp-packet.c	/^dp_packet_put(struct dp_packet *b, const void *p, size_t size)$/;"	f
dp_packet_put_hex	lib/dp-packet.c	/^dp_packet_put_hex(struct dp_packet *b, const char *s, size_t *n)$/;"	f
dp_packet_put_uninit	lib/dp-packet.c	/^dp_packet_put_uninit(struct dp_packet *b, size_t size)$/;"	f
dp_packet_put_zeros	lib/dp-packet.c	/^dp_packet_put_zeros(struct dp_packet *b, size_t size)$/;"	f
dp_packet_reserve	lib/dp-packet.c	/^dp_packet_reserve(struct dp_packet *b, size_t size)$/;"	f
dp_packet_reserve_with_tailroom	lib/dp-packet.c	/^dp_packet_reserve_with_tailroom(struct dp_packet *b, size_t headroom,$/;"	f
dp_packet_reset_offsets	lib/dp-packet.h	/^dp_packet_reset_offsets(struct dp_packet *b)$/;"	f
dp_packet_reset_packet	lib/dp-packet.h	/^dp_packet_reset_packet(struct dp_packet *b, int off)$/;"	f
dp_packet_resize__	lib/dp-packet.c	/^dp_packet_resize__(struct dp_packet *b, size_t new_headroom, size_t new_tailroom)$/;"	f	file:
dp_packet_resize_l2	lib/dp-packet.c	/^dp_packet_resize_l2(struct dp_packet *b, int increment)$/;"	f
dp_packet_resize_l2_5	lib/dp-packet.c	/^dp_packet_resize_l2_5(struct dp_packet *b, int increment)$/;"	f
dp_packet_rss_invalidate	lib/dp-packet.h	/^dp_packet_rss_invalidate(struct dp_packet *p)$/;"	f
dp_packet_rss_valid	lib/dp-packet.h	/^dp_packet_rss_valid(struct dp_packet *p)$/;"	f
dp_packet_set_allocated	lib/dp-packet.h	/^dp_packet_set_allocated(struct dp_packet *b, uint16_t s)$/;"	f
dp_packet_set_base	lib/dp-packet.h	/^dp_packet_set_base(struct dp_packet *b, void *d)$/;"	f
dp_packet_set_data	lib/dp-packet.h	/^dp_packet_set_data(struct dp_packet *b, void *data)$/;"	f
dp_packet_set_l2_5	lib/dp-packet.h	/^dp_packet_set_l2_5(struct dp_packet *b, void *l2_5)$/;"	f
dp_packet_set_l2_pad_size	lib/dp-packet.h	/^dp_packet_set_l2_pad_size(struct dp_packet *b, uint8_t pad_size)$/;"	f
dp_packet_set_l3	lib/dp-packet.h	/^dp_packet_set_l3(struct dp_packet *b, void *l3)$/;"	f
dp_packet_set_l4	lib/dp-packet.h	/^dp_packet_set_l4(struct dp_packet *b, void *l4)$/;"	f
dp_packet_set_rss_hash	lib/dp-packet.h	/^dp_packet_set_rss_hash(struct dp_packet *p, uint32_t hash)$/;"	f
dp_packet_set_size	lib/dp-packet.h	/^dp_packet_set_size(struct dp_packet *b, uint32_t v)$/;"	f
dp_packet_shift	lib/dp-packet.c	/^dp_packet_shift(struct dp_packet *b, int delta)$/;"	f
dp_packet_size	lib/dp-packet.h	/^dp_packet_size(const struct dp_packet *b)$/;"	f
dp_packet_source	lib/dp-packet.h	/^enum OVS_PACKED_ENUM dp_packet_source {$/;"	g
dp_packet_steal_data	lib/dp-packet.c	/^dp_packet_steal_data(struct dp_packet *b)$/;"	f
dp_packet_swap	lib/dpif-netdev.c	/^dp_packet_swap(struct dp_packet **a, struct dp_packet **b)$/;"	f	file:
dp_packet_tail	lib/dp-packet.h	/^dp_packet_tail(const struct dp_packet *b)$/;"	f
dp_packet_tailroom	lib/dp-packet.h	/^dp_packet_tailroom(const struct dp_packet *b)$/;"	f
dp_packet_to_string	lib/dp-packet.c	/^dp_packet_to_string(const struct dp_packet *b, size_t maxbytes)$/;"	f
dp_packet_try_pull	lib/dp-packet.h	/^dp_packet_try_pull(struct dp_packet *b, size_t size)$/;"	f
dp_packet_uninit	lib/dp-packet.c	/^dp_packet_uninit(struct dp_packet *b)$/;"	f
dp_packet_use	lib/dp-packet.c	/^dp_packet_use(struct dp_packet *b, void *base, size_t allocated)$/;"	f
dp_packet_use__	lib/dp-packet.c	/^dp_packet_use__(struct dp_packet *b, void *base, size_t allocated,$/;"	f	file:
dp_packet_use_const	lib/dp-packet.c	/^dp_packet_use_const(struct dp_packet *b, const void *data, size_t size)$/;"	f
dp_packet_use_stub	lib/dp-packet.c	/^dp_packet_use_stub(struct dp_packet *b, void *base, size_t allocated)$/;"	f
dp_parse_name	lib/dpif.c	/^dp_parse_name(const char *datapath_name_, char **name, char **type)$/;"	f
dp_purge_aux	lib/dpif-netdev.c	/^    void *dp_purge_aux;$/;"	m	struct:dp_netdev	file:
dp_purge_callback	lib/dpif.h	/^    typedef void dp_purge_callback(void *aux, unsigned pmd_id);$/;"	t
dp_purge_cb	lib/dpif-netdev.c	/^    dp_purge_callback *dp_purge_cb;$/;"	m	struct:dp_netdev	file:
dp_purge_cb	ofproto/ofproto-dpif-upcall.c	/^dp_purge_cb(void *aux, unsigned pmd_id)$/;"	f	file:
dp_purge_cb	ofproto/ofproto-dpif-upcall.c	/^static dp_purge_callback dp_purge_cb;$/;"	v	file:
dp_register_genl	datapath/datapath.c	/^static int dp_register_genl(void)$/;"	f	file:
dp_register_genl	datapath/linux/datapath.c	/^static int dp_register_genl(void)$/;"	f	file:
dp_register_provider	lib/dpif.c	/^dp_register_provider(const struct dpif_class *new_class)$/;"	f
dp_register_provider__	lib/dpif.c	/^dp_register_provider__(const struct dpif_class *new_class)$/;"	f	file:
dp_stat_type	lib/dpif-netdev.c	/^enum dp_stat_type {$/;"	g	file:
dp_stats_percpu	datapath/datapath.h	/^struct dp_stats_percpu {$/;"	s
dp_to_netdev_ifi_flags	lib/netdev-windows.c	/^dp_to_netdev_ifi_flags(uint32_t dp_flags)$/;"	f	file:
dp_unregister_genl	datapath/datapath.c	/^static void dp_unregister_genl(int n_families)$/;"	f	file:
dp_unregister_genl	datapath/linux/datapath.c	/^static void dp_unregister_genl(int n_families)$/;"	f	file:
dp_unregister_provider	lib/dpif.c	/^dp_unregister_provider(const char *type)$/;"	f
dp_unregister_provider__	lib/dpif.c	/^dp_unregister_provider__(const char *type)$/;"	f	file:
dp_upcall_info	datapath/datapath.h	/^struct dp_upcall_info {$/;"	s
dp_version_string	ofproto/ofproto-dpif.c	/^    char *dp_version_string;$/;"	m	struct:dpif_backer	file:
dp_vport_genl_family	datapath/datapath.c	/^struct genl_family dp_vport_genl_family = {$/;"	v	typeref:struct:genl_family
dp_vport_genl_family	datapath/linux/datapath.c	/^struct genl_family dp_vport_genl_family = {$/;"	v	typeref:struct:genl_family
dp_vport_genl_ops	datapath/datapath.c	/^static struct genl_ops dp_vport_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dp_vport_genl_ops	datapath/linux/datapath.c	/^static struct genl_ops dp_vport_genl_ops[] = {$/;"	v	typeref:struct:genl_ops	file:
dpcls	lib/dpif-netdev.c	/^struct dpcls {$/;"	s	file:
dpcls_create_subtable	lib/dpif-netdev.c	/^dpcls_create_subtable(struct dpcls *cls, const struct netdev_flow_key *mask)$/;"	f	file:
dpcls_destroy	lib/dpif-netdev.c	/^dpcls_destroy(struct dpcls *cls)$/;"	f	file:
dpcls_destroy_subtable	lib/dpif-netdev.c	/^dpcls_destroy_subtable(struct dpcls *cls, struct dpcls_subtable *subtable)$/;"	f	file:
dpcls_find_subtable	lib/dpif-netdev.c	/^dpcls_find_subtable(struct dpcls *cls, const struct netdev_flow_key *mask)$/;"	f	file:
dpcls_init	lib/dpif-netdev.c	/^dpcls_init(struct dpcls *cls)$/;"	f	file:
dpcls_insert	lib/dpif-netdev.c	/^dpcls_insert(struct dpcls *cls, struct dpcls_rule *rule,$/;"	f	file:
dpcls_lookup	lib/dpif-netdev.c	/^dpcls_lookup(const struct dpcls *cls, const struct netdev_flow_key keys[],$/;"	f	file:
dpcls_remove	lib/dpif-netdev.c	/^dpcls_remove(struct dpcls *cls, struct dpcls_rule *rule)$/;"	f	file:
dpcls_rule	lib/dpif-netdev.c	/^struct dpcls_rule {$/;"	s	file:
dpcls_rule_matches_key	lib/dpif-netdev.c	/^dpcls_rule_matches_key(const struct dpcls_rule *rule,$/;"	f	file:
dpcls_subtable	lib/dpif-netdev.c	/^struct dpcls_subtable {$/;"	s	file:
dpctl_add_dp	lib/dpctl.c	/^dpctl_add_dp(int argc, const char *argv[],$/;"	f	file:
dpctl_add_flow	lib/dpctl.c	/^dpctl_add_flow(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_add_if	lib/dpctl.c	/^dpctl_add_if(int argc OVS_UNUSED, const char *argv[],$/;"	f	file:
dpctl_command	lib/dpctl.c	/^struct dpctl_command {$/;"	s	file:
dpctl_command_handler	lib/dpctl.c	/^typedef int dpctl_command_handler(int argc, const char *argv[],$/;"	t	file:
dpctl_del_dp	lib/dpctl.c	/^dpctl_del_dp(int argc OVS_UNUSED, const char *argv[],$/;"	f	file:
dpctl_del_flow	lib/dpctl.c	/^dpctl_del_flow(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_del_flows	lib/dpctl.c	/^dpctl_del_flows(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_del_if	lib/dpctl.c	/^dpctl_del_if(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_dump_dps	lib/dpctl.c	/^dpctl_dump_dps(int argc OVS_UNUSED, const char *argv[] OVS_UNUSED,$/;"	f	file:
dpctl_dump_flows	lib/dpctl.c	/^dpctl_dump_flows(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_error	lib/dpctl.c	/^dpctl_error(struct dpctl_params* dpctl_p, int err_no, const char *fmt, ...)$/;"	f	file:
dpctl_get_flow	lib/dpctl.c	/^dpctl_get_flow(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_help	lib/dpctl.c	/^dpctl_help(int argc OVS_UNUSED, const char *argv[] OVS_UNUSED,$/;"	f	file:
dpctl_list_commands	lib/dpctl.c	/^dpctl_list_commands(int argc OVS_UNUSED, const char *argv[] OVS_UNUSED,$/;"	f	file:
dpctl_mod_flow	lib/dpctl.c	/^dpctl_mod_flow(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_normalize_actions	lib/dpctl.c	/^dpctl_normalize_actions(int argc, const char *argv[],$/;"	f	file:
dpctl_p	utilities/ovs-dpctl.c	/^static struct dpctl_params dpctl_p;$/;"	v	typeref:struct:dpctl_params	file:
dpctl_params	lib/dpctl.h	/^struct dpctl_params {$/;"	s
dpctl_parse_actions	lib/dpctl.c	/^dpctl_parse_actions(int argc, const char *argv[], struct dpctl_params* dpctl_p)$/;"	f	file:
dpctl_print	lib/dpctl.c	/^dpctl_print(struct dpctl_params *dpctl_p, const char *fmt, ...)$/;"	f	file:
dpctl_print	utilities/ovs-dpctl.c	/^dpctl_print(void *userdata OVS_UNUSED, bool error, const char *msg)$/;"	f	file:
dpctl_put_flow	lib/dpctl.c	/^dpctl_put_flow(int argc, const char *argv[], enum dpif_flow_put_flags flags,$/;"	f	file:
dpctl_puts	lib/dpctl.c	/^dpctl_puts(struct dpctl_params *dpctl_p, bool error, const char *string)$/;"	f	file:
dpctl_run_command	lib/dpctl.c	/^dpctl_run_command(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f
dpctl_set_if	lib/dpctl.c	/^dpctl_set_if(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_show	lib/dpctl.c	/^dpctl_show(int argc, const char *argv[], struct dpctl_params *dpctl_p)$/;"	f	file:
dpctl_unixctl_handler	lib/dpctl.c	/^dpctl_unixctl_handler(struct unixctl_conn *conn, int argc, const char *argv[],$/;"	f	file:
dpctl_unixctl_print	lib/dpctl.c	/^dpctl_unixctl_print(void *userdata, bool error OVS_UNUSED, const char *msg)$/;"	f	file:
dpctl_unixctl_register	lib/dpctl.c	/^dpctl_unixctl_register(void)$/;"	f
dpdk	lib/netdev-dpdk.c	/^VLOG_DEFINE_THIS_MODULE(dpdk);$/;"	v
dpdk_class	lib/netdev-dpdk.c	/^static const struct netdev_class dpdk_class =$/;"	v	typeref:struct:netdev_class	file:
dpdk_common_init	lib/netdev-dpdk.c	/^dpdk_common_init(void)$/;"	f	file:
dpdk_dev_parse_name	lib/netdev-dpdk.c	/^dpdk_dev_parse_name(const char dev_name[], const char prefix[],$/;"	f	file:
dpdk_dev_type	lib/netdev-dpdk.c	/^enum dpdk_dev_type {$/;"	g	file:
dpdk_eth_dev_queue_setup	lib/netdev-dpdk.c	/^dpdk_eth_dev_queue_setup(struct netdev_dpdk *dev, int n_rxq, int n_txq)$/;"	f	file:
dpdk_init	lib/netdev-dpdk.c	/^dpdk_init(int argc, char **argv)$/;"	f
dpdk_init	lib/netdev-dpdk.h	/^dpdk_init(int argc, char **argv)$/;"	f
dpdk_mp	lib/netdev-dpdk.c	/^    struct dpdk_mp *dpdk_mp;$/;"	m	struct:netdev_dpdk	typeref:struct:netdev_dpdk::dpdk_mp	file:
dpdk_mp	lib/netdev-dpdk.c	/^struct dpdk_mp {$/;"	s	file:
dpdk_mp_put	lib/netdev-dpdk.c	/^dpdk_mp_put(struct dpdk_mp *dmp)$/;"	f	file:
dpdk_mutex	lib/netdev-dpdk.c	/^static struct ovs_list dpdk_list OVS_GUARDED_BY(dpdk_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
dpdk_mutex	lib/netdev-dpdk.c	/^static struct ovs_list dpdk_mp_list OVS_GUARDED_BY(dpdk_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
dpdk_mutex	lib/netdev-dpdk.c	/^static struct ovs_list dpdk_ring_list OVS_GUARDED_BY(dpdk_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
dpdk_mutex	lib/netdev-dpdk.c	/^static struct ovs_mutex dpdk_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
dpdk_queue_flush	lib/netdev-dpdk.c	/^dpdk_queue_flush(struct netdev_dpdk *dev, int qid)$/;"	f	file:
dpdk_queue_flush__	lib/netdev-dpdk.c	/^dpdk_queue_flush__(struct netdev_dpdk *dev, int qid)$/;"	f	file:
dpdk_queue_pkts	lib/netdev-dpdk.c	/^dpdk_queue_pkts(struct netdev_dpdk *dev, int qid,$/;"	f	file:
dpdk_ring	lib/netdev-dpdk.c	/^struct dpdk_ring {$/;"	s	file:
dpdk_ring_class	lib/netdev-dpdk.c	/^static const struct netdev_class dpdk_ring_class =$/;"	v	typeref:struct:netdev_class	file:
dpdk_ring_create	lib/netdev-dpdk.c	/^dpdk_ring_create(const char dev_name[], unsigned int port_no,$/;"	f	file:
dpdk_rte_mzalloc	lib/netdev-dpdk.c	/^dpdk_rte_mzalloc(size_t sz)$/;"	f	file:
dpdk_tx_queue	lib/netdev-dpdk.c	/^struct dpdk_tx_queue {$/;"	s	file:
dpdk_vhost_class_init	lib/netdev-dpdk.c	/^dpdk_vhost_class_init(void)$/;"	f	file:
dpdk_vhost_cuse_class	lib/netdev-dpdk.c	/^static const struct netdev_class OVS_UNUSED dpdk_vhost_cuse_class =$/;"	v	typeref:struct:OVS_UNUSED	file:
dpdk_vhost_cuse_class_init	lib/netdev-dpdk.c	/^dpdk_vhost_cuse_class_init(void)$/;"	f	file:
dpdk_vhost_user_class	lib/netdev-dpdk.c	/^static const struct netdev_class OVS_UNUSED dpdk_vhost_user_class =$/;"	v	typeref:struct:OVS_UNUSED	file:
dpdk_vhost_user_class_init	lib/netdev-dpdk.c	/^dpdk_vhost_user_class_init(void)$/;"	f	file:
dpdk_watchdog	lib/netdev-dpdk.c	/^dpdk_watchdog(void *dummy OVS_UNUSED)$/;"	f	file:
dpid_from_hash	vswitchd/bridge.c	/^dpid_from_hash(const void *data, size_t n)$/;"	f	file:
dpid_from_string	lib/packets.c	/^dpid_from_string(const char *s, uint64_t *dpidp)$/;"	f
dpif	lib/dpif-netdev.c	/^    struct dpif *dpif;$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::dpif	file:
dpif	lib/dpif-netdev.c	/^    struct dpif dpif;$/;"	m	struct:dpif_netdev	typeref:struct:dpif_netdev::dpif	file:
dpif	lib/dpif-netlink.c	/^    struct dpif dpif;$/;"	m	struct:dpif_netlink	typeref:struct:dpif_netlink::dpif	file:
dpif	lib/dpif-provider.h	/^    struct dpif *dpif;$/;"	m	struct:dpif_flow_dump	typeref:struct:dpif_flow_dump::dpif
dpif	lib/dpif-provider.h	/^    struct dpif *dpif;$/;"	m	struct:dpif_flow_dump_thread	typeref:struct:dpif_flow_dump_thread::dpif
dpif	lib/dpif-provider.h	/^struct dpif {$/;"	s
dpif	lib/dpif.c	/^    struct dpif *dpif;$/;"	m	struct:dpif_execute_helper_aux	typeref:struct:dpif_execute_helper_aux::dpif	file:
dpif	lib/dpif.c	/^VLOG_DEFINE_THIS_MODULE(dpif);$/;"	v
dpif	lib/dpif.h	/^    const struct dpif *dpif;$/;"	m	struct:dpif_port_dump	typeref:struct:dpif_port_dump::dpif
dpif	ofproto/ofproto-dpif-upcall.c	/^    struct dpif *dpif;                 \/* Datapath handle. *\/$/;"	m	struct:udpif	typeref:struct:udpif::dpif	file:
dpif	ofproto/ofproto-dpif-xlate.c	/^    struct dpif *dpif;            \/* Datapath interface. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::dpif	file:
dpif	ofproto/ofproto-dpif.c	/^    struct dpif *dpif;$/;"	m	struct:dpif_backer	typeref:struct:dpif_backer::dpif	file:
dpif_assert_class	lib/dpif-provider.h	/^static inline void dpif_assert_class(const struct dpif *dpif,$/;"	f
dpif_backer	ofproto/ofproto-dpif.c	/^struct dpif_backer {$/;"	s	file:
dpif_backer_support	ofproto/ofproto-dpif.h	/^struct dpif_backer_support {$/;"	s
dpif_base_name	lib/dpif.c	/^dpif_base_name(const struct dpif *dpif)$/;"	f
dpif_blacklist	lib/dpif.c	/^static struct sset dpif_blacklist = SSET_INITIALIZER(&dpif_blacklist);$/;"	v	typeref:struct:sset	file:
dpif_channel	lib/dpif-netlink.c	/^struct dpif_channel {$/;"	s	file:
dpif_class	lib/dpif-provider.h	/^    const struct dpif_class *dpif_class;$/;"	m	struct:dpif	typeref:struct:dpif::dpif_class
dpif_class	lib/dpif-provider.h	/^struct dpif_class {$/;"	s
dpif_class	lib/dpif.c	/^    const struct dpif_class *dpif_class;$/;"	m	struct:registered_dpif_class	typeref:struct:registered_dpif_class::dpif_class	file:
dpif_classes	lib/dpif.c	/^static struct shash dpif_classes = SHASH_INITIALIZER(&dpif_classes);$/;"	v	typeref:struct:shash	file:
dpif_close	lib/dpif.c	/^dpif_close(struct dpif *dpif)$/;"	f
dpif_create	lib/dpif.c	/^dpif_create(const char *name, const char *type, struct dpif **dpifp)$/;"	f
dpif_create_and_open	lib/dpif.c	/^dpif_create_and_open(const char *name, const char *type, struct dpif **dpifp)$/;"	f
dpif_delete	lib/dpif.c	/^dpif_delete(struct dpif *dpif)$/;"	f
dpif_destroy	lib/dpif.c	/^COVERAGE_DEFINE(dpif_destroy);$/;"	v
dpif_disable_upcall	lib/dpif.c	/^dpif_disable_upcall(struct dpif *dpif)$/;"	f
dpif_dp_stats	lib/dpif.h	/^struct dpif_dp_stats {$/;"	s
dpif_dummy_change_port_number	lib/dpif-netdev.c	/^dpif_dummy_change_port_number(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
dpif_dummy_delete_port	lib/dpif-netdev.c	/^dpif_dummy_delete_port(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
dpif_dummy_override	lib/dpif-netdev.c	/^dpif_dummy_override(const char *type)$/;"	f	file:
dpif_dummy_register	lib/dpif-netdev.c	/^dpif_dummy_register(enum dummy_level level)$/;"	f
dpif_dummy_register__	lib/dpif-netdev.c	/^dpif_dummy_register__(const char *type)$/;"	f	file:
dpif_enable_upcall	lib/dpif.c	/^dpif_enable_upcall(struct dpif *dpif)$/;"	f
dpif_execute	lib/dpif.c	/^COVERAGE_DEFINE(dpif_execute);$/;"	v
dpif_execute	lib/dpif.c	/^dpif_execute(struct dpif *dpif, struct dpif_execute *execute)$/;"	f
dpif_execute	lib/dpif.h	/^struct dpif_execute {$/;"	s
dpif_execute_helper_aux	lib/dpif.c	/^struct dpif_execute_helper_aux {$/;"	s	file:
dpif_execute_helper_cb	lib/dpif.c	/^dpif_execute_helper_cb(void *aux_, struct dp_packet **packets, int cnt,$/;"	f	file:
dpif_execute_needs_help	lib/dpif.c	/^dpif_execute_needs_help(const struct dpif_execute *execute)$/;"	f	file:
dpif_execute_with_help	lib/dpif.c	/^COVERAGE_DEFINE(dpif_execute_with_help);$/;"	v
dpif_execute_with_help	lib/dpif.c	/^dpif_execute_with_help(struct dpif *dpif, struct dpif_execute *execute)$/;"	f	file:
dpif_flow	lib/dpif.h	/^struct dpif_flow {$/;"	s
dpif_flow_del	lib/dpif.c	/^COVERAGE_DEFINE(dpif_flow_del);$/;"	v
dpif_flow_del	lib/dpif.c	/^dpif_flow_del(struct dpif *dpif,$/;"	f
dpif_flow_del	lib/dpif.h	/^struct dpif_flow_del {$/;"	s
dpif_flow_dump	lib/dpif-provider.h	/^struct dpif_flow_dump {$/;"	s
dpif_flow_dump_create	lib/dpif.c	/^dpif_flow_dump_create(const struct dpif *dpif, bool terse)$/;"	f
dpif_flow_dump_destroy	lib/dpif.c	/^dpif_flow_dump_destroy(struct dpif_flow_dump *dump)$/;"	f
dpif_flow_dump_init	lib/dpif-provider.h	/^dpif_flow_dump_init(struct dpif_flow_dump *dump, const struct dpif *dpif)$/;"	f
dpif_flow_dump_next	lib/dpif.c	/^dpif_flow_dump_next(struct dpif_flow_dump_thread *thread,$/;"	f
dpif_flow_dump_thread	lib/dpif-provider.h	/^struct dpif_flow_dump_thread {$/;"	s
dpif_flow_dump_thread_create	lib/dpif.c	/^dpif_flow_dump_thread_create(struct dpif_flow_dump *dump)$/;"	f
dpif_flow_dump_thread_destroy	lib/dpif.c	/^dpif_flow_dump_thread_destroy(struct dpif_flow_dump_thread *thread)$/;"	f
dpif_flow_dump_thread_init	lib/dpif-provider.h	/^dpif_flow_dump_thread_init(struct dpif_flow_dump_thread *thread,$/;"	f
dpif_flow_flush	lib/dpif.c	/^COVERAGE_DEFINE(dpif_flow_flush);$/;"	v
dpif_flow_flush	lib/dpif.c	/^dpif_flow_flush(struct dpif *dpif)$/;"	f
dpif_flow_get	lib/dpif.c	/^COVERAGE_DEFINE(dpif_flow_get);$/;"	v
dpif_flow_get	lib/dpif.c	/^dpif_flow_get(struct dpif *dpif,$/;"	f
dpif_flow_get	lib/dpif.h	/^struct dpif_flow_get {$/;"	s
dpif_flow_hash	lib/dpif.c	/^dpif_flow_hash(const struct dpif *dpif OVS_UNUSED,$/;"	f
dpif_flow_put	lib/dpif.c	/^COVERAGE_DEFINE(dpif_flow_put);$/;"	v
dpif_flow_put	lib/dpif.c	/^dpif_flow_put(struct dpif *dpif, enum dpif_flow_put_flags flags,$/;"	f
dpif_flow_put	lib/dpif.h	/^struct dpif_flow_put {$/;"	s
dpif_flow_put_flags	lib/dpif.h	/^enum dpif_flow_put_flags {$/;"	g
dpif_flow_stats	lib/dpif.h	/^struct dpif_flow_stats {$/;"	s
dpif_flow_stats_extract	lib/dpif.c	/^dpif_flow_stats_extract(const struct flow *flow, const struct dp_packet *packet,$/;"	f
dpif_flow_stats_format	lib/dpif.c	/^dpif_flow_stats_format(const struct dpif_flow_stats *stats, struct ds *s)$/;"	f
dpif_get_dp_stats	lib/dpif.c	/^dpif_get_dp_stats(const struct dpif *dpif, struct dpif_dp_stats *stats)$/;"	f
dpif_get_dp_version	lib/dpif.c	/^dpif_get_dp_version(const struct dpif *dpif)$/;"	f
dpif_get_netflow_ids	lib/dpif.c	/^dpif_get_netflow_ids(const struct dpif *dpif,$/;"	f
dpif_handler	lib/dpif-netlink.c	/^struct dpif_handler {$/;"	s	file:
dpif_handlers_set	lib/dpif.c	/^dpif_handlers_set(struct dpif *dpif, uint32_t n_handlers)$/;"	f
dpif_init	lib/dpif.c	/^dpif_init(struct dpif *dpif, const struct dpif_class *dpif_class,$/;"	f
dpif_ipfix	ofproto/ofproto-dpif-ipfix.c	/^struct dpif_ipfix {$/;"	s	file:
dpif_ipfix_bridge_exporter	ofproto/ofproto-dpif-ipfix.c	/^struct dpif_ipfix_bridge_exporter {$/;"	s	file:
dpif_ipfix_bridge_exporter_clear	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_bridge_exporter_clear(struct dpif_ipfix_bridge_exporter *exporter)$/;"	f	file:
dpif_ipfix_bridge_exporter_destroy	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_bridge_exporter_destroy(struct dpif_ipfix_bridge_exporter *exporter)$/;"	f	file:
dpif_ipfix_bridge_exporter_init	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_bridge_exporter_init(struct dpif_ipfix_bridge_exporter *exporter)$/;"	f	file:
dpif_ipfix_bridge_exporter_set_options	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_bridge_exporter_set_options($/;"	f	file:
dpif_ipfix_cache_expire	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_cache_expire(struct dpif_ipfix_exporter *exporter,$/;"	f	file:
dpif_ipfix_cache_expire_now	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_cache_expire_now(struct dpif_ipfix_exporter *exporter,$/;"	f	file:
dpif_ipfix_create	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_create(void)$/;"	f
dpif_ipfix_exporter	ofproto/ofproto-dpif-ipfix.c	/^struct dpif_ipfix_exporter {$/;"	s	file:
dpif_ipfix_exporter_clear	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_exporter_clear(struct dpif_ipfix_exporter *exporter)$/;"	f	file:
dpif_ipfix_exporter_destroy	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_exporter_destroy(struct dpif_ipfix_exporter *exporter)$/;"	f	file:
dpif_ipfix_exporter_init	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_exporter_init(struct dpif_ipfix_exporter *exporter)$/;"	f	file:
dpif_ipfix_exporter_set_options	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_exporter_set_options(struct dpif_ipfix_exporter *exporter,$/;"	f	file:
dpif_ipfix_flow_exporter	ofproto/ofproto-dpif-ipfix.c	/^struct dpif_ipfix_flow_exporter {$/;"	s	file:
dpif_ipfix_flow_exporter_clear	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_flow_exporter_clear(struct dpif_ipfix_flow_exporter *exporter)$/;"	f	file:
dpif_ipfix_flow_exporter_destroy	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_flow_exporter_destroy(struct dpif_ipfix_flow_exporter *exporter)$/;"	f	file:
dpif_ipfix_flow_exporter_init	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_flow_exporter_init(struct dpif_ipfix_flow_exporter *exporter)$/;"	f	file:
dpif_ipfix_flow_exporter_map_node	ofproto/ofproto-dpif-ipfix.c	/^struct dpif_ipfix_flow_exporter_map_node {$/;"	s	file:
dpif_ipfix_flow_exporter_set_options	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_flow_exporter_set_options($/;"	f	file:
dpif_ipfix_port	ofproto/ofproto-dpif-ipfix.c	/^struct dpif_ipfix_port {$/;"	s	file:
dpif_ipfix_ref	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_ref(const struct dpif_ipfix *di_)$/;"	f
dpif_ipfix_sample	ofproto/ofproto-dpif-ipfix.c	/^dpif_ipfix_sample(struct dpif_ipfix_exporter *exporter,$/;"	f	file:
dpif_ipfix_tunnel_type	ofproto/ofproto-dpif-ipfix.c	/^enum dpif_ipfix_tunnel_type {$/;"	g	file:
dpif_is_netdev	lib/dpif-netdev.c	/^dpif_is_netdev(const struct dpif *dpif)$/;"	f
dpif_mutex	lib/dpif.c	/^static struct ovs_mutex dpif_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
dpif_name	lib/dpif.c	/^dpif_name(const struct dpif *dpif)$/;"	f
dpif_netdev	lib/dpif-netdev.c	/^VLOG_DEFINE_THIS_MODULE(dpif_netdev);$/;"	v
dpif_netdev	lib/dpif-netdev.c	/^struct dpif_netdev {$/;"	s	file:
dpif_netdev_cast	lib/dpif-netdev.c	/^dpif_netdev_cast(const struct dpif *dpif)$/;"	f	file:
dpif_netdev_class	lib/dpif-netdev.c	/^const struct dpif_class dpif_netdev_class = {$/;"	v	typeref:struct:dpif_class
dpif_netdev_class_is_dummy	lib/dpif-netdev.c	/^dpif_netdev_class_is_dummy(const struct dpif_class *class)$/;"	f	file:
dpif_netdev_close	lib/dpif-netdev.c	/^dpif_netdev_close(struct dpif *dpif)$/;"	f	file:
dpif_netdev_destroy	lib/dpif-netdev.c	/^dpif_netdev_destroy(struct dpif *dpif)$/;"	f	file:
dpif_netdev_enumerate	lib/dpif-netdev.c	/^dpif_netdev_enumerate(struct sset *all_dps,$/;"	f	file:
dpif_netdev_flow_del	lib/dpif-netdev.c	/^dpif_netdev_flow_del(struct dpif *dpif, const struct dpif_flow_del *del)$/;"	f	file:
dpif_netdev_flow_dump	lib/dpif-netdev.c	/^struct dpif_netdev_flow_dump {$/;"	s	file:
dpif_netdev_flow_dump_cast	lib/dpif-netdev.c	/^dpif_netdev_flow_dump_cast(struct dpif_flow_dump *dump)$/;"	f	file:
dpif_netdev_flow_dump_create	lib/dpif-netdev.c	/^dpif_netdev_flow_dump_create(const struct dpif *dpif_, bool terse)$/;"	f	file:
dpif_netdev_flow_dump_destroy	lib/dpif-netdev.c	/^dpif_netdev_flow_dump_destroy(struct dpif_flow_dump *dump_)$/;"	f	file:
dpif_netdev_flow_dump_next	lib/dpif-netdev.c	/^dpif_netdev_flow_dump_next(struct dpif_flow_dump_thread *thread_,$/;"	f	file:
dpif_netdev_flow_dump_thread	lib/dpif-netdev.c	/^struct dpif_netdev_flow_dump_thread {$/;"	s	file:
dpif_netdev_flow_dump_thread_cast	lib/dpif-netdev.c	/^dpif_netdev_flow_dump_thread_cast(struct dpif_flow_dump_thread *thread)$/;"	f	file:
dpif_netdev_flow_dump_thread_create	lib/dpif-netdev.c	/^dpif_netdev_flow_dump_thread_create(struct dpif_flow_dump *dump_)$/;"	f	file:
dpif_netdev_flow_dump_thread_destroy	lib/dpif-netdev.c	/^dpif_netdev_flow_dump_thread_destroy(struct dpif_flow_dump_thread *thread_)$/;"	f	file:
dpif_netdev_flow_flush	lib/dpif-netdev.c	/^dpif_netdev_flow_flush(struct dpif *dpif)$/;"	f	file:
dpif_netdev_flow_from_nlattrs	lib/dpif-netdev.c	/^dpif_netdev_flow_from_nlattrs(const struct nlattr *key, uint32_t key_len,$/;"	f	file:
dpif_netdev_flow_get	lib/dpif-netdev.c	/^dpif_netdev_flow_get(const struct dpif *dpif, const struct dpif_flow_get *get)$/;"	f	file:
dpif_netdev_flow_put	lib/dpif-netdev.c	/^dpif_netdev_flow_put(struct dpif *dpif, const struct dpif_flow_put *put)$/;"	f	file:
dpif_netdev_get_datapath_version	lib/dpif-netdev.c	/^dpif_netdev_get_datapath_version(void)$/;"	f	file:
dpif_netdev_get_stats	lib/dpif-netdev.c	/^dpif_netdev_get_stats(const struct dpif *dpif, struct dpif_dp_stats *stats)$/;"	f	file:
dpif_netdev_init	lib/dpif-netdev.c	/^dpif_netdev_init(void)$/;"	f	file:
dpif_netdev_mask_from_nlattrs	lib/dpif-netdev.c	/^dpif_netdev_mask_from_nlattrs(const struct nlattr *key, uint32_t key_len,$/;"	f	file:
dpif_netdev_open	lib/dpif-netdev.c	/^dpif_netdev_open(const struct dpif_class *class, const char *name,$/;"	f	file:
dpif_netdev_operate	lib/dpif-netdev.c	/^dpif_netdev_operate(struct dpif *dpif, struct dpif_op **ops, size_t n_ops)$/;"	f	file:
dpif_netdev_packet_get_rss_hash	lib/dpif-netdev.c	/^dpif_netdev_packet_get_rss_hash(struct dp_packet *packet,$/;"	f	file:
dpif_netdev_pmd_info	lib/dpif-netdev.c	/^dpif_netdev_pmd_info(struct unixctl_conn *conn, int argc, const char *argv[],$/;"	f	file:
dpif_netdev_pmd_set	lib/dpif-netdev.c	/^dpif_netdev_pmd_set(struct dpif *dpif, unsigned int n_rxqs, const char *cmask)$/;"	f	file:
dpif_netdev_port_add	lib/dpif-netdev.c	/^dpif_netdev_port_add(struct dpif *dpif, struct netdev *netdev,$/;"	f	file:
dpif_netdev_port_del	lib/dpif-netdev.c	/^dpif_netdev_port_del(struct dpif *dpif, odp_port_t port_no)$/;"	f	file:
dpif_netdev_port_dump_done	lib/dpif-netdev.c	/^dpif_netdev_port_dump_done(const struct dpif *dpif OVS_UNUSED, void *state_)$/;"	f	file:
dpif_netdev_port_dump_next	lib/dpif-netdev.c	/^dpif_netdev_port_dump_next(const struct dpif *dpif, void *state_,$/;"	f	file:
dpif_netdev_port_dump_start	lib/dpif-netdev.c	/^dpif_netdev_port_dump_start(const struct dpif *dpif OVS_UNUSED, void **statep)$/;"	f	file:
dpif_netdev_port_open_type	lib/dpif-netdev.c	/^dpif_netdev_port_open_type(const struct dpif_class *class, const char *type)$/;"	f	file:
dpif_netdev_port_poll	lib/dpif-netdev.c	/^dpif_netdev_port_poll(const struct dpif *dpif_, char **devnamep OVS_UNUSED)$/;"	f	file:
dpif_netdev_port_poll_wait	lib/dpif-netdev.c	/^dpif_netdev_port_poll_wait(const struct dpif *dpif_)$/;"	f	file:
dpif_netdev_port_query_by_name	lib/dpif-netdev.c	/^dpif_netdev_port_query_by_name(const struct dpif *dpif, const char *devname,$/;"	f	file:
dpif_netdev_port_query_by_number	lib/dpif-netdev.c	/^dpif_netdev_port_query_by_number(const struct dpif *dpif, odp_port_t port_no,$/;"	f	file:
dpif_netdev_queue_to_priority	lib/dpif-netdev.c	/^dpif_netdev_queue_to_priority(const struct dpif *dpif OVS_UNUSED,$/;"	f	file:
dpif_netdev_register_dp_purge_cb	lib/dpif-netdev.c	/^dpif_netdev_register_dp_purge_cb(struct dpif *dpif, dp_purge_callback *cb,$/;"	f	file:
dpif_netdev_register_upcall_cb	lib/dpif-netdev.c	/^dpif_netdev_register_upcall_cb(struct dpif *dpif, upcall_callback *cb,$/;"	f	file:
dpif_netdev_run	lib/dpif-netdev.c	/^dpif_netdev_run(struct dpif *dpif)$/;"	f	file:
dpif_netdev_wait	lib/dpif-netdev.c	/^dpif_netdev_wait(struct dpif *dpif)$/;"	f	file:
dpif_netlink	lib/dpif-netlink.c	/^VLOG_DEFINE_THIS_MODULE(dpif_netlink);$/;"	v
dpif_netlink	lib/dpif-netlink.c	/^struct dpif_netlink {$/;"	s	file:
dpif_netlink_cast	lib/dpif-netlink.c	/^dpif_netlink_cast(const struct dpif *dpif)$/;"	f	file:
dpif_netlink_class	lib/dpif-netlink.c	/^const struct dpif_class dpif_netlink_class = {$/;"	v	typeref:struct:dpif_class
dpif_netlink_close	lib/dpif-netlink.c	/^dpif_netlink_close(struct dpif *dpif_)$/;"	f	file:
dpif_netlink_destroy	lib/dpif-netlink.c	/^dpif_netlink_destroy(struct dpif *dpif_)$/;"	f	file:
dpif_netlink_dp	lib/dpif-netlink.c	/^struct dpif_netlink_dp {$/;"	s	file:
dpif_netlink_dp_dump_start	lib/dpif-netlink.c	/^dpif_netlink_dp_dump_start(struct nl_dump *dump)$/;"	f	file:
dpif_netlink_dp_from_ofpbuf	lib/dpif-netlink.c	/^dpif_netlink_dp_from_ofpbuf(struct dpif_netlink_dp *dp, const struct ofpbuf *buf)$/;"	f	file:
dpif_netlink_dp_get	lib/dpif-netlink.c	/^dpif_netlink_dp_get(const struct dpif *dpif_, struct dpif_netlink_dp *reply,$/;"	f	file:
dpif_netlink_dp_init	lib/dpif-netlink.c	/^dpif_netlink_dp_init(struct dpif_netlink_dp *dp)$/;"	f	file:
dpif_netlink_dp_to_ofpbuf	lib/dpif-netlink.c	/^dpif_netlink_dp_to_ofpbuf(const struct dpif_netlink_dp *dp, struct ofpbuf *buf)$/;"	f	file:
dpif_netlink_dp_transact	lib/dpif-netlink.c	/^dpif_netlink_dp_transact(const struct dpif_netlink_dp *request,$/;"	f	file:
dpif_netlink_encode_execute	lib/dpif-netlink.c	/^dpif_netlink_encode_execute(int dp_ifindex, const struct dpif_execute *d_exec,$/;"	f	file:
dpif_netlink_enumerate	lib/dpif-netlink.c	/^dpif_netlink_enumerate(struct sset *all_dps,$/;"	f	file:
dpif_netlink_flow	lib/dpif-netlink.c	/^struct dpif_netlink_flow {$/;"	s	file:
dpif_netlink_flow_dump	lib/dpif-netlink.c	/^struct dpif_netlink_flow_dump {$/;"	s	file:
dpif_netlink_flow_dump_cast	lib/dpif-netlink.c	/^dpif_netlink_flow_dump_cast(struct dpif_flow_dump *dump)$/;"	f	file:
dpif_netlink_flow_dump_create	lib/dpif-netlink.c	/^dpif_netlink_flow_dump_create(const struct dpif *dpif_, bool terse)$/;"	f	file:
dpif_netlink_flow_dump_destroy	lib/dpif-netlink.c	/^dpif_netlink_flow_dump_destroy(struct dpif_flow_dump *dump_)$/;"	f	file:
dpif_netlink_flow_dump_next	lib/dpif-netlink.c	/^dpif_netlink_flow_dump_next(struct dpif_flow_dump_thread *thread_,$/;"	f	file:
dpif_netlink_flow_dump_thread	lib/dpif-netlink.c	/^struct dpif_netlink_flow_dump_thread {$/;"	s	file:
dpif_netlink_flow_dump_thread_cast	lib/dpif-netlink.c	/^dpif_netlink_flow_dump_thread_cast(struct dpif_flow_dump_thread *thread)$/;"	f	file:
dpif_netlink_flow_dump_thread_create	lib/dpif-netlink.c	/^dpif_netlink_flow_dump_thread_create(struct dpif_flow_dump *dump_)$/;"	f	file:
dpif_netlink_flow_dump_thread_destroy	lib/dpif-netlink.c	/^dpif_netlink_flow_dump_thread_destroy(struct dpif_flow_dump_thread *thread_)$/;"	f	file:
dpif_netlink_flow_flush	lib/dpif-netlink.c	/^dpif_netlink_flow_flush(struct dpif *dpif_)$/;"	f	file:
dpif_netlink_flow_from_ofpbuf	lib/dpif-netlink.c	/^dpif_netlink_flow_from_ofpbuf(struct dpif_netlink_flow *flow,$/;"	f	file:
dpif_netlink_flow_get	lib/dpif-netlink.c	/^dpif_netlink_flow_get(const struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_flow_get__	lib/dpif-netlink.c	/^dpif_netlink_flow_get__(const struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_flow_get_stats	lib/dpif-netlink.c	/^dpif_netlink_flow_get_stats(const struct dpif_netlink_flow *flow,$/;"	f	file:
dpif_netlink_flow_init	lib/dpif-netlink.c	/^dpif_netlink_flow_init(struct dpif_netlink_flow *flow)$/;"	f	file:
dpif_netlink_flow_init_ufid	lib/dpif-netlink.c	/^dpif_netlink_flow_init_ufid(struct dpif_netlink_flow *request,$/;"	f	file:
dpif_netlink_flow_to_dpif_flow	lib/dpif-netlink.c	/^dpif_netlink_flow_to_dpif_flow(struct dpif *dpif, struct dpif_flow *dpif_flow,$/;"	f	file:
dpif_netlink_flow_to_ofpbuf	lib/dpif-netlink.c	/^dpif_netlink_flow_to_ofpbuf(const struct dpif_netlink_flow *flow,$/;"	f	file:
dpif_netlink_flow_transact	lib/dpif-netlink.c	/^dpif_netlink_flow_transact(struct dpif_netlink_flow *request,$/;"	f	file:
dpif_netlink_get_datapath_version	lib/dpif-netlink.c	/^dpif_netlink_get_datapath_version(void)$/;"	f	file:
dpif_netlink_get_stats	lib/dpif-netlink.c	/^dpif_netlink_get_stats(const struct dpif *dpif_, struct dpif_dp_stats *stats)$/;"	f	file:
dpif_netlink_handler_init	lib/dpif-netlink.c	/^dpif_netlink_handler_init(struct dpif_handler *handler)$/;"	f	file:
dpif_netlink_handler_uninit	lib/dpif-netlink.c	/^dpif_netlink_handler_uninit(struct dpif_handler *handler)$/;"	f	file:
dpif_netlink_handlers_set	lib/dpif-netlink.c	/^dpif_netlink_handlers_set(struct dpif *dpif_, uint32_t n_handlers)$/;"	f	file:
dpif_netlink_init	lib/dpif-netlink.c	/^dpif_netlink_init(void)$/;"	f	file:
dpif_netlink_init_flow_del	lib/dpif-netlink.c	/^dpif_netlink_init_flow_del(struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_init_flow_del__	lib/dpif-netlink.c	/^dpif_netlink_init_flow_del__(struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_init_flow_get	lib/dpif-netlink.c	/^dpif_netlink_init_flow_get(const struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_init_flow_get__	lib/dpif-netlink.c	/^dpif_netlink_init_flow_get__(const struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_init_flow_put	lib/dpif-netlink.c	/^dpif_netlink_init_flow_put(struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_is_internal_device	lib/dpif-netlink.c	/^dpif_netlink_is_internal_device(const char *name)$/;"	f
dpif_netlink_open	lib/dpif-netlink.c	/^dpif_netlink_open(const struct dpif_class *class OVS_UNUSED, const char *name,$/;"	f	file:
dpif_netlink_operate	lib/dpif-netlink.c	/^dpif_netlink_operate(struct dpif *dpif_, struct dpif_op **ops, size_t n_ops)$/;"	f	file:
dpif_netlink_operate__	lib/dpif-netlink.c	/^dpif_netlink_operate__(struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_port_add	lib/dpif-netlink.c	/^dpif_netlink_port_add(struct dpif *dpif_, struct netdev *netdev,$/;"	f	file:
dpif_netlink_port_del	lib/dpif-netlink.c	/^dpif_netlink_port_del(struct dpif *dpif_, odp_port_t port_no)$/;"	f	file:
dpif_netlink_port_dump_done	lib/dpif-netlink.c	/^dpif_netlink_port_dump_done(const struct dpif *dpif_ OVS_UNUSED, void *state_)$/;"	f	file:
dpif_netlink_port_dump_next	lib/dpif-netlink.c	/^dpif_netlink_port_dump_next(const struct dpif *dpif_, void *state_,$/;"	f	file:
dpif_netlink_port_dump_next__	lib/dpif-netlink.c	/^dpif_netlink_port_dump_next__(const struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_port_dump_start	lib/dpif-netlink.c	/^dpif_netlink_port_dump_start(const struct dpif *dpif_, void **statep)$/;"	f	file:
dpif_netlink_port_dump_start__	lib/dpif-netlink.c	/^dpif_netlink_port_dump_start__(const struct dpif_netlink *dpif,$/;"	f	file:
dpif_netlink_port_get_pid	lib/dpif-netlink.c	/^dpif_netlink_port_get_pid(const struct dpif *dpif_, odp_port_t port_no,$/;"	f	file:
dpif_netlink_port_poll	lib/dpif-netlink.c	/^dpif_netlink_port_poll(const struct dpif *dpif_, char **devnamep)$/;"	f	file:
dpif_netlink_port_poll_wait	lib/dpif-netlink.c	/^dpif_netlink_port_poll_wait(const struct dpif *dpif_)$/;"	f	file:
dpif_netlink_port_query__	lib/dpif-netlink.c	/^dpif_netlink_port_query__(const struct dpif_netlink *dpif, odp_port_t port_no,$/;"	f	file:
dpif_netlink_port_query_by_name	lib/dpif-netlink.c	/^dpif_netlink_port_query_by_name(const struct dpif *dpif_, const char *devname,$/;"	f	file:
dpif_netlink_port_query_by_number	lib/dpif-netlink.c	/^dpif_netlink_port_query_by_number(const struct dpif *dpif_, odp_port_t port_no,$/;"	f	file:
dpif_netlink_port_state	lib/dpif-netlink.c	/^struct dpif_netlink_port_state {$/;"	s	file:
dpif_netlink_queue_to_priority	lib/dpif-netlink.c	/^dpif_netlink_queue_to_priority(const struct dpif *dpif OVS_UNUSED,$/;"	f	file:
dpif_netlink_recv	lib/dpif-netlink.c	/^dpif_netlink_recv(struct dpif *dpif_, uint32_t handler_id,$/;"	f	file:
dpif_netlink_recv_purge	lib/dpif-netlink.c	/^dpif_netlink_recv_purge(struct dpif *dpif_)$/;"	f	file:
dpif_netlink_recv_set	lib/dpif-netlink.c	/^dpif_netlink_recv_set(struct dpif *dpif_, bool enable)$/;"	f	file:
dpif_netlink_recv_wait	lib/dpif-netlink.c	/^dpif_netlink_recv_wait(struct dpif *dpif_, uint32_t handler_id)$/;"	f	file:
dpif_netlink_run	lib/dpif-netlink.c	/^dpif_netlink_run(struct dpif *dpif_)$/;"	f	file:
dpif_netlink_vport	lib/dpif-netlink.h	/^struct dpif_netlink_vport {$/;"	s
dpif_netlink_vport_from_ofpbuf	lib/dpif-netlink.c	/^dpif_netlink_vport_from_ofpbuf(struct dpif_netlink_vport *vport,$/;"	f	file:
dpif_netlink_vport_get	lib/dpif-netlink.c	/^dpif_netlink_vport_get(const char *name, struct dpif_netlink_vport *reply,$/;"	f
dpif_netlink_vport_init	lib/dpif-netlink.c	/^dpif_netlink_vport_init(struct dpif_netlink_vport *vport)$/;"	f
dpif_netlink_vport_to_ofpbuf	lib/dpif-netlink.c	/^dpif_netlink_vport_to_ofpbuf(const struct dpif_netlink_vport *vport,$/;"	f	file:
dpif_netlink_vport_transact	lib/dpif-netlink.c	/^dpif_netlink_vport_transact(const struct dpif_netlink_vport *request,$/;"	f
dpif_normalize_type	lib/dpif.c	/^dpif_normalize_type(const char *type)$/;"	f
dpif_op	lib/dpif.h	/^struct dpif_op {$/;"	s
dpif_op_type	lib/dpif.h	/^enum dpif_op_type {$/;"	g
dpif_open	lib/dpif.c	/^dpif_open(const char *name, const char *type, struct dpif **dpifp)$/;"	f
dpif_operate	lib/dpif.c	/^dpif_operate(struct dpif *dpif, struct dpif_op **ops, size_t n_ops)$/;"	f
dpif_poll_threads_set	lib/dpif.c	/^dpif_poll_threads_set(struct dpif *dpif, unsigned int n_rxqs,$/;"	f
dpif_port	lib/dpif.h	/^struct dpif_port {$/;"	s
dpif_port	lib/netdev-vport.c	/^    const char *dpif_port;$/;"	m	struct:vport_class	file:
dpif_port_add	lib/dpif.c	/^COVERAGE_DEFINE(dpif_port_add);$/;"	v
dpif_port_add	lib/dpif.c	/^dpif_port_add(struct dpif *dpif, struct netdev *netdev, odp_port_t *port_nop)$/;"	f
dpif_port_clone	lib/dpif.c	/^dpif_port_clone(struct dpif_port *dst, const struct dpif_port *src)$/;"	f
dpif_port_del	lib/dpif.c	/^COVERAGE_DEFINE(dpif_port_del);$/;"	v
dpif_port_del	lib/dpif.c	/^dpif_port_del(struct dpif *dpif, odp_port_t port_no)$/;"	f
dpif_port_destroy	lib/dpif.c	/^dpif_port_destroy(struct dpif_port *dpif_port)$/;"	f
dpif_port_dump	lib/dpif.h	/^struct dpif_port_dump {$/;"	s
dpif_port_dump_done	lib/dpif.c	/^dpif_port_dump_done(struct dpif_port_dump *dump)$/;"	f
dpif_port_dump_next	lib/dpif.c	/^dpif_port_dump_next(struct dpif_port_dump *dump, struct dpif_port *port)$/;"	f
dpif_port_dump_start	lib/dpif.c	/^dpif_port_dump_start(struct dpif_port_dump *dump, const struct dpif *dpif)$/;"	f
dpif_port_exists	lib/dpif.c	/^dpif_port_exists(const struct dpif *dpif, const char *devname)$/;"	f
dpif_port_get_name	lib/dpif.c	/^dpif_port_get_name(struct dpif *dpif, odp_port_t port_no,$/;"	f
dpif_port_get_pid	lib/dpif.c	/^dpif_port_get_pid(const struct dpif *dpif, odp_port_t port_no, uint32_t hash)$/;"	f
dpif_port_open_type	lib/dpif.c	/^dpif_port_open_type(const char *datapath_type, const char *port_type)$/;"	f
dpif_port_poll	lib/dpif.c	/^dpif_port_poll(const struct dpif *dpif, char **devnamep)$/;"	f
dpif_port_poll_wait	lib/dpif.c	/^dpif_port_poll_wait(const struct dpif *dpif)$/;"	f
dpif_port_query_by_name	lib/dpif.c	/^dpif_port_query_by_name(const struct dpif *dpif, const char *devname,$/;"	f
dpif_port_query_by_number	lib/dpif.c	/^dpif_port_query_by_number(const struct dpif *dpif, odp_port_t port_no,$/;"	f
dpif_print_packet	lib/dpif.c	/^dpif_print_packet(struct dpif *dpif, struct dpif_upcall *upcall)$/;"	f
dpif_probe_feature	lib/dpif.c	/^dpif_probe_feature(struct dpif *dpif, const char *name,$/;"	f
dpif_purge	lib/dpif.c	/^COVERAGE_DEFINE(dpif_purge);$/;"	v
dpif_queue_to_priority	lib/dpif.c	/^dpif_queue_to_priority(const struct dpif *dpif, uint32_t queue_id,$/;"	f
dpif_recv	lib/dpif.c	/^dpif_recv(struct dpif *dpif, uint32_t handler_id, struct dpif_upcall *upcall,$/;"	f
dpif_recv_purge	lib/dpif.c	/^dpif_recv_purge(struct dpif *dpif)$/;"	f
dpif_recv_set	lib/dpif.c	/^dpif_recv_set(struct dpif *dpif, bool enable)$/;"	f
dpif_recv_wait	lib/dpif.c	/^dpif_recv_wait(struct dpif *dpif, uint32_t handler_id)$/;"	f
dpif_register_dp_purge_cb	lib/dpif.c	/^dpif_register_dp_purge_cb(struct dpif *dpif, dp_purge_callback *cb, void *aux)$/;"	f
dpif_register_upcall_cb	lib/dpif.c	/^dpif_register_upcall_cb(struct dpif *dpif, upcall_callback *cb, void *aux)$/;"	f
dpif_run	lib/dpif.c	/^dpif_run(struct dpif *dpif)$/;"	f
dpif_sflow	ofproto/ofproto-dpif-sflow.c	/^struct dpif_sflow {$/;"	s	file:
dpif_sflow_actions	ofproto/ofproto-dpif-sflow.h	/^struct dpif_sflow_actions {$/;"	s
dpif_sflow_capture_input_mpls	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_capture_input_mpls(const struct flow *flow,$/;"	f	file:
dpif_sflow_cookie_num_outputs	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_cookie_num_outputs(const union user_action_cookie *cookie)$/;"	f	file:
dpif_sflow_create	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_create(void)$/;"	f
dpif_sflow_encode_mpls_stack	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_encode_mpls_stack(SFLLabelStack *stack,$/;"	f	file:
dpif_sflow_pop_mpls_lse	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_pop_mpls_lse(struct dpif_sflow_actions *sflow_actions)$/;"	f	file:
dpif_sflow_port	ofproto/ofproto-dpif-sflow.c	/^struct dpif_sflow_port {$/;"	s	file:
dpif_sflow_push_mpls_lse	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_push_mpls_lse(struct dpif_sflow_actions *sflow_actions,$/;"	f	file:
dpif_sflow_read_actions	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_read_actions(const struct flow *flow,$/;"	f
dpif_sflow_ref	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_ref(const struct dpif_sflow *ds_)$/;"	f
dpif_sflow_set_mpls	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_set_mpls(struct dpif_sflow_actions *sflow_actions,$/;"	f	file:
dpif_sflow_tunnel_proto	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_tunnel_proto(enum dpif_sflow_tunnel_type tunnel_type)$/;"	f	file:
dpif_sflow_tunnel_type	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_tunnel_type(struct ofport *ofport) {$/;"	f	file:
dpif_sflow_tunnel_type	ofproto/ofproto-dpif-sflow.c	/^enum dpif_sflow_tunnel_type {$/;"	g	file:
dpif_sflow_tunnel_v4	ofproto/ofproto-dpif-sflow.c	/^dpif_sflow_tunnel_v4(uint8_t tunnel_ipproto,$/;"	f	file:
dpif_show_backer	ofproto/ofproto-dpif.c	/^dpif_show_backer(const struct dpif_backer *backer, struct ds *ds)$/;"	f	file:
dpif_supports_tnl_push_pop	lib/dpif.c	/^dpif_supports_tnl_push_pop(const struct dpif *dpif)$/;"	f
dpif_type	lib/dpif.c	/^dpif_type(const struct dpif *dpif)$/;"	f
dpif_uninit	lib/dpif.c	/^dpif_uninit(struct dpif *dpif, bool close)$/;"	f
dpif_upcall	lib/dpif.h	/^struct dpif_upcall {$/;"	s
dpif_upcall_type	lib/dpif.h	/^enum dpif_upcall_type {$/;"	g
dpif_upcall_type_to_string	lib/dpif.c	/^dpif_upcall_type_to_string(enum dpif_upcall_type type)$/;"	f
dpif_wait	lib/dpif.c	/^dpif_wait(struct dpif *dpif)$/;"	f
dpif_windows_vport_sock	lib/dpif-netlink.c	/^struct dpif_windows_vport_sock {$/;"	s	file:
dpmsg_rl	lib/dpif.c	/^static struct vlog_rate_limit dpmsg_rl = VLOG_RATE_LIMIT_INIT(600, 600);$/;"	v	typeref:struct:vlog_rate_limit	file:
dps	datapath/datapath.h	/^	struct list_head dps;$/;"	m	struct:ovs_net	typeref:struct:ovs_net::list_head
dps_for_each	lib/dpctl.c	/^dps_for_each(struct dpctl_params *dpctl_p, dps_for_each_cb cb)$/;"	f	file:
dps_for_each_cb	lib/dpctl.c	/^typedef void (*dps_for_each_cb)(struct dpif *, struct dpctl_params *);$/;"	t	file:
drain_fd	lib/socket-util.c	/^drain_fd(int fd, size_t n_packets)$/;"	f
drain_rcvbuf	lib/socket-util-unix.c	/^drain_rcvbuf(int fd)$/;"	f
dropDuetoChecksum	datapath-windows/ovsext/User.h	/^    UINT32 dropDuetoChecksum;$/;"	m	struct:_OVS_USER_STATS
dropDuetoResource	datapath-windows/ovsext/User.h	/^    UINT32 dropDuetoResource;$/;"	m	struct:_OVS_USER_STATS
dropEvents	tests/test-sflow.c	/^    uint32_t dropEvents;$/;"	m	struct:sflow_xdr	file:
dropNbl	datapath-windows/ovsext/PacketIO.h	/^    PNET_BUFFER_LIST dropNbl;$/;"	m	struct:OvsCompletionList
dropNblNext	datapath-windows/ovsext/PacketIO.h	/^    PNET_BUFFER_LIST *dropNblNext;$/;"	m	struct:OvsCompletionList
drop_frags_rule	ofproto/ofproto-dpif.c	/^    struct rule_dpif *drop_frags_rule; \/* Used in OFPC_FRAG_DROP mode. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::rule_dpif	file:
drop_packet	ofproto/pinsched.c	/^drop_packet(struct pinsched *ps)$/;"	f	file:
drops	lib/sflow.h	/^    u_int32_t drops;                \/* Number of times a packet was dropped due to$/;"	m	struct:_SFLFlow_sample
drops	lib/sflow.h	/^    u_int32_t drops;                \/* Number of times a packet was dropped due to$/;"	m	struct:_SFLFlow_sample_expanded
drvinfo	lib/netdev-linux.c	/^    struct ethtool_drvinfo drvinfo;  \/* Cached from ETHTOOL_GDRVINFO. *\/$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::ethtool_drvinfo	file:
dry_run	lib/ovsdb-idl.c	/^    bool dry_run;$/;"	m	struct:ovsdb_idl_txn	file:
dry_run	ovn/utilities/ovn-nbctl.c	/^static bool dry_run;$/;"	v	file:
dry_run	ovn/utilities/ovn-sbctl.c	/^static bool dry_run;$/;"	v	file:
dry_run	utilities/ovs-vsctl.c	/^static bool dry_run;$/;"	v	file:
dry_run	vtep/vtep-ctl.c	/^static bool dry_run;$/;"	v	file:
ds	lib/dynamic-string.h	/^struct ds {$/;"	s
ds	lib/json.c	/^    struct ds *ds;$/;"	m	struct:json_serializer	typeref:struct:json_serializer::ds	file:
ds	vswitchd/bridge.c	/^    struct ds *ds;$/;"	m	struct:qos_unixctl_show_cbdata	typeref:struct:qos_unixctl_show_cbdata::ds	file:
dsClass	tests/test-sflow.c	/^    uint32_t dsClass;$/;"	m	struct:sflow_xdr	file:
dsIndex	tests/test-sflow.c	/^    uint32_t dsIndex;$/;"	m	struct:sflow_xdr	file:
ds_chomp	lib/dynamic-string.c	/^ds_chomp(struct ds *ds, int c)$/;"	f
ds_class	lib/sflow.h	/^    u_int32_t ds_class;             \/* EXPANDED *\/$/;"	m	struct:_SFLFlow_sample_expanded
ds_class	lib/sflow.h	/^    u_int32_t ds_class;           \/* EXPANDED *\/$/;"	m	struct:_SFLCounters_sample_expanded
ds_class	lib/sflow_api.h	/^    u_int32_t ds_class;$/;"	m	struct:_SFLDataSource_instance
ds_clear	lib/dynamic-string.c	/^ds_clear(struct ds *ds)$/;"	f
ds_cstr	lib/dynamic-string.c	/^ds_cstr(struct ds *ds)$/;"	f
ds_cstr_ro	lib/dynamic-string.c	/^ds_cstr_ro(const struct ds *ds)$/;"	f
ds_destroy	lib/dynamic-string.c	/^ds_destroy(struct ds *ds)$/;"	f
ds_get_line	lib/dynamic-string.c	/^ds_get_line(struct ds *ds, FILE *file)$/;"	f
ds_get_preprocessed_line	lib/dynamic-string.c	/^ds_get_preprocessed_line(struct ds *ds, FILE *file, int *line_numberp)$/;"	f
ds_get_test_line	lib/dynamic-string.c	/^ds_get_test_line(struct ds *ds, FILE *file)$/;"	f
ds_index	lib/sflow.h	/^    u_int32_t ds_index;             \/* EXPANDED *\/$/;"	m	struct:_SFLFlow_sample_expanded
ds_index	lib/sflow.h	/^    u_int32_t ds_index;           \/* EXPANDED *\/$/;"	m	struct:_SFLCounters_sample_expanded
ds_index	lib/sflow_api.h	/^    u_int32_t ds_index;$/;"	m	struct:_SFLDataSource_instance
ds_init	lib/dynamic-string.c	/^ds_init(struct ds *ds)$/;"	f
ds_instance	lib/sflow_api.h	/^    u_int32_t ds_instance;$/;"	m	struct:_SFLDataSource_instance
ds_last	lib/dynamic-string.c	/^ds_last(const struct ds *ds)$/;"	f
ds_put_and_free_cstr	lib/dynamic-string.c	/^ds_put_and_free_cstr(struct ds *ds, char *s)$/;"	f
ds_put_buffer	lib/dynamic-string.c	/^ds_put_buffer(struct ds *ds, const char *s, size_t n)$/;"	f
ds_put_cfm_fault	lib/cfm.c	/^ds_put_cfm_fault(struct ds *ds, int fault)$/;"	f	file:
ds_put_char	lib/dynamic-string.h	/^ds_put_char(struct ds *ds, char c)$/;"	f
ds_put_char__	lib/dynamic-string.c	/^ds_put_char__(struct ds *ds, char c)$/;"	f
ds_put_char_multiple	lib/dynamic-string.c	/^ds_put_char_multiple(struct ds *ds, char c, size_t n)$/;"	f
ds_put_cstr	lib/dynamic-string.c	/^ds_put_cstr(struct ds *ds, const char *s)$/;"	f
ds_put_format	lib/dynamic-string.c	/^ds_put_format(struct ds *ds, const char *format, ...)$/;"	f
ds_put_format_valist	lib/dynamic-string.c	/^ds_put_format_valist(struct ds *ds, const char *format, va_list args_)$/;"	f
ds_put_hex	lib/dynamic-string.c	/^ds_put_hex(struct ds *ds, const void *buf_, size_t size)$/;"	f
ds_put_hex_dump	lib/dynamic-string.c	/^ds_put_hex_dump(struct ds *ds, const void *buf_, size_t size,$/;"	f
ds_put_lacp_state	lib/lacp.c	/^ds_put_lacp_state(struct ds *ds, uint8_t state)$/;"	f	file:
ds_put_printable	lib/dynamic-string.c	/^ds_put_printable(struct ds *ds, const char *s, size_t n)$/;"	f
ds_put_strftime_msec	lib/dynamic-string.c	/^ds_put_strftime_msec(struct ds *ds, const char *template, long long int when,$/;"	f
ds_put_uninit	lib/dynamic-string.c	/^ds_put_uninit(struct ds *ds, size_t n)$/;"	f
ds_put_utf8	lib/dynamic-string.c	/^ds_put_utf8(struct ds *ds, int uc)$/;"	f
ds_reserve	lib/dynamic-string.c	/^ds_reserve(struct ds *ds, size_t min_length)$/;"	f
ds_steal_cstr	lib/dynamic-string.c	/^ds_steal_cstr(struct ds *ds)$/;"	f
ds_swap	lib/dynamic-string.c	/^ds_swap(struct ds *a, struct ds *b)$/;"	f
ds_truncate	lib/dynamic-string.c	/^ds_truncate(struct ds *ds, size_t new_length)$/;"	f
dsap	datapath-windows/ovsext/Ethernet.h	/^    UINT8   dsap;$/;"	m	struct:Eth_LLC16
dsap	datapath-windows/ovsext/Ethernet.h	/^    UINT8   dsap;$/;"	m	struct:Eth_LLC8
dscp	lib/jsonrpc.c	/^    uint8_t dscp;$/;"	m	struct:jsonrpc_session	file:
dscp	lib/ofp-actions.h	/^    uint8_t dscp;               \/* DSCP in high 6 bits, rest ignored. *\/$/;"	m	struct:ofpact_dscp
dscp	lib/rconn.c	/^    uint8_t dscp;$/;"	m	struct:rconn	file:
dscp	lib/vswitch-idl.h	/^	int64_t *dscp;$/;"	m	struct:ovsrec_queue
dscp	ofproto/connmgr.c	/^    uint8_t dscp;               \/* DSCP Value for controller connection *\/$/;"	m	struct:ofservice	file:
dscp	ofproto/ofproto-dpif-xlate.c	/^    uint8_t dscp;               \/* DSCP bits to mark outgoing traffic with. *\/$/;"	m	struct:skb_priority_to_dscp	file:
dscp	ofproto/ofproto.h	/^    uint8_t dscp;               \/* DSCP bits (e.g. [0, 63]). *\/$/;"	m	struct:ofproto_port_queue
dscp	ofproto/ofproto.h	/^    uint8_t dscp;               \/* DSCP value for controller connection. *\/$/;"	m	struct:ofproto_controller
dscp	ovsdb/jsonrpc-server.c	/^    uint8_t dscp;$/;"	m	struct:ovsdb_jsonrpc_remote	file:
dscp	ovsdb/jsonrpc-server.h	/^    int dscp;                   \/* Dscp value for manager connections *\/$/;"	m	struct:ovsdb_jsonrpc_options
dscp_from_skb_priority	ofproto/ofproto-dpif-xlate.c	/^dscp_from_skb_priority(const struct xport *xport, uint32_t skb_priority,$/;"	f	file:
dsi	lib/sflow_api.h	/^    SFLDataSource_instance dsi;$/;"	m	struct:_SFLPoller
dsi	lib/sflow_api.h	/^    SFLDataSource_instance dsi;$/;"	m	struct:_SFLSampler
dsi	ofproto/ofproto-dpif-sflow.c	/^    SFLDataSource_instance dsi; \/* sFlow library's notion of port number. *\/$/;"	m	struct:dpif_sflow_port	file:
dst	datapath-windows/ovsext/DpInternal.h	/^        ovs_be32 dst;$/;"	m	struct:OvsIPv4TunnelKey::__anon7
dst	datapath-windows/ovsext/Ethernet.h	/^    Eth_Address     dst;       \/\/ all types of ethernet frame have dst first$/;"	m	struct:Eth_Header
dst	datapath/flow.h	/^				__be32 dst;	\/* IP destination address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon34::__anon35
dst	datapath/flow.h	/^				struct in6_addr dst;	\/* IPv6 destination address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon37::__anon38	typeref:struct:sw_flow_key::__anon33::__anon37::__anon38::in6_addr
dst	datapath/flow.h	/^		__be16 dst;		\/* TCP\/UDP\/SCTP destination port. *\/$/;"	m	struct:sw_flow_key::__anon32
dst	datapath/flow.h	/^		u8     dst[ETH_ALEN];	\/* Ethernet destination address. *\/$/;"	m	struct:sw_flow_key::__anon28
dst	datapath/linux/compat/include/net/flow_keys.h	/^	__be32 dst;$/;"	m	struct:flow_keys
dst	lib/ofp-actions.c	/^    ovs_be32 dst;                   \/* Destination register. *\/$/;"	m	struct:nx_action_reg_load	file:
dst	lib/ofp-actions.c	/^    ovs_be32 dst;               \/* Destination. *\/$/;"	m	struct:nx_action_bundle	file:
dst	lib/ofp-actions.c	/^    ovs_be32 dst;               \/* Destination. *\/$/;"	m	struct:nx_action_multipath	file:
dst	lib/ofp-actions.h	/^    struct mf_subfield dst;   \/* NX_LEARN_DST_MATCH, NX_LEARN_DST_LOAD only. *\/$/;"	m	struct:ofpact_learn_spec	typeref:struct:ofpact_learn_spec::mf_subfield
dst	lib/ofp-actions.h	/^    struct mf_subfield dst;$/;"	m	struct:ofpact_bundle	typeref:struct:ofpact_bundle::mf_subfield
dst	lib/ofp-actions.h	/^    struct mf_subfield dst;$/;"	m	struct:ofpact_multipath	typeref:struct:ofpact_multipath::mf_subfield
dst	lib/ofp-actions.h	/^    struct mf_subfield dst;$/;"	m	struct:ofpact_reg_move	typeref:struct:ofpact_reg_move::mf_subfield
dst	lib/ovsdb-idl.c	/^    struct ovsdb_idl_row *dst;  \/* Destination row. *\/$/;"	m	struct:ovsdb_idl_arc	typeref:struct:ovsdb_idl_arc::ovsdb_idl_row	file:
dst	lib/sflow.h	/^    SFLAddress dst;    \/* Destination address *\/$/;"	m	struct:_SFLExtended_nat
dstIpAddr	datapath-windows/ovsext/IpHelper.h	/^        UINT32        dstIpAddr;$/;"	m	struct:_OVS_FWD_INFO::__anon19
dstMacAddr	datapath-windows/ovsext/IpHelper.h	/^        UINT8         dstMacAddr[ETH_ADDR_LEN];$/;"	m	struct:_OVS_FWD_INFO::__anon19
dstPort	datapath-windows/ovsext/Stt.h	/^    UINT16 dstPort;$/;"	m	struct:_OVS_STT_VPORT
dstPort	datapath-windows/ovsext/Vxlan.h	/^    UINT16 dstPort;$/;"	m	struct:_OVS_VXLAN_VPORT
dst_addr	lib/netflow.h	/^    ovs_be32 dst_addr;             \/* Destination IP address. *\/$/;"	m	struct:netflow_v5_record
dst_arcs	lib/ovsdb-idl-provider.h	/^    struct ovs_list dst_arcs;   \/* Backward arcs (ovsdb_idl_arc.dst_node). *\/$/;"	m	struct:ovsdb_idl_row	typeref:struct:ovsdb_idl_row::ovs_list
dst_as	lib/netflow.h	/^    ovs_be16 dst_as;               \/* Destination AS ID.  Set to 0. *\/$/;"	m	struct:netflow_v5_record
dst_as_path	lib/sflow.h	/^    SFLExtended_as_path_segment *dst_as_path; \/* list of seqs or sets *\/$/;"	m	struct:_SFLExtended_gateway
dst_as_path_segments	lib/sflow.h	/^    u_int32_t dst_as_path_segments;           \/* number of segments in path *\/$/;"	m	struct:_SFLExtended_gateway
dst_charset	lib/sflow.h	/^    u_int32_t dst_charset;$/;"	m	struct:_SFLExtended_user
dst_get_neighbour_noref	datapath/linux/compat/include/net/dst.h	10;"	d
dst_ip	lib/sflow.h	/^    SFLIPv4   dst_ip;      \/* Destination IP Address *\/$/;"	m	struct:_SFLSampled_ipv4
dst_ip	lib/sflow.h	/^    SFLIPv6   dst_ip;       \/* Destination IP Address *\/$/;"	m	struct:_SFLSampled_ipv6
dst_ip	vtep/vtep-idl.h	/^	char *dst_ip;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_physical_locator
dst_mac	lib/sflow.h	/^    struct eth_addr dst_mac;$/;"	m	struct:_SFLSampled_ethernet	typeref:struct:_SFLSampled_ethernet::eth_addr
dst_mask	lib/netflow.h	/^    uint8_t  dst_mask;             \/* Destination mask bits.  Set to 0. *\/$/;"	m	struct:netflow_v5_record
dst_mask	lib/sflow.h	/^    u_int32_t dst_mask;               \/* Destination address prefix mask bits *\/$/;"	m	struct:_SFLExtended_router
dst_mirrors	ofproto/ofproto-dpif-mirror.c	/^    mirror_mask_t dst_mirrors;  \/* Mirrors triggered when packet sent. *\/$/;"	m	struct:mbundle	file:
dst_node	lib/ovsdb-idl.c	/^    struct ovs_list dst_node;   \/* In dst->dst_arcs list. *\/$/;"	m	struct:ovsdb_idl_arc	typeref:struct:ovsdb_idl_arc::ovs_list	file:
dst_node	ovsdb/row.h	/^    struct ovs_list dst_node;   \/* In destination row's dst_refs list. *\/$/;"	m	struct:ovsdb_weak_ref	typeref:struct:ovsdb_weak_ref::ovs_list
dst_offset	lib/ofp-actions.c	/^    ovs_be16 dst_offset;        \/* Starting bit offset in destination. *\/$/;"	m	struct:ofp15_action_copy_field	file:
dst_offset	lib/ofp-actions.c	/^    ovs_be16 dst_offset;        \/* Starting bit offset in destination. *\/$/;"	m	struct:onf_action_copy_field	file:
dst_ofs	lib/ofp-actions.c	/^    ovs_be16 dst_ofs;               \/* Starting bit offset in destination. *\/$/;"	m	struct:nx_action_reg_move	file:
dst_port	datapath-windows/ovsext/DpInternal.h	/^                ovs_be16 dst_port;$/;"	m	struct:OvsIPv4TunnelKey::__anon7::__anon8::__anon9
dst_port	datapath/linux/vport-lisp.c	/^	__be16 dst_port;$/;"	m	struct:lisp_port	file:
dst_port	datapath/vport-lisp.c	/^	__be16 dst_port;$/;"	m	struct:lisp_port	file:
dst_port	lib/netdev.h	/^    ovs_be16 dst_port;$/;"	m	struct:netdev_tunnel_config
dst_port	lib/netflow.h	/^    ovs_be16 dst_port;$/;"	m	struct:netflow_v5_record
dst_port	lib/sflow.h	/^    u_int32_t dst_port;     \/* TCP\/UDP destination port number or equivalent *\/$/;"	m	struct:_SFLSampled_ipv6
dst_port	lib/sflow.h	/^    u_int32_t dst_port;    \/* TCP\/UDP destination port number or equivalent *\/$/;"	m	struct:_SFLSampled_ipv4
dst_priority	lib/sflow.h	/^    u_int32_t dst_priority;   \/* The 802.1p priority *\/$/;"	m	struct:_SFLExtended_switch
dst_refs	ovsdb/row.h	/^    struct ovs_list dst_refs;   \/* Weak references to this row. *\/$/;"	m	struct:ovsdb_row	typeref:struct:ovsdb_row::ovs_list
dst_type	lib/ofp-actions.h	/^    int dst_type;             \/* One of NX_LEARN_DST_*. *\/$/;"	m	struct:ofpact_learn_spec
dst_user	lib/sflow.h	/^    SFLString dst_user;$/;"	m	struct:_SFLExtended_user
dst_vlan	lib/sflow.h	/^    u_int32_t dst_vlan;       \/* The 802.1Q VLAN id of outgoing frame *\/$/;"	m	struct:_SFLExtended_switch
dsts	ofproto/ofproto-dpif-mirror.c	/^    struct hmapx dsts;          \/* Contains "struct mbundle*"s. *\/$/;"	m	struct:mirror	typeref:struct:mirror::hmapx	file:
dsts	ofproto/ofproto.h	/^    void **dsts;                \/* A set of registered ofbundle handles. *\/$/;"	m	struct:ofproto_mirror_settings
dummy	datapath-windows/ovsext/IpHelper.h	/^        UINT32                  dummy;$/;"	m	union:_OVS_IP_HELPER_REQUEST::__anon21
dummy	lib/ovsdb-idl.c	/^    struct uuid dummy;          \/* Dummy UUID used locally. *\/$/;"	m	struct:ovsdb_idl_txn_insert	typeref:struct:ovsdb_idl_txn_insert::uuid	file:
dummy_class	lib/netdev-dummy.c	/^static const struct netdev_class dummy_class = {$/;"	v	typeref:struct:netdev_class	file:
dummy_enable	lib/dummy.c	/^dummy_enable(const char *arg)$/;"	f
dummy_integer	lib/meta-flow.h	/^        ovs_be64 dummy_integer[15];$/;"	m	struct:mf_subvalue::__anon101
dummy_ipv4	lib/meta-flow.h	/^        ovs_be32 dummy_ipv4[31];$/;"	m	struct:mf_subvalue::__anon103
dummy_ipv6	lib/meta-flow.h	/^        struct in6_addr dummy_ipv6[7];$/;"	m	struct:mf_subvalue::__anon104	typeref:struct:mf_subvalue::__anon104::in6_addr
dummy_level	lib/dummy.h	/^enum dummy_level {$/;"	g
dummy_list_mutex	lib/netdev-dummy.c	/^static struct ovs_list dummy_list OVS_GUARDED_BY(dummy_list_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
dummy_list_mutex	lib/netdev-dummy.c	/^static struct ovs_mutex dummy_list_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
dummy_mac	lib/meta-flow.h	/^        uint8_t dummy_mac[122];$/;"	m	struct:mf_subvalue::__anon102
dummy_netdev_conn_state	lib/netdev-dummy.c	/^enum dummy_netdev_conn_state {$/;"	g	file:
dummy_netdev_get_conn_state	lib/netdev-dummy.c	/^dummy_netdev_get_conn_state(struct dummy_packet_conn *conn)$/;"	f	file:
dummy_packet_conn	lib/netdev-dummy.c	/^struct dummy_packet_conn {$/;"	s	file:
dummy_packet_conn_close	lib/netdev-dummy.c	/^dummy_packet_conn_close(struct dummy_packet_conn *conn)$/;"	f	file:
dummy_packet_conn_get_config	lib/netdev-dummy.c	/^dummy_packet_conn_get_config(struct dummy_packet_conn *conn, struct smap *args)$/;"	f	file:
dummy_packet_conn_init	lib/netdev-dummy.c	/^dummy_packet_conn_init(struct dummy_packet_conn *conn)$/;"	f	file:
dummy_packet_conn_send	lib/netdev-dummy.c	/^dummy_packet_conn_send(struct dummy_packet_conn *conn,$/;"	f	file:
dummy_packet_conn_set_config	lib/netdev-dummy.c	/^dummy_packet_conn_set_config(struct dummy_packet_conn *conn,$/;"	f	file:
dummy_packet_conn_type	lib/netdev-dummy.c	/^enum dummy_packet_conn_type {$/;"	g	file:
dummy_packet_conn_wait	lib/netdev-dummy.c	/^dummy_packet_conn_wait(struct dummy_packet_conn *conn)$/;"	f	file:
dummy_packet_pconn	lib/netdev-dummy.c	/^struct dummy_packet_pconn {$/;"	s	file:
dummy_packet_rconn	lib/netdev-dummy.c	/^struct dummy_packet_rconn {$/;"	s	file:
dummy_packet_stream	lib/netdev-dummy.c	/^struct dummy_packet_stream {$/;"	s	file:
dummy_packet_stream_close	lib/netdev-dummy.c	/^dummy_packet_stream_close(struct dummy_packet_stream *s)$/;"	f	file:
dummy_packet_stream_create	lib/netdev-dummy.c	/^dummy_packet_stream_create(struct stream *stream)$/;"	f	file:
dummy_packet_stream_init	lib/netdev-dummy.c	/^dummy_packet_stream_init(struct dummy_packet_stream *s, struct stream *stream)$/;"	f	file:
dummy_packet_stream_run	lib/netdev-dummy.c	/^dummy_packet_stream_run(struct netdev_dummy *dev, struct dummy_packet_stream *s)$/;"	f	file:
dummy_packet_stream_send	lib/netdev-dummy.c	/^dummy_packet_stream_send(struct dummy_packet_stream *s, const void *buffer, size_t size)$/;"	f	file:
dummy_packet_stream_wait	lib/netdev-dummy.c	/^dummy_packet_stream_wait(struct dummy_packet_stream *s)$/;"	f	file:
dump	lib/dpif-netdev.c	/^    struct dpif_netdev_flow_dump *dump;$/;"	m	struct:dpif_netdev_flow_dump_thread	typeref:struct:dpif_netdev_flow_dump_thread::dpif_netdev_flow_dump	file:
dump	lib/dpif-netlink.c	/^    struct dpif_netlink_flow_dump *dump;$/;"	m	struct:dpif_netlink_flow_dump_thread	typeref:struct:dpif_netlink_flow_dump_thread::dpif_netlink_flow_dump	file:
dump	lib/dpif-netlink.c	/^    struct nl_dump dump;$/;"	m	struct:dpif_netlink_port_state	typeref:struct:dpif_netlink_port_state::nl_dump	file:
dump	lib/netdev-linux.c	/^    struct nl_dump dump;$/;"	m	struct:queue_dump_state	typeref:struct:queue_dump_state::nl_dump	file:
dump	lib/ovs-numa.h	/^    struct ovs_list dump;$/;"	m	struct:ovs_numa_dump	typeref:struct:ovs_numa_dump::ovs_list
dump	ofproto/ofproto-dpif-upcall.c	/^    struct dpif_flow_dump *dump;       \/* DPIF flow dump state. *\/$/;"	m	struct:udpif	typeref:struct:udpif::dpif_flow_dump	file:
dump	tests/test-rstp.c	/^dump(struct test_case *tc)$/;"	f	file:
dump	tests/test-stp.c	/^dump(struct test_case *tc)$/;"	f	file:
dumpState	datapath-windows/ovsext/Datapath.h	/^    } dumpState;                \/* data to support dump commands. *\/$/;"	m	struct:_OVS_OPEN_INSTANCE	typeref:struct:_OVS_OPEN_INSTANCE::__anon4
dump_bridge_tree	tests/test-rstp.c	/^dump_bridge_tree(struct test_case *tc, struct bridge *b, int level)$/;"	f	file:
dump_bridge_tree	tests/test-stp.c	/^dump_bridge_tree(struct test_case *tc, struct bridge *b, int level)$/;"	f	file:
dump_cb	lib/dpctl.c	/^dump_cb(struct dpif *dpif, struct dpctl_params *dpctl_p)$/;"	f	file:
dump_duration	ofproto/ofproto-dpif-upcall.c	/^    long long int dump_duration;       \/* Duration of the last flow dump. *\/$/;"	m	struct:udpif	file:
dump_lan_tree	tests/test-rstp.c	/^dump_lan_tree(struct test_case *tc, struct lan *lan, int level)$/;"	f	file:
dump_lan_tree	tests/test-stp.c	/^dump_lan_tree(struct test_case *tc, struct lan *lan, int level)$/;"	f	file:
dump_queue_stats	lib/netdev-provider.h	/^    int (*dump_queue_stats)(const struct netdev *netdev,$/;"	m	struct:netdev_class
dump_rdac_groups	utilities/bugtool/ovs-bugtool	/^def dump_rdac_groups(cap):$/;"	f
dump_scsi_hosts	utilities/bugtool/ovs-bugtool	/^def dump_scsi_hosts(cap):$/;"	f
dump_seq	ofproto/ofproto-dpif-upcall.c	/^    struct seq *dump_seq;              \/* Increments each dump iteration. *\/$/;"	m	struct:udpif	typeref:struct:udpif::seq	file:
dump_seq	ofproto/ofproto-dpif-upcall.c	/^    uint64_t dump_seq;             \/* udpif->dump_seq at translation time. *\/$/;"	m	struct:upcall	file:
dump_seq	ofproto/ofproto-dpif.c	/^    uint64_t dump_seq; \/* Last read of udpif_dump_seq(). *\/$/;"	m	struct:ofproto_dpif	file:
dump_stats_transaction	utilities/ovs-ofctl.c	/^dump_stats_transaction(struct vconn *vconn, struct ofpbuf *request)$/;"	f	file:
dump_table	ovsdb/ovsdb-client.c	/^dump_table(const struct ovsdb_table_schema *ts, struct json_array *rows)$/;"	f	file:
dump_table_aux	ovsdb/ovsdb-client.c	/^struct dump_table_aux {$/;"	s	file:
dump_transaction	utilities/ovs-ofctl.c	/^dump_transaction(struct vconn *vconn, struct ofpbuf *request)$/;"	f	file:
dump_trivial_stats_transaction	utilities/ovs-ofctl.c	/^dump_trivial_stats_transaction(const char *vconn_name, enum ofpraw raw)$/;"	f	file:
dump_trivial_transaction	utilities/ovs-ofctl.c	/^dump_trivial_transaction(const char *vconn_name, enum ofpraw raw)$/;"	f	file:
dumped_duplicate_flow	ofproto/ofproto-dpif-upcall.c	/^COVERAGE_DEFINE(dumped_duplicate_flow);$/;"	v
dumped_new_flow	ofproto/ofproto-dpif-upcall.c	/^COVERAGE_DEFINE(dumped_new_flow);$/;"	v
dup_mirrors	ofproto/ofproto-dpif-mirror.c	/^    mirror_mask_t dup_mirrors;  \/* Bitmap of mirrors with the same output. *\/$/;"	m	struct:mirror	file:
duplex	lib/vswitch-idl.h	/^	char *duplex;$/;"	m	struct:ovsrec_interface
duplicate_index_row	ovsdb/transaction.c	/^duplicate_index_row(const struct ovsdb_column_set *index,$/;"	f	file:
duplicate_index_row__	ovsdb/transaction.c	/^duplicate_index_row__(const struct ovsdb_column_set *index,$/;"	f	file:
durable	ovsdb/execution.c	/^    bool durable;$/;"	m	struct:ovsdb_execution	file:
duration_nsec	include/openflow/nicira-ext.h	/^    ovs_be32 duration_nsec;   \/* Time flow has been alive in nanoseconds$/;"	m	struct:nx_flow_stats
duration_nsec	include/openflow/nicira-ext.h	/^    ovs_be32 duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:nx_flow_removed
duration_nsec	include/openflow/openflow-1.0.h	/^    ovs_be32 duration_nsec;   \/* Time flow has been alive in nanoseconds$/;"	m	struct:ofp10_flow_stats
duration_nsec	include/openflow/openflow-1.0.h	/^    ovs_be32 duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:ofp10_flow_removed
duration_nsec	include/openflow/openflow-1.1.h	/^    ovs_be32 duration_nsec;    \/* Time flow has been alive in nanoseconds beyond$/;"	m	struct:ofp11_flow_stats
duration_nsec	include/openflow/openflow-1.1.h	/^    ovs_be32 duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:ofp11_flow_removed
duration_nsec	include/openflow/openflow-1.2.h	/^    ovs_be32 duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:ofp12_flow_removed
duration_nsec	include/openflow/openflow-1.3.h	/^    ovs_be32  duration_nsec;     \/* Time meter has been alive in nanoseconds$/;"	m	struct:ofp13_meter_stats
duration_nsec	include/openflow/openflow-1.3.h	/^    ovs_be32 duration_nsec;   \/* Time group has been alive in nanoseconds$/;"	m	struct:ofp13_group_stats
duration_nsec	include/openflow/openflow-1.3.h	/^    ovs_be32 duration_nsec;   \/* Time port has been alive in nanoseconds$/;"	m	struct:ofp13_port_stats
duration_nsec	include/openflow/openflow-1.3.h	/^    ovs_be32 duration_nsec;   \/* Time queue has been alive in nanoseconds$/;"	m	struct:ofp13_queue_stats
duration_nsec	include/openflow/openflow-1.4.h	/^    ovs_be32 duration_nsec;  \/* Time port has been alive in nanoseconds beyond$/;"	m	struct:ofp14_port_stats
duration_nsec	lib/ofp-util.h	/^    uint32_t duration_nsec;$/;"	m	struct:ofputil_flow_removed
duration_nsec	lib/ofp-util.h	/^    uint32_t duration_nsec;$/;"	m	struct:ofputil_flow_stats
duration_nsec	lib/ofp-util.h	/^    uint32_t duration_nsec;$/;"	m	struct:ofputil_group_stats
duration_nsec	lib/ofp-util.h	/^    uint32_t duration_nsec;$/;"	m	struct:ofputil_meter_stats
duration_nsec	lib/ofp-util.h	/^    uint32_t duration_nsec;$/;"	m	struct:ofputil_port_stats
duration_nsec	lib/ofp-util.h	/^    uint32_t duration_nsec;$/;"	m	struct:ofputil_queue_stats
duration_sec	include/openflow/nicira-ext.h	/^    ovs_be32 duration_sec;    \/* Time flow has been alive in seconds. *\/$/;"	m	struct:nx_flow_stats
duration_sec	include/openflow/nicira-ext.h	/^    ovs_be32 duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:nx_flow_removed
duration_sec	include/openflow/openflow-1.0.h	/^    ovs_be32 duration_sec;    \/* Time flow has been alive in seconds. *\/$/;"	m	struct:ofp10_flow_stats
duration_sec	include/openflow/openflow-1.0.h	/^    ovs_be32 duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:ofp10_flow_removed
duration_sec	include/openflow/openflow-1.1.h	/^    ovs_be32 duration_sec;     \/* Time flow has been alive in seconds. *\/$/;"	m	struct:ofp11_flow_stats
duration_sec	include/openflow/openflow-1.1.h	/^    ovs_be32 duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:ofp11_flow_removed
duration_sec	include/openflow/openflow-1.2.h	/^    ovs_be32 duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:ofp12_flow_removed
duration_sec	include/openflow/openflow-1.3.h	/^    ovs_be32  duration_sec;      \/* Time meter has been alive in seconds. *\/$/;"	m	struct:ofp13_meter_stats
duration_sec	include/openflow/openflow-1.3.h	/^    ovs_be32 duration_sec;    \/* Time group has been alive in seconds. *\/$/;"	m	struct:ofp13_group_stats
duration_sec	include/openflow/openflow-1.3.h	/^    ovs_be32 duration_sec;    \/* Time port has been alive in seconds. *\/$/;"	m	struct:ofp13_port_stats
duration_sec	include/openflow/openflow-1.3.h	/^    ovs_be32 duration_sec;    \/* Time queue has been alive in seconds. *\/$/;"	m	struct:ofp13_queue_stats
duration_sec	include/openflow/openflow-1.4.h	/^    ovs_be32 duration_sec;   \/* Time port has been alive in seconds. *\/$/;"	m	struct:ofp14_port_stats
duration_sec	lib/ofp-util.h	/^    uint32_t duration_sec;      \/* UINT32_MAX if unknown. *\/$/;"	m	struct:ofputil_group_stats
duration_sec	lib/ofp-util.h	/^    uint32_t duration_sec;      \/* UINT32_MAX if unknown. *\/$/;"	m	struct:ofputil_port_stats
duration_sec	lib/ofp-util.h	/^    uint32_t duration_sec;$/;"	m	struct:ofputil_flow_removed
duration_sec	lib/ofp-util.h	/^    uint32_t duration_sec;$/;"	m	struct:ofputil_flow_stats
duration_sec	lib/ofp-util.h	/^    uint32_t duration_sec;$/;"	m	struct:ofputil_meter_stats
duration_sec	lib/ofp-util.h	/^    uint32_t duration_sec;$/;"	m	struct:ofputil_queue_stats
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	datapath/Makefile	/^dvidir = ${docdir}$/;"	m
e802_1pq	datapath-windows/ovsext/Ethernet.h	/^        Eth_802_1pq  e802_1pq; \/\/ ...or an 802.1[pq] tag and a header$/;"	m	union:Eth_Header::__anon18
e802_3	datapath-windows/ovsext/Ethernet.h	/^        Eth_802_3    e802_3;   \/\/ ...or an 802.3 header$/;"	m	union:Eth_Header::__anon18
e802_3	datapath-windows/ovsext/Ethernet.h	/^        Eth_802_3    e802_3;   \/\/ or 802.3 header follows$/;"	m	union:Eth_802_1pq::__anon17
ea	include/openvswitch/types.h	/^        uint8_t ea[6];$/;"	m	union:eth_addr::__anon66
ea	vswitchd/bridge.c	/^    struct eth_addr ea;         \/* Bridge Ethernet Address. *\/$/;"	m	struct:bridge	typeref:struct:bridge::eth_addr	file:
ea_hdr	datapath-windows/ovsext/NetProto.h	/^   struct ArpHdr ea_hdr;          \/* fixed-size header *\/$/;"	m	struct:EtherArp	typeref:struct:EtherArp::ArpHdr
ece	datapath-windows/ovsext/NetProto.h	/^             ece:1,$/;"	m	struct:TCPHdr
echo	lib/packets.h	/^        } echo;$/;"	m	union:icmp_header::__anon147	typeref:struct:icmp_header::__anon147::__anon148
ecn	lib/ofp-actions.h	/^    uint8_t ecn;               \/* ECN in low 2 bits, rest ignored. *\/$/;"	m	struct:ofpact_ecn
edges	lib/classifier-private.h	/^    rcu_trie_ptr edges[2];     \/* Both NULL if leaf. *\/$/;"	m	struct:trie_node
edt1	datapath-windows/ovsext/resource.h	1357;"	d
edt10	datapath-windows/ovsext/resource.h	1366;"	d
edt11	datapath-windows/ovsext/resource.h	1367;"	d
edt12	datapath-windows/ovsext/resource.h	1368;"	d
edt13	datapath-windows/ovsext/resource.h	1369;"	d
edt14	datapath-windows/ovsext/resource.h	1370;"	d
edt15	datapath-windows/ovsext/resource.h	1371;"	d
edt16	datapath-windows/ovsext/resource.h	1372;"	d
edt2	datapath-windows/ovsext/resource.h	1358;"	d
edt3	datapath-windows/ovsext/resource.h	1359;"	d
edt4	datapath-windows/ovsext/resource.h	1360;"	d
edt5	datapath-windows/ovsext/resource.h	1361;"	d
edt6	datapath-windows/ovsext/resource.h	1362;"	d
edt7	datapath-windows/ovsext/resource.h	1363;"	d
edt8	datapath-windows/ovsext/resource.h	1364;"	d
edt9	datapath-windows/ovsext/resource.h	1365;"	d
efficacy	ovsdb/monitor.c	/^    enum ovsdb_monitor_changes_efficacy efficacy;$/;"	m	struct:ovsdb_monitor_aux	typeref:enum:ovsdb_monitor_aux::ovsdb_monitor_changes_efficacy	file:
egress_iface	lib/netdev-vport.c	/^    char egress_iface[IFNAMSIZ];$/;"	m	struct:netdev_vport	file:
egress_tun_info	datapath/datapath.h	/^	const struct ovs_tunnel_info *egress_tun_info;$/;"	m	struct:dp_upcall_info	typeref:struct:dp_upcall_info::ovs_tunnel_info
egress_tun_info	datapath/datapath.h	/^	struct ovs_tunnel_info  *egress_tun_info;$/;"	m	struct:ovs_skb_cb	typeref:struct:ovs_skb_cb::ovs_tunnel_info
elapsed	tests/test-bitmap.c	/^elapsed(const struct timeval *start)$/;"	f	file:
elapsed	tests/test-classifier.c	/^elapsed(const struct timeval *start)$/;"	f	file:
elapsed	tests/test-cmap.c	/^elapsed(const struct timeval *start)$/;"	f	file:
elapsed_msec	ovsdb/execution.c	/^    long long int elapsed_msec;$/;"	m	struct:ovsdb_execution	file:
elapsed_remainder	lib/stp.c	/^    int elapsed_remainder;          \/* Left-over msecs from last stp_tick(). *\/$/;"	m	struct:stp	file:
elemList	datapath-windows/ovsext/Event.h	/^    LIST_ENTRY elemList;$/;"	m	struct:_OVS_EVENT_QUEUE
element	tests/test-cmap.c	/^struct element {$/;"	s	file:
element	tests/test-heap.c	/^struct element {$/;"	s	file:
element	tests/test-hindex.c	/^struct element {$/;"	s	file:
element	tests/test-hmap.c	/^struct element {$/;"	s	file:
element	tests/test-list.c	/^struct element {$/;"	s	file:
element_dst_port_get	utilities/ovs-dpctl-top	/^def element_dst_port_get(field_type, element, stats_dict):$/;"	f
element_eth_get	utilities/ovs-dpctl-top	/^def element_eth_get(field_type, element, stats_dict):$/;"	f
element_from_heap_node	tests/test-heap.c	/^element_from_heap_node(const struct heap_node *node)$/;"	f	file:
element_ipv4_get	utilities/ovs-dpctl-top	/^def element_ipv4_get(field_type, element, stats_dict):$/;"	f
element_ipv6_get	utilities/ovs-dpctl-top	/^def element_ipv6_get(field_type, element, stats_dict):$/;"	f
element_passthrough_get	utilities/ovs-dpctl-top	/^def element_passthrough_get(field_type, element, stats_dict):$/;"	f
element_size	datapath/linux/compat/include/linux/flex_array.h	/^			int element_size;$/;"	m	struct:flex_array::__anon42::__anon43
element_tunnel_get	utilities/ovs-dpctl-top	/^def element_tunnel_get(field_type, element, stats_dict):$/;"	f
elements	datapath/linux/compat/flex_array.c	/^	char elements[FLEX_ARRAY_PART_SIZE];$/;"	m	struct:flex_array_part	file:
elements	datapath/linux/flex_array.c	/^	char elements[FLEX_ARRAY_PART_SIZE];$/;"	m	struct:flex_array_part	file:
elements	lib/sflow.h	/^    SFLCounters_sample_element *elements;$/;"	m	struct:_SFLCounters_sample
elements	lib/sflow.h	/^    SFLCounters_sample_element *elements;$/;"	m	struct:_SFLCounters_sample_expanded
elements	lib/sflow.h	/^    SFLFlow_sample_element *elements;$/;"	m	struct:_SFLFlow_sample
elements	lib/sflow.h	/^    SFLFlow_sample_element *elements;$/;"	m	struct:_SFLFlow_sample_expanded
elements_fit_in_base	datapath/linux/compat/flex_array.c	/^static inline int elements_fit_in_base(struct flex_array *fa)$/;"	f	file:
elements_fit_in_base	datapath/linux/flex_array.c	/^static inline int elements_fit_in_base(struct flex_array *fa)$/;"	f	file:
elements_to_dict	utilities/ovs-dpctl-top	/^def elements_to_dict(elements):$/;"	f
elems	lib/json.h	/^    struct json **elems;$/;"	m	struct:json_array	typeref:struct:json_array::json
elems_per_part	datapath/linux/compat/include/linux/flex_array.h	/^			int elems_per_part;$/;"	m	struct:flex_array::__anon42::__anon43
emc_cache	lib/dpif-netdev.c	/^struct emc_cache {$/;"	s	file:
emc_cache_init	lib/dpif-netdev.c	/^emc_cache_init(struct emc_cache *flow_cache)$/;"	f	file:
emc_cache_slow_sweep	lib/dpif-netdev.c	/^emc_cache_slow_sweep(struct emc_cache *flow_cache)$/;"	f	file:
emc_cache_uninit	lib/dpif-netdev.c	/^emc_cache_uninit(struct emc_cache *flow_cache)$/;"	f	file:
emc_change_entry	lib/dpif-netdev.c	/^emc_change_entry(struct emc_entry *ce, struct dp_netdev_flow *flow,$/;"	f	file:
emc_clear_entry	lib/dpif-netdev.c	/^emc_clear_entry(struct emc_entry *ce)$/;"	f	file:
emc_entry	lib/dpif-netdev.c	/^struct emc_entry {$/;"	s	file:
emc_entry_alive	lib/dpif-netdev.c	/^emc_entry_alive(struct emc_entry *ce)$/;"	f	file:
emc_insert	lib/dpif-netdev.c	/^emc_insert(struct emc_cache *cache, const struct netdev_flow_key *key,$/;"	f	file:
emc_lookup	lib/dpif-netdev.c	/^emc_lookup(struct emc_cache *cache, const struct netdev_flow_key *key)$/;"	f	file:
emc_processing	lib/dpif-netdev.c	/^emc_processing(struct dp_netdev_pmd_thread *pmd, struct dp_packet **packets,$/;"	f	file:
emer	python/ovs/vlog.py	/^    def emer(self, message, **kwargs):$/;"	m	class:Vlog
emer_is_enabled	python/ovs/vlog.py	/^    def emer_is_enabled(self):$/;"	m	class:Vlog
emergency_reset	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def emergency_reset(session, args):$/;"	f
emit_ct	ovn/lib/actions.c	/^emit_ct(struct action_context *ctx, bool recirc_next, bool commit)$/;"	f	file:
emit_resubmit	ovn/lib/actions.c	/^emit_resubmit(struct action_context *ctx, uint8_t table_id)$/;"	f	file:
empty	lib/packets.h	/^            ovs_be16 empty;$/;"	m	struct:icmp_header::__anon147::__anon149
emul_opts_user	utilities/qemu-wrap.py	/^emul_opts_user = []$/;"	v
emul_opts_user_vhost	utilities/qemu-wrap.py	/^emul_opts_user_vhost = []$/;"	v
emul_path	utilities/qemu-wrap.py	/^emul_path = "\/usr\/local\/bin\/qemu-system-x86_64"$/;"	v
enable	ofproto/ofproto.h	/^    bool enable;$/;"	m	struct:ofproto_port_rstp_settings
enable	ofproto/ofproto.h	/^    bool enable;$/;"	m	struct:ofproto_port_stp_settings
enable	python/ovs/reconnect.py	/^    def enable(self, now):$/;"	m	class:Reconnect
enable_async_messages	lib/vswitch-idl.h	/^	bool *enable_async_messages;$/;"	m	struct:ovsrec_controller
enable_async_msgs	ofproto/connmgr.c	/^    bool enable_async_msgs;     \/* Initially enable async messages? *\/$/;"	m	struct:ofconn	file:
enable_async_msgs	ofproto/connmgr.c	/^    bool enable_async_msgs;     \/* Initially enable async messages? *\/$/;"	m	struct:ofservice	file:
enable_async_msgs	ofproto/ofproto.h	/^    bool enable_async_msgs;     \/* Initially enable asynchronous messages? *\/$/;"	m	struct:ofproto_controller
enable_debug	lib/ofp-actions.c	/^static bool enable_debug;$/;"	v	file:
enable_eviction	ofproto/ofproto.h	/^    bool enable_eviction;$/;"	m	struct:ofproto_table_settings
enable_input_sampling	ofproto/ofproto.h	/^    bool enable_input_sampling;$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
enable_lacp	vswitchd/bridge.c	/^enable_lacp(struct port *port, bool *activep)$/;"	f	file:
enable_megaflows	ofproto/ofproto-dpif-upcall.c	/^static atomic_bool enable_megaflows = ATOMIC_VAR_INIT(true);$/;"	v	file:
enable_output_sampling	ofproto/ofproto.h	/^    bool enable_output_sampling;$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
enable_protocol	utilities/ovs-ctl	/^enable_protocol () {$/;"	f
enable_protocol	utilities/ovs-ctl.in	/^enable_protocol () {$/;"	f
enable_slave	ofproto/bond.c	/^enable_slave(struct unixctl_conn *conn, const char *argv[], bool enable)$/;"	f	file:
enable_system_stats	vswitchd/bridge.c	/^enable_system_stats(const struct ovsrec_open_vswitch *cfg)$/;"	f	file:
enable_tunnel_sampling	ofproto/ofproto.h	/^    bool enable_tunnel_sampling;$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
enable_ufid	ofproto/ofproto-dpif-upcall.c	/^    atomic_bool enable_ufid;           \/* If true, skip dumping flow attrs. *\/$/;"	m	struct:udpif	file:
enable_ufid	ofproto/ofproto-dpif-upcall.c	/^static atomic_bool enable_ufid = ATOMIC_VAR_INIT(true);$/;"	v	file:
enable_upcall	lib/dpif-provider.h	/^    void (*enable_upcall)(struct dpif *);$/;"	m	struct:dpif_class
enabled	lib/lldp/lldpd.h	/^    int  enabled;    \/* Is this protocol enabled? *\/$/;"	m	struct:protocol
enabled	lib/ovs-lldp.h	/^    bool                enabled;          \/* LLDP enabled on port *\/$/;"	m	struct:lldp
enabled	ofproto/bond.c	/^    bool enabled;               \/* May be chosen for flows? *\/$/;"	m	struct:bond_slave	file:
enabled	ofproto/ofproto.h	/^    bool enabled;               \/* If false, ignore other members. *\/$/;"	m	struct:ofproto_port_rstp_status
enabled	ofproto/ofproto.h	/^    bool enabled;               \/* If false, ignore other members. *\/$/;"	m	struct:ofproto_port_stp_stats
enabled	ofproto/ofproto.h	/^    bool enabled;               \/* If false, ignore other members. *\/$/;"	m	struct:ofproto_port_stp_status
enabled	ofproto/ofproto.h	/^    bool enabled;               \/* If false, ignore other members. *\/$/;"	m	struct:ofproto_rstp_status
enabled	ofproto/ofproto.h	/^    bool enabled;               \/* If false, ignore other members. *\/$/;"	m	struct:ofproto_stp_status
enabled	ovn/lib/ovn-nb-idl.h	/^	bool *enabled;$/;"	m	struct:nbrec_logical_port
enabled	ovn/lib/ovn-nb-idl.h	/^	bool *enabled;$/;"	m	struct:nbrec_logical_router_port
enabled	tests/test-bundle.c	/^    bool enabled;$/;"	m	struct:slave	file:
enabled	vswitchd/system-stats.c	/^static bool enabled;$/;"	v	file:
encap_depth	ofproto/ofproto-dpif-sflow.h	/^    uint32_t encap_depth;    \/* Count layers of tunnel-encap. *\/$/;"	m	struct:dpif_sflow_actions
encap_destroy	datapath/linux/compat/include/net/udp_tunnel.h	/^	udp_tunnel_encap_destroy_t encap_destroy;$/;"	m	struct:udp_tunnel_sock_cfg
encap_rcv	datapath/linux/compat/include/net/udp_tunnel.h	/^	udp_tunnel_encap_rcv_t encap_rcv;$/;"	m	struct:udp_tunnel_sock_cfg
encap_type	datapath/linux/compat/include/net/udp_tunnel.h	/^	__u8  encap_type;$/;"	m	struct:udp_tunnel_sock_cfg
encaps	ovn/controller/encaps.c	/^VLOG_DEFINE_THIS_MODULE(encaps);$/;"	v
encaps	ovn/lib/ovn-sb-idl.h	/^	struct sbrec_encap **encaps;$/;"	m	struct:sbrec_chassis	typeref:struct:sbrec_chassis::sbrec_encap
encaps_cleanup	ovn/controller/encaps.c	/^encaps_cleanup(struct controller_ctx *ctx, const struct ovsrec_bridge *br_int)$/;"	f
encaps_register_ovs_idl	ovn/controller/encaps.c	/^encaps_register_ovs_idl(struct ovsdb_idl *ovs_idl)$/;"	f
encaps_run	ovn/controller/encaps.c	/^encaps_run(struct controller_ctx *ctx, const struct ovsrec_bridge *br_int,$/;"	f
encapsulation_type	vtep/vtep-idl.h	/^	char *encapsulation_type;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_physical_locator
encode_BUNDLE	lib/ofp-actions.c	/^encode_BUNDLE(const struct ofpact_bundle *bundle,$/;"	f	file:
encode_CLEAR_ACTIONS	lib/ofp-actions.c	/^encode_CLEAR_ACTIONS(const struct ofpact_null *null OVS_UNUSED,$/;"	f	file:
encode_CONJUNCTION	lib/ofp-actions.c	/^encode_CONJUNCTION(const struct ofpact_conjunction *oc,$/;"	f	file:
encode_CONTROLLER	lib/ofp-actions.c	/^encode_CONTROLLER(const struct ofpact_controller *controller,$/;"	f	file:
encode_CT	lib/ofp-actions.c	/^encode_CT(const struct ofpact_conntrack *conntrack,$/;"	f	file:
encode_DEBUG_RECIRC	lib/ofp-actions.c	/^encode_DEBUG_RECIRC(const struct ofpact_null *n OVS_UNUSED,$/;"	f	file:
encode_DEC_MPLS_TTL	lib/ofp-actions.c	/^encode_DEC_MPLS_TTL(const struct ofpact_null *null OVS_UNUSED,$/;"	f	file:
encode_DEC_TTL	lib/ofp-actions.c	/^encode_DEC_TTL(const struct ofpact_cnt_ids *dec_ttl,$/;"	f	file:
encode_ENQUEUE	lib/ofp-actions.c	/^encode_ENQUEUE(const struct ofpact_enqueue *enqueue,$/;"	f	file:
encode_EXIT	lib/ofp-actions.c	/^encode_EXIT(const struct ofpact_null *null OVS_UNUSED,$/;"	f	file:
encode_FIN_TIMEOUT	lib/ofp-actions.c	/^encode_FIN_TIMEOUT(const struct ofpact_fin_timeout *fin_timeout,$/;"	f	file:
encode_GOTO_TABLE	lib/ofp-actions.c	/^encode_GOTO_TABLE(const struct ofpact_goto_table *goto_table,$/;"	f	file:
encode_GROUP	lib/ofp-actions.c	/^encode_GROUP(const struct ofpact_group *group,$/;"	f	file:
encode_LEARN	lib/ofp-actions.c	/^encode_LEARN(const struct ofpact_learn *learn,$/;"	f	file:
encode_METER	lib/ofp-actions.c	/^encode_METER(const struct ofpact_meter *meter,$/;"	f	file:
encode_MULTIPATH	lib/ofp-actions.c	/^encode_MULTIPATH(const struct ofpact_multipath *mp,$/;"	f	file:
encode_NOTE	lib/ofp-actions.c	/^encode_NOTE(const struct ofpact_note *note,$/;"	f	file:
encode_OUTPUT	lib/ofp-actions.c	/^encode_OUTPUT(const struct ofpact_output *output,$/;"	f	file:
encode_OUTPUT_REG	lib/ofp-actions.c	/^encode_OUTPUT_REG(const struct ofpact_output_reg *output_reg,$/;"	f	file:
encode_POP_MPLS	lib/ofp-actions.c	/^encode_POP_MPLS(const struct ofpact_pop_mpls *pop_mpls,$/;"	f	file:
encode_POP_QUEUE	lib/ofp-actions.c	/^encode_POP_QUEUE(const struct ofpact_null *null OVS_UNUSED,$/;"	f	file:
encode_PUSH_MPLS	lib/ofp-actions.c	/^encode_PUSH_MPLS(const struct ofpact_push_mpls *push_mpls,$/;"	f	file:
encode_PUSH_VLAN	lib/ofp-actions.c	/^encode_PUSH_VLAN(const struct ofpact_null *null OVS_UNUSED,$/;"	f	file:
encode_REG_MOVE	lib/ofp-actions.c	/^encode_REG_MOVE(const struct ofpact_reg_move *move,$/;"	f	file:
encode_RESUBMIT	lib/ofp-actions.c	/^encode_RESUBMIT(const struct ofpact_resubmit *resubmit,$/;"	f	file:
encode_SAMPLE	lib/ofp-actions.c	/^encode_SAMPLE(const struct ofpact_sample *sample,$/;"	f	file:
encode_SET_ETH_DST	lib/ofp-actions.c	/^encode_SET_ETH_DST(const struct ofpact_mac *mac,$/;"	f	file:
encode_SET_ETH_SRC	lib/ofp-actions.c	/^encode_SET_ETH_SRC(const struct ofpact_mac *mac, enum ofp_version ofp_version,$/;"	f	file:
encode_SET_ETH_addr	lib/ofp-actions.c	/^encode_SET_ETH_addr(const struct ofpact_mac *mac, enum ofp_version ofp_version,$/;"	f	file:
encode_SET_FIELD	lib/ofp-actions.c	/^encode_SET_FIELD(const struct ofpact_set_field *sf,$/;"	f	file:
encode_SET_ICMP_ID	lib/ofp-actions.c	/^encode_SET_ICMP_ID(const struct ofpact_l4_port *l4_port,$/;"	f	file:
encode_SET_IPV4_DST	lib/ofp-actions.c	/^encode_SET_IPV4_DST(const struct ofpact_ipv4 *ipv4,$/;"	f	file:
encode_SET_IPV4_SRC	lib/ofp-actions.c	/^encode_SET_IPV4_SRC(const struct ofpact_ipv4 *ipv4,$/;"	f	file:
encode_SET_IPV4_addr	lib/ofp-actions.c	/^encode_SET_IPV4_addr(const struct ofpact_ipv4 *ipv4,$/;"	f	file:
encode_SET_IP_DSCP	lib/ofp-actions.c	/^encode_SET_IP_DSCP(const struct ofpact_dscp *dscp,$/;"	f	file:
encode_SET_IP_ECN	lib/ofp-actions.c	/^encode_SET_IP_ECN(const struct ofpact_ecn *ip_ecn,$/;"	f	file:
encode_SET_IP_TTL	lib/ofp-actions.c	/^encode_SET_IP_TTL(const struct ofpact_ip_ttl *ttl,$/;"	f	file:
encode_SET_L4_DST_PORT	lib/ofp-actions.c	/^encode_SET_L4_DST_PORT(const struct ofpact_l4_port *l4_port,$/;"	f	file:
encode_SET_L4_SRC_PORT	lib/ofp-actions.c	/^encode_SET_L4_SRC_PORT(const struct ofpact_l4_port *l4_port,$/;"	f	file:
encode_SET_L4_port	lib/ofp-actions.c	/^encode_SET_L4_port(const struct ofpact_l4_port *l4_port,$/;"	f	file:
encode_SET_MPLS_LABEL	lib/ofp-actions.c	/^encode_SET_MPLS_LABEL(const struct ofpact_mpls_label *label,$/;"	f	file:
encode_SET_MPLS_TC	lib/ofp-actions.c	/^encode_SET_MPLS_TC(const struct ofpact_mpls_tc *tc,$/;"	f	file:
encode_SET_MPLS_TTL	lib/ofp-actions.c	/^encode_SET_MPLS_TTL(const struct ofpact_mpls_ttl *ttl,$/;"	f	file:
encode_SET_QUEUE	lib/ofp-actions.c	/^encode_SET_QUEUE(const struct ofpact_queue *queue,$/;"	f	file:
encode_SET_TUNNEL	lib/ofp-actions.c	/^encode_SET_TUNNEL(const struct ofpact_tunnel *tunnel,$/;"	f	file:
encode_SET_VLAN_PCP	lib/ofp-actions.c	/^encode_SET_VLAN_PCP(const struct ofpact_vlan_pcp *vlan_pcp,$/;"	f	file:
encode_SET_VLAN_VID	lib/ofp-actions.c	/^encode_SET_VLAN_VID(const struct ofpact_vlan_vid *vlan_vid,$/;"	f	file:
encode_STACK_POP	lib/ofp-actions.c	/^encode_STACK_POP(const struct ofpact_stack *stack,$/;"	f	file:
encode_STACK_PUSH	lib/ofp-actions.c	/^encode_STACK_PUSH(const struct ofpact_stack *stack,$/;"	f	file:
encode_STACK_op	lib/ofp-actions.c	/^encode_STACK_op(const struct ofpact_stack *stack_action,$/;"	f	file:
encode_STRIP_VLAN	lib/ofp-actions.c	/^encode_STRIP_VLAN(const struct ofpact_null *null OVS_UNUSED,$/;"	f	file:
encode_UNROLL_XLATE	lib/ofp-actions.c	/^encode_UNROLL_XLATE(const struct ofpact_unroll_xlate *unroll OVS_UNUSED,$/;"	f	file:
encode_WRITE_ACTIONS	lib/ofp-actions.c	/^encode_WRITE_ACTIONS(const struct ofpact_nest *actions,$/;"	f	file:
encode_WRITE_METADATA	lib/ofp-actions.c	/^encode_WRITE_METADATA(const struct ofpact_metadata *metadata,$/;"	f	file:
encode_geneve_table_mappings	lib/ofp-util.c	/^encode_geneve_table_mappings(struct ofpbuf *b, struct ovs_list *mappings)$/;"	f	file:
encode_node	lib/ofp-actions.c	/^    struct hmap_node encode_node; \/* Based on 'raw' + 'hdrs.ofp_version'. *\/$/;"	m	struct:ofpact_raw_instance	typeref:struct:ofpact_raw_instance::hmap_node	file:
encode_ofpact	lib/ofp-actions.c	/^encode_ofpact(const struct ofpact *a, enum ofp_version ofp_version,$/;"	f	file:
end	datapath/flow.h	/^	unsigned short int end;$/;"	m	struct:sw_flow_key_range
end	lib/flow.c	/^    uint64_t * const end;$/;"	m	struct:mf_ctx	file:
endDocument	ofproto/ipfix-gen-entities	/^    def endDocument(self):$/;"	f
endElement	ofproto/ipfix-gen-entities	/^    def endElement(self, name):$/;"	f
end_property	lib/ofp-util.c	/^end_property(struct ofpbuf *msg, size_t start_ofs)$/;"	f	file:
engineSession	datapath-windows/ovsext/TunnelFilter.c	/^    HANDLE                  engineSession;$/;"	m	struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
engine_id	lib/netflow.h	/^    uint8_t  engine_id;            \/* Engine id. *\/$/;"	m	struct:netflow_v5_header
engine_id	lib/vswitch-idl.h	/^	int64_t *engine_id;$/;"	m	struct:ovsrec_netflow
engine_id	ofproto/netflow.c	/^    uint8_t engine_id;            \/* Value of engine_id to use. *\/$/;"	m	struct:netflow	file:
engine_id	ofproto/netflow.h	/^    uint8_t engine_id;$/;"	m	struct:netflow_options
engine_type	lib/netflow.h	/^    uint8_t  engine_type;          \/* Engine type. *\/$/;"	m	struct:netflow_v5_header
engine_type	lib/vswitch-idl.h	/^	int64_t *engine_type;$/;"	m	struct:ovsrec_netflow
engine_type	ofproto/netflow.c	/^    uint8_t engine_type;          \/* Value of engine_type to use. *\/$/;"	m	struct:netflow	file:
engine_type	ofproto/netflow.h	/^    uint8_t engine_type;$/;"	m	struct:netflow_options
english_list_delimiter	lib/util.c	/^english_list_delimiter(size_t index, size_t total)$/;"	f
enlarge_buffer	lib/daemon-unix.c	/^enlarge_buffer(char **buf, size_t *sizep)$/;"	f	file:
entries	lib/dpif-netdev.c	/^    struct emc_entry entries[EM_FLOW_HASH_ENTRIES];$/;"	m	struct:emc_cache	typeref:struct:emc_cache::emc_entry	file:
entries	lib/tun-metadata.c	/^    struct tun_meta_entry entries[TUN_METADATA_NUM_OPTS];$/;"	m	struct:tun_table	typeref:struct:tun_table::tun_meta_entry	file:
entries	ofproto/bond.c	/^    struct ovs_list entries;    \/* 'struct bond_entry's assigned here. *\/$/;"	m	struct:bond_slave	typeref:struct:bond_slave::ovs_list	file:
entries	ofproto/ofproto-dpif-xlate.c	/^    struct ofpbuf entries;$/;"	m	struct:xlate_cache	typeref:struct:xlate_cache::ofpbuf	file:
entries	utilities/bugtool/ovs-bugtool	/^            entries = caps.keys()$/;"	v
entries	utilities/bugtool/ovs-bugtool	/^            entries = v.split(',')$/;"	v
entries	utilities/bugtool/ovs-bugtool	/^    entries = [e for e in caps.keys() if caps[e][CHECKED]]$/;"	v
entries	utilities/bugtool/ovs-bugtool	/^entries = None$/;"	v
entropy	lib/entropy.c	/^VLOG_DEFINE_THIS_MODULE(entropy);$/;"	v
entry	datapath-windows/ovsext/TunnelFilter.c	/^    LIST_ENTRY              entry;$/;"	m	struct:_OVS_TUNFLT_REQUEST	file:
entry	datapath/linux/compat/include/linux/mpls.h	/^	__be32 entry;$/;"	m	struct:mpls_label
entry	lib/cmap.h	/^    unsigned int entry;$/;"	m	struct:cmap_position
entry	lib/tun-metadata.h	/^    struct tun_metadata_match_entry entry[TUN_METADATA_NUM_OPTS];$/;"	m	struct:tun_metadata_allocation	typeref:struct:tun_metadata_allocation::tun_metadata_match_entry
entry_idx	lib/cmap.h	/^    int entry_idx;$/;"	m	struct:cmap_cursor
entry_idx	lib/pvector.h	/^    size_t entry_idx;   \/* Current index. *\/$/;"	m	struct:pvector_cursor
enum	build-aux/extract-ofp-actions	/^            enum = versions[0]["enum"]$/;"	v
enum_	lib/ovsdb-types.h	/^    struct ovsdb_datum *enum_;$/;"	m	struct:ovsdb_base_type	typeref:struct:ovsdb_base_type::ovsdb_datum
enumerate	lib/dpif-provider.h	/^    int (*enumerate)(struct sset *all_dps, const struct dpif_class *dpif_class);$/;"	m	struct:dpif_class
enumerate_names	ofproto/ofproto-dpif.c	/^enumerate_names(const char *type, struct sset *names)$/;"	f	file:
enumerate_names	ofproto/ofproto-provider.h	/^    int (*enumerate_names)(const char *type, struct sset *names);$/;"	m	struct:ofproto_class
enumerate_types	ofproto/ofproto-dpif.c	/^enumerate_types(struct sset *types)$/;"	f	file:
enumerate_types	ofproto/ofproto-provider.h	/^    void (*enumerate_types)(struct sset *types);$/;"	m	struct:ofproto_class
env	tests/test-sflow.c	/^    jmp_buf env;$/;"	m	struct:sflow_xdr	file:
env	utilities/ovs-dev.py	/^def env():$/;"	f
epoll_event	include/windows/sys/epoll.h	/^struct epoll_event {$/;"	s
epoll_events	lib/dpif-netlink.c	/^    struct epoll_event *epoll_events;$/;"	m	struct:dpif_handler	typeref:struct:dpif_handler::epoll_event	file:
epoll_fd	lib/dpif-netlink.c	/^    int epoll_fd;                 \/* epoll fd that includes channel socks. *\/$/;"	m	struct:dpif_handler	file:
equal	ovsdb/execution.c	/^    bool *equal;$/;"	m	struct:wait_auxdata	file:
equal_pathnames	vswitchd/bridge.c	/^equal_pathnames(const char *a, const char *b, size_t b_stoplen)$/;"	f	file:
erStream	ovsdb/ovsdb-doc	/^        erStream = open(erFile, "r")$/;"	v
err	python/ovs/vlog.py	/^    def err(self, message, **kwargs):$/;"	m	class:Vlog
err	tests/test-rstp.c	/^err(const char *message, ...)$/;"	f	file:
err	tests/test-stp.c	/^err(const char *message, ...)$/;"	f	file:
err	xenserver/opt_xensource_libexec_interface-reconfigure	/^        err = traceback.format_exception(*ex)$/;"	v
errStats	datapath-windows/ovsext/Vport.h	/^    OVS_VPORT_ERR_STATS    errStats;$/;"	m	struct:_OVS_VPORT_ENTRY
err_handler	datapath/linux/compat/include/net/gre.h	/^	int (*err_handler)(struct sk_buff *skb, u32 info,$/;"	m	struct:gre_cisco_protocol
err_is_enabled	python/ovs/vlog.py	/^    def err_is_enabled(self):$/;"	m	class:Vlog
err_rl	lib/netdev-vport.c	/^static struct vlog_rate_limit err_rl = VLOG_RATE_LIMIT_INIT(60, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
err_stats	datapath/vport.h	/^	struct vport_err_stats err_stats;$/;"	m	struct:vport	typeref:struct:vport::vport_err_stats
errline	tests/test-sflow.c	/^    int errline;$/;"	m	struct:sflow_xdr	file:
errno	python/ovs/daemon.py	/^import errno$/;"	i
errno	python/ovs/jsonrpc.py	/^import errno$/;"	i
errno	python/ovs/poller.py	/^import errno$/;"	i
errno	python/ovs/socket_util.py	/^import errno$/;"	i
errno	python/ovs/stream.py	/^import errno$/;"	i
errno	python/ovs/unixctl/client.py	/^import errno$/;"	i
errno	python/ovs/unixctl/server.py	/^import errno$/;"	i
errno	tests/test-jsonrpc.py	/^import errno$/;"	i
errno	tests/test-reconnect.py	/^import errno$/;"	i
errno_	lib/ovsdb-error.c	/^    int errno_;                 \/* Unix errno value, 0 if none. *\/$/;"	m	struct:ovsdb_error	file:
error	build-aux/extract-ofp-actions	/^def error(msg):$/;"	f
error	build-aux/extract-ofp-errors	/^def error(msg):$/;"	f
error	build-aux/extract-ofp-fields	/^def error(msg):$/;"	f
error	build-aux/extract-ofp-msgs	/^def error(msg):$/;"	f
error	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    INT error;$/;"	m	struct:_NlMsgErr
error	debian/ovs-monitor-ipsec	/^from ovs.db import error$/;"	i
error	lib/dpif.c	/^    int error;$/;"	m	struct:dpif_execute_helper_aux	file:
error	lib/dpif.h	/^    int error;$/;"	m	struct:dpif_op
error	lib/dpif.h	/^    int error;$/;"	m	struct:dpif_port_dump
error	lib/json.c	/^    char *error;                \/* Error message, if any, null if none yet. *\/$/;"	m	struct:json_parser	file:
error	lib/jsonrpc.h	/^    struct json *error;         \/* Error reply only. *\/$/;"	m	struct:jsonrpc_msg	typeref:struct:jsonrpc_msg::json
error	lib/netdev.h	/^    int error;$/;"	m	struct:netdev_queue_dump
error	lib/netlink-protocol.h	/^        int error;$/;"	m	struct:nlmsgerr
error	lib/netlink-socket.h	/^    int error;                  \/* Positive errno value, 0 if no error. *\/$/;"	m	struct:nl_transaction
error	lib/ovsdb-idl.c	/^    char *error;$/;"	m	struct:ovsdb_idl_txn	file:
error	lib/ovsdb-parser.h	/^    struct ovsdb_error *error;  \/* Error signaled, if any. *\/$/;"	m	struct:ovsdb_parser	typeref:struct:ovsdb_parser::ovsdb_error
error	lib/stream-provider.h	/^    int error;$/;"	m	struct:stream
error	lib/vconn-provider.h	/^    int error;$/;"	m	struct:vconn
error	lib/vswitch-idl.h	/^	char *error;$/;"	m	struct:ovsrec_interface
error	ofproto/ofproto.h	/^    int error;$/;"	m	struct:ofproto_port_dump
error	ovn/lib/actions.c	/^    char *error;                \/* Error, if any, otherwise NULL. *\/$/;"	m	struct:action_context	file:
error	ovn/lib/expr.c	/^    char *error;                \/* Error, if any, otherwise NULL. *\/$/;"	m	struct:expr_context	file:
error	ovsdb/execution.c	/^    struct ovsdb_error **error;$/;"	m	struct:mutate_row_cbdata	typeref:struct:mutate_row_cbdata::ovsdb_error	file:
error	ovsdb/log.c	/^    int error;$/;"	m	struct:ovsdb_log_read_cbdata	file:
error	ovsdb/ovsdb-doc	/^from ovs.db import error$/;"	i
error	ovsdb/ovsdb-dot	/^import ovs.db.error$/;"	i
error	ovsdb/ovsdb-idlc	/^import ovs.db.error$/;"	i
error	python/build/nroff.py	/^from ovs.db import error$/;"	i
error	python/ovs/db/data.py	/^from ovs.db import error$/;"	i
error	python/ovs/db/idl.py	/^from ovs.db import error$/;"	i
error	python/ovs/db/parser.py	/^from ovs.db import error$/;"	i
error	python/ovs/db/schema.py	/^from ovs.db import error$/;"	i
error	python/ovs/db/types.py	/^from ovs.db import error$/;"	i
error	python/ovs/jsonrpc.py	/^    def error(self, error):$/;"	m	class:Connection
error	python/ovs/ovsuuid.py	/^from ovs.db import error$/;"	i
error	tests/test-ovsdb.py	/^from ovs.db import error$/;"	i
error	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^from ovs.db import error$/;"	i
errorFn	lib/sflow_api.h	/^    errorFn_t errorFn;$/;"	m	struct:_SFLAgent
errorFn_t	lib/sflow_api.h	/^typedef void (*errorFn_t)(void *magic,                \/* callback to log error message *\/$/;"	t
errorMsg	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_MSG_ERR errorMsg;$/;"	m	struct:_OVS_MESSAGE_ERROR
error_count	lib/stp.c	/^    int error_count;                \/* Number of bad BPDUs received. *\/$/;"	m	struct:stp_port	file:
error_count	ofproto/ofproto.h	/^    int error_count;            \/* Number of bad BPDUs received. *\/$/;"	m	struct:ofproto_port_rstp_status
error_count	ofproto/ofproto.h	/^    int error_count;            \/* Number of bad BPDUs received. *\/$/;"	m	struct:ofproto_port_stp_stats
error_from_string	tests/test-reconnect.c	/^error_from_string(const char *s)$/;"	f	file:
error_from_string	tests/test-reconnect.py	/^def error_from_string(s):$/;"	f
error_msg	utilities/ovs-vlan-test	/^        def error_msg(e):$/;"	f	function:VlanClient.recv
error_msg	utilities/ovs-vlan-test	/^        def error_msg(e):$/;"	f	function:VlanClient.send
error_msg	utilities/ovs-vlan-test	/^        def error_msg(e):$/;"	f	function:VlanClient.server_up
error_rl	lib/dpif-netlink.c	/^static struct vlog_rate_limit error_rl = VLOG_RATE_LIMIT_INIT(9999, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
error_rl	lib/dpif.c	/^static struct vlog_rate_limit error_rl = VLOG_RATE_LIMIT_INIT(60, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
error_rl	lib/netdev-windows.c	/^static struct vlog_rate_limit error_rl = VLOG_RATE_LIMIT_INIT(9999, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
escape	ovsdb/ovsdb-idlc	/^    def escape(match):$/;"	f	function:ovsdb_escape
escape	python/build/nroff.py	/^    def escape(match):$/;"	f	function:text_to_nroff
escape	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def escape(match):$/;"	f	function:vsctl_escape
escapeCString	python/ovs/db/data.py	/^def escapeCString(src):$/;"	f
escapeCString	python/ovs/db/types.py	/^def escapeCString(src):$/;"	f
escape_nroff_literal	python/build/nroff.py	/^def escape_nroff_literal(s, font=r'\\fB'):$/;"	f
escapes	python/ovs/json.py	/^escapes = {ord('"'): u"\\\\\\"",$/;"	v
eth	datapath/flow.h	/^	} eth;$/;"	m	struct:sw_flow_key	typeref:struct:sw_flow_key::__anon28
eth_addr	include/openvswitch/types.h	/^struct eth_addr {$/;"	s
eth_addr_ccm	lib/cfm.c	/^static const struct eth_addr eth_addr_ccm = {$/;"	v	typeref:struct:eth_addr	file:
eth_addr_ccm_x	lib/cfm.c	/^static const struct eth_addr eth_addr_ccm_x = {$/;"	v	typeref:struct:eth_addr	file:
eth_addr_compare_3way	lib/packets.h	/^static inline int eth_addr_compare_3way(const struct eth_addr a,$/;"	f
eth_addr_equal_except	lib/packets.h	/^static inline bool eth_addr_equal_except(const struct eth_addr a,$/;"	f
eth_addr_equals	lib/packets.h	/^static inline bool eth_addr_equals(const struct eth_addr a,$/;"	f
eth_addr_from_string	lib/packets.c	/^eth_addr_from_string(const char *s, struct eth_addr *ea)$/;"	f
eth_addr_from_uint64	lib/packets.h	/^static inline void eth_addr_from_uint64(uint64_t x, struct eth_addr *ea)$/;"	f
eth_addr_invert	lib/packets.h	/^static inline struct eth_addr eth_addr_invert(const struct eth_addr src)$/;"	f
eth_addr_is_broadcast	lib/packets.h	/^static inline bool eth_addr_is_broadcast(const struct eth_addr a)$/;"	f
eth_addr_is_local	lib/packets.h	/^static inline bool eth_addr_is_local(const struct eth_addr a)$/;"	f
eth_addr_is_multicast	lib/packets.h	/^static inline bool eth_addr_is_multicast(const struct eth_addr a)$/;"	f
eth_addr_is_reserved	lib/packets.c	/^eth_addr_is_reserved(const struct eth_addr ea)$/;"	f
eth_addr_is_zero	lib/packets.h	/^static inline bool eth_addr_is_zero(const struct eth_addr a)$/;"	f
eth_addr_lldp	tests/test-aa.c	/^static const struct eth_addr eth_addr_lldp = { { { 0x01, 0x80, 0xC2, 0x00, 0x00, 0x0e } } };$/;"	v	typeref:struct:eth_addr	file:
eth_addr_mark_random	lib/packets.h	/^static inline void eth_addr_mark_random(struct eth_addr *ea)$/;"	f
eth_addr_nicira_random	lib/packets.h	/^static inline void eth_addr_nicira_random(struct eth_addr *ea)$/;"	f
eth_addr_random	lib/packets.h	/^static inline void eth_addr_random(struct eth_addr *ea)$/;"	f
eth_addr_to_uint64	lib/packets.h	/^static inline uint64_t eth_addr_to_uint64(const struct eth_addr ea)$/;"	f
eth_addr_vlan_to_uint64	lib/packets.h	/^static inline uint64_t eth_addr_vlan_to_uint64(const struct eth_addr ea,$/;"	f
eth_compose	lib/packets.c	/^eth_compose(struct dp_packet *b, const struct eth_addr eth_dst,$/;"	f
eth_dst	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8	 eth_dst[ETH_ALEN];$/;"	m	struct:ovs_key_ethernet
eth_dst	include/odp-netlink.h	/^	struct eth_addr eth_dst;$/;"	m	struct:ovs_key_ethernet	typeref:struct:ovs_key_ethernet::eth_addr
eth_format_masked	lib/packets.c	/^eth_format_masked(const struct eth_addr eth,$/;"	f
eth_from_hex	lib/packets.c	/^eth_from_hex(const char *hex, struct dp_packet **packetp)$/;"	f
eth_from_packet_or_flow	lib/netdev-dummy.c	/^eth_from_packet_or_flow(const char *s)$/;"	f	file:
eth_hw_addr_random	datapath/linux/compat/include/linux/etherdevice.h	/^static inline void eth_hw_addr_random(struct net_device *dev)$/;"	f
eth_len	lib/sflow.h	/^    u_int32_t eth_len;       \/* The length of the MAC packet excluding$/;"	m	struct:_SFLSampled_ethernet
eth_mac_addr	datapath/linux/compat/include/linux/etherdevice.h	/^static inline int eth_mac_addr(struct net_device *dev, void *p)$/;"	f
eth_mac_addr	datapath/linux/compat/include/linux/etherdevice.h	22;"	d
eth_mask_is_exact	lib/packets.h	/^static inline int eth_mask_is_exact(const struct eth_addr a)$/;"	f
eth_p_mpls	datapath/linux/compat/include/net/mpls.h	/^static inline bool eth_p_mpls(__be16 eth_type)$/;"	f
eth_pop_vlan	lib/packets.c	/^eth_pop_vlan(struct dp_packet *packet)$/;"	f
eth_port_id	lib/netdev-dpdk.c	/^    int eth_port_id; \/* ethernet device port id *\/$/;"	m	struct:dpdk_ring	file:
eth_proto_is_802_3	datapath/linux/compat/include/linux/etherdevice.h	/^static inline bool eth_proto_is_802_3(__be16 proto)$/;"	f
eth_proto_is_802_3	datapath/linux/compat/include/linux/etherdevice.h	55;"	d
eth_push_vlan	lib/packets.c	/^eth_push_vlan(struct dp_packet *packet, ovs_be16 tpid, ovs_be16 tci)$/;"	f
eth_src	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8	 eth_src[ETH_ALEN];$/;"	m	struct:ovs_key_ethernet
eth_src	include/odp-netlink.h	/^	struct eth_addr eth_src;$/;"	m	struct:ovs_key_ethernet	typeref:struct:ovs_key_ethernet::eth_addr
eth_src	tests/test-aa.c	/^static const struct eth_addr eth_src = { { { 0x5e, 0x10, 0x8e, 0xe7, 0x84, 0xad } } };$/;"	v	typeref:struct:eth_addr	file:
eth_type	lib/sflow.h	/^    u_int32_t eth_type;$/;"	m	struct:_SFLSampled_ethernet
eth_type_mpls	lib/packets.h	/^static inline bool eth_type_mpls(ovs_be16 eth_type)$/;"	f
eth_type_vlan	lib/packets.h	/^static inline bool eth_type_vlan(ovs_be16 eth_type)$/;"	f
ether_addr_copy	datapath/linux/compat/include/linux/etherdevice.h	/^static inline void ether_addr_copy(u8 *dst, const u8 *src)$/;"	f
ether_addr_copy_masked	datapath/actions.c	/^static void ether_addr_copy_masked(u8 *dst_, const u8 *src_, const u8 *mask_)$/;"	f	file:
ether_addr_copy_masked	datapath/linux/actions.c	/^static void ether_addr_copy_masked(u8 *dst_, const u8 *src_, const u8 *mask_)$/;"	f	file:
ether_addr_copy_masked	lib/odp-execute.c	/^ether_addr_copy_masked(struct eth_addr *dst, const struct eth_addr src,$/;"	f	file:
ether_addr_error	lib/netdev-linux.c	/^    int ether_addr_error;       \/* Cached error code from set\/get etheraddr. *\/$/;"	m	struct:netdev_linux	file:
etheraddr	lib/netdev-bsd.c	/^    struct eth_addr etheraddr;$/;"	m	struct:netdev_bsd	typeref:struct:netdev_bsd::eth_addr	file:
etheraddr	lib/netdev-linux.c	/^    struct eth_addr etheraddr;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::eth_addr	file:
etheraddr	lib/netdev-vport.c	/^    struct eth_addr etheraddr;$/;"	m	struct:netdev_vport	typeref:struct:netdev_vport::eth_addr	file:
ethernet	lib/sflow.h	/^    SFLEthernet_counters ethernet;$/;"	m	union:_SFLCounters_type
ethernet	lib/sflow.h	/^    SFLSampled_ethernet ethernet;$/;"	m	union:_SFLFlow_type
ethertype	lib/ofp-actions.h	/^    ovs_be16 ethertype;$/;"	m	struct:ofpact_pop_mpls
ethertype	lib/ofp-actions.h	/^    ovs_be16 ethertype;$/;"	m	struct:ofpact_push_mpls
ethertype	vtep/vtep-idl.h	/^	char *ethertype;$/;"	m	struct:vteprec_acl_entry
ethtool_settings	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def ethtool_settings(oc, defaults = {}):$/;"	f
evaluate_andor_expr	tests/test-ovn.c	/^evaluate_andor_expr(const struct expr *expr, unsigned int subst, int n_bits,$/;"	f	file:
evaluate_cmp_expr	tests/test-ovn.c	/^evaluate_cmp_expr(const struct expr *expr, unsigned int subst, int n_bits)$/;"	f	file:
evaluate_expr	tests/test-ovn.c	/^evaluate_expr(const struct expr *expr, unsigned int subst, int n_bits)$/;"	f	file:
evaluate_relop	lib/db-ctl-base.c	/^evaluate_relop(const struct ovsdb_datum *a, const struct ovsdb_datum *b,$/;"	f	file:
event	datapath-windows/ovsext/IpHelper.h	/^    KEVENT            event;$/;"	m	struct:_OVS_IP_HELPER_THREAD_CONTEXT
event	datapath-windows/ovsext/Stt.h	/^    KEVENT      event;$/;"	m	struct:_OVS_STT_THREAD_CTX
event	include/openflow/nicira-ext.h	/^    ovs_be16 event;             \/* NXFME_ABBREV. *\/$/;"	m	struct:nx_flow_update_abbrev
event	include/openflow/nicira-ext.h	/^    ovs_be16 event;             \/* One of NXFME_*. *\/$/;"	m	struct:nx_flow_update_full
event	include/openflow/nicira-ext.h	/^    ovs_be16 event;             \/* One of NXFME_*. *\/$/;"	m	struct:nx_flow_update_header
event	lib/ofp-util.h	/^    enum nx_flow_update_event event;$/;"	m	struct:ofputil_flow_update	typeref:enum:ofputil_flow_update::nx_flow_update_event
eventEntries	datapath-windows/ovsext/DpInternal.h	/^    OVS_EVENT_ENTRY eventEntries[0];$/;"	m	struct:_OVS_EVENT_STATUS
eventQueue	datapath-windows/ovsext/Datapath.h	/^    PVOID eventQueue;$/;"	m	struct:_OVS_OPEN_INSTANCE
eventQueueLock	datapath-windows/ovsext/Event.c	/^static NDIS_SPIN_LOCK eventQueueLock;$/;"	v	file:
event_offset	lib/dpif-netlink.c	/^    int event_offset;             \/* Offset into 'epoll_events'. *\/$/;"	m	struct:dpif_handler	file:
eventlet	python/ovs/poller.py	/^    import eventlet.patcher$/;"	i
events	include/windows/sys/epoll.h	/^    uint32_t events;$/;"	m	struct:epoll_event
evict_frags	datapath/linux/compat/stt.c	/^static void evict_frags(struct stt_percpu *stt_percpu)$/;"	f	file:
evict_frags	datapath/linux/stt.c	/^static void evict_frags(struct stt_percpu *stt_percpu)$/;"	f	file:
eviction	lib/ofp-util.h	/^    enum ofputil_table_eviction eviction;$/;"	m	struct:ofputil_table_desc	typeref:enum:ofputil_table_desc::ofputil_table_eviction
eviction	lib/ofp-util.h	/^    enum ofputil_table_eviction eviction;$/;"	m	struct:ofputil_table_mod	typeref:enum:ofputil_table_mod::ofputil_table_eviction
eviction	ofproto/ofproto-provider.h	/^    unsigned int eviction;$/;"	m	struct:oftable
eviction_fields	ofproto/ofproto-provider.h	/^    struct mf_subfield *eviction_fields;$/;"	m	struct:oftable	typeref:struct:oftable::mf_subfield
eviction_flags	lib/ofp-util.h	/^    uint32_t eviction_flags;    \/* OFPTMPEF14_*. *\/$/;"	m	struct:ofputil_table_mod
eviction_flags	lib/ofp-util.h	/^    uint32_t eviction_flags;    \/* UINT32_MAX if not present. *\/$/;"	m	struct:ofputil_table_desc
eviction_group	ofproto/ofproto.c	/^struct eviction_group {$/;"	s	file:
eviction_group_id_basis	ofproto/ofproto-provider.h	/^    uint32_t eviction_group_id_basis;$/;"	m	struct:oftable
eviction_group_priority	ofproto/ofproto.c	/^eviction_group_priority(size_t n_rules)$/;"	f	file:
eviction_group_timer	ofproto/ofproto-provider.h	/^    long long int eviction_group_timer; \/* For rate limited reheapification. *\/$/;"	m	struct:ofproto
eviction_groups_by_id	ofproto/ofproto-provider.h	/^    struct hmap eviction_groups_by_id;$/;"	m	struct:oftable	typeref:struct:oftable::hmap
eviction_groups_by_size	ofproto/ofproto-provider.h	/^    struct heap eviction_groups_by_size;$/;"	m	struct:oftable	typeref:struct:oftable::heap
ex	xenserver/opt_xensource_libexec_interface-reconfigure	/^        ex = sys.exc_info()$/;"	v
exact_match_mask	lib/meta-flow.c	/^const union mf_value exact_match_mask = MF_VALUE_EXACT_INITIALIZER;$/;"	v	typeref:union:mf_value
example	tests/test-ovsdb.c	/^    struct ovsdb_row *example;$/;"	m	struct:do_query_distinct_class	typeref:struct:do_query_distinct_class::ovsdb_row	file:
exception	python/ovs/vlog.py	/^    def exception(self, message):$/;"	m	class:Vlog
exceptions	python/ovstest/rpcserver.py	/^import exceptions$/;"	i
exceptions	python/ovstest/util.py	/^import exceptions$/;"	i
exceptions	python/ovstest/vswitch.py	/^import exceptions$/;"	i
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	datapath/Makefile	/^exec_prefix = ${prefix}$/;"	m
execute	lib/dpif.h	/^        struct dpif_execute execute;$/;"	m	union:dpif_op::__anon90	typeref:struct:dpif_op::__anon90::dpif_execute
execute_ab	lib/bundle.c	/^execute_ab(const struct ofpact_bundle *bundle,$/;"	f	file:
execute_cancel	ovsdb/jsonrpc-server.c	/^execute_cancel(struct ovsdb_jsonrpc_session *s, struct jsonrpc_msg *request)$/;"	f	file:
execute_controller_action	ofproto/ofproto-dpif-xlate.c	/^execute_controller_action(struct xlate_ctx *ctx, int len,$/;"	f	file:
execute_hash	datapath/actions.c	/^static void execute_hash(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
execute_hash	datapath/linux/actions.c	/^static void execute_hash(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
execute_hrw	lib/bundle.c	/^execute_hrw(const struct ofpact_bundle *bundle,$/;"	f	file:
execute_masked_set_action	datapath/actions.c	/^static int execute_masked_set_action(struct sk_buff *skb,$/;"	f	file:
execute_masked_set_action	datapath/linux/actions.c	/^static int execute_masked_set_action(struct sk_buff *skb,$/;"	f	file:
execute_recirc	datapath/actions.c	/^static int execute_recirc(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
execute_recirc	datapath/linux/actions.c	/^static int execute_recirc(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
execute_set_action	datapath/actions.c	/^static int execute_set_action(struct sk_buff *skb,$/;"	f	file:
execute_set_action	datapath/linux/actions.c	/^static int execute_set_action(struct sk_buff *skb,$/;"	f	file:
execute_transaction	ovsdb/jsonrpc-server.c	/^execute_transaction(struct ovsdb_jsonrpc_session *s, struct ovsdb *db,$/;"	f	file:
exit	datapath-windows/ovsext/IpHelper.h	/^    UINT32            exit;$/;"	m	struct:_OVS_IP_HELPER_THREAD_CONTEXT
exit	datapath-windows/ovsext/Stt.h	/^    UINT32      exit;$/;"	m	struct:_OVS_STT_THREAD_CTX
exit	datapath/linux/compat/include/net/net_namespace.h	/^	void (*exit)(struct net *net);$/;"	m	struct:rpl_pernet_operations
exit	ofproto/ofproto-dpif-xlate.c	/^    bool exit;                  \/* No further actions should be processed. *\/$/;"	m	struct:xlate_ctx	file:
exit_latch	lib/dpif-netdev.c	/^    struct latch exit_latch;        \/* For terminating the pmd thread. *\/$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::latch	file:
exit_latch	ofproto/ofproto-dpif-upcall.c	/^    struct latch exit_latch;           \/* Tells child threads to exit. *\/$/;"	m	struct:udpif	typeref:struct:udpif::latch	file:
exit_recirculates	ofproto/ofproto-dpif-xlate.c	/^exit_recirculates(const struct xlate_ctx *ctx)$/;"	f	file:
exited	lib/process.c	/^    bool exited;$/;"	m	struct:process	file:
exiting	debian/ovs-monitor-ipsec	/^exiting = False$/;"	v
exiting	tests/test-unixctl.py	/^exiting = False$/;"	v
exiting	vtep/ovs-vtep	/^exiting = False$/;"	v
exiting	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^exiting = False$/;"	v
exp_type	include/openflow/netronome-ext.h	/^    ovs_be32 exp_type;              \/* NTRT_SELECTION_METHOD. *\/$/;"	m	struct:ntr_group_prop_selection_method
exp_type	include/openflow/openflow-1.2.h	/^    ovs_be32 exp_type;        \/* Experimenter defined. *\/$/;"	m	struct:ofp12_experimenter_stats_header
exp_type	include/openflow/openflow-1.3.h	/^    ovs_be32    exp_type;     \/* Experimenter defined. *\/$/;"	m	struct:ofp13_table_feature_prop_experimenter
exp_type	include/openflow/openflow-1.4.h	/^    ovs_be32        exp_type;      \/* Experimenter defined. *\/$/;"	m	struct:ofp14_async_config_prop_experimenter
exp_type	include/openflow/openflow-1.4.h	/^    ovs_be32        exp_type;     \/* Experimenter defined. *\/$/;"	m	struct:ofp14_role_prop_experimenter
exp_type	lib/ofp-actions.c	/^    ovs_be16 exp_type;          \/* 3200. *\/$/;"	m	struct:onf_action_copy_field	file:
exp_type	lib/ofp-util.c	/^    ovs_be32 exp_type;      \/* Experimenter defined. *\/$/;"	m	struct:ofp_prop_experimenter	file:
expand_symbol	ovn/lib/expr.c	/^expand_symbol(struct expr_context *ctx, bool rw, bool exchange,$/;"	f	file:
expansion	ovn/lib/expr.h	/^    char *expansion;$/;"	m	struct:expr_symbol
expected	ovsdb/execution.c	/^    struct ovsdb_row_hash *expected;$/;"	m	struct:wait_auxdata	typeref:struct:wait_auxdata::ovsdb_row_hash	file:
experimenter	include/openflow/netronome-ext.h	/^    ovs_be32 experimenter;          \/* NTR_VENDOR_ID. *\/$/;"	m	struct:ntr_group_prop_selection_method
experimenter	include/openflow/openflow-1.1.h	/^    ovs_be32 experimenter;      \/* Experimenter ID which takes the same form$/;"	m	struct:ofp11_instruction_experimenter
experimenter	include/openflow/openflow-1.2.h	/^    ovs_be32 experimenter;    \/* Experimenter ID which takes the same form$/;"	m	struct:ofp12_experimenter_stats_header
experimenter	include/openflow/openflow-1.2.h	/^    ovs_be32 experimenter; \/* Experimenter ID which takes the same$/;"	m	struct:ofp12_oxm_experimenter_header
experimenter	include/openflow/openflow-1.3.h	/^    ovs_be32    experimenter; \/* Experimenter ID which takes the same form as$/;"	m	struct:ofp13_meter_band_experimenter
experimenter	include/openflow/openflow-1.3.h	/^    ovs_be32    experimenter; \/* Experimenter ID which takes the same form$/;"	m	struct:ofp13_table_feature_prop_experimenter
experimenter	include/openflow/openflow-1.4.h	/^    ovs_be32        experimenter;  \/* Experimenter ID which takes the same$/;"	m	struct:ofp14_async_config_prop_experimenter
experimenter	include/openflow/openflow-1.4.h	/^    ovs_be32        experimenter; \/* Experimenter ID which takes the same$/;"	m	struct:ofp14_role_prop_experimenter
experimenter	lib/ofp-actions.c	/^    ovs_be32 experimenter;      \/* ONF_VENDOR_ID. *\/$/;"	m	struct:onf_action_copy_field	file:
experimenter	lib/ofp-util.c	/^    ovs_be32 experimenter;  \/* Experimenter ID which takes the same form as$/;"	m	struct:ofp_prop_experimenter	file:
expires	lib/mac-learning.h	/^    time_t expires;             \/* Expiration time. *\/$/;"	m	struct:mac_entry
expires	lib/mcast-snooping.h	/^    time_t expires;$/;"	m	struct:mcast_group_bundle
expires	lib/mcast-snooping.h	/^    time_t expires;$/;"	m	struct:mcast_mrouter_bundle
expires	lib/tnl-arp-cache.c	/^    time_t expires;             \/* Expiration time. *\/$/;"	m	struct:tnl_arp_entry	file:
exporter	ofproto/ofproto-dpif-ipfix.c	/^    struct dpif_ipfix_exporter exporter;$/;"	m	struct:dpif_ipfix_bridge_exporter	typeref:struct:dpif_ipfix_bridge_exporter::dpif_ipfix_exporter	file:
exporter	ofproto/ofproto-dpif-ipfix.c	/^    struct dpif_ipfix_exporter exporter;$/;"	m	struct:dpif_ipfix_flow_exporter	typeref:struct:dpif_ipfix_flow_exporter::dpif_ipfix_exporter	file:
exporter	ofproto/ofproto-dpif-ipfix.c	/^    struct dpif_ipfix_flow_exporter exporter;$/;"	m	struct:dpif_ipfix_flow_exporter_map_node	typeref:struct:dpif_ipfix_flow_exporter_map_node::dpif_ipfix_flow_exporter	file:
expr	ovn/lib/expr.c	/^    struct expr *expr;$/;"	m	struct:expr_sort	typeref:struct:expr_sort::expr	file:
expr	ovn/lib/expr.c	/^VLOG_DEFINE_THIS_MODULE(expr);$/;"	v
expr	ovn/lib/expr.h	/^struct expr {$/;"	s
expr_annotate	ovn/lib/expr.c	/^expr_annotate(struct expr *expr, const struct shash *symtab, char **errorp)$/;"	f
expr_annotate__	ovn/lib/expr.c	/^expr_annotate__(struct expr *expr, const struct shash *symtab,$/;"	f
expr_annotate_cmp	ovn/lib/expr.c	/^expr_annotate_cmp(struct expr *expr, const struct shash *symtab,$/;"	f	file:
expr_clone	ovn/lib/expr.c	/^expr_clone(struct expr *expr)$/;"	f
expr_clone_andor	ovn/lib/expr.c	/^expr_clone_andor(struct expr *expr)$/;"	f	file:
expr_clone_cmp	ovn/lib/expr.c	/^expr_clone_cmp(struct expr *expr)$/;"	f	file:
expr_combine	ovn/lib/expr.c	/^expr_combine(enum expr_type type, struct expr *a, struct expr *b)$/;"	f
expr_constant	ovn/lib/expr.c	/^union expr_constant {$/;"	u	file:
expr_constant_set	ovn/lib/expr.c	/^struct expr_constant_set {$/;"	s	file:
expr_constant_set_destroy	ovn/lib/expr.c	/^expr_constant_set_destroy(struct expr_constant_set *cs)$/;"	f	file:
expr_constant_type	ovn/lib/expr.c	/^enum expr_constant_type {$/;"	g	file:
expr_constant_width	ovn/lib/expr.c	/^expr_constant_width(const union expr_constant *c)$/;"	f	file:
expr_context	ovn/lib/expr.c	/^struct expr_context {$/;"	s	file:
expr_create_andor	ovn/lib/expr.c	/^expr_create_andor(enum expr_type type)$/;"	f
expr_create_boolean	ovn/lib/expr.c	/^expr_create_boolean(bool b)$/;"	f
expr_destroy	ovn/lib/expr.c	/^expr_destroy(struct expr *expr)$/;"	f
expr_error	ovn/lib/expr.c	/^expr_error(struct expr_context *ctx, const char *message, ...)$/;"	f
expr_error_handle_common	ovn/lib/expr.c	/^expr_error_handle_common(struct expr_context *ctx)$/;"	f	file:
expr_field	ovn/lib/expr.c	/^struct expr_field {$/;"	s	file:
expr_fix	ovn/lib/expr.c	/^expr_fix(struct expr *expr)$/;"	f	file:
expr_fix_andor	ovn/lib/expr.c	/^expr_fix_andor(struct expr *expr, bool short_circuit)$/;"	f	file:
expr_format	ovn/lib/expr.c	/^expr_format(const struct expr *e, struct ds *s)$/;"	f
expr_format_andor	ovn/lib/expr.c	/^expr_format_andor(const struct expr *e, const char *op, struct ds *s)$/;"	f	file:
expr_format_cmp	ovn/lib/expr.c	/^expr_format_cmp(const struct expr *e, struct ds *s)$/;"	f	file:
expr_from_node	ovn/lib/expr.h	/^expr_from_node(const struct ovs_list *node)$/;"	f
expr_get_int	ovn/lib/expr.c	/^expr_get_int(struct expr_context *ctx, int *value)$/;"	f	file:
expr_get_level	ovn/lib/expr.c	/^expr_get_level(const struct expr *expr)$/;"	f	file:
expr_honors_invariants	ovn/lib/expr.c	/^expr_honors_invariants(const struct expr *expr)$/;"	f
expr_insert_andor	ovn/lib/expr.c	/^expr_insert_andor(struct expr *andor, struct expr *before, struct expr *new)$/;"	f	file:
expr_is_cmp	ovn/lib/expr.c	/^expr_is_cmp(const struct expr *expr)$/;"	f	file:
expr_is_normalized	ovn/lib/expr.c	/^expr_is_normalized(const struct expr *expr)$/;"	f
expr_is_normalized_and	ovn/lib/expr.c	/^expr_is_normalized_and(const struct expr *expr)$/;"	f	file:
expr_level	ovn/lib/expr.h	/^enum expr_level {$/;"	g
expr_level_to_string	ovn/lib/expr.c	/^expr_level_to_string(enum expr_level level)$/;"	f
expr_match	ovn/lib/expr.h	/^struct expr_match {$/;"	s
expr_match_add	ovn/lib/expr.c	/^expr_match_add(struct hmap *matches, struct expr_match *match)$/;"	f	file:
expr_match_new	ovn/lib/expr.c	/^expr_match_new(const struct match *m, uint8_t clause, uint8_t n_clauses,$/;"	f	file:
expr_matches_destroy	ovn/lib/expr.c	/^expr_matches_destroy(struct hmap *matches)$/;"	f
expr_matches_print	ovn/lib/expr.c	/^expr_matches_print(const struct hmap *matches, FILE *stream)$/;"	f
expr_normalize	ovn/lib/expr.c	/^expr_normalize(struct expr *expr)$/;"	f
expr_normalize_and	ovn/lib/expr.c	/^expr_normalize_and(struct expr *expr)$/;"	f	file:
expr_normalize_or	ovn/lib/expr.c	/^expr_normalize_or(struct expr *expr)$/;"	f	file:
expr_not	ovn/lib/expr.c	/^expr_not(struct expr *expr)$/;"	f	file:
expr_parse	ovn/lib/expr.c	/^expr_parse(struct lexer *lexer, const struct shash *symtab, char **errorp)$/;"	f
expr_parse__	ovn/lib/expr.c	/^expr_parse__(struct expr_context *ctx)$/;"	f
expr_parse_assignment	ovn/lib/expr.c	/^expr_parse_assignment(struct lexer *lexer, const struct shash *symtab,$/;"	f
expr_parse_level	ovn/lib/expr.c	/^expr_parse_level(const char *s, const struct shash *symtab, char **errorp)$/;"	f	file:
expr_parse_not	ovn/lib/expr.c	/^expr_parse_not(struct expr_context *ctx)$/;"	f	file:
expr_parse_primary	ovn/lib/expr.c	/^expr_parse_primary(struct expr_context *ctx, bool *atomic)$/;"	f	file:
expr_parse_string	ovn/lib/expr.c	/^expr_parse_string(const char *s, const struct shash *symtab, char **errorp)$/;"	f
expr_print	ovn/lib/expr.c	/^expr_print(const struct expr *e)$/;"	f
expr_relop	ovn/lib/expr.h	/^enum expr_relop {$/;"	g
expr_relop_from_token	ovn/lib/expr.c	/^expr_relop_from_token(enum lex_type type, enum expr_relop *relop)$/;"	f
expr_relop_invert	ovn/lib/expr.c	/^expr_relop_invert(enum expr_relop relop)$/;"	f	file:
expr_relop_to_string	ovn/lib/expr.c	/^expr_relop_to_string(enum expr_relop relop)$/;"	f
expr_relop_turn	ovn/lib/expr.c	/^expr_relop_turn(enum expr_relop relop)$/;"	f	file:
expr_simplify	ovn/lib/expr.c	/^expr_simplify(struct expr *expr)$/;"	f
expr_simplify_ne	ovn/lib/expr.c	/^expr_simplify_ne(struct expr *expr)$/;"	f	file:
expr_simplify_relational	ovn/lib/expr.c	/^expr_simplify_relational(struct expr *expr)$/;"	f	file:
expr_sort	ovn/lib/expr.c	/^expr_sort(struct expr *expr)$/;"	f	file:
expr_sort	ovn/lib/expr.c	/^struct expr_sort {$/;"	s	file:
expr_symbol	ovn/lib/expr.h	/^struct expr_symbol {$/;"	s
expr_symtab_add_field	ovn/lib/expr.c	/^expr_symtab_add_field(struct shash *symtab, const char *name,$/;"	f
expr_symtab_add_predicate	ovn/lib/expr.c	/^expr_symtab_add_predicate(struct shash *symtab, const char *name,$/;"	f
expr_symtab_add_string	ovn/lib/expr.c	/^expr_symtab_add_string(struct shash *symtab, const char *name,$/;"	f
expr_symtab_add_subfield	ovn/lib/expr.c	/^expr_symtab_add_subfield(struct shash *symtab, const char *name,$/;"	f
expr_symtab_destroy	ovn/lib/expr.c	/^expr_symtab_destroy(struct shash *symtab)$/;"	f
expr_syntax_error	ovn/lib/expr.c	/^expr_syntax_error(struct expr_context *ctx, const char *message, ...)$/;"	f
expr_to_flow	tests/testsuite	/^expr_to_flow () {$/;"	f
expr_to_matches	ovn/lib/expr.c	/^expr_to_matches(const struct expr *expr, const struct simap *ports,$/;"	f
expr_type	ovn/lib/expr.h	/^enum expr_type {$/;"	g
ext_action_header	lib/ofp-actions.c	/^struct ext_action_header {$/;"	s	file:
extended	lib/cfm.c	/^    atomic_bool extended;      \/* Extended mode. *\/$/;"	m	struct:cfm	file:
extended	lib/cfm.h	/^    bool extended;              \/* Run in extended mode. *\/$/;"	m	struct:cfm_settings
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_controller	typeref:struct:ovsrec_controller::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_flow_sample_collector_set	typeref:struct:ovsrec_flow_sample_collector_set::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_flow_table	typeref:struct:ovsrec_flow_table::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_ipfix	typeref:struct:ovsrec_ipfix::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_manager	typeref:struct:ovsrec_manager::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_mirror	typeref:struct:ovsrec_mirror::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_netflow	typeref:struct:ovsrec_netflow::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_open_vswitch	typeref:struct:ovsrec_open_vswitch::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_port	typeref:struct:ovsrec_port::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_qos	typeref:struct:ovsrec_qos::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_queue	typeref:struct:ovsrec_queue::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_sflow	typeref:struct:ovsrec_sflow::smap
external_ids	lib/vswitch-idl.h	/^	struct smap external_ids;$/;"	m	struct:ovsrec_ssl	typeref:struct:ovsrec_ssl::smap
external_ids	ovn/lib/ovn-nb-idl.h	/^	struct smap external_ids;$/;"	m	struct:nbrec_acl	typeref:struct:nbrec_acl::smap
external_ids	ovn/lib/ovn-nb-idl.h	/^	struct smap external_ids;$/;"	m	struct:nbrec_logical_port	typeref:struct:nbrec_logical_port::smap
external_ids	ovn/lib/ovn-nb-idl.h	/^	struct smap external_ids;$/;"	m	struct:nbrec_logical_router	typeref:struct:nbrec_logical_router::smap
external_ids	ovn/lib/ovn-nb-idl.h	/^	struct smap external_ids;$/;"	m	struct:nbrec_logical_router_port	typeref:struct:nbrec_logical_router_port::smap
external_ids	ovn/lib/ovn-nb-idl.h	/^	struct smap external_ids;$/;"	m	struct:nbrec_logical_switch	typeref:struct:nbrec_logical_switch::smap
external_ids	ovn/lib/ovn-sb-idl.h	/^	struct smap external_ids;$/;"	m	struct:sbrec_datapath_binding	typeref:struct:sbrec_datapath_binding::smap
external_ids	ovn/lib/ovn-sb-idl.h	/^	struct smap external_ids;$/;"	m	struct:sbrec_logical_flow	typeref:struct:sbrec_logical_flow::smap
extra_in_band_remotes	ofproto/connmgr.c	/^    struct sockaddr_in *extra_in_band_remotes;$/;"	m	struct:connmgr	typeref:struct:connmgr::sockaddr_in	file:
extra_multiple	lib/ofp-msgs.c	/^    unsigned int extra_multiple;$/;"	m	struct:raw_info	file:
extra_name	lib/meta-flow.h	/^    const char *extra_name;     \/* Alternate name, e.g. "dl_type", or NULL. *\/$/;"	m	struct:mf_field
extract_actions	lib/ofp-parse.c	/^extract_actions(char *s)$/;"	f	file:
extract_bash_prompt	utilities/ovs-appctl-bashcomp.bash	/^extract_bash_prompt() {$/;"	f
extract_ofp_actions	build-aux/extract-ofp-actions	/^def extract_ofp_actions(fn, definitions):$/;"	f
extract_ofp_errors	build-aux/extract-ofp-errors	/^def extract_ofp_errors(fn):$/;"	f
extract_ofp_fields	build-aux/extract-ofp-fields	/^def extract_ofp_fields(mode):$/;"	f
extract_ofp_msgs	build-aux/extract-ofp-msgs	/^def extract_ofp_msgs(output_file_name):$/;"	f
extract_options	utilities/ovs-appctl-bashcomp.bash	/^extract_options() {$/;"	f
extract_subcmds	utilities/ovs-appctl-bashcomp.bash	/^extract_subcmds() {$/;"	f
extract_vendor_ids	build-aux/extract-ofp-errors	/^def extract_vendor_ids(fn):$/;"	f
exts	datapath/linux/vport-vxlan.c	/^	u32 exts; \/* VXLAN_F_* in <net\/vxlan.h> *\/$/;"	m	struct:vxlan_port	file:
exts	datapath/vport-vxlan.c	/^	u32 exts; \/* VXLAN_F_* in <net\/vxlan.h> *\/$/;"	m	struct:vxlan_port	file:
exts	lib/netdev.h	/^    uint32_t exts;$/;"	m	struct:netdev_tunnel_config
exts_policy	datapath/linux/vport-vxlan.c	/^static const struct nla_policy exts_policy[OVS_VXLAN_EXT_MAX+1] = {$/;"	v	typeref:struct:nla_policy	file:
exts_policy	datapath/vport-vxlan.c	/^static const struct nla_policy exts_policy[OVS_VXLAN_EXT_MAX+1] = {$/;"	v	typeref:struct:nla_policy	file:
f	utilities/bugtool/ovs-bugtool	/^            f = open('\/sys\/class\/net\/%s\/type' % p, 'r')$/;"	v
f	utilities/ovs-check-dead-ifs	/^f = open("\/proc\/net\/packet")$/;"	v
f1	lib/sha1.c	/^f1(uint32_t x, uint32_t y, uint32_t z)$/;"	f	file:
f2	lib/sha1.c	/^f2(uint32_t x, uint32_t y, uint32_t z)$/;"	f	file:
f3	lib/sha1.c	/^f3(uint32_t x, uint32_t y, uint32_t z)$/;"	f	file:
f4	lib/sha1.c	/^f4(uint32_t x, uint32_t y, uint32_t z)$/;"	f	file:
f_uint16	lib/lldp/lldp.c	/^    ovs_be16 f_uint16;$/;"	m	union:__anon96	file:
f_uint32	lib/lldp/lldp.c	/^    ovs_be32 f_uint32;$/;"	m	union:__anon96	file:
f_uint8	lib/lldp/lldp.c	/^    uint8_t  f_uint8;$/;"	m	union:__anon96	file:
fa_element_to_part_nr	datapath/linux/compat/flex_array.c	/^static int fa_element_to_part_nr(struct flex_array *fa,$/;"	f	file:
fa_element_to_part_nr	datapath/linux/flex_array.c	/^static int fa_element_to_part_nr(struct flex_array *fa,$/;"	f	file:
facility	lib/syslog-direct.c	/^    int facility;$/;"	m	struct:syslog_direct	file:
factorial	tests/test-classifier.c	/^factorial(int n_items)$/;"	f	file:
factorial	tests/test-heap.c	/^factorial(int n_items)$/;"	f	file:
fail_mode	lib/vswitch-idl.h	/^	char *fail_mode;$/;"	m	struct:ovsrec_bridge
fail_mode	ofproto/connmgr.c	/^    enum ofproto_fail_mode fail_mode;$/;"	m	struct:connmgr	typeref:enum:connmgr::ofproto_fail_mode	file:
fail_open	ofproto/connmgr.c	/^    struct fail_open *fail_open;$/;"	m	struct:connmgr	typeref:struct:connmgr::fail_open	file:
fail_open	ofproto/fail-open.c	/^VLOG_DEFINE_THIS_MODULE(fail_open);$/;"	v
fail_open	ofproto/fail-open.c	/^struct fail_open {$/;"	s	file:
fail_open	ofproto/ofproto-dpif-xlate.h	/^    bool fail_open;             \/* Initial rule is fail open? *\/$/;"	m	struct:xlate_out
fail_open_active	ofproto/fail-open.c	/^    bool fail_open_active;$/;"	m	struct:fail_open	file:
fail_open_count_rules	ofproto/fail-open.c	/^fail_open_count_rules(const struct fail_open *fo)$/;"	f
fail_open_create	ofproto/fail-open.c	/^fail_open_create(struct ofproto *ofproto, struct connmgr *mgr)$/;"	f
fail_open_is_active	ofproto/fail-open.c	/^fail_open_is_active(const struct fail_open *fo)$/;"	f
fail_open_run	ofproto/fail-open.c	/^fail_open_run(struct fail_open *fo)$/;"	f
fail_open_wait	ofproto/fail-open.c	/^fail_open_wait(struct fail_open *fo)$/;"	f
failedChecksum	datapath-windows/ovsext/Actions.c	/^    UINT32 failedChecksum;$/;"	m	struct:_OVS_ACTION_STATS	file:
failedDecap	datapath-windows/ovsext/Actions.c	/^    UINT32 failedDecap;$/;"	m	struct:_OVS_ACTION_STATS	file:
failedEncap	datapath-windows/ovsext/Actions.c	/^    UINT32 failedEncap;$/;"	m	struct:_OVS_ACTION_STATS	file:
failedFlowExtract	datapath-windows/ovsext/Actions.c	/^    UINT32 failedFlowExtract;$/;"	m	struct:_OVS_ACTION_STATS	file:
failedFlowMiss	datapath-windows/ovsext/Actions.c	/^    UINT32 failedFlowMiss;$/;"	m	struct:_OVS_ACTION_STATS	file:
failure_cb	utilities/ovs-vlan-test	/^        def failure_cb():$/;"	f	function:VlanClient.recv
fake_bridge	lib/vswitch-idl.h	/^	bool fake_bridge;$/;"	m	struct:ovsrec_port
fake_pvconn	tests/test-vconn.c	/^struct fake_pvconn {$/;"	s	file:
fallback_ab	lib/lacp.c	/^    bool fallback_ab; \/* True if fallback to active-backup on LACP failure. *\/$/;"	m	struct:lacp	file:
fallback_ab_cfg	lib/lacp.h	/^    bool fallback_ab_cfg;             \/* Fallback to BM_SLB on LACP failure. *\/$/;"	m	struct:lacp_settings
fallback_dpid	ofproto/ofproto-provider.h	/^    uint64_t fallback_dpid;     \/* Datapath ID if no better choice found. *\/$/;"	m	struct:ofproto
false	datapath/linux/compat/include/linux/stddef.h	/^	false   = 0,$/;"	e	enum:__anon44
family	datapath/linux/compat/include/net/udp_tunnel.h	/^	u8			family;$/;"	m	struct:udp_port_cfg
family_list	datapath/linux/compat/include/net/genetlink.h	/^	struct list_head        family_list;    \/* private *\/$/;"	m	struct:rpl_genl_family	typeref:struct:rpl_genl_family::list_head
family_policy	lib/netlink-socket.c	/^static const struct nl_policy family_policy[CTRL_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nl_policy	file:
fast	lib/lacp.c	/^    bool fast;               \/* True if using fast probe interval. *\/$/;"	m	struct:lacp	file:
fast	lib/lacp.h	/^    bool fast;                        \/* Fast or slow probe interval. *\/$/;"	m	struct:lacp_settings
fast_path_processing	lib/dpif-netdev.c	/^fast_path_processing(struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
fat_rwlock	lib/fat-rwlock.h	/^struct OVS_LOCKABLE fat_rwlock {$/;"	s
fat_rwlock_destroy	lib/fat-rwlock.c	/^fat_rwlock_destroy(struct fat_rwlock *rwlock)$/;"	f
fat_rwlock_get_slot__	lib/fat-rwlock.c	/^fat_rwlock_get_slot__(struct fat_rwlock *rwlock)$/;"	f	file:
fat_rwlock_init	lib/fat-rwlock.c	/^fat_rwlock_init(struct fat_rwlock *rwlock)$/;"	f
fat_rwlock_slot	lib/fat-rwlock.c	/^struct fat_rwlock_slot {$/;"	s	file:
fat_rwlock_try_get_slot__	lib/fat-rwlock.c	/^fat_rwlock_try_get_slot__(struct fat_rwlock *rwlock)$/;"	f	file:
fatal	build-aux/check-structs	/^def fatal(msg):$/;"	f
fatal	build-aux/extract-ofp-actions	/^def fatal(msg):$/;"	f
fatal	build-aux/extract-ofp-errors	/^def fatal(msg):$/;"	f
fatal	build-aux/extract-ofp-fields	/^def fatal(msg):$/;"	f
fatal	build-aux/extract-ofp-msgs	/^def fatal(msg):$/;"	f
fatal_ignore_sigpipe	lib/fatal-signal.c	/^fatal_ignore_sigpipe(void)$/;"	f
fatal_signal	lib/fatal-signal.c	/^VLOG_DEFINE_THIS_MODULE(fatal_signal);$/;"	v
fatal_signal	python/ovs/daemon.py	/^import ovs.fatal_signal$/;"	i
fatal_signal	python/ovs/socket_util.py	/^import ovs.fatal_signal$/;"	i
fatal_signal_add_file_to_unlink	lib/fatal-signal.c	/^fatal_signal_add_file_to_unlink(const char *file)$/;"	f
fatal_signal_add_hook	lib/fatal-signal.c	/^fatal_signal_add_hook(void (*hook_cb)(void *aux), void (*cancel_cb)(void *aux),$/;"	f
fatal_signal_atexit_handler	lib/fatal-signal.c	/^fatal_signal_atexit_handler(void)$/;"	f
fatal_signal_block	lib/fatal-signal.c	/^fatal_signal_block(sigset_t *prev_mask)$/;"	f
fatal_signal_fork	lib/fatal-signal.c	/^fatal_signal_fork(void)$/;"	f
fatal_signal_handler	lib/fatal-signal.c	/^fatal_signal_handler(int sig_nr)$/;"	f
fatal_signal_init	lib/fatal-signal.c	/^fatal_signal_init(void)$/;"	f
fatal_signal_remove_file_to_unlink	lib/fatal-signal.c	/^fatal_signal_remove_file_to_unlink(const char *file)$/;"	f
fatal_signal_run	lib/fatal-signal.c	/^fatal_signal_run(void)$/;"	f
fatal_signal_unlink_file_now	lib/fatal-signal.c	/^fatal_signal_unlink_file_now(const char *file)$/;"	f
fatal_signal_wait	lib/fatal-signal.c	/^fatal_signal_wait(void)$/;"	f
fatal_signals	lib/fatal-signal.c	/^static const int fatal_signals[] = { SIGTERM };$/;"	v	file:
fatal_signals	lib/fatal-signal.c	/^static const int fatal_signals[] = { SIGTERM, SIGINT, SIGHUP, SIGALRM };$/;"	v	file:
fatlock	tests/test-cmap.c	/^    struct fat_rwlock fatlock;$/;"	m	struct:hmap_aux	typeref:struct:hmap_aux::fat_rwlock	file:
fault	lib/cfm.c	/^    enum cfm_fault_reason fault;  \/* Connectivity fault status. *\/$/;"	m	struct:cfm	typeref:enum:cfm::cfm_fault_reason	file:
fault_override	lib/cfm.c	/^    int fault_override;    \/* Manual override of 'fault' status.$/;"	m	struct:cfm	file:
fault_timer	lib/cfm.c	/^    struct timer fault_timer; \/* Check for faults when expired. *\/$/;"	m	struct:cfm	typeref:struct:cfm::timer	file:
faults	lib/cfm.h	/^    enum cfm_fault_reason faults;$/;"	m	struct:cfm_status	typeref:enum:cfm_status::cfm_fault_reason
fcntl	python/ovs/daemon.py	/^import fcntl$/;"	i
fcntl	python/ovstest/util.py	/^import fcntl$/;"	i
fcntl	utilities/bugtool/ovs-bugtool	/^import fcntl$/;"	i
fcntl	utilities/ovs-dpctl-top	/^import fcntl$/;"	i
fcntl	utilities/ovs-test	/^import fcntl$/;"	i
fd	lib/async-append-aio.c	/^    int fd;$/;"	m	struct:async_append	file:
fd	lib/lockfile.c	/^    int fd;$/;"	m	struct:lockfile	file:
fd	lib/netdev-bsd.c	/^    int fd;$/;"	m	struct:netdev_bsd	file:
fd	lib/netdev-bsd.c	/^    int fd;$/;"	m	struct:netdev_rxq_bsd	file:
fd	lib/netdev-linux.c	/^    int fd;$/;"	m	struct:netdev_rxq_linux	file:
fd	lib/stream-fd.c	/^    int fd;$/;"	m	struct:fd_pstream	file:
fd	lib/stream-fd.c	/^    int fd;$/;"	m	struct:stream_fd	file:
fd	lib/stream-ssl.c	/^    int fd;$/;"	m	struct:pssl_pstream	file:
fd	lib/stream-ssl.c	/^    int fd;$/;"	m	struct:ssl_stream	file:
fd	lib/syslog-direct.c	/^    int fd;  \/* Negative number in error case.  Otherwise, socket. *\/$/;"	m	struct:syslog_direct	file:
fd	utilities/ovs-check-dead-ifs	/^            fd = int(fd)$/;"	v
fd__	lib/perf-counter.c	/^static int fd__ = 0;$/;"	v	file:
fd_close	lib/stream-fd.c	/^fd_close(struct stream *stream)$/;"	f	file:
fd_connect	lib/stream-fd.c	/^fd_connect(struct stream *stream)$/;"	f	file:
fd_list	utilities/qemu-wrap.py	/^fd_list = []$/;"	v
fd_max	lib/sflow.h	/^    uint32_t fd_max;$/;"	m	struct:_SFLAPPResources_counters
fd_open	lib/sflow.h	/^    uint32_t fd_open;$/;"	m	struct:_SFLAPPResources_counters
fd_pstream	lib/stream-fd.c	/^struct fd_pstream$/;"	s	file:
fd_pstream_cast	lib/stream-fd.c	/^fd_pstream_cast(struct pstream *pstream)$/;"	f	file:
fd_pstream_class	lib/stream-fd.c	/^static const struct pstream_class fd_pstream_class = {$/;"	v	typeref:struct:pstream_class	file:
fd_pstream_class	lib/stream-fd.c	/^static const struct pstream_class fd_pstream_class;$/;"	v	typeref:struct:pstream_class	file:
fd_recv	lib/stream-fd.c	/^fd_recv(struct stream *stream, void *buffer, size_t n)$/;"	f	file:
fd_send	lib/stream-fd.c	/^fd_send(struct stream *stream, const void *buffer, size_t n)$/;"	f	file:
fd_type	lib/stream-fd.c	/^    int fd_type;$/;"	m	struct:stream_fd	file:
fd_usage	utilities/bugtool/ovs-bugtool	/^def fd_usage(cap):$/;"	f
fd_wait	lib/stream-fd.c	/^fd_wait(struct stream *stream, enum stream_wait_type wait)$/;"	f	file:
fd_wait	python/ovs/poller.py	/^    def fd_wait(self, fd, events):$/;"	m	class:Poller
fdb_needs_flush	lib/stp.c	/^    bool fdb_needs_flush;          \/* MAC learning tables needs flushing. *\/$/;"	m	struct:stp	file:
fds	lib/latch.h	/^    int fds[2];$/;"	m	struct:latch
fds	lib/process.c	/^static int fds[2];$/;"	v	file:
fds	ofproto/collectors.c	/^    int *fds;                     \/* Sockets. *\/$/;"	m	struct:collectors	file:
fds	utilities/ovs-check-dead-ifs	/^        fds = os.listdir("\/proc\/%d\/fd" % pid)$/;"	v
feed	python/ovs/json.py	/^    def feed(self, s):$/;"	m	class:Parser
fetch_braces	lib/vlog.c	/^fetch_braces(const char *p, const char *def, char *out, size_t out_size)$/;"	f	file:
fetch_dbs	ovsdb/ovsdb-client.c	/^fetch_dbs(struct jsonrpc *rpc, struct svec *dbs)$/;"	f	file:
fetch_ofputil_phy_port	utilities/ovs-ofctl.c	/^fetch_ofputil_phy_port(const char *vconn_name, const char *port_name,$/;"	f	file:
fetch_port_by_features	utilities/ovs-ofctl.c	/^fetch_port_by_features(struct vconn *vconn,$/;"	f	file:
fetch_port_by_stats	utilities/ovs-ofctl.c	/^fetch_port_by_stats(struct vconn *vconn,$/;"	f	file:
fetch_schema	ovsdb/ovsdb-client.c	/^fetch_schema(struct jsonrpc *rpc, const char *database)$/;"	f	file:
fetch_switch_config	utilities/ovs-ofctl.c	/^fetch_switch_config(struct vconn *vconn, struct ofp_switch_config *config_)$/;"	f	file:
field	lib/classifier.h	/^    const struct mf_field *field; \/* Trie field, or NULL. *\/$/;"	m	struct:cls_trie	typeref:struct:cls_trie::mf_field
field	lib/meta-flow.h	/^    const struct mf_field *field;$/;"	m	struct:mf_subfield	typeref:struct:mf_subfield::mf_field
field	lib/ofp-actions.h	/^    const struct mf_field *field;$/;"	m	struct:ofpact_set_field	typeref:struct:ofpact_set_field::mf_field
field	ovn/lib/expr.h	/^    const struct mf_field *field;$/;"	m	struct:expr_symbol	typeref:struct:expr_symbol::mf_field
field	utilities/ovs-ofctl.c	/^    const struct mf_field *field; \/* NULL means to sort by priority. *\/$/;"	m	struct:sort_criterion	typeref:struct:sort_criterion::mf_field	file:
field_add	utilities/ovs-dpctl-top	/^    def field_add(self, data):$/;"	m	class:FlowDB
field_array	lib/meta-flow.h	/^struct field_array {$/;"	s
field_array_set	lib/meta-flow.c	/^field_array_set(enum mf_field_id id, const union mf_value *value,$/;"	f
field_dec	utilities/ovs-dpctl-top	/^    def field_dec(self, data):$/;"	m	class:FlowDB
field_len	lib/meta-flow.c	/^field_len(const struct mf_field *mf, const union mf_value *value_)$/;"	f	file:
field_requires_ct	lib/ofp-actions.c	/^field_requires_ct(enum mf_field_id field)$/;"	f	file:
field_type_toggle	utilities/ovs-dpctl-top	/^    def field_type_toggle(self):$/;"	m	class:Render
field_types_get	utilities/ovs-dpctl-top	/^    def field_types_get(self):$/;"	m	class:FlowDB
field_values_in_order	utilities/ovs-dpctl-top	/^    def field_values_in_order(self, field_type_select, column_order):$/;"	m	class:FlowDB
fields	lib/ofp-actions.c	/^    ovs_be16 fields;            \/* One of NX_HASH_FIELDS_*. *\/$/;"	m	struct:nx_action_bundle	file:
fields	lib/ofp-actions.c	/^    ovs_be16 fields;            \/* One of NX_HASH_FIELDS_*. *\/$/;"	m	struct:nx_action_multipath	file:
fields	lib/ofp-actions.h	/^    enum nx_hash_fields fields;$/;"	m	struct:ofpact_bundle	typeref:enum:ofpact_bundle::nx_hash_fields
fields	lib/ofp-actions.h	/^    enum nx_hash_fields fields;$/;"	m	struct:ofpact_multipath	typeref:enum:ofpact_multipath::nx_hash_fields
fields	lib/ofp-util.h	/^    struct field_array fields;$/;"	m	struct:ofputil_group_props	typeref:struct:ofputil_group_props::field_array
fields	ovsdb/row.h	/^    struct ovsdb_datum fields[];$/;"	m	struct:ovsdb_row	typeref:struct:ovsdb_row::ovsdb_datum
fields	utilities/ovs-check-dead-ifs	/^    fields = line.split()$/;"	v
fifo	datapath/actions.c	/^	struct deferred_action fifo[DEFERRED_ACTION_FIFO_SIZE];$/;"	m	struct:action_fifo	typeref:struct:action_fifo::deferred_action	file:
fifo	datapath/linux/actions.c	/^	struct deferred_action fifo[DEFERRED_ACTION_FIFO_SIZE];$/;"	m	struct:action_fifo	typeref:struct:action_fifo::deferred_action	file:
file	datapath/actions.c	/^  u8 chaddr[DHCP_CHADDR_MAX], sname[64], file[128];$/;"	m	struct:dhcphdr	file:
file	datapath/linux/actions.c	/^  u8 chaddr[DHCP_CHADDR_MAX], sname[64], file[128];$/;"	m	struct:dhcphdr	file:
file	lib/dhcp.h	/^    char file[128];             \/* Boot file name. *\/$/;"	m	struct:dhcp_header
file	ovsdb/log.c	/^    struct ovsdb_log *file;$/;"	m	struct:ovsdb_log_read_cbdata	typeref:struct:ovsdb_log_read_cbdata::ovsdb_log	file:
file	ovsdb/ovsdb-server.c	/^    struct ovsdb_file *file;$/;"	m	struct:db	typeref:struct:db::ovsdb_file	file:
file	python/setup.py	/^          file=sys.stderr)$/;"	v
fileObject	datapath-windows/ovsext/Datapath.h	/^    PFILE_OBJECT fileObject;$/;"	m	struct:_OVS_OPEN_INSTANCE
file_mod_date	utilities/ovs-pki	/^    file_mod_date()$/;"	f
file_mod_date	utilities/ovs-pki.in	/^    file_mod_date()$/;"	f
file_mod_epoch	utilities/ovs-pki	/^    file_mod_epoch()$/;"	f
file_mod_epoch	utilities/ovs-pki.in	/^    file_mod_epoch()$/;"	f
file_name	build-aux/extract-ofp-fields	/^        file_name = sys.argv[1]$/;"	v
file_name	build-aux/extract-ofp-msgs	/^        file_name = sys.argv[1]$/;"	v
file_name	lib/stream-ssl.c	/^    char *file_name;            \/* Configured file name, if any. *\/$/;"	m	struct:ssl_config_file	file:
file_name	ovsdb/file.c	/^    char *file_name;$/;"	m	struct:ovsdb_file	file:
file_name	tests/test-rstp.c	/^static const char *file_name;$/;"	v	file:
file_name	tests/test-stp.c	/^static const char *file_name;$/;"	v	file:
file_output	utilities/bugtool/ovs-bugtool	/^def file_output(cap, path_list, newest_first=False, last_mod_time=None):$/;"	f
filename	ovsdb/ovsdb-server.c	/^    char *filename;$/;"	m	struct:db	file:
filep_pidfile	lib/daemon-windows.c	/^static FILE *filep_pidfile;    \/* File pointer to access the pidfile. *\/$/;"	v	file:
files	lib/fatal-signal.c	/^static struct sset files = SSET_INITIALIZER(&files);$/;"	v	typeref:struct:sset	file:
filter	utilities/bugtool/ovs-bugtool	/^        filter = ",".join(filters)$/;"	v
filter	utilities/bugtool/ovs-bugtool	/^        filter = None$/;"	v
filterID	datapath-windows/ovsext/TunnelFilter.c	/^    } filterID;$/;"	m	struct:_OVS_TUNFLT_REQUEST	typeref:union:_OVS_TUNFLT_REQUEST::__anon25	file:
filterID	datapath-windows/ovsext/Vxlan.h	/^    UINT64 filterID;$/;"	m	struct:_OVS_VXLAN_VPORT
filter_tnl_flags	datapath/linux/vport-gre.c	/^static __be16 filter_tnl_flags(__be16 flags)$/;"	f	file:
filter_tnl_flags	datapath/vport-gre.c	/^static __be16 filter_tnl_flags(__be16 flags)$/;"	f	file:
filters	utilities/bugtool/ovs-bugtool	/^    filters = set()$/;"	v
fin	datapath-windows/ovsext/NetProto.h	/^             fin:1,$/;"	m	struct:TCPHdr
fin	ofproto/ofproto-dpif-xlate.c	/^        } fin;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon195	file:
fin_hard_timeout	lib/ofp-actions.c	/^    ovs_be16 fin_hard_timeout;  \/* Hard timeout after FIN, if nonzero. *\/$/;"	m	struct:nx_action_learn	file:
fin_hard_timeout	lib/ofp-actions.c	/^    ovs_be16 fin_hard_timeout;  \/* New hard timeout, if nonzero. *\/$/;"	m	struct:nx_action_fin_timeout	file:
fin_hard_timeout	lib/ofp-actions.h	/^    uint16_t fin_hard_timeout;  \/* Hard timeout after FIN, if nonzero. *\/$/;"	m	struct:ofpact_learn
fin_hard_timeout	lib/ofp-actions.h	/^    uint16_t fin_hard_timeout;$/;"	m	struct:ofpact_fin_timeout
fin_idle_timeout	lib/ofp-actions.c	/^    ovs_be16 fin_idle_timeout;  \/* Idle timeout after FIN, if nonzero. *\/$/;"	m	struct:nx_action_learn	file:
fin_idle_timeout	lib/ofp-actions.c	/^    ovs_be16 fin_idle_timeout;  \/* New idle timeout, if nonzero. *\/$/;"	m	struct:nx_action_fin_timeout	file:
fin_idle_timeout	lib/ofp-actions.h	/^    uint16_t fin_idle_timeout;  \/* Idle timeout after FIN, if nonzero. *\/$/;"	m	struct:ofpact_learn
fin_idle_timeout	lib/ofp-actions.h	/^    uint16_t fin_idle_timeout;$/;"	m	struct:ofpact_fin_timeout
find	tests/test-cmap.c	/^find(const struct cmap *cmap, int value)$/;"	f	file:
find_batch	tests/test-cmap.c	/^find_batch(const struct cmap *cmap, const int value)$/;"	f	file:
find_bitwise_range	ovn/lib/expr.c	/^find_bitwise_range(const union mf_subvalue *sv, int width,$/;"	f	file:
find_bridge	utilities/ovs-vsctl.c	/^find_bridge(struct vsctl_context *vsctl_ctx, const char *name, bool must_exist)$/;"	f	file:
find_bucket	datapath/flow_table.c	/^static struct hlist_head *find_bucket(struct table_instance *ti, u32 hash)$/;"	f	file:
find_bucket	datapath/linux/flow_table.c	/^static struct hlist_head *find_bucket(struct table_instance *ti, u32 hash)$/;"	f	file:
find_chassis	ovn/utilities/ovn-sbctl.c	/^find_chassis(struct sbctl_context *sbctl_ctx, const char *name,$/;"	f	file:
find_conjunctive_match	lib/classifier.c	/^find_conjunctive_match(const struct cls_conjunction_set *set,$/;"	f	file:
find_conjunctive_match__	lib/classifier.c	/^find_conjunctive_match__(struct hmap *matches, uint64_t id, uint32_t hash)$/;"	f	file:
find_controller_by_target	ofproto/connmgr.c	/^find_controller_by_target(struct connmgr *mgr, const char *target)$/;"	f	file:
find_db	ovsdb/ovsdb-server.c	/^find_db(const struct shash *all_dbs, const char *db_name)$/;"	f	file:
find_equal	lib/classifier.c	/^find_equal(const struct cls_subtable *subtable, const struct miniflow *flow,$/;"	f	file:
find_file	build-aux/sodepends.pl	/^sub find_file {$/;"	s
find_genl_family_by_id	lib/netlink-socket.c	/^find_genl_family_by_id(uint16_t id)$/;"	f	file:
find_huge_mount	utilities/qemu-wrap.py	/^def find_huge_mount():$/;"	f
find_iface	utilities/ovs-vsctl.c	/^find_iface(struct vsctl_context *vsctl_ctx, const char *name, bool must_exist)$/;"	f	file:
find_local_hw_addr	vswitchd/bridge.c	/^find_local_hw_addr(const struct bridge *br, struct eth_addr *ea,$/;"	f	file:
find_lswitch	vtep/vtep-ctl.c	/^find_lswitch(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
find_match	lib/classifier.c	/^find_match(const struct cls_subtable *subtable, cls_version_t version,$/;"	f	file:
find_match_wc	lib/classifier.c	/^find_match_wc(const struct cls_subtable *subtable, cls_version_t version,$/;"	f	file:
find_min_mtu	ofproto/ofproto.c	/^find_min_mtu(struct ofproto *p)$/;"	f	file:
find_option	lib/db-ctl-base.c	/^find_option(const char *name, struct option *options, size_t n_options)$/;"	f	file:
find_or_make_txn_row	ovsdb/transaction.c	/^find_or_make_txn_row(struct ovsdb_txn *txn, const struct ovsdb_table *table,$/;"	f	file:
find_ploc	vtep/vtep-ctl.c	/^find_ploc(struct vtep_ctl_context *vtepctl_ctx, const char *encap,$/;"	f	file:
find_poll_node	lib/poll-loop.c	/^find_poll_node(struct poll_loop *loop, int fd, HANDLE wevent)$/;"	f	file:
find_port	utilities/ovs-vsctl.c	/^find_port(struct vsctl_context *vsctl_ctx, const char *name, bool must_exist)$/;"	f	file:
find_port	vtep/vtep-ctl.c	/^find_port(struct vtep_ctl_context *vtepctl_ctx, const char *ps_name,$/;"	f	file:
find_port_binding	ovn/utilities/ovn-sbctl.c	/^find_port_binding(struct sbctl_context *sbctl_ctx, const char *name,$/;"	f	file:
find_possible_comps	utilities/ovs-appctl-bashcomp.bash	/^find_possible_comps() {$/;"	f
find_pswitch	vtep/vtep-ctl.c	/^find_pswitch(struct vtep_ctl_context *vtepctl_ctx, const char *name, bool must_exist)$/;"	f	file:
find_real_bridge	utilities/ovs-vsctl.c	/^find_real_bridge(struct vsctl_context *vsctl_ctx,$/;"	f	file:
find_route	datapath/compat.h	/^static inline struct rtable *find_route(struct net *net,$/;"	f
find_subtable	lib/classifier.c	/^find_subtable(const struct classifier *cls, const struct minimask *mask)$/;"	f	file:
find_txn_row	ovsdb/transaction.c	/^find_txn_row(const struct ovsdb_table *table, const struct uuid *uuid)$/;"	f	file:
find_vlan_bridge	utilities/ovs-vsctl.c	/^find_vlan_bridge(struct vsctl_bridge *parent, int vlan)$/;"	f	file:
fingerprint	utilities/ovs-pki	/^fingerprint() {$/;"	f
fingerprint	utilities/ovs-pki.in	/^fingerprint() {$/;"	f
finish	python/ovs/db/parser.py	/^    def finish(self):$/;"	m	class:Parser
finish	python/ovs/json.py	/^    def finish(self):$/;"	m	class:Parser
finish_queue_dump	lib/netdev-linux.c	/^finish_queue_dump(struct queue_dump_state *state)$/;"	f	file:
first	datapath/linux/compat/stt.c	/^	struct first_frag first;$/;"	m	struct:frag_skb_cb	typeref:struct:frag_skb_cb::first_frag	file:
first	datapath/linux/stt.c	/^	struct first_frag first;$/;"	m	struct:frag_skb_cb	typeref:struct:frag_skb_cb::first_frag	file:
first_changed_port	lib/stp.c	/^    struct stp_port *first_changed_port;$/;"	m	struct:stp	typeref:struct:stp::stp_port	file:
first_composition	tests/test-ovn.c	/^first_composition(int n, unsigned int *state, int s[])$/;"	f	file:
first_dropped	include/openvswitch/vlog.h	/^    time_t first_dropped;       \/* Time first message was dropped. *\/$/;"	m	struct:vlog_rate_limit
first_frag	datapath/linux/compat/stt.c	/^struct first_frag {$/;"	s	file:
first_frag	datapath/linux/stt.c	/^struct first_frag {$/;"	s	file:
first_matching_table	ofproto/ofproto.c	/^first_matching_table(const struct ofproto *ofproto, uint8_t table_id)$/;"	f	file:
first_op	ofproto/connmgr.c	/^    long long int first_op, last_op; \/* Range of times for unreported ops. *\/$/;"	m	struct:ofconn	file:
first_ptable	ovn/lib/actions.c	/^    uint8_t first_ptable;       \/* First OpenFlow table. *\/$/;"	m	struct:action_context	file:
fixNBLCount	datapath-windows/ovsext/BufferMgmt.h	/^    LONG          fixNBLCount;$/;"	m	struct:_OVS_NBL_POOL
fixSizePool	datapath-windows/ovsext/BufferMgmt.h	/^    NDIS_HANDLE   fixSizePool;   \/\/ data size of 256$/;"	m	struct:_OVS_NBL_POOL
fix_segment	datapath/linux/compat/gso.h	/^	gso_fix_segment_t fix_segment;$/;"	m	struct:ovs_gso_cb
fix_sflow_action	ofproto/ofproto-dpif-xlate.c	/^fix_sflow_action(struct xlate_ctx *ctx, unsigned int user_cookie_offset)$/;"	f	file:
flag	include/windows/getopt.h	/^	int *flag;$/;"	m	struct:option
flag	lib/ofp-util.c	/^    enum ofputil_flow_mod_flags flag;$/;"	m	struct:ofputil_flow_mod_flag	typeref:enum:ofputil_flow_mod_flag::ofputil_flow_mod_flags	file:
flags	datapath-windows/ovsext/BufferMgmt.h	/^        UINT16 flags;$/;"	m	struct:_OVS_BUFFER_CONTEXT::__anon2
flags	datapath-windows/ovsext/DpInternal.h	/^        uint16_t flags;$/;"	m	struct:OvsIPv4TunnelKey::__anon7
flags	datapath-windows/ovsext/DpInternal.h	/^    uint32_t flags;$/;"	m	struct:OvsFlowPut
flags	datapath-windows/ovsext/Stt.h	/^    UINT8    flags;$/;"	m	struct:SttHdr
flags	datapath/actions.c	/^  u16 secs, flags;$/;"	m	struct:dhcphdr	file:
flags	datapath/flow.h	/^		__be16 flags;		\/* TCP flags. *\/$/;"	m	struct:sw_flow_key::__anon32
flags	datapath/linux/actions.c	/^  u16 secs, flags;$/;"	m	struct:dhcphdr	file:
flags	datapath/linux/compat/include/net/gre.h	/^	__be16 flags;$/;"	m	struct:gre_base_hdr
flags	datapath/linux/compat/include/net/ip_tunnels.h	/^	__be16 flags;$/;"	m	struct:tnl_ptk_info
flags	datapath/linux/compat/include/net/stt.h	/^	__u8		flags;$/;"	m	struct:stthdr
flags	datapath/linux/compat/include/net/vxlan.h	/^	u32		  flags;$/;"	m	struct:vxlan_sock
flags	include/openflow/nicira-ext.h	/^    ovs_be16 flags;               \/* One of OFPFF_*. *\/$/;"	m	struct:nx_flow_mod
flags	include/openflow/nicira-ext.h	/^    ovs_be16 flags;             \/* NXFMF_*. *\/$/;"	m	struct:nx_flow_monitor_request
flags	include/openflow/openflow-1.0.h	/^    ovs_be16 flags;               \/* One of OFPFF_*. *\/$/;"	m	struct:ofp10_flow_mod
flags	include/openflow/openflow-1.0.h	/^    ovs_be16 flags;             \/* Requests: always 0.$/;"	m	struct:ofp10_stats_msg
flags	include/openflow/openflow-1.1.h	/^    ovs_be16 flags;              \/* One of OFPFF_*. *\/$/;"	m	struct:ofp11_flow_mod
flags	include/openflow/openflow-1.1.h	/^    ovs_be16 flags;             \/* OFPSF_REQ_* flags (none yet defined). *\/$/;"	m	struct:ofp11_stats_msg
flags	include/openflow/openflow-1.1.h	/^    ovs_be16 flags;            \/* OF 1.3: Set of OFPFF*. *\/$/;"	m	struct:ofp11_flow_stats
flags	include/openflow/openflow-1.3.h	/^    ovs_be16          flags;        \/* Set of OFPMC_* that apply. *\/$/;"	m	struct:ofp13_meter_config
flags	include/openflow/openflow-1.3.h	/^    ovs_be16          flags;        \/* Set of OFPMF_*. *\/$/;"	m	struct:ofp13_meter_mod
flags	include/openflow/openflow-1.4.h	/^    ovs_be16 flags;             \/* OFPMF14_*. *\/$/;"	m	struct:ofp14_flow_monitor_request
flags	include/openflow/openflow-1.4.h	/^    ovs_be16 flags;         \/* Bitmap of OFPBF_* flags. *\/$/;"	m	struct:ofp14_bundle_ctrl_msg
flags	include/openflow/openflow-1.4.h	/^    ovs_be32         flags;   \/* Bitmap of OFPTMPEF14_* flags *\/$/;"	m	struct:ofp14_table_mod_prop_eviction
flags	include/openflow/openflow-common.h	/^    ovs_be16 flags;             \/* OFPC_* flags. *\/$/;"	m	struct:ofp_switch_config
flags	lib/bfd.c	/^    enum flags flags;             \/* Flags sent on messages. *\/$/;"	m	struct:bfd	typeref:enum:bfd::flags	file:
flags	lib/bfd.c	/^    uint8_t flags;        \/* 2bit State field followed by flags. *\/$/;"	m	struct:msg	file:
flags	lib/bfd.c	/^enum flags {$/;"	g	file:
flags	lib/dhcp.h	/^    ovs_be16 flags;             \/* DHCP_FLAGS_*. *\/$/;"	m	struct:dhcp_header
flags	lib/dpif.h	/^    enum dpif_flow_put_flags flags; \/* DPIF_FP_*. *\/$/;"	m	struct:dpif_flow_put	typeref:enum:dpif_flow_put::dpif_flow_put_flags
flags	lib/json.c	/^    int flags;$/;"	m	struct:json_parser	file:
flags	lib/json.c	/^    int flags;$/;"	m	struct:json_serializer	file:
flags	lib/netdev-dpdk.c	/^    enum netdev_flags flags;$/;"	m	struct:netdev_dpdk	typeref:enum:netdev_dpdk::netdev_flags	file:
flags	lib/ofp-actions.c	/^    ovs_be16 flags;             \/* NX_LEARN_F_*. *\/$/;"	m	struct:nx_action_learn	file:
flags	lib/ofp-actions.c	/^    ovs_be16 flags;             \/* Zero or more NX_CT_F_* flags.$/;"	m	struct:nx_action_conntrack	file:
flags	lib/ofp-actions.h	/^    enum nx_learn_flags flags;  \/* NX_LEARN_F_*. *\/$/;"	m	struct:ofpact_learn	typeref:enum:ofpact_learn::nx_learn_flags
flags	lib/ofp-util.h	/^    enum nx_flow_monitor_flags flags;$/;"	m	struct:ofputil_flow_monitor_request	typeref:enum:ofputil_flow_monitor_request::nx_flow_monitor_flags
flags	lib/ofp-util.h	/^    enum ofputil_flow_mod_flags flags;$/;"	m	struct:ofputil_flow_mod	typeref:enum:ofputil_flow_mod::ofputil_flow_mod_flags
flags	lib/ofp-util.h	/^    enum ofputil_flow_mod_flags flags;$/;"	m	struct:ofputil_flow_stats	typeref:enum:ofputil_flow_stats::ofputil_flow_mod_flags
flags	lib/ofp-util.h	/^    uint16_t            flags;$/;"	m	struct:ofputil_bundle_add_msg
flags	lib/ofp-util.h	/^    uint16_t    flags;$/;"	m	struct:ofputil_bundle_ctrl_msg
flags	lib/ofp-util.h	/^    uint16_t flags;$/;"	m	struct:ofputil_meter_config
flags	lib/packets.h	/^    ovs_be16 flags;$/;"	m	struct:gre_base_hdr
flags	lib/packets.h	/^    uint16_t flags;$/;"	m	struct:flow_tnl
flags	ofproto/bundles.h	/^    uint16_t          flags;$/;"	m	struct:ofp_bundle
flags	ofproto/connmgr.h	/^    enum nx_flow_monitor_flags flags;$/;"	m	struct:ofmonitor	typeref:enum:ofmonitor::nx_flow_monitor_flags
flags	ofproto/ofproto-provider.h	/^    enum oftable_flags flags;$/;"	m	struct:oftable	typeref:enum:oftable::oftable_flags
flags	ofproto/ofproto.c	/^    uint16_t flags;             \/* Meter flags. *\/$/;"	m	struct:meter	file:
flags	utilities/ovs-ofctl.c	/^    uint16_t flags;$/;"	m	struct:fte_version	file:
flags1	datapath-windows/ovsext/Vxlan.h	/^    UINT32   flags1:2;$/;"	m	struct:VXLANHdr
flags2	datapath-windows/ovsext/Vxlan.h	/^    UINT32   flags2:4;$/;"	m	struct:VXLANHdr
flap_count	lib/bfd.c	/^    uint64_t flap_count;          \/* Counts bfd forwarding flaps. *\/$/;"	m	struct:bfd	file:
flap_count	lib/cfm.c	/^    uint64_t flap_count;       \/* Count the flaps since boot. *\/$/;"	m	struct:cfm	file:
flap_count	lib/cfm.h	/^    uint64_t flap_count;$/;"	m	struct:cfm_status
flex_array	datapath/linux/compat/include/linux/flex_array.h	/^struct flex_array {$/;"	s
flex_array_alloc	datapath/linux/compat/include/linux/flex_array.h	69;"	d
flex_array_clear	datapath/linux/compat/include/linux/flex_array.h	87;"	d
flex_array_free	datapath/linux/compat/include/linux/flex_array.h	77;"	d
flex_array_free_parts	datapath/linux/compat/include/linux/flex_array.h	80;"	d
flex_array_get	datapath/linux/compat/include/linux/flex_array.h	90;"	d
flex_array_get_ptr	datapath/linux/compat/include/linux/flex_array.h	100;"	d
flex_array_part	datapath/linux/compat/flex_array.c	/^struct flex_array_part {$/;"	s	file:
flex_array_part	datapath/linux/flex_array.c	/^struct flex_array_part {$/;"	s	file:
flex_array_prealloc	datapath/linux/compat/include/linux/flex_array.h	73;"	d
flex_array_put	datapath/linux/compat/include/linux/flex_array.h	83;"	d
flex_array_put_ptr	datapath/linux/compat/include/linux/flex_array.h	96;"	d
flex_array_shrink	datapath/linux/compat/include/linux/flex_array.h	93;"	d
float_down	lib/heap.c	/^float_down(struct heap *heap, size_t i)$/;"	f	file:
float_to_int	python/ovs/db/parser.py	/^def float_to_int(x):$/;"	f
float_up	lib/heap.c	/^float_up(struct heap *heap, size_t i)$/;"	f	file:
float_up_or_down	lib/heap.c	/^float_up_or_down(struct heap *heap, size_t i)$/;"	f	file:
flood	ofproto/ofproto.h	/^    bool flood;                 \/* If true, flood multicast traffic *\/$/;"	m	struct:ofproto_mcast_snooping_port_settings
flood_packets	ofproto/ofproto-dpif-xlate.c	/^flood_packets(struct xlate_ctx *ctx, bool all)$/;"	f	file:
flood_reports	ofproto/ofproto.h	/^    bool flood_reports;         \/* If true, flood Reports traffic *\/$/;"	m	struct:ofproto_mcast_snooping_port_settings
flood_unreg	lib/mcast-snooping.h	/^    bool flood_unreg;$/;"	m	struct:mcast_snooping
flood_unreg	ofproto/ofproto.h	/^    bool flood_unreg;           \/* If true, flood unregistered packets to all$/;"	m	struct:ofproto_mcast_snooping_settings
flood_vlans	lib/mac-learning.h	/^    unsigned long *flood_vlans; \/* Bitmap of learning disabled VLANs. *\/$/;"	m	struct:mac_learning
flood_vlans	lib/vswitch-idl.h	/^	int64_t *flood_vlans;$/;"	m	struct:ovsrec_bridge
floodable	ofproto/ofproto-dpif-xlate.c	/^    bool floodable;                \/* No port has OFPUTIL_PC_NO_FLOOD set? *\/$/;"	m	struct:xbundle	file:
floodable	ofproto/ofproto-dpif.c	/^    bool floodable;          \/* True if no port has OFPUTIL_PC_NO_FLOOD set. *\/$/;"	m	struct:ofbundle	file:
flow	datapath-windows/ovsext/DpInternal.h	/^    OvsFlowInfo flow;$/;"	m	struct:OvsFlowDumpOutput
flow	lib/classifier-private.h	/^    const struct miniflow flow; \/* Matching rule. Mask is in the subtable. *\/$/;"	m	struct:cls_match	typeref:struct:cls_match::miniflow
flow	lib/dpctl.c	/^    struct flow flow;$/;"	m	struct:actions_for_flow	typeref:struct:actions_for_flow::flow	file:
flow	lib/dpif-netdev.c	/^    const struct flow flow;      \/* Unmasked flow that created this entry. *\/$/;"	m	struct:dp_netdev_flow	typeref:struct:dp_netdev_flow::flow	file:
flow	lib/dpif-netdev.c	/^    struct dp_netdev_flow *flow;$/;"	m	struct:emc_entry	typeref:struct:emc_entry::dp_netdev_flow	file:
flow	lib/dpif-netdev.c	/^    struct dp_netdev_flow *flow;$/;"	m	struct:packet_batch	typeref:struct:packet_batch::dp_netdev_flow	file:
flow	lib/dpif-netdev.c	/^    struct netdev_flow_key flow;  \/* Matching key. *\/$/;"	m	struct:dpcls_rule	typeref:struct:dpcls_rule::netdev_flow_key	file:
flow	lib/dpif-netlink.c	/^    struct dpif_netlink_flow flow;$/;"	m	struct:dpif_netlink_flow_dump_thread	typeref:struct:dpif_netlink_flow_dump_thread::dpif_netlink_flow	file:
flow	lib/dpif.h	/^    struct dpif_flow *flow;         \/* Resulting flow from datapath. *\/$/;"	m	struct:dpif_flow_get	typeref:struct:dpif_flow_get::dpif_flow
flow	lib/flow.h	/^struct flow {$/;"	s
flow	lib/match.h	/^            struct miniflow *flow;$/;"	m	struct:minimatch::__anon99::__anon100	typeref:struct:minimatch::__anon99::__anon100::miniflow
flow	lib/match.h	/^    struct flow flow;$/;"	m	struct:match	typeref:struct:match::flow
flow	lib/odp-util.h	/^    const struct flow *flow;$/;"	m	struct:odp_flow_key_parms	typeref:struct:odp_flow_key_parms::flow
flow	ofproto/ofproto-dpif-upcall.c	/^    const struct flow *flow;       \/* Parsed representation of the packet. *\/$/;"	m	struct:upcall	typeref:struct:upcall::flow	file:
flow	ofproto/ofproto-dpif-xlate.c	/^            struct flow *flow;$/;"	m	struct:xc_entry::__anon188::__anon190	typeref:struct:xc_entry::__anon188::__anon190::flow	file:
flow	ofproto/ofproto-dpif-xlate.c	/^            struct flow *flow;$/;"	m	struct:xc_entry::__anon188::__anon192	typeref:struct:xc_entry::__anon188::__anon192::flow	file:
flow	ofproto/ofproto-dpif-xlate.c	/^            struct flow *flow;$/;"	m	struct:xc_entry::__anon188::__anon194	typeref:struct:xc_entry::__anon188::__anon194::flow	file:
flow	ofproto/ofproto-dpif-xlate.h	/^    struct flow flow;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::flow
flow	ofproto/ofproto-dpif.c	/^    struct flow flow;$/;"	m	struct:trace_ctx	typeref:struct:trace_ctx::flow	file:
flowMiss	datapath-windows/ovsext/Actions.c	/^    UINT64 flowMiss;$/;"	m	struct:_OVS_ACTION_STATS	file:
flowSampleSeqNo	lib/sflow_api.h	/^    u_int32_t flowSampleSeqNo;$/;"	m	struct:_SFLSampler
flowTable	datapath-windows/ovsext/Switch.h	/^   PLIST_ENTRY             flowTable;       \/\/ Contains OvsFlows.$/;"	m	struct:_OVS_DATAPATH
flowType	lib/sflow.h	/^    SFLFlow_type flowType;$/;"	m	struct:_SFLFlow_sample_element
flowUserspace	datapath-windows/ovsext/Actions.c	/^    UINT64 flowUserspace;$/;"	m	struct:_OVS_ACTION_STATS	file:
flow_aggregate	utilities/ovs-dpctl-top	/^def flow_aggregate(fields_dict, stats_dict):$/;"	f
flow_be32ofs	lib/meta-flow.h	/^    int flow_be32ofs;  \/* Field's be32 offset in "struct flow", if prefix tree$/;"	m	struct:mf_field
flow_cache	datapath/flow_table.c	/^static struct kmem_cache *flow_cache;$/;"	v	typeref:struct:kmem_cache	file:
flow_cache	datapath/linux/flow_table.c	/^static struct kmem_cache *flow_cache;$/;"	v	typeref:struct:kmem_cache	file:
flow_cache	lib/dpif-netdev.c	/^    struct emc_cache flow_cache;$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::emc_cache	file:
flow_cmp_masked_key	datapath/flow_table.c	/^static bool flow_cmp_masked_key(const struct sw_flow *flow,$/;"	f	file:
flow_cmp_masked_key	datapath/linux/flow_table.c	/^static bool flow_cmp_masked_key(const struct sw_flow *flow,$/;"	f	file:
flow_compose	lib/flow.c	/^flow_compose(struct dp_packet *p, const struct flow *flow)$/;"	f
flow_compose_l4	lib/flow.c	/^flow_compose_l4(struct dp_packet *p, const struct flow *flow)$/;"	f	file:
flow_count	include/openflow/openflow-1.3.h	/^    ovs_be32  flow_count;        \/* Number of flows bound to meter. *\/$/;"	m	struct:ofp13_meter_stats
flow_count	include/openflow/openflow-common.h	/^    ovs_be32 flow_count;      \/* Number of flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
flow_count	lib/ofp-util.h	/^    uint32_t flow_count;$/;"	m	struct:ofputil_aggregate_stats
flow_count	lib/ofp-util.h	/^    uint32_t flow_count;$/;"	m	struct:ofputil_meter_stats
flow_count	tests/test-bundle.c	/^    size_t flow_count;$/;"	m	struct:slave	file:
flow_count_common_mpls_labels	lib/flow.c	/^flow_count_common_mpls_labels(const struct flow *a, int an,$/;"	f
flow_count_mpls_labels	lib/flow.c	/^flow_count_mpls_labels(const struct flow *flow, struct flow_wildcards *wc)$/;"	f
flow_del	lib/dpif.h	/^        struct dpif_flow_del flow_del;$/;"	m	union:dpif_op::__anon90	typeref:struct:dpif_op::__anon90::dpif_flow_del
flow_dump_create	lib/dpif-provider.h	/^    struct dpif_flow_dump *(*flow_dump_create)(const struct dpif *dpif,$/;"	m	struct:dpif_class	typeref:struct:dpif_class::flow_dump_create
flow_dump_destroy	lib/dpif-provider.h	/^    int (*flow_dump_destroy)(struct dpif_flow_dump *dump);$/;"	m	struct:dpif_class
flow_dump_next	lib/dpif-provider.h	/^    int (*flow_dump_next)(struct dpif_flow_dump_thread *thread,$/;"	m	struct:dpif_class
flow_dump_thread_create	lib/dpif-provider.h	/^    struct dpif_flow_dump_thread *(*flow_dump_thread_create)($/;"	m	struct:dpif_class	typeref:struct:dpif_class::flow_dump_thread_create
flow_dump_thread_destroy	lib/dpif-provider.h	/^    void (*flow_dump_thread_destroy)(struct dpif_flow_dump_thread *thread);$/;"	m	struct:dpif_class
flow_end_timestamp_usec	ofproto/ofproto-dpif-ipfix.c	/^    uint64_t flow_end_timestamp_usec;$/;"	m	struct:ipfix_flow_cache_entry	file:
flow_equal_except	lib/flow.c	/^flow_equal_except(const struct flow *a, const struct flow *b,$/;"	f
flow_event	utilities/ovs-dpctl-top	/^    def flow_event(self, fields_dict, stats_old_dict, stats_new_dict):$/;"	m	class:FlowDB
flow_exporter_map	ofproto/ofproto-dpif-ipfix.c	/^    struct hmap flow_exporter_map;  \/* dpif_ipfix_flow_exporter_map_node. *\/$/;"	m	struct:dpif_ipfix	typeref:struct:dpif_ipfix::hmap	file:
flow_extract	lib/flow.c	/^COVERAGE_DEFINE(flow_extract);$/;"	v
flow_extract	lib/flow.c	/^flow_extract(struct dp_packet *packet, struct flow *flow)$/;"	f
flow_flush	lib/dpif-provider.h	/^    int (*flow_flush)(struct dpif *dpif);$/;"	m	struct:dpif_class
flow_format	lib/flow.c	/^flow_format(struct ds *ds, const struct flow *flow)$/;"	f
flow_free	datapath/flow_table.c	/^static void flow_free(struct sw_flow *flow)$/;"	f	file:
flow_free	datapath/linux/flow_table.c	/^static void flow_free(struct sw_flow *flow)$/;"	f	file:
flow_get	lib/dpif.h	/^        struct dpif_flow_get flow_get;$/;"	m	union:dpif_op::__anon90	typeref:struct:dpif_op::__anon90::dpif_flow_get
flow_get_metadata	lib/flow.c	/^flow_get_metadata(const struct flow *flow, struct match *flow_metadata)$/;"	f
flow_has_vlan	lib/ofp-actions.h	/^    bool flow_has_vlan;         \/* VLAN present at action validation time? *\/$/;"	m	struct:ofpact_vlan_pcp
flow_has_vlan	lib/ofp-actions.h	/^    bool flow_has_vlan;         \/* VLAN present at action validation time? *\/$/;"	m	struct:ofpact_vlan_vid
flow_has_vlan	lib/ofp-actions.h	/^    bool flow_has_vlan;   \/* VLAN present at action validation time. *\/$/;"	m	struct:ofpact_set_field
flow_hash	datapath-windows/ovsext/DpInternal.h	/^                uint16_t flow_hash;$/;"	m	struct:OvsIPv4TunnelKey::__anon7::__anon8::__anon9
flow_hash	datapath/flow_table.c	/^static u32 flow_hash(const struct sw_flow_key *key,$/;"	f	file:
flow_hash	datapath/linux/flow_table.c	/^static u32 flow_hash(const struct sw_flow_key *key,$/;"	f	file:
flow_hash_5tuple	lib/flow.c	/^flow_hash_5tuple(const struct flow *flow, uint32_t basis)$/;"	f
flow_hash_fields	lib/flow.c	/^flow_hash_fields(const struct flow *flow, enum nx_hash_fields fields,$/;"	f
flow_hash_fields_to_str	lib/flow.c	/^flow_hash_fields_to_str(enum nx_hash_fields fields)$/;"	f
flow_hash_fields_valid	lib/flow.c	/^flow_hash_fields_valid(enum nx_hash_fields fields)$/;"	f
flow_hash_in_minimask	lib/classifier-private.h	/^flow_hash_in_minimask(const struct flow *flow, const struct minimask *mask,$/;"	f
flow_hash_in_minimask_range	lib/classifier-private.h	/^flow_hash_in_minimask_range(const struct flow *flow,$/;"	f
flow_hash_in_wildcards	lib/flow.c	/^flow_hash_in_wildcards(const struct flow *flow,$/;"	f
flow_hash_symmetric_l3l4	lib/flow.c	/^flow_hash_symmetric_l3l4(const struct flow *flow, uint32_t basis,$/;"	f
flow_hash_symmetric_l4	lib/flow.c	/^flow_hash_symmetric_l4(const struct flow *flow, uint32_t basis)$/;"	f
flow_in_port	lib/packets.h	/^union flow_in_port {$/;"	u
flow_ip_proto	lib/ofp-actions.h	/^    uint8_t  flow_ip_proto;     \/* IP proto from corresponding match, or 0 *\/$/;"	m	struct:ofpact_l4_port
flow_key	ofproto/ofproto-dpif-ipfix.c	/^    struct ipfix_flow_key flow_key;$/;"	m	struct:ipfix_flow_cache_entry	typeref:struct:ipfix_flow_cache_entry::ipfix_flow_key	file:
flow_key_insert	datapath/flow_table.c	/^static void flow_key_insert(struct flow_table *table, struct sw_flow *flow)$/;"	f	file:
flow_key_insert	datapath/linux/flow_table.c	/^static void flow_key_insert(struct flow_table *table, struct sw_flow *flow)$/;"	f	file:
flow_key_map_node	ofproto/ofproto-dpif-ipfix.c	/^    struct hmap_node flow_key_map_node;$/;"	m	struct:ipfix_flow_cache_entry	typeref:struct:ipfix_flow_cache_entry::hmap_node	file:
flow_key_msg_part	ofproto/ofproto-dpif-ipfix.c	/^    uint64_t flow_key_msg_part[DIV_ROUND_UP(MAX_FLOW_KEY_LEN, 8)];$/;"	m	struct:ipfix_flow_key	file:
flow_key_msg_part_size	ofproto/ofproto-dpif-ipfix.c	/^    size_t flow_key_msg_part_size;$/;"	m	struct:ipfix_flow_key	file:
flow_key_start	datapath/flow_table.c	/^static int flow_key_start(const struct sw_flow_key *key)$/;"	f	file:
flow_key_start	datapath/linux/flow_table.c	/^static int flow_key_start(const struct sw_flow_key *key)$/;"	f	file:
flow_keys	datapath/linux/compat/include/net/flow_keys.h	/^struct flow_keys {$/;"	s
flow_lbl	datapath-windows/ovsext/NetProto.h	/^    UINT8    flow_lbl[3];$/;"	m	struct:IPv6Hdr
flow_limit	lib/vswitch-idl.h	/^	int64_t *flow_limit;$/;"	m	struct:ovsrec_flow_table
flow_limit	ofproto/ofproto-dpif-upcall.c	/^    atomic_uint flow_limit;            \/* Datapath flow hard limit. *\/$/;"	m	struct:udpif	file:
flow_line_add	utilities/ovs-dpctl-top	/^    def flow_line_add(self, line):$/;"	m	class:FlowDB
flow_line_compound_parse	utilities/ovs-dpctl-top	/^def flow_line_compound_parse(compound):$/;"	f
flow_line_iter	utilities/ovs-dpctl-top	/^def flow_line_iter(line):$/;"	f
flow_line_split	utilities/ovs-dpctl-top	/^def flow_line_split(line):$/;"	f
flow_lookup	datapath/flow_table.c	/^static struct sw_flow *flow_lookup(struct flow_table *tbl,$/;"	f	file:
flow_lookup	datapath/linux/flow_table.c	/^static struct sw_flow *flow_lookup(struct flow_table *tbl,$/;"	f	file:
flow_mask_find	datapath/flow_table.c	/^static struct sw_flow_mask *flow_mask_find(const struct flow_table *tbl,$/;"	f	file:
flow_mask_find	datapath/linux/flow_table.c	/^static struct sw_flow_mask *flow_mask_find(const struct flow_table *tbl,$/;"	f	file:
flow_mask_hash_fields	lib/flow.c	/^flow_mask_hash_fields(const struct flow *flow, struct flow_wildcards *wc,$/;"	f
flow_mask_insert	datapath/flow_table.c	/^static int flow_mask_insert(struct flow_table *tbl, struct sw_flow *flow,$/;"	f	file:
flow_mask_insert	datapath/linux/flow_table.c	/^static int flow_mask_insert(struct flow_table *tbl, struct sw_flow *flow,$/;"	f	file:
flow_mask_remove	datapath/flow_table.c	/^static void flow_mask_remove(struct flow_table *tbl, struct sw_flow_mask *mask)$/;"	f	file:
flow_mask_remove	datapath/linux/flow_table.c	/^static void flow_mask_remove(struct flow_table *tbl, struct sw_flow_mask *mask)$/;"	f	file:
flow_message_log_level	lib/dpif.c	/^flow_message_log_level(int error)$/;"	f	file:
flow_metadata	lib/ofp-util.h	/^    struct match flow_metadata;$/;"	m	struct:ofputil_packet_in	typeref:struct:ofputil_packet_in::match
flow_mod_init	ofproto/ofproto.c	/^flow_mod_init(struct ofputil_flow_mod *fm,$/;"	f	file:
flow_mod_requester	ofproto/ofproto.c	/^struct flow_mod_requester {$/;"	s	file:
flow_mutex	lib/dpif-netdev.c	/^    struct ovs_mutex flow_mutex;$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::ovs_mutex	file:
flow_policy	datapath/datapath.c	/^static const struct nla_policy flow_policy[OVS_FLOW_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
flow_policy	datapath/datapath.c	/^static const struct nla_policy flow_policy[];$/;"	v	typeref:struct:nla_policy	file:
flow_policy	datapath/linux/datapath.c	/^static const struct nla_policy flow_policy[OVS_FLOW_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
flow_policy	datapath/linux/datapath.c	/^static const struct nla_policy flow_policy[];$/;"	v	typeref:struct:nla_policy	file:
flow_pop_mpls	lib/flow.c	/^flow_pop_mpls(struct flow *flow, int n, ovs_be16 eth_type,$/;"	f
flow_pos	lib/dpif-netdev.c	/^    struct cmap_position flow_pos;$/;"	m	struct:dpif_netdev_flow_dump	typeref:struct:dpif_netdev_flow_dump::cmap_position	file:
flow_print	lib/flow.c	/^flow_print(FILE *stream, const struct flow *flow)$/;"	f
flow_push_mpls	lib/flow.c	/^flow_push_mpls(struct flow *flow, int n, ovs_be16 mpls_eth_type,$/;"	f
flow_put	lib/dpif.h	/^        struct dpif_flow_put flow_put;$/;"	m	union:dpif_op::__anon90	typeref:struct:dpif_op::__anon90::dpif_flow_put
flow_random_hash_fields	lib/flow.c	/^flow_random_hash_fields(struct flow *flow)$/;"	f
flow_removed_mask	include/openflow/nicira-ext.h	/^    ovs_be32 flow_removed_mask[2]; \/* Bitmasks of OFPPR_* values. *\/$/;"	m	struct:nx_async_config
flow_removed_mask	include/openflow/openflow-1.3.h	/^    ovs_be32 flow_removed_mask[2];\/* Bitmasks of OFPRR_* values. *\/$/;"	m	struct:ofp13_async_config
flow_restore_complete	utilities/ovs-ctl	/^flow_restore_complete () {$/;"	f
flow_restore_complete	utilities/ovs-ctl.in	/^flow_restore_complete () {$/;"	f
flow_restore_wait	ofproto/ofproto.c	/^static bool flow_restore_wait = true;$/;"	v	file:
flow_restore_wait	utilities/ovs-ctl	/^flow_restore_wait () {$/;"	f
flow_restore_wait	utilities/ovs-ctl.in	/^flow_restore_wait () {$/;"	f
flow_sample	lib/odp-util.h	/^    } flow_sample;$/;"	m	union:user_action_cookie	typeref:struct:user_action_cookie::__anon125
flow_segment_u64s	lib/flow.c	/^const uint8_t flow_segment_u64s[4] = {$/;"	v
flow_segments	lib/classifier.h	/^    uint8_t flow_segments[CLS_MAX_INDICES]; \/* Flow segment boundaries to use$/;"	m	struct:classifier
flow_seq	lib/netflow.h	/^    ovs_be32 flow_seq;             \/* Number of flows since sending$/;"	m	struct:netflow_v5_header
flow_set_dl_vlan	lib/flow.c	/^flow_set_dl_vlan(struct flow *flow, ovs_be16 vid)$/;"	f
flow_set_mpls_bos	lib/flow.c	/^flow_set_mpls_bos(struct flow *flow, int idx, uint8_t bos)$/;"	f
flow_set_mpls_label	lib/flow.c	/^flow_set_mpls_label(struct flow *flow, int idx, ovs_be32 label)$/;"	f
flow_set_mpls_lse	lib/flow.c	/^flow_set_mpls_lse(struct flow *flow, int idx, ovs_be32 lse)$/;"	f
flow_set_mpls_lse_ttl	lib/packets.h	/^flow_set_mpls_lse_ttl(ovs_be32 *mpls_lse, uint8_t ttl)$/;"	f
flow_set_mpls_tc	lib/flow.c	/^flow_set_mpls_tc(struct flow *flow, int idx, uint8_t tc)$/;"	f
flow_set_mpls_ttl	lib/flow.c	/^flow_set_mpls_ttl(struct flow *flow, int idx, uint8_t ttl)$/;"	f
flow_set_vlan_pcp	lib/flow.c	/^flow_set_vlan_pcp(struct flow *flow, uint8_t pcp)$/;"	f
flow_set_vlan_vid	lib/flow.c	/^flow_set_vlan_vid(struct flow *flow, ovs_be16 vid)$/;"	f
flow_start_timestamp_usec	ofproto/ofproto-dpif-ipfix.c	/^    uint64_t flow_start_timestamp_usec;$/;"	m	struct:ipfix_flow_cache_entry	file:
flow_stats	datapath/flow.h	/^struct flow_stats {$/;"	s
flow_stats_ds	ofproto/ofproto.c	/^flow_stats_ds(struct rule *rule, struct ds *results)$/;"	f	file:
flow_stats_get	utilities/ovs-dpctl-top	/^    def flow_stats_get(self):$/;"	m	class:FlowDB
flow_str	utilities/ovs-pipegen.py	/^def flow_str(stage, match, action, priority=32768):$/;"	f
flow_table	datapath/flow.h	/^	} flow_table, ufid_table;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::__anon41
flow_table	datapath/flow_table.h	/^struct flow_table {$/;"	s
flow_table_copy_flows	datapath/flow_table.c	/^static void flow_table_copy_flows(struct table_instance *old,$/;"	f	file:
flow_table_copy_flows	datapath/linux/flow_table.c	/^static void flow_table_copy_flows(struct table_instance *old,$/;"	f	file:
flow_tbl_destroy_rcu_cb	datapath/flow_table.c	/^static void flow_tbl_destroy_rcu_cb(struct rcu_head *rcu)$/;"	f	file:
flow_tbl_destroy_rcu_cb	datapath/linux/flow_table.c	/^static void flow_tbl_destroy_rcu_cb(struct rcu_head *rcu)$/;"	f	file:
flow_tnl	lib/packets.h	/^struct flow_tnl {$/;"	s
flow_tnl_copy__	lib/packets.h	/^flow_tnl_copy__(struct flow_tnl *dst, const struct flow_tnl *src)$/;"	f
flow_tnl_equal	lib/packets.h	/^flow_tnl_equal(const struct flow_tnl *a, const struct flow_tnl *b)$/;"	f
flow_tnl_size	lib/packets.h	/^flow_tnl_size(const struct flow_tnl *src)$/;"	f
flow_to_string	lib/flow.c	/^flow_to_string(const struct flow *flow)$/;"	f
flow_top_command	utilities/ovs-dpctl-top	/^def flow_top_command(stdscr, render, flow_db):$/;"	f
flow_tun_flag_to_string	lib/flow.c	/^flow_tun_flag_to_string(uint32_t flags)$/;"	f
flow_ufid_insert	datapath/flow_table.c	/^static void flow_ufid_insert(struct flow_table *table, struct sw_flow *flow)$/;"	f	file:
flow_ufid_insert	datapath/linux/flow_table.c	/^static void flow_ufid_insert(struct flow_table *table, struct sw_flow *flow)$/;"	f	file:
flow_unwildcard_tp_ports	lib/flow.c	/^flow_unwildcard_tp_ports(const struct flow *flow, struct flow_wildcards *wc)$/;"	f
flow_wc_map	lib/flow.c	/^flow_wc_map(const struct flow *flow, struct flowmap *map)$/;"	f
flow_wildcards_and	lib/flow.c	/^flow_wildcards_and(struct flow_wildcards *dst,$/;"	f
flow_wildcards_clear_non_packet_fields	lib/flow.c	/^flow_wildcards_clear_non_packet_fields(struct flow_wildcards *wc)$/;"	f
flow_wildcards_equal	lib/flow.c	/^flow_wildcards_equal(const struct flow_wildcards *a,$/;"	f
flow_wildcards_fold_minimask	lib/classifier-private.h	/^flow_wildcards_fold_minimask(struct flow_wildcards *wc,$/;"	f
flow_wildcards_fold_minimask_in_map	lib/classifier-private.h	/^flow_wildcards_fold_minimask_in_map(struct flow_wildcards *wc,$/;"	f
flow_wildcards_has_extra	lib/flow.c	/^flow_wildcards_has_extra(const struct flow_wildcards *a,$/;"	f
flow_wildcards_hash	lib/flow.c	/^flow_wildcards_hash(const struct flow_wildcards *wc, uint32_t basis)$/;"	f
flow_wildcards_init_catchall	lib/flow.c	/^flow_wildcards_init_catchall(struct flow_wildcards *wc)$/;"	f
flow_wildcards_init_for_packet	lib/flow.c	/^void flow_wildcards_init_for_packet(struct flow_wildcards *wc,$/;"	f
flow_wildcards_is_catchall	lib/flow.c	/^flow_wildcards_is_catchall(const struct flow_wildcards *wc)$/;"	f
flow_wildcards_or	lib/flow.c	/^flow_wildcards_or(struct flow_wildcards *dst,$/;"	f
flow_wildcards_set_reg_mask	lib/flow.c	/^flow_wildcards_set_reg_mask(struct flow_wildcards *wc, int idx, uint32_t mask)$/;"	f
flow_wildcards_set_xreg_mask	lib/flow.c	/^flow_wildcards_set_xreg_mask(struct flow_wildcards *wc, int idx, uint64_t mask)$/;"	f
flow_zero_wildcards	lib/flow.c	/^flow_zero_wildcards(struct flow *flow, const struct flow_wildcards *wildcards)$/;"	f
flows	lib/match.h	/^        struct miniflow *flows[2];$/;"	m	union:minimatch::__anon99	typeref:struct:minimatch::__anon99::miniflow
flows	lib/netdev-linux.c	/^    uint32_t flows;$/;"	m	struct:fqcodel	file:
flows	ofproto/netflow.c	/^    struct hmap flows;            \/* Contains 'netflow_flows'. *\/$/;"	m	struct:netflow	typeref:struct:netflow::hmap	file:
flows_read	utilities/ovs-dpctl-top	/^def flows_read(ihdl, flow_db):$/;"	f
flows_script	utilities/ovs-dpctl-top	/^def flows_script(args):$/;"	f
flows_top	utilities/ovs-dpctl-top	/^def flows_top(args):$/;"	f
flush	ofproto/ofproto-dpif.c	/^flush(struct ofproto *ofproto_)$/;"	f	file:
flush	ofproto/ofproto-provider.h	/^    void (*flush)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
flush_cache	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^flush_cache = False$/;"	v
flush_help_string	tests/ovstest.c	/^flush_help_string(struct ds *ds)$/;"	f	file:
flush_tx	lib/netdev-dpdk.c	/^    bool flush_tx;                 \/* Set to true to flush queue everytime *\/$/;"	m	struct:dpdk_tx_queue	file:
flushed_cbsets	lib/ovs-rcu.c	/^static struct guarded_list flushed_cbsets;$/;"	v	typeref:struct:guarded_list	file:
flushed_cbsets_seq	lib/ovs-rcu.c	/^static struct seq *flushed_cbsets_seq;$/;"	v	typeref:struct:seq	file:
fm	ofproto/ofproto-dpif-xlate.c	/^            struct ofputil_flow_mod *fm;$/;"	m	struct:xc_entry::__anon188::__anon193	typeref:struct:xc_entry::__anon188::__anon193::ofputil_flow_mod	file:
fm	ofproto/ofproto-provider.h	/^    struct ofputil_flow_mod fm;$/;"	m	struct:ofproto_flow_mod	typeref:struct:ofproto_flow_mod::ofputil_flow_mod
fmix64	lib/hash.c	/^fmix64(uint64_t k)$/;"	f	file:
fmt_avg	utilities/ovs-dpctl-top	/^def fmt_avg(obj, width):$/;"	f
fmt_bytes	utilities/ovs-dpctl-top	/^def fmt_bytes(obj, width):$/;"	f
fmt_count	utilities/ovs-dpctl-top	/^def fmt_count(obj, width):$/;"	f
fmt_field	utilities/ovs-dpctl-top	/^def fmt_field(obj, width):$/;"	f
fmt_packet	utilities/ovs-dpctl-top	/^def fmt_packet(obj, width):$/;"	f
fn	utilities/ovs-check-dead-ifs	/^    fn = "\/sys\/class\/net\/%s\/ifindex" % ifname$/;"	v
fold32	datapath-windows/ovsext/Checksum.c	43;"	d	file:
fold64	datapath-windows/ovsext/Checksum.c	37;"	d	file:
follow_symlinks	lib/util.c	/^follow_symlinks(const char *filename)$/;"	f
for_each_possible_cpu	datapath/linux/compat/include/linux/cpumask.h	8;"	d
for_each_txn_row	ovsdb/transaction.c	/^for_each_txn_row(struct ovsdb_txn *txn,$/;"	f	file:
forbid_forking	lib/ovs-thread.c	/^forbid_forking(const char *reason)$/;"	f
forceId	build-aux/check-structs	/^def forceId():$/;"	f
forceId	build-aux/extract-ofp-errors	/^def forceId():$/;"	f
forceInteger	build-aux/check-structs	/^def forceInteger():$/;"	f
forceInteger	build-aux/extract-ofp-errors	/^def forceInteger():$/;"	f
forceMatch	build-aux/check-structs	/^def forceMatch(t):$/;"	f
forceMatch	build-aux/extract-ofp-errors	/^def forceMatch(t):$/;"	f
force_protocol_version	ofproto/ofproto.h	/^    enum rstp_force_protocol_version force_protocol_version;$/;"	m	struct:ofproto_rstp_settings	typeref:enum:ofproto_rstp_settings::rstp_force_protocol_version
force_reconnect	python/ovs/db/idl.py	/^    def force_reconnect(self):$/;"	m	class:Idl
force_reconnect	python/ovs/jsonrpc.py	/^    def force_reconnect(self):$/;"	m	class:Session
force_reconnect	python/ovs/reconnect.py	/^    def force_reconnect(self, now):$/;"	m	class:Reconnect
force_reload_kmod	utilities/ovs-ctl	/^force_reload_kmod () {$/;"	f
force_reload_kmod	utilities/ovs-ctl.in	/^force_reload_kmod () {$/;"	f
force_reload_kmod	xenserver/etc_init.d_openvswitch	/^force_reload_kmod () {$/;"	f
force_stop	debian/openvswitch-ipsec.init	/^force_stop() {$/;"	f
force_stop	debian/openvswitch-testcontroller.init	/^force_stop() {$/;"	f
fork	python/ovs/fatal_signal.py	/^def fork():$/;"	f
fork_and_clean_up	lib/daemon-unix.c	/^fork_and_clean_up(void)$/;"	f	file:
fork_and_wait_for_startup	lib/daemon-unix.c	/^fork_and_wait_for_startup(int *fdp, pid_t *child_pid)$/;"	f	file:
fork_notify_startup	lib/daemon-unix.c	/^fork_notify_startup(int fd)$/;"	f	file:
format	include/openflow/nicira-ext.h	/^    ovs_be32 format;            \/* One of NXFF_*. *\/$/;"	m	struct:nx_set_flow_format
format	include/openflow/nicira-ext.h	/^    ovs_be32 format;            \/* One of NXPIF_*. *\/$/;"	m	struct:nx_set_packet_in_format
format	lib/table.h	/^    enum table_format format;   \/* TF_*. *\/$/;"	m	struct:table_style	typeref:enum:table_style::table_format
format	ovn/lib/expr.c	/^        enum lex_format format; \/* From the constant's lex_token. *\/$/;"	m	struct:expr_constant::__anon199	typeref:enum:expr_constant::__anon199::lex_format	file:
format	ovn/lib/lex.h	/^    enum lex_format format;     \/* LEX_T_INTEGER, LEX_T_MASKED_INTEGER only. *\/$/;"	m	struct:lex_token	typeref:enum:lex_token::lex_format
format	utilities/ovs-dpctl-top	/^    def format(self, flow_db):$/;"	m	class:Render
format_BUNDLE	lib/ofp-actions.c	/^format_BUNDLE(const struct ofpact_bundle *a, struct ds *s)$/;"	f	file:
format_CLEAR_ACTIONS	lib/ofp-actions.c	/^format_CLEAR_ACTIONS(const struct ofpact_null *a OVS_UNUSED, struct ds *s)$/;"	f	file:
format_CONJUNCTION	lib/ofp-actions.c	/^format_CONJUNCTION(const struct ofpact_conjunction *oc, struct ds *s)$/;"	f	file:
format_CONTROLLER	lib/ofp-actions.c	/^format_CONTROLLER(const struct ofpact_controller *a, struct ds *s)$/;"	f	file:
format_CT	lib/ofp-actions.c	/^format_CT(const struct ofpact_conntrack *a, struct ds *s)$/;"	f	file:
format_DEBUG_RECIRC	lib/ofp-actions.c	/^format_DEBUG_RECIRC(const struct ofpact_null *a OVS_UNUSED, struct ds *s)$/;"	f	file:
format_DEC_MPLS_TTL	lib/ofp-actions.c	/^format_DEC_MPLS_TTL(const struct ofpact_null *a OVS_UNUSED, struct ds *s)$/;"	f	file:
format_DEC_TTL	lib/ofp-actions.c	/^format_DEC_TTL(const struct ofpact_cnt_ids *a, struct ds *s)$/;"	f	file:
format_ENQUEUE	lib/ofp-actions.c	/^format_ENQUEUE(const struct ofpact_enqueue *a, struct ds *s)$/;"	f	file:
format_EXIT	lib/ofp-actions.c	/^format_EXIT(const struct ofpact_null *a OVS_UNUSED, struct ds *s)$/;"	f	file:
format_FIN_TIMEOUT	lib/ofp-actions.c	/^format_FIN_TIMEOUT(const struct ofpact_fin_timeout *a, struct ds *s)$/;"	f	file:
format_GOTO_TABLE	lib/ofp-actions.c	/^format_GOTO_TABLE(const struct ofpact_goto_table *a, struct ds *s)$/;"	f	file:
format_GROUP	lib/ofp-actions.c	/^format_GROUP(const struct ofpact_group *a, struct ds *s)$/;"	f	file:
format_LEARN	lib/ofp-actions.c	/^format_LEARN(const struct ofpact_learn *a, struct ds *s)$/;"	f	file:
format_METER	lib/ofp-actions.c	/^format_METER(const struct ofpact_meter *a, struct ds *s)$/;"	f	file:
format_MULTIPATH	lib/ofp-actions.c	/^format_MULTIPATH(const struct ofpact_multipath *a, struct ds *s)$/;"	f	file:
format_NOTE	lib/ofp-actions.c	/^format_NOTE(const struct ofpact_note *a, struct ds *s)$/;"	f	file:
format_OUTPUT	lib/ofp-actions.c	/^format_OUTPUT(const struct ofpact_output *a, struct ds *s)$/;"	f	file:
format_OUTPUT_REG	lib/ofp-actions.c	/^format_OUTPUT_REG(const struct ofpact_output_reg *a, struct ds *s)$/;"	f	file:
format_POP_MPLS	lib/ofp-actions.c	/^format_POP_MPLS(const struct ofpact_pop_mpls *a, struct ds *s)$/;"	f	file:
format_POP_QUEUE	lib/ofp-actions.c	/^format_POP_QUEUE(const struct ofpact_null *a OVS_UNUSED, struct ds *s)$/;"	f	file:
format_PUSH_MPLS	lib/ofp-actions.c	/^format_PUSH_MPLS(const struct ofpact_push_mpls *a, struct ds *s)$/;"	f	file:
format_PUSH_VLAN	lib/ofp-actions.c	/^format_PUSH_VLAN(const struct ofpact_null *a OVS_UNUSED, struct ds *s)$/;"	f	file:
format_REG_MOVE	lib/ofp-actions.c	/^format_REG_MOVE(const struct ofpact_reg_move *a, struct ds *s)$/;"	f	file:
format_RESUBMIT	lib/ofp-actions.c	/^format_RESUBMIT(const struct ofpact_resubmit *a, struct ds *s)$/;"	f	file:
format_SAMPLE	lib/ofp-actions.c	/^format_SAMPLE(const struct ofpact_sample *a, struct ds *s)$/;"	f	file:
format_SET_ETH_DST	lib/ofp-actions.c	/^format_SET_ETH_DST(const struct ofpact_mac *a, struct ds *s)$/;"	f	file:
format_SET_ETH_SRC	lib/ofp-actions.c	/^format_SET_ETH_SRC(const struct ofpact_mac *a, struct ds *s)$/;"	f	file:
format_SET_FIELD	lib/ofp-actions.c	/^format_SET_FIELD(const struct ofpact_set_field *a, struct ds *s)$/;"	f	file:
format_SET_ICMP_ID	lib/ofp-actions.c	/^format_SET_ICMP_ID(const struct ofpact_l4_port *a, struct ds *s)$/;"	f	file:
format_SET_IPV4_DST	lib/ofp-actions.c	/^format_SET_IPV4_DST(const struct ofpact_ipv4 *a, struct ds *s)$/;"	f	file:
format_SET_IPV4_SRC	lib/ofp-actions.c	/^format_SET_IPV4_SRC(const struct ofpact_ipv4 *a, struct ds *s)$/;"	f	file:
format_SET_IP_DSCP	lib/ofp-actions.c	/^format_SET_IP_DSCP(const struct ofpact_dscp *a, struct ds *s)$/;"	f	file:
format_SET_IP_ECN	lib/ofp-actions.c	/^format_SET_IP_ECN(const struct ofpact_ecn *a, struct ds *s)$/;"	f	file:
format_SET_IP_TTL	lib/ofp-actions.c	/^format_SET_IP_TTL(const struct ofpact_ip_ttl *a, struct ds *s)$/;"	f	file:
format_SET_L4_DST_PORT	lib/ofp-actions.c	/^format_SET_L4_DST_PORT(const struct ofpact_l4_port *a, struct ds *s)$/;"	f	file:
format_SET_L4_SRC_PORT	lib/ofp-actions.c	/^format_SET_L4_SRC_PORT(const struct ofpact_l4_port *a, struct ds *s)$/;"	f	file:
format_SET_MPLS_LABEL	lib/ofp-actions.c	/^format_SET_MPLS_LABEL(const struct ofpact_mpls_label *a, struct ds *s)$/;"	f	file:
format_SET_MPLS_TC	lib/ofp-actions.c	/^format_SET_MPLS_TC(const struct ofpact_mpls_tc *a, struct ds *s)$/;"	f	file:
format_SET_MPLS_TTL	lib/ofp-actions.c	/^format_SET_MPLS_TTL(const struct ofpact_mpls_ttl *a, struct ds *s)$/;"	f	file:
format_SET_QUEUE	lib/ofp-actions.c	/^format_SET_QUEUE(const struct ofpact_queue *a, struct ds *s)$/;"	f	file:
format_SET_TUNNEL	lib/ofp-actions.c	/^format_SET_TUNNEL(const struct ofpact_tunnel *a, struct ds *s)$/;"	f	file:
format_SET_VLAN_PCP	lib/ofp-actions.c	/^format_SET_VLAN_PCP(const struct ofpact_vlan_pcp *a, struct ds *s)$/;"	f	file:
format_SET_VLAN_VID	lib/ofp-actions.c	/^format_SET_VLAN_VID(const struct ofpact_vlan_vid *a, struct ds *s)$/;"	f	file:
format_STACK_POP	lib/ofp-actions.c	/^format_STACK_POP(const struct ofpact_stack *a, struct ds *s)$/;"	f	file:
format_STACK_PUSH	lib/ofp-actions.c	/^format_STACK_PUSH(const struct ofpact_stack *a, struct ds *s)$/;"	f	file:
format_STRIP_VLAN	lib/ofp-actions.c	/^format_STRIP_VLAN(const struct ofpact_null *a, struct ds *s)$/;"	f	file:
format_UNROLL_XLATE	lib/ofp-actions.c	/^format_UNROLL_XLATE(const struct ofpact_unroll_xlate *a OVS_UNUSED,$/;"	f	file:
format_WRITE_ACTIONS	lib/ofp-actions.c	/^format_WRITE_ACTIONS(const struct ofpact_nest *a, struct ds *s)$/;"	f	file:
format_WRITE_METADATA	lib/ofp-actions.c	/^format_WRITE_METADATA(const struct ofpact_metadata *a, struct ds *s)$/;"	f	file:
format_alg	lib/ofp-actions.c	/^format_alg(int port, struct ds *s)$/;"	f	file:
format_be16	lib/odp-util.c	/^format_be16(struct ds *ds, const char *name, ovs_be16 key,$/;"	f	file:
format_be16_masked	lib/match.c	/^format_be16_masked(struct ds *s, const char *name,$/;"	f	file:
format_be16x	lib/odp-util.c	/^format_be16x(struct ds *ds, const char *name, ovs_be16 key,$/;"	f	file:
format_be32_masked	lib/match.c	/^format_be32_masked(struct ds *s, const char *name,$/;"	f	file:
format_be64	lib/odp-util.c	/^format_be64(struct ds *ds, const char *name, ovs_be64 key,$/;"	f	file:
format_be64_masked	lib/match.c	/^format_be64_masked(struct ds *s, const char *name,$/;"	f	file:
format_ct_label_masked	lib/match.c	/^format_ct_label_masked(struct ds *s, const ovs_u128 *key, const ovs_u128 *mask)$/;"	f	file:
format_dpif_flow	lib/dpctl.c	/^format_dpif_flow(struct ds *ds, const struct dpif_flow *f, struct hmap *ports,$/;"	f	file:
format_eth	lib/odp-util.c	/^format_eth(struct ds *ds, const char *name, const struct eth_addr key,$/;"	f	file:
format_eth_masked	lib/match.c	/^format_eth_masked(struct ds *s, const char *name,$/;"	f	file:
format_flags	lib/flow.c	/^format_flags(struct ds *ds, const char *(*bit_to_string)(uint32_t),$/;"	f
format_flags_masked	lib/flow.c	/^format_flags_masked(struct ds *ds, const char *name,$/;"	f
format_flow_tunnel	lib/match.c	/^format_flow_tunnel(struct ds *s, const struct match *match)$/;"	f	file:
format_frag	lib/odp-util.c	/^format_frag(struct ds *ds, const char *name, uint8_t key,$/;"	f	file:
format_generic_odp_action	lib/odp-util.c	/^format_generic_odp_action(struct ds *ds, const struct nlattr *a)$/;"	f	file:
format_generic_odp_key	lib/odp-util.c	/^format_generic_odp_key(const struct nlattr *a, struct ds *ds)$/;"	f	file:
format_geneve_opts	lib/odp-util.c	/^format_geneve_opts(const struct geneve_opt *opt,$/;"	f	file:
format_ip_netmask	lib/match.c	/^format_ip_netmask(struct ds *s, const char *name, ovs_be32 ip,$/;"	f	file:
format_ipv4	lib/odp-util.c	/^format_ipv4(struct ds *ds, const char *name, ovs_be32 key,$/;"	f	file:
format_ipv6	lib/odp-util.c	/^format_ipv6(struct ds *ds, const char *name, const ovs_be32 key_[4],$/;"	f	file:
format_ipv6_addr	lib/packets.c	/^format_ipv6_addr(char *addr_str, const struct in6_addr *addr)$/;"	f
format_ipv6_label	lib/odp-util.c	/^format_ipv6_label(struct ds *ds, const char *name, ovs_be32 key,$/;"	f	file:
format_ipv6_netmask	lib/match.c	/^format_ipv6_netmask(struct ds *s, const char *name,$/;"	f	file:
format_log_message	lib/vlog.c	/^format_log_message(const struct vlog_module *module, enum vlog_level level,$/;"	f	file:
format_mpls	lib/odp-util.c	/^format_mpls(struct ds *ds, const struct ovs_key_mpls *mpls_key,$/;"	f	file:
format_mpls_lse	lib/odp-util.c	/^format_mpls_lse(struct ds *ds, ovs_be32 mpls_lse)$/;"	f	file:
format_nxm_field_name	lib/nx-match.c	/^format_nxm_field_name(struct ds *s, uint64_t header)$/;"	f	file:
format_odp_action	lib/odp-util.c	/^format_odp_action(struct ds *ds, const struct nlattr *a)$/;"	f	file:
format_odp_actions	lib/odp-util.c	/^format_odp_actions(struct ds *ds, const struct nlattr *actions,$/;"	f
format_odp_conntrack_action	lib/odp-util.c	/^format_odp_conntrack_action(struct ds *ds, const struct nlattr *attr)$/;"	f	file:
format_odp_hash_action	lib/odp-util.c	/^format_odp_hash_action(struct ds *ds, const struct ovs_action_hash *hash_act)$/;"	f	file:
format_odp_key_attr	lib/odp-util.c	/^format_odp_key_attr(const struct nlattr *a, const struct nlattr *ma,$/;"	f	file:
format_odp_recirc_action	lib/odp-util.c	/^format_odp_recirc_action(struct ds *ds, uint32_t recirc_id)$/;"	f	file:
format_odp_sample_action	lib/odp-util.c	/^format_odp_sample_action(struct ds *ds, const struct nlattr *attr)$/;"	f	file:
format_odp_tnl_push_action	lib/odp-util.c	/^format_odp_tnl_push_action(struct ds *ds, const struct nlattr *attr)$/;"	f	file:
format_odp_tnl_push_header	lib/odp-util.c	/^format_odp_tnl_push_header(struct ds *ds, struct ovs_action_push_tnl *data)$/;"	f	file:
format_odp_tun_attr	lib/odp-util.c	/^format_odp_tun_attr(const struct nlattr *attr, const struct nlattr *mask_attr,$/;"	f	file:
format_odp_tun_geneve	lib/odp-util.c	/^format_odp_tun_geneve(const struct nlattr *attr,$/;"	f	file:
format_odp_tun_vxlan_opt	lib/odp-util.c	/^format_odp_tun_vxlan_opt(const struct nlattr *attr,$/;"	f	file:
format_odp_userspace_action	lib/odp-util.c	/^format_odp_userspace_action(struct ds *ds, const struct nlattr *attr)$/;"	f	file:
format_tun_flags	lib/odp-util.c	/^format_tun_flags(struct ds *ds, const char *name, uint16_t key,$/;"	f	file:
format_u128	lib/odp-util.c	/^format_u128(struct ds *ds, const ovs_u128 *key, const ovs_u128 *mask,$/;"	f	file:
format_u8u	lib/odp-util.c	/^format_u8u(struct ds *ds, const char *name, uint8_t key,$/;"	f	file:
format_u8x	lib/odp-util.c	/^format_u8x(struct ds *ds, const char *name, uint8_t key,$/;"	f	file:
format_udp_tnl_push_header	lib/odp-util.c	/^format_udp_tnl_push_header(struct ds *ds, const struct ip_header *ip)$/;"	f	file:
format_uint16_masked	lib/match.c	/^format_uint16_masked(struct ds *s, const char *name,$/;"	f	file:
format_uint32_masked	lib/match.c	/^format_uint32_masked(struct ds *s, const char *name,$/;"	f	file:
format_unknown_key	lib/odp-util.c	/^format_unknown_key(struct ds *ds, const struct nlattr *a,$/;"	f	file:
format_vlan_tci	lib/odp-util.c	/^format_vlan_tci(struct ds *ds, ovs_be16 tci, ovs_be16 mask, bool verbose)$/;"	f	file:
forward_bpdu	ofproto/ofproto-dpif-xlate.c	/^    bool forward_bpdu;            \/* Bridge forwards STP BPDUs? *\/$/;"	m	struct:xbridge	file:
forward_bpdu	ofproto/ofproto-provider.h	/^    bool forward_bpdu;          \/* Option to allow forwarding of BPDU frames$/;"	m	struct:ofproto
forward_bpdu_changed	ofproto/ofproto-dpif.c	/^forward_bpdu_changed(struct ofproto *ofproto_)$/;"	f	file:
forward_bpdu_changed	ofproto/ofproto-provider.h	/^    void (*forward_bpdu_changed)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
forward_delay	lib/rstp-common.h	/^    uint16_t forward_delay;$/;"	m	struct:rstp_times
forward_delay	lib/stp.c	/^    int forward_delay;              \/* 8.5.3.6: Delay between state changes. *\/$/;"	m	struct:stp	file:
forward_delay_timer	lib/stp.c	/^    struct stp_timer forward_delay_timer; \/* 8.5.6.2: State change timer. *\/$/;"	m	struct:stp_port	typeref:struct:stp_port::stp_timer	file:
forwarding_if_rx	lib/bfd.c	/^    bool forwarding_if_rx;$/;"	m	struct:bfd	file:
forwarding_if_rx_detect_time	lib/bfd.c	/^    long long int forwarding_if_rx_detect_time;$/;"	m	struct:bfd	file:
forwarding_override	lib/bfd.c	/^    int forwarding_override;      \/* Manual override of 'forwarding' status. *\/$/;"	m	struct:bfd	file:
found_numa_and_core	lib/ovs-numa.c	/^static bool found_numa_and_core;$/;"	v	file:
fpv_accept	tests/test-vconn.c	/^fpv_accept(struct fake_pvconn *fpv)$/;"	f	file:
fpv_close	tests/test-vconn.c	/^fpv_close(struct fake_pvconn *fpv)$/;"	f	file:
fpv_create	tests/test-vconn.c	/^fpv_create(const char *type, struct fake_pvconn *fpv)$/;"	f	file:
fpv_destroy	tests/test-vconn.c	/^fpv_destroy(struct fake_pvconn *fpv)$/;"	f	file:
fqcodel	lib/netdev-linux.c	/^struct fqcodel {$/;"	s	file:
fqcodel_get__	lib/netdev-linux.c	/^fqcodel_get__(const struct netdev *netdev_)$/;"	f	file:
fqcodel_install__	lib/netdev-linux.c	/^fqcodel_install__(struct netdev *netdev_, uint32_t target, uint32_t limit,$/;"	f	file:
fqcodel_parse_qdisc_details__	lib/netdev-linux.c	/^fqcodel_parse_qdisc_details__(struct netdev *netdev OVS_UNUSED,$/;"	f	file:
fqcodel_parse_tca_options__	lib/netdev-linux.c	/^fqcodel_parse_tca_options__(struct nlattr *nl_options, struct fqcodel *fqcodel)$/;"	f	file:
fqcodel_qdisc_get	lib/netdev-linux.c	/^fqcodel_qdisc_get(const struct netdev *netdev, struct smap *details)$/;"	f	file:
fqcodel_qdisc_set	lib/netdev-linux.c	/^fqcodel_qdisc_set(struct netdev *netdev, const struct smap *details)$/;"	f	file:
fqcodel_setup_qdisc__	lib/netdev-linux.c	/^fqcodel_setup_qdisc__(struct netdev *netdev, uint32_t target, uint32_t limit,$/;"	f	file:
fqcodel_tc_destroy	lib/netdev-linux.c	/^fqcodel_tc_destroy(struct tc *tc)$/;"	f	file:
fqcodel_tc_install	lib/netdev-linux.c	/^fqcodel_tc_install(struct netdev *netdev, const struct smap *details)$/;"	f	file:
fqcodel_tc_load	lib/netdev-linux.c	/^fqcodel_tc_load(struct netdev *netdev, struct ofpbuf *nlmsg)$/;"	f	file:
frag	datapath/flow.h	/^			u8     frag;	\/* One of OVS_FRAG_TYPE_*. *\/$/;"	m	struct:sw_flow_key::__anon29::__anon31
frag	lib/packets.h	/^        } frag;$/;"	m	union:icmp_header::__anon147	typeref:struct:icmp_header::__anon147::__anon149
fragNBLCount	datapath-windows/ovsext/BufferMgmt.h	/^    LONG          fragNBLCount;$/;"	m	struct:_OVS_NBL_POOL
frag_handling	lib/meta-flow.c	/^struct frag_handling {$/;"	s	file:
frag_handling	ofproto/ofproto-provider.h	/^    enum ofp_config_flags frag_handling; \/* One of OFPC_*.  *\/$/;"	m	struct:ofproto	typeref:enum:ofproto::ofp_config_flags
frag_hash	datapath/linux/compat/stt.c	/^	struct flex_array *frag_hash;$/;"	m	struct:stt_percpu	typeref:struct:stt_percpu::flex_array	file:
frag_hash	datapath/linux/stt.c	/^	struct flex_array *frag_hash;$/;"	m	struct:stt_percpu	typeref:struct:stt_percpu::flex_array	file:
frag_lru	datapath/linux/compat/stt.c	/^	struct list_head frag_lru;$/;"	m	struct:stt_percpu	typeref:struct:stt_percpu::list_head	file:
frag_lru	datapath/linux/stt.c	/^	struct list_head frag_lru;$/;"	m	struct:stt_percpu	typeref:struct:stt_percpu::list_head	file:
frag_mem_used	datapath/linux/compat/stt.c	/^	unsigned int frag_mem_used;$/;"	m	struct:stt_percpu	file:
frag_mem_used	datapath/linux/stt.c	/^	unsigned int frag_mem_used;$/;"	m	struct:stt_percpu	file:
frag_off	datapath-windows/ovsext/NetProto.h	/^   UINT16   frag_off;$/;"	m	struct:IPHdr
frag_skb_cb	datapath/linux/compat/stt.c	/^struct frag_skb_cb {$/;"	s	file:
frag_skb_cb	datapath/linux/stt.c	/^struct frag_skb_cb {$/;"	s	file:
frame	lib/lldp/lldpd-structs.h	/^    unsigned char frame[];$/;"	m	struct:lldpd_frame
frame_length	lib/sflow.h	/^    u_int32_t frame_length;               \/* Original length of packet before sampling *\/$/;"	m	struct:_SFLSampled_header
frames	lib/backtrace.h	/^    uintptr_t frames[BACKTRACE_MAX_FRAMES];$/;"	m	struct:backtrace
freeFn	lib/sflow_api.h	/^    freeFn_t freeFn;$/;"	m	struct:_SFLAgent
freeFn_t	lib/sflow_api.h	/^typedef int (*freeFn_t)(void *magic,                  \/* callback to free space on heap *\/$/;"	t
free_buckets	datapath/flow_table.c	/^static void free_buckets(struct flex_array *buckets)$/;"	f	file:
free_buckets	datapath/linux/flow_table.c	/^static void free_buckets(struct flex_array *buckets)$/;"	f	file:
free_cacheline	lib/util.c	/^free_cacheline(void *p)$/;"	f
free_conjunctive_matches	lib/classifier.c	/^free_conjunctive_matches(struct hmap *matches,$/;"	f	file:
free_data	lib/ovsdb-data.c	/^free_data(enum ovsdb_atomic_type type,$/;"	f	file:
free_disk_space	utilities/bugtool/ovs-bugtool	/^        free_disk_space = get_free_disk_space(output_file) * 90 \/ 100$/;"	v
free_disk_space	utilities/bugtool/ovs-bugtool	/^free_disk_space = None$/;"	v
free_dpdk_buf	lib/netdev-dpdk.c	/^free_dpdk_buf(struct dp_packet *p)$/;"	f
free_dpdk_buf	lib/netdev-dpdk.h	/^free_dpdk_buf(struct dp_packet *buf OVS_UNUSED)$/;"	f
free_frag	datapath/linux/compat/stt.c	/^static void free_frag(struct stt_percpu *stt_percpu,$/;"	f	file:
free_frag	datapath/linux/stt.c	/^static void free_frag(struct stt_percpu *stt_percpu,$/;"	f	file:
free_key_value	lib/ovsdb-data.c	/^free_key_value(const struct ovsdb_type *type,$/;"	f	file:
free_monitor_row_data	ovsdb/monitor.c	/^free_monitor_row_data(const struct ovsdb_monitor_table *mt,$/;"	f	file:
free_poll_loop	lib/poll-loop.c	/^free_poll_loop(void *loop_)$/;"	f	file:
free_poll_nodes	lib/poll-loop.c	/^free_poll_nodes(struct poll_loop *loop)$/;"	f	file:
free_port_rcu	datapath/linux/vport-netdev.c	/^static void free_port_rcu(struct rcu_head *rcu)$/;"	f	file:
free_port_rcu	datapath/vport-netdev.c	/^static void free_port_rcu(struct rcu_head *rcu)$/;"	f	file:
free_registered_recs	vswitchd/bridge.c	/^free_registered_recs(void)$/;"	f	file:
free_rule	tests/test-classifier.c	/^free_rule(struct test_rule *rule)$/;"	f	file:
free_rule	tests/test-ovn.c	/^free_rule(struct test_rule *test_rule)$/;"	f	file:
free_schema	lib/ovsdb-idl.c	/^free_schema(struct shash *schema)$/;"	f	file:
free_short_name	python/ovs/socket_util.py	/^def free_short_name(short_name):$/;"	f
free_slot	lib/fat-rwlock.c	/^free_slot(struct fat_rwlock_slot *slot)$/;"	f	file:
free_sockaddr_un	lib/socket-util-unix.c	/^free_sockaddr_un(int dirfd, const char *linkname)$/;"	f	file:
free_vport_rcu	datapath/linux/vport.c	/^static void free_vport_rcu(struct rcu_head *rcu)$/;"	f	file:
free_vport_rcu	datapath/vport.c	/^static void free_vport_rcu(struct rcu_head *rcu)$/;"	f	file:
frm1	datapath-windows/ovsext/resource.h	1281;"	d
frm2	datapath-windows/ovsext/resource.h	1282;"	d
frm3	datapath-windows/ovsext/resource.h	1283;"	d
frm4	datapath-windows/ovsext/resource.h	1284;"	d
from_file	python/ovs/json.py	/^def from_file(name):$/;"	f
from_json	python/ovs/db/data.py	/^    def from_json(base, json, symtab=None):$/;"	m	class:Atom
from_json	python/ovs/db/data.py	/^    def from_json(type_, json, symtab=None):$/;"	m	class:Datum
from_json	python/ovs/db/idl.py	/^    def from_json(cls, idl, table, uuid, row_json):$/;"	m	class:Row
from_json	python/ovs/db/schema.py	/^    def from_json(json):$/;"	m	class:DbSchema
from_json	python/ovs/db/schema.py	/^    def from_json(json):$/;"	m	class:IdlSchema
from_json	python/ovs/db/schema.py	/^    def from_json(json, name):$/;"	m	class:ColumnSchema
from_json	python/ovs/db/schema.py	/^    def from_json(json, name):$/;"	m	class:TableSchema
from_json	python/ovs/db/types.py	/^    def from_json(json):$/;"	m	class:AtomicType
from_json	python/ovs/db/types.py	/^    def from_json(json):$/;"	m	class:BaseType
from_json	python/ovs/db/types.py	/^    def from_json(json):$/;"	m	class:Type
from_json	python/ovs/jsonrpc.py	/^    def from_json(json):$/;"	m	class:Message
from_json	python/ovs/ovsuuid.py	/^def from_json(json, symtab=None):$/;"	f
from_python	python/ovs/db/data.py	/^    def from_python(base, value):$/;"	m	class:Atom
from_python	python/ovs/db/data.py	/^    def from_python(type_, value, row_to_uuid):$/;"	m	class:Datum
from_stream	python/ovs/json.py	/^def from_stream(stream):$/;"	f
from_string	python/ovs/db/types.py	/^    def from_string(s):$/;"	m	class:AtomicType
from_string	python/ovs/json.py	/^def from_string(s):$/;"	f
from_string	python/ovs/ovsuuid.py	/^def from_string(s):$/;"	f
from_txn	ovsdb/monitor.c	/^    uint64_t from_txn;$/;"	m	struct:ovsdb_monitor_json_cache_node	file:
fsSeqNo	tests/test-sflow.c	/^    uint32_t fsSeqNo;$/;"	m	struct:sflow_xdr	file:
fseeko	lib/stdio.c	/^fseeko(FILE *stream, off_t offset, int whence)$/;"	f
fsync	include/windows/unistd.h	22;"	d
fsync_parent_dir	lib/socket-util.c	/^fsync_parent_dir(const char *file_name)$/;"	f
fte	utilities/ovs-ofctl.c	/^struct fte {$/;"	s	file:
fte_free	utilities/ovs-ofctl.c	/^fte_free(struct fte *fte)$/;"	f	file:
fte_free_all	utilities/ovs-ofctl.c	/^fte_free_all(struct classifier *cls)$/;"	f	file:
fte_from_cls_rule	utilities/ovs-ofctl.c	/^fte_from_cls_rule(const struct cls_rule *cls_rule)$/;"	f	file:
fte_insert	utilities/ovs-ofctl.c	/^fte_insert(struct classifier *cls, const struct match *match,$/;"	f	file:
fte_make_flow_mod	utilities/ovs-ofctl.c	/^fte_make_flow_mod(const struct fte *fte, int index, uint16_t command,$/;"	f	file:
fte_version	utilities/ovs-ofctl.c	/^struct fte_version {$/;"	s	file:
fte_version_equals	utilities/ovs-ofctl.c	/^fte_version_equals(const struct fte_version *a, const struct fte_version *b)$/;"	f	file:
fte_version_format	utilities/ovs-ofctl.c	/^fte_version_format(const struct fte *fte, int index, struct ds *s)$/;"	f	file:
fte_version_free	utilities/ovs-ofctl.c	/^fte_version_free(struct fte_version *version)$/;"	f	file:
ftruncate	lib/util.c	/^ftruncate(int fd, off_t length)$/;"	f
full_name	lib/dpif-provider.h	/^    char *full_name;$/;"	m	struct:dpif
full_pri	tests/test-heap.c	/^    uint32_t full_pri;$/;"	m	struct:element	file:
func_append	build-aux/ltmain.sh	/^func_append ()$/;"	f
func_append	config.status	/^func_append ()\\$/;"	f
func_append	configure	/^func_append ()\\$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_append_quoted	build-aux/ltmain.sh	/^func_append_quoted ()$/;"	f
func_append_quoted	config.status	/^func_append_quoted ()\\$/;"	f
func_append_quoted	configure	/^func_append_quoted ()\\$/;"	f
func_append_quoted	libtool	/^func_append_quoted ()$/;"	f
func_arith	build-aux/ltmain.sh	/^func_arith ()$/;"	f
func_arith	config.status	/^func_arith ()\\$/;"	f
func_arith	configure	/^func_arith ()\\$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_basename	build-aux/ltmain.sh	/^func_basename ()$/;"	f
func_basename	config.status	/^func_basename ()\\$/;"	f
func_basename	configure	/^func_basename ()\\$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_check_version_match	build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_cl_dashL	build-aux/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	build-aux/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	build-aux/compile	/^func_cl_wrapper ()$/;"	f
func_config	build-aux/ltmain.sh	/^func_config ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	build-aux/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	build-aux/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	build-aux/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	build-aux/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_check	libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	build-aux/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	build-aux/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	build-aux/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	build-aux/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	build-aux/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	build-aux/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	libtool	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	build-aux/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_check	libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	build-aux/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	build-aux/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	build-aux/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	build-aux/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	build-aux/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	build-aux/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	build-aux/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	libtool	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	build-aux/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	build-aux/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	build-aux/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	build-aux/ltmain.sh	/^func_cygpath ()$/;"	f
func_cygpath	libtool	/^func_cygpath ()$/;"	f
func_dirname	build-aux/ltmain.sh	/^func_dirname ()$/;"	f
func_dirname	config.status	/^func_dirname ()\\$/;"	f
func_dirname	configure	/^func_dirname ()\\$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	build-aux/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_echo	build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo_all	build-aux/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_echo_all	libtool	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_enable_tag	build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_error	build-aux/ltmain.sh	/^func_error ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_exec_program	build-aux/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program	libtool	/^func_exec_program ()$/;"	f
func_exec_program_core	build-aux/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_exec_program_core	libtool	/^func_exec_program_core ()$/;"	f
func_execute_cmds	build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_archives	build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_fallback_echo	build-aux/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libtool	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_error	build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_help	build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_features	build-aux/ltmain.sh	/^func_features ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_file_conv	build-aux/compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_grep	build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_help	build-aux/ltmain.sh	/^func_help ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_infer_tag	build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	build-aux/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_len	build-aux/ltmain.sh	/^func_len ()$/;"	f
func_len	config.status	/^func_len ()\\$/;"	f
func_len	configure	/^func_len ()\\$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_lo2o	build-aux/ltmain.sh	/^func_lo2o ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()\\$/;"	f
func_lo2o	configure	/^func_lo2o ()\\$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_lt_dump_args	build-aux/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	libtool	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_mkdir_p	build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mktempdir	build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mode_compile	build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_execute	build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_finish	build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_help	build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_install	build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_link	build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_uninstall	build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	build-aux/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_normal_abspath	libtool	/^func_normal_abspath ()$/;"	f
func_output	utilities/bugtool/ovs-bugtool	/^def func_output(cap, label, func):$/;"	f
func_parse_lt_options	build-aux/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	libtool	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_relative_path	build-aux/ltmain.sh	/^func_relative_path ()$/;"	f
func_relative_path	libtool	/^func_relative_path ()$/;"	f
func_replace_sysroot	build-aux/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	libtool	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	build-aux/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	libtool	/^func_resolve_sysroot ()$/;"	f
func_show_eval	build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval_locale	build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_source	build-aux/ltmain.sh	/^func_source ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_split_long_opt	build-aux/ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_long_opt	config.status	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	configure	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	libtool	/^func_split_long_opt ()$/;"	f
func_split_short_opt	build-aux/ltmain.sh	/^func_split_short_opt ()$/;"	f
func_split_short_opt	config.status	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	configure	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	libtool	/^func_split_short_opt ()$/;"	f
func_stripname	build-aux/ltmain.sh	/^func_stripname ()$/;"	f
func_stripname	config.status	/^func_stripname ()\\$/;"	f
func_stripname	configure	/^func_stripname ()\\$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_to_host_file	build-aux/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_file	libtool	/^func_to_host_file ()$/;"	f
func_to_host_path	build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_tool_file	build-aux/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_to_tool_file	libtool	/^func_to_tool_file ()$/;"	f
func_tr_sh	build-aux/ltmain.sh	/^func_tr_sh ()$/;"	f
func_tr_sh	libtool	/^func_tr_sh ()$/;"	f
func_usage	build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_verbose	build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_version	build-aux/ltmain.sh	/^func_version ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_warning	build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_win32_import_lib_p	build-aux/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_write_libtool_object	build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_xform	build-aux/ltmain.sh	/^func_xform ()$/;"	f
func_xform	config.status	/^func_xform ()\\$/;"	f
func_xform	configure	/^func_xform ()\\$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
function	lib/ovs-rcu.c	/^    void (*function)(void *aux);$/;"	m	struct:ovsrcu_cb	file:
function	ovsdb/condition.h	/^    enum ovsdb_function function;$/;"	m	struct:ovsdb_clause	typeref:enum:ovsdb_clause::ovsdb_function
function	tests/test-lockfile.c	/^    void (*function)(void);$/;"	m	struct:test	file:
fwdDetail	datapath-windows/ovsext/Actions.c	/^    PNDIS_SWITCH_FORWARDING_DETAIL_NET_BUFFER_LIST_INFO fwdDetail;$/;"	m	struct:OvsForwardingContext	file:
fwdList	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        fwdList;$/;"	m	struct:_OVS_IPFORWARD_ENTRY
fwdList	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        fwdList;$/;"	m	struct:_OVS_IPNEIGH_ENTRY
fwdReq	datapath-windows/ovsext/IpHelper.h	/^        OVS_FWD_REQUEST_INFO    fwdReq;$/;"	m	union:_OVS_IP_HELPER_REQUEST::__anon21
fwd_delay	ofproto/ofproto.h	/^    uint16_t fwd_delay;$/;"	m	struct:ofproto_stp_settings
gCalloutIdV4	datapath-windows/ovsext/TunnelFilter.c	/^static UINT32                    gCalloutIdV4 = 0;$/;"	v	file:
gDeviceObject	datapath-windows/ovsext/TunnelFilter.c	/^static PDEVICE_OBJECT            gDeviceObject = NULL;$/;"	v	file:
gEngineHandle	datapath-windows/ovsext/TunnelFilter.c	/^static HANDLE                    gEngineHandle = NULL;$/;"	v	file:
gOvsCtrlLock	datapath-windows/ovsext/Datapath.c	/^PNDIS_SPIN_LOCK gOvsCtrlLock;$/;"	v
gOvsDeviceHandle	datapath-windows/ovsext/Datapath.c	/^NDIS_HANDLE gOvsDeviceHandle;$/;"	v
gOvsDeviceObject	datapath-windows/ovsext/Datapath.c	/^PDEVICE_OBJECT gOvsDeviceObject;$/;"	v
gOvsExtDriverHandle	datapath-windows/ovsext/Driver.c	/^NDIS_HANDLE gOvsExtDriverHandle;$/;"	v
gOvsExtDriverObject	datapath-windows/ovsext/Driver.c	/^NDIS_HANDLE gOvsExtDriverObject;$/;"	v
gOvsInAttach	datapath-windows/ovsext/Switch.c	/^LONG volatile gOvsInAttach;$/;"	v
gOvsSwitchContext	datapath-windows/ovsext/Switch.c	/^POVS_SWITCH_CONTEXT gOvsSwitchContext;$/;"	v
gOvsSwitchContextRefCount	datapath-windows/ovsext/Switch.c	/^volatile LONG      gOvsSwitchContextRefCount = 0;$/;"	v
gTunnelInitBfeHandle	datapath-windows/ovsext/TunnelFilter.c	/^static HANDLE                    gTunnelInitBfeHandle = NULL;$/;"	v	file:
gTunnelProviderBfeHandle	datapath-windows/ovsext/TunnelFilter.c	/^static HANDLE                    gTunnelProviderBfeHandle = NULL;$/;"	v	file:
gTunnelThreadCtx	datapath-windows/ovsext/TunnelFilter.c	/^static OVS_TUNFLT_THREAD_CONTEXT gTunnelThreadCtx[OVS_TUNFLT_MAX_THREADS] = { 0 };$/;"	v	file:
g_chassis	lib/lldp/lldpd.h	/^    struct ovs_list     g_chassis; \/* Contains "struct lldp_chassis". *\/$/;"	m	struct:lldpd	typeref:struct:lldpd::ovs_list
g_config	lib/lldp/lldpd.h	/^    struct lldpd_config g_config;$/;"	m	struct:lldpd	typeref:struct:lldpd::lldpd_config
g_hardware	lib/lldp/lldpd.h	/^    struct ovs_list     g_hardware; \/* Contains "struct lldpd_hardware". *\/$/;"	m	struct:lldpd	typeref:struct:lldpd::ovs_list
g_last_portid	lib/netlink-socket.c	/^static uint32_t g_last_portid = 0;$/;"	v	file:
g_lastrid	lib/lldp/lldpd.h	/^    int                 g_lastrid;$/;"	m	struct:lldpd
g_protocols	lib/lldp/lldpd.h	/^    struct protocol     *g_protocols;$/;"	m	struct:lldpd	typeref:struct:lldpd::protocol
gateway	lib/packets.h	/^        ovs_16aligned_be32 gateway;$/;"	m	union:icmp_header::__anon147
gateway	lib/sflow.h	/^    SFLExtended_gateway gateway;$/;"	m	union:_SFLFlow_type
gateway	ovn/controller-vtep/gateway.c	/^VLOG_DEFINE_THIS_MODULE(gateway);$/;"	v
gateway	ovn/northd/ovn-northd.c	/^    ovs_be32 gateway;$/;"	m	struct:ovn_datapath	file:
gatewayEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t gatewayEncodingLength(SFLExtended_gateway *gw) {$/;"	f	file:
gateway_cleanup	ovn/controller-vtep/gateway.c	/^gateway_cleanup(struct controller_vtep_ctx *ctx)$/;"	f
gateway_run	ovn/controller-vtep/gateway.c	/^gateway_run(struct controller_vtep_ctx *ctx)$/;"	f
gbp	datapath/linux/compat/include/net/vxlan.h	/^	u32		gbp;$/;"	m	struct:vxlan_metadata
gbp	datapath/vport-vxlan.h	/^	__u32 gbp;$/;"	m	struct:ovs_vxlan_opts
gbp_flags	lib/packets.h	/^    uint8_t  gbp_flags;$/;"	m	struct:flow_tnl
gbp_id	lib/packets.h	/^    ovs_be16 gbp_id;$/;"	m	struct:flow_tnl
gc_schema	tests/testsuite	/^gc_schema () {$/;"	f
gcd	lib/getopt_long.c	/^gcd(int a, int b)$/;"	f	file:
generate_all_wildcard_mask	lib/odp-util.c	/^generate_all_wildcard_mask(const struct attr_len_tbl tbl[], int max,$/;"	f	file:
generate_discriminator	lib/bfd.c	/^generate_discriminator(void)$/;"	f	file:
generation_id	include/openflow/openflow-1.2.h	/^    ovs_be64 generation_id;   \/* Master Election Generation Id *\/$/;"	m	struct:ofp12_role_request
generation_id	include/openflow/openflow-1.4.h	/^    ovs_be64 generation_id;     \/* Master Election Generation Id *\/$/;"	m	struct:ofp14_role_status
generation_id	lib/ofp-util.h	/^    uint64_t generation_id;$/;"	m	struct:ofputil_role_request
generation_id	lib/ofp-util.h	/^    uint64_t generation_id;$/;"	m	struct:ofputil_role_status
generic	lib/sflow.h	/^    SFLIf_counters generic;$/;"	m	union:_SFLCounters_type
genev_tun_opt_from_nlattr	datapath/flow_netlink.c	/^static int genev_tun_opt_from_nlattr(const struct nlattr *a,$/;"	f	file:
genev_tun_opt_from_nlattr	datapath/linux/flow_netlink.c	/^static int genev_tun_opt_from_nlattr(const struct nlattr *a,$/;"	f	file:
geneve_build_header	datapath/linux/compat/geneve.c	/^static void geneve_build_header(struct genevehdr *geneveh,$/;"	f	file:
geneve_build_header	datapath/linux/geneve.c	/^static void geneve_build_header(struct genevehdr *geneveh,$/;"	f	file:
geneve_create_sock	datapath/linux/compat/geneve.c	/^static struct socket *geneve_create_sock(struct net *net, bool ipv6,$/;"	f	file:
geneve_create_sock	datapath/linux/geneve.c	/^static struct socket *geneve_create_sock(struct net *net, bool ipv6,$/;"	f	file:
geneve_get_egress_tun_info	datapath/linux/vport-geneve.c	/^static int geneve_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
geneve_get_egress_tun_info	datapath/vport-geneve.c	/^static int geneve_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
geneve_get_name	datapath/linux/vport-geneve.c	/^static const char *geneve_get_name(const struct vport *vport)$/;"	f	file:
geneve_get_name	datapath/vport-geneve.c	/^static const char *geneve_get_name(const struct vport *vport)$/;"	f	file:
geneve_get_options	datapath/linux/vport-geneve.c	/^static int geneve_get_options(const struct vport *vport,$/;"	f	file:
geneve_get_options	datapath/vport-geneve.c	/^static int geneve_get_options(const struct vport *vport,$/;"	f	file:
geneve_hdr	datapath/linux/compat/include/net/geneve.h	/^static inline struct genevehdr *geneve_hdr(const struct sk_buff *skb)$/;"	f
geneve_opt	datapath/linux/compat/include/net/geneve.h	/^struct geneve_opt {$/;"	s
geneve_opt	lib/geneve.h	/^struct geneve_opt {$/;"	s
geneve_port	datapath/linux/vport-geneve.c	/^struct geneve_port {$/;"	s	file:
geneve_port	datapath/vport-geneve.c	/^struct geneve_port {$/;"	s	file:
geneve_rcv	datapath/linux/vport-geneve.c	/^static void geneve_rcv(struct geneve_sock *gs, struct sk_buff *skb)$/;"	f	file:
geneve_rcv	datapath/vport-geneve.c	/^static void geneve_rcv(struct geneve_sock *gs, struct sk_buff *skb)$/;"	f	file:
geneve_rcv_t	datapath/linux/compat/include/net/geneve.h	/^typedef void (geneve_rcv_t)(struct geneve_sock *gs, struct sk_buff *skb);$/;"	t
geneve_scan	lib/odp-util.c	/^struct geneve_scan {$/;"	s	file:
geneve_sock	datapath/linux/compat/include/net/geneve.h	/^struct geneve_sock {$/;"	s
geneve_sock_add	datapath/linux/compat/include/net/geneve.h	86;"	d
geneve_sock_release	datapath/linux/compat/include/net/geneve.h	91;"	d
geneve_socket_create	datapath/linux/compat/geneve.c	/^static struct geneve_sock *geneve_socket_create(struct net *net, __be16 port,$/;"	f	file:
geneve_socket_create	datapath/linux/geneve.c	/^static struct geneve_sock *geneve_socket_create(struct net *net, __be16 port,$/;"	f	file:
geneve_tnl_create	datapath/linux/vport-geneve.c	/^static struct vport *geneve_tnl_create(const struct vport_parms *parms)$/;"	f	file:
geneve_tnl_create	datapath/vport-geneve.c	/^static struct vport *geneve_tnl_create(const struct vport_parms *parms)$/;"	f	file:
geneve_tnl_destroy	datapath/linux/vport-geneve.c	/^static void geneve_tnl_destroy(struct vport *vport)$/;"	f	file:
geneve_tnl_destroy	datapath/vport-geneve.c	/^static void geneve_tnl_destroy(struct vport *vport)$/;"	f	file:
geneve_tnl_send	datapath/linux/vport-geneve.c	/^static int geneve_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
geneve_tnl_send	datapath/vport-geneve.c	/^static int geneve_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
geneve_to_attr	lib/odp-util.c	/^geneve_to_attr(struct ofpbuf *a, const void *data_)$/;"	f	file:
geneve_udp_encap_recv	datapath/linux/compat/geneve.c	/^static int geneve_udp_encap_recv(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
geneve_udp_encap_recv	datapath/linux/geneve.c	/^static int geneve_udp_encap_recv(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
geneve_vport	datapath/linux/vport-geneve.c	/^static inline struct geneve_port *geneve_vport(const struct vport *vport)$/;"	f	file:
geneve_vport	datapath/vport-geneve.c	/^static inline struct geneve_port *geneve_vport(const struct vport *vport)$/;"	f	file:
geneve_xmit_skb	datapath/linux/compat/include/net/geneve.h	94;"	d
genevehdr	datapath/linux/compat/include/net/geneve.h	/^struct genevehdr {$/;"	s
genevehdr	lib/geneve.h	/^struct genevehdr {$/;"	s
genlMsg	datapath-windows/ovsext/Netlink/Netlink.h	/^    GENL_MSG_HDR genlMsg;$/;"	m	struct:_OVS_MESSAGE
genl_families	lib/netlink-socket.c	/^static struct hmap genl_families = HMAP_INITIALIZER(&genl_families);$/;"	v	typeref:struct:hmap	file:
genl_family	datapath/linux/compat/include/net/genetlink.h	46;"	d
genl_family	lib/netlink-socket.c	/^struct genl_family {$/;"	s	file:
genl_family_to_name	lib/netlink-socket.c	/^genl_family_to_name(uint16_t id)$/;"	f	file:
genl_has_listeners	datapath/linux/compat/include/net/genetlink.h	/^static inline int genl_has_listeners(struct genl_family *family,$/;"	f
genl_has_listeners	datapath/linux/compat/include/net/genetlink.h	132;"	d
genl_notify	datapath/linux/compat/genetlink-openvswitch.c	6;"	d	file:
genl_notify	datapath/linux/compat/include/net/genetlink.h	47;"	d
genl_notify	datapath/linux/genetlink-openvswitch.c	6;"	d	file:
genl_register_family	datapath/linux/compat/include/net/genetlink.h	90;"	d
genl_set_err	datapath/linux/compat/include/net/genetlink.h	/^static inline int genl_set_err(struct genl_family *family, struct net *net,$/;"	f
genl_set_err	datapath/linux/compat/include/net/genetlink.h	66;"	d
genl_unregister_family	datapath/linux/compat/include/net/genetlink.h	64;"	d
genlmsg_multicast_netns	datapath/linux/compat/include/net/genetlink.h	/^static inline int genlmsg_multicast_netns(struct genl_family *family,$/;"	f
genlmsg_multicast_netns	datapath/linux/compat/include/net/genetlink.h	78;"	d
genlmsg_new_unicast	datapath/linux/compat/include/net/genetlink.h	/^static inline struct sk_buff *genlmsg_new_unicast(size_t payload,$/;"	f
genlmsg_parse	datapath/linux/compat/include/net/genetlink.h	/^static inline int genlmsg_parse(const struct nlmsghdr *nlh,$/;"	f
genlmsg_put	datapath/linux/compat/include/net/genetlink.h	58;"	d
genlmsghdr	lib/netlink-protocol.h	/^struct genlmsghdr {$/;"	s
get	python/ovs/db/data.py	/^    def get(self, key, default=None):$/;"	m	class:Datum
get	python/ovs/db/parser.py	/^    def get(self, name, types):$/;"	m	class:Parser
getBoolAttr	utilities/bugtool/ovs-bugtool	/^    def getBoolAttr(el, attr, default=False):$/;"	f	function:load_plugins
getController	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def getController(self):$/;"	m	class:VSwitchControllerDialogue
getCountersFn	lib/sflow_api.h	/^    getCountersFn_t getCountersFn;$/;"	m	struct:_SFLPoller
getCountersFn_t	lib/sflow_api.h	/^typedef void (*getCountersFn_t)(void *magic,                   \/* callback to get counters *\/$/;"	t
getDOMImplementation	utilities/bugtool/ovs-bugtool	/^from xml.dom.minidom import parse, getDOMImplementation$/;"	i
getDOMImplementation	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^from xml.dom.minidom import getDOMImplementation$/;"	i
getFlags	datapath-windows/ovsext/DpInternal.h	/^    uint32_t getFlags;           \/* Information to get in addition to keys. *\/$/;"	m	struct:OvsFlowGetInput
getFlags	datapath-windows/ovsext/DpInternal.h	/^    uint32_t getFlags;      \/* Information to get in addition to keys. *\/$/;"	m	struct:OvsFlowDumpInput
getLine	build-aux/extract-ofp-errors	/^def getLine():$/;"	f
getResults	python/ovstest/tcp.py	/^    def getResults(self):$/;"	m	class:TcpListenerFactory
getResults	python/ovstest/tcp.py	/^    def getResults(self):$/;"	m	class:TcpSenderFactory
getResults	python/ovstest/udp.py	/^    def getResults(self):$/;"	m	class:UdpListener
getResults	python/ovstest/udp.py	/^    def getResults(self):$/;"	m	class:UdpSender
getSafeArray	windows/ovs-windows-installer/Actions/OVSActions.js	/^function getSafeArray(jsArr) {$/;"	f
getService	windows/ovs-windows-installer/Actions/OVSActions.js	/^function getService(serviceName) {$/;"	f
getText	utilities/bugtool/ovs-bugtool	/^    def getText(nodelist):$/;"	f	function:load_plugins
getText	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def getText(nodelist):$/;"	f	function:_str_from_xml
getToken	build-aux/check-structs	/^def getToken():$/;"	f
getToken	build-aux/extract-ofp-errors	/^def getToken():$/;"	f
getUUID	xenserver/opt_xensource_libexec_interface-reconfigure	/^    def getUUID():$/;"	f	function:action_force_rewrite
getWmiCimV2Svc	windows/ovs-windows-installer/Actions/OVSActions.js	/^function getWmiCimV2Svc() {$/;"	f
get_16aligned_be32	lib/unaligned.h	/^get_16aligned_be32(const ovs_16aligned_be32 *x)$/;"	f
get_16aligned_u32	lib/unaligned.h	/^get_16aligned_u32(const ovs_16aligned_u32 *x)$/;"	f
get_32aligned_be64	lib/unaligned.h	/^get_32aligned_be64(const ovs_32aligned_be64 *x)$/;"	f
get_32aligned_u64	lib/unaligned.h	/^get_32aligned_u64(const ovs_32aligned_u64 *x)$/;"	f
get_actions_for_flow	lib/dpctl.c	/^get_actions_for_flow(struct hmap *actions_per_flow, const struct flow *flow)$/;"	f	file:
get_actions_from_instruction	lib/ofp-actions.c	/^get_actions_from_instruction(const struct ofp11_instruction *inst,$/;"	f	file:
get_ages	tests/testsuite	/^get_ages () {$/;"	f
get_all	tests/MockXenAPI.py	/^    def get_all(self):$/;"	m	class:Table
get_all_commands	ovsdb/ovsdb-client.c	/^static const struct ovsdb_client_command *get_all_commands(void)$/;"	f	file:
get_all_commands	ovsdb/ovsdb-tool.c	/^static const struct ovs_cmdl_command *get_all_commands(void)$/;"	f	file:
get_all_commands	tests/test-jsonrpc.c	/^get_all_commands(void)$/;"	f	file:
get_all_commands	tests/test-ovsdb.c	/^get_all_commands(void)$/;"	f	file:
get_all_commands	tests/test-reconnect.c	/^get_all_commands(void)$/;"	f	file:
get_all_commands	utilities/ovs-benchmark.c	/^static const struct ovs_cmdl_command *get_all_commands(void)$/;"	f	file:
get_all_commands	utilities/ovs-ofctl.c	/^static const struct ovs_cmdl_command *get_all_commands(void)$/;"	f	file:
get_all_dpctl_commands	lib/dpctl.c	/^static const struct dpctl_command *get_all_dpctl_commands(void)$/;"	f	file:
get_all_pifs	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_all_pifs(self):$/;"	m	class:DatabaseCache
get_all_records_where	tests/MockXenAPI.py	/^    def get_all_records_where(self, condition):$/;"	m	class:Table
get_allowed_ofp_versions	lib/ofp-version-opt.c	/^get_allowed_ofp_versions(void)$/;"	f
get_arp_key	lib/odp-util.c	/^get_arp_key(const struct flow *flow, struct ovs_key_arp *arp)$/;"	f	file:
get_backlog	python/ovs/jsonrpc.py	/^    def get_backlog(self):$/;"	m	class:Connection
get_backlog	python/ovs/jsonrpc.py	/^    def get_backlog(self):$/;"	m	class:Session
get_be16	lib/ofp-actions.c	/^get_be16(const void **pp)$/;"	f	file:
get_be32	lib/ofp-actions.c	/^get_be32(const void **pp)$/;"	f	file:
get_bfd_status	ofproto/ofproto-dpif.c	/^get_bfd_status(struct ofport *ofport_, struct smap *smap)$/;"	f	file:
get_bfd_status	ofproto/ofproto-provider.h	/^    int (*get_bfd_status)(struct ofport *ofport, struct smap *smap);$/;"	m	struct:ofproto_class
get_bit_at	lib/classifier.c	/^get_bit_at(const uint32_t prefix, unsigned int ofs)$/;"	f	file:
get_bond_record	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_bond_record(self, bond):$/;"	m	class:DatabaseCache
get_boot_time	vswitchd/system-stats.c	/^get_boot_time(void)$/;"	f	file:
get_br_int	ovn/controller/ovn-controller.c	/^get_br_int(struct controller_ctx *ctx)$/;"	f	file:
get_bridge	ovn/controller/ovn-controller.c	/^get_bridge(struct ovsdb_idl *ovs_idl, const char *br_name)$/;"	f
get_bridge_id	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def get_bridge_id(br_name, default=None):$/;"	f
get_by_uuid	tests/MockXenAPI.py	/^    def get_by_uuid(self, uuid):$/;"	m	class:Table
get_carrier	lib/netdev-provider.h	/^    int (*get_carrier)(const struct netdev *netdev, bool *carrier);$/;"	m	struct:netdev_class
get_carrier_resets	lib/netdev-provider.h	/^    long long int (*get_carrier_resets)(const struct netdev *netdev);$/;"	m	struct:netdev_class
get_cfm_status	ofproto/ofproto-dpif.c	/^get_cfm_status(const struct ofport *ofport_,$/;"	f	file:
get_cfm_status	ofproto/ofproto-provider.h	/^    int (*get_cfm_status)(const struct ofport *ofport,$/;"	m	struct:ofproto_class
get_chassis	ovn/controller/ovn-controller.c	/^get_chassis(struct ovsdb_idl *ovnsb_idl, const char *chassis_id)$/;"	f
get_chassis_by_name	ovn/controller-vtep/ovn-controller-vtep.h	/^get_chassis_by_name(struct ovsdb_idl *ovnsb_idl, const char *chassis_id)$/;"	f
get_chassis_id	ovn/controller/ovn-controller.c	/^get_chassis_id(const struct ovsdb_idl *ovs_idl)$/;"	f	file:
get_chassis_vtep_ip	ovn/controller-vtep/vtep.c	/^get_chassis_vtep_ip(const struct sbrec_chassis *chassis_rec)$/;"	f	file:
get_column	lib/db-ctl-base.c	/^get_column(const struct ctl_table_class *table, const char *column_name,$/;"	f	file:
get_config	lib/netdev-provider.h	/^    int (*get_config)(const struct netdev *netdev, struct smap *args);$/;"	m	struct:netdev_class
get_core_by_core_id	lib/ovs-numa.c	/^get_core_by_core_id(unsigned core_id)$/;"	f	file:
get_cpu_cores	vswitchd/system-stats.c	/^get_cpu_cores(struct smap *stats)$/;"	f	file:
get_cpu_tracker	lib/timeval.c	/^get_cpu_tracker(void)$/;"	f	file:
get_cpu_usage	lib/timeval.c	/^get_cpu_usage(void)$/;"	f
get_cwd	lib/util.c	/^get_cwd(void)$/;"	f
get_datagram_sizes	python/ovstest/util.py	/^def get_datagram_sizes(mtu1, mtu2):$/;"	f
get_datapath_version	lib/dpif-provider.h	/^    char *(*get_datapath_version)(void);$/;"	m	struct:dpif_class
get_datapath_version	ofproto/ofproto-dpif.c	/^get_datapath_version(const struct ofproto *ofproto_)$/;"	f	file:
get_datapath_version	ofproto/ofproto-provider.h	/^    const char *(*get_datapath_version)(const struct ofproto *);$/;"	m	struct:ofproto_class
get_datum	ovsdb/ovsdb-server.c	/^get_datum(struct ovsdb_row *row, const char *column_name,$/;"	f	file:
get_detach	lib/daemon.c	/^get_detach(void)$/;"	f
get_detach	python/ovs/daemon.py	/^def get_detach():$/;"	f
get_dh1024	lib/dhparams.c	/^DH *get_dh1024(void)$/;"	f
get_dh2048	lib/dhparams.c	/^DH *get_dh2048(void)$/;"	f
get_dh4096	lib/dhparams.c	/^DH *get_dh4096(void)$/;"	f
get_dir	lib/dirs.c	/^get_dir(struct directory *d)$/;"	f	file:
get_dp	datapath/datapath.c	/^static inline struct datapath *get_dp(struct net *net, int dp_ifindex)$/;"	f	file:
get_dp	datapath/linux/datapath.c	/^static inline struct datapath *get_dp(struct net *net, int dp_ifindex)$/;"	f	file:
get_dp_netdev	lib/dpif-netdev.c	/^get_dp_netdev(const struct dpif *dpif)$/;"	f	file:
get_dp_rcu	datapath/datapath.c	/^static struct datapath *get_dp_rcu(struct net *net, int dp_ifindex)$/;"	f	file:
get_dp_rcu	datapath/linux/datapath.c	/^static struct datapath *get_dp_rcu(struct net *net, int dp_ifindex)$/;"	f	file:
get_dp_stats	datapath/datapath.c	/^static void get_dp_stats(const struct datapath *dp, struct ovs_dp_stats *stats,$/;"	f	file:
get_dp_stats	datapath/linux/datapath.c	/^static void get_dp_stats(const struct datapath *dp, struct ovs_dp_stats *stats,$/;"	f	file:
get_dpdev	datapath/linux/vport-netdev.c	/^static struct net_device *get_dpdev(const struct datapath *dp)$/;"	f	file:
get_dpdev	datapath/vport-netdev.c	/^static struct net_device *get_dpdev(const struct datapath *dp)$/;"	f	file:
get_dpif_flow_stats	lib/dpif-netdev.c	/^get_dpif_flow_stats(const struct dp_netdev_flow *netdev_flow_,$/;"	f	file:
get_dpifindex	datapath/datapath.c	/^static int get_dpifindex(const struct datapath *dp)$/;"	f	file:
get_dpifindex	datapath/linux/datapath.c	/^static int get_dpifindex(const struct datapath *dp)$/;"	f	file:
get_driver	python/ovstest/util.py	/^def get_driver(iface):$/;"	f
get_egress_tun_info	datapath/vport.h	/^	int (*get_egress_tun_info)(struct vport *, struct sk_buff *,$/;"	m	struct:vport_ops
get_enabled_slave	ofproto/bond.c	/^get_enabled_slave(struct bond *bond)$/;"	f	file:
get_entropy	lib/entropy.c	/^get_entropy(void *buffer, size_t n)$/;"	f
get_entropy_or_die	lib/entropy.c	/^get_entropy_or_die(void *buffer, size_t n)$/;"	f
get_enum_type	python/ovs/db/types.py	/^    def get_enum_type(atomic_type):$/;"	m	class:BaseType
get_error	python/ovs/db/idl.py	/^    def get_error(self):$/;"	m	class:Transaction
get_etheraddr	lib/netdev-bsd.c	/^get_etheraddr(const char *netdev_name, struct eth_addr *ea)$/;"	f	file:
get_etheraddr	lib/netdev-linux.c	/^get_etheraddr(const char *netdev_name, struct eth_addr *ea)$/;"	f	file:
get_etheraddr	lib/netdev-provider.h	/^    int (*get_etheraddr)(const struct netdev *netdev, struct eth_addr *mac);$/;"	m	struct:netdev_class
get_ethernet_key	lib/odp-util.c	/^get_ethernet_key(const struct flow *flow, struct ovs_key_ethernet *eth)$/;"	f	file:
get_exception_errno	python/ovs/socket_util.py	/^def get_exception_errno(e):$/;"	f
get_export_time_now	ofproto/ofproto-dpif-ipfix.c	/^get_export_time_now(uint64_t *export_time_usec, uint32_t *export_time_sec)$/;"	f	file:
get_external_id	utilities/ovs-vsctl.c	/^get_external_id(struct smap *smap, const char *prefix, const char *key,$/;"	f	file:
get_features	lib/netdev-provider.h	/^    int (*get_features)(const struct netdev *netdev,$/;"	m	struct:netdev_class
get_features_error	lib/netdev-linux.c	/^    int get_features_error;     \/* Cached error code from ETHTOOL_GSET. *\/$/;"	m	struct:netdev_linux	file:
get_filesys_stats	vswitchd/system-stats.c	/^get_filesys_stats(struct smap *stats OVS_UNUSED)$/;"	f	file:
get_flags	lib/netdev-bsd.c	/^get_flags(const struct netdev *netdev, int *flags)$/;"	f	file:
get_flags	lib/netdev-linux.c	/^get_flags(const struct netdev *dev, unsigned int *flags)$/;"	f	file:
get_flow_actions	datapath/datapath.c	/^static struct sw_flow_actions *get_flow_actions(const struct nlattr *a,$/;"	f	file:
get_flow_actions	datapath/linux/datapath.c	/^static struct sw_flow_actions *get_flow_actions(const struct nlattr *a,$/;"	f	file:
get_free_disk_space	utilities/bugtool/ovs-bugtool	/^def get_free_disk_space(path):$/;"	f
get_ftpd	tests/test-l7.py	/^def get_ftpd():$/;"	f
get_icmp_key	lib/odp-util.c	/^get_icmp_key(const struct flow *flow, struct ovs_key_icmp *icmp)$/;"	f	file:
get_idl_schema	python/ovs/db/idl.py	/^    def get_idl_schema(self):$/;"	m	class:SchemaHelper
get_iface_id	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def get_iface_id(if_name, xs_vif_uuid):$/;"	f
get_ifindex	lib/netdev-bsd.c	/^get_ifindex(const struct netdev *netdev_, int *ifindexp)$/;"	f	file:
get_ifindex	lib/netdev-linux.c	/^get_ifindex(const struct netdev *netdev_, int *ifindexp)$/;"	f	file:
get_ifindex	lib/netdev-provider.h	/^    int (*get_ifindex)(const struct netdev *netdev);$/;"	m	struct:netdev_class
get_ifindex_error	lib/netdev-linux.c	/^    int get_ifindex_error;      \/* Cached error code from SIOCGIFINDEX. *\/$/;"	m	struct:netdev_linux	file:
get_in4	lib/netdev-provider.h	/^    int (*get_in4)(const struct netdev *netdev, struct in_addr *address,$/;"	m	struct:netdev_class
get_in6	lib/netdev-provider.h	/^    int (*get_in6)(const struct netdev *netdev, struct in6_addr *in6);$/;"	m	struct:netdev_class
get_in_port_netdev_from_key	lib/dpctl.c	/^get_in_port_netdev_from_key(struct dpif *dpif, const struct ofpbuf *key)$/;"	f	file:
get_increment_new_value	python/ovs/db/idl.py	/^    def get_increment_new_value(self):$/;"	m	class:Transaction
get_insert_uuid	python/ovs/db/idl.py	/^    def get_insert_uuid(self, uuid):$/;"	m	class:Transaction
get_int	tests/test-rstp.c	/^get_int(int *intp)$/;"	f	file:
get_int	tests/test-stp.c	/^get_int(int *intp)$/;"	f	file:
get_interface	python/ovstest/util.py	/^def get_interface(address):$/;"	f
get_interface_from_routing_decision	python/ovstest/util.py	/^def get_interface_from_routing_decision(ip):$/;"	f
get_interface_mtu	python/ovstest/util.py	/^def get_interface_mtu(iface):$/;"	f
get_ipv4_key	lib/odp-util.c	/^get_ipv4_key(const struct flow *flow, struct ovs_key_ipv4 *ipv4, bool is_mask)$/;"	f	file:
get_ipv6_key	lib/odp-util.c	/^get_ipv6_key(const struct flow *flow, struct ovs_key_ipv6 *ipv6, bool is_mask)$/;"	f	file:
get_last_connect_elapsed	python/ovs/reconnect.py	/^    def get_last_connect_elapsed(self, now):$/;"	m	class:Reconnect
get_last_disconnect_elapsed	python/ovs/reconnect.py	/^    def get_last_disconnect_elapsed(self, now):$/;"	m	class:Reconnect
get_level	python/ovs/vlog.py	/^def get_level(level_str):$/;"	f
get_levels	python/ovs/vlog.py	/^    def get_levels():$/;"	m	class:Vlog
get_line	build-aux/extract-ofp-actions	/^def get_line():$/;"	f
get_line	build-aux/extract-ofp-fields	/^def get_line():$/;"	f
get_line	build-aux/extract-ofp-msgs	/^def get_line():$/;"	f
get_lldp_status	ofproto/ofproto-dpif.c	/^get_lldp_status(const struct ofport *ofport_,$/;"	f	file:
get_lldp_status	ofproto/ofproto-provider.h	/^    bool (*get_lldp_status)(const struct ofport *ofport,$/;"	m	struct:ofproto_class
get_load_average	vswitchd/system-stats.c	/^get_load_average(struct smap *stats OVS_UNUSED)$/;"	f	file:
get_local_iface_ids	ovn/controller/binding.c	/^get_local_iface_ids(const struct ovsrec_bridge *br_int, struct sset *lports)$/;"	f	file:
get_log_destination	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def get_log_destination():$/;"	f
get_management_pif	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_management_pif(self):$/;"	m	class:DatabaseCache
get_mask	datapath/actions.c	882;"	d	file:
get_mask	datapath/linux/actions.c	882;"	d	file:
get_mask	lib/odp-execute.c	349;"	d	file:
get_max_backoff	python/ovs/reconnect.py	/^    def get_max_backoff(self):$/;"	m	class:Reconnect
get_max_fds	lib/process.c	/^get_max_fds(void)$/;"	f	file:
get_max_tries	python/ovs/reconnect.py	/^    def get_max_tries(self):$/;"	m	class:Reconnect
get_memory_stats	vswitchd/system-stats.c	/^get_memory_stats(struct smap *stats)$/;"	f	file:
get_memory_usage	ofproto/ofproto-provider.h	/^    void (*get_memory_usage)(const struct ofproto *ofproto,$/;"	m	struct:ofproto_class
get_min_backoff	python/ovs/reconnect.py	/^    def get_min_backoff(self):$/;"	m	class:Reconnect
get_mtime	lib/socket-util.c	/^get_mtime(const char *file_name, struct timespec *mtime)$/;"	f
get_mtu	lib/netdev-provider.h	/^    int (*get_mtu)(const struct netdev *netdev, int *mtup);$/;"	m	struct:netdev_class
get_n_pmd_threads_on_numa	lib/dpif-netdev.c	/^get_n_pmd_threads_on_numa(struct dp_netdev *dp, int numa_id)$/;"	f	file:
get_name	datapath/vport.h	/^	const char *(*get_name)(const struct vport *);$/;"	m	struct:vport_ops
get_name	python/ovs/jsonrpc.py	/^    def get_name(self):$/;"	m	class:Session
get_name	python/ovs/reconnect.py	/^    def get_name(self):$/;"	m	class:Reconnect
get_nd_key	lib/odp-util.c	/^get_nd_key(const struct flow *flow, struct ovs_key_nd *nd)$/;"	f	file:
get_netdev_by_mac	xenserver/opt_xensource_libexec_interface-reconfigure	/^    def get_netdev_by_mac(mac):$/;"	f	function:netdev_remap_name
get_netdev_mac	xenserver/opt_xensource_libexec_interface-reconfigure	/^    def get_netdev_mac(device):$/;"	f	function:netdev_remap_name
get_netdev_tunnel_config	lib/netdev-vport.c	/^get_netdev_tunnel_config(const struct netdev *netdev)$/;"	f	file:
get_netdev_tx_queue_len	xenserver/opt_xensource_libexec_interface-reconfigure	/^    def get_netdev_tx_queue_len(device):$/;"	f	function:netdev_remap_name
get_netflow_ids	ofproto/ofproto-dpif.c	/^get_netflow_ids(const struct ofproto *ofproto_,$/;"	f	file:
get_netflow_ids	ofproto/ofproto-provider.h	/^    void (*get_netflow_ids)(const struct ofproto *ofproto,$/;"	m	struct:ofproto_class
get_network_by_bridge	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_network_by_bridge(self, bridge):$/;"	m	class:DatabaseCache
get_network_by_bridge	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def get_network_by_bridge(br_name):$/;"	f
get_network_record	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_network_record(self, network):$/;"	m	class:DatabaseCache
get_networks_with_bridge	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_networks_with_bridge(self, bridge):$/;"	m	class:DatabaseCache
get_next_hop	lib/netdev-provider.h	/^    int (*get_next_hop)(const struct in_addr *host, struct in_addr *next_hop,$/;"	m	struct:netdev_class
get_null_fd	lib/daemon.c	/^get_null_fd(void)$/;"	f	file:
get_null_fd	python/ovs/socket_util.py	/^def get_null_fd():$/;"	f
get_numa_by_numa_id	lib/ovs-numa.c	/^get_numa_by_numa_id(int numa_id)$/;"	f	file:
get_numa_id	lib/netdev-provider.h	/^    int (*get_numa_id)(const struct netdev *netdev);$/;"	m	struct:netdev_class
get_ofp_port	ofproto/ofproto-dpif-xlate.c	/^get_ofp_port(const struct xbridge *xbridge, ofp_port_t ofp_port)$/;"	f	file:
get_ofpact_map	lib/ofp-actions.c	/^get_ofpact_map(enum ofp_version version)$/;"	f	file:
get_ofprotos	ofproto/ofproto-dpif.c	/^get_ofprotos(struct shash *ofproto_shash)$/;"	f	file:
get_one_dp	lib/dpctl.c	/^get_one_dp(struct dpctl_params *dpctl_p)$/;"	f	file:
get_optional	python/ovs/db/parser.py	/^    def get_optional(self, name, types, default=None):$/;"	m	class:Parser
get_options	datapath/vport.h	/^	int (*get_options)(const struct vport *, struct sk_buff *);$/;"	m	struct:vport_ops
get_ovnsb_remote	ovn/controller/ovn-controller.c	/^get_ovnsb_remote(struct ovsdb_idl *ovs_idl)$/;"	f	file:
get_ovsinst_map	lib/ofp-actions.c	/^get_ovsinst_map(enum ofp_version version)$/;"	f	file:
get_packet_sizes	utilities/ovs-l3ping	/^def get_packet_sizes(me, he, remote_ip):$/;"	f
get_page_size	vswitchd/system-stats.c	/^get_page_size(void)$/;"	f	file:
get_patch_config	lib/netdev-vport.c	/^get_patch_config(const struct netdev *dev_, struct smap *args)$/;"	f	file:
get_pif_by_bridge	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_pif_by_bridge(self, bridge):$/;"	m	class:DatabaseCache
get_pif_by_uuid	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_pif_by_uuid(self, uuid):$/;"	m	class:DatabaseCache
get_pif_record	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_pif_record(self, pif):$/;"	m	class:DatabaseCache
get_pifs_by_device	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_pifs_by_device(self, device):$/;"	m	class:DatabaseCache
get_pool_record	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_pool_record(self):$/;"	m	class:DatabaseCache
get_port_by_number	lib/dpif-netdev.c	/^get_port_by_number(struct dp_netdev *dp,$/;"	f	file:
get_port_for_container_interface	utilities/ovs-docker	/^get_port_for_container_interface () {$/;"	f
get_port_number	lib/dpctl.c	/^get_port_number(struct dpif *dpif, const char *name, odp_port_t *port,$/;"	f	file:
get_probe_interval	python/ovs/reconnect.py	/^    def get_probe_interval(self):$/;"	m	class:Reconnect
get_process_info	vswitchd/system-stats.c	/^get_process_info(pid_t pid, struct process_info *pinfo)$/;"	f	file:
get_process_stats	vswitchd/system-stats.c	/^get_process_stats(struct smap *stats)$/;"	f	file:
get_provider_meter_id	ofproto/ofproto.c	/^get_provider_meter_id(const struct ofproto *ofproto, uint32_t of_meter_id)$/;"	f	file:
get_qos	lib/netdev-provider.h	/^    int (*get_qos)(const struct netdev *netdev,$/;"	m	struct:netdev_class
get_qos_capabilities	lib/netdev-provider.h	/^    int (*get_qos_capabilities)(const struct netdev *netdev,$/;"	m	struct:netdev_class
get_qos_types	lib/netdev-provider.h	/^    int (*get_qos_types)(const struct netdev *netdev, struct sset *types);$/;"	m	struct:netdev_class
get_queue	lib/netdev-provider.h	/^    int (*get_queue)(const struct netdev *netdev,$/;"	m	struct:netdev_class
get_queue_id	lib/learning-switch.c	/^get_queue_id(const struct lswitch *sw, ofp_port_t in_port)$/;"	f	file:
get_queue_stats	lib/netdev-provider.h	/^    int (*get_queue_stats)(const struct netdev *netdev, unsigned int queue_id,$/;"	m	struct:netdev_class
get_range128	tests/test-hash.c	/^get_range128(ovs_u128 *value, int ofs, uint64_t mask)$/;"	f	file:
get_raw_process_info	vswitchd/system-stats.c	/^get_raw_process_info(pid_t pid, struct raw_process_info *raw)$/;"	f	file:
get_received_bytes	python/ovs/jsonrpc.py	/^    def get_received_bytes(self):$/;"	m	class:Connection
get_recent_rusage	lib/timeval.c	/^get_recent_rusage(void)$/;"	f	file:
get_record	tests/MockXenAPI.py	/^    def get_record(self, record_ref):$/;"	m	class:Table
get_row	lib/db-ctl-base.c	/^get_row(struct ctl_context *ctx,$/;"	f	file:
get_row_by_id	lib/db-ctl-base.c	/^get_row_by_id(struct ctl_context *ctx, const struct ctl_table_class *table,$/;"	f	file:
get_rstp_port_status	ofproto/ofproto-dpif.c	/^get_rstp_port_status(struct ofport *ofport_,$/;"	f	file:
get_rstp_port_status	ofproto/ofproto-provider.h	/^    void (*get_rstp_port_status)(struct ofport *ofport,$/;"	m	struct:ofproto_class
get_rstp_status	ofproto/ofproto-dpif.c	/^get_rstp_status(struct ofproto *ofproto_, struct ofproto_rstp_status *s)$/;"	f	file:
get_rstp_status	ofproto/ofproto-provider.h	/^    void (*get_rstp_status)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
get_rx_queue_name	tests/dpdk/ring_client.c	/^get_rx_queue_name(unsigned id)$/;"	f	file:
get_seqno	python/ovs/jsonrpc.py	/^    def get_seqno(self):$/;"	m	class:Session
get_single_bridge_id	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def get_single_bridge_id(bridge_ids, br_name, default=None):$/;"	f
get_skb_priority	ofproto/ofproto-dpif-xlate.c	/^get_skb_priority(const struct xport *xport, uint32_t skb_priority)$/;"	f	file:
get_sock_pid_from_kernel	lib/netlink-socket.c	/^get_sock_pid_from_kernel(struct nl_sock *sock)$/;"	f	file:
get_socket_rcvbuf	lib/socket-util.c	/^get_socket_rcvbuf(int sock)$/;"	f
get_spi	debian/ovs-monitor-ipsec	/^    def get_spi(self, local_ip, remote_ip, proto="esp"):$/;"	m	class:IPsec
get_src_port	datapath/linux/vport-lisp.c	/^static u16 get_src_port(struct net *net, struct sk_buff *skb)$/;"	f	file:
get_src_port	datapath/vport-lisp.c	/^static u16 get_src_port(struct net *net, struct sk_buff *skb)$/;"	f	file:
get_src_port	lib/netdev-vport.c	/^get_src_port(struct dp_packet *packet)$/;"	f	file:
get_ssl_cert	debian/ovs-monitor-ipsec	/^def get_ssl_cert(data):$/;"	f
get_stats	lib/dpif-provider.h	/^    int (*get_stats)(const struct dpif *dpif, struct dpif_dp_stats *stats);$/;"	m	struct:dpif_class
get_stats	lib/netdev-provider.h	/^    int (*get_stats)(const struct netdev *netdev, struct netdev_stats *);$/;"	m	struct:netdev_class
get_stats	lib/netdev-vport.c	/^get_stats(const struct netdev *netdev, struct netdev_stats *stats)$/;"	f	file:
get_stats	python/ovs/reconnect.py	/^    def get_stats(self, now):$/;"	m	class:Reconnect
get_stats_via_netlink	lib/netdev-linux.c	/^get_stats_via_netlink(const struct netdev *netdev_, struct netdev_stats *stats)$/;"	f	file:
get_stats_via_vport	lib/netdev-linux.c	/^get_stats_via_vport(const struct netdev *netdev_,$/;"	f	file:
get_stats_via_vport__	lib/netdev-linux.c	/^get_stats_via_vport__(const struct netdev *netdev, struct netdev_stats *stats)$/;"	f	file:
get_status	lib/netdev-provider.h	/^    int (*get_status)(const struct netdev *netdev, struct smap *smap);$/;"	m	struct:netdev_class
get_status	python/ovs/jsonrpc.py	/^    def get_status(self):$/;"	m	class:Connection
get_stp_port_stats	ofproto/ofproto-dpif.c	/^get_stp_port_stats(struct ofport *ofport_,$/;"	f	file:
get_stp_port_stats	ofproto/ofproto-provider.h	/^    int (*get_stp_port_stats)(struct ofport *ofport,$/;"	m	struct:ofproto_class
get_stp_port_status	ofproto/ofproto-dpif.c	/^get_stp_port_status(struct ofport *ofport_,$/;"	f	file:
get_stp_port_status	ofproto/ofproto-provider.h	/^    int (*get_stp_port_status)(struct ofport *ofport,$/;"	m	struct:ofproto_class
get_stp_status	ofproto/ofproto-dpif.c	/^get_stp_status(struct ofproto *ofproto_, struct ofproto_stp_status *s)$/;"	f	file:
get_stp_status	ofproto/ofproto-provider.h	/^    int (*get_stp_status)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
get_subfield	lib/ofp-actions.c	/^get_subfield(int n_bits, const void **p, struct mf_subfield *sf)$/;"	f	file:
get_subprogram_name	lib/util.c	/^get_subprogram_name(void)$/;"	f
get_sysconf_buffer_size	lib/daemon-unix.c	/^get_sysconf_buffer_size(void)$/;"	f	file:
get_table	lib/db-ctl-base.c	/^get_table(const char *table_name)$/;"	f	file:
get_terminal_size	utilities/ovs-dpctl-top	/^def get_terminal_size():$/;"	f
get_test_id	utilities/ovs-vlan-test	/^    def get_test_id(self):$/;"	m	class:VlanServer
get_token	ofproto/pinsched.c	/^get_token(struct pinsched *ps)$/;"	f	file:
get_token	tests/test-rstp.c	/^get_token(void)$/;"	f	file:
get_token	tests/test-stp.c	/^get_token(void)$/;"	f	file:
get_tp_key	lib/odp-util.c	/^get_tp_key(const struct flow *flow, union ovs_key_tp *tp)$/;"	f	file:
get_tunnel_config	lib/netdev-provider.h	/^        (*get_tunnel_config)(const struct netdev *netdev);$/;"	m	struct:netdev_class	typeref:struct:netdev_class::get_tunnel_config
get_tunnel_config	lib/netdev-vport.c	/^get_tunnel_config(const struct netdev *dev, struct smap *args)$/;"	f	file:
get_tunnel_type	ovn/controller/ovn-controller.c	/^get_tunnel_type(const char *name)$/;"	f
get_tx_packet	ofproto/pinsched.c	/^get_tx_packet(struct pinsched *ps)$/;"	f	file:
get_tx_queue_name	tests/dpdk/ring_client.c	/^get_tx_queue_name(unsigned id)$/;"	f	file:
get_u32	lib/aes128.c	/^get_u32(const uint8_t *p)$/;"	f	file:
get_ufid_hash	ofproto/ofproto-dpif-upcall.c	/^get_ufid_hash(const ovs_u128 *ufid)$/;"	f	file:
get_ufid_len	datapath/flow_netlink.c	/^static size_t get_ufid_len(const struct nlattr *attr, bool log)$/;"	f	file:
get_ufid_len	datapath/linux/flow_netlink.c	/^static size_t get_ufid_len(const struct nlattr *attr, bool log)$/;"	f	file:
get_unaligned_be16	lib/unaligned.h	158;"	d
get_unaligned_be32	lib/unaligned.h	159;"	d
get_unaligned_be64	lib/unaligned.h	/^get_unaligned_be64(const ovs_be64 *p)$/;"	f
get_unaligned_u16	lib/unaligned.h	/^static inline uint16_t get_unaligned_u16(const uint16_t *p_)$/;"	f
get_unaligned_u32	lib/unaligned.h	/^static inline uint32_t get_unaligned_u32(const uint32_t *p_)$/;"	f
get_unaligned_u64	lib/unaligned.h	55;"	d
get_unaligned_u64__	lib/unaligned.h	/^static inline uint64_t get_unaligned_u64__(const uint64_t *p_)$/;"	f
get_unix_name_len	lib/socket-util-unix.c	/^get_unix_name_len(socklen_t sun_len)$/;"	f
get_value	tests/test-classifier.c	/^get_value(unsigned int *x, unsigned n_values)$/;"	f	file:
get_vhost_fd	utilities/qemu-wrap.py	/^def get_vhost_fd():$/;"	f
get_vlan_record	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def get_vlan_record(self, vlan):$/;"	m	class:DatabaseCache
get_vm_id	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def get_vm_id(if_name, xs_vm_uuid):$/;"	f
get_vport_type	lib/dpif-netlink.c	/^get_vport_type(const struct dpif_netlink_vport *vport)$/;"	f	file:
get_vtep_tunnel	vtep/ovs-vtep	/^def get_vtep_tunnel(remote_ip):$/;"	f
getopt	build-aux/xml2nroff	/^import getopt$/;"	i
getopt	lib/getopt_long.c	/^getopt(nargc, nargv, options)$/;"	f
getopt	ofproto/ipfix-gen-entities	/^import getopt$/;"	i
getopt	ovsdb/ovsdb-doc	/^import getopt$/;"	i
getopt	ovsdb/ovsdb-dot	/^import getopt$/;"	i
getopt	ovsdb/ovsdb-idlc	/^import getopt$/;"	i
getopt	tests/test-json.py	/^import getopt$/;"	i
getopt	tests/test-ovsdb.py	/^import getopt$/;"	i
getopt	utilities/bugtool/ovs-bugtool	/^import getopt$/;"	i
getopt	utilities/ovs-pcap	/^import getopt$/;"	i
getopt	utilities/ovs-tcpundump	/^import getopt$/;"	i
getopt	utilities/ovs-vlan-test	/^import getopt$/;"	i
getopt	xenserver/opt_xensource_libexec_interface-reconfigure	/^import os, sys, getopt$/;"	i
getopt_internal	lib/getopt_long.c	/^getopt_internal(int nargc, char **nargv, const char *options)$/;"	f	file:
getopt_long	lib/getopt_long.c	/^VLOG_DEFINE_THIS_MODULE(getopt_long);$/;"	v
getopt_long	lib/getopt_long.c	/^getopt_long(int nargc, char * const *nargv, const char *options,$/;"	f
getqdisc_is_safe	lib/netdev-linux.c	/^getqdisc_is_safe(void)$/;"	f	file:
getrusage	lib/getrusage-windows.c	/^getrusage(int who, struct rusage *usage)$/;"	f
getrusage_thread	lib/timeval.c	/^getrusage_thread(struct rusage *rusage OVS_UNUSED)$/;"	f	file:
getrusage_windows	lib/getrusage-windows.c	/^VLOG_DEFINE_THIS_MODULE(getrusage_windows);$/;"	v
getsockopt	lib/socket-util.h	115;"	d
getsockopt_int	lib/socket-util.c	/^getsockopt_int(int fd, int level, int option, const char *optname, int *valuep)$/;"	f	file:
ghost	ofproto/ofproto-dpif.c	/^    bool ghost;$/;"	m	struct:port_dump_state	file:
ghost_ports	ofproto/ofproto-dpif.c	/^    struct sset ghost_ports;       \/* Ports with no datapath port. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::sset	file:
giaddr	datapath/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::	file:
giaddr	datapath/linux/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::	file:
giaddr	lib/dhcp.h	/^    ovs_be32 giaddr;            \/* Relay agent IP address. *\/$/;"	m	struct:dhcp_header
gid	lib/daemon-unix.c	/^static gid_t gid;$/;"	v	file:
gid_matches	lib/daemon-unix.c	/^gid_matches(gid_t expected, gid_t value)$/;"	f	file:
gid_verify	lib/daemon-unix.c	/^gid_verify(gid_t real, gid_t effective, gid_t saved)$/;"	f	file:
give_advice	build-aux/missing	/^give_advice ()$/;"	f
glob	debian/ovs-monitor-ipsec	/^import glob$/;"	i
glob	utilities/bugtool/ovs-bugtool	/^import glob$/;"	i
glob	utilities/ovs-pki	/^glob() {$/;"	f
glob	utilities/ovs-pki.in	/^glob() {$/;"	f
global_seqno	lib/ovs-rcu.c	/^static struct seq *global_seqno;$/;"	v	typeref:struct:seq	file:
gmtime_msec	lib/timeval.c	/^gmtime_msec(long long int now, struct tm_msec *result)$/;"	f
gmtime_r	lib/timeval.h	45;"	d
gnv	lib/tun-metadata.h	/^        struct geneve_opt gnv[GENEVE_TOT_OPT_SIZE \/ sizeof(struct geneve_opt)];$/;"	m	union:tun_metadata::__anon161	typeref:struct:tun_metadata::__anon161::geneve_opt
go	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
good_hash	tests/test-cmap.c	/^good_hash(int value)$/;"	f	file:
good_hash	tests/test-hindex.c	/^good_hash(int value)$/;"	f	file:
good_hash	tests/test-hmap.c	/^good_hash(int value)$/;"	f	file:
grat_arp_lock	lib/mac-learning.h	/^    time_t grat_arp_lock;       \/* Gratuitous ARP lock expiration time. *\/$/;"	m	struct:mac_entry
gre_add_protocol	datapath/linux/compat/gre.c	/^static int gre_add_protocol(const struct gre_protocol *proto, u8 version)$/;"	f	file:
gre_add_protocol	datapath/linux/gre.c	/^static int gre_add_protocol(const struct gre_protocol *proto, u8 version)$/;"	f	file:
gre_base_hdr	datapath/linux/compat/include/net/gre.h	/^struct gre_base_hdr {$/;"	s
gre_base_hdr	lib/packets.h	/^struct gre_base_hdr {$/;"	s
gre_build_header	datapath/linux/compat/include/net/gre.h	89;"	d
gre_cisco_proto	datapath/linux/compat/gre.c	/^static struct gre_cisco_protocol __rcu *gre_cisco_proto;$/;"	v	typeref:struct:__rcu	file:
gre_cisco_proto	datapath/linux/gre.c	/^static struct gre_cisco_protocol __rcu *gre_cisco_proto;$/;"	v	typeref:struct:__rcu	file:
gre_cisco_protocol	datapath/linux/compat/include/net/gre.h	/^struct gre_cisco_protocol {$/;"	s
gre_cisco_rcv	datapath/linux/compat/gre.c	/^static int gre_cisco_rcv(struct sk_buff *skb)$/;"	f	file:
gre_cisco_rcv	datapath/linux/gre.c	/^static int gre_cisco_rcv(struct sk_buff *skb)$/;"	f	file:
gre_cisco_register	datapath/linux/compat/include/net/gre.h	25;"	d
gre_cisco_unregister	datapath/linux/compat/include/net/gre.h	28;"	d
gre_create	datapath/linux/vport-gre.c	/^static struct vport *gre_create(const struct vport_parms *parms)$/;"	f	file:
gre_create	datapath/vport-gre.c	/^static struct vport *gre_create(const struct vport_parms *parms)$/;"	f	file:
gre_csum_fix	datapath/linux/compat/gre.c	/^static void gre_csum_fix(struct sk_buff *skb)$/;"	f	file:
gre_csum_fix	datapath/linux/gre.c	/^static void gre_csum_fix(struct sk_buff *skb)$/;"	f	file:
gre_del_protocol	datapath/linux/compat/gre.c	/^static int gre_del_protocol(const struct gre_protocol *proto, u8 version)$/;"	f	file:
gre_del_protocol	datapath/linux/gre.c	/^static int gre_del_protocol(const struct gre_protocol *proto, u8 version)$/;"	f	file:
gre_err	datapath/linux/vport-gre.c	/^static int gre_err(struct sk_buff *skb, u32 info,$/;"	f	file:
gre_err	datapath/vport-gre.c	/^static int gre_err(struct sk_buff *skb, u32 info,$/;"	f	file:
gre_exit	datapath/linux/vport-gre.c	/^static void gre_exit(void)$/;"	f	file:
gre_exit	datapath/vport-gre.c	/^static void gre_exit(void)$/;"	f	file:
gre_flags_to_tnl_flags	datapath/linux/compat/include/net/gre.h	/^static inline __be16 gre_flags_to_tnl_flags(__be16 flags)$/;"	f
gre_get_egress_tun_info	datapath/linux/vport-gre.c	/^static int gre_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
gre_get_egress_tun_info	datapath/vport-gre.c	/^static int gre_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
gre_get_name	datapath/linux/vport-gre.c	/^static const char *gre_get_name(const struct vport *vport)$/;"	f	file:
gre_get_name	datapath/vport-gre.c	/^static const char *gre_get_name(const struct vport *vport)$/;"	f	file:
gre_handle_offloads	datapath/linux/compat/gre.c	348;"	d	file:
gre_handle_offloads	datapath/linux/compat/include/net/gre.h	84;"	d
gre_handle_offloads	datapath/linux/gre.c	348;"	d	file:
gre_hdr	lib/netdev-vport.c	/^gre_hdr(struct ip_header *ip)$/;"	f	file:
gre_header_len	lib/netdev-vport.c	/^gre_header_len(ovs_be16 flags)$/;"	f	file:
gre_init	datapath/linux/vport-gre.c	/^static int gre_init(void)$/;"	f	file:
gre_init	datapath/vport-gre.c	/^static int gre_init(void)$/;"	f	file:
gre_nop_fix	datapath/linux/compat/gre.c	/^static void gre_nop_fix(struct sk_buff *skb) { }$/;"	f	file:
gre_nop_fix	datapath/linux/gre.c	/^static void gre_nop_fix(struct sk_buff *skb) { }$/;"	f	file:
gre_ports	datapath/linux/vport-gre.c	/^static int gre_ports;$/;"	v	file:
gre_ports	datapath/vport-gre.c	/^static int gre_ports;$/;"	v	file:
gre_protocol	datapath/linux/compat/gre.c	/^struct gre_protocol {$/;"	s	file:
gre_protocol	datapath/linux/gre.c	/^struct gre_protocol {$/;"	s	file:
gre_protocol	datapath/linux/vport-gre.c	/^static struct gre_cisco_protocol gre_protocol = {$/;"	v	typeref:struct:gre_cisco_protocol	file:
gre_protocol	datapath/vport-gre.c	/^static struct gre_cisco_protocol gre_protocol = {$/;"	v	typeref:struct:gre_cisco_protocol	file:
gre_rcv	datapath/linux/compat/gre.c	/^static int gre_rcv(struct sk_buff *skb)$/;"	f	file:
gre_rcv	datapath/linux/gre.c	/^static int gre_rcv(struct sk_buff *skb)$/;"	f	file:
gre_rcv	datapath/linux/vport-gre.c	/^static int gre_rcv(struct sk_buff *skb,$/;"	f	file:
gre_rcv	datapath/vport-gre.c	/^static int gre_rcv(struct sk_buff *skb,$/;"	f	file:
gre_tnl_destroy	datapath/linux/vport-gre.c	/^static void gre_tnl_destroy(struct vport *vport)$/;"	f	file:
gre_tnl_destroy	datapath/vport-gre.c	/^static void gre_tnl_destroy(struct vport *vport)$/;"	f	file:
gre_tnl_send	datapath/linux/vport-gre.c	/^static int gre_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
gre_tnl_send	datapath/vport-gre.c	/^static int gre_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
gre_vport	datapath/vport.h	/^	struct vport __rcu *gre_vport;$/;"	m	struct:vport_net	typeref:struct:vport_net::__rcu
group	lib/packets.h	/^    ovs_16aligned_be32 group;$/;"	m	struct:igmp_header
group	ofproto/ofproto-dpif-xlate.c	/^            struct group_dpif *group;$/;"	m	struct:xc_entry::__anon188::__anon196	typeref:struct:xc_entry::__anon188::__anon196::group_dpif	file:
group	ofproto/ofproto-dpif-xlate.c	/^        } group;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon196	file:
group	ovn/northd/ovn-northd.c	/^    const struct multicast_group *group;$/;"	m	struct:ovn_multicast	typeref:struct:ovn_multicast::multicast_group	file:
group	tests/test-jsonrpc.py	/^    group = parser.add_argument_group(title="Commands",$/;"	v
groupAddr	datapath-windows/ovsext/NetProto.h	/^   UINT8    groupAddr[4];$/;"	m	struct:IGMPHdr
group_alloc	ofproto/ofproto-dpif.c	/^group_alloc(void)$/;"	f	file:
group_alloc	ofproto/ofproto-provider.h	/^    struct ofgroup *(*group_alloc)(void);$/;"	m	struct:ofproto_class	typeref:struct:ofproto_class::group_alloc
group_best_live_bucket	ofproto/ofproto-dpif-xlate.c	/^group_best_live_bucket(const struct xlate_ctx *ctx,$/;"	f	file:
group_construct	ofproto/ofproto-dpif.c	/^group_construct(struct ofgroup *group_)$/;"	f	file:
group_construct	ofproto/ofproto-provider.h	/^    enum ofperr (*group_construct)(struct ofgroup *);$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::group_construct
group_dealloc	ofproto/ofproto-dpif.c	/^group_dealloc(struct ofgroup *group_)$/;"	f	file:
group_dealloc	ofproto/ofproto-provider.h	/^    void (*group_dealloc)(struct ofgroup *);$/;"	m	struct:ofproto_class
group_destruct	ofproto/ofproto-dpif.c	/^group_destruct(struct ofgroup *group_)$/;"	f	file:
group_destruct	ofproto/ofproto-provider.h	/^    void (*group_destruct)(struct ofgroup *);$/;"	m	struct:ofproto_class
group_dpif	ofproto/ofproto-dpif.c	/^struct group_dpif {$/;"	s	file:
group_dpif	ofproto/ofproto-dpif.h	/^struct OVS_LOCKABLE group_dpif;$/;"	v	typeref:struct:OVS_LOCKABLE
group_dpif_cast	ofproto/ofproto-dpif.c	/^static struct group_dpif *group_dpif_cast(const struct ofgroup *group)$/;"	f	file:
group_dpif_credit_stats	ofproto/ofproto-dpif.c	/^group_dpif_credit_stats(struct group_dpif *group,$/;"	f
group_dpif_get_buckets	ofproto/ofproto-dpif.c	/^group_dpif_get_buckets(const struct group_dpif *group,$/;"	f
group_dpif_get_fields	ofproto/ofproto-dpif.c	/^group_dpif_get_fields(const struct group_dpif *group)$/;"	f
group_dpif_get_selection_method	ofproto/ofproto-dpif.c	/^group_dpif_get_selection_method(const struct group_dpif *group)$/;"	f
group_dpif_get_selection_method_param	ofproto/ofproto-dpif.c	/^group_dpif_get_selection_method_param(const struct group_dpif *group)$/;"	f
group_dpif_get_type	ofproto/ofproto-dpif.c	/^group_dpif_get_type(const struct group_dpif *group)$/;"	f
group_dpif_lookup	ofproto/ofproto-dpif.c	/^group_dpif_lookup(struct ofproto_dpif *ofproto, uint32_t group_id,$/;"	f
group_dpif_ref	ofproto/ofproto-dpif.h	/^static inline struct group_dpif* group_dpif_ref(struct group_dpif *group)$/;"	f
group_dpif_unref	ofproto/ofproto-dpif.h	/^static inline void group_dpif_unref(struct group_dpif *group)$/;"	f
group_first_live_bucket	ofproto/ofproto-dpif-xlate.c	/^group_first_live_bucket(const struct xlate_ctx *ctx,$/;"	f	file:
group_get_stats	ofproto/ofproto-dpif.c	/^group_get_stats(const struct ofgroup *group_, struct ofputil_group_stats *ogs)$/;"	f	file:
group_get_stats	ofproto/ofproto-provider.h	/^    enum ofperr (*group_get_stats)(const struct ofgroup *,$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::group_get_stats
group_id	include/openflow/openflow-1.1.h	/^    ovs_be32 group_id;            \/* Group identifier. *\/$/;"	m	struct:ofp11_group_mod
group_id	include/openflow/openflow-1.1.h	/^    ovs_be32 group_id;          \/* Group identifier. *\/$/;"	m	struct:ofp11_group_desc_stats
group_id	include/openflow/openflow-1.1.h	/^    ovs_be32 group_id;         \/* All groups if OFPG_ALL. *\/$/;"	m	struct:ofp11_group_stats_request
group_id	include/openflow/openflow-1.1.h	/^    ovs_be32 group_id;         \/* Group identifier. *\/$/;"	m	struct:ofp11_group_stats
group_id	include/openflow/openflow-1.5.h	/^    ovs_be32 group_id;            \/* Group identifier. *\/$/;"	m	struct:ofp15_group_desc_stats
group_id	include/openflow/openflow-1.5.h	/^    ovs_be32 group_id;            \/* Group identifier. *\/$/;"	m	struct:ofp15_group_mod
group_id	include/openflow/openflow-1.5.h	/^    ovs_be32 group_id;         \/* All groups if OFPG_ALL. *\/$/;"	m	struct:ofp15_group_desc_request
group_id	lib/ofp-actions.h	/^    uint32_t group_id;$/;"	m	struct:ofpact_group
group_id	lib/ofp-util.h	/^    uint32_t group_id;            \/* Group identifier. *\/$/;"	m	struct:ofputil_group_mod
group_id	lib/ofp-util.h	/^    uint32_t group_id;          \/* Group identifier. *\/$/;"	m	struct:ofputil_group_desc
group_id	lib/ofp-util.h	/^    uint32_t group_id;    \/* Group identifier. *\/$/;"	m	struct:ofputil_group_stats
group_id	ofproto/ofproto-provider.h	/^    const uint32_t group_id;$/;"	m	struct:ofgroup
group_is_alive	ofproto/ofproto-dpif-xlate.c	/^group_is_alive(const struct xlate_ctx *ctx, uint32_t group_id, int depth)$/;"	f	file:
group_mod	lib/ofp-util.h	/^        struct ofputil_group_mod *group_mod;$/;"	m	union:ofputil_requestforward::__anon134	typeref:struct:ofputil_requestforward::__anon134::ofputil_group_mod
group_modify	ofproto/ofproto-dpif.c	/^group_modify(struct ofgroup *group_)$/;"	f	file:
group_modify	ofproto/ofproto-provider.h	/^    enum ofperr (*group_modify)(struct ofgroup *);$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::group_modify
group_type_to_string	lib/ofp-print.c	/^group_type_to_string(enum ofp11_group_type type)$/;"	f	file:
groups	lib/vswitch-idl.h	/^	char **groups;$/;"	m	struct:ovsrec_flow_table
groups	ofproto/ofproto.h	/^    struct mf_subfield *groups;$/;"	m	struct:ofproto_table_settings	typeref:struct:ofproto_table_settings::mf_subfield
groups_rwlock	ofproto/ofproto-provider.h	/^    struct ovs_rwlock groups_rwlock;$/;"	m	struct:ofproto	typeref:struct:ofproto::ovs_rwlock
grp1	datapath-windows/ovsext/resource.h	1277;"	d
grp2	datapath-windows/ovsext/resource.h	1278;"	d
grp3	datapath-windows/ovsext/resource.h	1279;"	d
grp4	datapath-windows/ovsext/resource.h	1280;"	d
gs	datapath/linux/vport-geneve.c	/^	struct geneve_sock *gs;$/;"	m	struct:geneve_port	typeref:struct:geneve_port::geneve_sock	file:
gs	datapath/vport-geneve.c	/^	struct geneve_sock *gs;$/;"	m	struct:geneve_port	typeref:struct:geneve_port::geneve_sock	file:
gs	include/openflow/openflow-1.3.h	/^    struct ofp11_group_stats gs;$/;"	m	struct:ofp13_group_stats	typeref:struct:ofp13_group_stats::ofp11_group_stats
gso_fix_segment_t	datapath/linux/compat/gso.h	/^typedef void (*gso_fix_segment_t)(struct sk_buff *);$/;"	t
guarded_list	lib/guarded-list.h	/^struct guarded_list {$/;"	s
guarded_list_destroy	lib/guarded-list.c	/^guarded_list_destroy(struct guarded_list *list)$/;"	f
guarded_list_init	lib/guarded-list.c	/^guarded_list_init(struct guarded_list *list)$/;"	f
guarded_list_is_empty	lib/guarded-list.c	/^guarded_list_is_empty(const struct guarded_list *list)$/;"	f
guarded_list_pop_all	lib/guarded-list.c	/^guarded_list_pop_all(struct guarded_list *list, struct ovs_list *elements)$/;"	f
guarded_list_pop_front	lib/guarded-list.c	/^guarded_list_pop_front(struct guarded_list *list)$/;"	f
guarded_list_push_back	lib/guarded-list.c	/^guarded_list_push_back(struct guarded_list *list,$/;"	f
guess	lib/lldp/lldpd.h	/^    int(*guess)(PROTO_GUESS_SIG);   \/* Can be NULL, use MAC address in this$/;"	m	struct:protocol
guess_netmask	lib/socket-util.c	/^guess_netmask(ovs_be32 ip_)$/;"	f
gw	lib/ovs-router.c	/^    struct in6_addr gw;$/;"	m	struct:ovs_router_entry	typeref:struct:ovs_router_entry::in6_addr	file:
gw_chassis_map	ovn/controller-vtep/gateway.c	/^static struct simap gw_chassis_map = SIMAP_INITIALIZER(&gw_chassis_map);$/;"	v	typeref:struct:simap	file:
gw_reval_seq	ovn/controller-vtep/gateway.c	/^static unsigned int gw_reval_seq;$/;"	v	file:
h_ageout_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_ageout_cnt;$/;"	m	struct:lldpd_hardware
h_cfg	lib/lldp/lldpd-structs.h	/^    struct lldpd      *h_cfg;     \/* Pointer to main configuration *\/$/;"	m	struct:lldpd_hardware	typeref:struct:lldpd_hardware::lldpd
h_data	lib/lldp/lldpd-structs.h	/^    void              *h_data;    \/* Hardware-dependent data *\/$/;"	m	struct:lldpd_hardware
h_delete_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_delete_cnt;$/;"	m	struct:lldpd_hardware
h_drop_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_drop_cnt;$/;"	m	struct:lldpd_hardware
h_entries	lib/lldp/lldpd-structs.h	/^    struct ovs_list   h_entries;$/;"	m	struct:lldpd_hardware	typeref:struct:lldpd_hardware::ovs_list
h_flags	lib/lldp/lldpd-structs.h	/^    int               h_flags;    \/* Packets will be sent only$/;"	m	struct:lldpd_hardware
h_ifindex	lib/lldp/lldpd-structs.h	/^    int               h_ifindex;  \/* Interface index, used by SNMP *\/$/;"	m	struct:lldpd_hardware
h_ifname	lib/lldp/lldpd-structs.h	/^    char              h_ifname[IFNAMSIZ]; \/* Should be unique *\/$/;"	m	struct:lldpd_hardware
h_insert_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_insert_cnt;$/;"	m	struct:lldpd_hardware
h_lladdr	lib/lldp/lldpd-structs.h	/^    struct eth_addr   h_lladdr;$/;"	m	struct:lldpd_hardware	typeref:struct:lldpd_hardware::eth_addr
h_lport	lib/lldp/lldpd-structs.h	/^    struct lldpd_port h_lport;  \/* Port attached to this hardware port *\/$/;"	m	struct:lldpd_hardware	typeref:struct:lldpd_hardware::lldpd_port
h_lport_cksum	lib/lldp/lldpd-structs.h	/^    u_int16_t         h_lport_cksum; \/* Checksum on local port to see if there$/;"	m	struct:lldpd_hardware
h_mangle	lib/lldp/lldpd-structs.h	/^    int               h_mangle;   \/* 1 if we have to mangle the MAC address *\/$/;"	m	struct:lldpd_hardware
h_mtu	lib/lldp/lldpd-structs.h	/^    int               h_mtu;$/;"	m	struct:lldpd_hardware
h_ops	lib/lldp/lldpd-structs.h	/^    struct lldpd_ops  *h_ops;     \/* Hardware-dependent functions *\/$/;"	m	struct:lldpd_hardware	typeref:struct:lldpd_hardware::lldpd_ops
h_recv	lib/lldp/lldpd-structs.h	/^    void              *h_recv;    \/* FD for reception *\/$/;"	m	struct:lldpd_hardware
h_rports	lib/lldp/lldpd-structs.h	/^    struct ovs_list h_rports;   \/* Contains "struct lldp_port"s. *\/$/;"	m	struct:lldpd_hardware	typeref:struct:lldpd_hardware::ovs_list
h_rx_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_rx_cnt;$/;"	m	struct:lldpd_hardware
h_rx_discarded_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_rx_discarded_cnt;$/;"	m	struct:lldpd_hardware
h_rx_unrecognized_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_rx_unrecognized_cnt;$/;"	m	struct:lldpd_hardware
h_sendfd	lib/lldp/lldpd-structs.h	/^    int               h_sendfd;   \/* FD for sending, only used by h_ops *\/$/;"	m	struct:lldpd_hardware
h_timer	lib/lldp/lldpd-structs.h	/^    void              *h_timer;   \/* Timer for this port *\/$/;"	m	struct:lldpd_hardware
h_tx_cnt	lib/lldp/lldpd-structs.h	/^    u_int64_t         h_tx_cnt;$/;"	m	struct:lldpd_hardware
handle	lib/netlink-socket.c	/^    HANDLE handle;$/;"	m	struct:nl_sock	file:
handle_add_meter	ofproto/ofproto.c	/^handle_add_meter(struct ofproto *ofproto, struct ofputil_meter_mod *mm)$/;"	f	file:
handle_args	python/ovs/daemon.py	/^def handle_args(args):$/;"	f
handle_args	python/ovs/vlog.py	/^def handle_args(args):$/;"	f
handle_barrier_request	ofproto/ofproto.c	/^handle_barrier_request(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_bundle_add	ofproto/ofproto.c	/^handle_bundle_add(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_bundle_control	ofproto/ofproto.c	/^handle_bundle_control(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_desc_stats_request	ofproto/ofproto.c	/^handle_desc_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_echo_request	ofproto/ofproto.c	/^handle_echo_request(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_ethtool	xenserver/etc_xensource_scripts_vif	/^handle_ethtool()$/;"	f
handle_features_request	ofproto/ofproto.c	/^handle_features_request(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_geneve_table_mod	ofproto/ofproto.c	/^handle_geneve_table_mod(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_geneve_table_request	ofproto/ofproto.c	/^handle_geneve_table_request(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_get_config_request	ofproto/ofproto.c	/^handle_get_config_request(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_group_desc_stats_request	ofproto/ofproto.c	/^handle_group_desc_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_group_features_stats_request	ofproto/ofproto.c	/^handle_group_features_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_group_mod	ofproto/ofproto.c	/^handle_group_mod(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_group_request	ofproto/ofproto.c	/^handle_group_request(struct ofconn *ofconn,$/;"	f	file:
handle_group_stats_request	ofproto/ofproto.c	/^handle_group_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_meter_features_request	ofproto/ofproto.c	/^handle_meter_features_request(struct ofconn *ofconn,$/;"	f	file:
handle_meter_mod	ofproto/ofproto.c	/^handle_meter_mod(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_meter_request	ofproto/ofproto.c	/^handle_meter_request(struct ofconn *ofconn, const struct ofp_header *request,$/;"	f	file:
handle_modify_meter	ofproto/ofproto.c	/^handle_modify_meter(struct ofproto *ofproto, struct ofputil_meter_mod *mm)$/;"	f	file:
handle_mtu	xenserver/etc_xensource_scripts_vif	/^handle_mtu()$/;"	f
handle_nxt_flow_mod_table_id	ofproto/ofproto.c	/^handle_nxt_flow_mod_table_id(struct ofconn *ofconn,$/;"	f	file:
handle_nxt_get_async_request	ofproto/ofproto.c	/^handle_nxt_get_async_request(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_nxt_set_async_config	ofproto/ofproto.c	/^handle_nxt_set_async_config(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_nxt_set_controller_id	ofproto/ofproto.c	/^handle_nxt_set_controller_id(struct ofconn *ofconn,$/;"	f	file:
handle_nxt_set_flow_format	ofproto/ofproto.c	/^handle_nxt_set_flow_format(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_nxt_set_packet_in_format	ofproto/ofproto.c	/^handle_nxt_set_packet_in_format(struct ofconn *ofconn,$/;"	f	file:
handle_offloads	datapath/linux/compat/stt.c	/^static struct sk_buff *handle_offloads(struct sk_buff *skb, int min_headroom)$/;"	f	file:
handle_offloads	datapath/linux/stt.c	/^static struct sk_buff *handle_offloads(struct sk_buff *skb, int min_headroom)$/;"	f	file:
handle_packet_out	ofproto/ofproto.c	/^handle_packet_out(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_physical	vtep/ovs-vtep	/^def handle_physical():$/;"	f
handle_port_desc_stats_request	ofproto/ofproto.c	/^handle_port_desc_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_port_mod	ofproto/ofproto.c	/^handle_port_mod(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_port_request	ofproto/ofproto.c	/^handle_port_request(struct ofconn *ofconn,$/;"	f	file:
handle_port_stats_request	ofproto/ofproto.c	/^handle_port_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_promiscuous	xenserver/etc_xensource_scripts_vif	/^handle_promiscuous()$/;"	f
handle_queue_get_config_request	ofproto/ofproto.c	/^handle_queue_get_config_request(struct ofconn *ofconn,$/;"	f	file:
handle_queue_stats_dump_cb	ofproto/ofproto.c	/^handle_queue_stats_dump_cb(uint32_t queue_id,$/;"	f	file:
handle_queue_stats_for_port	ofproto/ofproto.c	/^handle_queue_stats_for_port(struct ofport *port, uint32_t queue_id,$/;"	f	file:
handle_queue_stats_request	ofproto/ofproto.c	/^handle_queue_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_role_request	ofproto/ofproto.c	/^handle_role_request(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_rpc	tests/test-jsonrpc.c	/^handle_rpc(struct jsonrpc *rpc, struct jsonrpc_msg *msg, bool *done)$/;"	f	file:
handle_rpc	tests/test-jsonrpc.py	/^def handle_rpc(rpc, msg):$/;"	f
handle_set_config	ofproto/ofproto.c	/^handle_set_config(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_table_desc_request	ofproto/ofproto.c	/^handle_table_desc_request(struct ofconn *ofconn,$/;"	f	file:
handle_table_features_request	ofproto/ofproto.c	/^handle_table_features_request(struct ofconn *ofconn,$/;"	f	file:
handle_table_mod	ofproto/ofproto.c	/^handle_table_mod(struct ofconn *ofconn, const struct ofp_header *oh)$/;"	f	file:
handle_table_stats_request	ofproto/ofproto.c	/^handle_table_stats_request(struct ofconn *ofconn,$/;"	f	file:
handle_upcalls	ofproto/ofproto-dpif-upcall.c	/^handle_upcalls(struct udpif *udpif, struct upcall *upcalls,$/;"	f	file:
handle_vswitch_vif_details	xenserver/etc_xensource_scripts_vif	/^handle_vswitch_vif_details()$/;"	f
handler	datapath-windows/ovsext/Datapath.c	/^    NetlinkCmdHandler *handler;$/;"	m	struct:_NETLINK_CMD	file:
handler	datapath/linux/compat/gre.c	/^	int  (*handler)(struct sk_buff *skb);$/;"	m	struct:gre_protocol	file:
handler	datapath/linux/compat/include/net/gre.h	/^	int (*handler)(struct sk_buff *skb, const struct tnl_ptk_info *tpi);$/;"	m	struct:gre_cisco_protocol
handler	datapath/linux/gre.c	/^	int  (*handler)(struct sk_buff *skb);$/;"	m	struct:gre_protocol	file:
handler	lib/command-line.h	/^    ovs_cmdl_handler handler;$/;"	m	struct:ovs_cmdl_command
handler	lib/dpctl.c	/^    dpctl_command_handler *handler;$/;"	m	struct:dpctl_command	file:
handler	ofproto/ipfix-gen-entities	/^import xml.sax.handler$/;"	i
handler	ofproto/ofproto-dpif-upcall.c	/^struct handler {$/;"	s	file:
handler	ovsdb/ovsdb-client.c	/^    void (*handler)(struct jsonrpc *rpc, const char *database,$/;"	m	struct:ovsdb_client_command	file:
handler	tests/test-daemon.py	/^def handler(signum, _):$/;"	f
handler_duplicate_upcall	ofproto/ofproto-dpif-upcall.c	/^COVERAGE_DEFINE(handler_duplicate_upcall);$/;"	v
handler_id	ofproto/ofproto-dpif-upcall.c	/^    uint32_t handler_id;               \/* Handler id. *\/$/;"	m	struct:handler	file:
handlers	lib/dpif-netlink.c	/^    struct dpif_handler *handlers;$/;"	m	struct:dpif_netlink	typeref:struct:dpif_netlink::dpif_handler	file:
handlers	ofproto/ofproto-dpif-upcall.c	/^    struct handler *handlers;          \/* Upcall handlers. *\/$/;"	m	struct:udpif	typeref:struct:udpif::handler	file:
handlers	python/ovs/vlog.py	/^import logging.handlers$/;"	i
handlers_set	lib/dpif-provider.h	/^    int (*handlers_set)(struct dpif *dpif, uint32_t n_handlers);$/;"	m	struct:dpif_class
hard	ofproto/ofproto-dpif-xlate.c	/^            uint16_t hard;$/;"	m	struct:xc_entry::__anon188::__anon195	file:
hard_age	include/openflow/nicira-ext.h	/^    ovs_be16 hard_age;        \/* Seconds since last modification, plus one. *\/$/;"	m	struct:nx_flow_stats
hard_age	lib/ofp-util.h	/^    int hard_age;               \/* Seconds since last change, -1 if unknown. *\/$/;"	m	struct:ofputil_flow_stats
hard_timeout	include/openflow/nicira-ext.h	/^    ovs_be16 hard_timeout;        \/* Max time before discarding (seconds). *\/$/;"	m	struct:nx_flow_mod
hard_timeout	include/openflow/nicira-ext.h	/^    ovs_be16 hard_timeout;      \/* Number of seconds before expiration. *\/$/;"	m	struct:nx_flow_update_full
hard_timeout	include/openflow/nicira-ext.h	/^    ovs_be16 hard_timeout;    \/* Number of seconds before expiration. *\/$/;"	m	struct:nx_flow_stats
hard_timeout	include/openflow/openflow-1.0.h	/^    ovs_be16 hard_timeout;        \/* Max time before discarding (seconds). *\/$/;"	m	struct:ofp10_flow_mod
hard_timeout	include/openflow/openflow-1.0.h	/^    ovs_be16 hard_timeout;    \/* Number of seconds before expiration. *\/$/;"	m	struct:ofp10_flow_stats
hard_timeout	include/openflow/openflow-1.1.h	/^    ovs_be16 hard_timeout;       \/* Max time before discarding (seconds). *\/$/;"	m	struct:ofp11_flow_mod
hard_timeout	include/openflow/openflow-1.1.h	/^    ovs_be16 hard_timeout;     \/* Number of seconds before expiration. *\/$/;"	m	struct:ofp11_flow_stats
hard_timeout	include/openflow/openflow-1.2.h	/^    ovs_be16 hard_timeout;    \/* Hard timeout from original flow mod. *\/$/;"	m	struct:ofp12_flow_removed
hard_timeout	lib/ofp-actions.c	/^    ovs_be16 hard_timeout;      \/* Max time before discarding (seconds). *\/$/;"	m	struct:nx_action_learn	file:
hard_timeout	lib/ofp-actions.h	/^    uint16_t hard_timeout;      \/* Max time before discarding (seconds). *\/$/;"	m	struct:ofpact_learn
hard_timeout	lib/ofp-util.h	/^    uint16_t hard_timeout;$/;"	m	struct:ofputil_flow_mod
hard_timeout	lib/ofp-util.h	/^    uint16_t hard_timeout;$/;"	m	struct:ofputil_flow_removed
hard_timeout	lib/ofp-util.h	/^    uint16_t hard_timeout;$/;"	m	struct:ofputil_flow_stats
hard_timeout	lib/ofp-util.h	/^    uint16_t hard_timeout;$/;"	m	struct:ofputil_flow_update
hard_timeout	utilities/ovs-ofctl.c	/^    uint16_t hard_timeout;$/;"	m	struct:fte_version	file:
harmonize_features	datapath/linux/compat/netdevice.c	/^static netdev_features_t harmonize_features(struct sk_buff *skb,$/;"	f	file:
harmonize_features	datapath/linux/netdevice.c	/^static netdev_features_t harmonize_features(struct sk_buff *skb,$/;"	f	file:
has_arg	include/windows/getopt.h	/^	int has_arg;$/;"	m	struct:option
has_bonded_bundles	ofproto/ofproto-dpif.c	/^    bool has_bonded_bundles;$/;"	m	struct:ofproto_dpif	file:
has_constraints	python/ovs/db/types.py	/^    def has_constraints(self):$/;"	m	class:BaseType
has_ever_connected	python/ovs/db/idl.py	/^    def has_ever_connected(self):$/;"	m	class:Idl
has_in_band	ofproto/ofproto-dpif-xlate.c	/^    bool has_in_band;             \/* Bridge has in band control? *\/$/;"	m	struct:xbridge	file:
has_learn_with_delete	ofproto/ofproto-provider.h	/^    bool has_learn_with_delete;$/;"	m	struct:rule_actions
has_lock	lib/ovsdb-idl.c	/^    bool has_lock;              \/* Has db server told us we have the lock? *\/$/;"	m	struct:ovsdb_idl	file:
has_meter	ofproto/ofproto-provider.h	/^    bool has_meter;$/;"	m	struct:rule_actions
has_mirrors	ofproto/ofproto-dpif-mirror.c	/^    bool has_mirrors;$/;"	m	struct:mbridge	file:
has_pmd_port_for_numa	lib/dpif-netdev.c	/^has_pmd_port_for_numa(struct dp_netdev *dp, int numa_id)$/;"	f	file:
has_port	ofproto/ofproto-dpif.c	/^    bool has_port;$/;"	m	struct:port_dump_state	file:
has_run	lib/netlink-notifier.c	/^    bool has_run;                \/* Guard for run and wait functions. *\/$/;"	m	struct:nln	file:
has_stateful_acl	ovn/northd/ovn-northd.c	/^has_stateful_acl(struct ovn_datapath *od)$/;"	f	file:
has_unknown	ovn/northd/ovn-northd.c	/^    bool has_unknown;$/;"	m	struct:ovn_datapath	file:
hash	datapath-windows/ovsext/Flow.h	/^    UINT64 hash;$/;"	m	struct:_OvsFlow
hash	datapath/flow.h	/^		u32 hash;$/;"	m	struct:sw_flow::__anon41
hash	lib/dpif-netdev.c	/^    uint32_t hash;       \/* Hash function differs for different users. *\/$/;"	m	struct:netdev_flow_key	file:
hash	lib/hindex.h	/^    size_t hash;$/;"	m	struct:hindex_node
hash	lib/hmap.h	/^    size_t hash;                \/* Hash value. *\/$/;"	m	struct:hmap_node
hash	ofproto/bond.c	/^    struct bond_entry *hash;     \/* An array of BOND_BUCKETS elements. *\/$/;"	m	struct:bond	typeref:struct:bond::bond_entry	file:
hash	ofproto/ofproto-dpif-rid.h	/^    uint32_t hash;$/;"	m	struct:recirc_id_node
hash	ofproto/ofproto-dpif-upcall.c	/^    uint32_t hash;                 \/* Pre-computed hash for 'key'. *\/$/;"	m	struct:udpif_key	file:
hash_2words	lib/hash.h	/^static inline uint32_t hash_2words(uint32_t x, uint32_t y)$/;"	f
hash_3words	lib/hash.c	/^hash_3words(uint32_t a, uint32_t b, uint32_t c)$/;"	f
hash_add	lib/hash.h	/^static inline uint32_t hash_add(uint32_t hash, uint32_t data)$/;"	f
hash_add64	lib/hash.h	/^static inline uint32_t hash_add64(uint32_t hash, uint64_t data)$/;"	f
hash_alg	datapath/linux/compat/include/linux/openvswitch.h	/^	uint32_t  hash_alg;     \/* One of ovs_hash_alg. *\/$/;"	m	struct:ovs_action_hash
hash_alg	include/odp-netlink.h	/^	uint32_t  hash_alg;     \/* One of ovs_hash_alg. *\/$/;"	m	struct:ovs_action_hash
hash_alg	ofproto/ofproto-dpif-xlate.c	/^    uint8_t  hash_alg;   \/* !0 Compute hash for recirc before. *\/$/;"	m	struct:xlate_bond_recirc	file:
hash_atoms	lib/ovsdb-data.c	/^hash_atoms(enum ovsdb_atomic_type type, const union ovsdb_atom *atoms,$/;"	f	file:
hash_basis	datapath/linux/compat/include/linux/openvswitch.h	/^	uint32_t  hash_basis;$/;"	m	struct:ovs_action_hash
hash_basis	include/odp-netlink.h	/^	uint32_t  hash_basis;$/;"	m	struct:ovs_action_hash
hash_basis	ofproto/ofproto-dpif-xlate.c	/^    uint32_t hash_basis;  \/* Compute hash for recirc before. *\/$/;"	m	struct:xlate_bond_recirc	file:
hash_boolean	lib/hash.h	/^static inline uint32_t hash_boolean(bool x, uint32_t basis)$/;"	f
hash_bucket	datapath/linux/vport.c	/^static struct hlist_head *hash_bucket(const struct net *net, const char *name)$/;"	f	file:
hash_bucket	datapath/vport.c	/^static struct hlist_head *hash_bucket(const struct net *net, const char *name)$/;"	f	file:
hash_bytes	lib/hash.c	/^hash_bytes(const void *p_, size_t n, uint32_t basis)$/;"	f
hash_bytes128	lib/hash.c	/^hash_bytes128(const void *p_, size_t len, uint32_t basis, ovs_u128 *out)$/;"	f
hash_cookie	ofproto/ofproto.c	/^hash_cookie(ovs_be64 cookie)$/;"	f	file:
hash_double	lib/hash.c	/^hash_double(double x, uint32_t basis)$/;"	f
hash_finish	lib/hash.h	/^static inline uint32_t hash_finish(uint32_t hash, uint32_t final)$/;"	f
hash_finish	lib/hash.h	/^static inline uint32_t hash_finish(uint64_t hash, uint64_t final)$/;"	f
hash_func	tests/test-cmap.c	/^typedef size_t hash_func(int value);$/;"	t	file:
hash_func	tests/test-hindex.c	/^typedef size_t hash_func(int value);$/;"	t	file:
hash_func	tests/test-hmap.c	/^typedef size_t hash_func(int value);$/;"	t	file:
hash_int	lib/hash.h	/^static inline uint32_t hash_int(uint32_t x, uint32_t basis)$/;"	f
hash_int_cb	tests/test-hash.c	/^hash_int_cb(uint32_t input)$/;"	f	file:
hash_learned_cookie	ofproto/ofproto.c	/^hash_learned_cookie(ovs_be64 cookie_, uint8_t table_id)$/;"	f	file:
hash_mac	lib/packets.h	/^static inline uint32_t hash_mac(const struct eth_addr ea,$/;"	f
hash_mpid	lib/cfm.c	/^hash_mpid(uint64_t mpid)$/;"	f	file:
hash_name	lib/shash.c	/^hash_name(const char *name)$/;"	f	file:
hash_name	lib/simap.c	/^hash_name(const char *name, size_t length)$/;"	f	file:
hash_name	lib/sset.c	/^hash_name(const char *name)$/;"	f	file:
hash_name__	lib/sset.c	/^hash_name__(const char *name, size_t length)$/;"	f	file:
hash_node	datapath/vport.h	/^	struct hlist_node hash_node;$/;"	m	struct:vport	typeref:struct:vport::hlist_node
hash_nxt	lib/sflow_api.h	/^    struct _SFLSampler *hash_nxt;$/;"	m	struct:_SFLSampler	typeref:struct:_SFLSampler::_SFLSampler
hash_pointer	lib/hash.h	/^static inline uint32_t hash_pointer(const void *p, uint32_t basis)$/;"	f
hash_port_no	lib/dpif-netdev.c	/^hash_port_no(odp_port_t port_no)$/;"	f	file:
hash_realdev_vid	ofproto/ofproto-dpif.c	/^hash_realdev_vid(ofp_port_t realdev_ofp_port, int vid)$/;"	f	file:
hash_rot	lib/hash.h	/^hash_rot(uint32_t x, int k)$/;"	f
hash_rot64	lib/hash.c	/^hash_rot64(uint64_t x, int8_t r)$/;"	f	file:
hash_seed	datapath/flow_table.h	/^	u32 hash_seed;$/;"	m	struct:table_instance
hash_string	lib/hash.h	/^static inline uint32_t hash_string(const char *s, uint32_t basis)$/;"	f
hash_uint64	lib/hash.h	/^static inline uint32_t hash_uint64(const uint64_t x)$/;"	f
hash_uint64_basis	lib/hash.h	/^static inline uint32_t hash_uint64_basis(const uint64_t x,$/;"	f
hash_words	lib/hash.h	/^hash_words(const uint32_t p[], size_t n_words, uint32_t basis)$/;"	f
hash_words64	lib/hash.h	/^hash_words64(const uint64_t p[], size_t n_words, uint32_t basis)$/;"	f
hash_words64__	lib/hash.c	/^hash_words64__(const uint64_t p[], size_t n_words, uint32_t basis)$/;"	f
hash_words64_inline	lib/hash.h	/^hash_words64_inline(const uint64_t p[], size_t n_words, uint32_t basis)$/;"	f
hash_words__	lib/hash.c	/^hash_words__(const uint32_t p[], size_t n_words, uint32_t basis)$/;"	f
hash_words_cb	tests/test-hash.c	/^hash_words_cb(uint32_t input)$/;"	f	file:
hash_words_inline	lib/hash.h	/^hash_words_inline(const uint32_t p[], size_t n_words, uint32_t basis)$/;"	f
hash_words_inline	lib/hash.h	/^hash_words_inline(const uint32_t p_[], size_t n_words, uint32_t basis)$/;"	f
hashes	lib/cmap.c	/^    uint32_t hashes[CMAP_K];$/;"	m	struct:cmap_bucket	file:
have_generation_id	lib/ofp-util.h	/^    bool have_generation_id;$/;"	m	struct:ofputil_role_request
have_recirc_ref	ofproto/ofproto-dpif-upcall.c	/^    bool have_recirc_ref;                \/* Reference held on recirc ctx? *\/$/;"	m	struct:upcall	file:
hdrExtLen	datapath-windows/ovsext/NetProto.h	/^    UINT8        hdrExtLen;  \/\/ length of header extensions (beyond 8 bytes)$/;"	m	struct:IPv6ExtHdr
hdrInfo	datapath-windows/ovsext/User.h	/^    OVS_PACKET_HDR_INFO hdrInfo;$/;"	m	struct:_OVS_PACKET_QUEUE_ELEM
hdrs	lib/ofp-actions.c	/^    struct ofpact_hdrs hdrs;$/;"	m	struct:ofpact_raw_instance	typeref:struct:ofpact_raw_instance::ofpact_hdrs	file:
hdrs	lib/ofp-msgs.c	/^    struct ofphdrs hdrs;        \/* Key. *\/$/;"	m	struct:raw_instance	typeref:struct:raw_instance::ofphdrs	file:
hdrs_len	lib/ofp-msgs.c	/^    unsigned int hdrs_len;      \/* ofphdrs_len(hdrs). *\/$/;"	m	struct:raw_instance	file:
hdrsize	datapath/linux/compat/include/net/genetlink.h	/^	unsigned int            hdrsize;$/;"	m	struct:rpl_genl_family
he	utilities/ovs-l3ping	/^            he = (args.client[2][0], args.client[2][1],$/;"	v
head	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^    PCHAR head;         \/* start address of the buffer *\/$/;"	m	struct:_NL_BUF
head	datapath-windows/ovsext/TunnelFilter.c	/^    LIST_ENTRY     head;$/;"	m	struct:_OVS_TUNFLT_REQUEST_LIST	file:
head	datapath/actions.c	/^	int head;$/;"	m	struct:action_fifo	file:
head	datapath/linux/actions.c	/^	int head;$/;"	m	struct:action_fifo	file:
head	lib/byteq.h	/^    unsigned int head;          \/* Head of queue. *\/$/;"	m	struct:byteq
head	lib/stream-ssl.c	/^    uint8_t head[2];$/;"	m	struct:ssl_stream	file:
head_frag	datapath/linux/compat/skbuff-openvswitch.c	/^static inline bool head_frag(const struct sk_buff *skb)$/;"	f	file:
head_frag	datapath/linux/skbuff-openvswitch.c	/^static inline bool head_frag(const struct sk_buff *skb)$/;"	f	file:
head_table	tests/testsuite	/^head_table () {$/;"	f
head_table	tests/testsuite	/^head_table() {$/;"	f
header	datapath/linux/compat/include/linux/openvswitch.h	/^	uint8_t  header[TNL_PUSH_HEADER_SIZE];$/;"	m	struct:ovs_action_push_tnl
header	include/odp-netlink.h	/^	uint8_t  header[TNL_PUSH_HEADER_SIZE];$/;"	m	struct:ovs_action_push_tnl
header	include/openflow/nicira-ext.h	/^    struct ofp_header header;$/;"	m	struct:nicira_header	typeref:struct:nicira_header::ofp_header
header	include/openflow/openflow-1.0.h	/^    struct ofp_header header;$/;"	m	struct:ofp10_stats_msg	typeref:struct:ofp10_stats_msg::ofp_header
header	include/openflow/openflow-1.1.h	/^    struct ofp_header header;$/;"	m	struct:ofp11_stats_msg	typeref:struct:ofp11_stats_msg::ofp_header
header	include/openflow/openflow-1.4.h	/^    struct ofp_header header;$/;"	m	struct:ofp14_async_config	typeref:struct:ofp14_async_config::ofp_header
header	include/openflow/openflow-common.h	/^    struct ofp_header header;   \/* Type OFPT_VENDOR or OFPT_EXPERIMENTER. *\/$/;"	m	struct:ofp_vendor_header	typeref:struct:ofp_vendor_header::ofp_header
header	lib/nx-match.c	/^    uint64_t header;$/;"	m	struct:nxm_field	file:
header	lib/ofpbuf.h	/^    void *header;               \/* OpenFlow header. *\/$/;"	m	struct:ofpbuf
header	lib/sflow.h	/^    SFLSampled_header header;$/;"	m	union:_SFLFlow_type
header	lib/vswitch-idl.h	/^	int64_t *header;$/;"	m	struct:ovsrec_sflow
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_autoattach	typeref:struct:ovsrec_autoattach::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_controller	typeref:struct:ovsrec_controller::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_flow_sample_collector_set	typeref:struct:ovsrec_flow_sample_collector_set::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_flow_table	typeref:struct:ovsrec_flow_table::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_ipfix	typeref:struct:ovsrec_ipfix::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_manager	typeref:struct:ovsrec_manager::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_mirror	typeref:struct:ovsrec_mirror::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_netflow	typeref:struct:ovsrec_netflow::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_open_vswitch	typeref:struct:ovsrec_open_vswitch::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_port	typeref:struct:ovsrec_port::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_qos	typeref:struct:ovsrec_qos::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_queue	typeref:struct:ovsrec_queue::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_sflow	typeref:struct:ovsrec_sflow::ovsdb_idl_row
header_	lib/vswitch-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:ovsrec_ssl	typeref:struct:ovsrec_ssl::ovsdb_idl_row
header_	ovn/lib/ovn-nb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:nbrec_acl	typeref:struct:nbrec_acl::ovsdb_idl_row
header_	ovn/lib/ovn-nb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:nbrec_logical_port	typeref:struct:nbrec_logical_port::ovsdb_idl_row
header_	ovn/lib/ovn-nb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:nbrec_logical_router	typeref:struct:nbrec_logical_router::ovsdb_idl_row
header_	ovn/lib/ovn-nb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:nbrec_logical_router_port	typeref:struct:nbrec_logical_router_port::ovsdb_idl_row
header_	ovn/lib/ovn-nb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:nbrec_logical_switch	typeref:struct:nbrec_logical_switch::ovsdb_idl_row
header_	ovn/lib/ovn-sb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:sbrec_chassis	typeref:struct:sbrec_chassis::ovsdb_idl_row
header_	ovn/lib/ovn-sb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:sbrec_datapath_binding	typeref:struct:sbrec_datapath_binding::ovsdb_idl_row
header_	ovn/lib/ovn-sb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:sbrec_encap	typeref:struct:sbrec_encap::ovsdb_idl_row
header_	ovn/lib/ovn-sb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:sbrec_logical_flow	typeref:struct:sbrec_logical_flow::ovsdb_idl_row
header_	ovn/lib/ovn-sb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:sbrec_multicast_group	typeref:struct:sbrec_multicast_group::ovsdb_idl_row
header_	ovn/lib/ovn-sb-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:sbrec_port_binding	typeref:struct:sbrec_port_binding::ovsdb_idl_row
header_	tests/idltest.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:idltest_link1	typeref:struct:idltest_link1::ovsdb_idl_row
header_	tests/idltest.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:idltest_link2	typeref:struct:idltest_link2::ovsdb_idl_row
header_	tests/idltest.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:idltest_simple	typeref:struct:idltest_simple::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_acl	typeref:struct:vteprec_acl::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_acl_entry	typeref:struct:vteprec_acl_entry::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_arp_sources_local	typeref:struct:vteprec_arp_sources_local::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_arp_sources_remote	typeref:struct:vteprec_arp_sources_remote::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_global	typeref:struct:vteprec_global::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_logical_binding_stats	typeref:struct:vteprec_logical_binding_stats::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_logical_router	typeref:struct:vteprec_logical_router::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_logical_switch	typeref:struct:vteprec_logical_switch::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_manager	typeref:struct:vteprec_manager::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_mcast_macs_local	typeref:struct:vteprec_mcast_macs_local::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_mcast_macs_remote	typeref:struct:vteprec_mcast_macs_remote::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_physical_locator	typeref:struct:vteprec_physical_locator::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_physical_locator_set	typeref:struct:vteprec_physical_locator_set::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_physical_port	typeref:struct:vteprec_physical_port::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_physical_switch	typeref:struct:vteprec_physical_switch::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_tunnel	typeref:struct:vteprec_tunnel::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_ucast_macs_local	typeref:struct:vteprec_ucast_macs_local::ovsdb_idl_row
header_	vtep/vtep-idl.h	/^	struct ovsdb_idl_row header_;$/;"	m	struct:vteprec_ucast_macs_remote	typeref:struct:vteprec_ucast_macs_remote::ovsdb_idl_row
header_bytes	lib/sflow.h	/^    u_int8_t *header_bytes;               \/* Header bytes *\/$/;"	m	struct:_SFLSampled_header
header_len	datapath/linux/compat/include/linux/openvswitch.h	/^	uint32_t header_len;$/;"	m	struct:ovs_action_push_tnl
header_len	include/odp-netlink.h	/^	uint32_t header_len;$/;"	m	struct:ovs_action_push_tnl
header_len	ofproto/ofproto.h	/^    uint32_t header_len;$/;"	m	struct:ofproto_sflow_options
header_length	lib/sflow.h	/^    u_int32_t header_length;              \/* length of sampled header bytes to follow *\/$/;"	m	struct:_SFLSampled_header
header_node	lib/nx-match.c	/^    struct hmap_node header_node; \/* In nxm_header_map. *\/$/;"	m	struct:nxm_field_index	typeref:struct:nxm_field_index::hmap_node	file:
header_protocol	lib/sflow.h	/^    u_int32_t header_protocol;            \/* (enum SFLHeader_protocol) *\/$/;"	m	struct:_SFLSampled_header
heading	lib/table.c	/^    char *heading;$/;"	m	struct:column	file:
headings	lib/table.h	/^    bool headings;              \/* Include headings? *\/$/;"	m	struct:table_style
health	lib/cfm.c	/^    int health;               \/* Percentage of the number of CCM frames$/;"	m	struct:cfm	file:
health	lib/cfm.h	/^    int health;$/;"	m	struct:cfm_status
health_interval	lib/cfm.c	/^    int health_interval;      \/* Number of fault_intervals since health was$/;"	m	struct:cfm	file:
heap	lib/heap.h	/^struct heap {$/;"	s
heap_change	lib/heap.c	/^heap_change(struct heap *heap, struct heap_node *node, uint64_t priority)$/;"	f
heap_clear	lib/heap.c	/^heap_clear(struct heap *heap)$/;"	f
heap_count	lib/heap.h	/^heap_count(const struct heap *heap)$/;"	f
heap_destroy	lib/heap.c	/^heap_destroy(struct heap *heap)$/;"	f
heap_init	lib/heap.c	/^heap_init(struct heap *heap)$/;"	f
heap_insert	lib/heap.c	/^heap_insert(struct heap *heap, struct heap_node *node, uint64_t priority)$/;"	f
heap_is_empty	lib/heap.h	/^heap_is_empty(const struct heap *heap)$/;"	f
heap_is_leaf__	lib/heap.h	/^heap_is_leaf__(const struct heap *heap, size_t idx)$/;"	f
heap_left__	lib/heap.h	/^heap_left__(size_t idx)$/;"	f
heap_max	lib/heap.h	/^heap_max(const struct heap *heap)$/;"	f
heap_node	lib/heap.h	/^struct heap_node {$/;"	s
heap_node	lib/mac-learning.h	/^    struct heap_node heap_node; \/* In mac_learning's "ports_by_usage". *\/$/;"	m	struct:mac_learning_port	typeref:struct:mac_learning_port::heap_node
heap_node	ofproto/ofproto-dpif-monitor.c	/^    struct heap_node heap_node;       \/* In monitor_heap. *\/$/;"	m	struct:mport	typeref:struct:mport::heap_node	file:
heap_node	tests/test-heap.c	/^    struct heap_node heap_node;$/;"	m	struct:element	typeref:struct:element::heap_node	file:
heap_parent__	lib/heap.h	/^heap_parent__(size_t idx)$/;"	f
heap_pop	lib/heap.h	/^heap_pop(struct heap *heap)$/;"	f
heap_raw_change	lib/heap.h	/^heap_raw_change(struct heap_node *node, uint64_t priority)$/;"	f
heap_raw_insert	lib/heap.c	/^heap_raw_insert(struct heap *heap, struct heap_node *node, uint64_t priority)$/;"	f
heap_raw_remove	lib/heap.c	/^heap_raw_remove(struct heap *heap, struct heap_node *node)$/;"	f
heap_rebuild	lib/heap.c	/^heap_rebuild(struct heap *heap)$/;"	f
heap_remove	lib/heap.c	/^heap_remove(struct heap *heap, struct heap_node *node)$/;"	f
heap_right__	lib/heap.h	/^heap_right__(size_t idx)$/;"	f
heap_swap	lib/heap.c	/^heap_swap(struct heap *a, struct heap *b)$/;"	f
height	lib/json.c	/^    size_t height, allocated_height;$/;"	m	struct:json_parser	file:
helement	tests/test-cmap.c	/^struct helement {$/;"	s	file:
hello_time	lib/rstp-common.h	/^    uint16_t hello_time;$/;"	m	struct:rstp_times
hello_time	lib/stp.c	/^    int hello_time;                 \/* 8.5.3.5: Time between sending BPDUs. *\/$/;"	m	struct:stp	file:
hello_time	ofproto/ofproto.h	/^    uint16_t hello_time;$/;"	m	struct:ofproto_stp_settings
hello_timer	lib/stp.c	/^    struct stp_timer hello_timer;   \/* 8.5.4.1: Hello timer. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_timer	file:
help	tests/ovstest.c	/^help(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
help	tests/test-classifier.c	/^help(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
help	tests/test-jsonrpc.py	/^                       help="Arguments to COMMAND.")$/;"	v
hex_to_uint8	tests/test-aes128.c	/^hex_to_uint8(const char *input, uint8_t *output, size_t n)$/;"	f	file:
hexit_value	lib/util.c	/^hexit_value(int c)$/;"	f
hexits_value	lib/util.c	/^hexits_value(const char *s, size_t n, bool *ok)$/;"	f
hfind	tests/test-cmap.c	/^hfind(const struct hmap *hmap, int value)$/;"	f	file:
hfsc	lib/netdev-linux.c	/^struct hfsc {$/;"	s	file:
hfsc_class	lib/netdev-linux.c	/^struct hfsc_class {$/;"	s	file:
hfsc_class_cast__	lib/netdev-linux.c	/^hfsc_class_cast__(const struct tc_queue *queue)$/;"	f	file:
hfsc_class_delete	lib/netdev-linux.c	/^hfsc_class_delete(struct netdev *netdev, struct tc_queue *queue)$/;"	f	file:
hfsc_class_dump_stats	lib/netdev-linux.c	/^hfsc_class_dump_stats(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
hfsc_class_get	lib/netdev-linux.c	/^hfsc_class_get(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
hfsc_class_get_stats	lib/netdev-linux.c	/^hfsc_class_get_stats(const struct netdev *netdev, const struct tc_queue *queue,$/;"	f	file:
hfsc_class_set	lib/netdev-linux.c	/^hfsc_class_set(struct netdev *netdev, unsigned int queue_id,$/;"	f	file:
hfsc_get__	lib/netdev-linux.c	/^hfsc_get__(const struct netdev *netdev_)$/;"	f	file:
hfsc_install__	lib/netdev-linux.c	/^hfsc_install__(struct netdev *netdev_, uint32_t max_rate)$/;"	f	file:
hfsc_parse_class_details__	lib/netdev-linux.c	/^hfsc_parse_class_details__(struct netdev *netdev,$/;"	f	file:
hfsc_parse_qdisc_details__	lib/netdev-linux.c	/^hfsc_parse_qdisc_details__(struct netdev *netdev_, const struct smap *details,$/;"	f	file:
hfsc_parse_tca_options__	lib/netdev-linux.c	/^hfsc_parse_tca_options__(struct nlattr *nl_options, struct hfsc_class *class)$/;"	f	file:
hfsc_parse_tcmsg__	lib/netdev-linux.c	/^hfsc_parse_tcmsg__(struct ofpbuf *tcmsg, unsigned int *queue_id,$/;"	f	file:
hfsc_qdisc_get	lib/netdev-linux.c	/^hfsc_qdisc_get(const struct netdev *netdev, struct smap *details)$/;"	f	file:
hfsc_qdisc_set	lib/netdev-linux.c	/^hfsc_qdisc_set(struct netdev *netdev, const struct smap *details)$/;"	f	file:
hfsc_query_class__	lib/netdev-linux.c	/^hfsc_query_class__(const struct netdev *netdev, unsigned int handle,$/;"	f	file:
hfsc_setup_class__	lib/netdev-linux.c	/^hfsc_setup_class__(struct netdev *netdev, unsigned int handle,$/;"	f	file:
hfsc_setup_qdisc__	lib/netdev-linux.c	/^hfsc_setup_qdisc__(struct netdev * netdev)$/;"	f	file:
hfsc_tc_destroy	lib/netdev-linux.c	/^hfsc_tc_destroy(struct tc *tc)$/;"	f	file:
hfsc_tc_install	lib/netdev-linux.c	/^hfsc_tc_install(struct netdev *netdev, const struct smap *details)$/;"	f	file:
hfsc_tc_load	lib/netdev-linux.c	/^hfsc_tc_load(struct netdev *netdev, struct ofpbuf *nlmsg OVS_UNUSED)$/;"	f	file:
hfsc_update_queue__	lib/netdev-linux.c	/^hfsc_update_queue__(struct netdev *netdev, unsigned int queue_id,$/;"	f	file:
hi	include/openvswitch/types.h	/^        ovs_be16 hi, lo;$/;"	m	struct:__anon59
hi	include/openvswitch/types.h	/^        ovs_be32 hi, lo;$/;"	m	struct:__anon65
hi	include/openvswitch/types.h	/^        ovs_be64 hi, lo;$/;"	m	struct:__anon63::__anon64
hi	include/openvswitch/types.h	/^        uint16_t hi, lo;$/;"	m	struct:__anon58
hi	include/openvswitch/types.h	/^        uint32_t hi, lo;$/;"	m	struct:__anon60
hi	include/openvswitch/types.h	/^        uint64_t hi, lo;$/;"	m	struct:__anon61::__anon62
hindex	lib/hindex.h	/^struct hindex {$/;"	s
hindex_calc_mask	lib/hindex.c	/^hindex_calc_mask(size_t capacity)$/;"	f	file:
hindex_clear	lib/hindex.c	/^hindex_clear(struct hindex *hindex)$/;"	f
hindex_destroy	lib/hindex.c	/^hindex_destroy(struct hindex *hindex)$/;"	f
hindex_expand	lib/hindex.c	/^COVERAGE_DEFINE(hindex_expand);$/;"	v
hindex_expand	lib/hindex.c	/^hindex_expand(struct hindex *hindex)$/;"	f
hindex_first	lib/hindex.c	/^hindex_first(const struct hindex *hindex)$/;"	f
hindex_head_node	lib/hindex.c	/^hindex_head_node(const struct hindex *hindex, size_t hash)$/;"	f	file:
hindex_init	lib/hindex.c	/^hindex_init(struct hindex *hindex)$/;"	f
hindex_insert	lib/hindex.c	/^hindex_insert(struct hindex *hindex, struct hindex_node *node, size_t hash)$/;"	f
hindex_insert_fast	lib/hindex.c	/^hindex_insert_fast(struct hindex *hindex,$/;"	f
hindex_is_empty	lib/hindex.h	/^hindex_is_empty(const struct hindex *hindex)$/;"	f
hindex_moved	lib/hindex.c	/^hindex_moved(struct hindex *hindex)$/;"	f
hindex_next	lib/hindex.c	/^hindex_next(const struct hindex *hindex, const struct hindex_node *node)$/;"	f
hindex_next__	lib/hindex.c	/^hindex_next__(const struct hindex *hindex, size_t start)$/;"	f	file:
hindex_node	lib/hindex.h	/^struct hindex_node {$/;"	s
hindex_node_is_body	lib/hindex.c	/^hindex_node_is_body(const struct hindex_node *node)$/;"	f	file:
hindex_node_is_head	lib/hindex.c	/^hindex_node_is_head(const struct hindex_node *node)$/;"	f	file:
hindex_node_with_hash	lib/hindex.h	/^hindex_node_with_hash(const struct hindex *hindex, size_t hash)$/;"	f
hindex_pathological	lib/hindex.c	/^COVERAGE_DEFINE(hindex_pathological);$/;"	v
hindex_remove	lib/hindex.c	/^hindex_remove(struct hindex *hindex, struct hindex_node *node)$/;"	f
hindex_reserve	lib/hindex.c	/^COVERAGE_DEFINE(hindex_reserve);$/;"	v
hindex_reserve	lib/hindex.c	/^hindex_reserve(struct hindex *hindex, size_t n)$/;"	f
hindex_resize	lib/hindex.c	/^hindex_resize(struct hindex *hindex, size_t new_mask)$/;"	f	file:
hindex_shrink	lib/hindex.c	/^COVERAGE_DEFINE(hindex_shrink);$/;"	v
hindex_shrink	lib/hindex.c	/^hindex_shrink(struct hindex *hindex)$/;"	f
hindex_swap	lib/hindex.c	/^hindex_swap(struct hindex *a, struct hindex *b)$/;"	f
hits	datapath-windows/ovsext/Switch.h	/^   UINT64                  hits;            \/\/ Number of flow table hits.$/;"	m	struct:_OVS_DATAPATH
hits	tests/test-classifier.c	/^    atomic_int hits;$/;"	m	struct:cls_aux	file:
hlen	datapath/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
hlen	datapath/linux/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
hlen	lib/dhcp.h	/^    uint8_t hlen;               \/* ETH_ADDR_LEN (typically). *\/$/;"	m	struct:dhcp_header
hlist	datapath/linux/compat/include/net/vxlan.h	/^	struct hlist_node hlist;$/;"	m	struct:vxlan_sock	typeref:struct:vxlan_sock::hlist_node
hlist_entry_safe	datapath/linux/compat/include/linux/list.h	7;"	d
hlist_first_rcu	datapath/linux/compat/include/linux/rculist.h	7;"	d
hlist_for_each_entry	datapath/linux/compat/include/linux/list.h	12;"	d
hlist_for_each_entry	datapath/linux/compat/include/linux/list.h	13;"	d
hlist_for_each_entry_rcu	datapath/linux/compat/include/linux/rculist.h	12;"	d
hlist_for_each_entry_rcu	datapath/linux/compat/include/linux/rculist.h	13;"	d
hlist_for_each_entry_safe	datapath/linux/compat/include/linux/list.h	18;"	d
hlist_for_each_entry_safe	datapath/linux/compat/include/linux/list.h	19;"	d
hlist_next_rcu	datapath/linux/compat/include/linux/rculist.h	8;"	d
hlist_pprev_rcu	datapath/linux/compat/include/linux/rculist.h	9;"	d
hmap	lib/hmap.c	/^VLOG_DEFINE_THIS_MODULE(hmap);$/;"	v
hmap	lib/hmap.h	/^struct hmap {$/;"	s
hmap	tests/test-cmap.c	/^    struct hmap *hmap;$/;"	m	struct:hmap_aux	typeref:struct:hmap_aux::hmap	file:
hmap_at_position	lib/hmap.c	/^hmap_at_position(const struct hmap *hmap,$/;"	f
hmap_aux	tests/test-cmap.c	/^struct hmap_aux {$/;"	s	file:
hmap_capacity	lib/hmap.h	/^hmap_capacity(const struct hmap *hmap)$/;"	f
hmap_clear	lib/hmap.c	/^hmap_clear(struct hmap *hmap)$/;"	f
hmap_contains	lib/hmap.c	/^hmap_contains(const struct hmap *hmap, const struct hmap_node *node)$/;"	f
hmap_count	lib/hmap.h	/^hmap_count(const struct hmap *hmap)$/;"	f
hmap_destroy	lib/hmap.c	/^hmap_destroy(struct hmap *hmap)$/;"	f
hmap_expand	lib/hmap.c	/^COVERAGE_DEFINE(hmap_expand);$/;"	v
hmap_expand	lib/hmap.h	88;"	d
hmap_expand_at	lib/hmap.c	/^hmap_expand_at(struct hmap *hmap, const char *where)$/;"	f
hmap_first	lib/hmap.h	/^hmap_first(const struct hmap *hmap)$/;"	f
hmap_first_in_bucket	lib/hmap.h	/^hmap_first_in_bucket(const struct hmap *hmap, size_t hash)$/;"	f
hmap_first_with_hash	lib/hmap.h	/^hmap_first_with_hash(const struct hmap *hmap, size_t hash)$/;"	f
hmap_init	lib/hmap.c	/^hmap_init(struct hmap *hmap)$/;"	f
hmap_insert	lib/hmap.h	100;"	d
hmap_insert_at	lib/hmap.h	/^hmap_insert_at(struct hmap *hmap, struct hmap_node *node, size_t hash,$/;"	f
hmap_insert_fast	lib/hmap.h	/^hmap_insert_fast(struct hmap *hmap, struct hmap_node *node, size_t hash)$/;"	f
hmap_is_empty	lib/hmap.h	/^hmap_is_empty(const struct hmap *hmap)$/;"	f
hmap_moved	lib/hmap.c	/^hmap_moved(struct hmap *hmap)$/;"	f
hmap_next	lib/hmap.h	/^hmap_next(const struct hmap *hmap, const struct hmap_node *node)$/;"	f
hmap_next__	lib/hmap.h	/^hmap_next__(const struct hmap *hmap, size_t start)$/;"	f
hmap_next_in_bucket	lib/hmap.h	/^hmap_next_in_bucket(const struct hmap_node *node)$/;"	f
hmap_next_with_hash	lib/hmap.h	/^hmap_next_with_hash(const struct hmap_node *node)$/;"	f
hmap_next_with_hash__	lib/hmap.h	/^hmap_next_with_hash__(const struct hmap_node *node, size_t hash)$/;"	f
hmap_node	lib/cfm.c	/^    struct hmap_node hmap_node; \/* Node in all_cfms list. *\/$/;"	m	struct:cfm	typeref:struct:cfm::hmap_node	file:
hmap_node	lib/classifier.c	/^    struct hmap_node hmap_node;$/;"	m	struct:conjunctive_match	typeref:struct:conjunctive_match::hmap_node	file:
hmap_node	lib/dpctl.c	/^    struct hmap_node hmap_node;$/;"	m	struct:actions_for_flow	typeref:struct:actions_for_flow::hmap_node	file:
hmap_node	lib/hmap.h	/^struct hmap_node {$/;"	s
hmap_node	lib/hmapx.h	/^    struct hmap_node hmap_node;$/;"	m	struct:hmapx_node	typeref:struct:hmapx_node::hmap_node
hmap_node	lib/learning-switch.c	/^    struct hmap_node hmap_node; \/* Hash node for port number. *\/$/;"	m	struct:lswitch_port	typeref:struct:lswitch_port::hmap_node	file:
hmap_node	lib/lockfile.c	/^    struct hmap_node hmap_node;$/;"	m	struct:lockfile	typeref:struct:lockfile::hmap_node	file:
hmap_node	lib/mac-learning.h	/^    struct hmap_node hmap_node; \/* In mac_learning's "ports_by_ptr". *\/$/;"	m	struct:mac_learning_port	typeref:struct:mac_learning_port::hmap_node
hmap_node	lib/mac-learning.h	/^    struct hmap_node hmap_node; \/* Node in a mac_learning hmap. *\/$/;"	m	struct:mac_entry	typeref:struct:mac_entry::hmap_node
hmap_node	lib/mcast-snooping.h	/^    struct hmap_node hmap_node;$/;"	m	struct:mcast_group	typeref:struct:mcast_group::hmap_node
hmap_node	lib/netdev-linux.c	/^    struct hmap_node hmap_node; \/* In struct tc's "queues" hmap. *\/$/;"	m	struct:tc_queue	typeref:struct:tc_queue::hmap_node	file:
hmap_node	lib/netlink-socket.c	/^    struct hmap_node hmap_node;$/;"	m	struct:genl_family	typeref:struct:genl_family::hmap_node	file:
hmap_node	lib/odp-util.h	/^    struct hmap_node hmap_node; \/* A node in a port number to name hmap. *\/$/;"	m	struct:odp_portno_names	typeref:struct:odp_portno_names::hmap_node
hmap_node	lib/ofp-msgs.c	/^    struct hmap_node hmap_node; \/* In 'raw_instance_map'. *\/$/;"	m	struct:raw_instance	typeref:struct:raw_instance::hmap_node	file:
hmap_node	lib/ovs-lldp.h	/^    struct hmap_node    hmap_node;        \/* Node in all_lldps list. *\/$/;"	m	struct:lldp	typeref:struct:lldp::hmap_node
hmap_node	lib/ovs-numa.c	/^    struct hmap_node hmap_node;     \/* In the 'all_numa_nodes'. *\/$/;"	m	struct:numa_node	typeref:struct:numa_node::hmap_node	file:
hmap_node	lib/ovs-numa.c	/^    struct hmap_node hmap_node;\/* In the 'all_cpu_cores'. *\/$/;"	m	struct:cpu_core	typeref:struct:cpu_core::hmap_node	file:
hmap_node	lib/ovsdb-idl-provider.h	/^    struct hmap_node hmap_node; \/* In struct ovsdb_idl_table's 'rows'. *\/$/;"	m	struct:ovsdb_idl_row	typeref:struct:ovsdb_idl_row::hmap_node
hmap_node	lib/ovsdb-idl.c	/^    struct hmap_node hmap_node; \/* In struct ovsdb_idl_txn's inserted_rows. *\/$/;"	m	struct:ovsdb_idl_txn_insert	typeref:struct:ovsdb_idl_txn_insert::hmap_node	file:
hmap_node	lib/ovsdb-idl.c	/^    struct hmap_node hmap_node;$/;"	m	struct:ovsdb_idl_txn	typeref:struct:ovsdb_idl_txn::hmap_node	file:
hmap_node	lib/pcap-file.c	/^    struct hmap_node hmap_node;$/;"	m	struct:tcp_stream	typeref:struct:tcp_stream::hmap_node	file:
hmap_node	lib/poll-loop.c	/^    struct hmap_node hmap_node;$/;"	m	struct:poll_node	typeref:struct:poll_node::hmap_node	file:
hmap_node	lib/sset.h	/^    struct hmap_node hmap_node;$/;"	m	struct:sset_node	typeref:struct:sset_node::hmap_node
hmap_node	lib/vlandev.h	/^    struct hmap_node hmap_node;     \/* In vlan_real_dev's "vlan_devs" map. *\/$/;"	m	struct:vlan_dev	typeref:struct:vlan_dev::hmap_node
hmap_node	ofproto/bond.c	/^    struct hmap_node hmap_node; \/* In 'all_bonds' hmap. *\/$/;"	m	struct:bond	typeref:struct:bond::hmap_node	file:
hmap_node	ofproto/bond.c	/^    struct hmap_node hmap_node; \/* In struct bond's slaves hmap. *\/$/;"	m	struct:bond_slave	typeref:struct:bond_slave::hmap_node	file:
hmap_node	ofproto/bond.c	/^    struct hmap_node hmap_node;$/;"	m	struct:bond_pr_rule_op	typeref:struct:bond_pr_rule_op::hmap_node	file:
hmap_node	ofproto/connmgr.c	/^    struct hmap_node hmap_node; \/* In struct connmgr's "controllers" map. *\/$/;"	m	struct:ofconn	typeref:struct:ofconn::hmap_node	file:
hmap_node	ofproto/in-band.c	/^    struct hmap_node hmap_node; \/* In struct in_band's "rules" hmap. *\/$/;"	m	struct:in_band_rule	typeref:struct:in_band_rule::hmap_node	file:
hmap_node	ofproto/netflow.c	/^    struct hmap_node hmap_node;$/;"	m	struct:netflow_flow	typeref:struct:netflow_flow::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-ipfix.c	/^    struct hmap_node hmap_node; \/* In struct dpif_ipfix's "tunnel_ports" hmap. *\/$/;"	m	struct:dpif_ipfix_port	typeref:struct:dpif_ipfix_port::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-mirror.c	/^    struct hmap_node hmap_node; \/* In parent 'mbridge' map. *\/$/;"	m	struct:mbundle	typeref:struct:mbundle::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-monitor.c	/^    struct hmap_node hmap_node;       \/* In monitor_hmap. *\/$/;"	m	struct:mport	typeref:struct:mport::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-sflow.c	/^    struct hmap_node hmap_node; \/* In struct dpif_sflow's "ports" hmap. *\/$/;"	m	struct:dpif_sflow_port	typeref:struct:dpif_sflow_port::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-xlate.c	/^    struct hmap_node hmap_node;      \/* Node in global 'xports' map. *\/$/;"	m	struct:xport	typeref:struct:xport::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-xlate.c	/^    struct hmap_node hmap_node;    \/* In global 'xbundles' map. *\/$/;"	m	struct:xbundle	typeref:struct:xbundle::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-xlate.c	/^    struct hmap_node hmap_node;   \/* Node in global 'xbridges' map. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::hmap_node	file:
hmap_node	ofproto/ofproto-dpif-xlate.c	/^    struct hmap_node hmap_node; \/* Node in 'ofport_dpif''s 'skb_priorities'. *\/$/;"	m	struct:skb_priority_to_dscp	typeref:struct:skb_priority_to_dscp::hmap_node	file:
hmap_node	ofproto/ofproto-dpif.c	/^    struct hmap_node hmap_node; \/* In struct ofproto's "bundles" hmap. *\/$/;"	m	struct:ofbundle	typeref:struct:ofbundle::hmap_node	file:
hmap_node	ofproto/ofproto-provider.h	/^    struct hmap_node hmap_node; \/* In global 'all_ofprotos' hmap. *\/$/;"	m	struct:ofproto	typeref:struct:ofproto::hmap_node
hmap_node	ofproto/ofproto-provider.h	/^    struct hmap_node hmap_node; \/* In struct ofproto's "ports" hmap. *\/$/;"	m	struct:ofport	typeref:struct:ofport::hmap_node
hmap_node	ofproto/ofproto.c	/^    struct hmap_node hmap_node; \/* In struct ofproto's "ofport_usage" hmap. *\/$/;"	m	struct:ofport_usage	typeref:struct:ofport_usage::hmap_node	file:
hmap_node	ovn/controller/lflow.c	/^    struct hmap_node hmap_node; \/* Indexed on 'uuid'. *\/$/;"	m	struct:logical_datapath	typeref:struct:logical_datapath::hmap_node	file:
hmap_node	ovn/controller/ofctrl.c	/^    struct hmap_node hmap_node;$/;"	m	struct:ovn_flow	typeref:struct:ovn_flow::hmap_node	file:
hmap_node	ovn/controller/physical.c	/^    struct hmap_node hmap_node;$/;"	m	struct:chassis_tunnel	typeref:struct:chassis_tunnel::hmap_node	file:
hmap_node	ovn/lib/expr.h	/^    struct hmap_node hmap_node;$/;"	m	struct:expr_match	typeref:struct:expr_match::hmap_node
hmap_node	ovn/northd/ovn-northd.c	/^    struct hmap_node hmap_node; \/* Index on 'datapath' and 'key'. *\/$/;"	m	struct:ovn_multicast	typeref:struct:ovn_multicast::hmap_node	file:
hmap_node	ovn/northd/ovn-northd.c	/^    struct hmap_node hmap_node;$/;"	m	struct:ovn_lflow	typeref:struct:ovn_lflow::hmap_node	file:
hmap_node	ovn/northd/ovn-northd.c	/^    struct hmap_node hmap_node;$/;"	m	struct:tnlid_node	typeref:struct:tnlid_node::hmap_node	file:
hmap_node	ovsdb/jsonrpc-server.c	/^    struct hmap_node hmap_node; \/* In session's "triggers" hmap. *\/$/;"	m	struct:ovsdb_jsonrpc_trigger	typeref:struct:ovsdb_jsonrpc_trigger::hmap_node	file:
hmap_node	ovsdb/monitor.c	/^    struct hmap_node hmap_node;   \/* Elements in json cache. *\/$/;"	m	struct:ovsdb_monitor_json_cache_node	typeref:struct:ovsdb_monitor_json_cache_node::hmap_node	file:
hmap_node	ovsdb/monitor.c	/^    struct hmap_node hmap_node;   \/* Elements within ovsdb_monitors.  *\/$/;"	m	struct:ovsdb_monitor	typeref:struct:ovsdb_monitor::hmap_node	file:
hmap_node	ovsdb/monitor.c	/^    struct hmap_node hmap_node;  \/* Element in ovsdb_monitor_tables' changes$/;"	m	struct:ovsdb_monitor_changes	typeref:struct:ovsdb_monitor_changes::hmap_node	file:
hmap_node	ovsdb/monitor.c	/^    struct hmap_node hmap_node; \/* In ovsdb_jsonrpc_monitor_table.changes. *\/$/;"	m	struct:ovsdb_monitor_row	typeref:struct:ovsdb_monitor_row::hmap_node	file:
hmap_node	ovsdb/row.h	/^    struct hmap_node hmap_node;    \/* Element in ovsdb_table's 'rows' hmap. *\/$/;"	m	struct:ovsdb_row	typeref:struct:ovsdb_row::hmap_node
hmap_node	ovsdb/row.h	/^    struct hmap_node hmap_node;$/;"	m	struct:ovsdb_row_hash_node	typeref:struct:ovsdb_row_hash_node::hmap_node
hmap_node	ovsdb/server.h	/^    struct hmap_node hmap_node;  \/* In ovsdb_server's "locks" hmap. *\/$/;"	m	struct:ovsdb_lock	typeref:struct:ovsdb_lock::hmap_node
hmap_node	ovsdb/transaction.c	/^    struct hmap_node hmap_node; \/* In ovsdb_txn_table's txn_rows hmap. *\/$/;"	m	struct:ovsdb_txn_row	typeref:struct:ovsdb_txn_row::hmap_node	file:
hmap_node	vswitchd/bridge.c	/^    struct hmap_node hmap_node; \/* Element in struct bridge's "ports" hmap. *\/$/;"	m	struct:port	typeref:struct:port::hmap_node	file:
hmap_node	vswitchd/bridge.c	/^    struct hmap_node hmap_node; \/* In struct bridge's "mappings" hmap. *\/$/;"	m	struct:aa_mapping	typeref:struct:aa_mapping::hmap_node	file:
hmap_node	vswitchd/bridge.c	/^    struct hmap_node hmap_node; \/* In struct bridge's "mirrors" hmap. *\/$/;"	m	struct:mirror	typeref:struct:mirror::hmap_node	file:
hmap_node_aux	lib/ovs-lldp.c	/^    struct hmap_node hmap_node_aux;$/;"	m	struct:aa_mapping_internal	typeref:struct:aa_mapping_internal::hmap_node	file:
hmap_node_hash	lib/hmap.h	/^static inline size_t hmap_node_hash(const struct hmap_node *node)$/;"	f
hmap_node_is_null	lib/hmap.h	/^hmap_node_is_null(const struct hmap_node *node)$/;"	f
hmap_node_isid	lib/ovs-lldp.c	/^    struct hmap_node hmap_node_isid;$/;"	m	struct:aa_mapping_internal	typeref:struct:aa_mapping_internal::hmap_node	file:
hmap_node_moved	lib/hmap.c	/^hmap_node_moved(struct hmap *hmap,$/;"	f
hmap_node_nullify	lib/hmap.h	/^hmap_node_nullify(struct hmap_node *node)$/;"	f
hmap_pathological	lib/hmap.c	/^COVERAGE_DEFINE(hmap_pathological);$/;"	v
hmap_random_node	lib/hmap.c	/^hmap_random_node(const struct hmap *hmap)$/;"	f
hmap_remove	lib/hmap.h	/^hmap_remove(struct hmap *hmap, struct hmap_node *node)$/;"	f
hmap_replace	lib/hmap.h	/^hmap_replace(struct hmap *hmap,$/;"	f
hmap_reserve	lib/hmap.c	/^COVERAGE_DEFINE(hmap_reserve);$/;"	v
hmap_reserve	lib/hmap.h	94;"	d
hmap_reserve_at	lib/hmap.c	/^hmap_reserve_at(struct hmap *hmap, size_t n, const char *where)$/;"	f
hmap_shrink	lib/hmap.c	/^COVERAGE_DEFINE(hmap_shrink);$/;"	v
hmap_shrink	lib/hmap.h	91;"	d
hmap_shrink_at	lib/hmap.c	/^hmap_shrink_at(struct hmap *hmap, const char *where)$/;"	f
hmap_swap	lib/hmap.c	/^hmap_swap(struct hmap *a, struct hmap *b)$/;"	f
hmapx	lib/hmapx.h	/^struct hmapx {$/;"	s
hmapx_add	lib/hmapx.c	/^hmapx_add(struct hmapx *map, void *data)$/;"	f
hmapx_add__	lib/hmapx.c	/^hmapx_add__(struct hmapx *map, void *data, size_t hash)$/;"	f	file:
hmapx_add_assert	lib/hmapx.c	/^hmapx_add_assert(struct hmapx *map, void *data)$/;"	f
hmapx_clear	lib/hmapx.c	/^hmapx_clear(struct hmapx *map)$/;"	f
hmapx_clone	lib/hmapx.c	/^hmapx_clone(struct hmapx *map, const struct hmapx *orig)$/;"	f
hmapx_contains	lib/hmapx.c	/^hmapx_contains(const struct hmapx *map, const void *data)$/;"	f
hmapx_count	lib/hmapx.c	/^hmapx_count(const struct hmapx *map)$/;"	f
hmapx_delete	lib/hmapx.c	/^hmapx_delete(struct hmapx *map, struct hmapx_node *node)$/;"	f
hmapx_destroy	lib/hmapx.c	/^hmapx_destroy(struct hmapx *map)$/;"	f
hmapx_equals	lib/hmapx.c	/^hmapx_equals(const struct hmapx *a, const struct hmapx *b)$/;"	f
hmapx_find	lib/hmapx.c	/^hmapx_find(const struct hmapx *map, const void *data)$/;"	f
hmapx_find__	lib/hmapx.c	/^hmapx_find__(const struct hmapx *map, const void *data, size_t hash)$/;"	f	file:
hmapx_find_and_delete	lib/hmapx.c	/^hmapx_find_and_delete(struct hmapx *map, const void *data)$/;"	f
hmapx_find_and_delete_assert	lib/hmapx.c	/^hmapx_find_and_delete_assert(struct hmapx *map, const void *data)$/;"	f
hmapx_init	lib/hmapx.c	/^hmapx_init(struct hmapx *map)$/;"	f
hmapx_is_empty	lib/hmapx.c	/^hmapx_is_empty(const struct hmapx *map)$/;"	f
hmapx_moved	lib/hmapx.c	/^hmapx_moved(struct hmapx *map)$/;"	f
hmapx_node	lib/hmapx.h	/^struct hmapx_node {$/;"	s
hmapx_swap	lib/hmapx.c	/^hmapx_swap(struct hmapx *a, struct hmapx *b)$/;"	f
hold_timer	lib/stp.c	/^    struct stp_timer hold_timer;        \/* 8.5.6.3: BPDU rate limit timer. *\/$/;"	m	struct:stp_port	typeref:struct:stp_port::stp_timer	file:
honor_rate_limits	include/openvswitch/vlog.h	/^    bool honor_rate_limits;       \/* Set false to ignore rate limits. *\/$/;"	m	struct:vlog_module
hook	lib/fatal-signal.c	/^struct hook {$/;"	s	file:
hook_cb	lib/fatal-signal.c	/^    void (*hook_cb)(void *aux);$/;"	m	struct:hook	file:
hooks	lib/fatal-signal.c	/^static struct hook hooks[MAX_HOOKS];$/;"	v	typeref:struct:hook	file:
hop_limit	datapath-windows/ovsext/NetProto.h	/^    UINT8    hop_limit;$/;"	m	struct:IPv6Hdr
hops	datapath/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
hops	datapath/linux/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
hops	lib/dhcp.h	/^    uint8_t hops;               \/* Hop count; set to 0 by client. *\/$/;"	m	struct:dhcp_header
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	datapath/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	lib/sflow.h	/^    SFLString host;        \/* The host field from the HTTP header *\/$/;"	m	struct:_SFLExtended_url
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	datapath/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	datapath/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	datapath/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	datapath/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_uuid	vswitchd/xenserver.c	/^static char *host_uuid;$/;"	v	file:
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
host_vendor	datapath/Makefile	/^host_vendor = unknown$/;"	m
hr	lib/coverage.h	/^    unsigned int hr[HR_AVG_LEN];$/;"	m	struct:coverage_counter
hstatus	lib/daemon-windows.c	/^static SERVICE_STATUS_HANDLE hstatus;$/;"	v	file:
htb	lib/netdev-linux.c	/^struct htb {$/;"	s	file:
htb_class	lib/netdev-linux.c	/^struct htb_class {$/;"	s	file:
htb_class_cast__	lib/netdev-linux.c	/^htb_class_cast__(const struct tc_queue *queue)$/;"	f	file:
htb_class_delete	lib/netdev-linux.c	/^htb_class_delete(struct netdev *netdev, struct tc_queue *queue)$/;"	f	file:
htb_class_dump_stats	lib/netdev-linux.c	/^htb_class_dump_stats(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
htb_class_get	lib/netdev-linux.c	/^htb_class_get(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
htb_class_get_stats	lib/netdev-linux.c	/^htb_class_get_stats(const struct netdev *netdev, const struct tc_queue *queue,$/;"	f	file:
htb_class_set	lib/netdev-linux.c	/^htb_class_set(struct netdev *netdev, unsigned int queue_id,$/;"	f	file:
htb_get__	lib/netdev-linux.c	/^htb_get__(const struct netdev *netdev_)$/;"	f	file:
htb_install__	lib/netdev-linux.c	/^htb_install__(struct netdev *netdev_, uint64_t max_rate)$/;"	f	file:
htb_parse_class_details__	lib/netdev-linux.c	/^htb_parse_class_details__(struct netdev *netdev,$/;"	f	file:
htb_parse_qdisc_details__	lib/netdev-linux.c	/^htb_parse_qdisc_details__(struct netdev *netdev_,$/;"	f	file:
htb_parse_tca_options__	lib/netdev-linux.c	/^htb_parse_tca_options__(struct nlattr *nl_options, struct htb_class *class)$/;"	f	file:
htb_parse_tcmsg__	lib/netdev-linux.c	/^htb_parse_tcmsg__(struct ofpbuf *tcmsg, unsigned int *queue_id,$/;"	f	file:
htb_qdisc_get	lib/netdev-linux.c	/^htb_qdisc_get(const struct netdev *netdev, struct smap *details)$/;"	f	file:
htb_qdisc_set	lib/netdev-linux.c	/^htb_qdisc_set(struct netdev *netdev, const struct smap *details)$/;"	f	file:
htb_query_class__	lib/netdev-linux.c	/^htb_query_class__(const struct netdev *netdev, unsigned int handle,$/;"	f	file:
htb_setup_class__	lib/netdev-linux.c	/^htb_setup_class__(struct netdev *netdev, unsigned int handle,$/;"	f	file:
htb_setup_qdisc__	lib/netdev-linux.c	/^htb_setup_qdisc__(struct netdev *netdev)$/;"	f	file:
htb_tc_destroy	lib/netdev-linux.c	/^htb_tc_destroy(struct tc *tc)$/;"	f	file:
htb_tc_install	lib/netdev-linux.c	/^htb_tc_install(struct netdev *netdev, const struct smap *details)$/;"	f	file:
htb_tc_load	lib/netdev-linux.c	/^htb_tc_load(struct netdev *netdev, struct ofpbuf *nlmsg OVS_UNUSED)$/;"	f	file:
htb_update_queue__	lib/netdev-linux.c	/^htb_update_queue__(struct netdev *netdev, unsigned int queue_id,$/;"	f	file:
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	datapath/Makefile	/^htmldir = ${docdir}$/;"	m
hton	build-aux/extract-ofp-actions	/^                    hton = types[base_argtype]['hton']$/;"	v
hton128	lib/byte-order.h	/^hton128(const ovs_u128 *src, ovs_be128 *dst)$/;"	f
htonl	datapath-windows/ovsext/Util.h	76;"	d
htonl	include/sparse/netinet/in.h	/^static inline ovs_be32 htonl(uint32_t x)$/;"	f
htonll	lib/byte-order.h	/^htonll(uint64_t n)$/;"	f
htons	datapath-windows/ovsext/Checksum.c	29;"	d	file:
htons	datapath-windows/ovsext/Util.h	74;"	d
htons	include/sparse/netinet/in.h	/^static inline ovs_be16 htons(uint16_t x)$/;"	f
httplib	utilities/ovs-vlan-test	/^import httplib$/;"	i
htype	datapath/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
htype	datapath/linux/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
htype	lib/dhcp.h	/^    uint8_t htype;              \/* ARP_HRD_ETHERNET (typically). *\/$/;"	m	struct:dhcp_header
hugetlbfs_dir	utilities/qemu-wrap.py	/^hugetlbfs_dir = ""$/;"	v
hvDelete	datapath-windows/ovsext/Vport.c	/^    BOOLEAN hvDelete;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
hvPortName	datapath-windows/ovsext/Vport.h	/^    NDIS_SWITCH_PORT_NAME  hvPortName;$/;"	m	struct:_OVS_VPORT_ENTRY
hvSwitchPort	datapath-windows/ovsext/Vport.c	/^    BOOLEAN hvSwitchPort;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
hw_addr	include/openflow/openflow-1.0.h	/^    struct eth_addr hw_addr; \/* The hardware address is not configurable.  This$/;"	m	struct:ofp10_port_mod	typeref:struct:ofp10_port_mod::eth_addr
hw_addr	include/openflow/openflow-1.0.h	/^    struct eth_addr hw_addr;$/;"	m	struct:ofp10_phy_port	typeref:struct:ofp10_phy_port::eth_addr
hw_addr	include/openflow/openflow-1.1.h	/^    struct eth_addr hw_addr; \/* The hardware address is not configurable.  This$/;"	m	struct:ofp11_port_mod	typeref:struct:ofp11_port_mod::eth_addr
hw_addr	include/openflow/openflow-1.1.h	/^    struct eth_addr hw_addr;$/;"	m	struct:ofp11_port	typeref:struct:ofp11_port::eth_addr
hw_addr	include/openflow/openflow-1.4.h	/^    struct eth_addr hw_addr;$/;"	m	struct:ofp14_port	typeref:struct:ofp14_port::eth_addr
hw_addr	include/openflow/openflow-1.4.h	/^    struct eth_addr hw_addr;$/;"	m	struct:ofp14_port_mod	typeref:struct:ofp14_port_mod::eth_addr
hw_addr	lib/ofp-util.h	/^    struct eth_addr hw_addr;$/;"	m	struct:ofputil_phy_port	typeref:struct:ofputil_phy_port::eth_addr
hw_addr	lib/ofp-util.h	/^    struct eth_addr hw_addr;$/;"	m	struct:ofputil_port_mod	typeref:struct:ofputil_port_mod::eth_addr
hw_addr	ofproto/ofproto-dpif-monitor.c	/^    struct eth_addr hw_addr;          \/* Hardware address. *\/$/;"	m	struct:mport	typeref:struct:mport::eth_addr	file:
hw_desc	include/openflow/openflow-common.h	/^    char hw_desc[DESC_STR_LEN];        \/* Hardware description. *\/$/;"	m	struct:ofp_desc_stats
hw_desc	ofproto/ofproto-provider.h	/^    char *hw_desc;              \/* Hardware (NULL for default). *\/$/;"	m	struct:ofproto
hwaddr	lib/netdev-dpdk.c	/^    struct eth_addr hwaddr;$/;"	m	struct:netdev_dpdk	typeref:struct:netdev_dpdk::eth_addr	file:
i	tests/idltest.h	/^	int64_t i;$/;"	m	struct:idltest_link1
i	tests/idltest.h	/^	int64_t i;$/;"	m	struct:idltest_link2
i	tests/idltest.h	/^	int64_t i;$/;"	m	struct:idltest_simple
i	tests/test-sflow.c	/^    uint32_t i;$/;"	m	struct:sflow_xdr	file:
ia	tests/idltest.h	/^	int64_t *ia;$/;"	m	struct:idltest_simple
icmp6Key	datapath-windows/ovsext/DpInternal.h	/^        Icmp6Key icmp6Key;       \/* size 72 *\/$/;"	m	union:OvsFlowKey::__anon10
icmp6_cksum	include/windows/netinet/icmp6.h	/^	u_int16_t	icmp6_cksum;	\/* checksum field *\/$/;"	m	struct:icmp6_hdr
icmp6_cksum	lib/packets.h	/^    ovs_be16 icmp6_cksum;$/;"	m	struct:icmp6_header
icmp6_code	include/windows/netinet/icmp6.h	/^	u_int8_t	icmp6_code;	\/* code field *\/$/;"	m	struct:icmp6_hdr
icmp6_code	lib/packets.h	/^    uint8_t icmp6_code;$/;"	m	struct:icmp6_header
icmp6_data16	include/windows/netinet/icmp6.h	81;"	d
icmp6_data32	include/windows/netinet/icmp6.h	80;"	d
icmp6_data8	include/windows/netinet/icmp6.h	82;"	d
icmp6_dataun	include/windows/netinet/icmp6.h	/^	} icmp6_dataun;$/;"	m	struct:icmp6_hdr	typeref:union:icmp6_hdr::__anon77
icmp6_filt	include/windows/netinet/icmp6.h	/^	u_int32_t icmp6_filt[8];$/;"	m	struct:icmp6_filter
icmp6_filter	include/windows/netinet/icmp6.h	/^struct icmp6_filter {$/;"	s
icmp6_hdr	datapath/linux/compat/include/linux/icmpv6.h	/^static inline struct icmp6hdr *icmp6_hdr(const struct sk_buff *skb)$/;"	f
icmp6_hdr	include/windows/netinet/icmp6.h	/^struct icmp6_hdr {$/;"	s
icmp6_header	lib/packets.h	/^struct icmp6_header {$/;"	s
icmp6_id	include/windows/netinet/icmp6.h	85;"	d
icmp6_maxdelay	include/windows/netinet/icmp6.h	87;"	d
icmp6_mtu	include/windows/netinet/icmp6.h	84;"	d
icmp6_namelookup	include/windows/netinet/icmp6.h	/^struct icmp6_namelookup {$/;"	s
icmp6_ni_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr icmp6_ni_hdr;$/;"	m	struct:icmp6_nodeinfo	typeref:struct:icmp6_nodeinfo::icmp6_hdr
icmp6_ni_nonce	include/windows/netinet/icmp6.h	/^	u_int8_t icmp6_ni_nonce[8];$/;"	m	struct:icmp6_nodeinfo
icmp6_nl_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr 	icmp6_nl_hdr;$/;"	m	struct:icmp6_namelookup	typeref:struct:icmp6_namelookup::icmp6_hdr
icmp6_nl_nonce	include/windows/netinet/icmp6.h	/^	u_int8_t	icmp6_nl_nonce[8];$/;"	m	struct:icmp6_namelookup
icmp6_nl_ttl	include/windows/netinet/icmp6.h	/^	int32_t		icmp6_nl_ttl;$/;"	m	struct:icmp6_namelookup
icmp6_nodeinfo	include/windows/netinet/icmp6.h	/^struct icmp6_nodeinfo {$/;"	s
icmp6_pptr	include/windows/netinet/icmp6.h	83;"	d
icmp6_router_renum	include/windows/netinet/icmp6.h	/^struct icmp6_router_renum {	\/* router renumbering header *\/$/;"	s
icmp6_seq	include/windows/netinet/icmp6.h	86;"	d
icmp6_type	include/windows/netinet/icmp6.h	/^	u_int8_t	icmp6_type;	\/* type field *\/$/;"	m	struct:icmp6_hdr
icmp6_type	lib/packets.h	/^    uint8_t icmp6_type;$/;"	m	struct:icmp6_header
icmp6_un_data16	include/windows/netinet/icmp6.h	/^		u_int16_t	icmp6_un_data16[2]; \/* type-specific field *\/$/;"	m	union:icmp6_hdr::__anon77
icmp6_un_data32	include/windows/netinet/icmp6.h	/^		u_int32_t	icmp6_un_data32[1]; \/* type-specific field *\/$/;"	m	union:icmp6_hdr::__anon77
icmp6_un_data8	include/windows/netinet/icmp6.h	/^		u_int8_t	icmp6_un_data8[4];  \/* type-specific field *\/$/;"	m	union:icmp6_hdr::__anon77
icmp6hdr_ok	datapath/flow.c	/^static bool icmp6hdr_ok(struct sk_buff *skb)$/;"	f	file:
icmp6hdr_ok	datapath/linux/flow.c	/^static bool icmp6hdr_ok(struct sk_buff *skb)$/;"	f	file:
icmp_code	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8 icmp_code;$/;"	m	struct:ovs_key_icmp
icmp_code	include/odp-netlink.h	/^	uint8_t icmp_code;$/;"	m	struct:ovs_key_icmp
icmp_code	lib/packets.h	/^    uint8_t icmp_code;$/;"	m	struct:icmp_header
icmp_code	vtep/vtep-idl.h	/^	int64_t *icmp_code;$/;"	m	struct:vteprec_acl_entry
icmp_csum	lib/packets.h	/^    ovs_be16 icmp_csum;$/;"	m	struct:icmp_header
icmp_fields	lib/packets.h	/^    } icmp_fields;$/;"	m	struct:icmp_header	typeref:union:icmp_header::__anon147
icmp_hdr	datapath/linux/compat/include/linux/icmp.h	/^static inline struct icmphdr *icmp_hdr(const struct sk_buff *skb)$/;"	f
icmp_header	lib/packets.h	/^struct icmp_header {$/;"	s
icmp_identify	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 icmp_identify;$/;"	m	struct:ovs_key_icmp
icmp_identify	include/odp-netlink.h	/^	ovs_be16 icmp_identify;$/;"	m	struct:ovs_key_icmp
icmp_type	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8 icmp_type;$/;"	m	struct:ovs_key_icmp
icmp_type	include/odp-netlink.h	/^	uint8_t icmp_type;$/;"	m	struct:ovs_key_icmp
icmp_type	lib/packets.h	/^    uint8_t icmp_type;$/;"	m	struct:icmp_header
icmp_type	vtep/vtep-idl.h	/^	int64_t *icmp_type;$/;"	m	struct:vteprec_acl_entry
icmph	lib/packets.h	/^    struct icmp6_header icmph;$/;"	m	struct:ovs_nd_msg	typeref:struct:ovs_nd_msg::icmp6_header
icmphdr_ok	datapath/flow.c	/^static bool icmphdr_ok(struct sk_buff *skb)$/;"	f	file:
icmphdr_ok	datapath/linux/flow.c	/^static bool icmphdr_ok(struct sk_buff *skb)$/;"	f	file:
icmpv6_code	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8 icmpv6_code;$/;"	m	struct:ovs_key_icmpv6
icmpv6_code	include/odp-netlink.h	/^	uint8_t icmpv6_code;$/;"	m	struct:ovs_key_icmpv6
icmpv6_type	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8 icmpv6_type;$/;"	m	struct:ovs_key_icmpv6
icmpv6_type	include/odp-netlink.h	/^	uint8_t icmpv6_type;$/;"	m	struct:ovs_key_icmpv6
ico1	datapath-windows/ovsext/resource.h	1289;"	d
ico2	datapath-windows/ovsext/resource.h	1290;"	d
ico3	datapath-windows/ovsext/resource.h	1291;"	d
ico4	datapath-windows/ovsext/resource.h	1292;"	d
id	datapath-windows/ovsext/Datapath.c	/^    UINT16 id;$/;"	m	struct:_NETLINK_FAMILY	file:
id	datapath-windows/ovsext/NetProto.h	/^   UINT16       id;$/;"	m	struct:ICMPEcho
id	datapath-windows/ovsext/NetProto.h	/^   UINT16   id;$/;"	m	struct:IPHdr
id	datapath/flow.h	/^	struct sw_flow_id id;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::sw_flow_id
id	datapath/linux/compat/include/net/genetlink.h	/^	unsigned int            id;$/;"	m	struct:rpl_genl_family
id	datapath/linux/compat/include/net/net_namespace.h	/^	int *id;$/;"	m	struct:rpl_pernet_operations
id	include/openflow/nicira-ext.h	/^    ovs_be32 id;                \/* 'id' from nx_flow_monitor_request. *\/$/;"	m	struct:nx_flow_monitor_cancel
id	include/openflow/nicira-ext.h	/^    ovs_be32 id;                \/* Controller-assigned ID for this monitor. *\/$/;"	m	struct:nx_flow_monitor_request
id	lib/classifier.c	/^    uint32_t id;$/;"	m	struct:conjunctive_match	file:
id	lib/classifier.h	/^    uint32_t id;$/;"	m	struct:cls_conjunction
id	lib/id-pool.c	/^    uint32_t id;$/;"	m	struct:id_node	file:
id	lib/jsonrpc.h	/^    struct json *id;            \/* Request or reply only. *\/$/;"	m	struct:jsonrpc_msg	typeref:struct:jsonrpc_msg::json
id	lib/lacp.h	/^    struct eth_addr id;               \/* System ID. Must be nonzero. *\/$/;"	m	struct:lacp_settings	typeref:struct:lacp_settings::eth_addr
id	lib/lacp.h	/^    uint16_t id;                      \/* Port ID. *\/$/;"	m	struct:lacp_slave_settings
id	lib/meta-flow.h	/^    enum mf_field_id id;        \/* MFF_*. *\/$/;"	m	struct:mf_field	typeref:enum:mf_field::mf_field_id
id	lib/netlink-socket.c	/^    uint16_t id;$/;"	m	struct:genl_family	file:
id	lib/nx-match.c	/^    enum mf_field_id id;$/;"	m	struct:nxm_field	typeref:enum:nxm_field::mf_field_id	file:
id	lib/ofp-actions.c	/^    ovs_be32 id;$/;"	m	struct:nx_action_conjunction	file:
id	lib/ofp-actions.h	/^    uint32_t id;$/;"	m	struct:ofpact_conjunction
id	lib/ofp-util.h	/^    uint32_t id;$/;"	m	struct:ofputil_flow_monitor_request
id	lib/packets.h	/^            ovs_be16 id;$/;"	m	struct:icmp_header::__anon147::__anon148
id	lib/timeval.c	/^    clockid_t id;               \/* CLOCK_MONOTONIC or CLOCK_REALTIME. *\/$/;"	m	struct:clock	file:
id	lib/vswitch-idl.h	/^	int64_t id;$/;"	m	struct:ovsrec_flow_sample_collector_set
id	ofproto/bundles.h	/^    uint32_t          id;$/;"	m	struct:ofp_bundle
id	ofproto/connmgr.h	/^    uint32_t id;$/;"	m	struct:ofmonitor
id	ofproto/ofproto-dpif-rid.h	/^    uint32_t id;$/;"	m	struct:recirc_id_node
id	ofproto/ofproto-dpif-upcall.c	/^    unsigned int id;                   \/* ovsthread_id_self(). *\/$/;"	m	struct:revalidator	file:
id	ovsdb/jsonrpc-server.c	/^    struct json *id;$/;"	m	struct:ovsdb_jsonrpc_trigger	typeref:struct:ovsdb_jsonrpc_trigger::json	file:
id	tests/test-rstp.c	/^    int id;$/;"	m	struct:bridge	file:
id	tests/test-stp.c	/^    int id;$/;"	m	struct:bridge	file:
idRe	build-aux/check-structs	/^idRe = "[a-zA-Z_][a-zA-Z_0-9]*"$/;"	v
idRe	build-aux/extract-ofp-errors	/^idRe = "[a-zA-Z_][a-zA-Z_0-9]*"$/;"	v
id_map	ofproto/ofproto-dpif-rid.c	/^static struct cmap id_map;$/;"	v	typeref:struct:cmap	file:
id_node	lib/id-pool.c	/^struct id_node {$/;"	s	file:
id_node	ofproto/ofproto-dpif-rid.h	/^    struct cmap_node id_node;$/;"	m	struct:recirc_id_node	typeref:struct:recirc_id_node::cmap_node
id_node	ofproto/ofproto.c	/^    struct hmap_node id_node;   \/* In oftable's "eviction_groups_by_id". *\/$/;"	m	struct:eviction_group	typeref:struct:eviction_group::hmap_node	file:
id_pool	lib/id-pool.c	/^struct id_pool {$/;"	s	file:
id_pool_add	lib/id-pool.c	/^id_pool_add(struct id_pool *pool, uint32_t id)$/;"	f
id_pool_alloc_id	lib/id-pool.c	/^id_pool_alloc_id(struct id_pool *pool, uint32_t *id_)$/;"	f
id_pool_create	lib/id-pool.c	/^id_pool_create(uint32_t base, uint32_t n_ids)$/;"	f
id_pool_destroy	lib/id-pool.c	/^id_pool_destroy(struct id_pool *pool)$/;"	f
id_pool_find	lib/id-pool.c	/^id_pool_find(struct id_pool *pool, uint32_t id)$/;"	f	file:
id_pool_free_id	lib/id-pool.c	/^id_pool_free_id(struct id_pool *pool, uint32_t id)$/;"	f
id_pool_init	lib/id-pool.c	/^id_pool_init(struct id_pool *pool, uint32_t base, uint32_t n_ids)$/;"	f	file:
id_pool_uninit	lib/id-pool.c	/^id_pool_uninit(struct id_pool *pool)$/;"	f	file:
id_re	python/ovs/db/parser.py	/^id_re = re.compile("[_a-zA-Z][_a-zA-Z0-9]*$")$/;"	v
ident	datapath-windows/ovsext/NetProto.h	/^    UINT32 ident;$/;"	m	struct:IPv6FragHdr
identity_hash	tests/test-cmap.c	/^identity_hash(int value)$/;"	f	file:
identity_hash	tests/test-hmap.c	/^identity_hash(int value)$/;"	f	file:
idl	debian/ovs-monitor-ipsec	/^import ovs.db.idl$/;"	i
idl	lib/db-ctl-base.h	/^    struct ovsdb_idl *idl;$/;"	m	struct:ctl_context	typeref:struct:ctl_context::ovsdb_idl
idl	lib/ovsdb-idl-provider.h	/^    struct ovsdb_idl *idl;   \/* Containing idl. *\/$/;"	m	struct:ovsdb_idl_table	typeref:struct:ovsdb_idl_table::ovsdb_idl
idl	lib/ovsdb-idl.c	/^    struct ovsdb_idl *idl;$/;"	m	struct:ovsdb_idl_txn	typeref:struct:ovsdb_idl_txn::ovsdb_idl	file:
idl	lib/ovsdb-idl.h	/^    struct ovsdb_idl *idl;$/;"	m	struct:ovsdb_idl_loop	typeref:struct:ovsdb_idl_loop::ovsdb_idl
idl	tests/test-ovsdb.py	/^import ovs.db.idl$/;"	i
idl	vswitchd/bridge.c	/^static struct ovsdb_idl *idl;$/;"	v	typeref:struct:ovsdb_idl	file:
idl	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.db.idl$/;"	i
idl_seqno	vswitchd/bridge.c	/^static unsigned int idl_seqno;$/;"	v	file:
idl_set	tests/test-ovsdb.c	/^idl_set(struct ovsdb_idl *idl, char *commands, int step)$/;"	f	file:
idl_set	tests/test-ovsdb.py	/^def idl_set(idl, commands, step):$/;"	f
idle	ofproto/ofproto-dpif-xlate.c	/^            uint16_t idle;$/;"	m	struct:xc_entry::__anon188::__anon195	file:
idle_age	include/openflow/nicira-ext.h	/^    ovs_be16 idle_age;        \/* Seconds since last packet, plus one. *\/$/;"	m	struct:nx_flow_stats
idle_age	lib/ofp-util.h	/^    int idle_age;               \/* Seconds since last packet, -1 if unknown. *\/$/;"	m	struct:ofputil_flow_stats
idle_time	lib/mac-learning.h	/^    unsigned int idle_time;     \/* Max age before deleting an entry. *\/$/;"	m	struct:mac_learning
idle_time	lib/mcast-snooping.h	/^    unsigned int idle_time;$/;"	m	struct:mcast_snooping
idle_time	ofproto/ofproto.h	/^    unsigned int idle_time;     \/* Entry is removed after the idle time$/;"	m	struct:ofproto_mcast_snooping_settings
idle_timeout	include/openflow/nicira-ext.h	/^    ovs_be16 idle_timeout;        \/* Idle time before discarding (seconds). *\/$/;"	m	struct:nx_flow_mod
idle_timeout	include/openflow/nicira-ext.h	/^    ovs_be16 idle_timeout;      \/* Number of seconds idle before expiration. *\/$/;"	m	struct:nx_flow_update_full
idle_timeout	include/openflow/nicira-ext.h	/^    ovs_be16 idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:nx_flow_removed
idle_timeout	include/openflow/nicira-ext.h	/^    ovs_be16 idle_timeout;    \/* Number of seconds idle before expiration. *\/$/;"	m	struct:nx_flow_stats
idle_timeout	include/openflow/openflow-1.0.h	/^    ovs_be16 idle_timeout;        \/* Idle time before discarding (seconds). *\/$/;"	m	struct:ofp10_flow_mod
idle_timeout	include/openflow/openflow-1.0.h	/^    ovs_be16 idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:ofp10_flow_removed
idle_timeout	include/openflow/openflow-1.0.h	/^    ovs_be16 idle_timeout;    \/* Number of seconds idle before expiration. *\/$/;"	m	struct:ofp10_flow_stats
idle_timeout	include/openflow/openflow-1.1.h	/^    ovs_be16 idle_timeout;       \/* Idle time before discarding (seconds). *\/$/;"	m	struct:ofp11_flow_mod
idle_timeout	include/openflow/openflow-1.1.h	/^    ovs_be16 idle_timeout;     \/* Number of seconds idle before expiration. *\/$/;"	m	struct:ofp11_flow_stats
idle_timeout	include/openflow/openflow-1.1.h	/^    ovs_be16 idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:ofp11_flow_removed
idle_timeout	include/openflow/openflow-1.2.h	/^    ovs_be16 idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:ofp12_flow_removed
idle_timeout	lib/ofp-actions.c	/^    ovs_be16 idle_timeout;      \/* Idle time before discarding (seconds). *\/$/;"	m	struct:nx_action_learn	file:
idle_timeout	lib/ofp-actions.h	/^    uint16_t idle_timeout;      \/* Idle time before discarding (seconds). *\/$/;"	m	struct:ofpact_learn
idle_timeout	lib/ofp-util.h	/^    uint16_t idle_timeout;$/;"	m	struct:ofputil_flow_mod
idle_timeout	lib/ofp-util.h	/^    uint16_t idle_timeout;$/;"	m	struct:ofputil_flow_removed
idle_timeout	lib/ofp-util.h	/^    uint16_t idle_timeout;$/;"	m	struct:ofputil_flow_stats
idle_timeout	lib/ofp-util.h	/^    uint16_t idle_timeout;$/;"	m	struct:ofputil_flow_update
idle_timeout	utilities/ovs-ofctl.c	/^    uint16_t idle_timeout;$/;"	m	struct:fte_version	file:
idltest_find_simple	tests/test-ovsdb.c	/^idltest_find_simple(struct ovsdb_idl *idl, int i)$/;"	f	file:
idltest_find_simple	tests/test-ovsdb.py	/^def idltest_find_simple(idl, i):$/;"	f
idltest_get_db_version	tests/idltest.c	/^idltest_get_db_version(void)$/;"	f
idltest_idl_class	tests/idltest.c	/^struct ovsdb_idl_class idltest_idl_class = {$/;"	v	typeref:struct:ovsdb_idl_class
idltest_init	tests/idltest.c	/^idltest_init(void)$/;"	f
idltest_link1	tests/idltest.h	/^struct idltest_link1 {$/;"	s
idltest_link1_cast	tests/idltest.c	/^idltest_link1_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
idltest_link1_col_i	tests/idltest.h	40;"	d
idltest_link1_col_k	tests/idltest.h	41;"	d
idltest_link1_col_ka	tests/idltest.h	43;"	d
idltest_link1_col_l2	tests/idltest.h	42;"	d
idltest_link1_columns	tests/idltest.c	/^struct ovsdb_idl_column idltest_link1_columns[IDLTEST_LINK1_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
idltest_link1_columns_init	tests/idltest.c	/^idltest_link1_columns_init(void)$/;"	f	file:
idltest_link1_delete	tests/idltest.c	/^idltest_link1_delete(const struct idltest_link1 *row)$/;"	f
idltest_link1_first	tests/idltest.c	/^idltest_link1_first(const struct ovsdb_idl *idl)$/;"	f
idltest_link1_get_for_uuid	tests/idltest.c	/^idltest_link1_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
idltest_link1_get_i	tests/idltest.c	/^idltest_link1_get_i(const struct idltest_link1 *row,$/;"	f
idltest_link1_get_k	tests/idltest.c	/^idltest_link1_get_k(const struct idltest_link1 *row,$/;"	f
idltest_link1_get_ka	tests/idltest.c	/^idltest_link1_get_ka(const struct idltest_link1 *row,$/;"	f
idltest_link1_get_l2	tests/idltest.c	/^idltest_link1_get_l2(const struct idltest_link1 *row,$/;"	f
idltest_link1_init	tests/idltest.c	/^idltest_link1_init(struct idltest_link1 *row)$/;"	f
idltest_link1_init__	tests/idltest.c	/^idltest_link1_init__(struct ovsdb_idl_row *row)$/;"	f	file:
idltest_link1_insert	tests/idltest.c	/^idltest_link1_insert(struct ovsdb_idl_txn *txn)$/;"	f
idltest_link1_next	tests/idltest.c	/^idltest_link1_next(const struct idltest_link1 *row)$/;"	f
idltest_link1_parse_i	tests/idltest.c	/^idltest_link1_parse_i(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_link1_parse_k	tests/idltest.c	/^idltest_link1_parse_k(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_link1_parse_ka	tests/idltest.c	/^idltest_link1_parse_ka(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_link1_parse_l2	tests/idltest.c	/^idltest_link1_parse_l2(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_link1_set_i	tests/idltest.c	/^idltest_link1_set_i(const struct idltest_link1 *row, int64_t i)$/;"	f
idltest_link1_set_k	tests/idltest.c	/^idltest_link1_set_k(const struct idltest_link1 *row, const struct idltest_link1 *k)$/;"	f
idltest_link1_set_ka	tests/idltest.c	/^idltest_link1_set_ka(const struct idltest_link1 *row, struct idltest_link1 **ka, size_t n_ka)$/;"	f
idltest_link1_set_l2	tests/idltest.c	/^idltest_link1_set_l2(const struct idltest_link1 *row, const struct idltest_link2 *l2)$/;"	f
idltest_link1_unparse_i	tests/idltest.c	/^idltest_link1_unparse_i(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_link1_unparse_k	tests/idltest.c	/^idltest_link1_unparse_k(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_link1_unparse_ka	tests/idltest.c	/^idltest_link1_unparse_ka(struct ovsdb_idl_row *row_)$/;"	f	file:
idltest_link1_unparse_l2	tests/idltest.c	/^idltest_link1_unparse_l2(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_link1_verify_i	tests/idltest.c	/^idltest_link1_verify_i(const struct idltest_link1 *row)$/;"	f
idltest_link1_verify_k	tests/idltest.c	/^idltest_link1_verify_k(const struct idltest_link1 *row)$/;"	f
idltest_link1_verify_ka	tests/idltest.c	/^idltest_link1_verify_ka(const struct idltest_link1 *row)$/;"	f
idltest_link1_verify_l2	tests/idltest.c	/^idltest_link1_verify_l2(const struct idltest_link1 *row)$/;"	f
idltest_link2	tests/idltest.h	/^struct idltest_link2 {$/;"	s
idltest_link2_cast	tests/idltest.c	/^idltest_link2_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
idltest_link2_col_i	tests/idltest.h	96;"	d
idltest_link2_col_l1	tests/idltest.h	97;"	d
idltest_link2_columns	tests/idltest.c	/^struct ovsdb_idl_column idltest_link2_columns[IDLTEST_LINK2_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
idltest_link2_columns_init	tests/idltest.c	/^idltest_link2_columns_init(void)$/;"	f	file:
idltest_link2_delete	tests/idltest.c	/^idltest_link2_delete(const struct idltest_link2 *row)$/;"	f
idltest_link2_first	tests/idltest.c	/^idltest_link2_first(const struct ovsdb_idl *idl)$/;"	f
idltest_link2_get_for_uuid	tests/idltest.c	/^idltest_link2_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
idltest_link2_get_i	tests/idltest.c	/^idltest_link2_get_i(const struct idltest_link2 *row,$/;"	f
idltest_link2_get_l1	tests/idltest.c	/^idltest_link2_get_l1(const struct idltest_link2 *row,$/;"	f
idltest_link2_init	tests/idltest.c	/^idltest_link2_init(struct idltest_link2 *row)$/;"	f
idltest_link2_init__	tests/idltest.c	/^idltest_link2_init__(struct ovsdb_idl_row *row)$/;"	f	file:
idltest_link2_insert	tests/idltest.c	/^idltest_link2_insert(struct ovsdb_idl_txn *txn)$/;"	f
idltest_link2_next	tests/idltest.c	/^idltest_link2_next(const struct idltest_link2 *row)$/;"	f
idltest_link2_parse_i	tests/idltest.c	/^idltest_link2_parse_i(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_link2_parse_l1	tests/idltest.c	/^idltest_link2_parse_l1(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_link2_set_i	tests/idltest.c	/^idltest_link2_set_i(const struct idltest_link2 *row, int64_t i)$/;"	f
idltest_link2_set_l1	tests/idltest.c	/^idltest_link2_set_l1(const struct idltest_link2 *row, const struct idltest_link1 *l1)$/;"	f
idltest_link2_unparse_i	tests/idltest.c	/^idltest_link2_unparse_i(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_link2_unparse_l1	tests/idltest.c	/^idltest_link2_unparse_l1(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_link2_verify_i	tests/idltest.c	/^idltest_link2_verify_i(const struct idltest_link2 *row)$/;"	f
idltest_link2_verify_l1	tests/idltest.c	/^idltest_link2_verify_l1(const struct idltest_link2 *row)$/;"	f
idltest_simple	tests/idltest.h	/^struct idltest_simple {$/;"	s
idltest_simple_cast	tests/idltest.c	/^idltest_simple_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
idltest_simple_col_b	tests/idltest.h	181;"	d
idltest_simple_col_ba	tests/idltest.h	182;"	d
idltest_simple_col_i	tests/idltest.h	183;"	d
idltest_simple_col_ia	tests/idltest.h	188;"	d
idltest_simple_col_r	tests/idltest.h	185;"	d
idltest_simple_col_ra	tests/idltest.h	187;"	d
idltest_simple_col_s	tests/idltest.h	184;"	d
idltest_simple_col_sa	tests/idltest.h	189;"	d
idltest_simple_col_u	tests/idltest.h	186;"	d
idltest_simple_col_ua	tests/idltest.h	190;"	d
idltest_simple_columns	tests/idltest.c	/^struct ovsdb_idl_column idltest_simple_columns[IDLTEST_SIMPLE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
idltest_simple_columns_init	tests/idltest.c	/^idltest_simple_columns_init(void)$/;"	f	file:
idltest_simple_delete	tests/idltest.c	/^idltest_simple_delete(const struct idltest_simple *row)$/;"	f
idltest_simple_first	tests/idltest.c	/^idltest_simple_first(const struct ovsdb_idl *idl)$/;"	f
idltest_simple_get_b	tests/idltest.c	/^idltest_simple_get_b(const struct idltest_simple *row,$/;"	f
idltest_simple_get_ba	tests/idltest.c	/^idltest_simple_get_ba(const struct idltest_simple *row,$/;"	f
idltest_simple_get_for_uuid	tests/idltest.c	/^idltest_simple_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
idltest_simple_get_i	tests/idltest.c	/^idltest_simple_get_i(const struct idltest_simple *row,$/;"	f
idltest_simple_get_ia	tests/idltest.c	/^idltest_simple_get_ia(const struct idltest_simple *row,$/;"	f
idltest_simple_get_r	tests/idltest.c	/^idltest_simple_get_r(const struct idltest_simple *row,$/;"	f
idltest_simple_get_ra	tests/idltest.c	/^idltest_simple_get_ra(const struct idltest_simple *row,$/;"	f
idltest_simple_get_s	tests/idltest.c	/^idltest_simple_get_s(const struct idltest_simple *row,$/;"	f
idltest_simple_get_sa	tests/idltest.c	/^idltest_simple_get_sa(const struct idltest_simple *row,$/;"	f
idltest_simple_get_u	tests/idltest.c	/^idltest_simple_get_u(const struct idltest_simple *row,$/;"	f
idltest_simple_get_ua	tests/idltest.c	/^idltest_simple_get_ua(const struct idltest_simple *row,$/;"	f
idltest_simple_init	tests/idltest.c	/^idltest_simple_init(struct idltest_simple *row)$/;"	f
idltest_simple_init__	tests/idltest.c	/^idltest_simple_init__(struct ovsdb_idl_row *row)$/;"	f	file:
idltest_simple_insert	tests/idltest.c	/^idltest_simple_insert(struct ovsdb_idl_txn *txn)$/;"	f
idltest_simple_next	tests/idltest.c	/^idltest_simple_next(const struct idltest_simple *row)$/;"	f
idltest_simple_parse_b	tests/idltest.c	/^idltest_simple_parse_b(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_ba	tests/idltest.c	/^idltest_simple_parse_ba(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_i	tests/idltest.c	/^idltest_simple_parse_i(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_ia	tests/idltest.c	/^idltest_simple_parse_ia(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_r	tests/idltest.c	/^idltest_simple_parse_r(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_ra	tests/idltest.c	/^idltest_simple_parse_ra(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_s	tests/idltest.c	/^idltest_simple_parse_s(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_sa	tests/idltest.c	/^idltest_simple_parse_sa(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_u	tests/idltest.c	/^idltest_simple_parse_u(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_parse_ua	tests/idltest.c	/^idltest_simple_parse_ua(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
idltest_simple_set_b	tests/idltest.c	/^idltest_simple_set_b(const struct idltest_simple *row, bool b)$/;"	f
idltest_simple_set_ba	tests/idltest.c	/^idltest_simple_set_ba(const struct idltest_simple *row, const bool *ba, size_t n_ba)$/;"	f
idltest_simple_set_i	tests/idltest.c	/^idltest_simple_set_i(const struct idltest_simple *row, int64_t i)$/;"	f
idltest_simple_set_ia	tests/idltest.c	/^idltest_simple_set_ia(const struct idltest_simple *row, const int64_t *ia, size_t n_ia)$/;"	f
idltest_simple_set_r	tests/idltest.c	/^idltest_simple_set_r(const struct idltest_simple *row, double r)$/;"	f
idltest_simple_set_ra	tests/idltest.c	/^idltest_simple_set_ra(const struct idltest_simple *row, const double *ra, size_t n_ra)$/;"	f
idltest_simple_set_s	tests/idltest.c	/^idltest_simple_set_s(const struct idltest_simple *row, const char *s)$/;"	f
idltest_simple_set_sa	tests/idltest.c	/^idltest_simple_set_sa(const struct idltest_simple *row, const char **sa, size_t n_sa)$/;"	f
idltest_simple_set_u	tests/idltest.c	/^idltest_simple_set_u(const struct idltest_simple *row, struct uuid u)$/;"	f
idltest_simple_set_ua	tests/idltest.c	/^idltest_simple_set_ua(const struct idltest_simple *row, const struct uuid *ua, size_t n_ua)$/;"	f
idltest_simple_unparse_b	tests/idltest.c	/^idltest_simple_unparse_b(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_simple_unparse_ba	tests/idltest.c	/^idltest_simple_unparse_ba(struct ovsdb_idl_row *row_)$/;"	f	file:
idltest_simple_unparse_i	tests/idltest.c	/^idltest_simple_unparse_i(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_simple_unparse_ia	tests/idltest.c	/^idltest_simple_unparse_ia(struct ovsdb_idl_row *row_)$/;"	f	file:
idltest_simple_unparse_r	tests/idltest.c	/^idltest_simple_unparse_r(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_simple_unparse_ra	tests/idltest.c	/^idltest_simple_unparse_ra(struct ovsdb_idl_row *row_)$/;"	f	file:
idltest_simple_unparse_s	tests/idltest.c	/^idltest_simple_unparse_s(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_simple_unparse_sa	tests/idltest.c	/^idltest_simple_unparse_sa(struct ovsdb_idl_row *row_)$/;"	f	file:
idltest_simple_unparse_u	tests/idltest.c	/^idltest_simple_unparse_u(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
idltest_simple_unparse_ua	tests/idltest.c	/^idltest_simple_unparse_ua(struct ovsdb_idl_row *row_)$/;"	f	file:
idltest_simple_verify_b	tests/idltest.c	/^idltest_simple_verify_b(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_ba	tests/idltest.c	/^idltest_simple_verify_ba(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_i	tests/idltest.c	/^idltest_simple_verify_i(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_ia	tests/idltest.c	/^idltest_simple_verify_ia(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_r	tests/idltest.c	/^idltest_simple_verify_r(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_ra	tests/idltest.c	/^idltest_simple_verify_ra(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_s	tests/idltest.c	/^idltest_simple_verify_s(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_sa	tests/idltest.c	/^idltest_simple_verify_sa(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_u	tests/idltest.c	/^idltest_simple_verify_u(const struct idltest_simple *row)$/;"	f
idltest_simple_verify_ua	tests/idltest.c	/^idltest_simple_verify_ua(const struct idltest_simple *row)$/;"	f
idltest_table_classes	tests/idltest.c	/^struct ovsdb_idl_table_class idltest_table_classes[IDLTEST_N_TABLES] = {$/;"	v	typeref:struct:ovsdb_idl_table_class
idltest_table_link1	tests/idltest.h	252;"	d
idltest_table_link2	tests/idltest.h	253;"	d
idltest_table_simple	tests/idltest.h	251;"	d
ids	datapath/vport.h	/^	u32 ids[];$/;"	m	struct:vport_portids
idx	lib/heap.h	/^    size_t idx;$/;"	m	struct:heap_node
idx	ofproto/ofproto-dpif-mirror.c	/^    size_t idx;                 \/* In ofproto's "mirrors" array. *\/$/;"	m	struct:mirror	file:
idx_count	lib/coverage.c	/^static unsigned int idx_count = 0;$/;"	v	file:
ifDirection	lib/sflow.h	/^    u_int32_t ifDirection;        \/* Derived from MAU MIB (RFC 2668)$/;"	m	struct:_SFLIf_counters
ifInBroadcastPkts	lib/sflow.h	/^    u_int32_t ifInBroadcastPkts;$/;"	m	struct:_SFLIf_counters
ifInDiscards	lib/sflow.h	/^    u_int32_t ifInDiscards;$/;"	m	struct:_SFLIf_counters
ifInErrors	lib/sflow.h	/^    u_int32_t ifInErrors;$/;"	m	struct:_SFLIf_counters
ifInMulticastPkts	lib/sflow.h	/^    u_int32_t ifInMulticastPkts;$/;"	m	struct:_SFLIf_counters
ifInOctets	lib/sflow.h	/^    u_int64_t ifInOctets;$/;"	m	struct:_SFLIf_counters
ifInUcastPkts	lib/sflow.h	/^    u_int32_t ifInUcastPkts;$/;"	m	struct:_SFLIf_counters
ifInUnknownProtos	lib/sflow.h	/^    u_int32_t ifInUnknownProtos;$/;"	m	struct:_SFLIf_counters
ifIndex	lib/sflow.h	/^    u_int32_t ifIndex;$/;"	m	struct:_SFLIf_counters
ifOutBroadcastPkts	lib/sflow.h	/^    u_int32_t ifOutBroadcastPkts;$/;"	m	struct:_SFLIf_counters
ifOutDiscards	lib/sflow.h	/^    u_int32_t ifOutDiscards;$/;"	m	struct:_SFLIf_counters
ifOutErrors	lib/sflow.h	/^    u_int32_t ifOutErrors;$/;"	m	struct:_SFLIf_counters
ifOutMulticastPkts	lib/sflow.h	/^    u_int32_t ifOutMulticastPkts;$/;"	m	struct:_SFLIf_counters
ifOutOctets	lib/sflow.h	/^    u_int64_t ifOutOctets;$/;"	m	struct:_SFLIf_counters
ifOutUcastPkts	lib/sflow.h	/^    u_int32_t ifOutUcastPkts;$/;"	m	struct:_SFLIf_counters
ifPromiscuousMode	lib/sflow.h	/^    u_int32_t ifPromiscuousMode;$/;"	m	struct:_SFLIf_counters
ifSpeed	lib/sflow.h	/^    u_int64_t ifSpeed;$/;"	m	struct:_SFLIf_counters
ifStatus	lib/sflow.h	/^    u_int32_t ifStatus;           \/* bit field with the following bits assigned:$/;"	m	struct:_SFLIf_counters
ifType	lib/sflow.h	/^    u_int32_t ifType;$/;"	m	struct:_SFLIf_counters
if_change_cb	vswitchd/bridge.c	/^if_change_cb(void *aux OVS_UNUSED)$/;"	f	file:
if_index	lib/rtbsd.h	/^    int if_index;              \/* Index of network device. *\/$/;"	m	struct:rtbsd_change
if_index	lib/rtnetlink.h	/^    int if_index;               \/* Index of network device. *\/$/;"	m	struct:rtnetlink_change
if_name	lib/rtbsd.h	/^    char if_name[IF_NAMESIZE];         \/* Name of network device. *\/$/;"	m	struct:rtbsd_change
if_notifier	lib/if-notifier-bsd.c	/^struct if_notifier {$/;"	s	file:
if_notifier	lib/if-notifier.c	/^struct if_notifier {$/;"	s	file:
if_notifier_cb	lib/if-notifier-bsd.c	/^if_notifier_cb(const struct rtbsd_change *change OVS_UNUSED, void *aux)$/;"	f	file:
if_notifier_cb	lib/if-notifier.c	/^if_notifier_cb(const struct rtnetlink_change *change OVS_UNUSED, void *aux)$/;"	f	file:
if_notifier_create	lib/if-notifier-bsd.c	/^if_notifier_create(if_notify_func *cb, void *aux)$/;"	f
if_notifier_create	lib/if-notifier-stub.c	/^if_notifier_create(if_notify_func *cb OVS_UNUSED, void *aux OVS_UNUSED)$/;"	f
if_notifier_create	lib/if-notifier.c	/^if_notifier_create(if_notify_func *cb, void *aux)$/;"	f
if_notifier_destroy	lib/if-notifier-bsd.c	/^if_notifier_destroy(struct if_notifier *notifier)$/;"	f
if_notifier_destroy	lib/if-notifier-stub.c	/^if_notifier_destroy(struct if_notifier *notifier OVS_UNUSED)$/;"	f
if_notifier_destroy	lib/if-notifier.c	/^if_notifier_destroy(struct if_notifier *notifier)$/;"	f
if_notifier_run	lib/if-notifier-bsd.c	/^if_notifier_run(void)$/;"	f
if_notifier_run	lib/if-notifier-stub.c	/^if_notifier_run(void)$/;"	f
if_notifier_run	lib/if-notifier.c	/^if_notifier_run(void)$/;"	f
if_notifier_wait	lib/if-notifier-bsd.c	/^if_notifier_wait(void)$/;"	f
if_notifier_wait	lib/if-notifier-stub.c	/^if_notifier_wait(void)$/;"	f
if_notifier_wait	lib/if-notifier.c	/^if_notifier_wait(void)$/;"	f
if_notify_func	lib/if-notifier.h	/^typedef void if_notify_func(void *aux);$/;"	t
if_up	lib/dpctl.c	/^if_up(struct netdev *netdev)$/;"	f	file:
iface	ofproto/ofproto-dpif-xlate.c	/^            ofp_port_t iface;$/;"	m	struct:xc_entry::__anon188::__anon190	file:
iface	vswitchd/bridge.c	/^    struct iface *iface;$/;"	m	struct:qos_unixctl_show_cbdata	typeref:struct:qos_unixctl_show_cbdata::iface	file:
iface	vswitchd/bridge.c	/^struct iface {$/;"	s	file:
iface_by_name	vswitchd/bridge.c	/^    struct hmap iface_by_name;  \/* "struct iface"s indexed by name. *\/$/;"	m	struct:bridge	typeref:struct:bridge::hmap	file:
iface_cfg	utilities/ovs-vsctl.c	/^    struct ovsrec_interface *iface_cfg;$/;"	m	struct:vsctl_iface	typeref:struct:vsctl_iface::ovsrec_interface	file:
iface_clear_db_record	vswitchd/bridge.c	/^iface_clear_db_record(const struct ovsrec_interface *if_cfg, char *errp)$/;"	f	file:
iface_configure_cfm	vswitchd/bridge.c	/^iface_configure_cfm(struct iface *iface)$/;"	f	file:
iface_configure_lacp	vswitchd/bridge.c	/^iface_configure_lacp(struct iface *iface, struct lacp_slave_settings *s)$/;"	f	file:
iface_configure_qos	vswitchd/bridge.c	/^iface_configure_qos(struct iface *iface, const struct ovsrec_qos *qos)$/;"	f	file:
iface_create	vswitchd/bridge.c	/^iface_create(struct bridge *br, const struct ovsrec_interface *iface_cfg,$/;"	f	file:
iface_destroy	vswitchd/bridge.c	/^iface_destroy(struct iface *iface)$/;"	f	file:
iface_destroy__	vswitchd/bridge.c	/^iface_destroy__(struct iface *iface)$/;"	f	file:
iface_do_create	vswitchd/bridge.c	/^iface_do_create(const struct bridge *br,$/;"	f	file:
iface_find	vswitchd/bridge.c	/^iface_find(const char *name)$/;"	f	file:
iface_from_ofp_port	vswitchd/bridge.c	/^iface_from_ofp_port(const struct bridge *br, ofp_port_t ofp_port)$/;"	f	file:
iface_get_requested_ofp_port	vswitchd/bridge.c	/^iface_get_requested_ofp_port(const struct ovsrec_interface *cfg)$/;"	f	file:
iface_get_type	vswitchd/bridge.c	/^iface_get_type(const struct ovsrec_interface *iface,$/;"	f	file:
iface_hint	ofproto/ofproto.h	/^struct iface_hint {$/;"	s
iface_is_internal	vswitchd/bridge.c	/^iface_is_internal(const struct ovsrec_interface *iface,$/;"	f	file:
iface_is_synthetic	vswitchd/bridge.c	/^iface_is_synthetic(const struct iface *iface)$/;"	f	file:
iface_lookup	vswitchd/bridge.c	/^iface_lookup(const struct bridge *br, const char *name)$/;"	f	file:
iface_pick_ofport	vswitchd/bridge.c	/^iface_pick_ofport(const struct ovsrec_interface *cfg)$/;"	f	file:
iface_refresh_cfm_stats	vswitchd/bridge.c	/^iface_refresh_cfm_stats(struct iface *iface)$/;"	f	file:
iface_refresh_netdev_status	vswitchd/bridge.c	/^iface_refresh_netdev_status(struct iface *iface)$/;"	f	file:
iface_refresh_ofproto_status	vswitchd/bridge.c	/^iface_refresh_ofproto_status(struct iface *iface)$/;"	f	file:
iface_refresh_stats	vswitchd/bridge.c	/^iface_refresh_stats(struct iface *iface)$/;"	f	file:
iface_set_mac	vswitchd/bridge.c	/^iface_set_mac(const struct bridge *br, const struct port *port, struct iface *iface)$/;"	f	file:
iface_set_netdev_config	vswitchd/bridge.c	/^iface_set_netdev_config(const struct ovsrec_interface *iface_cfg,$/;"	f	file:
iface_set_ofport	vswitchd/bridge.c	/^iface_set_ofport(const struct ovsrec_interface *if_cfg, ofp_port_t ofport)$/;"	f	file:
iface_types	lib/vswitch-idl.h	/^	char **iface_types;$/;"	m	struct:ovsrec_open_vswitch
iface_validate_ofport__	vswitchd/bridge.c	/^iface_validate_ofport__(size_t n, int64_t *ofport)$/;"	f	file:
ifaces	utilities/ovs-vsctl.c	/^    struct ovs_list ifaces;      \/* Contains "struct vsctl_iface"s. *\/$/;"	m	struct:vsctl_port	typeref:struct:vsctl_port::ovs_list	file:
ifaces	utilities/ovs-vsctl.c	/^    struct shash ifaces;    \/* Maps from port name to struct vsctl_iface. *\/$/;"	m	struct:vsctl_context	typeref:struct:vsctl_context::shash	file:
ifaces	vswitchd/bridge.c	/^    struct hmap ifaces;         \/* "struct iface"s indexed by ofp_port. *\/$/;"	m	struct:bridge	typeref:struct:bridge::hmap	file:
ifaces	vswitchd/bridge.c	/^    struct ovs_list ifaces;    \/* List of "struct iface"s. *\/$/;"	m	struct:port	typeref:struct:port::ovs_list	file:
ifaces_changed	vswitchd/bridge.c	/^static bool ifaces_changed = false;$/;"	v	file:
ifaces_node	utilities/ovs-vsctl.c	/^    struct ovs_list ifaces_node; \/* In struct vsctl_port's 'ifaces' list. *\/$/;"	m	struct:vsctl_iface	typeref:struct:vsctl_iface::ovs_list	file:
ifdown	xenserver/opt_xensource_libexec_interface-reconfigure	/^def ifdown(netdev):$/;"	f
iff_to_nd_flags	lib/netdev-bsd.c	/^iff_to_nd_flags(int iff)$/;"	f	file:
iff_to_nd_flags	lib/netdev-linux.c	/^iff_to_nd_flags(int iff)$/;"	f	file:
ifi_flags	lib/netdev-linux.c	/^    unsigned int ifi_flags;$/;"	m	struct:netdev_linux	file:
ifi_flags	lib/netdev-windows.c	/^    uint32_t ifi_flags;$/;"	m	struct:netdev_windows_netdev_info	file:
ifi_flags	lib/netdev-windows.c	/^    unsigned int ifi_flags;$/;"	m	struct:netdev_windows	file:
ifi_flags	lib/rtnetlink.h	/^    unsigned int ifi_flags;     \/* Flags of network device. *\/$/;"	m	struct:rtnetlink_change
ifindex	lib/netdev-bsd.c	/^    int ifindex;$/;"	m	struct:netdev_bsd	file:
ifindex	lib/netdev-linux.c	/^    int ifindex;$/;"	m	struct:netdev_linux	file:
ifindex	lib/netdev-windows.c	/^    int ifindex;$/;"	m	struct:netdev_windows	file:
ifindex	lib/vswitch-idl.h	/^	int64_t *ifindex;$/;"	m	struct:ovsrec_interface
ifindex	utilities/ovs-check-dead-ifs	/^    ifindex = int(fields[4])$/;"	v
ifname	lib/lldp/lldpd-structs.h	/^    char              *ifname;$/;"	m	struct:lldpd_neighbor_change
ifname	lib/route-table.c	/^    char ifname[IFNAMSIZ]; \/* Interface name. *\/$/;"	m	struct:route_data	file:
ifname	lib/rtnetlink.h	/^    const char *ifname;         \/* Name of network device. *\/$/;"	m	struct:rtnetlink_change
ifnotifier	vswitchd/bridge.c	/^static struct if_notifier *ifnotifier;$/;"	v	typeref:struct:if_notifier	file:
ifr_filter	tests/testsuite	/^ifr_filter () {$/;"	f
ifr_get_flags	lib/netdev-bsd.c	/^ifr_get_flags(const struct ifreq *ifr)$/;"	f	file:
ifr_run	tests/testsuite	/^ifr_run () {$/;"	f
ifr_set_flags	lib/netdev-bsd.c	/^ifr_set_flags(struct ifreq *ifr, int flags)$/;"	f	file:
ifr_setup	tests/testsuite	/^ifr_setup () {$/;"	f
ifup	xenserver/opt_xensource_libexec_interface-reconfigure	/^def ifup(netdev):$/;"	f
ifup_ovs_bridge	rhel/etc_sysconfig_network-scripts_ifup-ovs	/^ifup_ovs_bridge ()$/;"	f
igmp_code	lib/packets.h	/^    uint8_t igmp_code;$/;"	m	struct:igmp_header
igmp_csum	lib/packets.h	/^    ovs_be16 igmp_csum;$/;"	m	struct:igmp_header
igmp_group_ip4	lib/flow.h	/^    ovs_be32 igmp_group_ip4;    \/* IGMP group IPv4 address.$/;"	m	struct:flow
igmp_header	lib/packets.h	/^struct igmp_header {$/;"	s
igmp_type	lib/packets.h	/^    uint8_t igmp_type;$/;"	m	struct:igmp_header
igmpv3_header	lib/packets.h	/^struct igmpv3_header {$/;"	s
igmpv3_record	lib/packets.h	/^struct igmpv3_record {$/;"	s
ignore	lib/util.c	/^void ignore(bool x OVS_UNUSED) { }$/;"	f
ignore_df	datapath/linux/compat/include/linux/skbuff.h	38;"	d
ignore_existing_pidfile	lib/daemon-unix.c	/^ignore_existing_pidfile(void)$/;"	f
ignore_existing_pidfile	python/ovs/daemon.py	/^def ignore_existing_pidfile():$/;"	f
ihl	datapath-windows/ovsext/NetProto.h	/^   UINT8    ihl:4,$/;"	m	struct:IPHdr
illegalRx	lib/sflow.h	/^    uint32_t illegalRx;$/;"	m	struct:_SFLLACP_counters
illegal_highdma	datapath/linux/compat/netdevice.c	/^static inline int illegal_highdma(struct net_device *dev, struct sk_buff *skb)$/;"	f	file:
illegal_highdma	datapath/linux/netdevice.c	/^static inline int illegal_highdma(struct net_device *dev, struct sk_buff *skb)$/;"	f	file:
illoptchar	lib/getopt_long.c	/^static const char illoptchar[] = "unknown option -- %c";$/;"	v	file:
illoptstring	lib/getopt_long.c	/^static const char illoptstring[] = "unknown option -- %s";$/;"	v	file:
immediate_wake	python/ovs/poller.py	/^    def immediate_wake(self):$/;"	m	class:Poller
immutable_schema	tests/testsuite	/^immutable_schema () {$/;"	f
impl	lib/cmap.h	/^    OVSRCU_TYPE(struct cmap_impl *) impl;$/;"	m	struct:cmap
impl	lib/cmap.h	/^    const struct cmap_impl *impl;$/;"	m	struct:cmap_cursor	typeref:struct:cmap_cursor::cmap_impl
impl	lib/pvector.h	/^    OVSRCU_TYPE(struct pvector_impl *) impl;$/;"	m	struct:pvector
implements	python/ovstest/tcp.py	/^from zope.interface import implements$/;"	i
importance	include/openflow/openflow-1.1.h	/^    ovs_be16 importance;         \/* Eviction precedence (OF1.4+). *\/$/;"	m	struct:ofp11_flow_mod
importance	include/openflow/openflow-1.1.h	/^    ovs_be16 importance;       \/* Eviction precedence (OF1.4+). *\/$/;"	m	struct:ofp11_flow_stats
importance	lib/ofp-util.h	/^    uint16_t importance;        \/* Eviction precedence. *\/$/;"	m	struct:ofputil_flow_stats
importance	lib/ofp-util.h	/^    uint16_t importance;     \/* Eviction precedence. *\/$/;"	m	struct:ofputil_flow_mod
importance	ofproto/ofproto-provider.h	/^    const uint16_t importance;$/;"	m	struct:rule
importance	utilities/ovs-ofctl.c	/^    uint16_t importance;$/;"	m	struct:fte_version	file:
in4	lib/netdev-bsd.c	/^    struct in_addr in4;$/;"	m	struct:netdev_bsd	typeref:struct:netdev_bsd::in_addr	file:
in4_error	lib/netdev-linux.c	/^    int in4_error;              \/* Cached error code from reading in4 addr. *\/$/;"	m	struct:netdev_linux	file:
in6	lib/netdev-bsd.c	/^    struct in6_addr in6;$/;"	m	struct:netdev_bsd	typeref:struct:netdev_bsd::in6_addr	file:
in6	lib/netdev-linux.c	/^    struct in6_addr in6;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::in6_addr	file:
in6_addr	include/sparse/netinet/in.h	/^struct in6_addr {$/;"	s
in6_addr_get_mapped_ipv4	lib/packets.h	/^in6_addr_get_mapped_ipv4(const struct in6_addr *addr)$/;"	f
in6_addr_set_mapped_ipv4	lib/packets.h	/^in6_addr_set_mapped_ipv4(struct in6_addr *addr, ovs_be32 ip4)$/;"	f
in6_error	lib/netdev-linux.c	/^    int in6_error;              \/* Cached error code from reading in6 addr. *\/$/;"	m	struct:netdev_linux	file:
in6addr_all_hosts	lib/packets.c	/^const struct in6_addr in6addr_all_hosts = IN6ADDR_ALL_HOSTS_INIT;$/;"	v	typeref:struct:in6_addr
in6addr_exact	lib/packets.c	/^const struct in6_addr in6addr_exact = IN6ADDR_EXACT_INIT;$/;"	v	typeref:struct:in6_addr
inComment	build-aux/check-structs	/^inComment = False$/;"	v
inComment	build-aux/extract-ofp-errors	/^inComment = False$/;"	v
inDirective	build-aux/check-structs	/^inDirective = False$/;"	v
inDirective	build-aux/extract-ofp-errors	/^inDirective = False$/;"	v
inPkts	datapath-windows/ovsext/Stt.h	/^    UINT64 inPkts;$/;"	m	struct:_OVS_STT_VPORT
inPkts	datapath-windows/ovsext/Vxlan.h	/^    UINT64 inPkts;$/;"	m	struct:_OVS_VXLAN_VPORT
inPort	datapath-windows/ovsext/DpInternal.h	/^    uint32_t inPort;             \/* Port number of input port. *\/$/;"	m	struct:L2Key
inPort	datapath-windows/ovsext/DpInternal.h	/^    uint32_t inPort;$/;"	m	struct:_OVS_PACKET_INFO
inPort	datapath-windows/ovsext/DpInternal.h	/^   uint32_t inPort;$/;"	m	struct:OvsPacketExecute
inPort	datapath-windows/ovsext/IpHelper.h	/^    UINT32            inPort;$/;"	m	struct:_OVS_FWD_REQUEST_INFO
in_action_set	ofproto/ofproto-dpif-xlate.c	/^    bool in_action_set;         \/* Currently translating action_set, if true. *\/$/;"	m	struct:xlate_ctx	file:
in_addr	include/sparse/netinet/in.h	/^struct in_addr {$/;"	s
in_addr_t	include/sparse/netinet/in.h	/^typedef ovs_be32 in_addr_t;$/;"	t
in_band	ofproto/connmgr.c	/^    struct in_band *in_band;$/;"	m	struct:connmgr	typeref:struct:connmgr::in_band	file:
in_band	ofproto/in-band.c	/^VLOG_DEFINE_THIS_MODULE(in_band);$/;"	v
in_band	ofproto/in-band.c	/^struct in_band {$/;"	s	file:
in_band_count_rules	ofproto/in-band.c	/^in_band_count_rules(const struct in_band *ib)$/;"	f
in_band_create	ofproto/in-band.c	/^in_band_create(struct ofproto *ofproto, const char *local_name,$/;"	f
in_band_destroy	ofproto/in-band.c	/^in_band_destroy(struct in_band *ib)$/;"	f
in_band_must_output_to_local_port	ofproto/in-band.c	/^in_band_must_output_to_local_port(const struct flow *flow)$/;"	f
in_band_op	ofproto/in-band.c	/^enum in_band_op {$/;"	g	file:
in_band_queue	ofproto/connmgr.c	/^    int in_band_queue;$/;"	m	struct:connmgr	file:
in_band_remote	ofproto/in-band.c	/^struct in_band_remote {$/;"	s	file:
in_band_rule	ofproto/in-band.c	/^struct in_band_rule {$/;"	s	file:
in_band_run	ofproto/in-band.c	/^in_band_run(struct in_band *ib)$/;"	f
in_band_set_queue	ofproto/in-band.c	/^in_band_set_queue(struct in_band *ib, int queue_id)$/;"	f
in_band_set_remotes	ofproto/in-band.c	/^in_band_set_remotes(struct in_band *ib,$/;"	f
in_band_wait	ofproto/in-band.c	/^in_band_wait(struct in_band *in_band)$/;"	f
in_curlies	ovn/lib/expr.c	/^    bool in_curlies;              \/* Whether the constants were in {}. *\/$/;"	m	struct:expr_constant_set	file:
in_decay	lib/bfd.c	/^    bool in_decay;                \/* True when bfd is in decay. *\/$/;"	m	struct:bfd	file:
in_group	ofproto/ofproto-dpif-xlate.c	/^    bool in_group;              \/* Currently translating ofgroup, if true. *\/$/;"	m	struct:xlate_ctx	file:
in_key	lib/netdev.h	/^    ovs_be64 in_key;$/;"	m	struct:netdev_tunnel_config
in_key	ofproto/tunnel.c	/^    ovs_be64 in_key;$/;"	m	struct:tnl_match	file:
in_key_flow	lib/netdev.h	/^    bool in_key_flow;$/;"	m	struct:netdev_tunnel_config
in_key_flow	ofproto/tunnel.c	/^    bool in_key_flow;$/;"	m	struct:tnl_match	file:
in_key_present	lib/netdev.h	/^    bool in_key_present;$/;"	m	struct:netdev_tunnel_config
in_phy_port	include/openflow/openflow-1.1.h	/^    ovs_be32 in_phy_port;   \/* Physical Port on which frame was received. *\/$/;"	m	struct:ofp11_packet_in
in_port	datapath/flow.h	/^		u16	in_port;	\/* Input switch port (or DP_MAX_PORTS). *\/$/;"	m	struct:sw_flow_key::__anon27
in_port	include/openflow/openflow-1.0.h	/^    ovs_be16 in_port;             \/* Packet's input port (OFPP_NONE if none). *\/$/;"	m	struct:ofp10_packet_out
in_port	include/openflow/openflow-1.0.h	/^    ovs_be16 in_port;          \/* Input switch port. *\/$/;"	m	struct:ofp10_match
in_port	include/openflow/openflow-1.0.h	/^    ovs_be16 in_port;       \/* Port on which frame was received. *\/$/;"	m	struct:ofp10_packet_in
in_port	include/openflow/openflow-1.1.h	/^    ovs_be32 in_port;          \/* Input switch port. *\/$/;"	m	struct:ofp11_match
in_port	include/openflow/openflow-1.1.h	/^    ovs_be32 in_port;         \/* Packet's input port or OFPP_CONTROLLER. *\/$/;"	m	struct:ofp11_packet_out
in_port	include/openflow/openflow-1.1.h	/^    ovs_be32 in_port;       \/* Port on which frame was received. *\/$/;"	m	struct:ofp11_packet_in
in_port	lib/flow.h	/^    union flow_in_port in_port; \/* Input port.*\/$/;"	m	struct:flow	typeref:union:flow::flow_in_port
in_port	lib/ofp-actions.c	/^    ovs_be16 in_port;               \/* New in_port for checking flow table. *\/$/;"	m	struct:nx_action_resubmit	file:
in_port	lib/ofp-actions.h	/^    ofp_port_t in_port;$/;"	m	struct:ofpact_resubmit
in_port	lib/ofp-util.h	/^    ofp_port_t in_port;         \/* Packet's input port. *\/$/;"	m	struct:ofputil_packet_out
in_port	lib/packets.h	/^    union flow_in_port in_port; \/* Input port. *\/$/;"	m	struct:pkt_metadata	typeref:union:pkt_metadata::flow_in_port
in_port	ofproto/netflow.c	/^    ofp_port_t in_port;           \/* Input port. *\/$/;"	m	struct:netflow_flow	file:
in_port	ofproto/ofproto-dpif-rid.h	/^    ofp_port_t in_port;           \/* Incoming port. *\/$/;"	m	struct:recirc_metadata
in_port	ofproto/ofproto-dpif-upcall.c	/^    ofp_port_t in_port;            \/* OpenFlow in port, or OFPP_NONE. *\/$/;"	m	struct:upcall	file:
in_port	ofproto/ofproto.c	/^    ofp_port_t in_port;$/;"	m	struct:rule_execute	file:
in_port	ofproto/pktbuf.c	/^    ofp_port_t in_port;$/;"	m	struct:packet	file:
in_port_t	include/sparse/netinet/in.h	/^typedef ovs_be16 in_port_t;$/;"	t
in_port_values	tests/test-classifier.c	/^static ofp_port_t in_port_values[] = { OFP_PORT_C(1), OFPP_LOCAL };$/;"	v	file:
in_stack	lib/sflow.h	/^    SFLLabelStack in_stack;$/;"	m	struct:_SFLExtended_mpls
inactivity_probe	lib/vswitch-idl.h	/^	int64_t *inactivity_probe;$/;"	m	struct:ovsrec_controller
inactivity_probe	lib/vswitch-idl.h	/^	int64_t *inactivity_probe;$/;"	m	struct:ovsrec_manager
inactivity_probe	vtep/vtep-idl.h	/^	int64_t *inactivity_probe;$/;"	m	struct:vteprec_manager
inc_column	lib/ovsdb-idl.c	/^    const char *inc_column;$/;"	m	struct:ovsdb_idl_txn	file:
inc_index	lib/ovsdb-idl.c	/^    unsigned int inc_index;$/;"	m	struct:ovsdb_idl_txn	file:
inc_new_value	lib/ovsdb-idl.c	/^    int64_t inc_new_value;$/;"	m	struct:ovsdb_idl_txn	file:
inc_row	lib/ovsdb-idl.c	/^    struct uuid inc_row;$/;"	m	struct:ovsdb_idl_txn	typeref:struct:ovsdb_idl_txn::uuid	file:
inc_table	lib/ovsdb-idl.c	/^    const char *inc_table;$/;"	m	struct:ovsdb_idl_txn	file:
incl_len	lib/pcap-file.c	/^    uint32_t incl_len;       \/* number of octets of packet saved in file *\/$/;"	m	struct:pcaprec_hdr	file:
includePath	build-aux/check-structs	/^            includePath = fileName[2:]$/;"	v
includePath	build-aux/check-structs	/^includePath = ''$/;"	v
includeRe	build-aux/check-structs	/^includeRe = re.compile(r'\\s*#include\\s+<(openflow\/[^#]+)>')$/;"	v
include_hidden	ofproto/ofproto.c	/^    bool include_hidden;$/;"	m	struct:rule_criteria	file:
include_readonly	ofproto/ofproto.c	/^    bool include_readonly;$/;"	m	struct:rule_criteria	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	datapath/Makefile	/^includedir = ${prefix}\/include$/;"	m
inconsistent_match	lib/ofp-actions.c	/^inconsistent_match(enum ofputil_protocol *usable_protocols)$/;"	f	file:
increment	python/ovs/db/idl.py	/^    def increment(self, column_name):$/;"	m	class:Row
increment	utilities/ovs-benchmark.c	/^increment(unsigned short int *value,$/;"	f	file:
indent	ovsdb/ovsdb-idlc	/^                    indent = "            "$/;"	v
indent	ovsdb/ovsdb-idlc	/^                    indent = "        "$/;"	v
indent_line	lib/json.c	/^indent_line(struct json_serializer *s)$/;"	f	file:
index	datapath-windows/ovsext/Datapath.h	/^        UINT32 index[2];        \/* markers to continue dump from. One or more$/;"	m	struct:_OVS_OPEN_INSTANCE::__anon4
index	include/openflow/nicira-ext.h	/^    ovs_be16 index;        \/* NXM_NX_TUN_METADATA<n> index *\/$/;"	m	struct:nx_geneve_map
index	lib/dpif-netdev.c	/^    int index;                      \/* Idx of this pmd thread among pmd*\/$/;"	m	struct:dp_netdev_pmd_thread	file:
index	lib/ofp-util.h	/^    uint16_t index;$/;"	m	struct:ofputil_geneve_map
index	lib/ovs-thread.c	/^    unsigned int index;$/;"	m	struct:ovsthread_key	file:
index	ovsdb/column.h	/^    unsigned int index;$/;"	m	struct:ovsdb_column
index_inside_part	datapath/linux/compat/flex_array.c	/^static unsigned int index_inside_part(struct flex_array *fa,$/;"	f	file:
index_inside_part	datapath/linux/flex_array.c	/^static unsigned int index_inside_part(struct flex_array *fa,$/;"	f	file:
index_maps	lib/classifier-private.h	/^    const struct flowmap index_maps[CLS_MAX_INDICES + 1]; \/* Stage maps. *\/$/;"	m	struct:cls_subtable	typeref:struct:cls_subtable::flowmap
index_nodes	lib/classifier-private.h	/^    struct cmap_node index_nodes[CLS_MAX_INDICES]; \/* Within subtable's$/;"	m	struct:cls_match	typeref:struct:cls_match::cmap_node
indexes	ovsdb/table.h	/^    struct hmap *indexes;$/;"	m	struct:ovsdb_table	typeref:struct:ovsdb_table::hmap
indexes	ovsdb/table.h	/^    struct ovsdb_column_set *indexes;$/;"	m	struct:ovsdb_table_schema	typeref:struct:ovsdb_table_schema::ovsdb_column_set
indices	lib/classifier-private.h	/^    struct cmap indices[CLS_MAX_INDICES];   \/* Staged lookup indices. *\/$/;"	m	struct:cls_subtable	typeref:struct:cls_subtable::cmap
inet	lib/lldp/lldpd-structs.h	/^        struct in_addr  inet;$/;"	m	union:lldpd_mgmt::__anon98	typeref:struct:lldpd_mgmt::__anon98::in_addr
inet6	lib/lldp/lldpd-structs.h	/^        struct in6_addr inet6;$/;"	m	union:lldpd_mgmt::__anon98	typeref:struct:lldpd_mgmt::__anon98::in6_addr
inet_aton	tests/flowgen.pl	/^sub inet_aton {$/;"	s
inet_frag_evictor	datapath/linux/compat/include/net/inet_frag.h	8;"	d
inet_get_local_port_range	datapath/linux/compat/include/net/ip.h	21;"	d
inet_get_local_port_range	datapath/linux/compat/include/net/udp.h	11;"	d
inet_get_local_port_range	datapath/linux/compat/include/net/udp.h	9;"	d
inet_open_active	lib/socket-util.c	/^inet_open_active(int style, const char *target, uint16_t default_port,$/;"	f
inet_open_active	python/ovs/socket_util.py	/^def inet_open_active(style, target, default_port, dscp):$/;"	f
inet_open_passive	lib/socket-util.c	/^inet_open_passive(int style, const char *target, int default_port,$/;"	f
inet_parse_active	lib/socket-util.c	/^inet_parse_active(const char *target_, uint16_t default_port,$/;"	f
inet_parse_active	python/ovs/socket_util.py	/^def inet_parse_active(target, default_port):$/;"	f
inet_parse_passive	lib/socket-util.c	/^inet_parse_passive(const char *target_, int default_port,$/;"	f
inet_proto_csum_replace16	datapath/linux/compat/include/net/checksum.h	40;"	d
inet_sport	datapath/compat.h	41;"	d
inet_sport	datapath/compat.h	43;"	d
info	datapath-windows/ovsext/DpInternal.h	/^    OvsFlowInfo info;            \/* Variable length. *\/$/;"	m	struct:OvsFlowGetOutput
info	datapath-windows/ovsext/IpHelper.h	/^    OVS_FWD_INFO      info;$/;"	m	struct:_OVS_FWD_ENTRY
info	lib/reconnect.c	/^    enum vlog_level info;       \/* Used for informational messages. *\/$/;"	m	struct:reconnect	typeref:enum:reconnect::vlog_level	file:
info	python/ovs/vlog.py	/^    def info(self, message, **kwargs):$/;"	m	class:Vlog
info	utilities/bugtool/ovs-bugtool	/^                info = k$/;"	v
info	utilities/bugtool/ovs-bugtool	/^                info = k[0]$/;"	v
info_is_enabled	python/ovs/vlog.py	/^    def info_is_enabled(self):$/;"	m	class:Vlog
info_tx_equal	lib/lacp.c	/^info_tx_equal(struct lacp_info *a, struct lacp_info *b)$/;"	f	file:
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	datapath/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
ingress_policing_burst	lib/vswitch-idl.h	/^	int64_t ingress_policing_burst;$/;"	m	struct:ovsrec_interface
ingress_policing_rate	lib/vswitch-idl.h	/^	int64_t ingress_policing_rate;$/;"	m	struct:ovsrec_interface
init	datapath/linux/compat/include/net/net_namespace.h	/^	int (*init)(struct net *net);$/;"	m	struct:rpl_pernet_operations
init	lib/dpif-provider.h	/^    int (*init)(void);$/;"	m	struct:dpif_class
init	lib/netdev-provider.h	/^    int (*init)(void);$/;"	m	struct:netdev_class
init	ofproto/ofproto-dpif.c	/^init(const struct shash *iface_hints)$/;"	f	file:
init	ofproto/ofproto-provider.h	/^    void (*init)(const struct shash *iface_hints);$/;"	m	struct:ofproto_class
init	python/ovs/vlog.py	/^    def init(log_file=None):$/;"	m	class:Vlog
initCDefault	python/ovs/db/types.py	/^    def initCDefault(self, var, is_optional):$/;"	m	class:BaseType
initSocket	lib/sflow_receiver.c	/^static void initSocket(SFLReceiver *receiver) {$/;"	f	file:
init_clock	lib/timeval.c	/^init_clock(struct clock *c, clockid_t id)$/;"	f	file:
init_consecutive_values	tests/test-classifier.c	/^init_consecutive_values(int n_consecutive, struct flow *flow,$/;"	f	file:
init_group	ofproto/ofproto.c	/^init_group(struct ofproto *ofproto, struct ofputil_group_mod *gm,$/;"	f	file:
init_ofp_ports	ofproto/ofproto-dpif.c	/^static struct shash init_ofp_ports = SHASH_INITIALIZER(&init_ofp_ports);$/;"	v	typeref:struct:shash	file:
init_ofp_ports	ofproto/ofproto.c	/^static struct shash init_ofp_ports = SHASH_INITIALIZER(&init_ofp_ports);$/;"	v	typeref:struct:shash	file:
init_ports	ofproto/ofproto.c	/^init_ports(struct ofproto *p)$/;"	f	file:
init_restore_scripts	utilities/ovs-ctl	/^init_restore_scripts () {$/;"	f
init_restore_scripts	utilities/ovs-ctl.in	/^init_restore_scripts () {$/;"	f
init_service_status	lib/daemon-windows.c	/^init_service_status()$/;"	f	file:
init_session	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def init_session():$/;"	f
init_stack_action	ovn/lib/expr.c	/^init_stack_action(const struct expr_field *f, struct ofpact_stack *stack)$/;"	f	file:
init_terminal	tests/test-ovn.c	/^init_terminal(struct expr *expr, int phase,$/;"	f	file:
init_time	lib/netflow.h	/^    ovs_be32 init_time;            \/* Value of sysuptime on first packet. *\/$/;"	m	struct:netflow_v5_record
init_tree_shape	tests/test-ovn.c	/^init_tree_shape(struct tree_shape ts[], int n)$/;"	f	file:
init_tree_shape__	tests/test-ovn.c	/^init_tree_shape__(struct tree_shape ts[], int n)$/;"	f	file:
init_values	tests/test-classifier.c	/^init_values(void)$/;"	f	file:
inited	lib/vswitch-idl.c	/^static bool inited;$/;"	v	file:
inited	ovn/lib/ovn-nb-idl.c	/^static bool inited;$/;"	v	file:
inited	ovn/lib/ovn-sb-idl.c	/^static bool inited;$/;"	v	file:
inited	tests/idltest.c	/^static bool inited;$/;"	v	file:
inited	vtep/vtep-idl.c	/^static bool inited;$/;"	v	file:
initial_config_done	vswitchd/bridge.c	/^static bool initial_config_done;$/;"	v	file:
inline	include/windows/windefs.h	33;"	d
inline_xml_to_nroff	python/build/nroff.py	/^def inline_xml_to_nroff(node, font, to_upper=False, newline='\\n'):$/;"	f
inner_mac_header	datapath/linux/compat/gso.h	/^	unsigned int	inner_mac_header;$/;"	m	struct:ovs_gso_cb
inner_network_header	datapath/linux/compat/gso.h	/^	unsigned int	inner_network_header;$/;"	m	struct:ovs_gso_cb
inner_protocol	datapath/linux/compat/gso.h	/^	__be16		inner_protocol;$/;"	m	struct:ovs_gso_cb
inode	lib/lockfile.c	/^    ino_t inode;$/;"	m	struct:lockfile	file:
inode	utilities/ovs-check-dead-ifs	/^        inode = int(m.group(1))$/;"	v
inode_re	utilities/ovs-check-dead-ifs	/^inode_re = re.compile(r'socket:\\[([0-9]+)\\]$')$/;"	v
input	lib/jsonrpc.c	/^    struct byteq input;$/;"	m	struct:jsonrpc	typeref:struct:jsonrpc::byteq	file:
input	lib/netflow.h	/^    ovs_be16 input;                \/* Input interface index. *\/$/;"	m	struct:netflow_v5_record
input	lib/sflow.h	/^    u_int32_t input;                \/* SNMP ifIndex of input interface.$/;"	m	struct:_SFLFlow_sample
input	lib/sflow.h	/^    u_int32_t input;                \/* SNMP ifIndex of input interface.$/;"	m	struct:_SFLFlow_sample_expanded
input	ovn/lib/lex.h	/^    const char *input;          \/* Remaining input (not owned by lexer). *\/$/;"	m	struct:lexer
input	ovsdb/log.c	/^    char input[4096];$/;"	m	struct:ovsdb_log_read_cbdata	file:
inputBuffer	datapath-windows/ovsext/Datapath.h	/^    PVOID inputBuffer;   \/* Input data specified by userspace. Maybe NULL. *\/$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
inputBuffer	datapath-windows/ovsext/Vport.c	/^    PVOID inputBuffer;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
inputFile	build-aux/check-structs	/^        inputFile = open(fileName)$/;"	v
inputFormat	lib/sflow.h	/^    u_int32_t inputFormat;          \/* EXPANDED *\/$/;"	m	struct:_SFLFlow_sample_expanded
inputLength	datapath-windows/ovsext/Datapath.h	/^    UINT32 inputLength;  \/* Length of input buffer. *\/$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
inputPort	tests/test-sflow.c	/^    uint32_t inputPort;$/;"	m	struct:sflow_xdr	file:
inputPortFormat	tests/test-sflow.c	/^    uint32_t inputPortFormat;$/;"	m	struct:sflow_xdr	file:
inputStack	build-aux/check-structs	/^inputStack = []$/;"	v
input_buffer	lib/jsonrpc.c	/^    uint8_t input_buffer[512];$/;"	m	struct:jsonrpc	file:
input_file	build-aux/extract-ofp-fields	/^        input_file = open(file_name)$/;"	v
input_file	build-aux/extract-ofp-msgs	/^        input_file = open(file_name)$/;"	v
input_vid_is_valid	ofproto/ofproto-dpif-xlate.c	/^input_vid_is_valid(uint16_t vid, struct xbundle *in_xbundle, bool warn)$/;"	f	file:
input_vid_to_vlan	ofproto/ofproto-dpif-xlate.c	/^input_vid_to_vlan(const struct xbundle *in_xbundle, uint16_t vid)$/;"	f	file:
input_vport	datapath/datapath.h	/^	struct vport		*input_vport;$/;"	m	struct:ovs_skb_cb	typeref:struct:ovs_skb_cb::vport
insert	python/ovs/db/idl.py	/^    def insert(self, table, new_uuid=None):$/;"	m	class:Transaction
insert_bal	ofproto/bond.c	/^insert_bal(struct ovs_list *bals, struct bond_slave *slave)$/;"	f	file:
insert_controllers	utilities/ovs-vsctl.c	/^insert_controllers(struct ovsdb_idl_txn *txn, char *targets[], size_t n)$/;"	f	file:
insert_ipdev	lib/tnl-ports.c	/^insert_ipdev(const char dev_name[])$/;"	f	file:
insert_managers	utilities/ovs-vsctl.c	/^insert_managers(struct vsctl_context *vsctl_ctx, char *targets[], size_t n)$/;"	f	file:
insert_managers	vtep/vtep-ctl.c	/^insert_managers(struct vtep_ctl_context *vtepctl_ctx, char *targets[], size_t n)$/;"	f	file:
insert_mod_if_required	utilities/ovs-ctl	/^insert_mod_if_required () {$/;"	f
insert_mod_if_required	utilities/ovs-ctl.in	/^insert_mod_if_required () {$/;"	f
insert_mods	utilities/ovs-ctl	/^insert_mods () {$/;"	f
insert_mods	utilities/ovs-ctl.in	/^insert_mods () {$/;"	f
insert_subtable	lib/classifier.c	/^insert_subtable(struct classifier *cls, const struct minimask *mask)$/;"	f	file:
inserted_rows	lib/ovsdb-idl.c	/^    struct hmap inserted_rows;  \/* Contains "struct ovsdb_idl_txn_insert"s. *\/$/;"	m	struct:ovsdb_idl_txn	typeref:struct:ovsdb_idl_txn::hmap	file:
inst_info	lib/ofp-actions.c	/^static const struct instruction_type_info inst_info[] = {$/;"	v	typeref:struct:instruction_type_info	file:
install_dpdk	.travis/build.sh	/^function install_dpdk()$/;"	f
install_kernel	.travis/build.sh	/^function install_kernel()$/;"	f
install_mark_rule	debian/openvswitch-ipsec.init	/^install_mark_rule() {$/;"	f
install_sh	Makefile	/^install_sh = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/install-sh$/;"	m
install_sh	datapath/Makefile	/^install_sh = ${SHELL} \/root\/openvswitch-2.4.0\/ovs\/build-aux\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	datapath/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	datapath/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	datapath/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
installed_flows	ovn/controller/ofctrl.c	/^static struct hmap installed_flows;$/;"	v	typeref:struct:hmap	file:
instance	datapath-windows/ovsext/Event.h	/^    PVOID instance;$/;"	m	struct:_OVS_EVENT_QUEUE
instance	datapath-windows/ovsext/User.h	/^    PVOID instance;$/;"	m	struct:_OVS_USER_PACKET_QUEUE
instanceID	datapath-windows/ovsext/Vxlan.h	/^    UINT32   instanceID:1;$/;"	m	struct:VXLANHdr
instance_id	datapath/linux/vport-lisp.c	/^			__u8 instance_id[3];$/;"	m	struct:lisphdr::__anon53::__anon54	file:
instance_id	datapath/vport-lisp.c	/^			__u8 instance_id[3];$/;"	m	struct:lisphdr::__anon56::__anon57	file:
instance_id_present	datapath/linux/vport-lisp.c	/^	__u8 instance_id_present:1;$/;"	m	struct:lisphdr	file:
instance_id_present	datapath/vport-lisp.c	/^	__u8 instance_id_present:1;$/;"	m	struct:lisphdr	file:
instance_id_to_tunnel_id	datapath/linux/vport-lisp.c	/^static __be64 instance_id_to_tunnel_id(__u8 *iid)$/;"	f	file:
instance_id_to_tunnel_id	datapath/vport-lisp.c	/^static __be64 instance_id_to_tunnel_id(__u8 *iid)$/;"	f	file:
instances	lib/ofp-msgs.c	/^    struct raw_instance *instances; \/* min_version - max_version + 1 elems. *\/$/;"	m	struct:raw_info	typeref:struct:raw_info::raw_instance	file:
instruction_is_valid	lib/ofp-actions.c	/^instruction_is_valid(const struct ofp11_instruction *inst,$/;"	f	file:
instruction_next	lib/ofp-actions.c	/^instruction_next(const struct ofp11_instruction *inst)$/;"	f	file:
instruction_type_info	lib/ofp-actions.c	/^struct instruction_type_info {$/;"	s	file:
instructions	include/openflow/openflow-1.1.h	/^    ovs_be32 instructions;   \/* Bitmap of OFPIT_* values supported. *\/$/;"	m	struct:ofp11_table_stats
instructions	include/openflow/openflow-1.2.h	/^    ovs_be32 instructions;   \/* Bitmap of OFPIT_* values supported. *\/$/;"	m	struct:ofp12_table_stats
instructions	lib/ofp-util.h	/^        uint32_t instructions;$/;"	m	struct:ofputil_table_features::ofputil_table_instruction_features
int64	datapath-windows/ovsext/Types.h	/^typedef long long int64, int64_t;$/;"	t
int64_t	datapath-windows/ovsext/Types.h	/^typedef long long int64, int64_t;$/;"	t
integer	lib/json.c	/^        long long int integer;$/;"	m	union:json_token::__anon92	file:
integer	lib/json.h	/^        long long int integer;$/;"	m	union:json::__anon93
integer	lib/meta-flow.h	/^        ovs_be64 integer;$/;"	m	struct:mf_subvalue::__anon101
integer	lib/ovsdb-data.h	/^    int64_t integer;$/;"	m	union:ovsdb_atom
integer	lib/ovsdb-types.h	/^        } integer;$/;"	m	union:ovsdb_base_type::__anon146	typeref:struct:ovsdb_base_type::__anon146::ovsdb_integer_constraints
interface_assign_ip	python/ovstest/util.py	/^def interface_assign_ip(iface, ip_addr, mask):$/;"	f
interface_get_ip	python/ovstest/util.py	/^def interface_get_ip(iface):$/;"	f
interface_is_up	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def interface_is_up(pif):$/;"	f
interface_up	python/ovstest/util.py	/^def interface_up(iface):$/;"	f
interfaces	lib/vswitch-idl.h	/^	struct ovsrec_interface **interfaces;$/;"	m	struct:ovsrec_port	typeref:struct:ovsrec_port::ovsrec_interface
interfaces	python/ovstest/tcp.py	/^from twisted.internet import interfaces$/;"	i
internalPortId	datapath-windows/ovsext/Switch.h	/^    NDIS_SWITCH_PORT_ID     internalPortId;$/;"	m	struct:_OVS_SWITCH_CONTEXT
internalVport	datapath-windows/ovsext/Switch.h	/^    POVS_VPORT_ENTRY        internalVport;$/;"	m	struct:_OVS_SWITCH_CONTEXT
internal_dev	datapath/linux/vport-internal_dev.c	/^struct internal_dev {$/;"	s	file:
internal_dev	datapath/vport-internal_dev.c	/^struct internal_dev {$/;"	s	file:
internal_dev_change_mtu	datapath/linux/vport-internal_dev.c	/^static int internal_dev_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
internal_dev_change_mtu	datapath/vport-internal_dev.c	/^static int internal_dev_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
internal_dev_create	datapath/linux/vport-internal_dev.c	/^static struct vport *internal_dev_create(const struct vport_parms *parms)$/;"	f	file:
internal_dev_create	datapath/vport-internal_dev.c	/^static struct vport *internal_dev_create(const struct vport_parms *parms)$/;"	f	file:
internal_dev_destroy	datapath/linux/vport-internal_dev.c	/^static void internal_dev_destroy(struct vport *vport)$/;"	f	file:
internal_dev_destroy	datapath/vport-internal_dev.c	/^static void internal_dev_destroy(struct vport *vport)$/;"	f	file:
internal_dev_destructor	datapath/linux/vport-internal_dev.c	/^static void internal_dev_destructor(struct net_device *dev)$/;"	f	file:
internal_dev_destructor	datapath/vport-internal_dev.c	/^static void internal_dev_destructor(struct net_device *dev)$/;"	f	file:
internal_dev_ethtool_ops	datapath/linux/vport-internal_dev.c	/^static const struct ethtool_ops internal_dev_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
internal_dev_ethtool_ops	datapath/vport-internal_dev.c	/^static const struct ethtool_ops internal_dev_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
internal_dev_get_stats	datapath/linux/vport-internal_dev.c	/^static struct rtnl_link_stats64 *internal_dev_get_stats(struct net_device *netdev,$/;"	f	file:
internal_dev_get_stats	datapath/vport-internal_dev.c	/^static struct rtnl_link_stats64 *internal_dev_get_stats(struct net_device *netdev,$/;"	f	file:
internal_dev_getinfo	datapath/linux/vport-internal_dev.c	/^static void internal_dev_getinfo(struct net_device *netdev,$/;"	f	file:
internal_dev_getinfo	datapath/vport-internal_dev.c	/^static void internal_dev_getinfo(struct net_device *netdev,$/;"	f	file:
internal_dev_netdev_ops	datapath/linux/vport-internal_dev.c	/^static const struct net_device_ops internal_dev_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
internal_dev_netdev_ops	datapath/vport-internal_dev.c	/^static const struct net_device_ops internal_dev_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
internal_dev_open	datapath/linux/vport-internal_dev.c	/^static int internal_dev_open(struct net_device *netdev)$/;"	f	file:
internal_dev_open	datapath/vport-internal_dev.c	/^static int internal_dev_open(struct net_device *netdev)$/;"	f	file:
internal_dev_priv	datapath/linux/vport-internal_dev.c	/^static struct internal_dev *internal_dev_priv(struct net_device *netdev)$/;"	f	file:
internal_dev_priv	datapath/vport-internal_dev.c	/^static struct internal_dev *internal_dev_priv(struct net_device *netdev)$/;"	f	file:
internal_dev_recv	datapath/linux/vport-internal_dev.c	/^static int internal_dev_recv(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
internal_dev_recv	datapath/vport-internal_dev.c	/^static int internal_dev_recv(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
internal_dev_stop	datapath/linux/vport-internal_dev.c	/^static int internal_dev_stop(struct net_device *netdev)$/;"	f	file:
internal_dev_stop	datapath/vport-internal_dev.c	/^static int internal_dev_stop(struct net_device *netdev)$/;"	f	file:
internal_dev_xmit	datapath/linux/vport-internal_dev.c	/^static int internal_dev_xmit(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
internal_dev_xmit	datapath/vport-internal_dev.c	/^static int internal_dev_xmit(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
internal_interfaces	utilities/ovs-ctl	/^internal_interfaces () {$/;"	f
internal_interfaces	utilities/ovs-ctl.in	/^internal_interfaces () {$/;"	f
interpret_queued_ssl_error	lib/stream-ssl.c	/^interpret_queued_ssl_error(const char *function)$/;"	f	file:
interpret_ssl_error	lib/stream-ssl.c	/^interpret_ssl_error(const char *function, int ret, int error,$/;"	f	file:
interrupts	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
interval	lib/cfm.h	/^    int interval;               \/* The requested transmission interval. *\/$/;"	m	struct:cfm_settings
interval	lib/netdev-linux.c	/^    uint32_t interval;$/;"	m	struct:codel	file:
interval	lib/netdev-linux.c	/^    uint32_t interval;$/;"	m	struct:fqcodel	file:
interval	utilities/ovs-l3ping	/^            interval = args.testInterval$/;"	v
interval	utilities/ovs-test	/^            interval = ovs_args.testInterval$/;"	v
introNodes	ovsdb/ovsdb-doc	/^    introNodes = []$/;"	v
invalid_inodes	utilities/ovs-check-dead-ifs	/^invalid_inodes = set()$/;"	v
invalid_utf8_sequence	lib/unicode.c	/^invalid_utf8_sequence(const uint8_t *s, int n, size_t *lengthp)$/;"	f	file:
invalidate_cache	lib/db-ctl-base.c	/^invalidate_cache(struct ctl_context *ctx)$/;"	f	file:
invalidate_cache	lib/db-ctl-base.h	/^    void (*invalidate_cache)(struct ctl_context *);$/;"	m	struct:ctl_context
invalidate_flow_key	datapath/actions.c	/^static void invalidate_flow_key(struct sw_flow_key *key)$/;"	f	file:
invalidate_flow_key	datapath/linux/actions.c	/^static void invalidate_flow_key(struct sw_flow_key *key)$/;"	f	file:
inventory_entry	utilities/bugtool/ovs-bugtool	/^def inventory_entry(document, subdir, k, v):$/;"	f
invokeWMIMethod	windows/ovs-windows-installer/Actions/OVSActions.js	/^function invokeWMIMethod(svc, methodName, inParamsValues, wmiSvc, jobOutParamName) {$/;"	f
iov_base	include/windows/netpacket/packet.h	/^    void *iov_base;$/;"	m	struct:iovec
iov_len	include/windows/netpacket/packet.h	/^    unsigned int iov_len;$/;"	m	struct:iovec
iovec	include/windows/netpacket/packet.h	/^struct iovec$/;"	s
ip	datapath/flow.h	/^		} ip;$/;"	m	union:sw_flow_key::__anon29	typeref:struct:sw_flow_key::__anon29::__anon31
ip	lib/tnl-arp-cache.c	/^    struct in6_addr ip;$/;"	m	struct:tnl_arp_entry	typeref:struct:tnl_arp_entry::in6_addr	file:
ip	ovn/lib/ovn-sb-idl.h	/^	char *ip;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_encap
ip	ovn/northd/ovn-northd.c	/^    ovs_be32 ip, mask;          \/* 192.168.10.123\/24. *\/$/;"	m	struct:ovn_port	file:
ip4	tests/test-sflow.c	/^        ovs_be32 ip4;$/;"	m	union:sflow_addr::__anon229	file:
ip6	tests/test-sflow.c	/^        ovs_be32 ip6[4];$/;"	m	union:sflow_addr::__anon229	file:
ip6_ctlun	include/sparse/netinet/ip6.h	/^    } ip6_ctlun;$/;"	m	struct:ip6_hdr	typeref:union:ip6_hdr::__anon68
ip6_ctlun	include/windows/netinet/ip6.h	/^	} ip6_ctlun;$/;"	m	struct:ip6_hdr	typeref:union:ip6_hdr::__anon78
ip6_ctlun	lib/packets.h	/^    } ip6_ctlun;$/;"	m	struct:ovs_16aligned_ip6_hdr	typeref:union:ovs_16aligned_ip6_hdr::__anon150
ip6_dest	include/windows/netinet/ip6.h	/^struct ip6_dest {$/;"	s
ip6_dst	include/sparse/netinet/ip6.h	/^    struct in6_addr ip6_dst;$/;"	m	struct:ip6_hdr	typeref:struct:ip6_hdr::in6_addr
ip6_dst	include/windows/netinet/ip6.h	/^	struct in6_addr ip6_dst;	\/* destination address *\/$/;"	m	struct:ip6_hdr	typeref:struct:ip6_hdr::in6_addr
ip6_dst	lib/packets.h	/^    union ovs_16aligned_in6_addr ip6_dst;$/;"	m	struct:ovs_16aligned_ip6_hdr	typeref:union:ovs_16aligned_ip6_hdr::ovs_16aligned_in6_addr
ip6_ext	include/sparse/netinet/ip6.h	/^struct ip6_ext {$/;"	s
ip6_ext	include/windows/netinet/ip6.h	/^struct	ip6_ext {$/;"	s
ip6_flow	include/sparse/netinet/ip6.h	41;"	d
ip6_flow	include/windows/netinet/ip6.h	87;"	d
ip6_frag	include/sparse/netinet/ip6.h	/^struct ip6_frag {$/;"	s
ip6_frag	include/windows/netinet/ip6.h	/^struct ip6_frag {$/;"	s
ip6_hbh	include/windows/netinet/ip6.h	/^struct ip6_hbh {$/;"	s
ip6_hdr	include/sparse/netinet/ip6.h	/^struct ip6_hdr {$/;"	s
ip6_hdr	include/windows/netinet/ip6.h	/^struct ip6_hdr {$/;"	s
ip6_hdrctl	include/sparse/netinet/ip6.h	/^        struct ip6_hdrctl {$/;"	s	union:ip6_hdr::__anon68
ip6_hdrctl	include/windows/netinet/ip6.h	/^		struct ip6_hdrctl {$/;"	s	union:ip6_hdr::__anon78
ip6_hlim	include/sparse/netinet/ip6.h	44;"	d
ip6_hlim	include/windows/netinet/ip6.h	90;"	d
ip6_hops	include/sparse/netinet/ip6.h	45;"	d
ip6_hops	include/windows/netinet/ip6.h	91;"	d
ip6_nxt	include/sparse/netinet/ip6.h	43;"	d
ip6_nxt	include/windows/netinet/ip6.h	89;"	d
ip6_opt	include/windows/netinet/ip6.h	/^struct ip6_opt {$/;"	s
ip6_opt_jumbo	include/windows/netinet/ip6.h	/^struct ip6_opt_jumbo {$/;"	s
ip6_opt_nsap	include/windows/netinet/ip6.h	/^struct ip6_opt_nsap {$/;"	s
ip6_opt_router	include/windows/netinet/ip6.h	/^struct ip6_opt_router {$/;"	s
ip6_opt_tunnel	include/windows/netinet/ip6.h	/^struct ip6_opt_tunnel {$/;"	s
ip6_plen	include/sparse/netinet/ip6.h	42;"	d
ip6_plen	include/windows/netinet/ip6.h	88;"	d
ip6_rthdr	include/sparse/netinet/ip6.h	/^struct ip6_rthdr {$/;"	s
ip6_rthdr	include/windows/netinet/ip6.h	/^struct ip6_rthdr {$/;"	s
ip6_rthdr0	include/windows/netinet/ip6.h	/^struct ip6_rthdr0 {$/;"	s
ip6_src	include/sparse/netinet/ip6.h	/^    struct in6_addr ip6_src;$/;"	m	struct:ip6_hdr	typeref:struct:ip6_hdr::in6_addr
ip6_src	include/windows/netinet/ip6.h	/^	struct in6_addr ip6_src;	\/* source address *\/$/;"	m	struct:ip6_hdr	typeref:struct:ip6_hdr::in6_addr
ip6_src	lib/packets.h	/^    union ovs_16aligned_in6_addr ip6_src;$/;"	m	struct:ovs_16aligned_ip6_hdr	typeref:union:ovs_16aligned_ip6_hdr::ovs_16aligned_in6_addr
ip6_un1	include/sparse/netinet/ip6.h	/^        } ip6_un1;$/;"	m	union:ip6_hdr::__anon68	typeref:struct:ip6_hdr::__anon68::ip6_hdrctl
ip6_un1	include/windows/netinet/ip6.h	/^		} ip6_un1;$/;"	m	union:ip6_hdr::__anon78	typeref:struct:ip6_hdr::__anon78::ip6_hdrctl
ip6_un1	lib/packets.h	/^        } ip6_un1;$/;"	m	union:ovs_16aligned_ip6_hdr::__anon150	typeref:struct:ovs_16aligned_ip6_hdr::__anon150::ovs_16aligned_ip6_hdrctl
ip6_un1_flow	include/sparse/netinet/ip6.h	/^            ovs_be32 ip6_un1_flow;$/;"	m	struct:ip6_hdr::__anon68::ip6_hdrctl
ip6_un1_flow	include/windows/netinet/ip6.h	/^			u_int32_t ip6_un1_flow;	\/* 20 bits of flow-ID *\/$/;"	m	struct:ip6_hdr::__anon78::ip6_hdrctl
ip6_un1_flow	lib/packets.h	/^            ovs_16aligned_be32 ip6_un1_flow;$/;"	m	struct:ovs_16aligned_ip6_hdr::__anon150::ovs_16aligned_ip6_hdrctl
ip6_un1_hlim	include/sparse/netinet/ip6.h	/^            uint8_t ip6_un1_hlim;$/;"	m	struct:ip6_hdr::__anon68::ip6_hdrctl
ip6_un1_hlim	include/windows/netinet/ip6.h	/^			u_int8_t  ip6_un1_hlim;	\/* hop limit *\/$/;"	m	struct:ip6_hdr::__anon78::ip6_hdrctl
ip6_un1_hlim	lib/packets.h	/^            uint8_t ip6_un1_hlim;$/;"	m	struct:ovs_16aligned_ip6_hdr::__anon150::ovs_16aligned_ip6_hdrctl
ip6_un1_nxt	include/sparse/netinet/ip6.h	/^            uint8_t ip6_un1_nxt;$/;"	m	struct:ip6_hdr::__anon68::ip6_hdrctl
ip6_un1_nxt	include/windows/netinet/ip6.h	/^			u_int8_t  ip6_un1_nxt;	\/* next header *\/$/;"	m	struct:ip6_hdr::__anon78::ip6_hdrctl
ip6_un1_nxt	lib/packets.h	/^            uint8_t ip6_un1_nxt;$/;"	m	struct:ovs_16aligned_ip6_hdr::__anon150::ovs_16aligned_ip6_hdrctl
ip6_un1_plen	include/sparse/netinet/ip6.h	/^            ovs_be16 ip6_un1_plen;$/;"	m	struct:ip6_hdr::__anon68::ip6_hdrctl
ip6_un1_plen	include/windows/netinet/ip6.h	/^			u_int16_t ip6_un1_plen;	\/* payload length *\/$/;"	m	struct:ip6_hdr::__anon78::ip6_hdrctl
ip6_un1_plen	lib/packets.h	/^            ovs_be16 ip6_un1_plen;$/;"	m	struct:ovs_16aligned_ip6_hdr::__anon150::ovs_16aligned_ip6_hdrctl
ip6_un2_vfc	include/sparse/netinet/ip6.h	/^        uint8_t ip6_un2_vfc;$/;"	m	union:ip6_hdr::__anon68
ip6_un2_vfc	include/windows/netinet/ip6.h	/^		u_int8_t ip6_un2_vfc;	\/* 4 bits version, top 4 bits class *\/$/;"	m	union:ip6_hdr::__anon78
ip6_un2_vfc	lib/packets.h	/^        uint8_t ip6_un2_vfc;$/;"	m	union:ovs_16aligned_ip6_hdr::__anon150
ip6_vfc	include/sparse/netinet/ip6.h	40;"	d
ip6_vfc	include/windows/netinet/ip6.h	86;"	d
ip6d_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6d_len;	\/* length in units of 8 octets *\/$/;"	m	struct:ip6_dest
ip6d_nxt	include/windows/netinet/ip6.h	/^	u_int8_t ip6d_nxt;	\/* next header *\/$/;"	m	struct:ip6_dest
ip6e_len	include/sparse/netinet/ip6.h	/^    uint8_t ip6e_len;$/;"	m	struct:ip6_ext
ip6e_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6e_len;$/;"	m	struct:ip6_ext
ip6e_nxt	include/sparse/netinet/ip6.h	/^    uint8_t ip6e_nxt;$/;"	m	struct:ip6_ext
ip6e_nxt	include/windows/netinet/ip6.h	/^	u_int8_t ip6e_nxt;$/;"	m	struct:ip6_ext
ip6f_ident	include/sparse/netinet/ip6.h	/^    ovs_be32 ip6f_ident;$/;"	m	struct:ip6_frag
ip6f_ident	include/windows/netinet/ip6.h	/^	u_int32_t ip6f_ident;		\/* identification *\/$/;"	m	struct:ip6_frag
ip6f_ident	lib/packets.h	/^    ovs_16aligned_be32 ip6f_ident;$/;"	m	struct:ovs_16aligned_ip6_frag
ip6f_nxt	include/sparse/netinet/ip6.h	/^    uint8_t ip6f_nxt;$/;"	m	struct:ip6_frag
ip6f_nxt	include/windows/netinet/ip6.h	/^	u_int8_t  ip6f_nxt;		\/* next header *\/$/;"	m	struct:ip6_frag
ip6f_nxt	lib/packets.h	/^    uint8_t ip6f_nxt;$/;"	m	struct:ovs_16aligned_ip6_frag
ip6f_offlg	include/sparse/netinet/ip6.h	/^    ovs_be16 ip6f_offlg;$/;"	m	struct:ip6_frag
ip6f_offlg	include/windows/netinet/ip6.h	/^	u_int16_t ip6f_offlg;		\/* offset, reserved, and flag *\/$/;"	m	struct:ip6_frag
ip6f_offlg	lib/packets.h	/^    ovs_be16 ip6f_offlg;$/;"	m	struct:ovs_16aligned_ip6_frag
ip6f_reserved	include/sparse/netinet/ip6.h	/^    uint8_t ip6f_reserved;$/;"	m	struct:ip6_frag
ip6f_reserved	include/windows/netinet/ip6.h	/^	u_int8_t  ip6f_reserved;	\/* reserved field *\/$/;"	m	struct:ip6_frag
ip6f_reserved	lib/packets.h	/^    uint8_t ip6f_reserved;$/;"	m	struct:ovs_16aligned_ip6_frag
ip6h_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6h_len;	\/* length in units of 8 octets *\/$/;"	m	struct:ip6_hbh
ip6h_nxt	include/windows/netinet/ip6.h	/^	u_int8_t ip6h_nxt;	\/* next header *\/$/;"	m	struct:ip6_hbh
ip6o_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6o_len;$/;"	m	struct:ip6_opt
ip6o_type	include/windows/netinet/ip6.h	/^	u_int8_t ip6o_type;$/;"	m	struct:ip6_opt
ip6oj_jumbo_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6oj_jumbo_len[4];$/;"	m	struct:ip6_opt_jumbo
ip6oj_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6oj_len;$/;"	m	struct:ip6_opt_jumbo
ip6oj_type	include/windows/netinet/ip6.h	/^	u_int8_t ip6oj_type;$/;"	m	struct:ip6_opt_jumbo
ip6on_dst_nsap_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6on_dst_nsap_len;$/;"	m	struct:ip6_opt_nsap
ip6on_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6on_len;$/;"	m	struct:ip6_opt_nsap
ip6on_src_nsap_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6on_src_nsap_len;$/;"	m	struct:ip6_opt_nsap
ip6on_type	include/windows/netinet/ip6.h	/^	u_int8_t ip6on_type;$/;"	m	struct:ip6_opt_nsap
ip6or_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6or_len;$/;"	m	struct:ip6_opt_router
ip6or_type	include/windows/netinet/ip6.h	/^	u_int8_t ip6or_type;$/;"	m	struct:ip6_opt_router
ip6or_value	include/windows/netinet/ip6.h	/^	u_int8_t ip6or_value[2];$/;"	m	struct:ip6_opt_router
ip6ot_encap_limit	include/windows/netinet/ip6.h	/^	u_int8_t ip6ot_encap_limit;$/;"	m	struct:ip6_opt_tunnel
ip6ot_len	include/windows/netinet/ip6.h	/^	u_int8_t ip6ot_len;$/;"	m	struct:ip6_opt_tunnel
ip6ot_type	include/windows/netinet/ip6.h	/^	u_int8_t ip6ot_type;$/;"	m	struct:ip6_opt_tunnel
ip6r0_len	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r0_len;		\/* length in units of 8 octets *\/$/;"	m	struct:ip6_rthdr0
ip6r0_nxt	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r0_nxt;		\/* next header *\/$/;"	m	struct:ip6_rthdr0
ip6r0_reserved	include/windows/netinet/ip6.h	/^	u_int32_t ip6r0_reserved;	\/* reserved field *\/$/;"	m	struct:ip6_rthdr0
ip6r0_segleft	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r0_segleft;	\/* segments left *\/$/;"	m	struct:ip6_rthdr0
ip6r0_type	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r0_type;		\/* always zero *\/$/;"	m	struct:ip6_rthdr0
ip6r_len	include/sparse/netinet/ip6.h	/^    uint8_t ip6r_len;$/;"	m	struct:ip6_rthdr
ip6r_len	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r_len;	\/* length in units of 8 octets *\/$/;"	m	struct:ip6_rthdr
ip6r_nxt	include/sparse/netinet/ip6.h	/^    uint8_t ip6r_nxt;$/;"	m	struct:ip6_rthdr
ip6r_nxt	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r_nxt;	\/* next header *\/$/;"	m	struct:ip6_rthdr
ip6r_segleft	include/sparse/netinet/ip6.h	/^    uint8_t ip6r_segleft;$/;"	m	struct:ip6_rthdr
ip6r_segleft	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r_segleft;	\/* segments left *\/$/;"	m	struct:ip6_rthdr
ip6r_type	include/sparse/netinet/ip6.h	/^    uint8_t ip6r_type;$/;"	m	struct:ip6_rthdr
ip6r_type	include/windows/netinet/ip6.h	/^	u_int8_t  ip6r_type;	\/* routing type *\/$/;"	m	struct:ip6_rthdr
ipAddr	datapath-windows/ovsext/IpHelper.h	/^    UINT32            ipAddr;$/;"	m	struct:_OVS_IPNEIGH_ENTRY
ipCsum	datapath-windows/ovsext/User.h	/^    UINT32 ipCsum;$/;"	m	struct:_OVS_USER_STATS
ipHeaderSize	datapath-windows/ovsext/Tunnel.h	/^   UINT32 ipHeaderSize;$/;"	m	struct:OVS_TUNNEL_PENDED_PACKET_
ipId	datapath-windows/ovsext/Stt.h	/^    UINT64 ipId;$/;"	m	struct:_OVS_STT_VPORT
ipId	datapath-windows/ovsext/Vxlan.h	/^    UINT64 ipId;$/;"	m	struct:_OVS_VXLAN_VPORT
ipInterfaceNotificationHandle	datapath-windows/ovsext/IpHelper.c	/^static HANDLE               ipInterfaceNotificationHandle;$/;"	v	file:
ipKey	datapath-windows/ovsext/DpInternal.h	/^        IpKey ipKey;             \/* size 16 *\/$/;"	m	union:OvsFlowKey::__anon10
ipRouteNotificationHandle	datapath-windows/ovsext/IpHelper.c	/^static HANDLE               ipRouteNotificationHandle;$/;"	v	file:
ip_address	python/ovstest/args.py	/^def ip_address(string):$/;"	f
ip_count_cidr_bits	lib/packets.c	/^ip_count_cidr_bits(ovs_be32 netmask)$/;"	f
ip_csum	lib/packets.h	/^    ovs_be16 ip_csum;$/;"	m	struct:ip_header
ip_device	lib/tnl-ports.c	/^struct ip_device {$/;"	s	file:
ip_dst	lib/bfd.c	/^    ovs_be32 ip_dst;              \/* IPv4 destination address. *\/$/;"	m	struct:bfd	file:
ip_dst	lib/netdev.h	/^    ovs_be32 ip_dst;$/;"	m	struct:netdev_tunnel_config
ip_dst	lib/packets.h	/^    ovs_16aligned_be32 ip_dst;$/;"	m	struct:ip_header
ip_dst	lib/packets.h	/^    ovs_be32 ip_dst;$/;"	m	struct:flow_tnl
ip_dst_flow	lib/netdev.h	/^    bool ip_dst_flow;$/;"	m	struct:netdev_tunnel_config
ip_dst_flow	ofproto/tunnel.c	/^    bool ip_dst_flow;$/;"	m	struct:tnl_match	file:
ip_extract_tnl_md	lib/netdev-vport.c	/^ip_extract_tnl_md(struct dp_packet *packet, struct flow_tnl *tnl)$/;"	f	file:
ip_format_masked	lib/packets.c	/^ip_format_masked(ovs_be32 ip, ovs_be32 mask, struct ds *s)$/;"	f
ip_frag_off	lib/packets.h	/^    ovs_be16 ip_frag_off;$/;"	m	struct:ip_header
ip_from_cidr	python/ovstest/util.py	/^def ip_from_cidr(string):$/;"	f
ip_gre_calc_hlen	datapath/linux/compat/include/net/gre.h	/^static inline int ip_gre_calc_hlen(__be16 o_flags)$/;"	f
ip_gre_calc_hlen	datapath/linux/compat/include/net/gre.h	93;"	d
ip_hdr	datapath/linux/compat/include/linux/ip.h	/^static inline struct iphdr *ip_hdr(const struct sk_buff *skb)$/;"	f
ip_hdr	lib/netdev-vport.c	/^ip_hdr(void *eth)$/;"	f	file:
ip_hdrlen	datapath/linux/compat/include/linux/ip.h	/^static inline unsigned int ip_hdrlen(const struct sk_buff *skb)$/;"	f
ip_header	lib/packets.h	/^struct ip_header {$/;"	s
ip_id	lib/packets.h	/^    ovs_be16 ip_id;$/;"	m	struct:ip_header
ip_ihl_ver	lib/packets.h	/^    uint8_t ip_ihl_ver;$/;"	m	struct:ip_header
ip_is_cidr	lib/packets.h	/^ip_is_cidr(ovs_be32 netmask)$/;"	f
ip_is_fragment	datapath/linux/compat/include/net/ip.h	/^static inline bool ip_is_fragment(const struct iphdr *iph)$/;"	f
ip_is_local_multicast	lib/packets.h	/^ip_is_local_multicast(ovs_be32 ip)$/;"	f
ip_is_multicast	lib/packets.h	/^ip_is_multicast(ovs_be32 ip)$/;"	f
ip_local_out	datapath/linux/compat/gso.c	263;"	d	file:
ip_local_out	datapath/linux/compat/gso.h	138;"	d
ip_local_out	datapath/linux/gso.c	263;"	d	file:
ip_optional_mask	python/ovstest/args.py	/^def ip_optional_mask(string):$/;"	f
ip_optional_port	python/ovstest/args.py	/^def ip_optional_port(string, default_port, ip_callback):$/;"	f
ip_optional_port_port	python/ovstest/args.py	/^def ip_optional_port_port(string, default_port1, default_port2, ip_callback):$/;"	f
ip_parse_masked	lib/packets.c	/^ip_parse_masked(const char *s, ovs_be32 *ip, ovs_be32 *mask)$/;"	f
ip_proto	datapath/linux/compat/include/net/flow_keys.h	/^	u8 ip_proto;$/;"	m	struct:flow_keys
ip_proto	lib/netflow.h	/^    uint8_t  ip_proto;             \/* IP protocol. *\/$/;"	m	struct:netflow_v5_record
ip_proto	lib/packets.h	/^    uint8_t ip_proto;$/;"	m	struct:ip_header
ip_src	lib/bfd.c	/^    ovs_be32 ip_src;              \/* IPv4 source address. *\/$/;"	m	struct:bfd	file:
ip_src	lib/netdev.h	/^    ovs_be32 ip_src;$/;"	m	struct:netdev_tunnel_config
ip_src	lib/packets.h	/^    ovs_16aligned_be32 ip_src;$/;"	m	struct:ip_header
ip_src	lib/packets.h	/^    ovs_be32 ip_src;$/;"	m	struct:flow_tnl
ip_src_flow	lib/netdev.h	/^    bool ip_src_flow;$/;"	m	struct:netdev_tunnel_config
ip_src_flow	ofproto/tunnel.c	/^    bool ip_src_flow;$/;"	m	struct:tnl_match	file:
ip_src_type	ofproto/tunnel.c	/^enum ip_src_type {$/;"	g	file:
ip_to_hex	tests/testsuite	/^ip_to_hex() {$/;"	f
ip_tos	lib/netflow.h	/^    uint8_t  ip_tos;               \/* IP TOS value. *\/$/;"	m	struct:netflow_v5_record
ip_tos	lib/packets.h	/^    uint8_t ip_tos;$/;"	m	struct:flow_tnl
ip_tos	lib/packets.h	/^    uint8_t ip_tos;$/;"	m	struct:ip_header
ip_tot_len	lib/packets.h	/^    ovs_be16 ip_tot_len;$/;"	m	struct:ip_header
ip_ttl	lib/packets.h	/^    uint8_t ip_ttl;$/;"	m	struct:flow_tnl
ip_ttl	lib/packets.h	/^    uint8_t ip_ttl;$/;"	m	struct:ip_header
ip_v4	lib/sflow.h	/^    SFLIPv4 ip_v4;$/;"	m	union:_SFLAddress_value
ip_v6	lib/sflow.h	/^    SFLIPv6 ip_v6;$/;"	m	union:_SFLAddress_value
ipaddr	vtep/vtep-idl.h	/^	char *ipaddr;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_mcast_macs_local
ipaddr	vtep/vtep-idl.h	/^	char *ipaddr;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_mcast_macs_remote
ipaddr	vtep/vtep-idl.h	/^	char *ipaddr;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_ucast_macs_local
ipaddr	vtep/vtep-idl.h	/^	char *ipaddr;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_ucast_macs_remote
ipdev_configure_network	xenserver/opt_xensource_libexec_interface-reconfigure	/^def ipdev_configure_network(pif, dp):$/;"	f
ipdev_configure_static_routes	xenserver/opt_xensource_libexec_interface-reconfigure	/^def ipdev_configure_static_routes(interface, oc, f):$/;"	f
ipdev_open_ifcfg	xenserver/opt_xensource_libexec_interface-reconfigure	/^def ipdev_open_ifcfg(pif):$/;"	f
ipf	datapath-windows/ovsext/IpHelper.h	/^    POVS_IPFORWARD_ENTRY ipf;$/;"	m	struct:_OVS_FWD_ENTRY
ipfLink	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        ipfLink;$/;"	m	struct:_OVS_FWD_ENTRY
ipfix	lib/odp-util.h	/^    } ipfix;$/;"	m	union:user_action_cookie	typeref:struct:user_action_cookie::__anon126
ipfix	lib/vswitch-idl.h	/^	struct ovsrec_ipfix *ipfix;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_ipfix
ipfix	lib/vswitch-idl.h	/^	struct ovsrec_ipfix *ipfix;$/;"	m	struct:ovsrec_flow_sample_collector_set	typeref:struct:ovsrec_flow_sample_collector_set::ovsrec_ipfix
ipfix	ofproto/ofproto-dpif-ipfix.c	/^VLOG_DEFINE_THIS_MODULE(ipfix);$/;"	v
ipfix	ofproto/ofproto-dpif-upcall.c	/^    struct dpif_ipfix *ipfix;      \/* IPFIX pointer or NULL. *\/$/;"	m	struct:upcall	typeref:struct:upcall::dpif_ipfix	file:
ipfix	ofproto/ofproto-dpif-xlate.c	/^    struct dpif_ipfix *ipfix;     \/* Ipfix handle, or null. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::dpif_ipfix	file:
ipfix	ofproto/ofproto-dpif.c	/^    struct dpif_ipfix *ipfix;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::dpif_ipfix	file:
ipfix_cache_aggregate_entries	ofproto/ofproto-dpif-ipfix.c	/^ipfix_cache_aggregate_entries(struct ipfix_flow_cache_entry *from_entry,$/;"	f	file:
ipfix_cache_entry_init	ofproto/ofproto-dpif-ipfix.c	/^ipfix_cache_entry_init(struct ipfix_flow_cache_entry *entry,$/;"	f	file:
ipfix_cache_find_entry	ofproto/ofproto-dpif-ipfix.c	/^ipfix_cache_find_entry(const struct dpif_ipfix_exporter *exporter,$/;"	f	file:
ipfix_cache_next_timeout_msec	ofproto/ofproto-dpif-ipfix.c	/^ipfix_cache_next_timeout_msec(const struct dpif_ipfix_exporter *exporter,$/;"	f	file:
ipfix_cache_update	ofproto/ofproto-dpif-ipfix.c	/^ipfix_cache_update(struct dpif_ipfix_exporter *exporter,$/;"	f	file:
ipfix_define_template_entity	ofproto/ofproto-dpif-ipfix.c	/^ipfix_define_template_entity(enum ipfix_entity_id id,$/;"	f	file:
ipfix_define_template_fields	ofproto/ofproto-dpif-ipfix.c	/^ipfix_define_template_fields(enum ipfix_proto_l2 l2, enum ipfix_proto_l3 l3,$/;"	f	file:
ipfix_entity_enterprise	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_entity_enterprise {$/;"	g	file:
ipfix_entity_id	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_entity_id {$/;"	g	file:
ipfix_entity_size	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_entity_size {$/;"	g	file:
ipfix_flow_cache_entry	ofproto/ofproto-dpif-ipfix.c	/^struct ipfix_flow_cache_entry {$/;"	s	file:
ipfix_flow_direction	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_flow_direction {$/;"	g	file:
ipfix_flow_end_reason	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_flow_end_reason {$/;"	g	file:
ipfix_flow_key	ofproto/ofproto-dpif-ipfix.c	/^struct ipfix_flow_key {$/;"	s	file:
ipfix_flow_key_equal	ofproto/ofproto-dpif-ipfix.c	/^ipfix_flow_key_equal(const struct ipfix_flow_key *a,$/;"	f	file:
ipfix_get_template_id	ofproto/ofproto-dpif-ipfix.c	/^ipfix_get_template_id(enum ipfix_proto_l2 l2, enum ipfix_proto_l3 l3,$/;"	f	file:
ipfix_hash_flow_key	ofproto/ofproto-dpif-ipfix.c	/^ipfix_hash_flow_key(const struct ipfix_flow_key *flow_key, uint32_t basis)$/;"	f	file:
ipfix_init_header	ofproto/ofproto-dpif-ipfix.c	/^ipfix_init_header(uint32_t export_time_sec, uint32_t seq_number,$/;"	f	file:
ipfix_init_template_msg	ofproto/ofproto-dpif-ipfix.c	/^ipfix_init_template_msg(void *msg_stub, uint32_t export_time_sec,$/;"	f	file:
ipfix_proto_l2	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_proto_l2 {$/;"	g	file:
ipfix_proto_l3	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_proto_l3 {$/;"	g	file:
ipfix_proto_l4	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_proto_l4 {$/;"	g	file:
ipfix_proto_tunnel	ofproto/ofproto-dpif-ipfix.c	/^enum ipfix_proto_tunnel {$/;"	g	file:
ipfix_put_data_set	ofproto/ofproto-dpif-ipfix.c	/^ipfix_put_data_set(uint32_t export_time_sec,$/;"	f	file:
ipfix_send_data_msg	ofproto/ofproto-dpif-ipfix.c	/^ipfix_send_data_msg(struct dpif_ipfix_exporter *exporter,$/;"	f	file:
ipfix_send_msg	ofproto/ofproto-dpif-ipfix.c	/^ipfix_send_msg(const struct collectors *collectors, struct dp_packet *msg)$/;"	f	file:
ipfix_send_template_msg	ofproto/ofproto-dpif-ipfix.c	/^ipfix_send_template_msg(const struct collectors *collectors,$/;"	f	file:
ipfix_send_template_msgs	ofproto/ofproto-dpif-ipfix.c	/^ipfix_send_template_msgs(struct dpif_ipfix_exporter *exporter,$/;"	f	file:
ipgre_protocol	datapath/linux/compat/gre.c	/^static const struct gre_protocol ipgre_protocol = {$/;"	v	typeref:struct:gre_protocol	file:
ipgre_protocol	datapath/linux/gre.c	/^static const struct gre_protocol ipgre_protocol = {$/;"	v	typeref:struct:gre_protocol	file:
iph_to_flow_copy_addrs	datapath/linux/compat/flow_dissector.c	/^static void iph_to_flow_copy_addrs(struct flow_keys *flow, const struct iphdr *iph)$/;"	f	file:
iph_to_flow_copy_addrs	datapath/linux/flow_dissector.c	/^static void iph_to_flow_copy_addrs(struct flow_keys *flow, const struct iphdr *iph)$/;"	f	file:
ipn	datapath-windows/ovsext/IpHelper.h	/^    POVS_IPNEIGH_ENTRY   ipn;$/;"	m	struct:_OVS_FWD_ENTRY
ipnLink	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        ipnLink;$/;"	m	struct:_OVS_FWD_ENTRY
ipsec	lib/netdev.h	/^    bool ipsec;$/;"	m	struct:netdev_tunnel_config
iptunnel_pull_header	datapath/linux/compat/include/net/ip_tunnels.h	31;"	d
iptunnel_xmit	datapath/linux/compat/include/net/ip_tunnels.h	26;"	d
ipv4	datapath/flow.h	/^		} ipv4;$/;"	m	union:sw_flow_key::__anon33	typeref:struct:sw_flow_key::__anon33::__anon34
ipv4	lib/meta-flow.h	/^        ovs_be32 ipv4;$/;"	m	struct:mf_subvalue::__anon103
ipv4	lib/ofp-actions.h	/^    ovs_be32 ipv4;$/;"	m	struct:ofpact_ipv4
ipv4	lib/sflow.h	/^    SFLSampled_ipv4 ipv4;$/;"	m	union:_SFLFlow_type
ipv4_dst	datapath/flow.h	/^	__be32 ipv4_dst;$/;"	m	struct:ovs_key_ipv4_tunnel
ipv4_dst	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 ipv4_dst;$/;"	m	struct:ovs_key_ipv4
ipv4_dst	include/odp-netlink.h	/^	ovs_be32 ipv4_dst;$/;"	m	struct:ovs_key_ipv4
ipv4_frag	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv4_frag;	\/* One of OVS_FRAG_TYPE_*. *\/$/;"	m	struct:ovs_key_ipv4
ipv4_frag	include/odp-netlink.h	/^	uint8_t   ipv4_frag;	\/* One of OVS_FRAG_TYPE_*. *\/$/;"	m	struct:ovs_key_ipv4
ipv4_is_lbcast	datapath/linux/compat/include/linux/in.h	/^static inline bool ipv4_is_lbcast(__be32 addr)$/;"	f
ipv4_is_local_multicast	datapath/linux/compat/include/linux/in.h	/^static inline bool ipv4_is_local_multicast(__be32 addr)$/;"	f
ipv4_is_loopback	datapath/linux/compat/include/linux/in.h	/^static inline bool ipv4_is_loopback(__be32 addr)$/;"	f
ipv4_is_multicast	datapath/linux/compat/include/linux/in.h	/^static inline bool ipv4_is_multicast(__be32 addr)$/;"	f
ipv4_is_zeronet	datapath/linux/compat/include/linux/in.h	/^static inline bool ipv4_is_zeronet(__be32 addr)$/;"	f
ipv4_proto	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv4_proto;$/;"	m	struct:ovs_key_ipv4
ipv4_proto	include/odp-netlink.h	/^	uint8_t   ipv4_proto;$/;"	m	struct:ovs_key_ipv4
ipv4_src	datapath/flow.h	/^	__be32 ipv4_src;$/;"	m	struct:ovs_key_ipv4_tunnel
ipv4_src	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 ipv4_src;$/;"	m	struct:ovs_key_ipv4
ipv4_src	include/odp-netlink.h	/^	ovs_be32 ipv4_src;$/;"	m	struct:ovs_key_ipv4
ipv4_to_network	utilities/ovs-dpctl-top	/^def ipv4_to_network(ip_str):$/;"	f
ipv4_tos	datapath/flow.h	/^	u8   ipv4_tos;$/;"	m	struct:ovs_key_ipv4_tunnel
ipv4_tos	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv4_tos;$/;"	m	struct:ovs_key_ipv4
ipv4_tos	include/odp-netlink.h	/^	uint8_t   ipv4_tos;$/;"	m	struct:ovs_key_ipv4
ipv4_ttl	datapath/flow.h	/^	u8   ipv4_ttl;$/;"	m	struct:ovs_key_ipv4_tunnel
ipv4_ttl	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv4_ttl;$/;"	m	struct:ovs_key_ipv4
ipv4_ttl	include/odp-netlink.h	/^	uint8_t   ipv4_ttl;$/;"	m	struct:ovs_key_ipv4
ipv4_tun_from_nlattr	datapath/flow_netlink.c	/^static int ipv4_tun_from_nlattr(const struct nlattr *attr,$/;"	f	file:
ipv4_tun_from_nlattr	datapath/linux/flow_netlink.c	/^static int ipv4_tun_from_nlattr(const struct nlattr *attr,$/;"	f	file:
ipv4_tun_to_nlattr	datapath/flow_netlink.c	/^static int ipv4_tun_to_nlattr(struct sk_buff *skb,$/;"	f	file:
ipv4_tun_to_nlattr	datapath/linux/flow_netlink.c	/^static int ipv4_tun_to_nlattr(struct sk_buff *skb,$/;"	f	file:
ipv6	datapath/flow.h	/^		} ipv6;$/;"	m	union:sw_flow_key::__anon33	typeref:struct:sw_flow_key::__anon33::__anon37
ipv6	lib/classifier.c	/^    struct in6_addr ipv6;  \/* For sizing. *\/$/;"	m	union:trie_prefix	typeref:struct:trie_prefix::in6_addr	file:
ipv6	lib/meta-flow.h	/^        struct in6_addr ipv6;$/;"	m	struct:mf_subvalue::__anon104	typeref:struct:mf_subvalue::__anon104::in6_addr
ipv6	lib/meta-flow.h	/^    struct in6_addr ipv6;$/;"	m	union:mf_value	typeref:struct:mf_value::in6_addr
ipv6	lib/sflow.h	/^    SFLSampled_ipv6 ipv6;$/;"	m	union:_SFLFlow_type
ipv6Dst	datapath-windows/ovsext/DpInternal.h	/^    struct in6_addr ipv6Dst;     \/* IPv6 destination address. *\/$/;"	m	struct:Icmp6Key	typeref:struct:Icmp6Key::in6_addr
ipv6Dst	datapath-windows/ovsext/DpInternal.h	/^    struct in6_addr ipv6Dst;     \/* IPv6 destination address. *\/$/;"	m	struct:Ipv6Key	typeref:struct:Ipv6Key::in6_addr
ipv6Key	datapath-windows/ovsext/DpInternal.h	/^        Ipv6Key ipv6Key;         \/* size 48 *\/$/;"	m	union:OvsFlowKey::__anon10
ipv6Label	datapath-windows/ovsext/DpInternal.h	/^    ovs_be32 ipv6Label;          \/* IPv6 flow label. *\/$/;"	m	struct:Icmp6Key
ipv6Label	datapath-windows/ovsext/DpInternal.h	/^    ovs_be32 ipv6Label;          \/* IPv6 flow label. *\/$/;"	m	struct:Ipv6Key
ipv6Src	datapath-windows/ovsext/DpInternal.h	/^    struct in6_addr ipv6Src;     \/* IPv6 source address. *\/$/;"	m	struct:Icmp6Key	typeref:struct:Icmp6Key::in6_addr
ipv6Src	datapath-windows/ovsext/DpInternal.h	/^    struct in6_addr ipv6Src;     \/* IPv6 source address. *\/$/;"	m	struct:Ipv6Key	typeref:struct:Ipv6Key::in6_addr
ipv6_addr_bitand	lib/packets.c	/^struct in6_addr ipv6_addr_bitand(const struct in6_addr *a,$/;"	f
ipv6_addr_equals	lib/packets.h	/^static inline bool ipv6_addr_equals(const struct in6_addr *a,$/;"	f
ipv6_addr_hash	datapath/linux/compat/include/net/ipv6.h	/^static inline u32 ipv6_addr_hash(const struct in6_addr *a)$/;"	f
ipv6_addr_is_multicast	lib/packets.h	/^static inline bool ipv6_addr_is_multicast(const struct in6_addr *ip) {$/;"	f
ipv6_addr_is_set	lib/packets.h	/^static inline bool ipv6_addr_is_set(const struct in6_addr *addr) {$/;"	f
ipv6_count_cidr_bits	lib/packets.c	/^ipv6_count_cidr_bits(const struct in6_addr *netmask)$/;"	f
ipv6_create_mask	lib/packets.c	/^ipv6_create_mask(int mask)$/;"	f
ipv6_dst	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 ipv6_dst[4];$/;"	m	struct:ovs_key_ipv6
ipv6_dst	include/odp-netlink.h	/^	ovs_be32 ipv6_dst[4];$/;"	m	struct:ovs_key_ipv6
ipv6_dst	lib/flow.h	/^    struct in6_addr ipv6_dst;   \/* IPv6 destination address. *\/$/;"	m	struct:flow	typeref:struct:flow::in6_addr
ipv6_dst	ofproto/tunnel.c	/^    struct in6_addr ipv6_dst;$/;"	m	struct:tnl_match	typeref:struct:tnl_match::in6_addr	file:
ipv6_find_hdr	datapath/linux/compat/include/net/ipv6.h	30;"	d
ipv6_frag	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv6_frag;	\/* One of OVS_FRAG_TYPE_*. *\/$/;"	m	struct:ovs_key_ipv6
ipv6_frag	include/odp-netlink.h	/^	uint8_t   ipv6_frag;	\/* One of OVS_FRAG_TYPE_*. *\/$/;"	m	struct:ovs_key_ipv6
ipv6_hdr	datapath/linux/compat/include/linux/ipv6.h	/^static inline struct ipv6hdr *ipv6_hdr(const struct sk_buff *skb)$/;"	f
ipv6_hlimit	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv6_hlimit;$/;"	m	struct:ovs_key_ipv6
ipv6_hlimit	include/odp-netlink.h	/^	uint8_t   ipv6_hlimit;$/;"	m	struct:ovs_key_ipv6
ipv6_is_all_hosts	lib/packets.h	/^static inline bool ipv6_is_all_hosts(const struct in6_addr *addr) {$/;"	f
ipv6_is_cidr	lib/packets.c	/^ipv6_is_cidr(const struct in6_addr *netmask)$/;"	f
ipv6_label	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 ipv6_label;	\/* 20-bits in least-significant bits. *\/$/;"	m	struct:ovs_key_ipv6
ipv6_label	include/odp-netlink.h	/^	ovs_be32 ipv6_label;	\/* 20-bits in least-significant bits. *\/$/;"	m	struct:ovs_key_ipv6
ipv6_label	lib/flow.h	/^    ovs_be32 ipv6_label;        \/* IPv6 flow label. *\/$/;"	m	struct:flow
ipv6_mask_is_any	lib/packets.h	/^static inline bool ipv6_mask_is_any(const struct in6_addr *mask) {$/;"	f
ipv6_mask_is_exact	lib/packets.h	/^static inline bool ipv6_mask_is_exact(const struct in6_addr *mask) {$/;"	f
ipv6_proto	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv6_proto;$/;"	m	struct:ovs_key_ipv6
ipv6_proto	include/odp-netlink.h	/^	uint8_t   ipv6_proto;$/;"	m	struct:ovs_key_ipv6
ipv6_skip_exthdr	datapath/linux/compat/include/net/ipv6.h	13;"	d
ipv6_src	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 ipv6_src[4];$/;"	m	struct:ovs_key_ipv6
ipv6_src	include/odp-netlink.h	/^	ovs_be32 ipv6_src[4];$/;"	m	struct:ovs_key_ipv6
ipv6_src	lib/flow.h	/^    struct in6_addr ipv6_src;   \/* IPv6 source address. *\/$/;"	m	struct:flow	typeref:struct:flow::in6_addr
ipv6_src	ofproto/tunnel.c	/^    struct in6_addr ipv6_src;$/;"	m	struct:tnl_match	typeref:struct:tnl_match::in6_addr	file:
ipv6_tclass	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8   ipv6_tclass;$/;"	m	struct:ovs_key_ipv6
ipv6_tclass	include/odp-netlink.h	/^	uint8_t   ipv6_tclass;$/;"	m	struct:ovs_key_ipv6
ipv6_to_network	utilities/ovs-dpctl-top	/^def ipv6_to_network(ip_str):$/;"	f
irp	datapath-windows/ovsext/Datapath.h	/^    PIRP irp;            \/* The IRP used for the userspace call. *\/$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
irp	datapath-windows/ovsext/TunnelFilter.c	/^    PIRP                    irp;$/;"	m	struct:_OVS_TUNFLT_REQUEST	file:
isAbsentOnHv	datapath-windows/ovsext/Vport.h	/^    BOOLEAN                isAbsentOnHv; \/* Is this port present on the$/;"	m	struct:_OVS_VPORT_ENTRY
isActivateFailed	datapath-windows/ovsext/Switch.h	/^    BOOLEAN                 isActivateFailed;$/;"	m	struct:_OVS_SWITCH_CONTEXT
isActivated	datapath-windows/ovsext/Switch.h	/^    BOOLEAN                 isActivated;$/;"	m	struct:_OVS_SWITCH_CONTEXT
isBridgeInternal	datapath-windows/ovsext/Vport.h	/^    BOOLEAN                isBridgeInternal;$/;"	m	struct:_OVS_VPORT_ENTRY
isExternal	datapath-windows/ovsext/Vport.h	/^    BOOLEAN                isExternal;$/;"	m	struct:_OVS_VPORT_ENTRY
isIPv4	datapath-windows/ovsext/NetProto.h	/^        UINT16 isIPv4:1;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
isIPv6	datapath-windows/ovsext/NetProto.h	/^        UINT16 isIPv6:1;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
isId	build-aux/check-structs	/^def isId(s):$/;"	f
isId	build-aux/extract-ofp-errors	/^def isId(s):$/;"	f
isInitialized	datapath-windows/ovsext/TunnelFilter.c	/^    UINT32                  isInitialized;$/;"	m	struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
isTcp	datapath-windows/ovsext/NetProto.h	/^        UINT16 isTcp:1;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
isUdp	datapath-windows/ovsext/NetProto.h	/^        UINT16 isUdp:1;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
is_admissible	ofproto/ofproto-dpif-xlate.c	/^is_admissible(struct xlate_ctx *ctx, struct xport *in_port,$/;"	f	file:
is_admitted_msg	lib/rconn.c	/^is_admitted_msg(const struct ofpbuf *b)$/;"	f	file:
is_alive	python/ovs/jsonrpc.py	/^    def is_alive(self):$/;"	m	class:Session
is_all_ones	lib/util.c	/^is_all_ones(const void *p_, size_t n)$/;"	f
is_all_zero	datapath/flow_netlink.c	/^static bool is_all_zero(const u8 *fp, size_t size)$/;"	f	file:
is_all_zero	datapath/linux/flow_netlink.c	/^static bool is_all_zero(const u8 *fp, size_t size)$/;"	f	file:
is_all_zeros	lib/util.c	/^is_all_zeros(const void *p_, size_t n)$/;"	f
is_already_open	ovsdb/ovsdb-server.c	/^is_already_open(struct server_config *config OVS_UNUSED,$/;"	f	file:
is_appctl	lib/dpctl.h	/^    bool is_appctl;$/;"	m	struct:dpctl_params
is_composite	python/ovs/db/types.py	/^    def is_composite(self):$/;"	m	class:Type
is_condition_satisfied	lib/db-ctl-base.c	/^is_condition_satisfied(const struct ctl_table_class *table,$/;"	f	file:
is_connected	lib/reconnect.h	/^    bool is_connected;                     \/* Currently connected? *\/$/;"	m	struct:reconnect_stats
is_connected	lib/vswitch-idl.h	/^	bool is_connected;$/;"	m	struct:ovsrec_controller
is_connected	lib/vswitch-idl.h	/^	bool is_connected;$/;"	m	struct:ovsrec_manager
is_connected	ofproto/ofproto.h	/^    bool is_connected;$/;"	m	struct:ofproto_controller_info
is_connected	ovsdb/jsonrpc-server.h	/^    bool is_connected;$/;"	m	struct:ovsdb_jsonrpc_remote_status
is_connected	python/ovs/jsonrpc.py	/^    def is_connected(self):$/;"	m	class:Session
is_connected	python/ovs/reconnect.py	/^        is_connected = False$/;"	v	class:Reconnect.Backoff
is_connected	python/ovs/reconnect.py	/^        is_connected = False$/;"	v	class:Reconnect.ConnectInProgress
is_connected	python/ovs/reconnect.py	/^        is_connected = False$/;"	v	class:Reconnect.Listening
is_connected	python/ovs/reconnect.py	/^        is_connected = False$/;"	v	class:Reconnect.Reconnect
is_connected	python/ovs/reconnect.py	/^        is_connected = False$/;"	v	class:Reconnect.Void
is_connected	python/ovs/reconnect.py	/^        is_connected = True$/;"	v	class:Reconnect.Active
is_connected	python/ovs/reconnect.py	/^        is_connected = True$/;"	v	class:Reconnect.Idle
is_connected	python/ovs/reconnect.py	/^    def is_connected(self):$/;"	m	class:Reconnect
is_connected	vtep/vtep-idl.h	/^	bool is_connected;$/;"	m	struct:vteprec_manager
is_connected_state	lib/rconn.c	/^is_connected_state(enum state state)$/;"	f	file:
is_connected_state	lib/reconnect.c	/^is_connected_state(enum state state)$/;"	f	file:
is_cookie_pseudoheader	lib/nx-match.c	/^is_cookie_pseudoheader(uint64_t header)$/;"	f	file:
is_default	python/ovs/db/data.py	/^    def is_default(self):$/;"	m	class:Atom
is_default	python/ovs/db/data.py	/^    def is_default(self):$/;"	m	class:Datum
is_delimiter	lib/ofp-util.c	/^is_delimiter(unsigned char c)$/;"	f	file:
is_done	python/ovs/json.py	/^    def is_done(self):$/;"	m	class:Parser
is_dpdk_class	lib/netdev-dpdk.c	/^is_dpdk_class(const struct netdev_class *class)$/;"	f	file:
is_dummy_class	lib/netdev-dummy.c	/^is_dummy_class(const struct netdev_class *class)$/;"	f	file:
is_enabled	python/ovs/reconnect.py	/^    def is_enabled(self):$/;"	m	class:Reconnect
is_experimenter_oxm	lib/nx-match.c	/^is_experimenter_oxm(uint64_t header)$/;"	f	file:
is_fail_open_rule	ofproto/fail-open.h	/^is_fail_open_rule(const struct rule *rule)$/;"	f
is_flow_key_valid	datapath/actions.c	/^static bool is_flow_key_valid(const struct sw_flow_key *key)$/;"	f	file:
is_flow_key_valid	datapath/linux/actions.c	/^static bool is_flow_key_valid(const struct sw_flow_key *key)$/;"	f	file:
is_gratuitous_arp	ofproto/ofproto-dpif-xlate.c	/^is_gratuitous_arp(const struct flow *flow, struct flow_wildcards *wc)$/;"	f	file:
is_gre_gso	datapath/linux/compat/gre.c	/^static bool is_gre_gso(struct sk_buff *skb)$/;"	f	file:
is_gre_gso	datapath/linux/gre.c	/^static bool is_gre_gso(struct sk_buff *skb)$/;"	f	file:
is_identifier	python/ovs/db/parser.py	/^def is_identifier(s):$/;"	f
is_ipv6_mask_nonzero	datapath/actions.c	/^static bool is_ipv6_mask_nonzero(const __be32 addr[4])$/;"	f	file:
is_ipv6_mask_nonzero	datapath/linux/actions.c	/^static bool is_ipv6_mask_nonzero(const __be32 addr[4])$/;"	f	file:
is_layer3	ofproto/ofproto-dpif.c	/^    bool is_layer3;             \/* This is a layer 3 port. *\/$/;"	m	struct:ofport_dpif	file:
is_learning_vlan	lib/mac-learning.c	/^is_learning_vlan(const struct mac_learning *ml, uint16_t vlan)$/;"	f	file:
is_lock_contended	lib/ovsdb-idl.c	/^    bool is_lock_contended;     \/* Has db server told us we can't get lock? *\/$/;"	m	struct:ovsdb_idl	file:
is_map	python/ovs/db/types.py	/^    def is_map(self):$/;"	m	class:Type
is_mask_consistent	lib/nx-match.c	/^is_mask_consistent(uint64_t header, const uint8_t *value, const uint8_t *mask)$/;"	f	file:
is_mirror_output_bundle	ofproto/ofproto-dpif.c	/^is_mirror_output_bundle(const struct ofproto *ofproto_, void *aux)$/;"	f	file:
is_mirror_output_bundle	ofproto/ofproto-provider.h	/^    bool (*is_mirror_output_bundle)(const struct ofproto *ofproto, void *aux);$/;"	m	struct:ofproto_class
is_mpls	lib/packets.c	/^static bool is_mpls(struct dp_packet *packet)$/;"	f	file:
is_netdev_bsd_class	lib/netdev-bsd.c	/^is_netdev_bsd_class(const struct netdev_class *netdev_class)$/;"	f	file:
is_netdev_linux_class	lib/netdev-linux.c	/^is_netdev_linux_class(const struct netdev_class *netdev_class)$/;"	f	file:
is_netdev_windows_class	lib/netdev-windows.c	/^is_netdev_windows_class(const struct netdev_class *netdev_class)$/;"	f	file:
is_openflow_port	utilities/ovs-ofctl.c	/^is_openflow_port(ovs_be16 port_, char *ports[])$/;"	f	file:
is_optional	python/ovs/db/types.py	/^    def is_optional(self):$/;"	m	class:Type
is_optional_pointer	python/ovs/db/types.py	/^    def is_optional_pointer(self):$/;"	m	class:Type
is_passive	python/ovs/reconnect.py	/^    def is_passive(self):$/;"	m	class:Reconnect
is_pow2	lib/util.h	/^is_pow2(uintmax_t x)$/;"	f
is_ref	python/ovs/db/types.py	/^    def is_ref(self):$/;"	m	class:BaseType
is_root	lib/ovsdb-idl-provider.h	/^    bool is_root;$/;"	m	struct:ovsdb_idl_table_class
is_root	ovsdb/ovsdb-idlc	/^            is_root = "false"$/;"	v
is_root	ovsdb/ovsdb-idlc	/^            is_root = "true"$/;"	v
is_root	ovsdb/table.h	/^    bool is_root;               \/* Part of garbage collection root set? *\/$/;"	m	struct:ovsdb_table_schema
is_scalar	python/ovs/db/types.py	/^    def is_scalar(self):$/;"	m	class:Type
is_set	python/ovs/db/types.py	/^    def is_set(self):$/;"	m	class:Type
is_set_operator	lib/db-ctl-base.c	/^is_set_operator(enum relop op)$/;"	f	file:
is_smap	python/ovs/db/types.py	/^    def is_smap(self):$/;"	m	class:Type
is_strong_ref	python/ovs/db/types.py	/^    def is_strong_ref(self):$/;"	m	class:BaseType
is_tap	lib/netdev-linux.c	/^    bool is_tap;$/;"	m	struct:netdev_rxq_linux	file:
is_tap_netdev	lib/netdev-linux.c	/^is_tap_netdev(const struct netdev *netdev)$/;"	f	file:
is_tunnel	ofproto/ofproto-dpif-xlate.c	/^    bool is_tunnel;                  \/* Is a tunnel port. *\/$/;"	m	struct:xport	file:
is_tunnel	ofproto/ofproto-dpif.c	/^    bool is_tunnel;             \/* This port is a tunnel. *\/$/;"	m	struct:ofport_dpif	file:
is_valid	python/ovs/db/types.py	/^    def is_valid(self):$/;"	m	class:BaseType
is_valid	python/ovs/db/types.py	/^    def is_valid(self):$/;"	m	class:Type
is_valid	python/ovs/jsonrpc.py	/^    def is_valid(self):$/;"	m	class:Message
is_valid_ipv4_address	python/ovs/socket_util.py	/^def is_valid_ipv4_address(address):$/;"	f
is_valid_name	python/ovs/stream.py	/^    def is_valid_name(name):$/;"	m	class:PassiveStream
is_valid_name	python/ovs/stream.py	/^    def is_valid_name(name):$/;"	m	class:Stream
is_valid_port_number	lib/dpif-netdev.c	/^is_valid_port_number(odp_port_t port_no)$/;"	f	file:
is_valid_string	python/ovs/ovsuuid.py	/^def is_valid_string(s):$/;"	f
is_valid_version	ovsdb/ovsdb.c	/^is_valid_version(const char *s)$/;"	f	file:
is_vhost_running	lib/netdev-dpdk.c	/^is_vhost_running(struct virtio_net *dev)$/;"	f	file:
is_vport_class	lib/netdev-vport.c	/^is_vport_class(const struct netdev_class *class)$/;"	f	file:
is_warped	lib/timeval.c	/^is_warped(const struct clock *c)$/;"	f	file:
is_weak_ref	python/ovs/db/types.py	/^    def is_weak_ref(self):$/;"	m	class:BaseType
isid	lib/lldp/aa-structs.h	/^    uint32_t isid;$/;"	m	struct:lldpd_aa_isid_vlan_map_data
isid	lib/ovs-lldp.c	/^    uint32_t         isid;$/;"	m	struct:aa_mapping_internal	file:
isid	lib/ovs-lldp.h	/^    uint32_t isid;$/;"	m	struct:aa_mapping_settings
isid	vswitchd/bridge.c	/^    uint32_t isid;$/;"	m	struct:aa_mapping	file:
isid_vlan_data	lib/lldp/aa-structs.h	/^    struct lldpd_aa_isid_vlan_map_data  isid_vlan_data;$/;"	m	struct:lldpd_aa_isid_vlan_maps_tlv	typeref:struct:lldpd_aa_isid_vlan_maps_tlv::lldpd_aa_isid_vlan_map_data
jhash_bytes	lib/jhash.c	/^jhash_bytes(const void *p_, size_t n, uint32_t basis)$/;"	f
jhash_final	lib/jhash.c	/^jhash_final(uint32_t *a, uint32_t *b, uint32_t *c)$/;"	f	file:
jhash_mix	lib/jhash.c	/^jhash_mix(uint32_t *a, uint32_t *b, uint32_t *c)$/;"	f	file:
jhash_rot	lib/jhash.c	/^jhash_rot(uint32_t x, int k)$/;"	f	file:
jhash_words	lib/jhash.c	/^jhash_words(const uint32_t *p, size_t n, uint32_t basis)$/;"	f
jhash_words_cb	tests/test-hash.c	/^jhash_words_cb(uint32_t input)$/;"	f	file:
join_datapaths	ovn/northd/ovn-northd.c	/^join_datapaths(struct northd_context *ctx, struct hmap *datapaths,$/;"	f	file:
join_logical_ports	ovn/northd/ovn-northd.c	/^join_logical_ports(struct northd_context *ctx,$/;"	f	file:
js	ovsdb/jsonrpc-server.c	/^    struct jsonrpc_session *js;  \/* JSON-RPC session. *\/$/;"	m	struct:ovsdb_jsonrpc_session	typeref:struct:ovsdb_jsonrpc_session::jsonrpc_session	file:
js_seqno	ovsdb/jsonrpc-server.c	/^    unsigned int js_seqno;       \/* Last jsonrpc_session_get_seqno() value. *\/$/;"	m	struct:ovsdb_jsonrpc_session	file:
json	lib/json.c	/^    struct json *json;$/;"	m	struct:json_parser_node	typeref:struct:json_parser_node::json	file:
json	lib/json.h	/^struct json {$/;"	s
json	lib/ovsdb-parser.h	/^    const struct json *json;    \/* JSON object being parsed. *\/$/;"	m	struct:ovsdb_parser	typeref:struct:ovsdb_parser::json
json	lib/table.h	/^    struct json *json;$/;"	m	struct:cell	typeref:struct:cell::json
json	ovsdb/file.c	/^    struct json *json;          \/* JSON for the whole transaction. *\/$/;"	m	struct:ovsdb_file_txn	typeref:struct:ovsdb_file_txn::json	file:
json	ovsdb/monitor.c	/^    struct json *json;            \/* Null, or a cloned of json *\/$/;"	m	struct:ovsdb_monitor_json_cache_node	typeref:struct:ovsdb_monitor_json_cache_node::json	file:
json	ovsdb/ovsdb-doc	/^import ovs.json$/;"	i
json	ovsdb/ovsdb-idlc	/^import ovs.json$/;"	i
json	python/ovs/db/data.py	/^import ovs.json$/;"	i
json	python/ovs/db/error.py	/^import ovs.json$/;"	i
json	python/ovs/jsonrpc.py	/^import ovs.json$/;"	i
json	tests/test-json.py	/^import ovs.json$/;"	i
json	tests/test-jsonrpc.py	/^import ovs.json$/;"	i
json_array	lib/json.c	/^json_array(const struct json *json)$/;"	f
json_array	lib/json.h	/^struct json_array {$/;"	s
json_array_add	lib/json.c	/^json_array_add(struct json *array_, struct json *element)$/;"	f
json_array_create	lib/json.c	/^json_array_create(struct json **elements, size_t n)$/;"	f
json_array_create_1	lib/json.c	/^json_array_create_1(struct json *elem0)$/;"	f
json_array_create_2	lib/json.c	/^json_array_create_2(struct json *elem0, struct json *elem1)$/;"	f
json_array_create_3	lib/json.c	/^json_array_create_3(struct json *elem0, struct json *elem1, struct json *elem2)$/;"	f
json_array_create_empty	lib/json.c	/^json_array_create_empty(void)$/;"	f
json_array_trim	lib/json.c	/^json_array_trim(struct json *array_)$/;"	f
json_boolean	lib/json.c	/^json_boolean(const struct json *json)$/;"	f
json_boolean_create	lib/json.c	/^json_boolean_create(bool b)$/;"	f
json_cache	ovsdb/monitor.c	/^    struct hmap json_cache;       \/* Contains "ovsdb_monitor_json_cache_node"s.*\/$/;"	m	struct:ovsdb_monitor	typeref:struct:ovsdb_monitor::hmap	file:
json_clone	lib/json.c	/^json_clone(const struct json *json)$/;"	f
json_clone_array	lib/json.c	/^json_clone_array(const struct json_array *array)$/;"	f	file:
json_clone_object	lib/json.c	/^json_clone_object(const struct shash *object)$/;"	f	file:
json_create	lib/json.c	/^json_create(enum json_type type)$/;"	f	file:
json_destroy	lib/json.c	/^json_destroy(struct json *json)$/;"	f
json_destroy_array	lib/json.c	/^json_destroy_array(struct json_array *array)$/;"	f	file:
json_destroy_object	lib/json.c	/^json_destroy_object(struct shash *object)$/;"	f	file:
json_equal	lib/json.c	/^json_equal(const struct json *a, const struct json *b)$/;"	f
json_equal_array	lib/json.c	/^json_equal_array(const struct json_array *a, const struct json_array *b)$/;"	f	file:
json_equal_object	lib/json.c	/^json_equal_object(const struct shash *a, const struct shash *b)$/;"	f	file:
json_error	lib/json.c	/^json_error(struct json_parser *p, const char *format, ...)$/;"	f	file:
json_flags	lib/table.h	/^    int json_flags;             \/* CF_JSON: Flags for json_to_string(). *\/$/;"	m	struct:table_style
json_from_file	lib/json.c	/^json_from_file(const char *file_name)$/;"	f
json_from_stream	lib/json.c	/^json_from_stream(FILE *stream)$/;"	f
json_from_string	lib/json.c	/^json_from_string(const char *string)$/;"	f
json_hash	lib/json.c	/^json_hash(const struct json *json, size_t basis)$/;"	f
json_hash_array	lib/json.c	/^json_hash_array(const struct json_array *array, size_t basis)$/;"	f	file:
json_hash_object	lib/json.c	/^json_hash_object(const struct shash *object, size_t basis)$/;"	f	file:
json_integer	lib/json.c	/^json_integer(const struct json *json)$/;"	f
json_integer_create	lib/json.c	/^json_integer_create(long long int integer)$/;"	f
json_key	ovn/northd/ovn-northd.c	/^    char *json_key;             \/* 'key', quoted for use in JSON. *\/$/;"	m	struct:ovn_port	file:
json_lex_4hex	lib/json.c	/^json_lex_4hex(const char *cp, const char *end, int *valuep)$/;"	f	file:
json_lex_input	lib/json.c	/^json_lex_input(struct json_parser *p, unsigned char c)$/;"	f	file:
json_lex_keyword	lib/json.c	/^json_lex_keyword(struct json_parser *p)$/;"	f	file:
json_lex_number	lib/json.c	/^json_lex_number(struct json_parser *p)$/;"	f	file:
json_lex_state	lib/json.c	/^enum json_lex_state {$/;"	g	file:
json_lex_string	lib/json.c	/^json_lex_string(struct json_parser *p)$/;"	f	file:
json_lex_unicode	lib/json.c	/^json_lex_unicode(const char *cp, const char *end, struct ds *out)$/;"	f	file:
json_null_create	lib/json.c	/^json_null_create(void)$/;"	f
json_object	lib/json.c	/^json_object(const struct json *json)$/;"	f
json_object_create	lib/json.c	/^json_object_create(void)$/;"	f
json_object_put	lib/json.c	/^json_object_put(struct json *json, const char *name, struct json *value)$/;"	f
json_object_put_string	lib/json.c	/^json_object_put_string(struct json *json, const char *name, const char *value)$/;"	f
json_parse_state	lib/json.c	/^enum json_parse_state {$/;"	g	file:
json_parse_value	lib/json.c	/^json_parse_value(struct json_parser *p, struct json_token *token,$/;"	f	file:
json_parser	lib/json.c	/^struct json_parser {$/;"	s	file:
json_parser_abort	lib/json.c	/^json_parser_abort(struct json_parser *p)$/;"	f
json_parser_create	lib/json.c	/^json_parser_create(int flags)$/;"	f
json_parser_feed	lib/json.c	/^json_parser_feed(struct json_parser *p, const char *input, size_t n)$/;"	f
json_parser_finish	lib/json.c	/^json_parser_finish(struct json_parser *p)$/;"	f
json_parser_input	lib/json.c	/^json_parser_input(struct json_parser *p, struct json_token *token)$/;"	f	file:
json_parser_input_string	lib/json.c	/^json_parser_input_string(struct json_parser *p, const char *s)$/;"	f	file:
json_parser_is_done	lib/json.c	/^json_parser_is_done(const struct json_parser *p)$/;"	f
json_parser_node	lib/json.c	/^struct json_parser_node {$/;"	s	file:
json_parser_pop	lib/json.c	/^json_parser_pop(struct json_parser *p)$/;"	f	file:
json_parser_push	lib/json.c	/^json_parser_push(struct json_parser *p,$/;"	f	file:
json_parser_push_array	lib/json.c	/^json_parser_push_array(struct json_parser *p)$/;"	f	file:
json_parser_push_object	lib/json.c	/^json_parser_push_object(struct json_parser *p)$/;"	f	file:
json_parser_put_value	lib/json.c	/^json_parser_put_value(struct json_parser *p, struct json *value)$/;"	f	file:
json_parser_top	lib/json.c	/^json_parser_top(struct json_parser *p)$/;"	f	file:
json_real	lib/json.c	/^json_real(const struct json *json)$/;"	f
json_real_create	lib/json.c	/^json_real_create(double real)$/;"	f
json_serialize	lib/json.c	/^json_serialize(const struct json *json, struct json_serializer *s)$/;"	f	file:
json_serialize_array	lib/json.c	/^json_serialize_array(const struct json_array *array, struct json_serializer *s)$/;"	f	file:
json_serialize_object	lib/json.c	/^json_serialize_object(const struct shash *object, struct json_serializer *s)$/;"	f	file:
json_serialize_object_member	lib/json.c	/^json_serialize_object_member(size_t i, const struct shash_node *node,$/;"	f	file:
json_serialize_string	lib/json.c	/^json_serialize_string(const char *string, struct ds *ds)$/;"	f	file:
json_serializer	lib/json.c	/^struct json_serializer {$/;"	s	file:
json_string	lib/json.c	/^json_string(const struct json *json)$/;"	f
json_string_create	lib/json.c	/^json_string_create(const char *s)$/;"	f
json_string_create_nocopy	lib/json.c	/^json_string_create_nocopy(char *s)$/;"	f
json_string_escape	lib/json.c	/^json_string_escape(const char *in, struct ds *out)$/;"	f
json_string_unescape	lib/json.c	/^json_string_unescape(const char *in, size_t in_len, char **outp)$/;"	f
json_to_ds	lib/json.c	/^json_to_ds(const struct json *json, int flags, struct ds *ds)$/;"	f
json_to_string	lib/json.c	/^json_to_string(const struct json *json, int flags)$/;"	f
json_token	lib/json.c	/^struct json_token {$/;"	s	file:
json_token_type	lib/json.c	/^enum json_token_type {$/;"	g	file:
json_type	lib/json.h	/^enum json_type {$/;"	g
json_type_to_string	lib/json.c	/^json_type_to_string(enum json_type type)$/;"	f
json_type_to_string	python/ovs/db/parser.py	/^def json_type_to_string(type_):$/;"	f
jsonrpc	lib/jsonrpc.c	/^VLOG_DEFINE_THIS_MODULE(jsonrpc);$/;"	v
jsonrpc	lib/jsonrpc.c	/^struct jsonrpc {$/;"	s	file:
jsonrpc	ovsdb/ovsdb-server.c	/^    struct ovsdb_jsonrpc_server *jsonrpc;$/;"	m	struct:server_config	typeref:struct:server_config::ovsdb_jsonrpc_server	file:
jsonrpc	python/ovs/db/data.py	/^import ovs.jsonrpc$/;"	i
jsonrpc	python/ovs/db/idl.py	/^import ovs.jsonrpc$/;"	i
jsonrpc	python/ovs/unixctl/client.py	/^import ovs.jsonrpc$/;"	i
jsonrpc	python/ovs/unixctl/server.py	/^import ovs.jsonrpc$/;"	i
jsonrpc	tests/test-jsonrpc.py	/^import ovs.jsonrpc$/;"	i
jsonrpc_cleanup	lib/jsonrpc.c	/^jsonrpc_cleanup(struct jsonrpc *rpc)$/;"	f	file:
jsonrpc_close	lib/jsonrpc.c	/^jsonrpc_close(struct jsonrpc *rpc)$/;"	f
jsonrpc_create	lib/jsonrpc.c	/^jsonrpc_create(enum jsonrpc_msg_type type, const char *method,$/;"	f	file:
jsonrpc_create_error	lib/jsonrpc.c	/^jsonrpc_create_error(struct json *error, const struct json *id)$/;"	f
jsonrpc_create_id	lib/jsonrpc.c	/^jsonrpc_create_id(void)$/;"	f	file:
jsonrpc_create_notify	lib/jsonrpc.c	/^jsonrpc_create_notify(const char *method, struct json *params)$/;"	f
jsonrpc_create_reply	lib/jsonrpc.c	/^jsonrpc_create_reply(struct json *result, const struct json *id)$/;"	f
jsonrpc_create_request	lib/jsonrpc.c	/^jsonrpc_create_request(const char *method, struct json *params,$/;"	f
jsonrpc_error	lib/jsonrpc.c	/^jsonrpc_error(struct jsonrpc *rpc, int error)$/;"	f	file:
jsonrpc_get_backlog	lib/jsonrpc.c	/^jsonrpc_get_backlog(const struct jsonrpc *rpc)$/;"	f
jsonrpc_get_name	lib/jsonrpc.c	/^jsonrpc_get_name(const struct jsonrpc *rpc)$/;"	f
jsonrpc_get_received_bytes	lib/jsonrpc.c	/^jsonrpc_get_received_bytes(const struct jsonrpc *rpc)$/;"	f
jsonrpc_get_status	lib/jsonrpc.c	/^jsonrpc_get_status(const struct jsonrpc *rpc)$/;"	f
jsonrpc_log_msg	lib/jsonrpc.c	/^jsonrpc_log_msg(const struct jsonrpc *rpc, const char *title,$/;"	f	file:
jsonrpc_monitor	ovsdb/monitor.c	/^    struct ovsdb_jsonrpc_monitor *jsonrpc_monitor;$/;"	m	struct:jsonrpc_monitor_node	typeref:struct:jsonrpc_monitor_node::ovsdb_jsonrpc_monitor	file:
jsonrpc_monitor_node	ovsdb/monitor.c	/^struct jsonrpc_monitor_node {$/;"	s	file:
jsonrpc_monitors	ovsdb/monitor.c	/^    struct ovs_list jsonrpc_monitors;  \/* Contains "jsonrpc_monitor_node"s. *\/$/;"	m	struct:ovsdb_monitor	typeref:struct:ovsdb_monitor::ovs_list	file:
jsonrpc_msg	lib/jsonrpc.h	/^struct jsonrpc_msg {$/;"	s
jsonrpc_msg_destroy	lib/jsonrpc.c	/^jsonrpc_msg_destroy(struct jsonrpc_msg *m)$/;"	f
jsonrpc_msg_from_json	lib/jsonrpc.c	/^jsonrpc_msg_from_json(struct json *json, struct jsonrpc_msg **msgp)$/;"	f
jsonrpc_msg_is_valid	lib/jsonrpc.c	/^jsonrpc_msg_is_valid(const struct jsonrpc_msg *m)$/;"	f
jsonrpc_msg_to_json	lib/jsonrpc.c	/^jsonrpc_msg_to_json(struct jsonrpc_msg *m)$/;"	f
jsonrpc_msg_type	lib/jsonrpc.h	/^enum jsonrpc_msg_type {$/;"	g
jsonrpc_msg_type_to_string	lib/jsonrpc.c	/^jsonrpc_msg_type_to_string(enum jsonrpc_msg_type type)$/;"	f
jsonrpc_open	lib/jsonrpc.c	/^jsonrpc_open(struct stream *stream)$/;"	f
jsonrpc_parse_received_message	lib/jsonrpc.c	/^jsonrpc_parse_received_message(struct jsonrpc *rpc)$/;"	f	file:
jsonrpc_pstream_open	lib/jsonrpc.c	/^jsonrpc_pstream_open(const char *name, struct pstream **pstreamp, uint8_t dscp)$/;"	f
jsonrpc_recv	lib/jsonrpc.c	/^jsonrpc_recv(struct jsonrpc *rpc, struct jsonrpc_msg **msgp)$/;"	f
jsonrpc_recv_block	lib/jsonrpc.c	/^jsonrpc_recv_block(struct jsonrpc *rpc, struct jsonrpc_msg **msgp)$/;"	f
jsonrpc_recv_wait	lib/jsonrpc.c	/^jsonrpc_recv_wait(struct jsonrpc *rpc)$/;"	f
jsonrpc_run	lib/jsonrpc.c	/^jsonrpc_run(struct jsonrpc *rpc)$/;"	f
jsonrpc_send	lib/jsonrpc.c	/^jsonrpc_send(struct jsonrpc *rpc, struct jsonrpc_msg *msg)$/;"	f
jsonrpc_send_block	lib/jsonrpc.c	/^jsonrpc_send_block(struct jsonrpc *rpc, struct jsonrpc_msg *msg)$/;"	f
jsonrpc_session	lib/jsonrpc.c	/^struct jsonrpc_session {$/;"	s	file:
jsonrpc_session_close	lib/jsonrpc.c	/^jsonrpc_session_close(struct jsonrpc_session *s)$/;"	f
jsonrpc_session_connect	lib/jsonrpc.c	/^jsonrpc_session_connect(struct jsonrpc_session *s)$/;"	f	file:
jsonrpc_session_disconnect	lib/jsonrpc.c	/^jsonrpc_session_disconnect(struct jsonrpc_session *s)$/;"	f	file:
jsonrpc_session_enable_reconnect	lib/jsonrpc.c	/^jsonrpc_session_enable_reconnect(struct jsonrpc_session *s)$/;"	f
jsonrpc_session_force_reconnect	lib/jsonrpc.c	/^jsonrpc_session_force_reconnect(struct jsonrpc_session *s)$/;"	f
jsonrpc_session_get_backlog	lib/jsonrpc.c	/^jsonrpc_session_get_backlog(const struct jsonrpc_session *s)$/;"	f
jsonrpc_session_get_last_error	lib/jsonrpc.c	/^jsonrpc_session_get_last_error(const struct jsonrpc_session *s)$/;"	f
jsonrpc_session_get_name	lib/jsonrpc.c	/^jsonrpc_session_get_name(const struct jsonrpc_session *s)$/;"	f
jsonrpc_session_get_reconnect_stats	lib/jsonrpc.c	/^jsonrpc_session_get_reconnect_stats(const struct jsonrpc_session *s,$/;"	f
jsonrpc_session_get_seqno	lib/jsonrpc.c	/^jsonrpc_session_get_seqno(const struct jsonrpc_session *s)$/;"	f
jsonrpc_session_get_status	lib/jsonrpc.c	/^jsonrpc_session_get_status(const struct jsonrpc_session *s)$/;"	f
jsonrpc_session_is_alive	lib/jsonrpc.c	/^jsonrpc_session_is_alive(const struct jsonrpc_session *s)$/;"	f
jsonrpc_session_is_connected	lib/jsonrpc.c	/^jsonrpc_session_is_connected(const struct jsonrpc_session *s)$/;"	f
jsonrpc_session_open	lib/jsonrpc.c	/^jsonrpc_session_open(const char *name, bool retry)$/;"	f
jsonrpc_session_open_unreliably	lib/jsonrpc.c	/^jsonrpc_session_open_unreliably(struct jsonrpc *jsonrpc, uint8_t dscp)$/;"	f
jsonrpc_session_recv	lib/jsonrpc.c	/^jsonrpc_session_recv(struct jsonrpc_session *s)$/;"	f
jsonrpc_session_recv_wait	lib/jsonrpc.c	/^jsonrpc_session_recv_wait(struct jsonrpc_session *s)$/;"	f
jsonrpc_session_run	lib/jsonrpc.c	/^jsonrpc_session_run(struct jsonrpc_session *s)$/;"	f
jsonrpc_session_send	lib/jsonrpc.c	/^jsonrpc_session_send(struct jsonrpc_session *s, struct jsonrpc_msg *msg)$/;"	f
jsonrpc_session_set_dscp	lib/jsonrpc.c	/^jsonrpc_session_set_dscp(struct jsonrpc_session *s, uint8_t dscp)$/;"	f
jsonrpc_session_set_max_backoff	lib/jsonrpc.c	/^jsonrpc_session_set_max_backoff(struct jsonrpc_session *s, int max_backoff)$/;"	f
jsonrpc_session_set_probe_interval	lib/jsonrpc.c	/^jsonrpc_session_set_probe_interval(struct jsonrpc_session *s,$/;"	f
jsonrpc_session_wait	lib/jsonrpc.c	/^jsonrpc_session_wait(struct jsonrpc_session *s)$/;"	f
jsonrpc_stream_open	lib/jsonrpc.c	/^jsonrpc_stream_open(const char *name, struct stream **streamp, uint8_t dscp)$/;"	f
jsonrpc_transact_block	lib/jsonrpc.c	/^jsonrpc_transact_block(struct jsonrpc *rpc, struct jsonrpc_msg *request,$/;"	f
jsonrpc_wait	lib/jsonrpc.c	/^jsonrpc_wait(struct jsonrpc *rpc)$/;"	f
jumpTable	lib/sflow_api.h	/^    SFLSampler *jumpTable[SFL_HASHTABLE_SIZ]; \/* fast lookup table for samplers (by ifIndex) *\/$/;"	m	struct:_SFLAgent
k	tests/idltest.h	/^	struct idltest_link1 *k;$/;"	m	struct:idltest_link1	typeref:struct:idltest_link1::idltest_link1
ka	tests/idltest.h	/^	struct idltest_link1 **ka;$/;"	m	struct:idltest_link1	typeref:struct:idltest_link1::idltest_link1
kbits_burst	lib/netdev-linux.c	/^    uint32_t kbits_burst;$/;"	m	struct:netdev_linux	file:
kbits_rate	lib/netdev-linux.c	/^    uint32_t kbits_rate;        \/* Policing data. *\/$/;"	m	struct:netdev_linux	file:
keep_flows	datapath/flow_table.h	/^	bool keep_flows;$/;"	m	struct:table_instance
kernel_name	lib/netdev-bsd.c	/^    char *kernel_name;$/;"	m	struct:netdev_bsd	file:
key	datapath-windows/ovsext/DpInternal.h	/^    OvsFlowKey key;$/;"	m	struct:OvsFlowGetInput
key	datapath-windows/ovsext/DpInternal.h	/^    OvsFlowKey key;$/;"	m	struct:OvsFlowInfo
key	datapath-windows/ovsext/DpInternal.h	/^    OvsFlowKey key;$/;"	m	struct:OvsFlowPut
key	datapath-windows/ovsext/Flow.h	/^    OvsFlowKey key;$/;"	m	struct:_OvsFlow
key	datapath-windows/ovsext/Stt.h	/^    UINT64   key;$/;"	m	struct:SttHdr
key	datapath/flow.h	/^	struct sw_flow_key *key;$/;"	m	struct:sw_flow_match	typeref:struct:sw_flow_match::sw_flow_key
key	datapath/flow.h	/^	struct sw_flow_key key;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::sw_flow_key
key	datapath/flow.h	/^	struct sw_flow_key key;$/;"	m	struct:sw_flow_mask	typeref:struct:sw_flow_mask::sw_flow_key
key	datapath/linux/compat/include/net/ip_tunnels.h	/^	__be32 key;$/;"	m	struct:tnl_ptk_info
key	datapath/linux/compat/include/net/stt.h	/^	__be64		key;$/;"	m	struct:stthdr
key	datapath/linux/compat/stt.c	/^	struct pkt_key key;$/;"	m	struct:pkt_frag	typeref:struct:pkt_frag::pkt_key	file:
key	datapath/linux/stt.c	/^	struct pkt_key key;$/;"	m	struct:pkt_frag	typeref:struct:pkt_frag::pkt_key	file:
key	lib/dpif-netdev.c	/^    struct netdev_flow_key key;   \/* key.hash used for emc hash value. *\/$/;"	m	struct:emc_entry	typeref:struct:emc_entry::netdev_flow_key	file:
key	lib/dpif-netlink.c	/^    const struct nlattr *key;           \/* OVS_FLOW_ATTR_KEY. *\/$/;"	m	struct:dpif_netlink_flow	typeref:struct:dpif_netlink_flow::nlattr	file:
key	lib/dpif.h	/^    const struct nlattr *key;       \/* Flow to delete. *\/$/;"	m	struct:dpif_flow_del	typeref:struct:dpif_flow_del::nlattr
key	lib/dpif.h	/^    const struct nlattr *key;       \/* Flow to get. *\/$/;"	m	struct:dpif_flow_get	typeref:struct:dpif_flow_get::nlattr
key	lib/dpif.h	/^    const struct nlattr *key;       \/* Flow to put. *\/$/;"	m	struct:dpif_flow_put	typeref:struct:dpif_flow_put::nlattr
key	lib/dpif.h	/^    const struct nlattr *key;     \/* Flow key, as OVS_KEY_ATTR_* attrs. *\/$/;"	m	struct:dpif_flow	typeref:struct:dpif_flow::nlattr
key	lib/dpif.h	/^    struct nlattr *key;         \/* Flow key. *\/$/;"	m	struct:dpif_upcall	typeref:struct:dpif_upcall::nlattr
key	lib/fat-rwlock.h	/^    ovsthread_key_t key;$/;"	m	struct:fat_rwlock
key	lib/lacp.c	/^    uint16_t key;                 \/* Aggregation Key. 0 if default. *\/$/;"	m	struct:slave	file:
key	lib/lacp.h	/^    uint16_t key;                     \/* Aggregation key. *\/$/;"	m	struct:lacp_slave_settings
key	lib/ovsdb-types.h	/^    struct ovsdb_base_type key;$/;"	m	struct:ovsdb_type	typeref:struct:ovsdb_type::ovsdb_base_type
key	lib/pcap-file.c	/^    struct tcp_key key;$/;"	m	struct:tcp_stream	typeref:struct:tcp_stream::tcp_key	file:
key	lib/smap.h	/^    char *key;$/;"	m	struct:smap_node
key	lib/tun-metadata.c	/^    uint32_t key;               \/* (class << 16) | type. *\/$/;"	m	struct:tun_meta_entry	file:
key	lib/uuid.c	/^static struct aes128 key;$/;"	v	typeref:struct:aes128	file:
key	ofproto/ofproto-dpif-upcall.c	/^    const struct nlattr *key;      \/* Datapath flow key. *\/$/;"	m	struct:udpif_key	typeref:struct:udpif_key::nlattr	file:
key	ofproto/ofproto-dpif-upcall.c	/^    const struct nlattr *key;      \/* Datapath flow key. *\/$/;"	m	struct:upcall	typeref:struct:upcall::nlattr	file:
key	ofproto/ofproto-dpif.c	/^    const struct flow *key;$/;"	m	struct:trace_ctx	typeref:struct:trace_ctx::flow	file:
key	ovn/northd/ovn-northd.c	/^    char *key;                  \/* nbs->name, nbr->name, sb->logical_port. *\/$/;"	m	struct:ovn_port	file:
key	ovn/northd/ovn-northd.c	/^    struct uuid key;            \/* (nbs\/nbr)->header_.uuid. *\/$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::uuid	file:
key	ovn/northd/ovn-northd.c	/^    uint16_t key;               \/* OVN_MIN_MULTICAST...OVN_MAX_MULTICAST. *\/$/;"	m	struct:multicast_group	file:
key	ovsdb/ovsdb-idlc	/^        key = {'name': keyName,$/;"	v
key	utilities/bugtool/ovs-bugtool	/^           key = k$/;"	v
key	utilities/bugtool/ovs-bugtool	/^           key = k[0]$/;"	v
keyLen	datapath-windows/ovsext/DpInternal.h	/^            uint16_t keyLen;$/;"	m	struct:L2Key::__anon5::__anon6
keyName	ovsdb/ovsdb-idlc	/^        keyName = "key_%s" % columnName$/;"	v
keySrc	ovsdb/ovsdb-idlc	/^                    keySrc = "datum->keys[i].%s" % type.key.type.to_string()$/;"	v
keySrc	ovsdb/ovsdb-idlc	/^                    keySrc = "keyRow"$/;"	v
keyVar	ovsdb/ovsdb-idlc	/^                        keyVar = "row->%s" % columnName$/;"	v
keyVar	ovsdb/ovsdb-idlc	/^                        keyVar = "row->key_%s" % columnName$/;"	v
keyVar	ovsdb/ovsdb-idlc	/^                keyVar = "row->%s" % columnName$/;"	v
keyVar	ovsdb/ovsdb-idlc	/^                keyVar = "row->key_%s" % columnName$/;"	v
keyVar	ovsdb/ovsdb-idlc	/^            keyVar = members[0]['name']$/;"	v
key_acl_binding	vtep/vtep-idl.h	/^	char **key_acl_binding;$/;"	m	struct:vteprec_logical_router
key_acl_bindings	vtep/vtep-idl.h	/^	int64_t *key_acl_bindings;$/;"	m	struct:vteprec_physical_port
key_buf	lib/odp-util.h	/^    const struct ofpbuf *key_buf;$/;"	m	struct:odp_flow_key_parms	typeref:struct:odp_flow_key_parms::ofpbuf
key_extract	datapath/flow.c	/^static int key_extract(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
key_extract	datapath/linux/flow.c	/^static int key_extract(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
key_flow_tables	lib/vswitch-idl.h	/^	int64_t *key_flow_tables;$/;"	m	struct:ovsrec_bridge
key_hmap	lib/tun-metadata.c	/^    struct hmap key_hmap;$/;"	m	struct:tun_table	typeref:struct:tun_table::hmap	file:
key_len	lib/dpif-netlink.c	/^    size_t key_len;$/;"	m	struct:dpif_netlink_flow	file:
key_len	lib/dpif.h	/^    size_t key_len;                 \/* Length of 'key' in bytes. *\/$/;"	m	struct:dpif_flow_del
key_len	lib/dpif.h	/^    size_t key_len;                 \/* Length of 'key' in bytes. *\/$/;"	m	struct:dpif_flow_get
key_len	lib/dpif.h	/^    size_t key_len;                 \/* Length of 'key' in bytes. *\/$/;"	m	struct:dpif_flow_put
key_len	lib/dpif.h	/^    size_t key_len;               \/* 'key' length in bytes. *\/$/;"	m	struct:dpif_flow
key_len	lib/dpif.h	/^    size_t key_len;             \/* Length of 'key' in bytes. *\/$/;"	m	struct:dpif_upcall
key_len	ofproto/ofproto-dpif-upcall.c	/^    size_t key_len;                \/* Datapath flow key length. *\/$/;"	m	struct:upcall	file:
key_len	ofproto/ofproto-dpif-upcall.c	/^    size_t key_len;                \/* Length of 'key'. *\/$/;"	m	struct:udpif_key	file:
key_mappings	lib/vswitch-idl.h	/^	int64_t *key_mappings;$/;"	m	struct:ovsrec_autoattach
key_mutex	lib/ovs-thread.c	/^static struct ovs_list free_keys OVS_GUARDED_BY(key_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
key_mutex	lib/ovs-thread.c	/^static struct ovs_list inuse_keys OVS_GUARDED_BY(key_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
key_mutex	lib/ovs-thread.c	/^static struct ovs_list slots_list OVS_GUARDED_BY(key_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
key_mutex	lib/ovs-thread.c	/^static struct ovs_mutex key_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
key_node	ovn/northd/ovn-northd.c	/^    struct hmap_node key_node;  \/* Index on 'key'. *\/$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::hmap_node	file:
key_node	ovn/northd/ovn-northd.c	/^    struct hmap_node key_node;  \/* Index on 'key'. *\/$/;"	m	struct:ovn_port	typeref:struct:ovn_port::hmap_node	file:
key_queues	lib/vswitch-idl.h	/^	int64_t *key_queues;$/;"	m	struct:ovsrec_qos
key_rstp_statistics	lib/vswitch-idl.h	/^	char **key_rstp_statistics;$/;"	m	struct:ovsrec_port
key_slave	lib/lacp.c	/^    struct slave *key_slave; \/* Slave whose ID will be the aggregation key. *\/$/;"	m	struct:lacp	typeref:struct:lacp::slave	file:
key_statistics	lib/vswitch-idl.h	/^	char **key_statistics;$/;"	m	struct:ovsrec_interface
key_statistics	lib/vswitch-idl.h	/^	char **key_statistics;$/;"	m	struct:ovsrec_mirror
key_statistics	lib/vswitch-idl.h	/^	char **key_statistics;$/;"	m	struct:ovsrec_port
key_switch_binding	vtep/vtep-idl.h	/^	char **key_switch_binding;$/;"	m	struct:vteprec_logical_router
key_to_tunnel_id	datapath/linux/vport-gre.c	/^static __be64 key_to_tunnel_id(__be32 key, __be32 seq)$/;"	f	file:
key_to_tunnel_id	datapath/vport-gre.c	/^static __be64 key_to_tunnel_id(__be32 key, __be32 seq)$/;"	f	file:
key_type	lib/ovsdb-data.c	/^    enum ovsdb_atomic_type key_type;$/;"	m	struct:ovsdb_datum_sort_cbdata	typeref:enum:ovsdb_datum_sort_cbdata::ovsdb_atomic_type	file:
key_vlan_bindings	vtep/vtep-idl.h	/^	int64_t *key_vlan_bindings;$/;"	m	struct:vteprec_physical_port
key_vlan_stats	vtep/vtep-idl.h	/^	int64_t *key_vlan_stats;$/;"	m	struct:vteprec_physical_port
keyboard	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
keybuf	lib/dpif-netdev.c	/^    struct odputil_keybuf keybuf[FLOW_DUMP_MAX_BATCH];$/;"	m	struct:dpif_netdev_flow_dump_thread	typeref:struct:dpif_netdev_flow_dump_thread::odputil_keybuf	file:
keybuf	lib/odp-util.h	/^    uint32_t keybuf[DIV_ROUND_UP(ODPUTIL_FLOW_KEY_BYTES, 4)];$/;"	m	struct:odputil_keybuf
keybuf	ofproto/ofproto-dpif-upcall.c	/^    } keybuf, maskbuf;$/;"	m	struct:udpif_key	typeref:union:udpif_key::__anon198	file:
keys	lib/ovsdb-data.h	/^    union ovsdb_atom *keys;     \/* Each of the ovsdb_type's 'key_type'. *\/$/;"	m	struct:ovsdb_datum	typeref:union:ovsdb_datum::ovsdb_atom
keywords	python/setup.py	/^    keywords=['openvswitch', 'ovs', 'OVSDB'],$/;"	v
kfree_skb_list	datapath/linux/compat/include/linux/skbuff.h	373;"	d
kill	tests/system-kmod-testsuite	/^    kill () {$/;"	f
kill	tests/system-userspace-testsuite	/^    kill () {$/;"	f
kill	tests/testsuite	/^    kill () {$/;"	f
kill	utilities/ovs-dev.py	/^def kill():$/;"	f
kill_connection	lib/unixctl.c	/^kill_connection(struct unixctl_conn *conn)$/;"	f	file:
kill_qemu_process	utilities/qemu-wrap.py	/^def kill_qemu_process(signum, stack):$/;"	f
kwords_to_args	utilities/ovs-appctl-bashcomp.bash	/^kwords_to_args() {$/;"	f
l1	tests/idltest.h	/^	struct idltest_link1 *l1;$/;"	m	struct:idltest_link2	typeref:struct:idltest_link2::idltest_link1
l2	datapath-windows/ovsext/DpInternal.h	/^    L2Key l2;                    \/* 24 bytes *\/$/;"	m	struct:OvsFlowKey
l2	tests/idltest.h	/^	struct idltest_link2 *l2;$/;"	m	struct:idltest_link1	typeref:struct:idltest_link1::idltest_link2
l2	utilities/ovs-pipegen.py	/^def l2(stage, action):$/;"	f
l2_5_ofs	lib/dp-packet.h	/^    uint16_t l2_5_ofs;             \/* MPLS label stack offset, or UINT16_MAX *\/$/;"	m	struct:dp_packet
l2_pad_size	lib/dp-packet.h	/^    uint8_t l2_pad_size;           \/* Detected l2 padding size.$/;"	m	struct:dp_packet
l3	utilities/ovs-pipegen.py	/^def l3(stage, action):$/;"	f
l3Offset	datapath-windows/ovsext/NetProto.h	/^        UINT16 l3Offset;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
l3Ofs	datapath-windows/ovsext/Flow.h	/^    UINT32 l3Ofs;             \/\/ IPv4, IPv6, ARP, or other L3 header.$/;"	m	struct:_OvsLayers
l3_endpoint_client	python/ovstest/args.py	/^def l3_endpoint_client(string):$/;"	f
l3_endpoint_server	python/ovstest/args.py	/^def l3_endpoint_server(string):$/;"	f
l3_initialize_args	python/ovstest/args.py	/^def l3_initialize_args():$/;"	f
l3_ofs	lib/dp-packet.h	/^    uint16_t l3_ofs;               \/* Network-level header offset,$/;"	m	struct:dp_packet
l4	datapath-windows/ovsext/DpInternal.h	/^    L4Key   l4;$/;"	m	struct:Ipkey
l4	datapath-windows/ovsext/DpInternal.h	/^    L4Key  l4;$/;"	m	struct:Icmp6Key
l4	datapath-windows/ovsext/DpInternal.h	/^    L4Key  l4;$/;"	m	struct:Ipv6Key
l4	utilities/ovs-pipegen.py	/^def l4(stage, action):$/;"	f
l4Csum	datapath-windows/ovsext/User.h	/^    UINT32 l4Csum;$/;"	m	struct:_OVS_USER_STATS
l4Offset	datapath-windows/ovsext/NetProto.h	/^        UINT16 l4Offset;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
l4Offset	datapath-windows/ovsext/Stt.h	/^    UINT8    l4Offset;$/;"	m	struct:SttHdr
l4Ofs	datapath-windows/ovsext/Flow.h	/^    UINT32 l4Ofs;             \/\/ TCP, UDP, ICMP, ICMPv6, or other L4 header.$/;"	m	struct:_OvsLayers
l4PayLoad	datapath-windows/ovsext/NetProto.h	/^            UINT16 l4PayLoad;$/;"	m	union:_OVS_PACKET_HDR_INFO::__anon22::__anon23
l4_offset	datapath/linux/compat/include/net/stt.h	/^	__u8		l4_offset;$/;"	m	struct:stthdr
l4_ofs	lib/dp-packet.h	/^    uint16_t l4_ofs;               \/* Transport-level header offset,$/;"	m	struct:dp_packet
l7Offset	datapath-windows/ovsext/NetProto.h	/^            UINT16 l7Offset;$/;"	m	union:_OVS_PACKET_HDR_INFO::__anon22::__anon23
l7Ofs	datapath-windows/ovsext/Flow.h	/^    UINT32 l7Ofs;             \/\/ L4 protocol's payload.$/;"	m	struct:_OvsLayers
label	datapath/flow.h	/^			__be32 label;			\/* IPv6 flow label. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon37
label	lib/ofp-actions.h	/^    ovs_be32 label;$/;"	m	struct:ofpact_mpls_label
labelStackEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t labelStackEncodingLength(SFLLabelStack *labelStack) {$/;"	f	file:
lacp	lib/lacp.c	/^    struct lacp *lacp;            \/* LACP object containing this slave. *\/$/;"	m	struct:slave	typeref:struct:slave::lacp	file:
lacp	lib/lacp.c	/^VLOG_DEFINE_THIS_MODULE(lacp);$/;"	v
lacp	lib/lacp.c	/^struct lacp {$/;"	s	file:
lacp	lib/sflow.h	/^    SFLLACP_counters lacp;$/;"	m	union:_SFLCounters_type
lacp	lib/vswitch-idl.h	/^	char *lacp;$/;"	m	struct:ovsrec_port
lacp	ofproto/ofproto-dpif-xlate.c	/^    struct lacp *lacp;             \/* LACP handle or null. *\/$/;"	m	struct:xbundle	typeref:struct:xbundle::lacp	file:
lacp	ofproto/ofproto-dpif.c	/^    struct lacp *lacp;          \/* LACP if LACP is enabled, otherwise NULL. *\/$/;"	m	struct:ofbundle	typeref:struct:ofbundle::lacp	file:
lacp	ofproto/ofproto.h	/^    struct lacp_settings *lacp;              \/* Nonnull to enable LACP. *\/$/;"	m	struct:ofproto_bundle_settings	typeref:struct:ofproto_bundle_settings::lacp_settings
lacp_current	lib/vswitch-idl.h	/^	bool *lacp_current;$/;"	m	struct:ovsrec_interface
lacp_enabled	ofproto/ofproto-dpif.c	/^    bool lacp_enabled;$/;"	m	struct:ofproto_dpif	file:
lacp_fallback_ab	ofproto/bond.c	/^    bool lacp_fallback_ab; \/* Fallback to active-backup on LACP failure. *\/$/;"	m	struct:bond	file:
lacp_fallback_ab_cfg	ofproto/bond.h	/^    bool lacp_fallback_ab_cfg;  \/* Fallback to active-backup on LACP failure. *\/$/;"	m	struct:bond_settings
lacp_init	lib/lacp.c	/^lacp_init(void)$/;"	f
lacp_pdu	lib/lacp.c	/^struct lacp_pdu {$/;"	s	file:
lacp_ref	lib/lacp.c	/^lacp_ref(const struct lacp *lacp_)$/;"	f
lacp_send_pdu	lib/lacp.h	/^typedef void lacp_send_pdu(void *slave, const void *pdu, size_t pdu_size);$/;"	t
lacp_settings	lib/lacp.h	/^struct lacp_settings {$/;"	s
lacp_slave_settings	lib/lacp.h	/^struct lacp_slave_settings {$/;"	s
lacp_slave_stats	lib/lacp.h	/^struct lacp_slave_stats {$/;"	s
lacp_slaves	ofproto/ofproto.h	/^    struct lacp_slave_settings *lacp_slaves; \/* Array of n_slaves elements. *\/$/;"	m	struct:ofproto_bundle_settings	typeref:struct:ofproto_bundle_settings::lacp_slave_settings
lacp_status	lib/lacp.h	/^enum lacp_status {$/;"	g
lacp_status	ofproto/bond.c	/^    enum lacp_status lacp_status; \/* Status of LACP negotiations. *\/$/;"	m	struct:bond	typeref:enum:bond::lacp_status	file:
lacp_unixctl_show	lib/lacp.c	/^static unixctl_cb_func lacp_unixctl_show;$/;"	v	file:
lan	tests/test-rstp.c	/^struct lan {$/;"	s	file:
lan	tests/test-stp.c	/^struct lan {$/;"	s	file:
lan_conn	tests/test-rstp.c	/^struct lan_conn {$/;"	s	file:
lan_conn	tests/test-stp.c	/^struct lan_conn {$/;"	s	file:
lans	tests/test-rstp.c	/^    struct lan *lans[26];$/;"	m	struct:test_case	typeref:struct:test_case::lan	file:
lans	tests/test-stp.c	/^    struct lan *lans[26];$/;"	m	struct:test_case	typeref:struct:test_case::lan	file:
large_warp	lib/timeval.c	/^struct large_warp {$/;"	s	file:
lastStruct	build-aux/check-structs	/^                lastStruct = parseStruct()$/;"	v
lastStruct	build-aux/check-structs	/^        lastStruct = None$/;"	v
last_activity	lib/rconn.c	/^    time_t last_activity;       \/* Last time we saw some activity. *\/$/;"	m	struct:rconn	file:
last_activity	lib/reconnect.c	/^    long long int last_activity;$/;"	m	struct:reconnect	file:
last_activity	lib/reconnect.h	/^    long long int last_activity;     \/* Last call to reconnect_activity(). *\/$/;"	m	struct:reconnect_stats
last_admitted	lib/rconn.c	/^    time_t last_admitted;$/;"	m	struct:rconn	file:
last_compact	ovsdb/file.c	/^    long long int last_compact;$/;"	m	struct:ovsdb_file	file:
last_connected	lib/rconn.c	/^    time_t last_connected;$/;"	m	struct:rconn	file:
last_connected	lib/reconnect.c	/^    long long int last_connected;$/;"	m	struct:reconnect	file:
last_connected	lib/reconnect.h	/^    long long int last_connected;    \/* Last call to reconnect_connected(). *\/$/;"	m	struct:reconnect_stats
last_cycles	lib/dpif-netdev.c	/^    unsigned long long last_cycles;$/;"	m	struct:dp_netdev_pmd_thread	file:
last_disconn_secs	ofproto/fail-open.c	/^    int last_disconn_secs;$/;"	m	struct:fail_open	file:
last_disconnected	lib/rconn.c	/^    time_t last_disconnected;$/;"	m	struct:rconn	file:
last_disconnected	lib/reconnect.c	/^    long long int last_disconnected;$/;"	m	struct:reconnect	file:
last_disconnected	lib/reconnect.h	/^    long long int last_disconnected; \/* Last call to reconnect_disconnected(). *\/$/;"	m	struct:reconnect_stats
last_dropped	include/openvswitch/vlog.h	/^    time_t last_dropped;        \/* Time of most recent message drop. *\/$/;"	m	struct:vlog_rate_limit
last_error	lib/jsonrpc.c	/^    int last_error;$/;"	m	struct:jsonrpc_session	file:
last_error	lib/rconn.c	/^    int last_error;$/;"	m	struct:rconn	file:
last_error	ovsdb/jsonrpc-server.h	/^    int last_error;$/;"	m	struct:ovsdb_jsonrpc_remote_status
last_expired	ofproto/netflow.c	/^    long long int last_expired;   \/* Time this flow last timed out. *\/$/;"	m	struct:netflow_flow	file:
last_fill	include/openvswitch/token-bucket.h	/^    long long int last_fill;    \/* Last time tokens added. *\/$/;"	m	struct:token_bucket
last_forwarding	lib/bfd.c	/^    bool last_forwarding;         \/* Last calculation of forwarding flag. *\/$/;"	m	struct:bfd	file:
last_op	ofproto/connmgr.c	/^    long long int first_op, last_op; \/* Range of times for unreported ops. *\/$/;"	m	struct:ofconn	file:
last_poll	lib/dpif-netlink.c	/^    long long int last_poll;    \/* Last time this channel was polled. *\/$/;"	m	struct:dpif_channel	file:
last_port_seq	lib/dpif-netdev.c	/^    uint64_t last_port_seq;$/;"	m	struct:dpif_netdev	file:
last_rehash	datapath/flow_table.h	/^	unsigned long last_rehash;$/;"	m	struct:flow_table
last_remote_mac	ofproto/in-band.c	/^    struct eth_addr last_remote_mac; \/* Previous nonzero next-hop MAC. *\/$/;"	m	struct:in_band_remote	typeref:struct:in_band_remote::eth_addr	file:
last_report	lib/memory.c	/^static long long int last_report;$/;"	v	file:
last_reported_maxrss	lib/memory.c	/^static unsigned long int last_reported_maxrss;$/;"	v	file:
last_rx	lib/cfm.c	/^    long long int last_rx; \/* Last CCM reception time. *\/$/;"	m	struct:remote_mp	file:
last_skb	datapath/linux/compat/stt.c	/^	struct sk_buff *last_skb;$/;"	m	struct:first_frag	typeref:struct:first_frag::sk_buff	file:
last_skb	datapath/linux/stt.c	/^	struct sk_buff *last_skb;$/;"	m	struct:first_frag	typeref:struct:first_frag::sk_buff	file:
last_template_set_time	ofproto/ofproto-dpif-ipfix.c	/^    time_t last_template_set_time;$/;"	m	struct:dpif_ipfix_exporter	file:
last_tnl_conf_seq	lib/dpif-netdev.c	/^    uint64_t last_tnl_conf_seq;$/;"	m	struct:dp_netdev	file:
last_total	lib/coverage.h	/^    unsigned long long int last_total;$/;"	m	struct:coverage_counter
last_tx	lib/bfd.c	/^    long long int last_tx;        \/* Last TX time. *\/$/;"	m	struct:bfd	file:
last_tx	lib/cfm.c	/^    long long int last_tx;    \/* Last CCM transmission time. *\/$/;"	m	struct:cfm	file:
last_unroll_offset	ofproto/ofproto-dpif-xlate.c	/^    int last_unroll_offset;     \/* Offset in 'action_set' to the latest unroll$/;"	m	struct:xlate_ctx	file:
last_used	ofproto/ofproto.c	/^    long long int last_used;    \/* Last time the 'ofp_port' was used. LLONG_MAX$/;"	m	struct:ofport_usage	file:
last_used_pool_idx	lib/dpif-netlink.c	/^    size_t last_used_pool_idx; \/* Index to aid in allocating a$/;"	m	struct:dpif_handler	file:
latch	lib/latch.h	/^struct latch {$/;"	s
latch_destroy	lib/latch-unix.c	/^latch_destroy(struct latch *latch)$/;"	f
latch_destroy	lib/latch-windows.c	/^latch_destroy(struct latch *latch)$/;"	f
latch_init	lib/latch-unix.c	/^latch_init(struct latch *latch)$/;"	f
latch_init	lib/latch-windows.c	/^latch_init(struct latch *latch)$/;"	f
latch_is_set	lib/latch-unix.c	/^latch_is_set(const struct latch *latch)$/;"	f
latch_is_set	lib/latch-windows.c	/^latch_is_set(const struct latch *latch)$/;"	f
latch_poll	lib/latch-unix.c	/^latch_poll(struct latch *latch)$/;"	f
latch_poll	lib/latch-windows.c	/^latch_poll(struct latch *latch)$/;"	f
latch_set	lib/latch-unix.c	/^latch_set(struct latch *latch)$/;"	f
latch_set	lib/latch-windows.c	/^latch_set(struct latch *latch)$/;"	f
latch_wait	lib/latch.h	45;"	d
latch_wait_at	lib/latch-unix.c	/^latch_wait_at(const struct latch *latch, const char *where)$/;"	f
latch_wait_at	lib/latch-windows.c	/^latch_wait_at(const struct latch *latch, const char *where)$/;"	f
layer2_octet_delta_count	ofproto/ofproto-dpif-ipfix.c	/^    uint64_t layer2_octet_delta_count;$/;"	m	struct:ipfix_flow_cache_entry	file:
layers	datapath-windows/ovsext/Actions.c	/^    OVS_PACKET_HDR_INFO layers;$/;"	m	struct:OvsForwardingContext	file:
ldp_create	ovn/controller/lflow.c	/^ldp_create(const struct sbrec_datapath_binding *binding)$/;"	f	file:
ldp_destroy	ovn/controller/lflow.c	/^ldp_destroy(void)$/;"	f	file:
ldp_free	ovn/controller/lflow.c	/^ldp_free(struct logical_datapath *ldp)$/;"	f	file:
ldp_lookup	ovn/controller/lflow.c	/^ldp_lookup(const struct sbrec_datapath_binding *binding)$/;"	f	file:
ldp_lookup_or_create	ovn/controller/lflow.c	/^ldp_lookup_or_create(const struct sbrec_datapath_binding *binding)$/;"	f	file:
ldp_run	ovn/controller/lflow.c	/^ldp_run(struct controller_ctx *ctx)$/;"	f	file:
learn	ofproto/ofproto-dpif-xlate.c	/^        } learn;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon193	file:
learn_check	lib/learn.c	/^learn_check(const struct ofpact_learn *learn, const struct flow *flow)$/;"	f
learn_execute	lib/learn.c	/^learn_execute(const struct ofpact_learn *learn, const struct flow *flow,$/;"	f
learn_format	lib/learn.c	/^learn_format(const struct ofpact_learn *learn, struct ds *s)$/;"	f
learn_macs	utilities/ovs-testcontroller.c	/^static bool learn_macs = true;$/;"	v	file:
learn_mask	lib/learn.c	/^learn_mask(const struct ofpact_learn *learn, struct flow_wildcards *wc)$/;"	f
learn_min_len	lib/ofp-actions.c	/^learn_min_len(uint16_t header)$/;"	f	file:
learn_parse	lib/learn.c	/^learn_parse(char *arg, struct ofpbuf *ofpacts)$/;"	f
learn_parse__	lib/learn.c	/^learn_parse__(char *orig, char *arg, struct ofpbuf *ofpacts)$/;"	f	file:
learn_parse_load_immediate	lib/learn.c	/^learn_parse_load_immediate(const char *s, struct ofpact_learn_spec *spec)$/;"	f	file:
learn_parse_spec	lib/learn.c	/^learn_parse_spec(const char *orig, char *name, char *value,$/;"	f	file:
learned_cookie	ofproto/ofproto.c	/^struct learned_cookie {$/;"	s	file:
learning_switch	lib/learning-switch.c	/^VLOG_DEFINE_THIS_MODULE(learning_switch);$/;"	v
leftmost_1bit_idx	lib/util.h	/^leftmost_1bit_idx(uint64_t x)$/;"	f
len	datapath-windows/ovsext/NetProto.h	/^    UINT8 len;$/;"	m	struct:IPv6NdOptHdr
len	datapath-windows/ovsext/NetProto.h	/^   UINT16    len;$/;"	m	struct:UDPHdr
len	datapath/flow_netlink.c	/^	int len;$/;"	m	struct:ovs_len_tbl	file:
len	datapath/linux/flow_netlink.c	/^	int len;$/;"	m	struct:ovs_len_tbl	file:
len	include/openflow/openflow-1.0.h	/^    ovs_be16 len;               \/* Length in bytes of this queue desc. *\/$/;"	m	struct:ofp10_packet_queue
len	include/openflow/openflow-1.1.h	/^    ovs_be16 len;                    \/* Length the bucket in bytes, including$/;"	m	struct:ofp11_bucket
len	include/openflow/openflow-1.1.h	/^    ovs_be16 len;                  \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction_goto_table
len	include/openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes *\/$/;"	m	struct:ofp11_instruction_experimenter
len	include/openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction
len	include/openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction_actions
len	include/openflow/openflow-1.1.h	/^    ovs_be16 len;               \/* Length of this struct in bytes. *\/$/;"	m	struct:ofp11_instruction_write_metadata
len	include/openflow/openflow-1.2.h	/^    ovs_be16 len;          \/* Length in bytes of this queue desc. *\/$/;"	m	struct:ofp12_packet_queue
len	include/openflow/openflow-1.3.h	/^    ovs_be16    len;         \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_drop
len	include/openflow/openflow-1.3.h	/^    ovs_be16    len;         \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
len	include/openflow/openflow-1.3.h	/^    ovs_be16    len;         \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_experimenter
len	include/openflow/openflow-1.3.h	/^    ovs_be16  len;               \/* Length in bytes of this stats. *\/$/;"	m	struct:ofp13_meter_stats
len	include/openflow/openflow-1.3.h	/^    ovs_be16 len;               \/* Length is 8. *\/$/;"	m	struct:ofp13_instruction_meter
len	include/openflow/openflow-1.3.h	/^    ovs_be16 len;        \/* Length in bytes of this band. *\/$/;"	m	struct:ofp13_meter_band_header
len	include/openflow/openflow-1.5.h	/^    ovs_be16 len;                   \/* Length the bucket in bytes, including$/;"	m	struct:ofp15_bucket
len	include/openflow/openflow-common.h	/^    ovs_be16 len;      \/* Length of property, including this header. *\/$/;"	m	struct:ofp_queue_prop_header
len	lib/dpif-netdev.c	/^    uint32_t len;        \/* Length of the following miniflow (incl. map). *\/$/;"	m	struct:netdev_flow_key	file:
len	lib/odp-util.c	/^    int len;$/;"	m	struct:attr_len_tbl	file:
len	lib/odp-util.c	/^    int len;$/;"	m	struct:geneve_scan	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                     \/* Length is 16. *\/$/;"	m	struct:ofp11_action_output	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* A multiple of 8, but at least 16. *\/$/;"	m	struct:nx_action_note	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* At least 16. *\/$/;"	m	struct:ext_action_header	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* At least 16. *\/$/;"	m	struct:nx_action_conjunction	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* At least 16. *\/$/;"	m	struct:nx_action_reg_load2	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 16. *\/$/;"	m	struct:nx_action_controller	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 16. *\/$/;"	m	struct:nx_action_resubmit	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 16. *\/$/;"	m	struct:nx_action_stack	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 16. *\/$/;"	m	struct:ofp_action_dl_addr	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 24. *\/$/;"	m	struct:nx_action_reg_load	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 24. *\/$/;"	m	struct:nx_action_reg_move	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 24. *\/$/;"	m	struct:nx_action_sample	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 32. *\/$/;"	m	struct:nx_action_write_metadata	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is 8. *\/$/;"	m	struct:ofp10_action_output	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;                   \/* Length is padded to 64 bits. *\/$/;"	m	struct:ofp12_action_set_field	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* 16. *\/$/;"	m	struct:nx_action_fin_timeout	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* 24. *\/$/;"	m	struct:nx_action_output_reg	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* 24. *\/$/;"	m	struct:nx_action_output_reg2	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* At least 24. *\/$/;"	m	struct:nx_action_conntrack	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* At least 24. *\/$/;"	m	struct:nx_action_learn	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* Length including slaves. *\/$/;"	m	struct:nx_action_bundle	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* Length including slaves. *\/$/;"	m	struct:nx_action_cnt_ids	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* Length is 32. *\/$/;"	m	struct:nx_action_multipath	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* Length is padded to 64 bits. *\/$/;"	m	struct:ofp15_action_copy_field	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;               \/* Length is padded to 64 bits. *\/$/;"	m	struct:onf_action_copy_field	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;             \/* Len is 16. *\/$/;"	m	struct:ofp10_action_enqueue	file:
len	lib/ofp-actions.c	/^    ovs_be16 len;$/;"	m	struct:ofp_action_header	file:
len	lib/ofp-actions.h	/^    uint16_t len;               \/* Length of the action, in bytes, including$/;"	m	struct:ofpact
len	lib/ofp-util.c	/^    ovs_be16 len;$/;"	m	struct:ofp_prop_header	file:
len	lib/sflow.h	/^    u_int32_t len;$/;"	m	struct:_SFLString
len	lib/tun-metadata.h	/^        uint8_t len;                       \/* Length of data in 'opts'. *\/$/;"	m	union:tun_metadata::__anon160
len	lib/tun-metadata.h	/^    int len;                    \/* Sum of 'len' over elements in chain. *\/$/;"	m	struct:tun_metadata_loc
len	lib/tun-metadata.h	/^    int len;          \/* In bytes, multiple of 4. *\/$/;"	m	struct:tun_metadata_loc_chain
len	tests/test-classifier.c	/^    int len;                    \/* Length in bytes. *\/$/;"	m	struct:cls_field	file:
lenNBO	datapath-windows/ovsext/Ethernet.h	/^    UINT16   lenNBO;      \/\/ length of the frame$/;"	m	struct:Eth_802_3
length	datapath-windows/ovsext/NetProto.h	/^   UINT16   length;$/;"	m	struct:PseudoHdr
length	datapath-windows/ovsext/NetProto.h	/^   UINT16   length;$/;"	m	struct:PseudoHdrIPv6
length	datapath-windows/ovsext/NetProto.h	/^   UINT8 length;$/;"	m	struct:IPOpt
length	datapath/linux/compat/include/net/geneve.h	/^	u8	length:5;$/;"	m	struct:geneve_opt
length	include/openflow/netronome-ext.h	/^    ovs_be16 length;                \/* Length in bytes of this property$/;"	m	struct:ntr_group_prop_selection_method
length	include/openflow/nicira-ext.h	/^    ovs_be16 length;            \/* Length is 24. *\/$/;"	m	struct:nx_flow_update_full
length	include/openflow/nicira-ext.h	/^    ovs_be16 length;            \/* Length is 8. *\/$/;"	m	struct:nx_flow_update_abbrev
length	include/openflow/nicira-ext.h	/^    ovs_be16 length;            \/* Length of this entry. *\/$/;"	m	struct:nx_flow_update_header
length	include/openflow/nicira-ext.h	/^    ovs_be16 length;          \/* Length of this entry. *\/$/;"	m	struct:nx_flow_stats
length	include/openflow/openflow-1.0.h	/^    ovs_be16 length;          \/* Length of this entry. *\/$/;"	m	struct:ofp10_flow_stats
length	include/openflow/openflow-1.1.h	/^    ovs_be16 length;            \/* Length of this entry. *\/$/;"	m	struct:ofp11_group_desc_stats
length	include/openflow/openflow-1.1.h	/^    ovs_be16 length;           \/* Length of match *\/$/;"	m	struct:ofp11_match_header
length	include/openflow/openflow-1.1.h	/^    ovs_be16 length;           \/* Length of this entry. *\/$/;"	m	struct:ofp11_flow_stats
length	include/openflow/openflow-1.1.h	/^    ovs_be16 length;           \/* Length of this entry. *\/$/;"	m	struct:ofp11_group_stats
length	include/openflow/openflow-1.3.h	/^    ovs_be16          length;       \/* Length of this entry. *\/$/;"	m	struct:ofp13_meter_config
length	include/openflow/openflow-1.3.h	/^    ovs_be16    length;   \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_experimenter
length	include/openflow/openflow-1.3.h	/^    ovs_be16    length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_instructions
length	include/openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_actions
length	include/openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_header
length	include/openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_next_tables
length	include/openflow/openflow-1.3.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp13_table_feature_prop_oxm
length	include/openflow/openflow-1.3.h	/^    ovs_be16 length;          \/* Length is padded to 64 bits. *\/$/;"	m	struct:ofp13_table_features
length	include/openflow/openflow-1.4.h	/^    ovs_be16         length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
length	include/openflow/openflow-1.4.h	/^    ovs_be16         length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
length	include/openflow/openflow-1.4.h	/^    ovs_be16         length;  \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_table_mod_prop_eviction
length	include/openflow/openflow-1.4.h	/^    ovs_be16         length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
length	include/openflow/openflow-1.4.h	/^    ovs_be16        length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_async_config_prop_experimenter
length	include/openflow/openflow-1.4.h	/^    ovs_be16        length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_role_prop_experimenter
length	include/openflow/openflow-1.4.h	/^    ovs_be16      length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_port_mod_prop_ethernet
length	include/openflow/openflow-1.4.h	/^    ovs_be16    length;     \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_async_config_prop_header
length	include/openflow/openflow-1.4.h	/^    ovs_be16    length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_async_config_prop_reasons
length	include/openflow/openflow-1.4.h	/^    ovs_be16 length;         \/* Length of this entry. *\/$/;"	m	struct:ofp14_port_stats
length	include/openflow/openflow-1.4.h	/^    ovs_be16 length;         \/* Length of this entry. *\/$/;"	m	struct:ofp14_queue_stats
length	include/openflow/openflow-1.4.h	/^    ovs_be16 length;       \/* Length is padded to 64 bits. *\/$/;"	m	struct:ofp14_table_desc
length	include/openflow/openflow-1.4.h	/^    ovs_be16 length; \/* Length in bytes of this property. *\/$/;"	m	struct:ofp14_role_prop_header
length	include/openflow/openflow-1.4.h	/^    ovs_be16 length;$/;"	m	struct:ofp14_port
length	include/openflow/openflow-1.5.h	/^    ovs_be16         length;  \/* 8. *\/$/;"	m	struct:ofp15_group_bucket_prop_watch
length	include/openflow/openflow-1.5.h	/^    ovs_be16         length;  \/* 8. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
length	include/openflow/openflow-1.5.h	/^    ovs_be16 length;              \/* Length of this entry. *\/$/;"	m	struct:ofp15_group_desc_stats
length	include/openflow/openflow-common.h	/^    ovs_be16    length;      \/* Length in bytes of this element. *\/$/;"	m	struct:ofp_hello_elem_header
length	include/openflow/openflow-common.h	/^    ovs_be16 length;    \/* Length including this ofp_header. *\/$/;"	m	struct:ofp_header
length	lib/bfd.c	/^    uint8_t length;       \/* Length of this BFD message. *\/$/;"	m	struct:msg	file:
length	lib/dynamic-string.h	/^    size_t length;      \/* Bytes used, not including null terminator. *\/$/;"	m	struct:ds
length	lib/geneve.h	/^    uint8_t   length:5;$/;"	m	struct:geneve_opt
length	lib/ofp-actions.h	/^    size_t length;$/;"	m	struct:ofpact_note
length	lib/ofp-util.c	/^    ovs_be16 length;        \/* Length in bytes of this property. *\/$/;"	m	struct:ofp_prop_experimenter	file:
length	lib/sflow.h	/^    u_int32_t length;       \/* The length of the IP packet$/;"	m	struct:_SFLSampled_ipv6
length	lib/sflow.h	/^    u_int32_t length;      \/* The length of the IP packet$/;"	m	struct:_SFLSampled_ipv4
length	lib/sflow.h	/^    u_int32_t length; \/* number of AS numbers in set\/sequence *\/$/;"	m	struct:_SFLExtended_as_path_segment
length	lib/sflow.h	/^    u_int32_t length;$/;"	m	struct:_SFLCounters_sample_element
length	lib/sflow.h	/^    u_int32_t length;$/;"	m	struct:_SFLFlow_sample_element
length	ovsdb/log.c	/^    unsigned long length;$/;"	m	struct:ovsdb_log_read_cbdata	file:
level	ovn/lib/expr.h	/^    enum expr_level level;$/;"	m	struct:expr_symbol	typeref:enum:expr_symbol::expr_level
level_names	lib/vlog.c	/^static const char *const level_names[VLL_N_LEVELS] = {$/;"	v	file:
levels	include/openvswitch/vlog.h	/^    int levels[VLF_N_DESTINATIONS]; \/* Minimum log level for each$/;"	m	struct:vlog_module
lex_error	ovn/lib/lex.c	/^lex_error(struct lex_token *token, const char *message, ...)$/;"	f
lex_format	ovn/lib/lex.h	/^enum lex_format {$/;"	g
lex_format_to_string	ovn/lib/lex.c	/^lex_format_to_string(enum lex_format format)$/;"	f
lex_is_id1	ovn/lib/lex.c	/^lex_is_id1(unsigned char c)$/;"	f	file:
lex_is_idn	ovn/lib/lex.c	/^lex_is_idn(unsigned char c)$/;"	f	file:
lex_parse_hex_integer	ovn/lib/lex.c	/^lex_parse_hex_integer(const char *start, size_t len, struct lex_token *token)$/;"	f	file:
lex_parse_id	ovn/lib/lex.c	/^lex_parse_id(const char *p, struct lex_token *token)$/;"	f	file:
lex_parse_integer	ovn/lib/lex.c	/^lex_parse_integer(const char *p, struct lex_token *token)$/;"	f	file:
lex_parse_integer__	ovn/lib/lex.c	/^lex_parse_integer__(const char *p, struct lex_token *token)$/;"	f	file:
lex_parse_mask	ovn/lib/lex.c	/^lex_parse_mask(const char *p, struct lex_token *token)$/;"	f	file:
lex_parse_string	ovn/lib/lex.c	/^lex_parse_string(const char *p, struct lex_token *token)$/;"	f	file:
lex_state	lib/json.c	/^    enum json_lex_state lex_state;$/;"	m	struct:json_parser	typeref:enum:json_parser::json_lex_state	file:
lex_token	ovn/lib/lex.h	/^struct lex_token {$/;"	s
lex_token_destroy	ovn/lib/lex.c	/^lex_token_destroy(struct lex_token *token)$/;"	f
lex_token_format	ovn/lib/lex.c	/^lex_token_format(const struct lex_token *token, struct ds *s)$/;"	f
lex_token_format_masked_integer	ovn/lib/lex.c	/^lex_token_format_masked_integer(const struct lex_token *token, struct ds *s)$/;"	f	file:
lex_token_format_value	ovn/lib/lex.c	/^lex_token_format_value(const union mf_subvalue *value,$/;"	f	file:
lex_token_get_format	ovn/lib/lex.c	/^lex_token_get_format(const struct lex_token *token)$/;"	f	file:
lex_token_init	ovn/lib/lex.c	/^lex_token_init(struct lex_token *token)$/;"	f
lex_token_n_zeros	ovn/lib/lex.c	/^lex_token_n_zeros(enum lex_format format)$/;"	f	file:
lex_token_parse	ovn/lib/lex.c	/^lex_token_parse(struct lex_token *token, const char *p, const char **startp)$/;"	f
lex_token_swap	ovn/lib/lex.c	/^lex_token_swap(struct lex_token *a, struct lex_token *b)$/;"	f
lex_type	ovn/lib/lex.h	/^enum lex_type {$/;"	g
lexer	ovn/lib/actions.c	/^    struct lexer *lexer;        \/* Lexer for pulling more tokens. *\/$/;"	m	struct:action_context	typeref:struct:action_context::lexer	file:
lexer	ovn/lib/expr.c	/^    struct lexer *lexer;        \/* Lexer for pulling more tokens. *\/$/;"	m	struct:expr_context	typeref:struct:expr_context::lexer	file:
lexer	ovn/lib/lex.h	/^struct lexer {$/;"	s
lexer_destroy	ovn/lib/lex.c	/^lexer_destroy(struct lexer *lexer)$/;"	f
lexer_get	ovn/lib/lex.c	/^lexer_get(struct lexer *lexer)$/;"	f
lexer_get_int	ovn/lib/lex.c	/^lexer_get_int(struct lexer *lexer, int *value)$/;"	f
lexer_init	ovn/lib/lex.c	/^lexer_init(struct lexer *lexer, const char *input)$/;"	f
lexer_is_int	ovn/lib/lex.c	/^lexer_is_int(const struct lexer *lexer)$/;"	f
lexer_lookahead	ovn/lib/lex.c	/^lexer_lookahead(const struct lexer *lexer)$/;"	f
lexer_match	ovn/lib/lex.c	/^lexer_match(struct lexer *lexer, enum lex_type type)$/;"	f
lexer_match_id	ovn/lib/lex.c	/^lexer_match_id(struct lexer *lexer, const char *id)$/;"	f
lflow	ovn/controller/lflow.c	/^VLOG_DEFINE_THIS_MODULE(lflow);$/;"	v
lflow_cmp	ovn/utilities/ovn-sbctl.c	/^lflow_cmp(const void *lf1_, const void *lf2_)$/;"	f	file:
lflow_destroy	ovn/controller/lflow.c	/^lflow_destroy(void)$/;"	f
lflow_init	ovn/controller/lflow.c	/^lflow_init(void)$/;"	f
lflow_run	ovn/controller/lflow.c	/^lflow_run(struct controller_ctx *ctx, struct hmap *flow_table,$/;"	f
lib_LTLIBRARIES	Makefile	/^lib_LTLIBRARIES = lib\/libopenvswitch.la lib\/libsflow.la \\$/;"	m
lib_libopenvswitch_la_DEPENDENCIES	Makefile	/^lib_libopenvswitch_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
lib_libopenvswitch_la_LDFLAGS	Makefile	/^lib_libopenvswitch_la_LDFLAGS = \\$/;"	m
lib_libopenvswitch_la_LDFLAGS	lib/automake.mk	/^lib_libopenvswitch_la_LDFLAGS = \\$/;"	m
lib_libopenvswitch_la_LIBADD	Makefile	/^lib_libopenvswitch_la_LIBADD = $(SSL_LIBS) $(CAPNG_LDADD) \\$/;"	m
lib_libopenvswitch_la_LIBADD	lib/automake.mk	/^lib_libopenvswitch_la_LIBADD = $(SSL_LIBS)$/;"	m
lib_libopenvswitch_la_LINK	Makefile	/^lib_libopenvswitch_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
lib_libopenvswitch_la_OBJECTS	Makefile	/^lib_libopenvswitch_la_OBJECTS = $(am_lib_libopenvswitch_la_OBJECTS) \\$/;"	m
lib_libopenvswitch_la_SOURCES	Makefile	/^lib_libopenvswitch_la_SOURCES = lib\/aes128.c lib\/aes128.h \\$/;"	m
lib_libopenvswitch_la_SOURCES	lib/automake.mk	/^lib_libopenvswitch_la_SOURCES = \\$/;"	m
lib_libsflow_la_CFLAGS	Makefile	/^lib_libsflow_la_CFLAGS = $(AM_CFLAGS) $(am__append_15) \\$/;"	m
lib_libsflow_la_CFLAGS	lib/automake.mk	/^lib_libsflow_la_CFLAGS = $(AM_CFLAGS)$/;"	m
lib_libsflow_la_CPPFLAGS	Makefile	/^lib_libsflow_la_CPPFLAGS = $(AM_CPPFLAGS)$/;"	m
lib_libsflow_la_CPPFLAGS	lib/automake.mk	/^lib_libsflow_la_CPPFLAGS = $(AM_CPPFLAGS)$/;"	m
lib_libsflow_la_LDFLAGS	Makefile	/^lib_libsflow_la_LDFLAGS = \\$/;"	m
lib_libsflow_la_LDFLAGS	lib/automake.mk	/^lib_libsflow_la_LDFLAGS = \\$/;"	m
lib_libsflow_la_LIBADD	Makefile	/^lib_libsflow_la_LIBADD =$/;"	m
lib_libsflow_la_LINK	Makefile	/^lib_libsflow_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
lib_libsflow_la_OBJECTS	Makefile	/^lib_libsflow_la_OBJECTS = $(am_lib_libsflow_la_OBJECTS)$/;"	m
lib_libsflow_la_SOURCES	Makefile	/^lib_libsflow_la_SOURCES = \\$/;"	m
lib_libsflow_la_SOURCES	lib/automake.mk	/^lib_libsflow_la_SOURCES = \\$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	datapath/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	datapath/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
librt	python/ovs/timeval.py	/^    librt = None$/;"	v
librt	python/ovs/timeval.py	/^    librt = ctypes.CDLL(LIBRT)$/;"	v
license	python/setup.py	/^    license='Apache 2.0',$/;"	v
limit	lib/netdev-linux.c	/^    uint32_t limit;$/;"	m	struct:codel	file:
limit	lib/netdev-linux.c	/^    uint32_t limit;$/;"	m	struct:fqcodel	file:
line	build-aux/check-structs	/^line = ""$/;"	v
line	build-aux/extract-ofp-actions	/^line = ""$/;"	v
line	build-aux/extract-ofp-errors	/^line = ""$/;"	v
line	build-aux/extract-ofp-fields	/^line = ""$/;"	v
line	build-aux/extract-ofp-msgs	/^line = ""$/;"	v
line	tests/test-rstp.c	/^static char line[128];$/;"	v	file:
line	tests/test-stp.c	/^static char line[128];$/;"	v	file:
lineNumber	build-aux/check-structs	/^        lineNumber = 0$/;"	v
line_number	build-aux/extract-ofp-fields	/^        line_number = 0$/;"	v
line_number	build-aux/extract-ofp-msgs	/^        line_number = 0$/;"	v
line_number	lib/json.c	/^    int line_number;$/;"	m	struct:json_parser	file:
line_number	tests/test-rstp.c	/^static int line_number;$/;"	v	file:
line_number	tests/test-stp.c	/^static int line_number;$/;"	v	file:
lines	utilities/ovs-parse-backtrace	/^        lines = trace.splitlines()$/;"	v
link	datapath-windows/ovsext/Event.h	/^    LIST_ENTRY link;$/;"	m	struct:_OVS_EVENT_QUEUE_ELEM
link	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        link;$/;"	m	struct:_OVS_FWD_ENTRY
link	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        link;$/;"	m	struct:_OVS_IPFORWARD_ENTRY
link	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        link;$/;"	m	struct:_OVS_IPNEIGH_ENTRY
link	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        link;$/;"	m	struct:_OVS_IP_HELPER_REQUEST
link	datapath-windows/ovsext/Stt.h	/^    LIST_ENTRY          link;$/;"	m	struct:_OVS_STT_PKT_ENTRY
link	datapath-windows/ovsext/User.h	/^    LIST_ENTRY link;$/;"	m	struct:_OVS_PACKET_QUEUE_ELEM
link	lib/netdev-dpdk.c	/^    struct rte_eth_link link;$/;"	m	struct:netdev_dpdk	typeref:struct:netdev_dpdk::rte_eth_link	file:
link_reset_cnt	lib/netdev-dpdk.c	/^    int link_reset_cnt;$/;"	m	struct:netdev_dpdk	file:
link_resets	lib/vswitch-idl.h	/^	int64_t *link_resets;$/;"	m	struct:ovsrec_interface
link_speed	lib/vswitch-idl.h	/^	int64_t *link_speed;$/;"	m	struct:ovsrec_interface
link_state	lib/vswitch-idl.h	/^	char *link_state;$/;"	m	struct:ovsrec_interface
linkname	utilities/ovs-check-dead-ifs	/^            linkname = os.readlink("\/proc\/%d\/fd\/%d" % (pid, fd))$/;"	v
linux_name	lib/netdev-linux.c	/^    const char *linux_name;$/;"	m	struct:tc_ops	file:
lisp_build_header	datapath/linux/vport-lisp.c	/^static void lisp_build_header(struct sk_buff *skb)$/;"	f	file:
lisp_build_header	datapath/vport-lisp.c	/^static void lisp_build_header(struct sk_buff *skb)$/;"	f	file:
lisp_find_port	datapath/linux/vport-lisp.c	/^static struct lisp_port *lisp_find_port(struct net *net, __be16 port)$/;"	f	file:
lisp_find_port	datapath/vport-lisp.c	/^static struct lisp_port *lisp_find_port(struct net *net, __be16 port)$/;"	f	file:
lisp_get_egress_tun_info	datapath/linux/vport-lisp.c	/^static int lisp_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
lisp_get_egress_tun_info	datapath/vport-lisp.c	/^static int lisp_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
lisp_get_name	datapath/linux/vport-lisp.c	/^static const char *lisp_get_name(const struct vport *vport)$/;"	f	file:
lisp_get_name	datapath/vport-lisp.c	/^static const char *lisp_get_name(const struct vport *vport)$/;"	f	file:
lisp_get_options	datapath/linux/vport-lisp.c	/^static int lisp_get_options(const struct vport *vport, struct sk_buff *skb)$/;"	f	file:
lisp_get_options	datapath/vport-lisp.c	/^static int lisp_get_options(const struct vport *vport, struct sk_buff *skb)$/;"	f	file:
lisp_hdr	datapath/linux/vport-lisp.c	/^static inline struct lisphdr *lisp_hdr(const struct sk_buff *skb)$/;"	f	file:
lisp_hdr	datapath/vport-lisp.c	/^static inline struct lisphdr *lisp_hdr(const struct sk_buff *skb)$/;"	f	file:
lisp_port	datapath/linux/vport-lisp.c	/^struct lisp_port {$/;"	s	file:
lisp_port	datapath/vport-lisp.c	/^struct lisp_port {$/;"	s	file:
lisp_rcv	datapath/linux/vport-lisp.c	/^static int lisp_rcv(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
lisp_rcv	datapath/vport-lisp.c	/^static int lisp_rcv(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
lisp_rcv_socket	datapath/linux/vport-lisp.c	/^	struct socket *lisp_rcv_socket;$/;"	m	struct:lisp_port	typeref:struct:lisp_port::socket	file:
lisp_rcv_socket	datapath/vport-lisp.c	/^	struct socket *lisp_rcv_socket;$/;"	m	struct:lisp_port	typeref:struct:lisp_port::socket	file:
lisp_send	datapath/linux/vport-lisp.c	/^static int lisp_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
lisp_send	datapath/vport-lisp.c	/^static int lisp_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
lisp_socket_init	datapath/linux/vport-lisp.c	/^static int lisp_socket_init(struct lisp_port *lisp_port, struct net *net)$/;"	f	file:
lisp_socket_init	datapath/vport-lisp.c	/^static int lisp_socket_init(struct lisp_port *lisp_port, struct net *net)$/;"	f	file:
lisp_tnl_create	datapath/linux/vport-lisp.c	/^static struct vport *lisp_tnl_create(const struct vport_parms *parms)$/;"	f	file:
lisp_tnl_create	datapath/vport-lisp.c	/^static struct vport *lisp_tnl_create(const struct vport_parms *parms)$/;"	f	file:
lisp_tnl_destroy	datapath/linux/vport-lisp.c	/^static void lisp_tnl_destroy(struct vport *vport)$/;"	f	file:
lisp_tnl_destroy	datapath/vport-lisp.c	/^static void lisp_tnl_destroy(struct vport *vport)$/;"	f	file:
lisp_vport	datapath/linux/vport-lisp.c	/^static inline struct lisp_port *lisp_vport(const struct vport *vport)$/;"	f	file:
lisp_vport	datapath/vport-lisp.c	/^static inline struct lisp_port *lisp_vport(const struct vport *vport)$/;"	f	file:
lisphdr	datapath/linux/vport-lisp.c	/^struct lisphdr {$/;"	s	file:
lisphdr	datapath/vport-lisp.c	/^struct lisphdr {$/;"	s	file:
list	datapath/linux/compat/include/net/stt.h	/^	struct list_head	list;$/;"	m	struct:stt_sock	typeref:struct:stt_sock::list_head
list	datapath/linux/vport-lisp.c	/^	struct list_head list;$/;"	m	struct:lisp_port	typeref:struct:lisp_port::list_head	file:
list	datapath/vport-lisp.c	/^	struct list_head list;$/;"	m	struct:lisp_port	typeref:struct:lisp_port::list_head	file:
list	datapath/vport.h	/^	struct list_head list;$/;"	m	struct:vport_ops	typeref:struct:vport_ops::list_head
list	include/openvswitch/vlog.h	/^    struct ovs_list list;$/;"	m	struct:vlog_module	typeref:struct:vlog_module::ovs_list
list	lib/guarded-list.h	/^    struct ovs_list list;$/;"	m	struct:guarded_list	typeref:struct:guarded_list::ovs_list
list	lib/lldp/lldpd-structs.h	/^    struct ovs_list list;$/;"	m	struct:lldpd_chassis	typeref:struct:lldpd_chassis::ovs_list
list	ovn/northd/ovn-northd.c	/^    struct ovs_list list;       \/* In list of similar records. *\/$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::ovs_list	file:
list	ovn/northd/ovn-northd.c	/^    struct ovs_list list;       \/* In list of similar records. *\/$/;"	m	struct:ovn_port	typeref:struct:ovn_port::ovs_list	file:
listRequests	datapath-windows/ovsext/TunnelFilter.c	/^    OVS_TUNFLT_REQUEST_LIST listRequests;$/;"	m	struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
list_back	lib/list.h	/^list_back(const struct ovs_list *list_)$/;"	f
list_front	lib/list.h	/^list_front(const struct ovs_list *list_)$/;"	f
list_init	lib/list.h	/^list_init(struct ovs_list *list)$/;"	f
list_insert	lib/list.h	/^list_insert(struct ovs_list *before, struct ovs_list *elem)$/;"	f
list_is_empty	lib/list.h	/^list_is_empty(const struct ovs_list *list)$/;"	f
list_is_short	lib/list.h	/^list_is_short(const struct ovs_list *list)$/;"	f
list_is_singleton	lib/list.h	/^list_is_singleton(const struct ovs_list *list)$/;"	f
list_macs	vtep/vtep-ctl.c	/^list_macs(struct ctl_context *ctx, bool local)$/;"	f	file:
list_make_table	lib/db-ctl-base.c	/^list_make_table(const struct ovsdb_idl_column **columns, size_t n_columns)$/;"	f	file:
list_move	lib/list.h	/^list_move(struct ovs_list *dst, struct ovs_list *src)$/;"	f
list_moved	lib/list.h	/^list_moved(struct ovs_list *list, const struct ovs_list *orig)$/;"	f
list_node	datapath/datapath.h	/^	struct list_head list_node;$/;"	m	struct:datapath	typeref:struct:datapath::list_head
list_node	lib/fat-rwlock.c	/^    struct ovs_list list_node;  \/* In struct rwlock's 'threads' list. *\/$/;"	m	struct:fat_rwlock_slot	typeref:struct:fat_rwlock_slot::ovs_list	file:
list_node	lib/netdev-dummy.c	/^    struct ovs_list list_node;$/;"	m	struct:pkt_list_node	typeref:struct:pkt_list_node::ovs_list	file:
list_node	lib/ofp-util.h	/^    struct ovs_list list_node; \/* For queuing flow_mods. *\/$/;"	m	struct:ofputil_flow_mod	typeref:struct:ofputil_flow_mod::ovs_list
list_node	lib/ofp-util.h	/^    struct ovs_list list_node;$/;"	m	struct:ofputil_bucket	typeref:struct:ofputil_bucket::ovs_list
list_node	lib/ofp-util.h	/^    struct ovs_list list_node;$/;"	m	struct:ofputil_geneve_map	typeref:struct:ofputil_geneve_map::ovs_list
list_node	lib/ofpbuf.h	/^    struct ovs_list list_node;  \/* Private list element for use by owner. *\/$/;"	m	struct:ofpbuf	typeref:struct:ofpbuf::ovs_list
list_node	lib/ovs-lldp.h	/^    struct ovs_list list_node;$/;"	m	struct:bridge_aa_vlan	typeref:struct:bridge_aa_vlan::ovs_list
list_node	lib/ovs-numa.c	/^    struct ovs_list list_node; \/* In 'numa_node->cores' list. *\/$/;"	m	struct:cpu_core	typeref:struct:cpu_core::ovs_list	file:
list_node	lib/ovs-numa.h	/^    struct ovs_list list_node;$/;"	m	struct:ovs_numa_info	typeref:struct:ovs_numa_info::ovs_list
list_node	lib/ovs-rcu.c	/^    struct ovs_list list_node;  \/* In global list. *\/$/;"	m	struct:ovsrcu_perthread	typeref:struct:ovsrcu_perthread::ovs_list	file:
list_node	lib/ovs-rcu.c	/^    struct ovs_list list_node;$/;"	m	struct:ovsrcu_cbset	typeref:struct:ovsrcu_cbset::ovs_list	file:
list_node	lib/ovs-thread.c	/^    struct ovs_list list_node;  \/* In 'inuse_keys' or 'free_keys'. *\/$/;"	m	struct:ovsthread_key	typeref:struct:ovsthread_key::ovs_list	file:
list_node	lib/ovs-thread.c	/^    struct ovs_list list_node;  \/* In 'slots_list'. *\/$/;"	m	struct:ovsthread_key_slots	typeref:struct:ovsthread_key_slots::ovs_list	file:
list_node	ofproto/bond.c	/^    struct ovs_list list_node;  \/* In bond_slave's 'entries' list. *\/$/;"	m	struct:bond_entry	typeref:struct:bond_entry::ovs_list	file:
list_node	ofproto/bond.c	/^    struct ovs_list list_node;  \/* In struct bond's enabled_slaves list. *\/$/;"	m	struct:bond_slave	typeref:struct:bond_slave::ovs_list	file:
list_node	ofproto/connmgr.h	/^    struct ovs_list list_node;  \/* For queuing. *\/$/;"	m	struct:ofproto_packet_in	typeref:struct:ofproto_packet_in::ovs_list
list_node	ofproto/ofproto-dpif-monitor.c	/^    struct ovs_list list_node;        \/* In send_soon. *\/$/;"	m	struct:send_soon_entry	typeref:struct:send_soon_entry::ovs_list	file:
list_node	ofproto/ofproto-dpif-upcall.c	/^    struct ovs_list list_node;         \/* In all_udpifs list. *\/$/;"	m	struct:udpif	typeref:struct:udpif::ovs_list	file:
list_node	ofproto/ofproto-dpif-xlate.c	/^    struct ovs_list list_node;     \/* In parent 'xbridges' list. *\/$/;"	m	struct:xbundle	typeref:struct:xbundle::ovs_list	file:
list_node	ofproto/ofproto-dpif.c	/^    struct ovs_list list_node;$/;"	m	struct:odp_garbage	typeref:struct:odp_garbage::ovs_list	file:
list_node	ofproto/ofproto.c	/^        struct ovs_list list_node;$/;"	m	union:learned_cookie::__anon187	typeref:struct:learned_cookie::__anon187::ovs_list	file:
list_node	ofproto/ofproto.c	/^    struct ovs_list list_node;  \/* In struct ofproto's "rule_executes" list. *\/$/;"	m	struct:rule_execute	typeref:struct:rule_execute::ovs_list	file:
list_node	tests/test-classifier.c	/^    struct ovs_list list_node;$/;"	m	struct:test_rule	typeref:struct:test_rule::ovs_list	file:
list_poison	lib/list.h	/^list_poison(struct ovs_list *list)$/;"	f
list_pop_back	lib/list.h	/^list_pop_back(struct ovs_list *list)$/;"	f
list_pop_front	lib/list.h	/^list_pop_front(struct ovs_list *list)$/;"	f
list_push_back	lib/list.h	/^list_push_back(struct ovs_list *list, struct ovs_list *elem)$/;"	f
list_push_front	lib/list.h	/^list_push_front(struct ovs_list *list, struct ovs_list *elem)$/;"	f
list_record	lib/db-ctl-base.c	/^list_record(const struct ovsdb_idl_row *row,$/;"	f	file:
list_remove	lib/list.h	/^list_remove(struct ovs_list *elem)$/;"	f
list_replace	lib/list.h	/^list_replace(struct ovs_list *element, const struct ovs_list *position)$/;"	f
list_size	lib/list.h	/^list_size(const struct ovs_list *list)$/;"	f
list_splice	lib/list.h	/^list_splice(struct ovs_list *before, struct ovs_list *first, struct ovs_list *last)$/;"	f
list_vports_from_net	datapath/datapath.c	/^static void __net_exit list_vports_from_net(struct net *net, struct net *dnet,$/;"	f	file:
list_vports_from_net	datapath/linux/datapath.c	/^static void __net_exit list_vports_from_net(struct net *net, struct net *dnet,$/;"	f	file:
listen	lib/stream-provider.h	/^    int (*listen)(const char *name, char *suffix, struct pstream **pstreamp,$/;"	m	struct:pstream_class
listen	lib/vconn-provider.h	/^    int (*listen)(const char *name, uint32_t allowed_versions,$/;"	m	struct:pvconn_class
listen_error	python/ovs/reconnect.py	/^    def listen_error(self, now, error):$/;"	m	class:Reconnect
listener	lib/unixctl.c	/^    struct pstream *listener;$/;"	m	struct:unixctl_server	typeref:struct:unixctl_server::pstream	file:
listener	ovsdb/jsonrpc-server.c	/^    struct pstream *listener;   \/* Listener, if passive. *\/$/;"	m	struct:ovsdb_jsonrpc_remote	typeref:struct:ovsdb_jsonrpc_remote::pstream	file:
listening	python/ovs/reconnect.py	/^    def listening(self, now):$/;"	m	class:Reconnect
llc	datapath-windows/ovsext/Ethernet.h	/^    Eth_LLC8 llc;         \/\/ LLC header$/;"	m	struct:Eth_802_3
lldp	lib/lldp/lldp.c	/^VLOG_DEFINE_THIS_MODULE(lldp);$/;"	v
lldp	lib/ovs-lldp.h	/^struct lldp {$/;"	s
lldp	lib/vswitch-idl.h	/^	struct smap lldp;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::smap
lldp	ofproto/ofproto-dpif-monitor.c	/^    struct lldp *lldp;                \/* Reference to lldp. *\/$/;"	m	struct:mport	typeref:struct:mport::lldp	file:
lldp	ofproto/ofproto-dpif-xlate.c	/^    struct lldp *lldp;               \/* LLDP handle or null. *\/$/;"	m	struct:xport	typeref:struct:xport::lldp	file:
lldp	ofproto/ofproto-dpif.c	/^    struct lldp *lldp;          \/* lldp, if any. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::lldp	file:
lldp_aa_element_system_id	lib/lldp/aa-structs.h	/^struct lldp_aa_element_system_id {$/;"	s
lldp_create_dummy	lib/ovs-lldp.c	/^lldp_create_dummy(void)$/;"	f
lldp_decode	lib/lldp/lldp.c	/^lldp_decode(struct lldpd *cfg OVS_UNUSED, char *frame, int s,$/;"	f
lldp_init	lib/ovs-lldp.c	/^lldp_init(void)$/;"	f
lldp_process_packet	lib/ovs-lldp.c	/^lldp_process_packet(struct lldp *lldp, const struct dp_packet *p)$/;"	f
lldp_ref	lib/ovs-lldp.c	/^lldp_ref(const struct lldp *lldp_)$/;"	f
lldp_send	lib/lldp/lldp.c	/^lldp_send(struct lldpd *global OVS_UNUSED,$/;"	f
lldp_should_process_flow	lib/ovs-lldp.c	/^lldp_should_process_flow(struct lldp *lldp, const struct flow *flow)$/;"	f
lldp_tlv_end	lib/lldp/lldp.c	/^lldp_tlv_end(struct dp_packet *p, unsigned int start)$/;"	f	file:
lldp_tlv_put_isid	lib/lldp/lldp.c	/^lldp_tlv_put_isid(struct dp_packet *p, uint32_t isid)$/;"	f	file:
lldp_tlv_put_u16	lib/lldp/lldp.c	/^lldp_tlv_put_u16(struct dp_packet *p, uint16_t x)$/;"	f	file:
lldp_tlv_put_u32	lib/lldp/lldp.c	/^lldp_tlv_put_u32(struct dp_packet *p, uint32_t x)$/;"	f	file:
lldp_tlv_put_u8	lib/lldp/lldp.c	/^lldp_tlv_put_u8(struct dp_packet *p, uint8_t x)$/;"	f	file:
lldp_tlv_start	lib/lldp/lldp.c	/^lldp_tlv_start(struct dp_packet *p, uint8_t tlv, unsigned int *start)$/;"	f	file:
lldp_unref	lib/ovs-lldp.c	/^lldp_unref(struct lldp *lldp)$/;"	f
lldpd	lib/lldp/lldpd.c	/^VLOG_DEFINE_THIS_MODULE(lldpd);$/;"	v
lldpd	lib/lldp/lldpd.h	/^struct lldpd {$/;"	s
lldpd	lib/ovs-lldp.h	/^    struct lldpd        *lldpd;$/;"	m	struct:lldp	typeref:struct:lldp::lldpd
lldpd_aa_element_tlv	lib/lldp/aa-structs.h	/^struct lldpd_aa_element_tlv {$/;"	s
lldpd_aa_isid_vlan_map_data	lib/lldp/aa-structs.h	/^struct lldpd_aa_isid_vlan_map_data {$/;"	s
lldpd_aa_isid_vlan_maps_tlv	lib/lldp/aa-structs.h	/^struct lldpd_aa_isid_vlan_maps_tlv {$/;"	s
lldpd_aa_maps_cleanup	lib/lldp/lldpd-structs.c	/^lldpd_aa_maps_cleanup(struct lldpd_port *port)$/;"	f	file:
lldpd_af	lib/lldp/lldpd-structs.h	/^lldpd_af(int af)$/;"	f
lldpd_af_from_lldp_proto	lib/lldp/lldp.c	/^lldpd_af_from_lldp_proto(int proto)$/;"	f	file:
lldpd_af_to_lldp_proto	lib/lldp/lldp.c	/^lldpd_af_to_lldp_proto(int af)$/;"	f	file:
lldpd_alloc_hardware	lib/lldp/lldpd.c	/^lldpd_alloc_hardware(struct lldpd *cfg, char *name, int index)$/;"	f
lldpd_alloc_mgmt	lib/lldp/lldpd.c	/^lldpd_alloc_mgmt(int family, void *addrptr, size_t addrsize, u_int32_t iface)$/;"	f
lldpd_assign_cfg_to_protocols	lib/lldp/lldpd.c	/^void lldpd_assign_cfg_to_protocols(struct lldpd *cfg)$/;"	f
lldpd_chassis	lib/lldp/lldpd-structs.h	/^struct lldpd_chassis {$/;"	s
lldpd_chassis_cleanup	lib/lldp/lldpd-structs.c	/^lldpd_chassis_cleanup(struct lldpd_chassis *chassis, bool all)$/;"	f
lldpd_chassis_mgmt_cleanup	lib/lldp/lldpd-structs.c	/^lldpd_chassis_mgmt_cleanup(struct lldpd_chassis *chassis)$/;"	f
lldpd_cleanup	lib/lldp/lldpd.c	/^lldpd_cleanup(struct lldpd *cfg)$/;"	f
lldpd_config	lib/lldp/lldpd-structs.h	/^struct lldpd_config {$/;"	s
lldpd_config_cleanup	lib/lldp/lldpd-structs.c	/^lldpd_config_cleanup(struct lldpd_config *config)$/;"	f
lldpd_decode	lib/lldp/lldpd.c	/^lldpd_decode(struct lldpd *cfg, char *frame, int s,$/;"	f	file:
lldpd_first_hardware	lib/lldp/lldpd.h	/^lldpd_first_hardware(struct lldpd *lldpd)$/;"	f
lldpd_frame	lib/lldp/lldpd-structs.h	/^struct lldpd_frame {$/;"	s
lldpd_get_hardware	lib/lldp/lldpd.c	/^lldpd_get_hardware(struct lldpd *cfg, char *name, int index,$/;"	f
lldpd_guess_type	lib/lldp/lldpd.c	/^lldpd_guess_type(struct lldpd *cfg, char *frame, int s)$/;"	f	file:
lldpd_hardware	lib/lldp/lldpd-structs.h	/^struct lldpd_hardware {$/;"	s
lldpd_hardware_cleanup	lib/lldp/lldpd.c	/^lldpd_hardware_cleanup(struct lldpd *cfg, struct lldpd_hardware *hardware)$/;"	f
lldpd_hide_all	lib/lldp/lldpd.c	/^lldpd_hide_all(struct lldpd *cfg)$/;"	f	file:
lldpd_hide_ports	lib/lldp/lldpd.c	/^lldpd_hide_ports(struct lldpd *cfg,$/;"	f	file:
lldpd_mgmt	lib/lldp/lldpd-structs.h	/^struct lldpd_mgmt {$/;"	s
lldpd_move_chassis	lib/lldp/lldpd.c	/^lldpd_move_chassis(struct lldpd_chassis *ochassis,$/;"	f	file:
lldpd_neighbor_change	lib/lldp/lldpd-structs.h	/^struct lldpd_neighbor_change {$/;"	s
lldpd_ops	lib/lldp/lldpd-structs.h	/^struct lldpd_ops {$/;"	s
lldpd_port	lib/lldp/lldpd-structs.h	/^struct lldpd_port {$/;"	s
lldpd_port_cleanup	lib/lldp/lldpd-structs.c	/^lldpd_port_cleanup(struct lldpd_port *port, bool all)$/;"	f
lldpd_recv	lib/lldp/lldpd.c	/^lldpd_recv(struct lldpd *cfg,$/;"	f
lldpd_remote_cleanup	lib/lldp/lldpd-structs.c	/^lldpd_remote_cleanup(struct lldpd_hardware *hw,$/;"	f
lldpd_send	lib/lldp/lldpd.c	/^lldpd_send(struct lldpd_hardware *hw, struct dp_packet *p)$/;"	f
lldpd_structs	lib/lldp/lldpd-structs.c	/^VLOG_DEFINE_THIS_MODULE(lldpd_structs);$/;"	v
lo	include/openvswitch/types.h	/^        ovs_be16 hi, lo;$/;"	m	struct:__anon59
lo	include/openvswitch/types.h	/^        ovs_be32 hi, lo;$/;"	m	struct:__anon65
lo	include/openvswitch/types.h	/^        ovs_be64 hi, lo;$/;"	m	struct:__anon63::__anon64
lo	include/openvswitch/types.h	/^        uint16_t hi, lo;$/;"	m	struct:__anon58
lo	include/openvswitch/types.h	/^        uint32_t hi, lo;$/;"	m	struct:__anon60
lo	include/openvswitch/types.h	/^        uint64_t hi, lo;$/;"	m	struct:__anon61::__anon62
load_bonding_driver	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def load_bonding_driver():$/;"	f
load_config	ovsdb/ovsdb-server.c	/^load_config(FILE *config_file, struct sset *remotes, struct sset *db_filenames)$/;"	f	file:
load_kmod	debian/openvswitch-switch.init	/^load_kmod () {$/;"	f
load_plugins	utilities/bugtool/ovs-bugtool	/^def load_plugins(just_capabilities=False, filter=None):$/;"	f
loc	lib/tun-metadata.c	/^    struct tun_metadata_loc loc;$/;"	m	struct:tun_meta_entry	typeref:struct:tun_meta_entry::tun_metadata_loc	file:
loc	lib/tun-metadata.h	/^    struct tun_metadata_loc loc; \/* Allocated position. *\/$/;"	m	struct:tun_metadata_match_entry	typeref:struct:tun_metadata_match_entry::tun_metadata_loc
local	lib/sha1.h	/^    int local;                   \/* Unprocessed amount in data. *\/$/;"	m	struct:sha1_ctx
local	vtep/vtep-idl.h	/^	struct vteprec_physical_locator *local;$/;"	m	struct:vteprec_tunnel	typeref:struct:vteprec_tunnel::vteprec_physical_locator
local_addr	utilities/ovs-benchmark.c	/^static struct in_addr local_addr;$/;"	v	typeref:struct:in_addr	file:
local_cfg	vtep/vtep-ctl.c	/^    const struct vteprec_mcast_macs_local *local_cfg;$/;"	m	struct:vtep_ctl_mcast_mac	typeref:struct:vtep_ctl_mcast_mac::vteprec_mcast_macs_local	file:
local_eth_dst	lib/bfd.c	/^    struct eth_addr local_eth_dst; \/* Local eth dst address. *\/$/;"	m	struct:bfd	typeref:struct:bfd::eth_addr	file:
local_eth_src	lib/bfd.c	/^    struct eth_addr local_eth_src; \/* Local eth src address. *\/$/;"	m	struct:bfd	typeref:struct:bfd::eth_addr	file:
local_gateway	lib/vswitch-idl.h	/^	char *local_gateway;$/;"	m	struct:ovsrec_controller
local_ip	datapath/linux/compat/include/net/udp_tunnel.h	/^		struct in_addr		local_ip;$/;"	m	union:udp_port_cfg::__anon50	typeref:struct:udp_port_cfg::__anon50::in_addr
local_ip	lib/vswitch-idl.h	/^	char *local_ip;$/;"	m	struct:ovsrec_controller
local_ip6	datapath/linux/compat/include/net/udp_tunnel.h	/^		struct in6_addr		local_ip6;$/;"	m	union:udp_port_cfg::__anon50	typeref:struct:udp_port_cfg::__anon50::in6_addr
local_mac	ofproto/in-band.c	/^    struct eth_addr local_mac;       \/* Current MAC. *\/$/;"	m	struct:in_band	typeref:struct:in_band::eth_addr	file:
local_max_port	utilities/ovs-benchmark.c	/^static unsigned short int local_min_port, local_max_port;$/;"	v	file:
local_min_port	utilities/ovs-benchmark.c	/^static unsigned short int local_min_port, local_max_port;$/;"	v	file:
local_netdev	ofproto/in-band.c	/^    struct netdev *local_netdev;     \/* Local port's network device. *\/$/;"	m	struct:in_band	typeref:struct:in_band::netdev	file:
local_netmask	lib/vswitch-idl.h	/^	char *local_netmask;$/;"	m	struct:ovsrec_controller
local_port_name	ofproto/connmgr.c	/^    char *local_port_name;$/;"	m	struct:connmgr	file:
local_server	utilities/ovs-l3ping	/^            local_server = tests. configure_l3(args.client, tunnel_mode)$/;"	v
local_server	utilities/ovs-l3ping	/^            local_server = tests.configure_l3(args.server, tunnel_mode)$/;"	v
local_server	utilities/ovs-l3ping	/^    local_server = None$/;"	v
local_server	utilities/ovs-test	/^                local_server = util.start_local_server(node1[1])$/;"	v
local_server	utilities/ovs-test	/^    local_server = None$/;"	v
local_udp_port	datapath/linux/compat/include/net/udp_tunnel.h	/^	__be16			local_udp_port;$/;"	m	struct:udp_port_cfg
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	datapath/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
locallyReplicate	datapath-windows/ovsext/Vxlan.h	/^    UINT32   locallyReplicate:1;$/;"	m	struct:VXLANHdr
localpref	lib/sflow.h	/^    u_int32_t localpref;                      \/* LocalPref associated with this route *\/$/;"	m	struct:_SFLExtended_gateway
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	datapath/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localtime_msec	lib/timeval.c	/^localtime_msec(long long int now, struct tm_msec *result)$/;"	f
localtime_r	lib/timeval.h	44;"	d
locator	vtep/vtep-idl.h	/^	struct vteprec_physical_locator *locator;$/;"	m	struct:vteprec_arp_sources_local	typeref:struct:vteprec_arp_sources_local::vteprec_physical_locator
locator	vtep/vtep-idl.h	/^	struct vteprec_physical_locator *locator;$/;"	m	struct:vteprec_arp_sources_remote	typeref:struct:vteprec_arp_sources_remote::vteprec_physical_locator
locator	vtep/vtep-idl.h	/^	struct vteprec_physical_locator *locator;$/;"	m	struct:vteprec_ucast_macs_local	typeref:struct:vteprec_ucast_macs_local::vteprec_physical_locator
locator	vtep/vtep-idl.h	/^	struct vteprec_physical_locator *locator;$/;"	m	struct:vteprec_ucast_macs_remote	typeref:struct:vteprec_ucast_macs_remote::vteprec_physical_locator
locator_set	vtep/vtep-idl.h	/^	struct vteprec_physical_locator_set *locator_set;$/;"	m	struct:vteprec_mcast_macs_local	typeref:struct:vteprec_mcast_macs_local::vteprec_physical_locator_set
locator_set	vtep/vtep-idl.h	/^	struct vteprec_physical_locator_set *locator_set;$/;"	m	struct:vteprec_mcast_macs_remote	typeref:struct:vteprec_mcast_macs_remote::vteprec_physical_locator_set
locator_status_bits	datapath/linux/vport-lisp.c	/^			__u8 locator_status_bits;$/;"	m	struct:lisphdr::__anon53::__anon54	file:
locator_status_bits	datapath/linux/vport-lisp.c	/^		__be32 locator_status_bits;$/;"	m	union:lisphdr::__anon53	file:
locator_status_bits	datapath/vport-lisp.c	/^			__u8 locator_status_bits;$/;"	m	struct:lisphdr::__anon56::__anon57	file:
locator_status_bits	datapath/vport-lisp.c	/^		__be32 locator_status_bits;$/;"	m	union:lisphdr::__anon56	file:
locator_status_bits_present	datapath/linux/vport-lisp.c	/^	__u8 locator_status_bits_present:1;$/;"	m	struct:lisphdr	file:
locator_status_bits_present	datapath/vport-lisp.c	/^	__u8 locator_status_bits_present:1;$/;"	m	struct:lisphdr	file:
locators	vtep/vtep-ctl.c	/^    struct ovs_list locators;   \/* Contains 'vtep_ctl_ploc's. *\/$/;"	m	struct:vtep_ctl_mcast_mac	typeref:struct:vtep_ctl_mcast_mac::ovs_list	file:
locators	vtep/vtep-idl.h	/^	struct vteprec_physical_locator **locators;$/;"	m	struct:vteprec_physical_locator_set	typeref:struct:vteprec_physical_locator_set::vteprec_physical_locator
locators_node	vtep/vtep-ctl.c	/^    struct ovs_list locators_node;  \/* In struct vtep_ctl_ploc_set's 'locators'$/;"	m	struct:vtep_ctl_ploc	typeref:struct:vtep_ctl_ploc::ovs_list	file:
lock	datapath-windows/ovsext/Switch.h	/^   PNDIS_RW_LOCK_EX        lock;$/;"	m	struct:_OVS_DATAPATH
lock	datapath/flow.h	/^	spinlock_t lock;		\/* Lock for atomic stats update. *\/$/;"	m	struct:flow_stats
lock	datapath/linux/compat/stt.c	/^	spinlock_t lock;$/;"	m	struct:stt_percpu	file:
lock	datapath/linux/stt.c	/^	spinlock_t lock;$/;"	m	struct:stt_percpu	file:
lock	include/openvswitch/thread.h	/^    pthread_mutex_t lock;$/;"	m	struct:ovs_mutex
lock	lib/ovs-thread.h	/^    pthread_rwlock_t lock;$/;"	m	struct:ovs_rwlock
lock	ovsdb/server.h	/^    struct ovsdb_lock *lock;    \/* The lock being waited for. *\/$/;"	m	struct:ovsdb_lock_waiter	typeref:struct:ovsdb_lock_waiter::ovsdb_lock
lock_handle	lib/lockfile.c	/^    HANDLE lock_handle;$/;"	m	struct:lockfile	file:
lock_name	lib/ovsdb-idl.c	/^    char *lock_name;            \/* Name of lock we need, NULL if none. *\/$/;"	m	struct:ovsdb_idl	file:
lock_name	ovsdb/server.h	/^    char *lock_name;$/;"	m	struct:ovsdb_lock_waiter
lock_node	ovsdb/server.h	/^    struct ovs_list lock_node;  \/* In ->lock->waiters's list. *\/$/;"	m	struct:ovsdb_lock_waiter	typeref:struct:ovsdb_lock_waiter::ovs_list
lock_pidfile	lib/daemon-unix.c	/^lock_pidfile(FILE *file, int command)$/;"	f	file:
lock_pidfile__	lib/daemon-unix.c	/^lock_pidfile__(FILE *file, int command, struct flock *lck)$/;"	f	file:
lock_request_id	lib/ovsdb-idl.c	/^    struct json *lock_request_id; \/* JSON-RPC ID of in-flight lock request. *\/$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::json	file:
lock_table__	lib/lockfile.c	/^static struct hmap lock_table__ = HMAP_INITIALIZER(&lock_table__);$/;"	v	typeref:struct:hmap	file:
lock_table_mutex	lib/lockfile.c	/^    OVS_REQUIRES(&lock_table_mutex);$/;"	v
lock_table_mutex	lib/lockfile.c	/^static struct hmap *const lock_table OVS_GUARDED_BY(lock_table_mutex)$/;"	v	file:
lock_table_mutex	lib/lockfile.c	/^static struct ovs_mutex lock_table_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
lockdep_ovsl_is_held	datapath/datapath.c	/^EXPORT_SYMBOL_GPL(lockdep_ovsl_is_held);$/;"	v
lockdep_ovsl_is_held	datapath/datapath.c	/^int lockdep_ovsl_is_held(void)$/;"	f
lockdep_ovsl_is_held	datapath/datapath.h	147;"	d
lockdep_ovsl_is_held	datapath/linux/datapath.c	/^EXPORT_SYMBOL_GPL(lockdep_ovsl_is_held);$/;"	v
lockdep_ovsl_is_held	datapath/linux/datapath.c	/^int lockdep_ovsl_is_held(void)$/;"	f
lockdep_rtnl_is_held	datapath/linux/compat/include/linux/rtnetlink.h	/^static inline int lockdep_rtnl_is_held(void)$/;"	f
lockfile	lib/lockfile.c	/^VLOG_DEFINE_THIS_MODULE(lockfile);$/;"	v
lockfile	lib/lockfile.c	/^struct lockfile {$/;"	s	file:
lockfile	ovsdb/log.c	/^    struct lockfile *lockfile;$/;"	m	struct:ovsdb_log	typeref:struct:ovsdb_log::lockfile	file:
lockfile_do_unlock	lib/lockfile.c	/^lockfile_do_unlock(struct lockfile *lockfile)$/;"	f	file:
lockfile_error	lib/lockfile.c	/^COVERAGE_DEFINE(lockfile_error);$/;"	v
lockfile_hash	lib/lockfile.c	/^lockfile_hash(dev_t device, ino_t inode)$/;"	f	file:
lockfile_lock	lib/lockfile.c	/^COVERAGE_DEFINE(lockfile_lock);$/;"	v
lockfile_lock	lib/lockfile.c	/^lockfile_lock(const char *file, struct lockfile **lockfilep)$/;"	f
lockfile_name	lib/lockfile.c	/^lockfile_name(const char *filename_)$/;"	f
lockfile_postfork	lib/lockfile.c	/^lockfile_postfork(void)$/;"	f
lockfile_unlock	lib/lockfile.c	/^COVERAGE_DEFINE(lockfile_unlock);$/;"	v
lockfile_unlock	lib/lockfile.c	/^lockfile_unlock(struct lockfile *lockfile)$/;"	f
locks	ovsdb/server.h	/^    struct hmap locks;     \/* Contains "struct ovsdb_lock"s indexed by name. *\/$/;"	m	struct:ovsdb_server	typeref:struct:ovsdb_server::hmap
locks_held	ovsdb/jsonrpc-server.h	/^    char *locks_held;$/;"	m	struct:ovsdb_jsonrpc_remote_status
locks_lost	ovsdb/jsonrpc-server.h	/^    char *locks_lost;$/;"	m	struct:ovsdb_jsonrpc_remote_status
locks_waiting	ovsdb/jsonrpc-server.h	/^    char *locks_waiting;$/;"	m	struct:ovsdb_jsonrpc_remote_status
log	ovn/lib/ovn-nb-idl.h	/^	bool log;$/;"	m	struct:nbrec_acl
log	ovsdb/file.c	/^    struct ovsdb_log *log;$/;"	m	struct:ovsdb_file	typeref:struct:ovsdb_file::ovsdb_log	file:
log	tests/test-l7.py	/^        import pyftpdlib.log$/;"	i
log	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def log(s):$/;"	f
logException	windows/ovs-windows-installer/Actions/OVSActions.js	/^function logException(exc) {$/;"	f
logMessage	windows/ovs-windows-installer/Actions/OVSActions.js	/^function logMessage(msg) {$/;"	f
logMessageEx	windows/ovs-windows-installer/Actions/OVSActions.js	/^function logMessageEx(msg, type) {$/;"	f
log_2_ceil	lib/util.h	/^log_2_ceil(uint64_t n)$/;"	f
log_2_floor	lib/util.h	/^log_2_floor(uint64_t n)$/;"	f
log_backtrace	lib/backtrace.h	61;"	d
log_backtrace_at	lib/backtrace.c	/^log_backtrace_at(const char *msg, const char *where)$/;"	f
log_backtrace_msg	lib/backtrace.h	62;"	d
log_bad_action	lib/ofp-actions.c	/^log_bad_action(const struct ofp_action_header *actions, size_t actions_len,$/;"	f	file:
log_bad_vendor	lib/ofp-msgs.c	/^log_bad_vendor(uint32_t vendor)$/;"	f	file:
log_ca_cert	lib/stream-ssl.c	/^log_ca_cert(const char *file_name, X509 *cert)$/;"	f	file:
log_days	utilities/bugtool/ovs-bugtool	/^            log_days = int(v)$/;"	v
log_days	utilities/bugtool/ovs-bugtool	/^log_days = 20$/;"	v
log_destination	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^log_destination = "syslog"$/;"	v
log_error	lib/ovsdb-idl.c	/^log_error(struct ovsdb_error *error)$/;"	f	file:
log_execute_message	lib/dpif.c	/^log_execute_message(struct dpif *dpif, const struct dpif_execute *execute,$/;"	f	file:
log_facility	lib/vlog.c	/^static atomic_int log_facility = ATOMIC_VAR_INIT(0);$/;"	v	file:
log_file_mutex	lib/vlog.c	/^static int log_fd OVS_GUARDED_BY(log_file_mutex) = -1;$/;"	v	file:
log_file_mutex	lib/vlog.c	/^static struct ovs_mutex log_file_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
log_flow_del_message	lib/dpif.c	/^log_flow_del_message(struct dpif *dpif, const struct dpif_flow_del *del,$/;"	f	file:
log_flow_get_message	lib/dpif.c	/^log_flow_get_message(const struct dpif *dpif, const struct dpif_flow_get *get,$/;"	f	file:
log_flow_message	lib/dpif.c	/^log_flow_message(const struct dpif *dpif, int error, const char *operation,$/;"	f	file:
log_flow_put_message	lib/dpif.c	/^log_flow_put_message(struct dpif *dpif, const struct dpif_flow_put *put,$/;"	f	file:
log_last_mod_time	utilities/bugtool/ovs-bugtool	/^    log_last_mod_time = int(time.time()) - log_days * 86400$/;"	v
log_last_mod_time	utilities/bugtool/ovs-bugtool	/^log_last_mod_time = None$/;"	v
log_nlmsg	lib/netlink-socket.c	/^log_nlmsg(const char *function, int error,$/;"	f	file:
log_odp_key_attributes	lib/odp-util.c	/^log_odp_key_attributes(struct vlog_rate_limit *rl, const char *title,$/;"	f	file:
log_operation	lib/dpif.c	/^log_operation(const struct dpif *dpif, const char *operation, int error)$/;"	f	file:
log_pif_action	xenserver/opt_xensource_libexec_interface-reconfigure	/^def log_pif_action(action, pif):$/;"	f
log_poll_interval	lib/timeval.c	/^log_poll_interval(long long int last_wakeup)$/;"	f	file:
log_property	lib/ofp-util.c	/^log_property(bool loose, const char *message, ...)$/;"	f
log_unexpected_flow	ofproto/ofproto-dpif-upcall.c	/^log_unexpected_flow(const struct dpif_flow *flow, int error)$/;"	f	file:
log_wakeup	lib/poll-loop.c	/^log_wakeup(const char *where, const struct pollfd *pollfd, int timeout)$/;"	f	file:
logging	python/ovs/vlog.py	/^import logging$/;"	i
logging	python/ovs/vlog.py	/^import logging.handlers$/;"	i
logging	tests/test-daemon.py	/^import logging$/;"	i
logging	tests/test-l7.py	/^        import logging$/;"	i
logging	utilities/ovs-dpctl-top	/^import logging$/;"	i
logical_datapath	ovn/controller/lflow.c	/^struct logical_datapath {$/;"	s	file:
logical_datapath	ovn/lib/ovn-sb-idl.h	/^	struct sbrec_datapath_binding *logical_datapath;$/;"	m	struct:sbrec_logical_flow	typeref:struct:sbrec_logical_flow::sbrec_datapath_binding
logical_datapaths	ovn/controller/lflow.c	/^static struct hmap logical_datapaths = HMAP_INITIALIZER(&logical_datapaths);$/;"	v	typeref:struct:hmap	file:
logical_port	ovn/lib/ovn-sb-idl.h	/^	char *logical_port;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_port_binding
logical_switch	vtep/vtep-idl.h	/^	struct vteprec_logical_switch *logical_switch;$/;"	m	struct:vteprec_mcast_macs_local	typeref:struct:vteprec_mcast_macs_local::vteprec_logical_switch
logical_switch	vtep/vtep-idl.h	/^	struct vteprec_logical_switch *logical_switch;$/;"	m	struct:vteprec_mcast_macs_remote	typeref:struct:vteprec_mcast_macs_remote::vteprec_logical_switch
logical_switch	vtep/vtep-idl.h	/^	struct vteprec_logical_switch *logical_switch;$/;"	m	struct:vteprec_ucast_macs_local	typeref:struct:vteprec_ucast_macs_local::vteprec_logical_switch
logical_switch	vtep/vtep-idl.h	/^	struct vteprec_logical_switch *logical_switch;$/;"	m	struct:vteprec_ucast_macs_remote	typeref:struct:vteprec_ucast_macs_remote::vteprec_logical_switch
login_with_password	tests/MockXenAPI.py	/^    def login_with_password(self, unused_username, unused_password):$/;"	m	class:XenAPI
longest	utilities/ovs-parse-backtrace	/^        longest = max(len(l) for l in lines)$/;"	v
lookup_any	lib/tnl-arp-cache.c	/^lookup_any(const char *host_name, struct in6_addr *address)$/;"	f	file:
lookup_bond_entry	ofproto/bond.c	/^lookup_bond_entry(const struct bond *bond, const struct flow *flow,$/;"	f	file:
lookup_classifier	tests/test-classifier.c	/^lookup_classifier(void *aux_)$/;"	f	file:
lookup_count	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 lookup_count;  \/* # of packets looked up in table. *\/$/;"	m	struct:ofp10_table_stats
lookup_count	include/openflow/openflow-1.1.h	/^    ovs_be64 lookup_count;   \/* Number of packets looked up in table. *\/$/;"	m	struct:ofp11_table_stats
lookup_count	include/openflow/openflow-1.2.h	/^    ovs_be64 lookup_count;   \/* Number of packets looked up in table. *\/$/;"	m	struct:ofp12_table_stats
lookup_count	include/openflow/openflow-1.3.h	/^    ovs_be64 lookup_count;  \/* Number of packets looked up in table. *\/$/;"	m	struct:ofp13_table_stats
lookup_count	lib/ofp-util.h	/^    uint64_t lookup_count;      \/* Number of packets looked up in table. *\/$/;"	m	struct:ofputil_table_stats
lookup_datapath	datapath/datapath.c	/^static struct datapath *lookup_datapath(struct net *net,$/;"	f	file:
lookup_datapath	datapath/linux/datapath.c	/^static struct datapath *lookup_datapath(struct net *net,$/;"	f	file:
lookup_done	lib/classifier.c	/^    bool lookup_done;        \/* Status of the lookup. *\/$/;"	m	struct:trie_ctx	file:
lookup_executor	ovsdb/execution.c	/^lookup_executor(const char *name)$/;"	f	file:
lookup_flows	tests/test-classifier.c	/^    struct flow *lookup_flows;$/;"	m	struct:cls_aux	typeref:struct:cls_aux::flow	file:
lookup_frag	datapath/linux/compat/stt.c	/^static struct pkt_frag *lookup_frag(struct net *net,$/;"	f	file:
lookup_frag	datapath/linux/stt.c	/^static struct pkt_frag *lookup_frag(struct net *net,$/;"	f	file:
lookup_hostname	lib/socket-util.c	/^lookup_hostname(const char *host_name, struct in_addr *addr)$/;"	f
lookup_input_bundle	ofproto/ofproto-dpif-xlate.c	/^lookup_input_bundle(const struct xbridge *xbridge, ofp_port_t in_port,$/;"	f	file:
lookup_ip	lib/socket-util.c	/^lookup_ip(const char *host_name, struct in_addr *addr)$/;"	f
lookup_ipv6	lib/socket-util.c	/^lookup_ipv6(const char *host_name, struct in6_addr *addr)$/;"	f
lookup_ofproto_dpif_by_port_name	ofproto/ofproto-dpif.c	/^lookup_ofproto_dpif_by_port_name(const char *name)$/;"	f	file:
lookup_utf8_sequence	lib/unicode.c	/^lookup_utf8_sequence(uint8_t c)$/;"	f	file:
lookup_uuid	tests/uuidfilt.pl	/^sub lookup_uuid {$/;"	s
lookup_vport	datapath/datapath.c	/^static struct vport *lookup_vport(struct net *net,$/;"	f	file:
lookup_vport	datapath/linux/datapath.c	/^static struct vport *lookup_vport(struct net *net,$/;"	f	file:
lost	datapath-windows/ovsext/Switch.h	/^   UINT64                  lost;            \/\/ Number of dropped misses.$/;"	m	struct:_OVS_DATAPATH
lport_by_name_or_uuid	ovn/utilities/ovn-nbctl.c	/^lport_by_name_or_uuid(struct ctl_context *ctx, const char *id)$/;"	f	file:
lport_is_enabled	ovn/northd/ovn-northd.c	/^lport_is_enabled(const struct nbrec_logical_port *lport)$/;"	f	file:
lrport_is_enabled	ovn/northd/ovn-northd.c	/^lrport_is_enabled(const struct nbrec_logical_router_port *lrport)$/;"	f	file:
lru_node	datapath/linux/compat/stt.c	/^	struct list_head lru_node;$/;"	m	struct:pkt_frag	typeref:struct:pkt_frag::list_head	file:
lru_node	datapath/linux/stt.c	/^	struct list_head lru_node;$/;"	m	struct:pkt_frag	typeref:struct:pkt_frag::list_head	file:
ls_cfg	vtep/vtep-ctl.c	/^    const struct vteprec_logical_switch *ls_cfg;$/;"	m	struct:vtep_ctl_lswitch	typeref:struct:vtep_ctl_lswitch::vteprec_logical_switch	file:
ls_count	vtep/ovs-vtep	/^ls_count = 0$/;"	v
lst1	datapath-windows/ovsext/resource.h	1325;"	d
lst10	datapath-windows/ovsext/resource.h	1334;"	d
lst11	datapath-windows/ovsext/resource.h	1335;"	d
lst12	datapath-windows/ovsext/resource.h	1336;"	d
lst13	datapath-windows/ovsext/resource.h	1337;"	d
lst14	datapath-windows/ovsext/resource.h	1338;"	d
lst15	datapath-windows/ovsext/resource.h	1339;"	d
lst16	datapath-windows/ovsext/resource.h	1340;"	d
lst2	datapath-windows/ovsext/resource.h	1326;"	d
lst3	datapath-windows/ovsext/resource.h	1327;"	d
lst4	datapath-windows/ovsext/resource.h	1328;"	d
lst5	datapath-windows/ovsext/resource.h	1329;"	d
lst6	datapath-windows/ovsext/resource.h	1330;"	d
lst7	datapath-windows/ovsext/resource.h	1331;"	d
lst8	datapath-windows/ovsext/resource.h	1332;"	d
lst9	datapath-windows/ovsext/resource.h	1333;"	d
lswitch	lib/learning-switch.c	/^struct lswitch {$/;"	s	file:
lswitch	utilities/ovs-testcontroller.c	/^    struct lswitch *lswitch;$/;"	m	struct:switch_	typeref:struct:switch_::lswitch	file:
lswitch_by_name_or_uuid	ovn/utilities/ovn-nbctl.c	/^lswitch_by_name_or_uuid(struct ctl_context *ctx, const char *id)$/;"	f	file:
lswitch_choose_destination	lib/learning-switch.c	/^lswitch_choose_destination(struct lswitch *sw, const struct flow *flow)$/;"	f	file:
lswitch_config	lib/learning-switch.h	/^struct lswitch_config {$/;"	s
lswitch_create	lib/learning-switch.c	/^lswitch_create(struct rconn *rconn, const struct lswitch_config *cfg)$/;"	f
lswitch_destroy	lib/learning-switch.c	/^lswitch_destroy(struct lswitch *sw)$/;"	f
lswitch_handshake	lib/learning-switch.c	/^lswitch_handshake(struct lswitch *sw)$/;"	f	file:
lswitch_is_alive	lib/learning-switch.c	/^lswitch_is_alive(const struct lswitch *sw)$/;"	f
lswitch_mode	lib/learning-switch.h	/^enum lswitch_mode {$/;"	g
lswitch_port	lib/learning-switch.c	/^struct lswitch_port {$/;"	s	file:
lswitch_process_packet	lib/learning-switch.c	/^lswitch_process_packet(struct lswitch *sw, const struct ofpbuf *msg)$/;"	f	file:
lswitch_run	lib/learning-switch.c	/^lswitch_run(struct lswitch *sw)$/;"	f
lswitch_state	lib/learning-switch.c	/^enum lswitch_state {$/;"	g	file:
lswitch_wait	lib/learning-switch.c	/^lswitch_wait(struct lswitch *sw)$/;"	f
lswitches	vtep/vtep-ctl.c	/^    struct shash lswitches; \/* Maps from logical switch name to$/;"	m	struct:vtep_ctl_context	typeref:struct:vtep_ctl_context::shash	file:
m	datapath/linux/compat/include/linux/reciprocal_div.h	/^	u32 m;$/;"	m	struct:reciprocal_value
m	ovsdb/ovsdb-idlc	/^        m = {'name': columnName,$/;"	v
m	utilities/ovs-check-dead-ifs	/^        m = inode_re.match(linkname)$/;"	v
m_addr	lib/lldp/lldpd-structs.h	/^    } m_addr;$/;"	m	struct:lldpd_mgmt	typeref:union:lldpd_mgmt::__anon98
m_addrsize	lib/lldp/lldpd-structs.h	/^    size_t    m_addrsize;$/;"	m	struct:lldpd_mgmt
m_entries	lib/lldp/aa-structs.h	/^    struct ovs_list                     m_entries;$/;"	m	struct:lldpd_aa_isid_vlan_maps_tlv	typeref:struct:lldpd_aa_isid_vlan_maps_tlv::ovs_list
m_entries	lib/lldp/lldpd-structs.h	/^    struct ovs_list m_entries;$/;"	m	struct:lldpd_mgmt	typeref:struct:lldpd_mgmt::ovs_list
m_family	lib/lldp/lldpd-structs.h	/^    int             m_family;$/;"	m	struct:lldpd_mgmt
m_iface	lib/lldp/lldpd-structs.h	/^    u_int32_t m_iface;$/;"	m	struct:lldpd_mgmt
mac	lib/lldp/lldpd.h	/^    struct eth_addr mac;  \/* Destination MAC address used by this protocol *\/$/;"	m	struct:protocol	typeref:struct:protocol::eth_addr
mac	lib/mac-learning.h	/^    struct eth_addr mac;        \/* Known MAC address. *\/$/;"	m	struct:mac_entry	typeref:struct:mac_entry::eth_addr
mac	lib/meta-flow.h	/^        struct eth_addr mac;$/;"	m	struct:mf_subvalue::__anon102	typeref:struct:mf_subvalue::__anon102::eth_addr
mac	lib/meta-flow.h	/^    struct eth_addr mac;$/;"	m	union:mf_value	typeref:struct:mf_value::eth_addr
mac	lib/netdev-windows.c	/^    struct eth_addr mac;$/;"	m	struct:netdev_windows	typeref:struct:netdev_windows::eth_addr	file:
mac	lib/ofp-actions.h	/^    struct eth_addr mac;$/;"	m	struct:ofpact_mac	typeref:struct:ofpact_mac::eth_addr
mac	lib/rtnetlink.h	/^    struct eth_addr mac;$/;"	m	struct:rtnetlink_change	typeref:struct:rtnetlink_change::eth_addr
mac	lib/tnl-arp-cache.c	/^    struct eth_addr mac;$/;"	m	struct:tnl_arp_entry	typeref:struct:tnl_arp_entry::eth_addr	file:
mac	lib/tnl-ports.c	/^    struct eth_addr mac;$/;"	m	struct:ip_device	typeref:struct:ip_device::eth_addr	file:
mac	lib/vswitch-idl.h	/^	char *mac;$/;"	m	struct:ovsrec_interface
mac	lib/vswitch-idl.h	/^	char *mac;$/;"	m	struct:ovsrec_port
mac	ovn/lib/ovn-nb-idl.h	/^	char *mac;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_logical_router_port
mac	ovn/lib/ovn-sb-idl.h	/^	char **mac;$/;"	m	struct:sbrec_port_binding
mac	ovn/northd/ovn-northd.c	/^    struct eth_addr mac;$/;"	m	struct:ovn_port	typeref:struct:ovn_port::eth_addr	file:
macAddr	datapath-windows/ovsext/IpHelper.h	/^    UINT8             macAddr[ETH_ADDR_LEN];$/;"	m	struct:_OVS_IPNEIGH_ENTRY
macAddress	datapath-windows/ovsext/DpInternal.h	/^    uint8_t macAddress[ETH_ADDR_LEN];$/;"	m	struct:_OVS_VPORT_EXT_INFO
mac_address	lib/netdev-windows.c	/^    struct eth_addr mac_address;$/;"	m	struct:netdev_windows_netdev_info	typeref:struct:netdev_windows_netdev_info::eth_addr	file:
mac_entry	lib/mac-learning.h	/^struct mac_entry {$/;"	s
mac_entry_age	lib/mac-learning.c	/^mac_entry_age(const struct mac_learning *ml, const struct mac_entry *e)$/;"	f
mac_entry_from_lru_node	lib/mac-learning.c	/^mac_entry_from_lru_node(struct ovs_list *list)$/;"	f	file:
mac_entry_is_grat_arp_locked	lib/mac-learning.h	/^static inline bool mac_entry_is_grat_arp_locked(const struct mac_entry *mac)$/;"	f
mac_entry_lookup	lib/mac-learning.c	/^mac_entry_lookup(const struct mac_learning *ml,$/;"	f	file:
mac_entry_set_grat_arp_lock	lib/mac-learning.h	/^static inline void mac_entry_set_grat_arp_lock(struct mac_entry *mac)$/;"	f
mac_in_use	lib/vswitch-idl.h	/^	char *mac_in_use;$/;"	m	struct:ovsrec_interface
mac_learning	lib/mac-learning.h	/^struct mac_learning {$/;"	s
mac_learning_create	lib/mac-learning.c	/^mac_learning_create(unsigned int idle_time)$/;"	f
mac_learning_expire	lib/mac-learning.c	/^mac_learning_expire(struct mac_learning *ml, struct mac_entry *e)$/;"	f
mac_learning_expired	lib/mac-learning.c	/^COVERAGE_DEFINE(mac_learning_expired);$/;"	v
mac_learning_flush	lib/mac-learning.c	/^mac_learning_flush(struct mac_learning *ml)$/;"	f
mac_learning_insert	lib/mac-learning.c	/^mac_learning_insert(struct mac_learning *ml,$/;"	f
mac_learning_learned	lib/mac-learning.c	/^COVERAGE_DEFINE(mac_learning_learned);$/;"	v
mac_learning_lookup	lib/mac-learning.c	/^mac_learning_lookup(const struct mac_learning *ml,$/;"	f
mac_learning_may_learn	lib/mac-learning.c	/^mac_learning_may_learn(const struct mac_learning *ml,$/;"	f
mac_learning_port	lib/mac-learning.h	/^struct mac_learning_port {$/;"	s
mac_learning_port_lookup	lib/mac-learning.c	/^mac_learning_port_lookup(struct mac_learning *ml, void *port)$/;"	f	file:
mac_learning_ref	lib/mac-learning.c	/^mac_learning_ref(const struct mac_learning *ml_)$/;"	f
mac_learning_run	lib/mac-learning.c	/^mac_learning_run(struct mac_learning *ml)$/;"	f
mac_learning_set_flood_vlans	lib/mac-learning.c	/^mac_learning_set_flood_vlans(struct mac_learning *ml,$/;"	f
mac_learning_set_idle_time	lib/mac-learning.c	/^mac_learning_set_idle_time(struct mac_learning *ml, unsigned int idle_time)$/;"	f
mac_learning_set_max_entries	lib/mac-learning.c	/^mac_learning_set_max_entries(struct mac_learning *ml, size_t max_entries)$/;"	f
mac_learning_unref	lib/mac-learning.c	/^mac_learning_unref(struct mac_learning *ml)$/;"	f
mac_learning_wait	lib/mac-learning.c	/^mac_learning_wait(struct mac_learning *ml)$/;"	f
mac_table_hash	lib/mac-learning.c	/^mac_table_hash(const struct mac_learning *ml, const struct eth_addr mac,$/;"	f	file:
macros	build-aux/check-structs	/^macros = {}$/;"	v
macros	build-aux/extract-ofp-errors	/^macros = {}$/;"	v
maddr	lib/packets.h	/^    ovs_16aligned_be32 maddr;$/;"	m	struct:igmpv3_record
maddr	lib/packets.h	/^    union ovs_16aligned_in6_addr maddr;$/;"	m	struct:mld2_record	typeref:union:mld2_record::ovs_16aligned_in6_addr
magic	datapath-windows/ovsext/BufferMgmt.h	/^        UINT16 magic;$/;"	m	struct:_OVS_BUFFER_CONTEXT::__anon2
magic	datapath/actions.c	/^  uint32_t magic;$/;"	m	struct:dhcphdr	file:
magic	datapath/linux/actions.c	/^  uint32_t magic;$/;"	m	struct:dhcphdr	file:
magic	lib/sflow_api.h	/^    void *magic;             \/* ptr to pass back in getCountersFn() *\/$/;"	m	struct:_SFLPoller
magic	lib/sflow_api.h	/^    void *magic;            \/* ptr to pass back in logging and alloc fns *\/$/;"	m	struct:_SFLAgent
magic	ovsdb/log.c	/^static const char magic[] = "OVSDB JSON ";$/;"	v	file:
magic_number	lib/pcap-file.c	/^    uint32_t magic_number;   \/* magic number *\/$/;"	m	struct:pcap_hdr	file:
maid	lib/cfm.c	/^    uint8_t maid[CCM_MAID_LEN]; \/* The MAID of this CFM. *\/$/;"	m	struct:cfm	file:
main	build-aux/config.guess	/^		main()$/;"	f
main	build-aux/config.guess	/^	main ()$/;"	f
main	build-aux/config.guess	/^main ()$/;"	f
main	debian/ovs-monitor-ipsec	/^def main():$/;"	f
main	ovn/controller-vtep/ovn-controller-vtep.c	/^main(int argc, char *argv[])$/;"	f
main	ovn/controller/ovn-controller.c	/^VLOG_DEFINE_THIS_MODULE(main);$/;"	v
main	ovn/controller/ovn-controller.c	/^main(int argc, char *argv[])$/;"	f
main	ovn/northd/ovn-northd.c	/^main(int argc, char *argv[])$/;"	f
main	ovn/utilities/ovn-nbctl.c	/^main(int argc, char *argv[])$/;"	f
main	ovn/utilities/ovn-sbctl.c	/^main(int argc, char *argv[])$/;"	f
main	ovsdb/ovsdb-client.c	/^main(int argc, char *argv[])$/;"	f
main	ovsdb/ovsdb-server.c	/^main(int argc, char *argv[])$/;"	f
main	ovsdb/ovsdb-tool.c	/^main(int argc, char *argv[])$/;"	f
main	tests/appctl.py	/^def main():$/;"	f
main	tests/dpdk/ring_client.c	/^main(int argc, char *argv[])$/;"	f
main	tests/ovstest.c	/^main(int argc, char *argv[])$/;"	f
main	tests/test-daemon.py	/^def main():$/;"	f
main	tests/test-json.py	/^def main(argv):$/;"	f
main	tests/test-jsonrpc.py	/^def main(argv):$/;"	f
main	tests/test-l7.py	/^def main():$/;"	f
main	tests/test-lib.c	/^main(int argc, char *argv[])$/;"	f
main	tests/test-ovsdb.c	/^main(int argc, char *argv[])$/;"	f
main	tests/test-ovsdb.py	/^def main(argv):$/;"	f
main	tests/test-reconnect.py	/^def main():$/;"	f
main	tests/test-strtok_r.c	/^main(void)$/;"	f
main	tests/test-type-props.c	/^main (void)$/;"	f
main	tests/test-unix-socket.py	/^def main(argv):$/;"	f
main	tests/test-unixctl.py	/^def main():$/;"	f
main	tests/test-vlog.py	/^def main():$/;"	f
main	utilities/bugtool/ovs-bugtool	/^def main(argv=None):$/;"	f
main	utilities/nlmon.c	/^main(int argc OVS_UNUSED, char *argv[])$/;"	f
main	utilities/ovs-appctl.c	/^main(int argc, char *argv[])$/;"	f
main	utilities/ovs-benchmark.c	/^main(int argc, char *argv[])$/;"	f
main	utilities/ovs-dev.py	/^def main():$/;"	f
main	utilities/ovs-dpctl-top	/^def main():$/;"	f
main	utilities/ovs-dpctl.c	/^main(int argc, char *argv[])$/;"	f
main	utilities/ovs-ofctl.c	/^main(int argc, char *argv[])$/;"	f
main	utilities/ovs-parse-backtrace	/^def main():$/;"	f
main	utilities/ovs-pipegen.py	/^def main():$/;"	f
main	utilities/ovs-testcontroller.c	/^main(int argc, char *argv[])$/;"	f
main	utilities/ovs-vlan-bug-workaround.c	/^main(int argc, char *argv[])$/;"	f
main	utilities/ovs-vlan-test	/^def main():$/;"	f
main	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
main	utilities/ovs-vsctl.c	/^main(int argc, char *argv[])$/;"	f
main	utilities/qemu-wrap.py	/^def main():$/;"	f
main	vswitchd/ovs-vswitchd.c	/^main(int argc, char *argv[])$/;"	f
main	vtep/ovs-vtep	/^def main():$/;"	f
main	vtep/vtep-ctl.c	/^main(int argc, char *argv[])$/;"	f
main	xenserver/opt_xensource_libexec_interface-reconfigure	/^def main(argv=None):$/;"	f
main	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def main():$/;"	f
main_loop	ovsdb/ovsdb-server.c	/^main_loop(struct ovsdb_jsonrpc_server *jsonrpc, struct shash *all_dbs,$/;"	f	file:
main_ret	utilities/ovs-vlan-test	/^    main_ret = main()$/;"	v
main_thread_id	lib/timeval.c	/^    unsigned int main_thread_id; \/* Identification for the main thread. *\/$/;"	m	struct:large_warp	file:
make	utilities/ovs-dev.py	/^def make(args=""):$/;"	f
make_cmp	ovn/lib/expr.c	/^make_cmp(struct expr_context *ctx,$/;"	f	file:
make_cmp__	ovn/lib/expr.c	/^make_cmp__(const struct expr_field *f, enum expr_relop r,$/;"	f	file:
make_dummy_depfile	build-aux/depcomp	/^make_dummy_depfile ()$/;"	f
make_echo_reply	lib/ofp-util.c	/^make_echo_reply(const struct ofp_header *rq)$/;"	f
make_echo_request	lib/ofp-util.c	/^make_echo_request(enum ofp_version ofp_version)$/;"	f
make_hindex	tests/test-hindex.c	/^make_hindex(struct hindex *hindex, struct element elements[],$/;"	f	file:
make_hmap	tests/test-hmap.c	/^make_hmap(struct hmap *hmap, struct element elements[],$/;"	f	file:
make_id	ofproto/pktbuf.c	/^make_id(unsigned int buffer_idx, unsigned int cookie)$/;"	f	file:
make_in4_sockaddr	lib/netdev-bsd.c	/^make_in4_sockaddr(struct sockaddr *sa, struct in_addr addr)$/;"	f	file:
make_in4_sockaddr	lib/netdev-linux.c	/^make_in4_sockaddr(struct sockaddr *sa, struct in_addr addr)$/;"	f	file:
make_inventory	utilities/bugtool/ovs-bugtool	/^def make_inventory(inventory, subdir):$/;"	f
make_list	tests/test-list.c	/^make_list(struct ovs_list *list, struct element elements[],$/;"	f	file:
make_meta_flow	build-aux/extract-ofp-fields	/^def make_meta_flow(fields):$/;"	f
make_nx_match	build-aux/extract-ofp-fields	/^def make_nx_match(fields):$/;"	f
make_pidfile	lib/daemon-unix.c	/^make_pidfile(void)$/;"	f	file:
make_pidfile	lib/daemon-windows.c	/^make_pidfile(void)$/;"	f	file:
make_pidfile_name	lib/daemon-unix.c	/^make_pidfile_name(const char *name)$/;"	f
make_pidfile_name	lib/daemon-windows.c	/^make_pidfile_name(const char *name)$/;"	f
make_pidfile_name	python/ovs/daemon.py	/^def make_pidfile_name(name):$/;"	f
make_request	utilities/ovs-pki	/^make_request() {$/;"	f
make_request	utilities/ovs-pki.in	/^make_request() {$/;"	f
make_rule	tests/test-classifier.c	/^make_rule(int wc_fields, int priority, int value_pat)$/;"	f	file:
make_short_name	python/ovs/socket_util.py	/^def make_short_name(long_name):$/;"	f
make_sizeof	build-aux/extract-ofp-fields	/^def make_sizeof(s):$/;"	f
make_sizeof	build-aux/extract-ofp-msgs	/^def make_sizeof(s):$/;"	f
make_sockaddr_un	lib/socket-util-unix.c	/^make_sockaddr_un(const char *name, struct sockaddr_un *un, socklen_t *un_len,$/;"	f	file:
make_tar	utilities/bugtool/ovs-bugtool	/^def make_tar(subdir, suffix, output_fd, output_file):$/;"	f
make_terminal	tests/test-ovn.c	/^make_terminal(struct expr ***terminalp)$/;"	f	file:
make_tmpdir	utilities/ovs-pki	/^make_tmpdir() {$/;"	f
make_tmpdir	utilities/ovs-pki.in	/^make_tmpdir() {$/;"	f
make_unix_socket	lib/socket-util-unix.c	/^make_unix_socket(int style, bool nonblock,$/;"	f
make_unix_socket	lib/socket-util.h	/^static inline int make_unix_socket(int style, bool nonblock,$/;"	f
make_unix_socket	python/ovs/socket_util.py	/^def make_unix_socket(style, nonblock, bind_path, connect_path, short=False):$/;"	f
make_zip	utilities/bugtool/ovs-bugtool	/^def make_zip(subdir, output_file):$/;"	f
man1dir	Makefile	/^man1dir = $(mandir)\/man1$/;"	m
man5dir	Makefile	/^man5dir = $(mandir)\/man5$/;"	m
man7dir	Makefile	/^man7dir = $(mandir)\/man7$/;"	m
man8dir	Makefile	/^man8dir = $(mandir)\/man8$/;"	m
man_MANS	Makefile	/^man_MANS = utilities\/ovs-appctl.8 utilities\/ovs-benchmark.1 \\$/;"	m
management_ips	vtep/vtep-idl.h	/^	char **management_ips;$/;"	m	struct:vteprec_physical_switch
management_pif	xenserver/opt_xensource_libexec_interface-reconfigure	/^management_pif = None$/;"	v
manager	lib/daemon-windows.c	/^static SC_HANDLE manager, service;$/;"	v	file:
manager_options	lib/vswitch-idl.h	/^	struct ovsrec_manager **manager_options;$/;"	m	struct:ovsrec_open_vswitch	typeref:struct:ovsrec_open_vswitch::ovsrec_manager
managers	vtep/vtep-idl.h	/^	struct vteprec_manager **managers;$/;"	m	struct:vteprec_global	typeref:struct:vteprec_global::vteprec_manager
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	datapath/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
manpage_to_nroff	build-aux/xml2nroff	/^def manpage_to_nroff(xml_file, subst, version=None):$/;"	f
map	lib/flow.c	/^    struct flowmap map;$/;"	m	struct:mf_ctx	typeref:struct:mf_ctx::flowmap	file:
map	lib/hmapx.h	/^    struct hmap map;$/;"	m	struct:hmapx	typeref:struct:hmapx::hmap
map	lib/id-pool.c	/^    struct hmap map;$/;"	m	struct:id_pool	typeref:struct:id_pool::hmap	file:
map	lib/shash.h	/^    struct hmap map;$/;"	m	struct:shash	typeref:struct:shash::hmap
map	lib/simap.h	/^    struct hmap map;            \/* Contains "struct simap_node"s. *\/$/;"	m	struct:simap	typeref:struct:simap::hmap
map	lib/smap.h	/^    struct hmap map;           \/* Contains "struct smap_node"s. *\/$/;"	m	struct:smap	typeref:struct:smap::hmap
map	lib/sset.h	/^    struct hmap map;$/;"	m	struct:sset	typeref:struct:sset::hmap
map	lib/tun-metadata.h	/^        uint64_t map;                      \/* 1-bit for each present TLV. *\/$/;"	m	union:tun_metadata::__anon160
map_delete	lib/tnl-ports.c	/^map_delete(struct eth_addr mac, struct in6_addr *addr, ovs_be16 udp_port)$/;"	f	file:
map_insert	lib/tnl-ports.c	/^map_insert(odp_port_t port, struct eth_addr mac, struct in6_addr *addr,$/;"	f	file:
map_insert_ipdev	lib/tnl-ports.c	/^map_insert_ipdev(struct ip_device *ip_dev)$/;"	f	file:
map_version	datapath/linux/vport-lisp.c	/^		__u8 map_version[3];$/;"	m	union:lisphdr::__anon52	file:
map_version	datapath/vport-lisp.c	/^		__u8 map_version[3];$/;"	m	union:lisphdr::__anon55	file:
map_version_present	datapath/linux/vport-lisp.c	/^	__u8 map_version_present:1;$/;"	m	struct:lisphdr	file:
map_version_present	datapath/vport-lisp.c	/^	__u8 map_version_present:1;$/;"	m	struct:lisphdr	file:
mappings	lib/ofp-util.h	/^    struct ovs_list mappings;      \/* Contains "struct ofputil_geneve_map"s. *\/$/;"	m	struct:ofputil_geneve_table_mod	typeref:struct:ofputil_geneve_table_mod::ovs_list
mappings	lib/ofp-util.h	/^    struct ovs_list mappings;      \/* Contains "struct ofputil_geneve_map"s. *\/$/;"	m	struct:ofputil_geneve_table_reply	typeref:struct:ofputil_geneve_table_reply::ovs_list
mappings	vswitchd/bridge.c	/^    struct hmap mappings;       \/* "struct" indexed by UUID *\/$/;"	m	struct:bridge	typeref:struct:bridge::hmap	file:
mappings_by_aux	lib/ovs-lldp.h	/^    struct hmap         mappings_by_aux;  \/* "struct" indexed by aux *\/$/;"	m	struct:lldp	typeref:struct:lldp::hmap
mappings_by_isid	lib/ovs-lldp.h	/^    struct hmap         mappings_by_isid; \/* "struct" indexed by ISID *\/$/;"	m	struct:lldp	typeref:struct:lldp::hmap
mark	datapath/linux/compat/stt.c	/^	u32 mark;$/;"	m	struct:pkt_key	file:
mark	datapath/linux/stt.c	/^	u32 mark;$/;"	m	struct:pkt_key	file:
mark	tests/test-csum.c	/^mark(char c)$/;"	f	file:
markerPDUsRx	lib/sflow.h	/^    uint32_t markerPDUsRx;$/;"	m	struct:_SFLLACP_counters
markerPDUsTx	lib/sflow.h	/^    uint32_t markerPDUsTx;$/;"	m	struct:_SFLLACP_counters
markerResponsePDUsRx	lib/sflow.h	/^    uint32_t markerResponsePDUsRx;$/;"	m	struct:_SFLLACP_counters
markerResponsePDUsTx	lib/sflow.h	/^    uint32_t markerResponsePDUsTx;$/;"	m	struct:_SFLLACP_counters
mask	datapath-windows/ovsext/DpInternal.h	/^    uint32_t mask;$/;"	m	struct:_OVS_EVENT_SUBSCRIBE
mask	datapath-windows/ovsext/Event.h	/^    UINT32 mask;$/;"	m	struct:_OVS_EVENT_QUEUE
mask	datapath/flow.h	/^	struct sw_flow_mask *mask;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::sw_flow_mask
mask	datapath/flow.h	/^	struct sw_flow_mask *mask;$/;"	m	struct:sw_flow_match	typeref:struct:sw_flow_match::sw_flow_mask
mask	include/openflow/openflow-1.0.h	/^    ovs_be32 mask;          \/* Bitmap of OFPPC_* flags to be changed. *\/$/;"	m	struct:ofp10_port_mod
mask	include/openflow/openflow-1.1.h	/^    ovs_be32 mask;          \/* Bitmap of OFPPC_* flags to be changed. *\/$/;"	m	struct:ofp11_port_mod
mask	include/openflow/openflow-1.4.h	/^    ovs_be32    mask;   \/* Bitmasks of reason values. *\/$/;"	m	struct:ofp14_async_config_prop_reasons
mask	include/openflow/openflow-1.4.h	/^    ovs_be32 mask;          \/* Bitmap of OFPPC_* flags to be changed. *\/$/;"	m	struct:ofp14_port_mod
mask	lib/classifier-private.h	/^    const struct minimask mask;             \/* Wildcards for fields. *\/$/;"	m	struct:cls_subtable	typeref:struct:cls_subtable::minimask
mask	lib/cmap.c	/^    uint32_t mask;              \/* Number of 'buckets', minus one. *\/$/;"	m	struct:cmap_impl	file:
mask	lib/dpif-netdev.c	/^    struct netdev_flow_key *mask; \/* Subtable's mask. *\/$/;"	m	struct:dpcls_rule	typeref:struct:dpcls_rule::netdev_flow_key	file:
mask	lib/dpif-netdev.c	/^    struct netdev_flow_key mask; \/* Wildcards for fields (const). *\/$/;"	m	struct:dpcls_subtable	typeref:struct:dpcls_subtable::netdev_flow_key	file:
mask	lib/dpif-netlink.c	/^    const struct nlattr *mask;          \/* OVS_FLOW_ATTR_MASK. *\/$/;"	m	struct:dpif_netlink_flow	typeref:struct:dpif_netlink_flow::nlattr	file:
mask	lib/dpif.h	/^    const struct nlattr *mask;      \/* Mask to put. *\/$/;"	m	struct:dpif_flow_put	typeref:struct:dpif_flow_put::nlattr
mask	lib/dpif.h	/^    const struct nlattr *mask;    \/* Flow mask, as OVS_KEY_ATTR_* attrs. *\/$/;"	m	struct:dpif_flow	typeref:struct:dpif_flow::nlattr
mask	lib/hindex.h	/^    size_t mask;      \/* 0 or more lowest-order bits set, others cleared. *\/$/;"	m	struct:hindex
mask	lib/hmap.h	/^    size_t mask;$/;"	m	struct:hmap
mask	lib/match.h	/^            struct minimask *mask;$/;"	m	struct:minimatch::__anon99::__anon100	typeref:struct:minimatch::__anon99::__anon100::minimask
mask	lib/meta-flow.c	/^    uint8_t mask;$/;"	m	struct:frag_handling	file:
mask	lib/odp-util.h	/^    const struct flow *mask;$/;"	m	struct:odp_flow_key_parms	typeref:struct:odp_flow_key_parms::flow
mask	lib/ofp-actions.c	/^    ovs_be64 mask;                  \/* Metadata mask. *\/$/;"	m	struct:nx_action_write_metadata	file:
mask	lib/ofp-actions.h	/^    ovs_be64 mask;$/;"	m	struct:ofpact_metadata
mask	lib/ofp-actions.h	/^    union mf_value mask;$/;"	m	struct:ofpact_set_field	typeref:union:ofpact_set_field::mf_value
mask	lib/ofp-util.h	/^    enum ofputil_port_config mask;$/;"	m	struct:ofputil_port_mod	typeref:enum:ofputil_port_mod::ofputil_port_config
mask	lib/ofp-util.h	/^    struct mf_bitmap mask;      \/* Subset of 'match' that may have masks. *\/$/;"	m	struct:ofputil_table_features	typeref:struct:ofputil_table_features::mf_bitmap
mask	ofproto/ofproto-dpif-upcall.c	/^    const struct nlattr *mask;     \/* Datapath flow mask. *\/$/;"	m	struct:udpif_key	typeref:struct:udpif_key::nlattr	file:
mask	ovn/lib/expr.c	/^        union mf_subvalue mask; \/* Only initialized if 'masked'. *\/$/;"	m	struct:expr_constant::__anon199	typeref:union:expr_constant::__anon199::mf_subvalue	file:
mask	ovn/lib/expr.h	/^                    union mf_subvalue mask;$/;"	m	struct:expr::__anon200::__anon201::__anon202::__anon203	typeref:union:expr::__anon200::__anon201::__anon202::__anon203::mf_subvalue
mask	ovn/lib/lex.h	/^    union mf_subvalue mask;     \/* LEX_T_MASKED_INTEGER only. *\/$/;"	m	struct:lex_token	typeref:union:lex_token::mf_subvalue
mask	ovn/northd/ovn-northd.c	/^    ovs_be32 ip, mask;          \/* 192.168.10.123\/24. *\/$/;"	m	struct:ovn_port	file:
mask_alloc	datapath/flow_table.c	/^static struct sw_flow_mask *mask_alloc(void)$/;"	f	file:
mask_alloc	datapath/linux/flow_table.c	/^static struct sw_flow_mask *mask_alloc(void)$/;"	f	file:
mask_allowed_ofp_versions	lib/ofp-version-opt.c	/^mask_allowed_ofp_versions(uint32_t bitmap)$/;"	f
mask_array	datapath/flow_table.h	/^	struct mask_array __rcu *mask_array;$/;"	m	struct:flow_table	typeref:struct:flow_table::__rcu
mask_array	datapath/flow_table.h	/^struct mask_array {$/;"	s
mask_array_rcu_cb	datapath/flow_table.c	/^static void mask_array_rcu_cb(struct rcu_head *rcu)$/;"	f	file:
mask_array_rcu_cb	datapath/linux/flow_table.c	/^static void mask_array_rcu_cb(struct rcu_head *rcu)$/;"	f	file:
mask_cache	datapath/flow_table.h	/^	struct mask_cache_entry __percpu *mask_cache;$/;"	m	struct:flow_table	typeref:struct:flow_table::__percpu
mask_cache_entry	datapath/flow_table.h	/^struct mask_cache_entry {$/;"	s
mask_empty	lib/odp-util.c	/^mask_empty(const struct nlattr *ma)$/;"	f	file:
mask_equal	datapath/flow_table.c	/^static bool mask_equal(const struct sw_flow_mask *a,$/;"	f	file:
mask_equal	datapath/linux/flow_table.c	/^static bool mask_equal(const struct sw_flow_mask *a,$/;"	f	file:
mask_index	datapath/flow_table.h	/^	u32 mask_index;$/;"	m	struct:mask_cache_entry
mask_ipv6_addr	datapath/actions.c	/^static void mask_ipv6_addr(const __be32 old[4], const __be32 addr[4],$/;"	f	file:
mask_ipv6_addr	datapath/linux/actions.c	/^static void mask_ipv6_addr(const __be32 old[4], const __be32 addr[4],$/;"	f	file:
mask_ipv6_addr	lib/odp-execute.c	/^mask_ipv6_addr(const ovs_16aligned_be32 *old, const ovs_be32 *addr,$/;"	f	file:
mask_len	lib/dpif-netlink.c	/^    size_t mask_len;$/;"	m	struct:dpif_netlink_flow	file:
mask_len	lib/dpif.h	/^    size_t mask_len;                \/* Length of 'mask' in bytes. *\/$/;"	m	struct:dpif_flow_put
mask_len	lib/dpif.h	/^    size_t mask_len;              \/* 'mask' length in bytes. *\/$/;"	m	struct:dpif_flow
mask_len	ofproto/ofproto-dpif-upcall.c	/^    size_t mask_len;               \/* Length of 'mask'. *\/$/;"	m	struct:udpif_key	file:
mask_prefix_bits_set	lib/classifier.c	/^mask_prefix_bits_set(const struct flow_wildcards *wc, uint8_t be32ofs,$/;"	f	file:
mask_set_nlattr	datapath/flow_netlink.c	/^static void mask_set_nlattr(struct nlattr *attr, u8 val)$/;"	f	file:
mask_set_nlattr	datapath/linux/flow_netlink.c	/^static void mask_set_nlattr(struct nlattr *attr, u8 val)$/;"	f	file:
mask_set_prefix_bits	lib/classifier.c	/^mask_set_prefix_bits(struct flow_wildcards *wc, uint8_t be32ofs,$/;"	f	file:
mask_str	tests/test-bundle.c	/^mask_str(uint8_t mask, size_t n_bits)$/;"	f	file:
maskable	lib/meta-flow.h	/^    enum mf_maskable maskable;$/;"	m	struct:mf_field	typeref:enum:mf_field::mf_maskable
maskbits	lib/classifier.c	/^    unsigned int maskbits;   \/* Prefix length needed to avoid false matches. *\/$/;"	m	struct:trie_ctx	file:
maskbuf	lib/dpif-netdev.c	/^    struct odputil_keybuf maskbuf[FLOW_DUMP_MAX_BATCH];$/;"	m	struct:dpif_netdev_flow_dump_thread	typeref:struct:dpif_netdev_flow_dump_thread::odputil_keybuf	file:
maskbuf	ofproto/ofproto-dpif-upcall.c	/^    } keybuf, maskbuf;$/;"	m	struct:udpif_key	typeref:union:udpif_key::__anon198	file:
masked	lib/tun-metadata.h	/^    bool masked; \/* Source value had a mask. Otherwise we can't tell if the$/;"	m	struct:tun_metadata_match_entry
masked	ovn/lib/expr.c	/^        bool masked;$/;"	m	struct:expr_constant::__anon199	file:
masked_flow_lookup	datapath/flow_table.c	/^static struct sw_flow *masked_flow_lookup(struct table_instance *ti,$/;"	f	file:
masked_flow_lookup	datapath/linux/flow_table.c	/^static struct sw_flow *masked_flow_lookup(struct table_instance *ti,$/;"	f	file:
masked_set_action	ofproto/ofproto-dpif.h	/^    bool masked_set_action;$/;"	m	struct:dpif_backer_support
masked_set_action_to_set_action_attr	datapath/flow_netlink.c	/^static int masked_set_action_to_set_action_attr(const struct nlattr *a,$/;"	f	file:
masked_set_action_to_set_action_attr	datapath/linux/flow_netlink.c	/^static int masked_set_action_to_set_action_attr(const struct nlattr *a,$/;"	f	file:
masks	datapath/flow_table.h	/^	struct sw_flow_mask __rcu *masks[];$/;"	m	struct:mask_array	typeref:struct:mask_array::__rcu
master_async_config	ofproto/connmgr.c	/^    uint32_t master_async_config[OAM_N_TYPES]; \/* master, other *\/$/;"	m	struct:ofconn	file:
master_election_id	ofproto/connmgr.c	/^    uint64_t master_election_id; \/* monotonically increasing sequence number$/;"	m	struct:connmgr	file:
master_election_id_defined	ofproto/connmgr.c	/^    bool master_election_id_defined;$/;"	m	struct:connmgr	file:
master_ifindex	lib/rtbsd.h	/^    int master_ifindex;         \/* Ifindex of datapath master (0 if none). *\/$/;"	m	struct:rtbsd_change
master_ifindex	lib/rtnetlink.h	/^    int master_ifindex;         \/* Ifindex of datapath master (0 if none). *\/$/;"	m	struct:rtnetlink_change
match	build-aux/check-structs	/^def match(t):$/;"	f
match	build-aux/extract-ofp-errors	/^def match(t):$/;"	f
match	include/openflow/openflow-1.0.h	/^    struct ofp10_match match;    \/* Fields to match *\/$/;"	m	struct:ofp10_flow_mod	typeref:struct:ofp10_flow_mod::ofp10_match
match	include/openflow/openflow-1.0.h	/^    struct ofp10_match match; \/* Description of fields. *\/$/;"	m	struct:ofp10_flow_removed	typeref:struct:ofp10_flow_removed::ofp10_match
match	include/openflow/openflow-1.0.h	/^    struct ofp10_match match; \/* Description of fields. *\/$/;"	m	struct:ofp10_flow_stats	typeref:struct:ofp10_flow_stats::ofp10_match
match	include/openflow/openflow-1.0.h	/^    struct ofp10_match match; \/* Fields to match. *\/$/;"	m	struct:ofp10_flow_stats_request	typeref:struct:ofp10_flow_stats_request::ofp10_match
match	include/openflow/openflow-1.1.h	/^    ovs_be32 match;          \/* Bitmap of OFPFMF_* that indicate the fields$/;"	m	struct:ofp11_table_stats
match	include/openflow/openflow-1.2.h	/^    ovs_be64 match;          \/* Bitmap of (1 << OFPXMT_*) that indicate the$/;"	m	struct:ofp12_table_stats
match	lib/classifier.c	/^    struct cls_match *match;$/;"	m	struct:cls_conjunction_set	typeref:struct:cls_conjunction_set::cls_match	file:
match	lib/classifier.h	/^    const struct minimatch match; \/* Matching rule. *\/$/;"	m	struct:cls_rule	typeref:struct:cls_rule::minimatch
match	lib/match.h	/^struct match {$/;"	s
match	lib/ofp-util.h	/^    struct match *match;$/;"	m	struct:ofputil_flow_update	typeref:struct:ofputil_flow_update::match
match	lib/ofp-util.h	/^    struct match match;$/;"	m	struct:ofputil_flow_mod	typeref:struct:ofputil_flow_mod::match
match	lib/ofp-util.h	/^    struct match match;$/;"	m	struct:ofputil_flow_monitor_request	typeref:struct:ofputil_flow_monitor_request::match
match	lib/ofp-util.h	/^    struct match match;$/;"	m	struct:ofputil_flow_removed	typeref:struct:ofputil_flow_removed::match
match	lib/ofp-util.h	/^    struct match match;$/;"	m	struct:ofputil_flow_stats	typeref:struct:ofputil_flow_stats::match
match	lib/ofp-util.h	/^    struct match match;$/;"	m	struct:ofputil_flow_stats_request	typeref:struct:ofputil_flow_stats_request::match
match	lib/ofp-util.h	/^    struct mf_bitmap match;     \/* Fields that may be matched. *\/$/;"	m	struct:ofputil_table_features	typeref:struct:ofputil_table_features::mf_bitmap
match	ofproto/bond.c	/^    struct match match;$/;"	m	struct:bond_pr_rule_op	typeref:struct:bond_pr_rule_op::match	file:
match	ofproto/connmgr.h	/^    struct minimatch match;$/;"	m	struct:ofmonitor	typeref:struct:ofmonitor::minimatch
match	ofproto/in-band.c	/^    struct match match;$/;"	m	struct:in_band_rule	typeref:struct:in_band_rule::match	file:
match	ofproto/tunnel.c	/^    struct tnl_match match;$/;"	m	struct:tnl_port	typeref:struct:tnl_port::tnl_match	file:
match	ovn/controller/ofctrl.c	/^    struct match match;$/;"	m	struct:ovn_flow	typeref:struct:ovn_flow::match	file:
match	ovn/lib/expr.h	/^    struct match match;$/;"	m	struct:expr_match	typeref:struct:expr_match::match
match	ovn/lib/ovn-nb-idl.h	/^	char *match;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_acl
match	ovn/lib/ovn-sb-idl.h	/^	char *match;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_logical_flow
match	ovn/northd/ovn-northd.c	/^    char *match;$/;"	m	struct:ovn_lflow	file:
match	tests/test-classifier.c	/^match(const struct cls_rule *wild_, const struct flow *fixed)$/;"	f	file:
match	tests/test-rstp.c	/^match(const char *want)$/;"	f	file:
match	tests/test-stp.c	/^match(const char *want)$/;"	f	file:
match	utilities/ovs-parse-backtrace	/^            match = re.search(r'\\[(0x.*)]', line)$/;"	v
match	utilities/ovs-parse-backtrace	/^        match = re.search(r'Count (\\d+)', lines[0])$/;"	v
match_equal	lib/match.c	/^match_equal(const struct match *a, const struct match *b)$/;"	f
match_format	lib/match.c	/^match_format(const struct match *match, struct ds *s, int priority)$/;"	f
match_has_default_dp_hash	lib/match.c	/^match_has_default_dp_hash(const struct match *m)$/;"	f	file:
match_has_default_hidden_fields	lib/match.c	/^match_has_default_hidden_fields(const struct match *m)$/;"	f
match_has_default_recirc_id	lib/match.c	/^match_has_default_recirc_id(const struct match *m)$/;"	f	file:
match_hash	lib/match.c	/^match_hash(const struct match *match, uint32_t basis)$/;"	f
match_init	lib/match.c	/^match_init(struct match *match,$/;"	f
match_init_catchall	lib/match.c	/^match_init_catchall(struct match *match)$/;"	f
match_init_hidden_fields	lib/match.c	/^match_init_hidden_fields(struct match *m)$/;"	f
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;           \/* Size of nx_match. *\/$/;"	m	struct:nx_flow_mod
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;         \/* Length of nx_match. *\/$/;"	m	struct:nx_flow_monitor_request
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;         \/* Length of nx_match. *\/$/;"	m	struct:nx_flow_update_full
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;       \/* Length of nx_match. *\/$/;"	m	struct:nx_aggregate_stats_request
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;       \/* Length of nx_match. *\/$/;"	m	struct:nx_flow_stats
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;       \/* Length of nx_match. *\/$/;"	m	struct:nx_flow_stats_request
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;       \/* Size of nx_match. *\/$/;"	m	struct:nx_flow_removed
match_len	include/openflow/nicira-ext.h	/^    ovs_be16 match_len;       \/* Size of nx_match. *\/$/;"	m	struct:nx_packet_in
match_node	ofproto/tunnel.c	/^    struct hmap_node match_node;$/;"	m	struct:tnl_port	typeref:struct:tnl_port::hmap_node	file:
match_patch_port	ovn/controller/patch.c	/^match_patch_port(const struct ovsrec_port *port, const char *peer)$/;"	f	file:
match_plens	lib/classifier.c	/^    union trie_prefix match_plens;  \/* Bitmask of prefix lengths with possible$/;"	m	struct:trie_ctx	typeref:union:trie_ctx::trie_prefix	file:
match_print	lib/match.c	/^match_print(const struct match *match)$/;"	f
match_set_actset_output	lib/match.c	/^match_set_actset_output(struct match *match, ofp_port_t actset_output)$/;"	f
match_set_any_mpls_bos	lib/match.c	/^match_set_any_mpls_bos(struct match *match, int idx)$/;"	f
match_set_any_mpls_label	lib/match.c	/^match_set_any_mpls_label(struct match *match, int idx)$/;"	f
match_set_any_mpls_lse	lib/match.c	/^match_set_any_mpls_lse(struct match *match, int idx)$/;"	f
match_set_any_mpls_tc	lib/match.c	/^match_set_any_mpls_tc(struct match *match, int idx)$/;"	f
match_set_any_pcp	lib/match.c	/^match_set_any_pcp(struct match *match)$/;"	f
match_set_any_vid	lib/match.c	/^match_set_any_vid(struct match *match)$/;"	f
match_set_arp_sha	lib/match.c	/^match_set_arp_sha(struct match *match, const struct eth_addr sha)$/;"	f
match_set_arp_sha_masked	lib/match.c	/^match_set_arp_sha_masked(struct match *match,$/;"	f
match_set_arp_tha	lib/match.c	/^match_set_arp_tha(struct match *match, const struct eth_addr tha)$/;"	f
match_set_arp_tha_masked	lib/match.c	/^match_set_arp_tha_masked(struct match *match,$/;"	f
match_set_conj_id	lib/match.c	/^match_set_conj_id(struct match *match, uint32_t value)$/;"	f
match_set_ct_label	lib/match.c	/^match_set_ct_label(struct match *match, ovs_u128 ct_label)$/;"	f
match_set_ct_label_masked	lib/match.c	/^match_set_ct_label_masked(struct match *match, ovs_u128 value, ovs_u128 mask)$/;"	f
match_set_ct_mark	lib/match.c	/^match_set_ct_mark(struct match *match, uint32_t ct_mark)$/;"	f
match_set_ct_mark_masked	lib/match.c	/^match_set_ct_mark_masked(struct match *match, uint32_t ct_mark,$/;"	f
match_set_ct_state	lib/match.c	/^match_set_ct_state(struct match *match, uint32_t ct_state)$/;"	f
match_set_ct_state_masked	lib/match.c	/^match_set_ct_state_masked(struct match *match, uint32_t ct_state, uint32_t mask)$/;"	f
match_set_ct_zone	lib/match.c	/^match_set_ct_zone(struct match *match, uint16_t ct_zone)$/;"	f
match_set_dl_dst	lib/match.c	/^match_set_dl_dst(struct match *match, const struct eth_addr dl_dst)$/;"	f
match_set_dl_dst_masked	lib/match.c	/^match_set_dl_dst_masked(struct match *match,$/;"	f
match_set_dl_src	lib/match.c	/^match_set_dl_src(struct match *match, const struct eth_addr dl_src)$/;"	f
match_set_dl_src_masked	lib/match.c	/^match_set_dl_src_masked(struct match *match,$/;"	f
match_set_dl_tci	lib/match.c	/^match_set_dl_tci(struct match *match, ovs_be16 tci)$/;"	f
match_set_dl_tci_masked	lib/match.c	/^match_set_dl_tci_masked(struct match *match, ovs_be16 tci, ovs_be16 mask)$/;"	f
match_set_dl_type	lib/match.c	/^match_set_dl_type(struct match *match, ovs_be16 dl_type)$/;"	f
match_set_dl_vlan	lib/match.c	/^match_set_dl_vlan(struct match *match, ovs_be16 dl_vlan)$/;"	f
match_set_dl_vlan_pcp	lib/match.c	/^match_set_dl_vlan_pcp(struct match *match, uint8_t dl_vlan_pcp)$/;"	f
match_set_dp_hash	lib/match.c	/^match_set_dp_hash(struct match *match, uint32_t value)$/;"	f
match_set_dp_hash_masked	lib/match.c	/^match_set_dp_hash_masked(struct match *match, uint32_t value, uint32_t mask)$/;"	f
match_set_icmp	lib/match.c	/^void match_set_icmp(struct match *match, ovs_be16 id)$/;"	f
match_set_icmp_code	lib/match.c	/^match_set_icmp_code(struct match *match, uint8_t icmp_code)$/;"	f
match_set_icmp_identify	lib/match.c	/^void match_set_icmp_identify(struct match *match, ovs_be16 id)$/;"	f
match_set_icmp_masked	lib/match.c	/^void match_set_icmp_masked(struct match *match, ovs_be16 port, ovs_be16 mask)$/;"	f
match_set_icmp_type	lib/match.c	/^match_set_icmp_type(struct match *match, uint8_t icmp_type)$/;"	f
match_set_in_port	lib/match.c	/^match_set_in_port(struct match *match, ofp_port_t ofp_port)$/;"	f
match_set_ipv6_dst	lib/match.c	/^match_set_ipv6_dst(struct match *match, const struct in6_addr *dst)$/;"	f
match_set_ipv6_dst_masked	lib/match.c	/^match_set_ipv6_dst_masked(struct match *match, const struct in6_addr *dst,$/;"	f
match_set_ipv6_label	lib/match.c	/^match_set_ipv6_label(struct match *match, ovs_be32 ipv6_label)$/;"	f
match_set_ipv6_label_masked	lib/match.c	/^match_set_ipv6_label_masked(struct match *match, ovs_be32 ipv6_label,$/;"	f
match_set_ipv6_src	lib/match.c	/^match_set_ipv6_src(struct match *match, const struct in6_addr *src)$/;"	f
match_set_ipv6_src_masked	lib/match.c	/^match_set_ipv6_src_masked(struct match *match, const struct in6_addr *src,$/;"	f
match_set_metadata	lib/match.c	/^match_set_metadata(struct match *match, ovs_be64 metadata)$/;"	f
match_set_metadata_masked	lib/match.c	/^match_set_metadata_masked(struct match *match,$/;"	f
match_set_mpls_bos	lib/match.c	/^match_set_mpls_bos(struct match *match, int idx, uint8_t mpls_bos)$/;"	f
match_set_mpls_label	lib/match.c	/^match_set_mpls_label(struct match *match, int idx, ovs_be32 mpls_label)$/;"	f
match_set_mpls_lse	lib/match.c	/^match_set_mpls_lse(struct match *match, int idx, ovs_be32 lse)$/;"	f
match_set_mpls_tc	lib/match.c	/^match_set_mpls_tc(struct match *match, int idx, uint8_t mpls_tc)$/;"	f
match_set_nd_target	lib/match.c	/^match_set_nd_target(struct match *match, const struct in6_addr *target)$/;"	f
match_set_nd_target_masked	lib/match.c	/^match_set_nd_target_masked(struct match *match,$/;"	f
match_set_nw_dscp	lib/match.c	/^match_set_nw_dscp(struct match *match, uint8_t nw_dscp)$/;"	f
match_set_nw_dst	lib/match.c	/^match_set_nw_dst(struct match *match, ovs_be32 nw_dst)$/;"	f
match_set_nw_dst_masked	lib/match.c	/^match_set_nw_dst_masked(struct match *match, ovs_be32 ip, ovs_be32 mask)$/;"	f
match_set_nw_ecn	lib/match.c	/^match_set_nw_ecn(struct match *match, uint8_t nw_ecn)$/;"	f
match_set_nw_frag	lib/match.c	/^match_set_nw_frag(struct match *match, uint8_t nw_frag)$/;"	f
match_set_nw_frag_masked	lib/match.c	/^match_set_nw_frag_masked(struct match *match,$/;"	f
match_set_nw_proto	lib/match.c	/^match_set_nw_proto(struct match *match, uint8_t nw_proto)$/;"	f
match_set_nw_src	lib/match.c	/^match_set_nw_src(struct match *match, ovs_be32 nw_src)$/;"	f
match_set_nw_src_masked	lib/match.c	/^match_set_nw_src_masked(struct match *match,$/;"	f
match_set_nw_ttl	lib/match.c	/^match_set_nw_ttl(struct match *match, uint8_t nw_ttl)$/;"	f
match_set_pkt_mark	lib/match.c	/^match_set_pkt_mark(struct match *match, uint32_t pkt_mark)$/;"	f
match_set_pkt_mark_masked	lib/match.c	/^match_set_pkt_mark_masked(struct match *match, uint32_t pkt_mark, uint32_t mask)$/;"	f
match_set_recirc_id	lib/match.c	/^match_set_recirc_id(struct match *match, uint32_t value)$/;"	f
match_set_reg	lib/match.c	/^match_set_reg(struct match *match, unsigned int reg_idx, uint32_t value)$/;"	f
match_set_reg_masked	lib/match.c	/^match_set_reg_masked(struct match *match, unsigned int reg_idx,$/;"	f
match_set_skb_priority	lib/match.c	/^match_set_skb_priority(struct match *match, uint32_t skb_priority)$/;"	f
match_set_tcp_flags	lib/match.c	/^match_set_tcp_flags(struct match *match, ovs_be16 flags)$/;"	f
match_set_tcp_flags_masked	lib/match.c	/^match_set_tcp_flags_masked(struct match *match, ovs_be16 flags, ovs_be16 mask)$/;"	f
match_set_tp_dst	lib/match.c	/^match_set_tp_dst(struct match *match, ovs_be16 tp_dst)$/;"	f
match_set_tp_dst_masked	lib/match.c	/^match_set_tp_dst_masked(struct match *match, ovs_be16 port, ovs_be16 mask)$/;"	f
match_set_tp_src	lib/match.c	/^match_set_tp_src(struct match *match, ovs_be16 tp_src)$/;"	f
match_set_tp_src_masked	lib/match.c	/^match_set_tp_src_masked(struct match *match, ovs_be16 port, ovs_be16 mask)$/;"	f
match_set_tun_dst	lib/match.c	/^match_set_tun_dst(struct match *match, ovs_be32 dst)$/;"	f
match_set_tun_dst_masked	lib/match.c	/^match_set_tun_dst_masked(struct match *match, ovs_be32 dst, ovs_be32 mask)$/;"	f
match_set_tun_flags	lib/match.c	/^match_set_tun_flags(struct match *match, uint16_t flags)$/;"	f
match_set_tun_flags_masked	lib/match.c	/^match_set_tun_flags_masked(struct match *match, uint16_t flags, uint16_t mask)$/;"	f
match_set_tun_gbp_flags	lib/match.c	/^match_set_tun_gbp_flags(struct match *match, uint8_t flags)$/;"	f
match_set_tun_gbp_flags_masked	lib/match.c	/^match_set_tun_gbp_flags_masked(struct match *match, uint8_t flags, uint8_t mask)$/;"	f
match_set_tun_gbp_id	lib/match.c	/^match_set_tun_gbp_id(struct match *match, ovs_be16 gbp_id)$/;"	f
match_set_tun_gbp_id_masked	lib/match.c	/^match_set_tun_gbp_id_masked(struct match *match, ovs_be16 gbp_id, ovs_be16 mask)$/;"	f
match_set_tun_id	lib/match.c	/^match_set_tun_id(struct match *match, ovs_be64 tun_id)$/;"	f
match_set_tun_id_masked	lib/match.c	/^match_set_tun_id_masked(struct match *match, ovs_be64 tun_id, ovs_be64 mask)$/;"	f
match_set_tun_src	lib/match.c	/^match_set_tun_src(struct match *match, ovs_be32 src)$/;"	f
match_set_tun_src_masked	lib/match.c	/^match_set_tun_src_masked(struct match *match, ovs_be32 src, ovs_be32 mask)$/;"	f
match_set_tun_tos	lib/match.c	/^match_set_tun_tos(struct match *match, uint8_t tos)$/;"	f
match_set_tun_tos_masked	lib/match.c	/^match_set_tun_tos_masked(struct match *match, uint8_t tos, uint8_t mask)$/;"	f
match_set_tun_ttl	lib/match.c	/^match_set_tun_ttl(struct match *match, uint8_t ttl)$/;"	f
match_set_tun_ttl_masked	lib/match.c	/^match_set_tun_ttl_masked(struct match *match, uint8_t ttl, uint8_t mask)$/;"	f
match_set_vlan_vid	lib/match.c	/^match_set_vlan_vid(struct match *match, ovs_be16 vid)$/;"	f
match_set_vlan_vid_masked	lib/match.c	/^match_set_vlan_vid_masked(struct match *match, ovs_be16 vid, ovs_be16 mask)$/;"	f
match_set_xreg	lib/match.c	/^match_set_xreg(struct match *match, unsigned int xreg_idx, uint64_t value)$/;"	f
match_set_xreg_masked	lib/match.c	/^match_set_xreg_masked(struct match *match, unsigned int xreg_idx,$/;"	f
match_to_string	lib/match.c	/^match_to_string(const struct match *match, int priority)$/;"	f
match_types	build-aux/extract-ofp-fields	/^match_types = dict()$/;"	v
match_validate	datapath/flow_netlink.c	/^static bool match_validate(const struct sw_flow_match *match,$/;"	f	file:
match_validate	datapath/linux/flow_netlink.c	/^static bool match_validate(const struct sw_flow_match *match,$/;"	f	file:
match_wc_init	lib/match.c	/^match_wc_init(struct match *match, const struct flow *flow)$/;"	f
match_zero_wildcarded_fields	lib/match.c	/^match_zero_wildcarded_fields(struct match *match)$/;"	f
matched_count	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 matched_count; \/* Number of packets that hit table. *\/$/;"	m	struct:ofp10_table_stats
matched_count	include/openflow/openflow-1.1.h	/^    ovs_be64 matched_count;  \/* Number of packets that hit table. *\/$/;"	m	struct:ofp11_table_stats
matched_count	include/openflow/openflow-1.2.h	/^    ovs_be64 matched_count;  \/* Number of packets that hit table. *\/$/;"	m	struct:ofp12_table_stats
matched_count	include/openflow/openflow-1.3.h	/^    ovs_be64 matched_count; \/* Number of packets that hit table. *\/$/;"	m	struct:ofp13_table_stats
matched_count	lib/ofp-util.h	/^    uint64_t matched_count;     \/* Number of packets that hit table. *\/$/;"	m	struct:ofputil_table_stats
matches	utilities/bugtool/ovs-bugtool	/^def matches(f, pattern, negate):$/;"	f
math	python/ovstest/tests.py	/^import math$/;"	i
math	utilities/ovs-test	/^import math$/;"	i
max	datapath/flow_table.h	/^	int count, max;$/;"	m	struct:mask_array
max	lib/ovsdb-types.h	/^            double max;         \/* minReal or DBL_MAX. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_real_constraints
max	lib/ovsdb-types.h	/^            int64_t max;        \/* maxInteger or INT64_MAX. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_integer_constraints
maxAttr	datapath-windows/ovsext/Datapath.c	/^    UINT16 maxAttr;$/;"	m	struct:_NETLINK_FAMILY	file:
maxLen	datapath-windows/ovsext/Netlink/Netlink.h	/^    UINT32 maxLen;$/;"	m	struct:_NL_POLICY
maxLen	lib/ovsdb-types.h	/^            unsigned int maxLen; \/* maxLength or UINT_MAX. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_string_constraints
maxResponseTime	datapath-windows/ovsext/NetProto.h	/^   UINT8    maxResponseTime;$/;"	m	struct:IGMPHdr
max_age	lib/rstp-common.h	/^    uint16_t max_age;$/;"	m	struct:rstp_times
max_age	lib/stp.c	/^    int max_age;                    \/* 8.5.3.4: Time to drop received data. *\/$/;"	m	struct:stp	file:
max_age	ofproto/ofproto.h	/^    uint16_t max_age;$/;"	m	struct:ofproto_stp_settings
max_args	lib/command-line.h	/^    int max_args;$/;"	m	struct:ovs_cmdl_command
max_args	lib/db-ctl-base.h	/^    int max_args;               \/* Max number of arguments following name. *\/$/;"	m	struct:ctl_command_syntax
max_args	lib/dpctl.c	/^    int max_args;$/;"	m	struct:dpctl_command	file:
max_args	lib/unixctl.c	/^    int min_args, max_args;$/;"	m	struct:unixctl_command	file:
max_args	ovsdb/ovsdb-client.c	/^    int max_args;$/;"	m	struct:ovsdb_client_command	file:
max_attr_len	lib/netlink.c	/^max_attr_len(enum nl_attr_type type)$/;"	f	file:
max_backoff	lib/rconn.c	/^    int max_backoff;$/;"	m	struct:rconn	file:
max_backoff	lib/reconnect.c	/^    int max_backoff;$/;"	m	struct:reconnect	file:
max_backoff	lib/vswitch-idl.h	/^	int64_t *max_backoff;$/;"	m	struct:ovsrec_controller
max_backoff	lib/vswitch-idl.h	/^	int64_t *max_backoff;$/;"	m	struct:ovsrec_manager
max_backoff	ofproto/ofproto.h	/^    int max_backoff;            \/* Maximum reconnection backoff, in seconds. *\/$/;"	m	struct:ofproto_controller
max_backoff	ovsdb/jsonrpc-server.h	/^    int max_backoff;            \/* Maximum reconnection backoff, in msec. *\/$/;"	m	struct:ovsdb_jsonrpc_options
max_backoff	vtep/vtep-idl.h	/^	int64_t *max_backoff;$/;"	m	struct:vteprec_manager
max_bands	include/openflow/openflow-1.3.h	/^    uint8_t    max_bands;     \/* Maximum bands per meters *\/$/;"	m	struct:ofp13_meter_features
max_bands	lib/ofp-util.h	/^    uint8_t  max_bands;$/;"	m	struct:ofputil_meter_features
max_color	include/openflow/openflow-1.3.h	/^    uint8_t    max_color;     \/* Maximum color value *\/$/;"	m	struct:ofp13_meter_features
max_color	lib/ofp-util.h	/^    uint8_t  max_color;$/;"	m	struct:ofputil_meter_features
max_count	lib/classifier-private.h	/^    unsigned int max_count;        \/* Count of max_priority rules. *\/$/;"	m	struct:cls_subtable
max_entries	include/openflow/openflow-1.0.h	/^    ovs_be32 max_entries;    \/* Max number of entries supported. *\/$/;"	m	struct:ofp10_table_stats
max_entries	include/openflow/openflow-1.1.h	/^    ovs_be32 max_entries;    \/* Max number of entries supported. *\/$/;"	m	struct:ofp11_table_stats
max_entries	include/openflow/openflow-1.2.h	/^    ovs_be32 max_entries;    \/* Max number of entries supported. *\/$/;"	m	struct:ofp12_table_stats
max_entries	include/openflow/openflow-1.3.h	/^    ovs_be32 max_entries;     \/* Max number of entries supported. *\/$/;"	m	struct:ofp13_table_features
max_entries	lib/mac-learning.h	/^    size_t max_entries;         \/* Max number of learned MACs. *\/$/;"	m	struct:mac_learning
max_entries	lib/mcast-snooping.h	/^    size_t max_entries;$/;"	m	struct:mcast_snooping
max_entries	lib/ofp-util.h	/^    uint32_t max_entries;     \/* Max number of entries supported. *\/$/;"	m	struct:ofputil_table_features
max_entries	ofproto/ofproto.h	/^    unsigned int max_entries;   \/* Size of the multicast snooping table. *\/$/;"	m	struct:ofproto_mcast_snooping_settings
max_fields	include/openflow/nicira-ext.h	/^    ovs_be16 max_fields;       \/* Maximum number of match fields supported. *\/$/;"	m	struct:nx_geneve_table_reply
max_fields	lib/ofp-util.h	/^    uint16_t max_fields;$/;"	m	struct:ofputil_geneve_table_reply
max_flows	ofproto/ofproto-provider.h	/^    unsigned int max_flows;$/;"	m	struct:oftable
max_flows	ofproto/ofproto.h	/^    unsigned int max_flows;     \/* Maximum number of flows or UINT_MAX. *\/$/;"	m	struct:ofproto_table_settings
max_groups	include/openflow/openflow-1.2.h	/^    ovs_be32  max_groups[OFPGT12_N_TYPES]; \/* Max number of groups. *\/$/;"	m	struct:ofp12_group_features_stats
max_groups	lib/ofp-util.h	/^    uint32_t  max_groups[4];   \/* Maximum number of groups for each type. *\/$/;"	m	struct:ofputil_group_features
max_idle	lib/learning-switch.c	/^    int max_idle;$/;"	m	struct:lswitch	file:
max_idle	lib/learning-switch.h	/^    int max_idle;$/;"	m	struct:lswitch_config
max_idle	utilities/ovs-testcontroller.c	/^static int max_idle = 60;$/;"	v	file:
max_iovs	lib/netlink-socket.c	/^static int max_iovs;$/;"	v	file:
max_len	lib/netlink.h	/^    size_t min_len, max_len;$/;"	m	struct:nl_policy
max_len	lib/ofp-actions.c	/^    ovs_be16 max_len;                 \/* Max length to send to controller. *\/$/;"	m	struct:ofp11_action_output	file:
max_len	lib/ofp-actions.c	/^    ovs_be16 max_len;               \/* Max length to send to controller. *\/$/;"	m	struct:ofp10_action_output	file:
max_len	lib/ofp-actions.c	/^    ovs_be16 max_len;               \/* Maximum length to send to controller. *\/$/;"	m	struct:nx_action_controller	file:
max_len	lib/ofp-actions.c	/^    ovs_be16 max_len;           \/* Max length to send to controller. *\/$/;"	m	struct:nx_action_output_reg	file:
max_len	lib/ofp-actions.c	/^    ovs_be16 max_len;           \/* Max length to send to controller. *\/$/;"	m	struct:nx_action_output_reg2	file:
max_len	lib/ofp-actions.h	/^    uint16_t max_len;           \/* Max send len, for port OFPP_CONTROLLER. *\/$/;"	m	struct:ofpact_output
max_len	lib/ofp-actions.h	/^    uint16_t max_len;           \/* Maximum length to send to controller. *\/$/;"	m	struct:ofpact_controller
max_len	lib/ofp-actions.h	/^    uint16_t max_len;$/;"	m	struct:ofpact_output_reg
max_length	lib/ofp-actions.c	/^    unsigned short int max_length;$/;"	m	struct:ofpact_raw_instance	file:
max_link	lib/ofp-actions.c	/^    ovs_be16 max_link;          \/* Number of output links, minus 1. *\/$/;"	m	struct:nx_action_multipath	file:
max_link	lib/ofp-actions.h	/^    uint16_t max_link;          \/* Number of output links, minus 1. *\/$/;"	m	struct:ofpact_multipath
max_meter	include/openflow/openflow-1.3.h	/^    ovs_be32   max_meter;     \/* Maximum number of meters. *\/$/;"	m	struct:ofp13_meter_features
max_meters	lib/ofp-util.h	/^    uint32_t max_meters;        \/* Maximum number of meters. *\/$/;"	m	struct:ofputil_meter_features
max_mpls_depth	lib/odp-util.h	/^    size_t max_mpls_depth;$/;"	m	struct:odp_support
max_n	lib/cmap.c	/^    unsigned int max_n;         \/* Max elements before enlarging. *\/$/;"	m	struct:cmap_impl	file:
max_n_flows	ofproto/ofproto-dpif-upcall.c	/^    unsigned int max_n_flows;$/;"	m	struct:udpif	file:
max_option_space	include/openflow/nicira-ext.h	/^    ovs_be32 max_option_space; \/* Maximum total of option sizes supported. *\/$/;"	m	struct:nx_geneve_table_reply
max_option_space	lib/ofp-util.h	/^    uint32_t max_option_space;$/;"	m	struct:ofputil_geneve_table_reply
max_packet_len	lib/netdev-dpdk.c	/^    int max_packet_len;$/;"	m	struct:netdev_dpdk	file:
max_ports	ofproto/ofproto-provider.h	/^    uint16_t max_ports;         \/* Max possible OpenFlow port num, plus one. *\/$/;"	m	struct:ofproto
max_priority	lib/classifier-private.h	/^    int max_priority;              \/* Max priority of any rule in subtable. *\/$/;"	m	struct:cls_subtable
max_rate	lib/netdev-linux.c	/^    uint32_t max_rate;$/;"	m	struct:hfsc	file:
max_rate	lib/netdev-linux.c	/^    uint32_t max_rate;$/;"	m	struct:hfsc_class	file:
max_rate	lib/netdev-linux.c	/^    unsigned int max_rate;      \/* In bytes\/s. *\/$/;"	m	struct:htb	file:
max_rate	lib/netdev-linux.c	/^    unsigned int max_rate;      \/* In bytes\/s. *\/$/;"	m	struct:htb_class	file:
max_rate	lib/ofp-util.h	/^    uint16_t max_rate;$/;"	m	struct:ofputil_queue_config
max_rate	utilities/ovs-benchmark.c	/^static double max_rate;$/;"	v	file:
max_rows	ovsdb/table.h	/^    unsigned int max_rows;      \/* Maximum number of rows. *\/$/;"	m	struct:ovsdb_table_schema
max_sessions	ovsdb/jsonrpc-server.c	/^    unsigned int n_sessions, max_sessions;$/;"	m	struct:ovsdb_jsonrpc_server	file:
max_speed	include/openflow/openflow-1.1.h	/^    ovs_be32 max_speed;     \/* Max port bitrate in kbps *\/$/;"	m	struct:ofp11_port
max_speed	include/openflow/openflow-1.4.h	/^    ovs_be32 max_speed;     \/* Max port bitrate in kbps *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
max_speed	lib/ofp-util.h	/^    uint32_t max_speed;         \/* Maximum supported speed, in kbps. *\/$/;"	m	struct:ofputil_phy_port
max_time	utilities/bugtool/ovs-bugtool	/^    max_time=10)$/;"	v
max_time	utilities/bugtool/ovs-bugtool	/^    max_time=20)$/;"	v
max_time	utilities/bugtool/ovs-bugtool	/^    max_time=30)$/;"	v
max_time	utilities/bugtool/ovs-bugtool	/^    max_time=5)$/;"	v
max_tries	lib/reconnect.c	/^    unsigned int max_tries;$/;"	m	struct:reconnect	file:
max_version	lib/ofp-msgs.c	/^    uint8_t max_version;$/;"	m	struct:raw_info	file:
max_version	lib/ofp-util.c	/^    enum ofp_version min_version, max_version;$/;"	m	struct:ofputil_flow_mod_flag	typeref:enum:ofputil_flow_mod_flag::	file:
maxattr	datapath/linux/compat/include/net/genetlink.h	/^	unsigned int            maxattr;$/;"	m	struct:rpl_genl_family
maximum_ip_total_length	ofproto/ofproto-dpif-ipfix.c	/^    uint16_t maximum_ip_total_length;  \/* 0 if not IP. *\/$/;"	m	struct:ipfix_flow_cache_entry	file:
may_add_arc	lib/ovsdb-idl.c	/^may_add_arc(const struct ovsdb_idl_row *src, const struct ovsdb_idl_row *dst)$/;"	f	file:
may_create	lib/dpctl.h	/^    bool may_create;$/;"	m	struct:dpctl_params
may_enable	ofproto/bond.c	/^    bool may_enable;            \/* Client considers this slave bondable. *\/$/;"	m	struct:bond_slave	file:
may_enable	ofproto/ofproto-dpif-xlate.c	/^    bool may_enable;                 \/* May be enabled in bonds. *\/$/;"	m	struct:xport	file:
may_enable	ofproto/ofproto-dpif.c	/^    bool may_enable;            \/* May be enabled in bonds. *\/$/;"	m	struct:ofport_dpif	file:
may_fork	lib/ovs-thread.c	/^may_fork(void)$/;"	f
may_learn	ofproto/ofproto-dpif-xlate.h	/^    bool may_learn;$/;"	m	struct:xlate_in
may_receive	ofproto/ofproto-dpif-xlate.c	/^may_receive(const struct xport *xport, struct xlate_ctx *ctx)$/;"	f	file:
may_send_learning_packets	ofproto/bond.c	/^may_send_learning_packets(const struct bond *bond)$/;"	f	file:
maybe_byte_reverse	lib/sha1.c	/^maybe_byte_reverse(uint32_t *buffer OVS_UNUSED, int count OVS_UNUSED)$/;"	f	file:
maybe_unlink_and_free	lib/stream-fd.c	/^maybe_unlink_and_free(char *path)$/;"	f	file:
mbridge	ofproto/ofproto-dpif-mirror.c	/^    struct mbridge *mbridge;    \/* Owning ofproto. *\/$/;"	m	struct:mirror	typeref:struct:mirror::mbridge	file:
mbridge	ofproto/ofproto-dpif-mirror.c	/^struct mbridge {$/;"	s	file:
mbridge	ofproto/ofproto-dpif-xlate.c	/^            struct mbridge *mbridge;$/;"	m	struct:xc_entry::__anon188::__anon191	typeref:struct:xc_entry::__anon188::__anon191::mbridge	file:
mbridge	ofproto/ofproto-dpif-xlate.c	/^    struct mbridge *mbridge;      \/* Mirroring. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::mbridge	file:
mbridge	ofproto/ofproto-dpif.c	/^    struct mbridge *mbridge;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::mbridge	file:
mbridge_create	ofproto/ofproto-dpif-mirror.c	/^mbridge_create(void)$/;"	f
mbridge_has_mirrors	ofproto/ofproto-dpif-mirror.c	/^mbridge_has_mirrors(struct mbridge *mbridge)$/;"	f
mbridge_need_revalidate	ofproto/ofproto-dpif-mirror.c	/^mbridge_need_revalidate(struct mbridge *mbridge)$/;"	f
mbridge_ref	ofproto/ofproto-dpif-mirror.c	/^mbridge_ref(const struct mbridge *mbridge_)$/;"	f
mbridge_register_bundle	ofproto/ofproto-dpif-mirror.c	/^mbridge_register_bundle(struct mbridge *mbridge, struct ofbundle *ofbundle)$/;"	f
mbridge_unref	ofproto/ofproto-dpif-mirror.c	/^mbridge_unref(struct mbridge *mbridge)$/;"	f
mbridge_unregister_bundle	ofproto/ofproto-dpif-mirror.c	/^mbridge_unregister_bundle(struct mbridge *mbridge, struct ofbundle *ofbundle)$/;"	f
mbuf	lib/dp-packet.h	/^    struct rte_mbuf mbuf;       \/* DPDK mbuf *\/$/;"	m	struct:dp_packet	typeref:struct:dp_packet::rte_mbuf
mbundle	ofproto/ofproto-dpif-mirror.c	/^struct mbundle {$/;"	s	file:
mbundle_lookup	ofproto/ofproto-dpif-mirror.c	/^mbundle_lookup(const struct mbridge *mbridge, struct ofbundle *ofbundle)$/;"	f	file:
mbundle_lookup_multiple	ofproto/ofproto-dpif-mirror.c	/^mbundle_lookup_multiple(const struct mbridge *mbridge,$/;"	f	file:
mbundles	ofproto/ofproto-dpif-mirror.c	/^    struct hmap mbundles;$/;"	m	struct:mbridge	typeref:struct:mbridge::hmap	file:
mc_flood	ovn/northd/ovn-northd.c	/^static const struct multicast_group mc_flood = { MC_FLOOD, 65535 };$/;"	v	typeref:struct:multicast_group	file:
mc_unknown	ovn/northd/ovn-northd.c	/^static const struct multicast_group mc_unknown = { MC_UNKNOWN, 65534 };$/;"	v	typeref:struct:multicast_group	file:
mcast_bundle_age	lib/mcast-snooping.c	/^mcast_bundle_age(const struct mcast_snooping *ms,$/;"	f
mcast_group	lib/mcast-snooping.h	/^struct mcast_group {$/;"	s
mcast_group_bundle	lib/mcast-snooping.h	/^struct mcast_group_bundle {$/;"	s
mcast_group_bundle_from_lru_node	lib/mcast-snooping.c	/^mcast_group_bundle_from_lru_node(struct ovs_list *list)$/;"	f	file:
mcast_group_from_lru_node	lib/mcast-snooping.c	/^mcast_group_from_lru_node(struct ovs_list *list)$/;"	f	file:
mcast_group_has_bundles	lib/mcast-snooping.c	/^mcast_group_has_bundles(struct mcast_group *grp)$/;"	f	file:
mcast_local	vtep/vtep-ctl.c	/^    struct shash mcast_local;   \/* Maps from mac to vtep_ctl_mcast_mac. *\/$/;"	m	struct:vtep_ctl_lswitch	typeref:struct:vtep_ctl_lswitch::shash	file:
mcast_mrouter_age	lib/mcast-snooping.c	/^mcast_mrouter_age(const struct mcast_snooping *ms OVS_UNUSED,$/;"	f
mcast_mrouter_bundle	lib/mcast-snooping.h	/^struct mcast_mrouter_bundle {$/;"	s
mcast_mrouter_from_lru_node	lib/mcast-snooping.c	/^mcast_mrouter_from_lru_node(struct ovs_list *list)$/;"	f	file:
mcast_port_bundle	lib/mcast-snooping.h	/^struct mcast_port_bundle {$/;"	s
mcast_port_from_list_node	lib/mcast-snooping.c	/^mcast_port_from_list_node(struct ovs_list *list)$/;"	f	file:
mcast_remote	vtep/vtep-ctl.c	/^    struct shash mcast_remote;  \/* Maps from mac to vtep_ctl_mcast_mac. *\/$/;"	m	struct:vtep_ctl_lswitch	typeref:struct:vtep_ctl_lswitch::shash	file:
mcast_snooping	lib/mcast-snooping.h	/^struct mcast_snooping {$/;"	s
mcast_snooping_add_mld	lib/mcast-snooping.c	/^mcast_snooping_add_mld(struct mcast_snooping *ms,$/;"	f
mcast_snooping_add_port	lib/mcast-snooping.c	/^mcast_snooping_add_port(struct ovs_list *list, void *port)$/;"	f	file:
mcast_snooping_add_report	lib/mcast-snooping.c	/^mcast_snooping_add_report(struct mcast_snooping *ms,$/;"	f
mcast_snooping_create	lib/mcast-snooping.c	/^mcast_snooping_create(void)$/;"	f
mcast_snooping_enable	lib/vswitch-idl.h	/^	bool mcast_snooping_enable;$/;"	m	struct:ovsrec_bridge
mcast_snooping_enabled	lib/mcast-snooping.c	/^mcast_snooping_enabled(const struct mcast_snooping *ms)$/;"	f
mcast_snooping_expired	lib/mcast-snooping.c	/^COVERAGE_DEFINE(mcast_snooping_expired);$/;"	v
mcast_snooping_flood_unreg	lib/mcast-snooping.c	/^mcast_snooping_flood_unreg(const struct mcast_snooping *ms)$/;"	f
mcast_snooping_flush	lib/mcast-snooping.c	/^mcast_snooping_flush(struct mcast_snooping *ms)$/;"	f
mcast_snooping_flush_group__	lib/mcast-snooping.c	/^mcast_snooping_flush_group__(struct mcast_snooping *ms,$/;"	f	file:
mcast_snooping_flush_mrouter	lib/mcast-snooping.c	/^mcast_snooping_flush_mrouter(struct mcast_mrouter_bundle *mrouter)$/;"	f	file:
mcast_snooping_flush_port	lib/mcast-snooping.c	/^mcast_snooping_flush_port(struct mcast_port_bundle *pbundle)$/;"	f	file:
mcast_snooping_is_membership	lib/mcast-snooping.c	/^mcast_snooping_is_membership(ovs_be16 igmp_type)$/;"	f
mcast_snooping_is_query	lib/mcast-snooping.c	/^mcast_snooping_is_query(ovs_be16 igmp_type)$/;"	f
mcast_snooping_learned	lib/mcast-snooping.c	/^COVERAGE_DEFINE(mcast_snooping_learned);$/;"	v
mcast_snooping_leave_group4	lib/mcast-snooping.c	/^mcast_snooping_leave_group4(struct mcast_snooping *ms, ovs_be32 ip4,$/;"	f
mcast_snooping_mdb_flush	lib/mcast-snooping.c	/^mcast_snooping_mdb_flush(struct mcast_snooping *ms)$/;"	f
mcast_snooping_port_get	lib/mcast-snooping.c	/^mcast_snooping_port_get(const struct ovs_list *list,$/;"	f	file:
mcast_snooping_port_lookup	lib/mcast-snooping.c	/^mcast_snooping_port_lookup(struct ovs_list *list, void *port)$/;"	f	file:
mcast_snooping_ref	lib/mcast-snooping.c	/^mcast_snooping_ref(const struct mcast_snooping *ms_)$/;"	f
mcast_snooping_run	lib/mcast-snooping.c	/^mcast_snooping_run(struct mcast_snooping *ms)$/;"	f
mcast_snooping_unref	lib/mcast-snooping.c	/^mcast_snooping_unref(struct mcast_snooping *ms)$/;"	f
mcast_snooping_wait	lib/mcast-snooping.c	/^mcast_snooping_wait(struct mcast_snooping *ms)$/;"	f
mcast_table_hash	lib/mcast-snooping.c	/^mcast_table_hash(const struct mcast_snooping *ms,$/;"	f	file:
mcgrp_offset	datapath/linux/compat/include/net/genetlink.h	/^	unsigned int            mcgrp_offset;   \/* private *\/$/;"	m	struct:rpl_genl_family
mcgrps	datapath/linux/compat/include/net/genetlink.h	/^	const struct genl_multicast_group *mcgrps; \/* private *\/$/;"	m	struct:rpl_genl_family	typeref:struct:rpl_genl_family::genl_multicast_group
mcheck	ofproto/ofproto.h	/^    bool mcheck;$/;"	m	struct:ofproto_port_rstp_settings
md	lib/dp-packet.h	/^    struct pkt_metadata md;$/;"	m	struct:dp_packet	typeref:struct:dp_packet::pkt_metadata
md5	utilities/bugtool/ovs-bugtool	/^import md5$/;"	i
md5sum	utilities/bugtool/ovs-bugtool	/^def md5sum(d):$/;"	f
me	utilities/ovs-l3ping	/^            me = (util.ip_from_cidr(args.client[1][0]), args.client[1][1],$/;"	v
me	utilities/ovs-test	/^                me = util.rpc_client(node1[0], node1[1])$/;"	v
meanSkipCount	tests/test-sflow.c	/^    uint32_t meanSkipCount;$/;"	m	struct:sflow_xdr	file:
megaflow_stats	lib/dpif-netlink.c	/^    const struct ovs_dp_megaflow_stats *megaflow_stats;$/;"	m	struct:dpif_netlink_dp	typeref:struct:dpif_netlink_dp::ovs_dp_megaflow_stats	file:
mem_max	lib/sflow.h	/^    uint64_t mem_max;$/;"	m	struct:_SFLAPPResources_counters
mem_used	datapath/linux/compat/stt.c	/^	unsigned int mem_used;$/;"	m	struct:first_frag	file:
mem_used	datapath/linux/stt.c	/^	unsigned int mem_used;$/;"	m	struct:first_frag	file:
mem_used	lib/sflow.h	/^    uint64_t mem_used;$/;"	m	struct:_SFLAPPResources_counters
member_name	lib/json.c	/^    char *member_name;$/;"	m	struct:json_parser	file:
members	ovsdb/ovsdb-idlc	/^        members = [key, value]$/;"	v
members	ovsdb/ovsdb-idlc	/^        members = [m]$/;"	v
memcpy_from_metadata	lib/tun-metadata.c	/^memcpy_from_metadata(void *dst, const struct tun_metadata *src,$/;"	f	file:
memcpy_to_metadata	lib/tun-metadata.c	/^memcpy_to_metadata(struct tun_metadata *dst, const void *src,$/;"	f	file:
memory	lib/memory.c	/^VLOG_DEFINE_THIS_MODULE(memory);$/;"	v
memory_init	lib/memory.c	/^memory_init(void)$/;"	f	file:
memory_order	lib/ovs-atomic-clang.h	/^} memory_order;$/;"	t	typeref:enum:__anon136
memory_order	lib/ovs-atomic-gcc4+.h	/^} memory_order;$/;"	t	typeref:enum:__anon138
memory_order	lib/ovs-atomic-gcc4.7+.h	/^} memory_order;$/;"	t	typeref:enum:__anon140
memory_order	lib/ovs-atomic-i586.h	/^} memory_order;$/;"	t	typeref:enum:__anon141
memory_order	lib/ovs-atomic-msvc.h	/^} memory_order;$/;"	t	typeref:enum:__anon142
memory_order	lib/ovs-atomic-pthreads.h	/^} memory_order;$/;"	t	typeref:enum:__anon143
memory_order	lib/ovs-atomic-x86_64.h	/^} memory_order;$/;"	t	typeref:enum:__anon145
memory_order_acq_rel	lib/ovs-atomic-clang.h	/^    memory_order_acq_rel = 4,$/;"	e	enum:__anon136
memory_order_acq_rel	lib/ovs-atomic-gcc4+.h	/^    memory_order_acq_rel,$/;"	e	enum:__anon138
memory_order_acq_rel	lib/ovs-atomic-gcc4.7+.h	/^    memory_order_acq_rel = __ATOMIC_ACQ_REL,$/;"	e	enum:__anon140
memory_order_acq_rel	lib/ovs-atomic-i586.h	/^    memory_order_acq_rel,$/;"	e	enum:__anon141
memory_order_acq_rel	lib/ovs-atomic-msvc.h	/^    memory_order_acq_rel,$/;"	e	enum:__anon142
memory_order_acq_rel	lib/ovs-atomic-pthreads.h	/^    memory_order_acq_rel,$/;"	e	enum:__anon143
memory_order_acq_rel	lib/ovs-atomic-x86_64.h	/^    memory_order_acq_rel,$/;"	e	enum:__anon145
memory_order_acquire	lib/ovs-atomic-clang.h	/^    memory_order_acquire = 2,$/;"	e	enum:__anon136
memory_order_acquire	lib/ovs-atomic-gcc4+.h	/^    memory_order_acquire,$/;"	e	enum:__anon138
memory_order_acquire	lib/ovs-atomic-gcc4.7+.h	/^    memory_order_acquire = __ATOMIC_ACQUIRE,$/;"	e	enum:__anon140
memory_order_acquire	lib/ovs-atomic-i586.h	/^    memory_order_acquire,$/;"	e	enum:__anon141
memory_order_acquire	lib/ovs-atomic-msvc.h	/^    memory_order_acquire,$/;"	e	enum:__anon142
memory_order_acquire	lib/ovs-atomic-pthreads.h	/^    memory_order_acquire,$/;"	e	enum:__anon143
memory_order_acquire	lib/ovs-atomic-x86_64.h	/^    memory_order_acquire,$/;"	e	enum:__anon145
memory_order_consume	lib/ovs-atomic-clang.h	/^    memory_order_consume = 1,$/;"	e	enum:__anon136
memory_order_consume	lib/ovs-atomic-gcc4+.h	/^    memory_order_consume,$/;"	e	enum:__anon138
memory_order_consume	lib/ovs-atomic-gcc4.7+.h	/^    memory_order_consume = __ATOMIC_CONSUME,$/;"	e	enum:__anon140
memory_order_consume	lib/ovs-atomic-i586.h	/^    memory_order_consume,$/;"	e	enum:__anon141
memory_order_consume	lib/ovs-atomic-msvc.h	/^    memory_order_consume,$/;"	e	enum:__anon142
memory_order_consume	lib/ovs-atomic-pthreads.h	/^    memory_order_consume,$/;"	e	enum:__anon143
memory_order_consume	lib/ovs-atomic-x86_64.h	/^    memory_order_consume,$/;"	e	enum:__anon145
memory_order_relaxed	lib/ovs-atomic-clang.h	/^    memory_order_relaxed = 0,$/;"	e	enum:__anon136
memory_order_relaxed	lib/ovs-atomic-gcc4+.h	/^    memory_order_relaxed,$/;"	e	enum:__anon138
memory_order_relaxed	lib/ovs-atomic-gcc4.7+.h	/^    memory_order_relaxed = __ATOMIC_RELAXED,$/;"	e	enum:__anon140
memory_order_relaxed	lib/ovs-atomic-i586.h	/^    memory_order_relaxed,$/;"	e	enum:__anon141
memory_order_relaxed	lib/ovs-atomic-msvc.h	/^    memory_order_relaxed,$/;"	e	enum:__anon142
memory_order_relaxed	lib/ovs-atomic-pthreads.h	/^    memory_order_relaxed,$/;"	e	enum:__anon143
memory_order_relaxed	lib/ovs-atomic-x86_64.h	/^    memory_order_relaxed,$/;"	e	enum:__anon145
memory_order_release	lib/ovs-atomic-clang.h	/^    memory_order_release = 3,$/;"	e	enum:__anon136
memory_order_release	lib/ovs-atomic-gcc4+.h	/^    memory_order_release,$/;"	e	enum:__anon138
memory_order_release	lib/ovs-atomic-gcc4.7+.h	/^    memory_order_release = __ATOMIC_RELEASE,$/;"	e	enum:__anon140
memory_order_release	lib/ovs-atomic-i586.h	/^    memory_order_release,$/;"	e	enum:__anon141
memory_order_release	lib/ovs-atomic-msvc.h	/^    memory_order_release,$/;"	e	enum:__anon142
memory_order_release	lib/ovs-atomic-pthreads.h	/^    memory_order_release,$/;"	e	enum:__anon143
memory_order_release	lib/ovs-atomic-x86_64.h	/^    memory_order_release,$/;"	e	enum:__anon145
memory_order_seq_cst	lib/ovs-atomic-clang.h	/^    memory_order_seq_cst = 5$/;"	e	enum:__anon136
memory_order_seq_cst	lib/ovs-atomic-gcc4+.h	/^    memory_order_seq_cst$/;"	e	enum:__anon138
memory_order_seq_cst	lib/ovs-atomic-gcc4.7+.h	/^    memory_order_seq_cst = __ATOMIC_SEQ_CST$/;"	e	enum:__anon140
memory_order_seq_cst	lib/ovs-atomic-i586.h	/^    memory_order_seq_cst$/;"	e	enum:__anon141
memory_order_seq_cst	lib/ovs-atomic-msvc.h	/^    memory_order_seq_cst$/;"	e	enum:__anon142
memory_order_seq_cst	lib/ovs-atomic-pthreads.h	/^    memory_order_seq_cst$/;"	e	enum:__anon143
memory_order_seq_cst	lib/ovs-atomic-x86_64.h	/^    memory_order_seq_cst$/;"	e	enum:__anon145
memory_report	lib/memory.c	/^memory_report(const struct simap *usage)$/;"	f
memory_run	lib/memory.c	/^memory_run(void)$/;"	f
memory_should_report	lib/memory.c	/^memory_should_report(void)$/;"	f
memory_unixctl_show	lib/memory.c	/^memory_unixctl_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
memory_wait	lib/memory.c	/^memory_wait(void)$/;"	f
message_age	lib/rstp-common.h	/^    uint16_t message_age;$/;"	m	struct:rstp_times
message_age_timer	lib/stp.c	/^    struct stp_timer message_age_timer; \/* 8.5.6.1: Age of received info. *\/$/;"	m	struct:stp_port	typeref:struct:stp_port::stp_timer	file:
meta_flow	lib/meta-flow.c	/^VLOG_DEFINE_THIS_MODULE(meta_flow);$/;"	v
metadata	include/openflow/openflow-1.1.h	/^    ovs_be64 metadata;          \/* Metadata value to write *\/$/;"	m	struct:ofp11_instruction_write_metadata
metadata	include/openflow/openflow-1.1.h	/^    ovs_be64 metadata;         \/* Metadata passed between tables. *\/$/;"	m	struct:ofp11_match
metadata	lib/flow.h	/^    ovs_be64 metadata;          \/* OpenFlow Metadata. *\/$/;"	m	struct:flow
metadata	lib/ofp-actions.c	/^    ovs_be64 metadata;              \/* Metadata register. *\/$/;"	m	struct:nx_action_write_metadata	file:
metadata	lib/ofp-actions.h	/^    ovs_be64 metadata;$/;"	m	struct:ofpact_metadata
metadata	lib/packets.h	/^    struct tun_metadata metadata;$/;"	m	struct:flow_tnl	typeref:struct:flow_tnl::tun_metadata
metadata	ofproto/ofproto-dpif-rid.h	/^    ovs_be64 metadata;            \/* OpenFlow Metadata. *\/$/;"	m	struct:recirc_metadata
metadata	ofproto/ofproto-dpif-rid.h	/^    struct recirc_metadata metadata; \/* Flow metadata. *\/$/;"	m	struct:recirc_state	typeref:struct:recirc_state::recirc_metadata
metadata_from_nlattrs	datapath/flow_netlink.c	/^static int metadata_from_nlattrs(struct sw_flow_match *match,  u64 *attrs,$/;"	f	file:
metadata_from_nlattrs	datapath/linux/flow_netlink.c	/^static int metadata_from_nlattrs(struct sw_flow_match *match,  u64 *attrs,$/;"	f	file:
metadata_loc_from_match	lib/tun-metadata.c	/^metadata_loc_from_match(struct tun_table *map, struct match *match,$/;"	f	file:
metadata_loc_from_match_read	lib/tun-metadata.c	/^metadata_loc_from_match_read(struct tun_table *map, const struct match *match,$/;"	f	file:
metadata_map	ofproto/ofproto-dpif-rid.c	/^static struct cmap metadata_map;$/;"	v	typeref:struct:cmap	file:
metadata_mask	include/openflow/openflow-1.1.h	/^    ovs_be64 metadata_mask;     \/* Metadata write bitmask *\/$/;"	m	struct:ofp11_instruction_write_metadata
metadata_mask	include/openflow/openflow-1.1.h	/^    ovs_be64 metadata_mask;    \/* Mask for metadata. *\/$/;"	m	struct:ofp11_match
metadata_match	include/openflow/openflow-1.2.h	/^    ovs_be64 metadata_match; \/* Bits of metadata table can match. *\/$/;"	m	struct:ofp12_table_stats
metadata_match	include/openflow/openflow-1.3.h	/^    ovs_be64 metadata_match;  \/* Bits of metadata table can match. *\/$/;"	m	struct:ofp13_table_features
metadata_match	lib/ofp-util.h	/^    ovs_be64 metadata_match;  \/* Bits of metadata table can match. *\/$/;"	m	struct:ofputil_table_features
metadata_node	ofproto/ofproto-dpif-rid.h	/^    struct cmap_node metadata_node;$/;"	m	struct:recirc_id_node	typeref:struct:recirc_id_node::cmap_node
metadata_values	tests/test-classifier.c	/^static ovs_be64 metadata_values[] = {$/;"	v	file:
metadata_write	include/openflow/openflow-1.2.h	/^    ovs_be64 metadata_write; \/* Bits of metadata table can write. *\/$/;"	m	struct:ofp12_table_stats
metadata_write	include/openflow/openflow-1.3.h	/^    ovs_be64 metadata_write;  \/* Bits of metadata table can write. *\/$/;"	m	struct:ofp13_table_features
metadata_write	lib/ofp-util.h	/^    ovs_be64 metadata_write;  \/* Bits of metadata table can write. *\/$/;"	m	struct:ofputil_table_features
meter	lib/ofp-util.h	/^    struct ofputil_meter_config meter;$/;"	m	struct:ofputil_meter_mod	typeref:struct:ofputil_meter_mod::ofputil_meter_config
meter	ofproto/ofproto.c	/^struct meter {$/;"	s	file:
meter_create	ofproto/ofproto.c	/^meter_create(const struct ofputil_meter_config *config,$/;"	f	file:
meter_del	ofproto/ofproto-provider.h	/^    void (*meter_del)(struct ofproto *, ofproto_meter_id);$/;"	m	struct:ofproto_class
meter_features	ofproto/ofproto-provider.h	/^    struct ofputil_meter_features meter_features;$/;"	m	struct:ofproto	typeref:struct:ofproto::ofputil_meter_features
meter_get	ofproto/ofproto-provider.h	/^    enum ofperr (*meter_get)(const struct ofproto *ofproto,$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::meter_get
meter_get_features	ofproto/ofproto-provider.h	/^    void (*meter_get_features)(const struct ofproto *ofproto,$/;"	m	struct:ofproto_class
meter_id	include/openflow/openflow-1.3.h	/^    ovs_be32          meter_id;     \/* Meter instance. *\/$/;"	m	struct:ofp13_meter_config
meter_id	include/openflow/openflow-1.3.h	/^    ovs_be32          meter_id;     \/* Meter instance. *\/$/;"	m	struct:ofp13_meter_mod
meter_id	include/openflow/openflow-1.3.h	/^    ovs_be32  meter_id;          \/* Meter instance. *\/$/;"	m	struct:ofp13_meter_stats
meter_id	include/openflow/openflow-1.3.h	/^    ovs_be32 meter_id;          \/* Meter instance. *\/$/;"	m	struct:ofp13_instruction_meter
meter_id	include/openflow/openflow-1.3.h	/^    ovs_be32 meter_id;  \/* Meter instance, or OFPM_ALL. *\/$/;"	m	struct:ofp13_meter_multipart_request
meter_id	lib/ofp-actions.h	/^    uint32_t meter_id;$/;"	m	struct:ofpact_meter
meter_id	lib/ofp-util.h	/^    uint32_t meter_id;$/;"	m	struct:ofputil_meter_config
meter_id	lib/ofp-util.h	/^    uint32_t meter_id;$/;"	m	struct:ofputil_meter_stats
meter_insert_rule	ofproto/ofproto.c	/^meter_insert_rule(struct rule *rule)$/;"	f	file:
meter_mod	lib/ofp-util.h	/^            struct ofputil_meter_mod *meter_mod;$/;"	m	struct:ofputil_requestforward::__anon134::__anon135	typeref:struct:ofputil_requestforward::__anon134::__anon135::ofputil_meter_mod
meter_set	ofproto/ofproto-provider.h	/^    enum ofperr (*meter_set)(struct ofproto *ofproto, ofproto_meter_id *id,$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::meter_set
meter_update	ofproto/ofproto.c	/^meter_update(struct meter *meter, const struct ofputil_meter_config *config)$/;"	f	file:
meters	ofproto/ofproto-provider.h	/^    struct meter **meters; \/* 'meter_features.max_meter' + 1 pointers. *\/$/;"	m	struct:ofproto	typeref:struct:ofproto::meter
method	lib/jsonrpc.h	/^    char *method;               \/* Request or notification only. *\/$/;"	m	struct:jsonrpc_msg
mf	lib/dpif-netdev.c	/^    struct miniflow mf;$/;"	m	struct:netdev_flow_key	typeref:struct:netdev_flow_key::miniflow	file:
mf	lib/ofp-util.c	/^    enum mf_field_id mf;$/;"	m	struct:ofp10_wc_map	typeref:enum:ofp10_wc_map::mf_field_id	file:
mf	lib/ofp-util.c	/^    enum mf_field_id mf;$/;"	m	struct:ofp11_wc_map	typeref:enum:ofp11_wc_map::mf_field_id	file:
mf_are_prereqs_ok	lib/meta-flow.c	/^mf_are_prereqs_ok(const struct mf_field *mf, const struct flow *flow)$/;"	f
mf_bitmap	lib/meta-flow.h	/^struct mf_bitmap {$/;"	s
mf_bitmap_from_of10	lib/ofp-util.c	/^mf_bitmap_from_of10(ovs_be32 wc10_)$/;"	f	file:
mf_bitmap_from_of11	lib/ofp-util.c	/^mf_bitmap_from_of11(ovs_be32 wc11_)$/;"	f	file:
mf_bitmap_set_field_and_prereqs	lib/meta-flow.c	/^mf_bitmap_set_field_and_prereqs(const struct mf_field *mf, struct mf_bitmap *bm)$/;"	f
mf_bitmap_to_of10	lib/ofp-util.c	/^mf_bitmap_to_of10(const struct mf_bitmap *fields)$/;"	f	file:
mf_bitmap_to_of11	lib/ofp-util.c	/^mf_bitmap_to_of11(const struct mf_bitmap *fields)$/;"	f	file:
mf_by_name	lib/meta-flow.c	/^static struct shash mf_by_name;$/;"	v	typeref:struct:shash	file:
mf_check__	lib/meta-flow.c	/^mf_check__(const struct mf_subfield *sf, const struct flow *flow,$/;"	f	file:
mf_check_dst	lib/meta-flow.c	/^mf_check_dst(const struct mf_subfield *sf, const struct flow *flow)$/;"	f
mf_check_src	lib/meta-flow.c	/^mf_check_src(const struct mf_subfield *sf, const struct flow *flow)$/;"	f
mf_ctx	lib/flow.c	/^struct mf_ctx {$/;"	s	file:
mf_field	lib/meta-flow.h	/^struct mf_field {$/;"	s
mf_field_id	lib/meta-flow.h	/^enum OVS_PACKED_ENUM mf_field_id {$/;"	g
mf_field_len	lib/meta-flow.c	/^mf_field_len(const struct mf_field *mf, const union mf_value *value,$/;"	f
mf_fields	lib/meta-flow.c	/^const struct mf_field mf_fields[MFF_N_IDS] = {$/;"	v	typeref:struct:mf_field
mf_format	lib/meta-flow.c	/^mf_format(const struct mf_field *mf,$/;"	f
mf_format_ct_state_string	lib/meta-flow.c	/^mf_format_ct_state_string(ovs_be32 value, ovs_be32 mask, struct ds *s)$/;"	f	file:
mf_format_frag_string	lib/meta-flow.c	/^mf_format_frag_string(uint8_t value, uint8_t mask, struct ds *s)$/;"	f	file:
mf_format_integer_string	lib/meta-flow.c	/^mf_format_integer_string(const struct mf_field *mf, const uint8_t *valuep,$/;"	f	file:
mf_format_subfield	lib/nx-match.c	/^mf_format_subfield(const struct mf_subfield *sf, struct ds *s)$/;"	f
mf_format_subvalue	lib/meta-flow.c	/^mf_format_subvalue(const union mf_subvalue *subvalue, struct ds *s)$/;"	f
mf_format_tcp_flags_string	lib/meta-flow.c	/^mf_format_tcp_flags_string(ovs_be16 value, ovs_be16 mask, struct ds *s)$/;"	f	file:
mf_format_tnl_flags_string	lib/meta-flow.c	/^mf_format_tnl_flags_string(ovs_be16 value, ovs_be16 mask, struct ds *s)$/;"	f	file:
mf_from_ct_state_string	lib/meta-flow.c	/^mf_from_ct_state_string(const char *s, ovs_be32 *flagsp, ovs_be32 *maskp)$/;"	f	file:
mf_from_ethernet_string	lib/meta-flow.c	/^mf_from_ethernet_string(const struct mf_field *mf, const char *s,$/;"	f	file:
mf_from_frag_string	lib/meta-flow.c	/^mf_from_frag_string(const char *s, uint8_t *valuep, uint8_t *maskp)$/;"	f	file:
mf_from_id	lib/meta-flow.h	/^mf_from_id(enum mf_field_id id)$/;"	f
mf_from_integer_string	lib/meta-flow.c	/^mf_from_integer_string(const struct mf_field *mf, const char *s,$/;"	f	file:
mf_from_ipv4_string	lib/meta-flow.c	/^mf_from_ipv4_string(const struct mf_field *mf, const char *s,$/;"	f	file:
mf_from_ipv6_string	lib/meta-flow.c	/^mf_from_ipv6_string(const struct mf_field *mf, const char *s,$/;"	f	file:
mf_from_name	lib/meta-flow.c	/^mf_from_name(const char *name)$/;"	f
mf_from_nxm_header	lib/nx-match.c	/^mf_from_nxm_header(uint32_t header)$/;"	f
mf_from_ofp_port_string	lib/meta-flow.c	/^mf_from_ofp_port_string(const struct mf_field *mf, const char *s,$/;"	f	file:
mf_from_ofp_port_string32	lib/meta-flow.c	/^mf_from_ofp_port_string32(const struct mf_field *mf, const char *s,$/;"	f	file:
mf_from_oxm_header	lib/nx-match.c	/^mf_from_oxm_header(uint64_t header)$/;"	f	file:
mf_from_tcp_flags_string	lib/meta-flow.c	/^mf_from_tcp_flags_string(const char *s, ovs_be16 *flagsp, ovs_be16 *maskp)$/;"	f	file:
mf_from_tun_flags_string	lib/meta-flow.c	/^mf_from_tun_flags_string(const char *s, ovs_be16 *flagsp, ovs_be16 *maskp)$/;"	f	file:
mf_get	lib/meta-flow.c	/^mf_get(const struct mf_field *mf, const struct match *match,$/;"	f
mf_get_mask	lib/meta-flow.c	/^mf_get_mask(const struct mf_field *mf, const struct flow_wildcards *wc,$/;"	f
mf_get_subfield	lib/meta-flow.c	/^mf_get_subfield(const struct mf_subfield *sf, const struct flow *flow)$/;"	f
mf_get_value	lib/meta-flow.c	/^mf_get_value(const struct mf_field *mf, const struct flow *flow,$/;"	f
mf_is_all_wild	lib/meta-flow.c	/^mf_is_all_wild(const struct mf_field *mf, const struct flow_wildcards *wc)$/;"	f
mf_is_l3_or_higher	lib/meta-flow.h	/^mf_is_l3_or_higher(const struct mf_field *mf)$/;"	f
mf_is_mask_valid	lib/meta-flow.c	/^mf_is_mask_valid(const struct mf_field *mf, const union mf_value *mask)$/;"	f
mf_is_set	lib/meta-flow.c	/^mf_is_set(const struct mf_field *mf, const struct flow *flow)$/;"	f
mf_is_tun_metadata	lib/meta-flow.c	/^mf_is_tun_metadata(const struct mf_field *mf)$/;"	f
mf_is_value_valid	lib/meta-flow.c	/^mf_is_value_valid(const struct mf_field *mf, const union mf_value *value)$/;"	f
mf_mask_field	lib/meta-flow.c	/^mf_mask_field(const struct mf_field *mf, struct flow *mask)$/;"	f
mf_mask_field_and_prereqs	lib/meta-flow.c	/^mf_mask_field_and_prereqs(const struct mf_field *mf, struct flow_wildcards *wc)$/;"	f
mf_mask_subfield	lib/meta-flow.c	/^mf_mask_subfield(const struct mf_field *field,$/;"	f
mf_maskable	lib/meta-flow.h	/^enum OVS_PACKED_ENUM mf_maskable {$/;"	g
mf_node	lib/nx-match.c	/^    struct ovs_list mf_node;      \/* In mf_mf_map[nf.id]. *\/$/;"	m	struct:nxm_field_index	typeref:struct:nxm_field_index::ovs_list	file:
mf_nxm_header	lib/nx-match.c	/^mf_nxm_header(enum mf_field_id id)$/;"	f
mf_oxm_header	lib/nx-match.c	/^mf_oxm_header(enum mf_field_id id, enum ofp_version version)$/;"	f	file:
mf_parse	lib/meta-flow.c	/^mf_parse(const struct mf_field *mf, const char *s,$/;"	f
mf_parse_subfield	lib/nx-match.c	/^mf_parse_subfield(struct mf_subfield *sf, const char *s)$/;"	f
mf_parse_subfield__	lib/nx-match.c	/^mf_parse_subfield__(struct mf_subfield *sf, const char **sp)$/;"	f
mf_parse_subfield_name	lib/nx-match.c	/^mf_parse_subfield_name(const char *name, int name_len, bool *wild)$/;"	f	file:
mf_parse_value	lib/meta-flow.c	/^mf_parse_value(const struct mf_field *mf, const char *s, union mf_value *value)$/;"	f
mf_prereqs	lib/meta-flow.h	/^enum OVS_PACKED_ENUM mf_prereqs {$/;"	g
mf_read_subfield	lib/meta-flow.c	/^mf_read_subfield(const struct mf_subfield *sf, const struct flow *flow,$/;"	f
mf_set	lib/meta-flow.c	/^mf_set(const struct mf_field *mf,$/;"	f
mf_set_flow_value	lib/meta-flow.c	/^mf_set_flow_value(const struct mf_field *mf,$/;"	f
mf_set_flow_value_masked	lib/meta-flow.c	/^mf_set_flow_value_masked(const struct mf_field *field,$/;"	f
mf_set_value	lib/meta-flow.c	/^mf_set_value(const struct mf_field *mf,$/;"	f
mf_set_wild	lib/meta-flow.c	/^mf_set_wild(const struct mf_field *mf, struct match *match, char **err_str)$/;"	f
mf_string	lib/meta-flow.h	/^enum OVS_PACKED_ENUM mf_string {$/;"	g
mf_subfield	lib/meta-flow.h	/^struct mf_subfield {$/;"	s
mf_subfield_from_expr_field	ovn/lib/expr.c	/^mf_subfield_from_expr_field(const struct expr_field *f, struct mf_subfield *sf)$/;"	f	file:
mf_subvalue	lib/meta-flow.h	/^union mf_subvalue {$/;"	u
mf_subvalue_intersect	lib/meta-flow.c	/^mf_subvalue_intersect(const union mf_subvalue *a_value,$/;"	f
mf_subvalue_shift	lib/meta-flow.c	/^mf_subvalue_shift(union mf_subvalue *value, int n)$/;"	f
mf_subvalue_width	lib/meta-flow.c	/^mf_subvalue_width(const union mf_subvalue *v)$/;"	f
mf_value	lib/meta-flow.h	/^union mf_value {$/;"	u
mf_write_subfield	lib/meta-flow.c	/^mf_write_subfield(const struct mf_subfield *sf, const union mf_subvalue *x,$/;"	f
mf_write_subfield_flow	lib/meta-flow.c	/^mf_write_subfield_flow(const struct mf_subfield *sf,$/;"	f
mff_ovn_geneve	ovn/controller/ofctrl.c	/^static enum mf_field_id mff_ovn_geneve;$/;"	v	typeref:enum:mf_field_id	file:
mfr_desc	include/openflow/openflow-common.h	/^    char mfr_desc[DESC_STR_LEN];       \/* Manufacturer description. *\/$/;"	m	struct:ofp_desc_stats
mfr_desc	ofproto/ofproto-provider.h	/^    char *mfr_desc;             \/* Manufacturer (NULL for default). *\/$/;"	m	struct:ofproto
mgmt_vlan	lib/lldp/aa-structs.h	/^    uint16_t                         mgmt_vlan;$/;"	m	struct:lldpd_aa_element_tlv
mhash_add	lib/hash.h	/^static inline uint32_t mhash_add(uint32_t hash, uint32_t data)$/;"	f
mhash_add__	lib/hash.h	/^static inline uint32_t mhash_add__(uint32_t hash, uint32_t data)$/;"	f
mhash_finish	lib/hash.h	/^static inline uint32_t mhash_finish(uint32_t hash)$/;"	f
miimon	lib/netdev-linux.c	/^    bool miimon;                    \/* Link status of last poll. *\/$/;"	m	struct:netdev_linux	file:
miimon_cnt	lib/netdev-linux.c	/^static atomic_count miimon_cnt = ATOMIC_COUNT_INIT(0);$/;"	v	file:
miimon_interval	lib/netdev-linux.c	/^    long long int miimon_interval;  \/* Miimon Poll rate. Disabled if <= 0. *\/$/;"	m	struct:netdev_linux	file:
miimon_timer	lib/netdev-linux.c	/^    struct timer miimon_timer;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::timer	file:
min	lib/coverage.h	/^    unsigned int min[MIN_AVG_LEN];$/;"	m	struct:coverage_counter
min	lib/ovsdb-types.h	/^            double min;         \/* minReal or -DBL_MAX. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_real_constraints
min	lib/ovsdb-types.h	/^            int64_t min;        \/* minInteger or INT64_MIN. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_integer_constraints
minLen	datapath-windows/ovsext/Netlink/Netlink.h	/^    UINT32 minLen;$/;"	m	struct:_NL_POLICY
minLen	lib/ovsdb-types.h	/^            unsigned int minLen; \/* minLength or 0. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_string_constraints
min_args	lib/command-line.h	/^    int min_args;$/;"	m	struct:ovs_cmdl_command
min_args	lib/db-ctl-base.h	/^    int min_args;               \/* Min number of arguments following name. *\/$/;"	m	struct:ctl_command_syntax
min_args	lib/dpctl.c	/^    int min_args;$/;"	m	struct:dpctl_command	file:
min_args	lib/unixctl.c	/^    int min_args, max_args;$/;"	m	struct:unixctl_command	file:
min_args	ovsdb/ovsdb-client.c	/^    int min_args;$/;"	m	struct:ovsdb_client_command	file:
min_attr_len	lib/netlink.c	/^min_attr_len(enum nl_attr_type type)$/;"	f	file:
min_backoff	lib/reconnect.c	/^    int min_backoff;$/;"	m	struct:reconnect	file:
min_body	lib/ofp-msgs.c	/^    unsigned int min_body;$/;"	m	struct:raw_info	file:
min_len	lib/netlink.h	/^    size_t min_len, max_len;$/;"	m	struct:nl_policy
min_length	lib/ofp-actions.c	/^    unsigned short int min_length;$/;"	m	struct:ofpact_raw_instance	file:
min_level	include/openvswitch/vlog.h	/^    int min_level;                \/* Minimum log level for any destination. *\/$/;"	m	struct:vlog_module
min_mtu	ofproto/ofproto-provider.h	/^    int min_mtu;                    \/* Current MTU of non-internal ports. *\/$/;"	m	struct:ofproto
min_n	lib/cmap.c	/^    unsigned int min_n;         \/* Min elements before shrinking. *\/$/;"	m	struct:cmap_impl	file:
min_n_clauses	lib/classifier.c	/^    unsigned int min_n_clauses; \/* Smallest 'n' among elements of 'conj'. *\/$/;"	m	struct:cls_conjunction_set	file:
min_rate	lib/netdev-linux.c	/^    uint32_t min_rate;$/;"	m	struct:hfsc_class	file:
min_rate	lib/netdev-linux.c	/^    unsigned int min_rate;      \/* In bytes\/s. *\/$/;"	m	struct:htb_class	file:
min_rate	lib/ofp-util.h	/^    uint16_t min_rate;$/;"	m	struct:ofputil_queue_config
min_rx	lib/bfd.c	/^    long long int min_rx;         \/* bfd.RequiredMinRxInterval. *\/$/;"	m	struct:bfd	file:
min_rx	lib/bfd.c	/^    ovs_be32 min_rx;      \/* Required minimum rx interval. *\/$/;"	m	struct:msg	file:
min_rx_echo	lib/bfd.c	/^    ovs_be32 min_rx_echo; \/* Required minimum echo rx interval. *\/$/;"	m	struct:msg	file:
min_tx	lib/bfd.c	/^    long long int min_tx;         \/* bfd.DesiredMinTxInterval. *\/$/;"	m	struct:bfd	file:
min_tx	lib/bfd.c	/^    ovs_be32 min_tx;      \/* Desired minimum tx interval. *\/$/;"	m	struct:msg	file:
min_version	lib/ofp-msgs.c	/^    uint8_t min_version;$/;"	m	struct:raw_info	file:
min_version	lib/ofp-util.c	/^    enum ofp_version min_version, max_version;$/;"	m	struct:ofputil_flow_mod_flag	typeref:enum:ofputil_flow_mod_flag::ofp_version	file:
minidom	build-aux/xml2nroff	/^import xml.dom.minidom$/;"	i
minidom	ovsdb/ovsdb-doc	/^import xml.dom.minidom$/;"	i
miniflow_alloc	lib/flow.c	/^miniflow_alloc(struct miniflow *dsts[], size_t n, const struct miniflow *src)$/;"	f
miniflow_and_mask_matches_flow	lib/classifier.c	/^miniflow_and_mask_matches_flow(const struct miniflow *flow,$/;"	f	file:
miniflow_and_mask_matches_flow_wc	lib/classifier.c	/^miniflow_and_mask_matches_flow_wc(const struct miniflow *flow,$/;"	f	file:
miniflow_assert_in_map	lib/flow.c	151;"	d	file:
miniflow_clone	lib/flow.c	/^miniflow_clone(struct miniflow *dst, const struct miniflow *src,$/;"	f
miniflow_clone__	tests/test-classifier.c	/^miniflow_clone__(const struct miniflow *src)$/;"	f	file:
miniflow_create	lib/flow.c	/^miniflow_create(const struct flow *src)$/;"	f
miniflow_equal	lib/flow.c	/^miniflow_equal(const struct miniflow *a, const struct miniflow *b)$/;"	f
miniflow_equal_flow_in_minimask	lib/flow.c	/^miniflow_equal_flow_in_minimask(const struct miniflow *a, const struct flow *b,$/;"	f
miniflow_equal_in_minimask	lib/flow.c	/^miniflow_equal_in_minimask(const struct miniflow *a, const struct miniflow *b,$/;"	f
miniflow_expand	lib/flow.c	/^miniflow_expand(const struct miniflow *src, struct flow *dst)$/;"	f
miniflow_extract	lib/flow.c	/^miniflow_extract(struct dp_packet *packet, struct miniflow *dst)$/;"	f
miniflow_get_map_in_range	lib/classifier.c	/^miniflow_get_map_in_range(const struct miniflow *miniflow, uint8_t start,$/;"	f	file:
miniflow_hash_5tuple	lib/flow.c	/^miniflow_hash_5tuple(const struct miniflow *flow, uint32_t basis)$/;"	f
miniflow_hash__	tests/test-classifier.c	/^miniflow_hash__(const struct miniflow *flow, uint32_t basis)$/;"	f	file:
miniflow_hash_in_minimask	lib/classifier-private.h	/^miniflow_hash_in_minimask(const struct miniflow *flow,$/;"	f
miniflow_init	lib/flow.c	/^miniflow_init(struct miniflow *dst, const struct flow *src)$/;"	f
miniflow_malloc	lib/flow.c	/^COVERAGE_DEFINE(miniflow_malloc);$/;"	v
miniflow_map_init	lib/flow.c	/^miniflow_map_init(struct miniflow *flow, const struct flow *src)$/;"	f
miniflow_pad_to_64	lib/flow.c	265;"	d	file:
miniflow_pad_to_64_	lib/flow.c	202;"	d	file:
miniflow_push_be16	lib/flow.c	262;"	d	file:
miniflow_push_be16_	lib/flow.c	211;"	d	file:
miniflow_push_be32	lib/flow.c	256;"	d	file:
miniflow_push_be32_	lib/flow.c	179;"	d	file:
miniflow_push_be64_	lib/flow.c	162;"	d	file:
miniflow_push_macs	lib/flow.c	274;"	d	file:
miniflow_push_macs_	lib/flow.c	246;"	d	file:
miniflow_push_uint16	lib/flow.c	259;"	d	file:
miniflow_push_uint16_	lib/flow.c	182;"	d	file:
miniflow_push_uint32	lib/flow.c	253;"	d	file:
miniflow_push_uint32_	lib/flow.c	165;"	d	file:
miniflow_push_uint64_	lib/flow.c	155;"	d	file:
miniflow_push_words	lib/flow.c	268;"	d	file:
miniflow_push_words_	lib/flow.c	225;"	d	file:
miniflow_push_words_32	lib/flow.c	271;"	d	file:
miniflow_push_words_32_	lib/flow.c	234;"	d	file:
miniflow_set_map	lib/flow.c	145;"	d	file:
miniflow_set_maps	lib/flow.c	214;"	d	file:
minimask_combine	lib/flow.c	/^minimask_combine(struct minimask *dst_,$/;"	f
minimask_create	lib/flow.c	/^minimask_create(const struct flow_wildcards *wc)$/;"	f
minimask_equal	lib/flow.c	/^minimask_equal(const struct minimask *a, const struct minimask *b)$/;"	f
minimask_expand	lib/flow.c	/^minimask_expand(const struct minimask *mask, struct flow_wildcards *wc)$/;"	f
minimask_get_prefix_len	lib/classifier.c	/^minimask_get_prefix_len(const struct minimask *minimask,$/;"	f	file:
minimask_has_extra	lib/flow.c	/^minimask_has_extra(const struct minimask *a, const struct minimask *b)$/;"	f
minimask_hash	lib/classifier-private.h	/^minimask_hash(const struct minimask *mask, uint32_t basis)$/;"	f
minimask_init	lib/flow.c	/^minimask_init(struct minimask *mask, const struct flow_wildcards *wc)$/;"	f
minimatch	lib/match.h	/^struct minimatch {$/;"	s
minimatch_clone	lib/match.c	/^minimatch_clone(struct minimatch *dst, const struct minimatch *src)$/;"	f
minimatch_destroy	lib/match.c	/^minimatch_destroy(struct minimatch *match)$/;"	f
minimatch_equal	lib/match.c	/^minimatch_equal(const struct minimatch *a, const struct minimatch *b)$/;"	f
minimatch_expand	lib/match.c	/^minimatch_expand(const struct minimatch *src, struct match *dst)$/;"	f
minimatch_format	lib/match.c	/^minimatch_format(const struct minimatch *match, struct ds *s, int priority)$/;"	f
minimatch_get_ports	lib/classifier.c	/^static inline ovs_be32 minimatch_get_ports(const struct minimatch *match)$/;"	f	file:
minimatch_get_prefix	lib/classifier.c	/^minimatch_get_prefix(const struct minimatch *match, const struct mf_field *mf)$/;"	f	file:
minimatch_hash_range	lib/classifier-private.h	/^minimatch_hash_range(const struct minimatch *match,$/;"	f
minimatch_init	lib/match.c	/^minimatch_init(struct minimatch *dst, const struct match *src)$/;"	f
minimatch_matches_flow	lib/match.c	/^minimatch_matches_flow(const struct minimatch *match,$/;"	f
minimatch_move	lib/match.c	/^minimatch_move(struct minimatch *dst, struct minimatch *src)$/;"	f
minimatch_to_string	lib/match.c	/^minimatch_to_string(const struct minimatch *match, int priority)$/;"	f
minimum_ip_total_length	ofproto/ofproto-dpif-ipfix.c	/^    uint16_t minimum_ip_total_length;  \/* 0 if not IP. *\/$/;"	m	struct:ipfix_flow_cache_entry	file:
mirror	ofproto/ofproto-dpif-mirror.c	/^struct mirror {$/;"	s	file:
mirror	ofproto/ofproto-dpif-xlate.c	/^        } mirror;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon191	file:
mirror	vswitchd/bridge.c	/^struct mirror {$/;"	s	file:
mirror_bundle_dst	ofproto/ofproto-dpif-mirror.c	/^mirror_bundle_dst(struct mbridge *mbridge, struct ofbundle *ofbundle)$/;"	f
mirror_bundle_out	ofproto/ofproto-dpif-mirror.c	/^mirror_bundle_out(struct mbridge *mbridge, struct ofbundle *ofbundle)$/;"	f
mirror_bundle_src	ofproto/ofproto-dpif-mirror.c	/^mirror_bundle_src(struct mbridge *mbridge, struct ofbundle *ofbundle)$/;"	f
mirror_collect_ports	vswitchd/bridge.c	/^mirror_collect_ports(struct mirror *m,$/;"	f	file:
mirror_configure	vswitchd/bridge.c	/^mirror_configure(struct mirror *m)$/;"	f	file:
mirror_create	vswitchd/bridge.c	/^mirror_create(struct bridge *br, const struct ovsrec_mirror *cfg)$/;"	f	file:
mirror_destroy	ofproto/ofproto-dpif-mirror.c	/^mirror_destroy(struct mbridge *mbridge, void *aux)$/;"	f
mirror_destroy	vswitchd/bridge.c	/^mirror_destroy(struct mirror *m)$/;"	f	file:
mirror_find_by_uuid	vswitchd/bridge.c	/^mirror_find_by_uuid(struct bridge *br, const struct uuid *uuid)$/;"	f	file:
mirror_get	ofproto/ofproto-dpif-mirror.c	/^mirror_get(struct mbridge *mbridge, int index, const unsigned long **vlans,$/;"	f
mirror_get_stats	ofproto/ofproto-dpif-mirror.c	/^mirror_get_stats(struct mbridge *mbridge, void *aux, uint64_t *packets,$/;"	f
mirror_get_stats	ofproto/ofproto-provider.h	/^    int (*mirror_get_stats)(struct ofproto *ofproto, void *aux,$/;"	m	struct:ofproto_class
mirror_get_stats__	ofproto/ofproto-dpif.c	/^mirror_get_stats__(struct ofproto *ofproto, void *aux,$/;"	f	file:
mirror_ingress_packet	ofproto/ofproto-dpif-xlate.c	/^mirror_ingress_packet(struct xlate_ctx *ctx)$/;"	f	file:
mirror_lookup	ofproto/ofproto-dpif-mirror.c	/^mirror_lookup(struct mbridge *mbridge, void *aux)$/;"	f	file:
mirror_mask_t	ofproto/ofproto-dpif-mirror.h	/^typedef uint32_t mirror_mask_t;$/;"	t
mirror_out	ofproto/ofproto-dpif-mirror.c	/^    mirror_mask_t mirror_out;   \/* Mirrors that output to this mbundle. *\/$/;"	m	struct:mbundle	file:
mirror_packet	ofproto/ofproto-dpif-xlate.c	/^mirror_packet(struct xlate_ctx *ctx, struct xbundle *xbundle,$/;"	f	file:
mirror_refresh_stats	vswitchd/bridge.c	/^mirror_refresh_stats(struct mirror *m)$/;"	f	file:
mirror_scan	ofproto/ofproto-dpif-mirror.c	/^mirror_scan(struct mbridge *mbridge)$/;"	f	file:
mirror_set	ofproto/ofproto-dpif-mirror.c	/^mirror_set(struct mbridge *mbridge, void *aux, const char *name,$/;"	f
mirror_set	ofproto/ofproto-provider.h	/^    int (*mirror_set)(struct ofproto *ofproto, void *aux,$/;"	m	struct:ofproto_class
mirror_set__	ofproto/ofproto-dpif.c	/^mirror_set__(struct ofproto *ofproto_, void *aux,$/;"	f	file:
mirror_update_dups	ofproto/ofproto-dpif-mirror.c	/^mirror_update_dups(struct mbridge *mbridge)$/;"	f	file:
mirror_update_stats	ofproto/ofproto-dpif-mirror.c	/^mirror_update_stats(struct mbridge *mbridge, mirror_mask_t mirrors,$/;"	f
mirrors	lib/vswitch-idl.h	/^	struct ovsrec_mirror **mirrors;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_mirror
mirrors	ofproto/ofproto-dpif-mirror.c	/^    struct mirror *mirrors[MAX_MIRRORS];$/;"	m	struct:mbridge	typeref:struct:mbridge::mirror	file:
mirrors	ofproto/ofproto-dpif-rid.h	/^    mirror_mask_t mirrors;        \/* Mirrors already output. *\/$/;"	m	struct:recirc_state
mirrors	ofproto/ofproto-dpif-xlate.c	/^            mirror_mask_t mirrors;$/;"	m	struct:xc_entry::__anon188::__anon191	file:
mirrors	ofproto/ofproto-dpif-xlate.c	/^    mirror_mask_t mirrors;      \/* Bitmap of associated mirrors. *\/$/;"	m	struct:xlate_ctx	file:
mirrors	vswitchd/bridge.c	/^    struct hmap mirrors;        \/* "struct mirror" indexed by UUID. *\/$/;"	m	struct:bridge	typeref:struct:bridge::hmap	file:
miss	datapath-windows/ovsext/User.h	/^    UINT64 miss;$/;"	m	struct:_OVS_USER_STATS
miss	lib/ofp-util.h	/^    enum ofputil_table_miss miss;$/;"	m	struct:ofputil_table_mod	typeref:enum:ofputil_table_mod::ofputil_table_miss
miss	lib/ofp-util.h	/^    } nonmiss, miss;$/;"	m	struct:ofputil_table_features	typeref:struct:ofputil_table_features::ofputil_table_instruction_features
miss_config	lib/ofp-util.h	/^    enum ofputil_table_miss miss_config; \/* OF1.1 and 1.2 only. *\/$/;"	m	struct:ofputil_table_features	typeref:enum:ofputil_table_features::ofputil_table_miss
miss_config	ofproto/ofproto-provider.h	/^    ATOMIC(enum ofputil_table_miss) miss_config;$/;"	m	struct:oftable
miss_rule	ofproto/ofproto-dpif.c	/^    struct rule_dpif *miss_rule; \/* Sends flow table misses to controller. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::rule_dpif	file:
miss_send_len	include/openflow/openflow-common.h	/^    ovs_be16 miss_send_len;     \/* Max bytes of new flow that datapath should$/;"	m	struct:ofp_switch_config
miss_send_len	ofproto/connmgr.c	/^    int miss_send_len;             \/* Bytes to send of buffered packets. *\/$/;"	m	struct:ofconn	file:
miss_type	ofproto/connmgr.h	/^    enum ofproto_packet_in_miss_type miss_type;$/;"	m	struct:ofproto_packet_in	typeref:enum:ofproto_packet_in::ofproto_packet_in_miss_type
misses	datapath-windows/ovsext/Switch.h	/^   UINT64                  misses;          \/\/ Number of flow table misses.$/;"	m	struct:_OVS_DATAPATH
misses	tests/test-classifier.c	/^    atomic_int misses;$/;"	m	struct:cls_aux	file:
missing_operator_error	lib/db-ctl-base.c	/^missing_operator_error(const char *arg, const char **allowed_operators,$/;"	f	file:
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	datapath/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	datapath/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
ml	lib/learning-switch.c	/^    struct mac_learning *ml;    \/* NULL to act as hub instead of switch. *\/$/;"	m	struct:lswitch	typeref:struct:lswitch::mac_learning	file:
ml	ofproto/ofproto-dpif-xlate.c	/^    struct mac_learning *ml;      \/* Mac learning handle. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::mac_learning	file:
ml	ofproto/ofproto-dpif.c	/^    struct mac_learning *ml;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::mac_learning	file:
mld2_record	lib/packets.h	/^struct mld2_record {$/;"	s
mld6_addr	include/windows/netinet/icmp6.h	187;"	d
mld6_cksum	include/windows/netinet/icmp6.h	184;"	d
mld6_code	include/windows/netinet/icmp6.h	183;"	d
mld6_hdr	include/windows/netinet/icmp6.h	181;"	d
mld6_maxdelay	include/windows/netinet/icmp6.h	185;"	d
mld6_reserved	include/windows/netinet/icmp6.h	186;"	d
mld6_type	include/windows/netinet/icmp6.h	182;"	d
mld_addr	include/windows/netinet/icmp6.h	/^	struct in6_addr		mld_addr; \/* multicast address *\/$/;"	m	struct:mld_hdr	typeref:struct:mld_hdr::in6_addr
mld_cksum	include/windows/netinet/icmp6.h	192;"	d
mld_code	include/windows/netinet/icmp6.h	191;"	d
mld_hdr	include/windows/netinet/icmp6.h	/^struct mld_hdr {$/;"	s
mld_header	lib/packets.h	/^struct mld_header {$/;"	s
mld_icmp6_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr	mld_icmp6_hdr;$/;"	m	struct:mld_hdr	typeref:struct:mld_hdr::icmp6_hdr
mld_maxdelay	include/windows/netinet/icmp6.h	193;"	d
mld_reserved	include/windows/netinet/icmp6.h	194;"	d
mld_type	include/windows/netinet/icmp6.h	190;"	d
mlport	lib/mac-learning.h	/^    struct mac_learning_port *mlport;$/;"	m	struct:mac_entry	typeref:struct:mac_entry::mac_learning_port
mod2_hash	tests/test-hindex.c	/^mod2_hash(int value)$/;"	f	file:
mod3_hash	tests/test-hindex.c	/^mod3_hash(int value)$/;"	f	file:
mod4_hash	tests/test-hindex.c	/^mod4_hash(int value)$/;"	f	file:
mod_int	ovsdb/mutation.c	/^mod_int(int64_t *x, int64_t y)$/;"	f	file:
mod_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation mod_mutation = {$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
mod_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation mod_mutation;$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
mode	lib/db-ctl-base.h	/^    enum { RO, RW } mode;       \/* Does this command modify the database? *\/$/;"	m	struct:ctl_command_syntax	typeref:enum:ctl_command_syntax::__anon84
mode	lib/learning-switch.h	/^    enum lswitch_mode mode;$/;"	m	struct:lswitch_config	typeref:enum:lswitch_config::lswitch_mode
mode	lib/lldp/lldpd.h	/^    int  mode;       \/* > 0 mode identifier (unique per protocol) *\/$/;"	m	struct:protocol
mode	ovsdb/log.c	/^    enum ovsdb_log_mode mode;$/;"	m	struct:ovsdb_log	typeref:enum:ovsdb_log::ovsdb_log_mode	file:
mode	ovsdb/server.h	/^    enum ovsdb_lock_mode mode;$/;"	m	struct:ovsdb_lock_waiter	typeref:enum:ovsdb_lock_waiter::ovsdb_lock_mode
modes	lib/ovsdb-idl-provider.h	/^    unsigned char *modes;    \/* OVSDB_IDL_* bitmasks, indexed by column. *\/$/;"	m	struct:ovsdb_idl_table
modified	ofproto/ofproto-provider.h	/^    const long long int modified;     \/* Time of last modification. *\/$/;"	m	struct:ofgroup
modify_cookie	lib/ofp-util.h	/^    bool modify_cookie;      \/* Set cookie of existing flow to 'new_cookie'? *\/$/;"	m	struct:ofputil_flow_mod
modify_group	ofproto/ofproto.c	/^modify_group(struct ofproto *ofproto, struct ofputil_group_mod *gm)$/;"	f	file:
modify_netdev_arg	utilities/qemu-wrap.py	/^def modify_netdev_arg(arg):$/;"	f
modify_op_init	ofproto/ofproto-dpif-upcall.c	/^modify_op_init(struct ukey_op *op, struct udpif_key *ukey)$/;"	f	file:
modinst	utilities/ovs-dev.py	/^def modinst():$/;"	f
module	datapath/linux/compat/include/net/genetlink.h	/^	struct module           *module;$/;"	m	struct:rpl_genl_family	typeref:struct:rpl_genl_family::module
module_info	utilities/bugtool/ovs-bugtool	/^def module_info(cap):$/;"	f
monitor	lib/daemon-unix.c	/^static bool monitor;$/;"	v	file:
monitor	lib/daemon-windows.c	/^static bool monitor;$/;"	v	file:
monitor	ovsdb/monitor.c	/^    const struct ovsdb_monitor *monitor;$/;"	m	struct:ovsdb_monitor_aux	typeref:struct:ovsdb_monitor_aux::ovsdb_monitor	file:
monitor_daemon	lib/daemon-unix.c	/^monitor_daemon(pid_t daemon_pid)$/;"	f	file:
monitor_exit_latch	ofproto/ofproto-dpif-monitor.c	/^static struct latch monitor_exit_latch;$/;"	v	typeref:struct:latch	file:
monitor_heap	ofproto/ofproto-dpif-monitor.c	/^static struct heap monitor_heap;$/;"	v	typeref:struct:heap	file:
monitor_hmap	ofproto/ofproto-dpif-monitor.c	/^static struct hmap monitor_hmap = HMAP_INITIALIZER(&monitor_hmap);$/;"	v	typeref:struct:hmap	file:
monitor_id	include/openflow/openflow-1.4.h	/^    ovs_be32 monitor_id;        \/* Controller-assigned ID for this monitor. *\/$/;"	m	struct:ofp14_flow_monitor_request
monitor_id	ovsdb/jsonrpc-server.c	/^    struct json *monitor_id;$/;"	m	struct:ovsdb_jsonrpc_monitor	typeref:struct:ovsdb_jsonrpc_monitor::json	file:
monitor_main	ofproto/ofproto-dpif-monitor.c	/^monitor_main(void * args OVS_UNUSED)$/;"	f	file:
monitor_mutex	ofproto/ofproto-dpif-monitor.c	/^    OVS_REQUIRES(monitor_mutex);$/;"	v
monitor_mutex	ofproto/ofproto-dpif-monitor.c	/^static struct ovs_mutex monitor_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
monitor_print	ovsdb/ovsdb-client.c	/^monitor_print(struct json *table_updates,$/;"	f	file:
monitor_print_row	ovsdb/ovsdb-client.c	/^monitor_print_row(struct json *row, const char *type, const char *uuid,$/;"	f	file:
monitor_print_table	ovsdb/ovsdb-client.c	/^monitor_print_table(struct json *table_update,$/;"	f	file:
monitor_run	ofproto/ofproto-dpif-monitor.c	/^monitor_run(void)$/;"	f	file:
monitor_running	ofproto/ofproto-dpif-monitor.c	/^static bool monitor_running;$/;"	v	file:
monitor_seqno	ofproto/connmgr.c	/^static uint64_t monitor_seqno = 1;$/;"	v	file:
monitor_set_invalid_ttl_to_controller	utilities/ovs-ofctl.c	/^monitor_set_invalid_ttl_to_controller(struct vconn *vconn)$/;"	f	file:
monitor_tid	ofproto/ofproto-dpif-monitor.c	/^static pthread_t monitor_tid;$/;"	v	file:
monitor_vconn	utilities/ovs-ofctl.c	/^monitor_vconn(struct vconn *vconn, bool reply_to_echo_requests)$/;"	f	file:
monitored_table	ovsdb/ovsdb-client.c	/^struct monitored_table {$/;"	s	file:
monitorlogs	xenserver/etc_profile.d_openvswitch.sh	/^function monitorlogs {$/;"	f
monitors	lib/rconn.c	/^    struct vconn *monitors[MAXIMUM_MONITORS];$/;"	m	struct:rconn	typeref:struct:rconn::vconn	file:
monitors	ovsdb/jsonrpc-server.c	/^    struct hmap monitors;       \/* Hmap of "struct ovsdb_jsonrpc_monitor"s. *\/$/;"	m	struct:ovsdb_jsonrpc_session	typeref:struct:ovsdb_jsonrpc_session::hmap	file:
monotonic	python/ovs/timeval.py	/^def monotonic():$/;"	f
monotonic_clock	lib/timeval.c	/^static struct clock monotonic_clock; \/* CLOCK_MONOTONIC, if available. *\/$/;"	v	typeref:struct:clock	file:
move_routes	python/ovstest/util.py	/^def move_routes(iface1, iface2):$/;"	f
mp	lib/netdev-dpdk.c	/^    struct rte_mempool *mp;$/;"	m	struct:dpdk_mp	typeref:struct:dpdk_mp::rte_mempool	file:
mpid	lib/cfm.c	/^    uint64_t mpid;         \/* The Maintenance Point ID of this 'remote_mp'. *\/$/;"	m	struct:remote_mp	file:
mpid	lib/cfm.c	/^    uint64_t mpid;$/;"	m	struct:cfm	file:
mpid	lib/cfm.h	/^    uint64_t mpid;              \/* The MPID of this CFM. *\/$/;"	m	struct:cfm_settings
mpls	datapath/flow.h	/^		} mpls;$/;"	m	union:sw_flow_key::__anon29	typeref:struct:sw_flow_key::__anon29::__anon30
mpls	lib/sflow.h	/^    SFLExtended_mpls mpls;$/;"	m	union:_SFLFlow_type
mplsEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t mplsEncodingLength(SFLExtended_mpls *mpls) {$/;"	f	file:
mplsFTNDescr	lib/sflow.h	/^    SFLString mplsFTNDescr;$/;"	m	struct:_SFLExtended_mpls_FTN
mplsFTNMask	lib/sflow.h	/^    u_int32_t mplsFTNMask;$/;"	m	struct:_SFLExtended_mpls_FTN
mplsFecAddrPrefixLength	lib/sflow.h	/^    u_int32_t mplsFecAddrPrefixLength;$/;"	m	struct:_SFLExtended_mpls_LDP_FEC
mplsFtnEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t mplsFtnEncodingLength(SFLExtended_mpls_FTN *ftn) {$/;"	f	file:
mplsLdpFecEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t mplsLdpFecEncodingLength(SFLExtended_mpls_LDP_FEC *ldpfec) {$/;"	f	file:
mplsTunnelEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t mplsTunnelEncodingLength(SFLExtended_mpls_tunnel *tunnel) {$/;"	f	file:
mplsVcEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t mplsVcEncodingLength(SFLExtended_mpls_vc *vc) {$/;"	f	file:
mpls_err	ofproto/ofproto-dpif-sflow.h	/^    bool mpls_err;                           \/* MPLS actions parse failure. *\/$/;"	m	struct:dpif_sflow_actions
mpls_ethertype	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 mpls_ethertype; \/* Either %ETH_P_MPLS_UC or %ETH_P_MPLS_MC *\/$/;"	m	struct:ovs_action_push_mpls
mpls_ethertype	include/odp-netlink.h	/^	ovs_be16 mpls_ethertype; \/* Either %ETH_P_MPLS_UC or %ETH_P_MPLS_MC *\/$/;"	m	struct:ovs_action_push_mpls
mpls_ftn	lib/sflow.h	/^    SFLExtended_mpls_FTN mpls_ftn;$/;"	m	union:_SFLFlow_type
mpls_hdr	lib/packets.h	/^struct mpls_hdr {$/;"	s
mpls_label	datapath/linux/compat/include/linux/mpls.h	/^struct mpls_label {$/;"	s
mpls_label	include/openflow/openflow-1.1.h	/^    ovs_be32 mpls_label;       \/* MPLS label. *\/$/;"	m	struct:ofp11_match
mpls_ldp_fec	lib/sflow.h	/^    SFLExtended_mpls_LDP_FEC mpls_ldp_fec;$/;"	m	union:_SFLFlow_type
mpls_lse	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 mpls_lse;$/;"	m	struct:ovs_action_push_mpls
mpls_lse	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32 mpls_lse;$/;"	m	struct:ovs_key_mpls
mpls_lse	include/odp-netlink.h	/^	ovs_be32 mpls_lse;$/;"	m	struct:ovs_action_push_mpls
mpls_lse	include/odp-netlink.h	/^	ovs_be32 mpls_lse;$/;"	m	struct:ovs_key_mpls
mpls_lse	lib/flow.h	/^    ovs_be32 mpls_lse[ROUND_UP(FLOW_MAX_MPLS_LABELS, 2)]; \/* MPLS label stack$/;"	m	struct:flow
mpls_lse	lib/packets.h	/^    ovs_16aligned_be32 mpls_lse;$/;"	m	struct:mpls_hdr
mpls_lse	ofproto/ofproto-dpif-sflow.h	/^    uint32_t mpls_lse[FLOW_MAX_MPLS_LABELS]; \/* Out stack in host byte order. *\/$/;"	m	struct:dpif_sflow_actions
mpls_lse_to_bos	lib/packets.h	/^mpls_lse_to_bos(ovs_be32 mpls_lse)$/;"	f
mpls_lse_to_label	lib/packets.h	/^mpls_lse_to_label(ovs_be32 mpls_lse)$/;"	f
mpls_lse_to_tc	lib/packets.h	/^mpls_lse_to_tc(ovs_be32 mpls_lse)$/;"	f
mpls_lse_to_ttl	lib/packets.h	/^mpls_lse_to_ttl(ovs_be32 mpls_lse)$/;"	f
mpls_stack_depth	ofproto/ofproto-dpif-sflow.h	/^    uint32_t mpls_stack_depth;               \/* Out stack depth. *\/$/;"	m	struct:dpif_sflow_actions
mpls_tc	include/openflow/openflow-1.1.h	/^    uint8_t mpls_tc;           \/* MPLS TC. *\/$/;"	m	struct:ofp11_match
mpls_tunnel	lib/sflow.h	/^    SFLExtended_mpls_tunnel mpls_tunnel;$/;"	m	union:_SFLFlow_type
mpls_vc	lib/sflow.h	/^    SFLExtended_mpls_vc mpls_vc;$/;"	m	union:_SFLFlow_type
mport	ofproto/ofproto-dpif-monitor.c	/^struct mport {$/;"	s	file:
mrd	lib/packets.h	/^    ovs_be16 mrd;$/;"	m	struct:mld_header
mru	lib/dpif.h	/^    struct nlattr *mru;         \/* Maximum receive unit. *\/$/;"	m	struct:dpif_upcall	typeref:struct:dpif_upcall::nlattr
mru	ofproto/ofproto-dpif-upcall.c	/^    uint16_t mru;                  \/* If !0, Maximum receive unit of$/;"	m	struct:upcall	file:
ms	ofproto/ofproto-dpif-xlate.c	/^    struct mcast_snooping *ms;    \/* Multicast Snooping handle. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::mcast_snooping	file:
ms	ofproto/ofproto-dpif.c	/^    struct mcast_snooping *ms;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::mcast_snooping	file:
ms_to_ccm_interval	lib/cfm.c	/^ms_to_ccm_interval(int interval_ms)$/;"	f	file:
ms_to_timer	lib/stp.c	/^ms_to_timer(int ms)$/;"	f	file:
msec	lib/timeval.h	/^  int msec;$/;"	m	struct:tm_msec
msec	python/ovs/timeval.py	/^def msec():$/;"	f
msec_since_connect	lib/reconnect.h	/^    unsigned int msec_since_connect;       \/* Time since last connect. *\/$/;"	m	struct:reconnect_stats
msec_since_disconnect	lib/reconnect.h	/^    unsigned int msec_since_disconnect;    \/* Time since last disconnect. *\/$/;"	m	struct:reconnect_stats
msec_to_timespec	lib/timeval.c	/^msec_to_timespec(long long int ms, struct timespec *ts)$/;"	f	file:
msg	lib/bfd.c	/^struct msg {$/;"	s	file:
msg	lib/netlink-protocol.h	/^        struct nlmsghdr msg;$/;"	m	struct:nlmsgerr	typeref:struct:nlmsgerr::nlmsghdr
msg	lib/ofp-util.h	/^    const struct ofp_header   *msg;$/;"	m	struct:ofputil_bundle_add_msg	typeref:struct:ofputil_bundle_add_msg::ofp_header
msg	lib/ofpbuf.h	/^    void *msg;                  \/* message's body *\/$/;"	m	struct:ofpbuf
msg_control	include/sparse/sys/socket.h	/^    void          *msg_control;$/;"	m	struct:msghdr
msg_control	include/windows/netpacket/packet.h	/^    void *msg_control;$/;"	m	struct:msghdr
msg_controllen	include/sparse/sys/socket.h	/^    socklen_t      msg_controllen;$/;"	m	struct:msghdr
msg_controllen	include/windows/netpacket/packet.h	/^    size_t msg_controllen;$/;"	m	struct:msghdr
msg_flags	include/sparse/sys/socket.h	/^    int            msg_flags;$/;"	m	struct:msghdr
msg_flags	include/windows/netpacket/packet.h	/^    int msg_flags;$/;"	m	struct:msghdr
msg_iov	include/sparse/sys/socket.h	/^    struct iovec  *msg_iov;$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec
msg_iov	include/windows/netpacket/packet.h	/^    struct iovec *msg_iov;$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec
msg_iovlen	include/sparse/sys/socket.h	/^    int            msg_iovlen;$/;"	m	struct:msghdr
msg_iovlen	include/windows/netpacket/packet.h	/^    size_t msg_iovlen;$/;"	m	struct:msghdr
msg_list	ofproto/bundles.h	/^    struct ovs_list   msg_list;$/;"	m	struct:ofp_bundle	typeref:struct:ofp_bundle::ovs_list
msg_name	include/sparse/sys/socket.h	/^    void *msg_name;$/;"	m	struct:msghdr
msg_name	include/windows/netpacket/packet.h	/^    void *msg_name;$/;"	m	struct:msghdr
msg_namelen	include/sparse/sys/socket.h	/^    socklen_t      msg_namelen;$/;"	m	struct:msghdr
msg_namelen	include/windows/netpacket/packet.h	/^    socklen_t msg_namelen;$/;"	m	struct:msghdr
msg_type	lib/rtbsd.h	/^    int msg_type;             \/* e.g. XXX. *\/$/;"	m	struct:rtbsd_change
msghdr	include/sparse/sys/socket.h	/^struct msghdr {$/;"	s
msghdr	include/windows/netpacket/packet.h	/^struct msghdr$/;"	s
mss	datapath-windows/ovsext/Stt.h	/^    UINT16   mss;$/;"	m	struct:SttHdr
mss	datapath/linux/compat/include/net/stt.h	/^	__be16		mss;$/;"	m	struct:stthdr
mt	ovsdb/monitor.c	/^    struct ovsdb_monitor_table *mt;$/;"	m	struct:ovsdb_monitor_aux	typeref:struct:ovsdb_monitor_aux::ovsdb_monitor_table	file:
mt	ovsdb/monitor.c	/^    struct ovsdb_monitor_table *mt;$/;"	m	struct:ovsdb_monitor_changes	typeref:struct:ovsdb_monitor_changes::ovsdb_monitor_table	file:
mtime	lib/stream-ssl.c	/^    struct timespec mtime;      \/* File mtime as of last time we read it. *\/$/;"	m	struct:ssl_config_file	typeref:struct:ssl_config_file::timespec	file:
mtu	datapath-windows/ovsext/DpInternal.h	/^    uint32_t mtu;$/;"	m	struct:_OVS_VPORT_EXT_INFO
mtu	datapath-windows/ovsext/Vport.h	/^    UINT32                 mtu;$/;"	m	struct:_OVS_VPORT_ENTRY
mtu	lib/dpif.h	/^    unsigned int mtu;               \/* Maximum transmission unit to fragment.$/;"	m	struct:dpif_execute
mtu	lib/netdev-bsd.c	/^    int mtu;$/;"	m	struct:netdev_bsd	file:
mtu	lib/netdev-dpdk.c	/^    int mtu;$/;"	m	struct:dpdk_mp	file:
mtu	lib/netdev-dpdk.c	/^    int mtu;$/;"	m	struct:netdev_dpdk	file:
mtu	lib/netdev-linux.c	/^    int mtu;$/;"	m	struct:netdev_linux	file:
mtu	lib/netdev-windows.c	/^    uint32_t mtu;$/;"	m	struct:netdev_windows	file:
mtu	lib/netdev-windows.c	/^    uint32_t mtu;$/;"	m	struct:netdev_windows_netdev_info	file:
mtu	lib/packets.h	/^            ovs_be16 mtu;$/;"	m	struct:icmp_header::__anon147::__anon149
mtu	lib/rtnetlink.h	/^    int mtu;                    \/* Current MTU. *\/$/;"	m	struct:rtnetlink_change
mtu	lib/vswitch-idl.h	/^	int64_t *mtu;$/;"	m	struct:ovsrec_interface
mtu	ofproto/ofproto-provider.h	/^    int mtu;$/;"	m	struct:ofport
mtu_node1	utilities/ovs-test	/^            mtu_node1 = collect_information(node1)$/;"	v
mtu_node2	utilities/ovs-test	/^            mtu_node2 = collect_information(node2)$/;"	v
mtu_setting	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def mtu_setting(nw, type, oc):$/;"	f
mul_double	ovsdb/mutation.c	/^mul_double(double *x, double y)$/;"	f	file:
mul_int	ovsdb/mutation.c	/^mul_int(int64_t *x, int64_t y)$/;"	f	file:
mul_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation mul_mutation = {$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
mul_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation mul_mutation;$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
mult	lib/bfd.c	/^    uint8_t mult;                 \/* bfd.DetectMult. *\/$/;"	m	struct:bfd	file:
mult	lib/bfd.c	/^    uint8_t mult;         \/* Fault detection multiplier. *\/$/;"	m	struct:msg	file:
multicast	lib/netdev-linux.c	/^    uint64_t multicast;$/;"	m	struct:rtnl_link_stats64	file:
multicast	lib/netdev.h	/^    uint64_t multicast;         \/* Multicast packets received. *\/$/;"	m	struct:netdev_stats
multicastPkts	lib/sflow.h	/^    u_int32_t multicastPkts;$/;"	m	struct:_SFLVlan_counters
multicast_group	lib/netlink-notifier.c	/^    int multicast_group;         \/* Multicast group we listen on. *\/$/;"	m	struct:nln	file:
multicast_group	ovn/northd/ovn-northd.c	/^struct multicast_group {$/;"	s	file:
multicast_group_equal	ovn/northd/ovn-northd.c	/^multicast_group_equal(const struct multicast_group *a,$/;"	f	file:
multiline_sort	tests/testsuite	/^multiline_sort () {$/;"	f
multipart_hash	tests/test-hindex.c	/^multipart_hash(int value)$/;"	f	file:
multipath_algorithm	lib/multipath.c	/^multipath_algorithm(uint32_t hash, enum nx_mp_algorithm algorithm,$/;"	f	file:
multipath_check	lib/multipath.c	/^multipath_check(const struct ofpact_multipath *mp,$/;"	f
multipath_execute	lib/multipath.c	/^multipath_execute(const struct ofpact_multipath *mp, struct flow *flow,$/;"	f
multipath_format	lib/multipath.c	/^multipath_format(const struct ofpact_multipath *mp, struct ds *s)$/;"	f
multipath_parse	lib/multipath.c	/^multipath_parse(struct ofpact_multipath *mp, const char *s_)$/;"	f
multipath_parse__	lib/multipath.c	/^multipath_parse__(struct ofpact_multipath *mp, const char *s_, char *s)$/;"	f	file:
multipathd_topology	utilities/bugtool/ovs-bugtool	/^def multipathd_topology(cap):$/;"	f
multiple	tests/test-json.c	/^static int multiple = 0;$/;"	v	file:
multithreaded	lib/ovs-thread.c	/^static bool multithreaded;$/;"	v	file:
must_crossproduct	ovn/lib/expr.h	/^    bool must_crossproduct;$/;"	m	struct:expr_symbol
must_exist	utilities/ovs-pki	/^must_exist() {$/;"	f
must_exist	utilities/ovs-pki.in	/^must_exist() {$/;"	f
must_get_int	tests/test-rstp.c	/^must_get_int(void)$/;"	f	file:
must_get_int	tests/test-stp.c	/^must_get_int(void)$/;"	f	file:
must_match	tests/test-rstp.c	/^must_match(const char *want)$/;"	f	file:
must_match	tests/test-stp.c	/^must_match(const char *want)$/;"	f	file:
must_not_exist	utilities/ovs-pki	/^must_not_exist() {$/;"	f
must_not_exist	utilities/ovs-pki.in	/^must_not_exist() {$/;"	f
must_not_fork	lib/ovs-thread.c	/^static const char *must_not_fork;$/;"	v	file:
mutable	ovsdb/ovsdb-idlc	/^                mutable = "false"$/;"	v
mutable	ovsdb/ovsdb-idlc	/^                mutable = "true"$/;"	v
mutate_integer	ovsdb/mutation.c	/^    int (*mutate_integer)(int64_t *x, int64_t y);$/;"	m	struct:ovsdb_scalar_mutation	file:
mutate_real	ovsdb/mutation.c	/^    int (*mutate_real)(double *x, double y);$/;"	m	struct:ovsdb_scalar_mutation	file:
mutate_row_cb	ovsdb/execution.c	/^mutate_row_cb(const struct ovsdb_row *row, void *mr_)$/;"	f	file:
mutate_row_cbdata	ovsdb/execution.c	/^struct mutate_row_cbdata {$/;"	s	file:
mutate_scalar	ovsdb/mutation.c	/^mutate_scalar(const struct ovsdb_type *dst_type, struct ovsdb_datum *dst,$/;"	f	file:
mutation_frac	tests/test-cmap.c	/^static uint32_t mutation_frac;  \/* % mutations, as fraction of UINT32_MAX. *\/$/;"	v	file:
mutations	ovsdb/execution.c	/^    const struct ovsdb_mutation_set *mutations;$/;"	m	struct:mutate_row_cbdata	typeref:struct:mutate_row_cbdata::ovsdb_mutation_set	file:
mutations	ovsdb/mutation.h	/^    struct ovsdb_mutation *mutations;$/;"	m	struct:ovsdb_mutation_set	typeref:struct:ovsdb_mutation_set::ovsdb_mutation
mutator	ovsdb/mutation.c	/^    enum ovsdb_mutator mutator;$/;"	m	struct:ovsdb_scalar_mutation	typeref:enum:ovsdb_scalar_mutation::ovsdb_mutator	file:
mutator	ovsdb/mutation.h	/^    enum ovsdb_mutator mutator;$/;"	m	struct:ovsdb_mutation	typeref:enum:ovsdb_mutation::ovsdb_mutator
mute	lib/learning-switch.c	/^    bool mute;$/;"	m	struct:lswitch	file:
mute	lib/learning-switch.h	/^    bool mute;$/;"	m	struct:lswitch_config
mute	utilities/ovs-testcontroller.c	/^static bool mute = false;$/;"	v	file:
mutex	include/openvswitch/thread.h	/^    OVS_ACQUIRES(mutex);$/;"	v
mutex	include/openvswitch/thread.h	/^    struct ovs_mutex mutex;$/;"	m	struct:ovsthread_once	typeref:struct:ovsthread_once::ovs_mutex
mutex	include/openvswitch/thread.h	/^void ovs_mutex_unlock(const struct ovs_mutex *mutex) OVS_RELEASES(mutex);$/;"	v
mutex	include/openvswitch/vlog.h	/^    struct ovs_mutex mutex;     \/* Mutual exclusion for rate limit. *\/$/;"	m	struct:vlog_rate_limit	typeref:struct:vlog_rate_limit::ovs_mutex
mutex	lib/bfd.c	/^                    const struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^    OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static bool bfd_forwarding__(struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static bool bfd_in_poll(const struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static const char *bfd_diag_str(enum diag) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static const char *bfd_state_str(enum state) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static long long int bfd_min_tx(const struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static struct hmap *const all_bfds OVS_GUARDED_BY(mutex) = &all_bfds__;$/;"	v	file:
mutex	lib/bfd.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/bfd.c	/^static uint32_t generate_discriminator(void) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static uint64_t bfd_rx_packets(const struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static void bfd_decay_update(struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static void bfd_forwarding_if_rx_update(struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static void bfd_poll(struct bfd *bfd) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static void bfd_set_next_tx(struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static void bfd_status_changed(struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/bfd.c	/^static void bfd_try_decay(struct bfd *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/cfm.c	/^static struct hmap *const all_cfms OVS_GUARDED_BY(mutex) = &all_cfms__;$/;"	v	file:
mutex	lib/cfm.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/dpif-netdev.c	/^    struct ovs_mutex mutex;$/;"	m	struct:dpif_netdev_flow_dump	typeref:struct:dpif_netdev_flow_dump::ovs_mutex	file:
mutex	lib/fat-rwlock.c	/^    struct ovs_mutex mutex;$/;"	m	struct:fat_rwlock_slot	typeref:struct:fat_rwlock_slot::ovs_mutex	file:
mutex	lib/fat-rwlock.h	/^    struct ovs_mutex mutex;$/;"	m	struct:fat_rwlock	typeref:struct:fat_rwlock::ovs_mutex
mutex	lib/fatal-signal.c	/^static struct ovs_mutex mutex;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/guarded-list.h	/^    struct ovs_mutex mutex;$/;"	m	struct:guarded_list	typeref:struct:guarded_list::ovs_mutex
mutex	lib/lacp.c	/^    OVS_REQUIRES(mutex);$/;"	v
mutex	lib/lacp.c	/^static struct ovs_list *const all_lacps OVS_GUARDED_BY(mutex) = &all_lacps__;$/;"	v	file:
mutex	lib/lacp.c	/^static struct ovs_mutex mutex;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/lacp.c	/^static void lacp_update_attached(struct lacp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/lacp.c	/^static void slave_destroy(struct slave *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/lacp.c	/^static void slave_set_defaulted(struct slave *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/lacp.c	/^static void slave_set_expired(struct slave *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/netdev-bsd.c	/^    struct ovs_mutex mutex;$/;"	m	struct:netdev_bsd	typeref:struct:netdev_bsd::ovs_mutex	file:
mutex	lib/netdev-linux.c	/^    struct ovs_mutex mutex;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::ovs_mutex	file:
mutex	lib/netdev-vport.c	/^    struct ovs_mutex mutex;$/;"	m	struct:netdev_vport	typeref:struct:netdev_vport::ovs_mutex	file:
mutex	lib/netlink-socket.h	/^    struct ovs_mutex mutex;     \/* Protects 'status', synchronizes recv(). *\/$/;"	m	struct:nl_dump	typeref:struct:nl_dump::ovs_mutex
mutex	lib/ovs-lldp.c	/^static struct hmap *const all_lldps OVS_GUARDED_BY(mutex) = &all_lldps__;$/;"	v	file:
mutex	lib/ovs-lldp.c	/^static struct hmap *const all_mappings OVS_GUARDED_BY(mutex) = &all_mappings__;$/;"	v	file:
mutex	lib/ovs-lldp.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/ovs-rcu.c	/^    struct ovs_mutex mutex;$/;"	m	struct:ovsrcu_perthread	typeref:struct:ovsrcu_perthread::ovs_mutex	file:
mutex	lib/ovs-router.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/ovs-thread.h	/^    struct ovs_mutex mutex;$/;"	m	struct:ovsthread_stats	typeref:struct:ovsthread_stats::ovs_mutex
mutex	lib/rconn.c	/^    struct ovs_mutex mutex;$/;"	m	struct:rconn	typeref:struct:rconn::ovs_mutex	file:
mutex	lib/rconn.h	/^    struct ovs_mutex mutex;$/;"	m	struct:rconn_packet_counter	typeref:struct:rconn_packet_counter::ovs_mutex
mutex	lib/stp.c	/^                                const struct stp_port *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^    OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static struct ovs_list *const all_stps OVS_GUARDED_BY(mutex) = &all_stps__;$/;"	v	file:
mutex	lib/stp.c	/^static struct ovs_mutex mutex;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/stp.c	/^static void stp_become_root_bridge(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_config_bpdu_generation(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_configuration_update(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_designated_port_selection(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_hello_timer_expiry(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_hold_timer_expiry(struct stp_port *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_make_blocking(struct stp_port *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_make_forwarding(struct stp_port *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_port_state_selection(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_root_selection(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_tcn_timer_expiry(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_topology_change_detection(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_transmit_config(struct stp_port *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_transmit_tcn(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/stp.c	/^static void stp_update_bridge_timers(struct stp *) OVS_REQUIRES(mutex);$/;"	v
mutex	lib/timeval.c	/^    struct ovs_mutex mutex;$/;"	m	struct:clock	typeref:struct:clock::ovs_mutex	file:
mutex	lib/tnl-arp-cache.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	lib/tnl-ports.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	ofproto/netflow.c	/^    OVS_REQUIRES(mutex);$/;"	v
mutex	ofproto/netflow.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	ofproto/netflow.c	/^static void netflow_run__(struct netflow *) OVS_REQUIRES(mutex);$/;"	v
mutex	ofproto/ofproto-dpif-ipfix.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	ofproto/ofproto-dpif-rid.c	/^static struct ovs_mutex mutex;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	ofproto/ofproto-dpif-sflow.c	/^static struct ovs_mutex mutex;$/;"	v	typeref:struct:ovs_mutex	file:
mutex	ofproto/ofproto-dpif-upcall.c	/^    struct ovs_mutex mutex;                   \/* Guards the following. *\/$/;"	m	struct:udpif_key	typeref:struct:udpif_key::ovs_mutex	file:
mutex	ofproto/ofproto-dpif-upcall.c	/^    struct ovs_mutex mutex;            \/* Take for writing to the following. *\/$/;"	m	struct:umap	typeref:struct:umap::ovs_mutex	file:
mutex	tests/test-cmap.c	/^    struct ovs_mutex mutex;$/;"	m	struct:cmap_aux	typeref:struct:cmap_aux::ovs_mutex	file:
mutex	vswitchd/system-stats.c	/^static struct ovs_mutex mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
mutex_for_pointer	lib/ovs-atomic-locked.c	/^    OVS_ACQUIRES(mutex_for_pointer(p))$/;"	f
mutex_for_pointer	lib/ovs-atomic-locked.c	/^    OVS_RELEASES(mutex_for_pointer(p))$/;"	f
mutex_for_pointer	lib/ovs-atomic-locked.c	/^mutex_for_pointer(void *p)$/;"	f	file:
myIP	lib/sflow_api.h	/^    SFLAddress myIP;        \/* IP address of this node *\/$/;"	m	struct:_SFLAgent
myReceiver	lib/sflow_api.h	/^    SFLReceiver *myReceiver;$/;"	m	struct:_SFLPoller
myReceiver	lib/sflow_api.h	/^    SFLReceiver *myReceiver;$/;"	m	struct:_SFLSampler
my_disc	lib/bfd.c	/^    ovs_be32 my_disc;     \/* My discriminator. *\/$/;"	m	struct:msg	file:
my_ip	utilities/ovs-test	/^                my_ip = me.get_my_address_from(node2[0], node2[1])$/;"	v
n	datapath-windows/ovsext/DpInternal.h	/^    uint32_t n;$/;"	m	struct:OvsFlowDumpOutput
n	lib/classifier.c	/^    unsigned int n;             \/* Number of elements in 'conj'. *\/$/;"	m	struct:cls_conjunction_set	file:
n	lib/cmap.c	/^    unsigned int n;             \/* Number of in-use elements. *\/$/;"	m	struct:cmap_impl	file:
n	lib/dpif-netdev.c	/^    atomic_ullong n[DP_N_STATS];$/;"	m	struct:dp_netdev_pmd_stats	file:
n	lib/dpif-netdev.c	/^    atomic_ullong n[PMD_N_CYCLES];$/;"	m	struct:dp_netdev_pmd_cycles	file:
n	lib/guarded-list.h	/^    size_t n;$/;"	m	struct:guarded_list
n	lib/heap.h	/^    size_t n;                   \/* Number of nodes currently in the heap. *\/$/;"	m	struct:heap
n	lib/hmap.h	/^    size_t n;$/;"	m	struct:hmap
n	lib/json.h	/^    size_t n, n_allocated;$/;"	m	struct:json_array
n	lib/netlink-socket.c	/^    int n;$/;"	m	struct:nl_pool	file:
n	lib/ovsdb-data.h	/^    unsigned int n;             \/* Number of 'keys' and 'values'. *\/$/;"	m	struct:ovsdb_datum
n	lib/svec.h	/^    size_t n;$/;"	m	struct:svec
n	ofproto/ofproto-provider.h	/^    size_t n;                   \/* Number of rules collected. *\/$/;"	m	struct:rule_collection
n	ofproto/pinsched.c	/^    int n;                      \/* Number of packets in 'packets'. *\/$/;"	m	struct:pinqueue	file:
n	ovn/lib/expr.h	/^    size_t n, allocated;$/;"	m	struct:expr_match
nFlows	datapath-windows/ovsext/Switch.h	/^   UINT32                  nFlows;          \/\/ Number of entries in flowTable.$/;"	m	struct:_OVS_DATAPATH
nMax	ovsdb/ovsdb-idlc	/^                    nMax = "datum->n"$/;"	v
nMax	ovsdb/ovsdb-idlc	/^                    nMax = "n"$/;"	v
nVar	ovsdb/ovsdb-idlc	/^                    nVar = members[1]['name']$/;"	v
nVar	ovsdb/ovsdb-idlc	/^                    nVar = members[2]['name']$/;"	v
nVar	ovsdb/ovsdb-idlc	/^            nVar = None$/;"	v
n_LR_fault_status	vtep/vtep-idl.h	/^	size_t n_LR_fault_status;$/;"	m	struct:vteprec_logical_router
n_acl_binding	vtep/vtep-idl.h	/^	size_t n_acl_binding;$/;"	m	struct:vteprec_logical_router
n_acl_bindings	vtep/vtep-idl.h	/^	size_t n_acl_bindings;$/;"	m	struct:vteprec_physical_port
n_acl_entries	vtep/vtep-idl.h	/^	size_t n_acl_entries;$/;"	m	struct:vteprec_acl
n_acl_fault_status	vtep/vtep-idl.h	/^	size_t n_acl_fault_status;$/;"	m	struct:vteprec_acl
n_acle_fault_status	vtep/vtep-idl.h	/^	size_t n_acle_fault_status;$/;"	m	struct:vteprec_acl_entry
n_acls	ovn/lib/ovn-nb-idl.h	/^	size_t n_acls;$/;"	m	struct:nbrec_logical_switch
n_active_ports	tests/test-rstp.c	/^    int n_active_ports;$/;"	m	struct:bridge	file:
n_add	ofproto/connmgr.c	/^    int n_add, n_delete, n_modify; \/* Number of unreported ops of each kind. *\/$/;"	m	struct:ofconn	file:
n_addresses	ovn/lib/ovn-nb-idl.h	/^	size_t n_addresses;$/;"	m	struct:nbrec_logical_port
n_all	ofproto/ofproto-dpif-sflow.c	/^    size_t n_flood, n_all;$/;"	m	struct:dpif_sflow	file:
n_allocated	lib/json.h	/^    size_t n, n_allocated;$/;"	m	struct:json_array
n_attempted_connections	lib/rconn.c	/^    unsigned int n_attempted_connections, n_successful_connections;$/;"	m	struct:rconn	file:
n_attempted_connections	lib/reconnect.c	/^    unsigned int n_attempted_connections, n_successful_connections;$/;"	m	struct:reconnect	file:
n_attempted_connections	lib/reconnect.h	/^    unsigned int n_attempted_connections;$/;"	m	struct:reconnect_stats
n_ba	tests/idltest.h	/^	size_t n_ba;$/;"	m	struct:idltest_simple
n_bands	lib/ofp-util.h	/^    uint16_t n_bands;$/;"	m	struct:ofputil_meter_config
n_bands	lib/ofp-util.h	/^    uint16_t n_bands;$/;"	m	struct:ofputil_meter_stats
n_bands	ofproto/ofproto.c	/^    uint16_t n_bands;           \/* Number of meter bands. *\/$/;"	m	struct:meter	file:
n_batch	tests/test-cmap.c	/^static int n_batch;             \/* Number of elements in each batch. *\/$/;"	v	file:
n_batches	utilities/ovs-benchmark.c	/^static int n_batches = 1;$/;"	v	file:
n_bits	lib/classifier-private.h	/^    uint8_t  n_bits;           \/* Never zero, except for the root node. *\/$/;"	m	struct:trie_node
n_bits	lib/meta-flow.h	/^    unsigned int n_bits;        \/* Number of bits. *\/$/;"	m	struct:mf_subfield
n_bits	lib/meta-flow.h	/^    unsigned int n_bits;        \/* Number of significant bits in field. *\/$/;"	m	struct:mf_field
n_bits	lib/ofp-actions.c	/^    ovs_be16 n_bits;                \/* Number of bits. *\/$/;"	m	struct:nx_action_reg_move	file:
n_bits	lib/ofp-actions.c	/^    ovs_be16 n_bits;            \/* Number of bits to copy. *\/$/;"	m	struct:ofp15_action_copy_field	file:
n_bits	lib/ofp-actions.c	/^    ovs_be16 n_bits;            \/* Number of bits to copy. *\/$/;"	m	struct:onf_action_copy_field	file:
n_bits	lib/ofp-actions.h	/^    int n_bits;                 \/* Number of bits in source and dest. *\/$/;"	m	struct:ofpact_learn_spec
n_bits	ovn/lib/expr.c	/^    int n_bits;                       \/* Number of bits. *\/$/;"	m	struct:expr_field	file:
n_bridges	lib/vswitch-idl.h	/^	size_t n_bridges;$/;"	m	struct:ovsrec_open_vswitch
n_bridges	tests/test-rstp.c	/^    int n_bridges;$/;"	m	struct:test_case	file:
n_bridges	tests/test-stp.c	/^    int n_bridges;$/;"	m	struct:test_case	file:
n_buckets	datapath/flow_table.h	/^	unsigned int n_buckets;$/;"	m	struct:table_instance
n_buckets	lib/ofp-util.h	/^    uint32_t n_buckets;$/;"	m	struct:ofputil_group_stats
n_buckets	ofproto/ofproto-provider.h	/^    const uint32_t n_buckets;$/;"	m	struct:ofgroup
n_buffers	include/openflow/openflow-common.h	/^    ovs_be32 n_buffers;     \/* Max packets buffered at once. *\/$/;"	m	struct:ofp_switch_features
n_buffers	lib/ofp-util.h	/^    uint32_t n_buffers;         \/* Max packets buffered at once. *\/$/;"	m	struct:ofputil_switch_features
n_bytes	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 n_bytes;           \/* Number of matched bytes. *\/$/;"	m	struct:ovs_flow_stats
n_bytes	include/odp-netlink.h	/^	ovs_32aligned_u64 n_bytes;           \/* Number of matched bytes. *\/$/;"	m	struct:ovs_flow_stats
n_bytes	lib/dpif.h	/^    uint64_t n_bytes;$/;"	m	struct:dpif_flow_stats
n_bytes	lib/meta-flow.h	/^    unsigned int n_bytes;       \/* Width of the field in bytes. *\/$/;"	m	struct:mf_field
n_cache_active_timeout	lib/vswitch-idl.h	/^	size_t n_cache_active_timeout;$/;"	m	struct:ovsrec_ipfix
n_cache_max_flows	lib/vswitch-idl.h	/^	size_t n_cache_max_flows;$/;"	m	struct:ovsrec_ipfix
n_cbs	lib/ovs-rcu.c	/^    int n_cbs;$/;"	m	struct:ovsrcu_cbset	file:
n_cfm_fault	lib/vswitch-idl.h	/^	size_t n_cfm_fault;$/;"	m	struct:ovsrec_interface
n_cfm_fault_status	lib/vswitch-idl.h	/^	size_t n_cfm_fault_status;$/;"	m	struct:ovsrec_interface
n_cfm_flap_count	lib/vswitch-idl.h	/^	size_t n_cfm_flap_count;$/;"	m	struct:ovsrec_interface
n_cfm_health	lib/vswitch-idl.h	/^	size_t n_cfm_health;$/;"	m	struct:ovsrec_interface
n_cfm_mpid	lib/vswitch-idl.h	/^	size_t n_cfm_mpid;$/;"	m	struct:ovsrec_interface
n_cfm_remote_mpids	lib/vswitch-idl.h	/^	size_t n_cfm_remote_mpids;$/;"	m	struct:ovsrec_interface
n_clauses	lib/classifier.h	/^    uint8_t n_clauses;$/;"	m	struct:cls_conjunction
n_clauses	lib/ofp-actions.c	/^    uint8_t n_clauses;$/;"	m	struct:nx_action_conjunction	file:
n_clauses	lib/ofp-actions.h	/^    uint8_t n_clauses;$/;"	m	struct:ofpact_conjunction
n_clauses	ovsdb/condition.h	/^    size_t n_clauses;$/;"	m	struct:ovsdb_condition
n_columns	lib/ovsdb-idl-provider.h	/^    size_t n_columns;$/;"	m	struct:ovsdb_idl_table_class
n_columns	lib/table.h	/^    size_t n_columns, allocated_columns;$/;"	m	struct:table
n_columns	ovsdb/column.h	/^    size_t n_columns, allocated_columns;$/;"	m	struct:ovsdb_column_set
n_columns	ovsdb/monitor.c	/^    size_t n_columns;$/;"	m	struct:ovsdb_monitor_table	file:
n_columns	ovsdb/ovsdb-client.c	/^    size_t n_columns;$/;"	m	struct:dump_table_aux	file:
n_commands	tests/ovstest.c	/^static size_t n_commands = 0;$/;"	v	file:
n_connections	ovsdb/jsonrpc-server.h	/^    int n_connections;$/;"	m	struct:ovsdb_jsonrpc_remote_status
n_conns	lib/memory.c	/^static size_t n_conns;$/;"	v	file:
n_conns	ofproto/ofproto-dpif-upcall.c	/^    size_t n_conns;                    \/* Number of connections waiting. *\/$/;"	m	struct:udpif	file:
n_conns	tests/test-rstp.c	/^    int n_conns;$/;"	m	struct:lan	file:
n_conns	tests/test-stp.c	/^    int n_conns;$/;"	m	struct:lan	file:
n_controller	lib/vswitch-idl.h	/^	size_t n_controller;$/;"	m	struct:ovsrec_bridge
n_controller_burst_limit	lib/vswitch-idl.h	/^	size_t n_controller_burst_limit;$/;"	m	struct:ovsrec_controller
n_controller_rate_limit	lib/vswitch-idl.h	/^	size_t n_controller_rate_limit;$/;"	m	struct:ovsrec_controller
n_controllers	lib/ofp-actions.c	/^    ovs_be16 n_controllers;     \/* Number of controllers. *\/$/;"	m	struct:nx_action_cnt_ids	file:
n_controllers	lib/ofp-actions.h	/^    unsigned int n_controllers;$/;"	m	struct:ofpact_cnt_ids
n_coverage_counters	lib/coverage.c	/^static size_t n_coverage_counters = 0;$/;"	v	file:
n_criteria	utilities/ovs-ofctl.c	/^static size_t n_criteria, allocated_criteria;$/;"	v	file:
n_datapath_types	lib/vswitch-idl.h	/^	size_t n_datapath_types;$/;"	m	struct:ovsrec_open_vswitch
n_default_flows	lib/learning-switch.c	/^    size_t n_default_flows;$/;"	m	struct:lswitch	file:
n_default_flows	lib/learning-switch.h	/^    size_t n_default_flows;$/;"	m	struct:lswitch_config
n_default_flows	utilities/ovs-testcontroller.c	/^static size_t n_default_flows;$/;"	v	file:
n_delete	ofproto/connmgr.c	/^    int n_add, n_delete, n_modify; \/* Number of unreported ops of each kind. *\/$/;"	m	struct:ofconn	file:
n_dest_port_max	vtep/vtep-idl.h	/^	size_t n_dest_port_max;$/;"	m	struct:vteprec_acl_entry
n_dest_port_min	vtep/vtep-idl.h	/^	size_t n_dest_port_min;$/;"	m	struct:vteprec_acl_entry
n_dpdk_rxqs	lib/dpif-netdev.c	/^    size_t n_dpdk_rxqs;$/;"	m	struct:dp_netdev	file:
n_dpdk_rxqs	ofproto/ofproto.c	/^size_t n_dpdk_rxqs;$/;"	v
n_dropped	include/openvswitch/vlog.h	/^    unsigned int n_dropped;     \/* Number of messages dropped. *\/$/;"	m	struct:vlog_rate_limit
n_dscp	lib/vswitch-idl.h	/^	size_t n_dscp;$/;"	m	struct:ovsrec_queue
n_dsts	ofproto/ofproto.h	/^    size_t n_dsts;$/;"	m	struct:ofproto_mirror_settings
n_elems	tests/test-cmap.c	/^static int n_elems;             \/* Number of elements to insert. *\/$/;"	v	file:
n_enable_async_messages	lib/vswitch-idl.h	/^	size_t n_enable_async_messages;$/;"	m	struct:ovsrec_controller
n_enabled	ovn/lib/ovn-nb-idl.h	/^	size_t n_enabled;$/;"	m	struct:nbrec_logical_port
n_enabled	ovn/lib/ovn-nb-idl.h	/^	size_t n_enabled;$/;"	m	struct:nbrec_logical_router_port
n_encaps	ovn/lib/ovn-sb-idl.h	/^	size_t n_encaps;$/;"	m	struct:sbrec_chassis
n_engine_id	lib/vswitch-idl.h	/^	size_t n_engine_id;$/;"	m	struct:ovsrec_netflow
n_engine_type	lib/vswitch-idl.h	/^	size_t n_engine_type;$/;"	m	struct:ovsrec_netflow
n_errors	build-aux/extract-ofp-actions	/^n_errors = 0$/;"	v
n_errors	build-aux/extract-ofp-errors	/^n_errors = 0$/;"	v
n_errors	build-aux/extract-ofp-fields	/^n_errors = 0$/;"	v
n_errors	build-aux/extract-ofp-msgs	/^n_errors = 0$/;"	v
n_events	lib/dpif-netlink.c	/^    int n_events;                 \/* Num events returned by epoll_wait(). *\/$/;"	m	struct:dpif_handler	file:
n_events	lib/perf-counter.h	/^    uint64_t n_events;$/;"	m	struct:perf_counter
n_eviction_fields	ofproto/ofproto-provider.h	/^    size_t n_eviction_fields;$/;"	m	struct:oftable
n_extra_remotes	ofproto/connmgr.c	/^    size_t n_extra_remotes;$/;"	m	struct:connmgr	file:
n_fds	ofproto/collectors.c	/^    size_t n_fds;                 \/* Number of sockets. *\/$/;"	m	struct:collectors	file:
n_flood	ofproto/ofproto-dpif-sflow.c	/^    size_t n_flood, n_all;$/;"	m	struct:dpif_sflow	file:
n_flood_vlans	lib/vswitch-idl.h	/^	size_t n_flood_vlans;$/;"	m	struct:ovsrec_bridge
n_flow_limit	lib/vswitch-idl.h	/^	size_t n_flow_limit;$/;"	m	struct:ovsrec_flow_table
n_flow_segments	lib/classifier.h	/^    uint8_t n_flow_segments;$/;"	m	struct:classifier
n_flow_tables	lib/vswitch-idl.h	/^	size_t n_flow_tables;$/;"	m	struct:ovsrec_bridge
n_flows	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 n_flows;           \/* Number of flows present *\/$/;"	m	struct:ovs_dp_stats
n_flows	include/odp-netlink.h	/^	ovs_32aligned_u64 n_flows;           \/* Number of flows present *\/$/;"	m	struct:ovs_dp_stats
n_flows	lib/dpif.h	/^    uint64_t n_flows;           \/* Number of flows present. *\/$/;"	m	struct:dpif_dp_stats
n_flows	lib/sflow.h	/^    uint32_t n_flows;$/;"	m	struct:_SFLOVSDP_counters
n_flows	ofproto/ofproto-dpif-upcall.c	/^    atomic_uint n_flows;               \/* Number of flows in the datapath. *\/$/;"	m	struct:udpif	file:
n_flows	ofproto/ofproto-provider.h	/^    unsigned int n_flows;$/;"	m	struct:oftable
n_flows_mutex	ofproto/ofproto-dpif-upcall.c	/^    struct ovs_mutex n_flows_mutex;$/;"	m	struct:udpif	typeref:struct:udpif::ovs_mutex	file:
n_flows_timestamp	ofproto/ofproto-dpif-upcall.c	/^    atomic_llong n_flows_timestamp;    \/* Last time n_flows was updated. *\/$/;"	m	struct:udpif	file:
n_frames	lib/backtrace.h	/^    int n_frames;$/;"	m	struct:backtrace
n_from_json	lib/ovsdb-types.c	/^n_from_json(const struct json *json, unsigned int *n)$/;"	f	file:
n_groups	lib/vswitch-idl.h	/^	size_t n_groups;$/;"	m	struct:ovsrec_flow_table
n_groups	ofproto/ofproto.h	/^    size_t n_groups;$/;"	m	struct:ofproto_table_settings
n_handlers	lib/dpif-netlink.c	/^    uint32_t n_handlers;           \/* Num of upcall handlers. *\/$/;"	m	struct:dpif_netlink	file:
n_handlers	ofproto/ofproto-dpif-upcall.c	/^    size_t n_handlers;$/;"	m	struct:udpif	file:
n_handlers	ofproto/ofproto.c	/^size_t n_handlers, n_revalidators;$/;"	v
n_head	lib/stream-ssl.c	/^    short int n_head;$/;"	m	struct:ssl_stream	file:
n_header	lib/vswitch-idl.h	/^	size_t n_header;$/;"	m	struct:ovsrec_sflow
n_hit	datapath/datapath.h	/^	u64 n_hit;$/;"	m	struct:dp_stats_percpu
n_hit	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 n_hit;             \/* Number of flow table matches. *\/$/;"	m	struct:ovs_dp_stats
n_hit	include/odp-netlink.h	/^	ovs_32aligned_u64 n_hit;             \/* Number of flow table matches. *\/$/;"	m	struct:ovs_dp_stats
n_hit	lib/dpif.h	/^    uint64_t n_hit;             \/* Number of flow table matches. *\/$/;"	m	struct:dpif_dp_stats
n_hit	lib/sflow.h	/^    uint32_t n_hit;$/;"	m	struct:_SFLOVSDP_counters
n_hooks	lib/fatal-signal.c	/^static size_t n_hooks;$/;"	v	file:
n_ia	tests/idltest.h	/^	size_t n_ia;$/;"	m	struct:idltest_simple
n_icmp_code	vtep/vtep-idl.h	/^	size_t n_icmp_code;$/;"	m	struct:vteprec_acl_entry
n_icmp_type	vtep/vtep-idl.h	/^	size_t n_icmp_type;$/;"	m	struct:vteprec_acl_entry
n_ids	datapath/vport.h	/^	u32 n_ids;$/;"	m	struct:vport_portids
n_ids	lib/id-pool.c	/^    uint32_t n_ids;        \/* Total number of ids in the pool. *\/$/;"	m	struct:id_pool	file:
n_iface_types	lib/vswitch-idl.h	/^	size_t n_iface_types;$/;"	m	struct:ovsrec_open_vswitch
n_ifindex	lib/vswitch-idl.h	/^	size_t n_ifindex;$/;"	m	struct:ovsrec_interface
n_inactivity_probe	lib/vswitch-idl.h	/^	size_t n_inactivity_probe;$/;"	m	struct:ovsrec_controller
n_inactivity_probe	lib/vswitch-idl.h	/^	size_t n_inactivity_probe;$/;"	m	struct:ovsrec_manager
n_inactivity_probe	vtep/vtep-idl.h	/^	size_t n_inactivity_probe;$/;"	m	struct:vteprec_manager
n_indexes	ovsdb/table.h	/^    size_t n_indexes;$/;"	m	struct:ovsdb_table_schema
n_indices	lib/classifier-private.h	/^    const uint8_t n_indices;                   \/* How many indices to use. *\/$/;"	m	struct:cls_subtable
n_interfaces	lib/vswitch-idl.h	/^	size_t n_interfaces;$/;"	m	struct:ovsrec_port
n_ka	tests/idltest.h	/^	size_t n_ka;$/;"	m	struct:idltest_link1
n_lacp_current	lib/vswitch-idl.h	/^	size_t n_lacp_current;$/;"	m	struct:ovsrec_interface
n_lans	tests/test-rstp.c	/^    int n_lans;$/;"	m	struct:test_case	file:
n_lans	tests/test-stp.c	/^    int n_lans;$/;"	m	struct:test_case	file:
n_limited	ofproto/pinsched.c	/^    unsigned long long n_limited;       \/* # queued for rate limiting. *\/$/;"	m	struct:pinsched	file:
n_limited	ofproto/pinsched.h	/^    unsigned long long n_limited;       \/* # queued for rate limiting. *\/$/;"	m	struct:pinsched_stats
n_link_resets	lib/vswitch-idl.h	/^	size_t n_link_resets;$/;"	m	struct:ovsrec_interface
n_link_speed	lib/vswitch-idl.h	/^	size_t n_link_speed;$/;"	m	struct:ovsrec_interface
n_locators	vtep/vtep-idl.h	/^	size_t n_locators;$/;"	m	struct:vteprec_physical_locator_set
n_lookup_flows	tests/test-classifier.c	/^    size_t n_lookup_flows;$/;"	m	struct:cls_aux	file:
n_lookups	tests/test-classifier.c	/^static int n_lookups;           \/* Number of lookups each thread performs. *\/$/;"	v	file:
n_lost	datapath/datapath.h	/^	u64 n_lost;$/;"	m	struct:dp_stats_percpu
n_lost	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 n_lost;            \/* Number of misses not sent to userspace. *\/$/;"	m	struct:ovs_dp_stats
n_lost	include/odp-netlink.h	/^	ovs_32aligned_u64 n_lost;            \/* Number of misses not sent to userspace. *\/$/;"	m	struct:ovs_dp_stats
n_lost	lib/dpif.h	/^    uint64_t n_lost;            \/* Number of misses not sent to userspace. *\/$/;"	m	struct:dpif_dp_stats
n_lost	lib/sflow.h	/^    uint32_t n_lost;$/;"	m	struct:_SFLOVSDP_counters
n_mac	ovn/lib/ovn-sb-idl.h	/^	size_t n_mac;$/;"	m	struct:sbrec_port_binding
n_management_ips	vtep/vtep-idl.h	/^	size_t n_management_ips;$/;"	m	struct:vteprec_physical_switch
n_manager_options	lib/vswitch-idl.h	/^	size_t n_manager_options;$/;"	m	struct:ovsrec_open_vswitch
n_managers	vtep/vtep-idl.h	/^	size_t n_managers;$/;"	m	struct:vteprec_global
n_mappings	lib/vswitch-idl.h	/^	size_t n_mappings;$/;"	m	struct:ovsrec_autoattach
n_mask_hit	datapath/datapath.h	/^	u64 n_mask_hit;$/;"	m	struct:dp_stats_percpu
n_mask_hit	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 n_mask_hit;	 \/* Number of masks used for flow lookups. *\/$/;"	m	struct:ovs_dp_megaflow_stats
n_mask_hit	include/odp-netlink.h	/^	ovs_32aligned_u64 n_mask_hit;	 \/* Number of masks used for flow lookups. *\/$/;"	m	struct:ovs_dp_megaflow_stats
n_mask_hit	lib/dpif.h	/^    uint64_t n_mask_hit;        \/* Number of mega flow masks visited for$/;"	m	struct:dpif_dp_stats
n_mask_hit	lib/sflow.h	/^    uint32_t n_mask_hit;$/;"	m	struct:_SFLOVSDP_counters
n_masks	datapath/linux/compat/include/linux/openvswitch.h	/^	__u32 n_masks;		 \/* Number of masks for the datapath. *\/$/;"	m	struct:ovs_dp_megaflow_stats
n_masks	include/odp-netlink.h	/^	uint32_t n_masks;		 \/* Number of masks for the datapath. *\/$/;"	m	struct:ovs_dp_megaflow_stats
n_masks	lib/dpif.h	/^    uint32_t n_masks;           \/* Number of mega flow masks. *\/$/;"	m	struct:dpif_dp_stats
n_masks	lib/sflow.h	/^    uint32_t n_masks;$/;"	m	struct:_SFLOVSDP_counters
n_matched	ofproto/ofproto-provider.h	/^    atomic_ulong n_matched;$/;"	m	struct:oftable
n_matches	ovsdb/execution.c	/^    size_t n_matches;$/;"	m	struct:delete_row_cbdata	file:
n_matches	ovsdb/execution.c	/^    size_t n_matches;$/;"	m	struct:mutate_row_cbdata	file:
n_matches	ovsdb/execution.c	/^    size_t n_matches;$/;"	m	struct:update_row_cbdata	file:
n_max	lib/ovsdb-types.h	/^    unsigned int n_max;         \/* UINT_MAX stands in for "unlimited". *\/$/;"	m	struct:ovsdb_type
n_max_backoff	lib/vswitch-idl.h	/^	size_t n_max_backoff;$/;"	m	struct:ovsrec_controller
n_max_backoff	lib/vswitch-idl.h	/^	size_t n_max_backoff;$/;"	m	struct:ovsrec_manager
n_max_backoff	vtep/vtep-idl.h	/^	size_t n_max_backoff;$/;"	m	struct:vteprec_manager
n_mcgrps	datapath/linux/compat/include/net/genetlink.h	/^	unsigned int            n_mcgrps;       \/* private *\/$/;"	m	struct:rpl_genl_family
n_min	lib/ovsdb-types.h	/^    unsigned int n_min;$/;"	m	struct:ovsdb_type
n_mirrors	lib/vswitch-idl.h	/^	size_t n_mirrors;$/;"	m	struct:ovsrec_bridge
n_missed	datapath/datapath.h	/^	u64 n_missed;$/;"	m	struct:dp_stats_percpu
n_missed	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 n_missed;          \/* Number of flow table misses. *\/$/;"	m	struct:ovs_dp_stats
n_missed	include/odp-netlink.h	/^	ovs_32aligned_u64 n_missed;          \/* Number of flow table misses. *\/$/;"	m	struct:ovs_dp_stats
n_missed	lib/dpif.h	/^    uint64_t n_missed;          \/* Number of flow table misses. *\/$/;"	m	struct:dpif_dp_stats
n_missed	lib/sflow.h	/^    uint32_t n_missed;$/;"	m	struct:_SFLOVSDP_counters
n_missed	ofproto/ofproto-provider.h	/^    atomic_ulong n_missed;$/;"	m	struct:oftable
n_modify	ofproto/connmgr.c	/^    int n_add, n_delete, n_modify; \/* Number of unreported ops of each kind. *\/$/;"	m	struct:ofconn	file:
n_monitors	lib/rconn.c	/^    size_t n_monitors;$/;"	m	struct:rconn	file:
n_mtu	lib/vswitch-idl.h	/^	size_t n_mtu;$/;"	m	struct:ovsrec_interface
n_mutations	ovsdb/mutation.h	/^    size_t n_mutations;$/;"	m	struct:ovsdb_mutation_set
n_neoteric_ifaces	utilities/ovs-vsctl.c	/^static size_t n_neoteric_ifaces;$/;"	v	file:
n_normal	ofproto/pinsched.c	/^    unsigned long long n_normal;        \/* # txed w\/o rate limit queuing. *\/$/;"	m	struct:pinsched	file:
n_normal	ofproto/pinsched.h	/^    unsigned long long n_normal;        \/* # txed w\/o rate limit queuing. *\/$/;"	m	struct:pinsched_stats
n_obs_domain_id	lib/vswitch-idl.h	/^	size_t n_obs_domain_id;$/;"	m	struct:ovsrec_ipfix
n_obs_point_id	lib/vswitch-idl.h	/^	size_t n_obs_point_id;$/;"	m	struct:ovsrec_ipfix
n_ofport	lib/vswitch-idl.h	/^	size_t n_ofport;$/;"	m	struct:ovsrec_interface
n_ofport_request	lib/vswitch-idl.h	/^	size_t n_ofport_request;$/;"	m	struct:ovsrec_interface
n_ofproto_classes	ofproto/ofproto.c	/^static size_t n_ofproto_classes;$/;"	v	file:
n_ops	datapath/linux/compat/include/net/genetlink.h	/^	unsigned int            n_ops;          \/* private *\/$/;"	m	struct:rpl_genl_family
n_output_vlan	lib/vswitch-idl.h	/^	size_t n_output_vlan;$/;"	m	struct:ovsrec_mirror
n_packets	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 n_packets;         \/* Number of matched packets. *\/$/;"	m	struct:ovs_flow_stats
n_packets	include/odp-netlink.h	/^	ovs_32aligned_u64 n_packets;         \/* Number of matched packets. *\/$/;"	m	struct:ovs_flow_stats
n_packets	lib/dpif.h	/^    uint64_t n_packets;$/;"	m	struct:dpif_flow_stats
n_packets	lib/vconn-stream.c	/^    int n_packets;$/;"	m	struct:vconn_stream	file:
n_polling	lib/vswitch-idl.h	/^	size_t n_polling;$/;"	m	struct:ovsrec_sflow
n_port_fault_status	vtep/vtep-idl.h	/^	size_t n_port_fault_status;$/;"	m	struct:vteprec_physical_port
n_port_security	ovn/lib/ovn-nb-idl.h	/^	size_t n_port_security;$/;"	m	struct:nbrec_logical_port
n_ports	lib/vswitch-idl.h	/^	size_t n_ports;$/;"	m	struct:ovsrec_bridge
n_ports	ovn/lib/ovn-nb-idl.h	/^	size_t n_ports;$/;"	m	struct:nbrec_logical_router
n_ports	ovn/lib/ovn-nb-idl.h	/^	size_t n_ports;$/;"	m	struct:nbrec_logical_switch
n_ports	ovn/lib/ovn-sb-idl.h	/^	size_t n_ports;$/;"	m	struct:sbrec_multicast_group
n_ports	ovn/northd/ovn-northd.c	/^    size_t n_ports, allocated_ports;$/;"	m	struct:ovn_multicast	file:
n_ports	tests/test-rstp.c	/^    int n_ports;$/;"	m	struct:bridge	file:
n_ports	tests/test-stp.c	/^    int n_ports;$/;"	m	struct:bridge	file:
n_ports	vtep/vtep-idl.h	/^	size_t n_ports;$/;"	m	struct:vteprec_physical_switch
n_prefix_fields	ofproto/ofproto.h	/^    unsigned int n_prefix_fields;$/;"	m	struct:ofproto_table_settings
n_prefixes	lib/vswitch-idl.h	/^	size_t n_prefixes;$/;"	m	struct:ovsrec_flow_table
n_priorities	tests/test-classifier.c	/^static int n_priorities;        \/* Number of priorities to use. *\/$/;"	v	file:
n_processed	ovsdb/transaction.c	/^    unsigned int n_processed;   \/* Number of rows processed. *\/$/;"	m	struct:ovsdb_txn_table	file:
n_protocol	vtep/vtep-idl.h	/^	size_t n_protocol;$/;"	m	struct:vteprec_acl_entry
n_protocols	lib/vswitch-idl.h	/^	size_t n_protocols;$/;"	m	struct:ovsrec_bridge
n_qdscp	ofproto/ofproto-dpif.c	/^    size_t n_qdscp;$/;"	m	struct:ofport_dpif	file:
n_queue_dropped	ofproto/pinsched.c	/^    unsigned long long n_queue_dropped; \/* # dropped due to queue overflow. *\/$/;"	m	struct:pinsched	file:
n_queue_dropped	ofproto/pinsched.h	/^    unsigned long long n_queue_dropped; \/* # dropped due to queue overflow. *\/$/;"	m	struct:pinsched_stats
n_queued	ofproto/pinsched.c	/^    unsigned int n_queued;      \/* Sum over queues[*].n. *\/$/;"	m	struct:pinsched	file:
n_queued	ofproto/pinsched.h	/^    unsigned int n_queued;              \/* # currently queued to send. *\/$/;"	m	struct:pinsched_stats
n_queues	lib/netdev-linux.c	/^    size_t n_queues;$/;"	m	struct:netdev_linux_queue_state	file:
n_queues	lib/netdev-linux.c	/^    unsigned int n_queues;$/;"	m	struct:tc_ops	file:
n_queues	lib/netdev.h	/^    unsigned int n_queues;$/;"	m	struct:netdev_qos_capabilities
n_queues	lib/vswitch-idl.h	/^	size_t n_queues;$/;"	m	struct:ovsrec_qos
n_ra	tests/idltest.h	/^	size_t n_ra;$/;"	m	struct:idltest_simple
n_recircs	ofproto/ofproto-dpif-upcall.c	/^    unsigned n_recircs;$/;"	m	struct:udpif_key	file:
n_recircs	ofproto/ofproto-dpif-xlate.h	/^    unsigned n_recircs;$/;"	m	struct:xlate_out
n_recs	vswitchd/bridge.c	/^static size_t n_recs, allocated_recs;$/;"	v	file:
n_refs	ovsdb/monitor.c	/^    int n_refs;$/;"	m	struct:ovsdb_monitor_changes	file:
n_refs	ovsdb/row.h	/^    size_t n_refs;$/;"	m	struct:ovsdb_row
n_refs	ovsdb/transaction.c	/^    size_t n_refs;              \/* Number of remaining references. *\/$/;"	m	struct:ovsdb_txn_row	file:
n_remotes	ofproto/in-band.c	/^    size_t n_remotes;$/;"	m	struct:in_band	file:
n_revalidators	ofproto/ofproto-dpif-upcall.c	/^    size_t n_revalidators;$/;"	m	struct:udpif	file:
n_revalidators	ofproto/ofproto.c	/^size_t n_handlers, n_revalidators;$/;"	v
n_rmps	lib/cfm.h	/^    size_t n_rmps;$/;"	m	struct:cfm_status
n_router_ports	ovn/northd/ovn-northd.c	/^    size_t n_router_ports;$/;"	m	struct:ovn_datapath	file:
n_rows	lib/table.h	/^    size_t n_rows, allocated_rows;$/;"	m	struct:table
n_rows	ovsdb/row.h	/^    size_t n_rows, allocated_rows;$/;"	m	struct:ovsdb_row_set
n_rows	tests/test-ovsdb.c	/^    size_t n_rows;$/;"	m	struct:do_query_cbdata	file:
n_rstp_statistics	lib/vswitch-idl.h	/^	size_t n_rstp_statistics;$/;"	m	struct:ovsrec_port
n_rules	lib/classifier-private.h	/^    unsigned int n_rules;      \/* Number of rules that have this prefix. *\/$/;"	m	struct:trie_node
n_rules	lib/classifier.h	/^    int n_rules;                    \/* Total number of rules. *\/$/;"	m	struct:classifier
n_rules	tests/test-classifier.c	/^    size_t n_rules;$/;"	m	struct:tcls	file:
n_rules	tests/test-classifier.c	/^static int n_rules;             \/* Number of rules to insert. *\/$/;"	v	file:
n_rxq	lib/netdev-provider.h	/^    int n_rxq;$/;"	m	struct:netdev
n_sa	tests/idltest.h	/^	size_t n_sa;$/;"	m	struct:idltest_simple
n_sampling	lib/vswitch-idl.h	/^	size_t n_sampling;$/;"	m	struct:ovsrec_ipfix
n_sampling	lib/vswitch-idl.h	/^	size_t n_sampling;$/;"	m	struct:ovsrec_sflow
n_select_dst_port	lib/vswitch-idl.h	/^	size_t n_select_dst_port;$/;"	m	struct:ovsrec_mirror
n_select_src_port	lib/vswitch-idl.h	/^	size_t n_select_src_port;$/;"	m	struct:ovsrec_mirror
n_select_vlan	lib/vswitch-idl.h	/^	size_t n_select_vlan;$/;"	m	struct:ovsrec_mirror
n_sessions	ovsdb/jsonrpc-server.c	/^    unsigned int n_sessions, max_sessions;$/;"	m	struct:ovsdb_jsonrpc_server	file:
n_slaves	lib/ofp-actions.c	/^    ovs_be16 n_slaves;          \/* Number of slaves. *\/$/;"	m	struct:nx_action_bundle	file:
n_slaves	lib/ofp-actions.h	/^    unsigned int n_slaves;$/;"	m	struct:ofpact_bundle
n_slaves	ofproto/ofproto.h	/^    size_t n_slaves;$/;"	m	struct:ofproto_bundle_settings
n_slaves	tests/test-bundle.c	/^    size_t n_slaves;$/;"	m	struct:slave_group	file:
n_snoops	ofproto/connmgr.c	/^    size_t n_snoops;$/;"	m	struct:connmgr	file:
n_sockets	utilities/ovs-benchmark.c	/^static int n_sockets = 100;$/;"	v	file:
n_source_port_max	vtep/vtep-idl.h	/^	size_t n_source_port_max;$/;"	m	struct:vteprec_acl_entry
n_source_port_min	vtep/vtep-idl.h	/^	size_t n_source_port_min;$/;"	m	struct:vteprec_acl_entry
n_specs	lib/ofp-actions.h	/^    unsigned int n_specs;$/;"	m	struct:ofpact_learn
n_srcs	ofproto/ofproto.h	/^    size_t n_srcs;$/;"	m	struct:ofproto_mirror_settings
n_statistics	lib/vswitch-idl.h	/^	size_t n_statistics;$/;"	m	struct:ovsrec_interface
n_statistics	lib/vswitch-idl.h	/^	size_t n_statistics;$/;"	m	struct:ovsrec_mirror
n_statistics	lib/vswitch-idl.h	/^	size_t n_statistics;$/;"	m	struct:ovsrec_port
n_streams	lib/netdev-dummy.c	/^    size_t n_streams;$/;"	m	struct:dummy_packet_pconn	file:
n_successful_connections	lib/rconn.c	/^    unsigned int n_attempted_connections, n_successful_connections;$/;"	m	struct:rconn	file:
n_successful_connections	lib/reconnect.c	/^    unsigned int n_attempted_connections, n_successful_connections;$/;"	m	struct:reconnect	file:
n_successful_connections	lib/reconnect.h	/^    unsigned int n_successful_connections;$/;"	m	struct:reconnect_stats
n_switch_binding	vtep/vtep-idl.h	/^	size_t n_switch_binding;$/;"	m	struct:vteprec_logical_router
n_switch_fault_status	vtep/vtep-idl.h	/^	size_t n_switch_fault_status;$/;"	m	struct:vteprec_physical_switch
n_switches	vtep/vtep-idl.h	/^	size_t n_switches;$/;"	m	struct:vteprec_global
n_tables	include/openflow/openflow-common.h	/^    uint8_t n_tables;       \/* Number of tables supported by datapath. *\/$/;"	m	struct:ofp_switch_features
n_tables	lib/ofp-util.h	/^    uint8_t n_tables;           \/* Number of tables supported by datapath. *\/$/;"	m	struct:ofputil_switch_features
n_tables	lib/ovsdb-idl-provider.h	/^    size_t n_tables;$/;"	m	struct:ovsdb_idl_class
n_tables	ofproto/ofproto-provider.h	/^    int n_tables;$/;"	m	struct:ofproto
n_tables	ovn/lib/actions.c	/^    uint8_t n_tables;           \/* Number of flow tables. *\/$/;"	m	struct:action_context	file:
n_tables	tests/test-classifier.c	/^static int n_tables;            \/* Number of subtables. *\/$/;"	v	file:
n_tag	lib/vswitch-idl.h	/^	size_t n_tag;$/;"	m	struct:ovsrec_port
n_tag	ovn/lib/ovn-nb-idl.h	/^	size_t n_tag;$/;"	m	struct:nbrec_logical_port
n_tag	ovn/lib/ovn-sb-idl.h	/^	size_t n_tag;$/;"	m	struct:sbrec_port_binding
n_targets	lib/vswitch-idl.h	/^	size_t n_targets;$/;"	m	struct:ovsrec_ipfix
n_targets	lib/vswitch-idl.h	/^	size_t n_targets;$/;"	m	struct:ovsrec_netflow
n_targets	lib/vswitch-idl.h	/^	size_t n_targets;$/;"	m	struct:ovsrec_sflow
n_tcp_flags	vtep/vtep-idl.h	/^	size_t n_tcp_flags;$/;"	m	struct:vteprec_acl_entry
n_tcp_flags_mask	vtep/vtep-idl.h	/^	size_t n_tcp_flags_mask;$/;"	m	struct:vteprec_acl_entry
n_threads	tests/test-classifier.c	/^static int n_threads;           \/* Number of threads to search and mutate. *\/$/;"	v	file:
n_threads	tests/test-cmap.c	/^static int n_threads;           \/* Number of threads to search and mutate. *\/$/;"	v	file:
n_transactions	ovsdb/file.c	/^    unsigned int n_transactions;$/;"	m	struct:ovsdb_file	file:
n_transactions	ovsdb/monitor.c	/^    uint64_t n_transactions;      \/* Count number of committed transactions. *\/$/;"	m	struct:ovsdb_monitor	file:
n_tries	lib/classifier.h	/^    unsigned int n_tries;$/;"	m	struct:classifier
n_trunks	lib/vswitch-idl.h	/^	size_t n_trunks;$/;"	m	struct:ovsrec_port
n_tunnel_ips	vtep/vtep-idl.h	/^	size_t n_tunnel_ips;$/;"	m	struct:vteprec_physical_switch
n_tunnel_key	vtep/vtep-idl.h	/^	size_t n_tunnel_key;$/;"	m	struct:vteprec_logical_switch
n_tunnels	datapath/linux/compat/stt.c	/^static int n_tunnels;$/;"	v	file:
n_tunnels	datapath/linux/stt.c	/^static int n_tunnels;$/;"	v	file:
n_tunnels	vtep/vtep-idl.h	/^	size_t n_tunnels;$/;"	m	struct:vteprec_physical_switch
n_txq	lib/netdev-provider.h	/^    int n_txq;$/;"	m	struct:netdev
n_ua	tests/idltest.h	/^	size_t n_ua;$/;"	m	struct:idltest_simple
n_unique	lib/hindex.h	/^    size_t n_unique;  \/* Number of unique hashes (the number of head nodes). *\/$/;"	m	struct:hindex
n_up	ovn/lib/ovn-nb-idl.h	/^	size_t n_up;$/;"	m	struct:nbrec_logical_port
n_upcall_pids	lib/dpif-netlink.h	/^    uint32_t n_upcall_pids;$/;"	m	struct:dpif_netlink_vport
n_values	ovn/lib/expr.c	/^    size_t n_values;              \/* Number of constants. *\/$/;"	m	struct:expr_constant_set	file:
n_vlan_bindings	vtep/vtep-idl.h	/^	size_t n_vlan_bindings;$/;"	m	struct:vteprec_physical_port
n_vlan_stats	vtep/vtep-idl.h	/^	size_t n_vlan_stats;$/;"	m	struct:vteprec_physical_port
n_vtep_logical_switches	ovn/lib/ovn-sb-idl.h	/^	size_t n_vtep_logical_switches;$/;"	m	struct:sbrec_chassis
n_warnings	tests/test-rstp.c	/^static int n_warnings;$/;"	v	file:
n_warnings	tests/test-stp.c	/^static int n_warnings;$/;"	v	file:
name	build-aux/check-structs	/^                name = token$/;"	v
name	datapath-windows/ovsext/Datapath.c	/^    CHAR *name;$/;"	m	struct:_NETLINK_FAMILY	file:
name	datapath-windows/ovsext/DpInternal.h	/^    char     name[OVS_MAX_PORT_NAME_LENGTH];$/;"	m	struct:_OVS_VPORT_GET
name	datapath-windows/ovsext/DpInternal.h	/^    char name[OVS_MAX_PORT_NAME_LENGTH];$/;"	m	struct:_OVS_VPORT_EXT_INFO
name	datapath/linux/compat/include/net/genetlink.h	/^	char                    name[GENL_NAMSIZ];$/;"	m	struct:rpl_genl_family
name	datapath/linux/vport-geneve.c	/^	char name[IFNAMSIZ];$/;"	m	struct:geneve_port	file:
name	datapath/linux/vport-lisp.c	/^	char name[IFNAMSIZ];$/;"	m	struct:lisp_port	file:
name	datapath/linux/vport-stt.c	/^	char name[IFNAMSIZ];$/;"	m	struct:stt_port	file:
name	datapath/linux/vport-vxlan.c	/^	char name[IFNAMSIZ];$/;"	m	struct:vxlan_port	file:
name	datapath/vport-geneve.c	/^	char name[IFNAMSIZ];$/;"	m	struct:geneve_port	file:
name	datapath/vport-lisp.c	/^	char name[IFNAMSIZ];$/;"	m	struct:lisp_port	file:
name	datapath/vport-stt.c	/^	char name[IFNAMSIZ];$/;"	m	struct:stt_port	file:
name	datapath/vport-vxlan.c	/^	char name[IFNAMSIZ];$/;"	m	struct:vxlan_port	file:
name	datapath/vport.h	/^	const char *name;$/;"	m	struct:vport_parms
name	include/openflow/openflow-1.0.h	/^    char name[OFP_MAX_PORT_NAME_LEN]; \/* Null-terminated *\/$/;"	m	struct:ofp10_phy_port
name	include/openflow/openflow-1.0.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp10_table_stats
name	include/openflow/openflow-1.1.h	/^    char name[OFP_MAX_PORT_NAME_LEN]; \/* Null-terminated *\/$/;"	m	struct:ofp11_port
name	include/openflow/openflow-1.1.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp11_table_stats
name	include/openflow/openflow-1.2.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp12_table_stats
name	include/openflow/openflow-1.3.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp13_table_features
name	include/openflow/openflow-1.4.h	/^    char name[OFP_MAX_PORT_NAME_LEN]; \/* Null-terminated *\/$/;"	m	struct:ofp14_port
name	include/openvswitch/vlog.h	/^    const char *name;             \/* User-visible name. *\/$/;"	m	struct:vlog_module
name	include/windows/getopt.h	/^	const char *name;$/;"	m	struct:option
name	lib/bfd.c	/^    char *name;                   \/* Name used for logging. *\/$/;"	m	struct:bfd	file:
name	lib/cfm.c	/^    const char *name;           \/* Name of this CFM object. *\/$/;"	m	struct:cfm	file:
name	lib/command-line.h	/^    const char *name;$/;"	m	struct:ovs_cmdl_command
name	lib/coverage.h	/^    const char *const name;            \/* Textual name. *\/$/;"	m	struct:coverage_counter
name	lib/db-ctl-base.h	/^    const char *name;           \/* e.g. "add-br" *\/$/;"	m	struct:ctl_command_syntax
name	lib/dpctl.c	/^    const char *name;$/;"	m	struct:dpctl_command	file:
name	lib/dpif-netdev.c	/^    char *name;$/;"	m	struct:dp_netdev_port_state	file:
name	lib/dpif-netdev.c	/^    const char *const name;$/;"	m	struct:dp_netdev	file:
name	lib/dpif-netlink.c	/^    const char *name;                  \/* OVS_DP_ATTR_NAME. *\/$/;"	m	struct:dpif_netlink_dp	file:
name	lib/dpif-netlink.h	/^    const char *name;                      \/* OVS_VPORT_ATTR_NAME. *\/$/;"	m	struct:dpif_netlink_vport
name	lib/dpif.h	/^    char *name;                 \/* Network device name, e.g. "eth0". *\/$/;"	m	struct:dpif_port
name	lib/jsonrpc.c	/^    char *name;$/;"	m	struct:jsonrpc	file:
name	lib/lacp.c	/^    char *name;                   \/* Name of this lacp object. *\/$/;"	m	struct:lacp	file:
name	lib/lacp.c	/^    char *name;                   \/* Name of this slave. *\/$/;"	m	struct:slave	file:
name	lib/lacp.h	/^    char *name;                       \/* Name (for debugging). *\/$/;"	m	struct:lacp_settings
name	lib/lacp.h	/^    char *name;                       \/* Name (for debugging). *\/$/;"	m	struct:lacp_slave_settings
name	lib/lldp/lldpd.h	/^    char *name;      \/* Name of protocol *\/$/;"	m	struct:protocol
name	lib/lockfile.c	/^    char *name;$/;"	m	struct:lockfile	file:
name	lib/meta-flow.c	/^    const char *name;$/;"	m	struct:frag_handling	file:
name	lib/meta-flow.h	/^    const char *name;           \/* Name of this field, e.g. "eth_type". *\/$/;"	m	struct:mf_field
name	lib/netdev-provider.h	/^    char *name;                         \/* Name of network device. *\/$/;"	m	struct:netdev
name	lib/netdev-windows.c	/^    const char *name;$/;"	m	struct:netdev_windows_netdev_info	file:
name	lib/netlink-socket.c	/^    char *name;$/;"	m	struct:genl_family	file:
name	lib/nx-match.c	/^    const char *name;           \/* e.g. "NXM_OF_IN_PORT". *\/$/;"	m	struct:nxm_field	file:
name	lib/odp-util.h	/^    char *name;                 \/* Name associated with the above 'port_no'. *\/$/;"	m	struct:odp_portno_names
name	lib/ofp-actions.c	/^    const char *name;$/;"	m	struct:instruction_type_info	file:
name	lib/ofp-actions.c	/^    const char *name;$/;"	m	struct:ofpact_raw_instance	file:
name	lib/ofp-msgs.c	/^    const char *name;$/;"	m	struct:raw_info	file:
name	lib/ofp-parse.c	/^    const char *name;$/;"	m	struct:protocol	file:
name	lib/ofp-util.c	/^    const char *name;$/;"	m	struct:proto_abbrev	file:
name	lib/ofp-util.h	/^    char name[OFP_MAX_PORT_NAME_LEN];$/;"	m	struct:ofputil_phy_port
name	lib/ofp-util.h	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofputil_table_features
name	lib/ovs-lldp.h	/^    char                *name;            \/* Name of the port. *\/$/;"	m	struct:lldp
name	lib/ovs-rcu.c	/^    char name[16];              \/* This thread's name. *\/$/;"	m	struct:ovsrcu_perthread	file:
name	lib/ovs-thread.c	/^    char name[16];$/;"	m	struct:ovsthread_aux	file:
name	lib/ovsdb-idl-provider.h	/^    char *name;$/;"	m	struct:ovsdb_idl_column
name	lib/ovsdb-idl-provider.h	/^    char *name;$/;"	m	struct:ovsdb_idl_table_class
name	lib/ovsdb-parser.h	/^    char *name;                 \/* Used only in error messages. *\/$/;"	m	struct:ovsdb_parser
name	lib/perf-counter.h	/^    const char *name;$/;"	m	struct:perf_counter
name	lib/process.c	/^    char *name;$/;"	m	struct:process	file:
name	lib/rconn.c	/^    char *name;                 \/* Human-readable descriptive name. *\/$/;"	m	struct:rconn	file:
name	lib/reconnect.c	/^    char *name;$/;"	m	struct:reconnect	file:
name	lib/rstp-common.h	/^    char *name;     \/* Bridge name. *\/$/;"	m	struct:rstp
name	lib/shash.h	/^    char *name;$/;"	m	struct:shash_node
name	lib/simap.h	/^    char *name;$/;"	m	struct:simap_node
name	lib/sset.h	/^    char name[1];$/;"	m	struct:sset_node
name	lib/stp.c	/^    char *name;                     \/* Human-readable name for log messages. *\/$/;"	m	struct:stp	file:
name	lib/stream-provider.h	/^    char *name;$/;"	m	struct:pstream
name	lib/stream-provider.h	/^    char *name;$/;"	m	struct:stream
name	lib/stream-provider.h	/^    const char *name;$/;"	m	struct:pstream_class
name	lib/stream-provider.h	/^    const char *name;$/;"	m	struct:stream_class
name	lib/vconn-provider.h	/^    char *name;$/;"	m	struct:pvconn
name	lib/vconn-provider.h	/^    char *name;$/;"	m	struct:vconn
name	lib/vconn-provider.h	/^    const char *name;$/;"	m	struct:pvconn_class
name	lib/vconn-provider.h	/^    const char *name;$/;"	m	struct:vconn_class
name	lib/vlandev.h	/^    char *name;                     \/* VLAN device name, e.g. "eth0.10". *\/$/;"	m	struct:vlan_dev
name	lib/vlandev.h	/^    char *name;                 \/* Name, e.g. "eth0". *\/$/;"	m	struct:vlan_real_dev
name	lib/vlog.c	/^    char *name;           \/* Name. *\/$/;"	m	struct:vlog_facility	file:
name	lib/vlog.c	/^    const char *name;           \/* Name. *\/$/;"	m	struct:destination	file:
name	lib/vswitch-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_bridge
name	lib/vswitch-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_interface
name	lib/vswitch-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_mirror
name	lib/vswitch-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_port
name	lib/vswitch-idl.h	/^	char *name;$/;"	m	struct:ovsrec_flow_table
name	ofproto/bond.c	/^    char *name;                 \/* Name (a copy of netdev_get_name(netdev)). *\/$/;"	m	struct:bond_slave	file:
name	ofproto/bond.c	/^    char *name;                 \/* Name provided by client. *\/$/;"	m	struct:bond	file:
name	ofproto/bond.h	/^    char *name;                 \/* Bond's name, for log messages. *\/$/;"	m	struct:bond_settings
name	ofproto/connmgr.c	/^    char *name;$/;"	m	struct:connmgr	file:
name	ofproto/ofproto-dpif-xlate.c	/^    char *name;                    \/* Name used in log messages. *\/$/;"	m	struct:xbundle	file:
name	ofproto/ofproto-dpif-xlate.c	/^    char *name;                   \/* Name used in log messages. *\/$/;"	m	struct:xbridge	file:
name	ofproto/ofproto-dpif.c	/^    char *name;                 \/* Identifier for log messages. *\/$/;"	m	struct:ofbundle	file:
name	ofproto/ofproto-provider.h	/^    char *name;                 \/* Datapath name. *\/$/;"	m	struct:ofproto
name	ofproto/ofproto-provider.h	/^    char *name;                 \/* Table name exposed via OpenFlow, or NULL. *\/$/;"	m	struct:oftable
name	ofproto/ofproto.h	/^    char *name;                 \/* For use in log messages. *\/$/;"	m	struct:ofproto_bundle_settings
name	ofproto/ofproto.h	/^    char *name;                 \/* Name exported via OpenFlow or NULL. *\/$/;"	m	struct:ofproto_table_settings
name	ofproto/ofproto.h	/^    char *name;                 \/* Network device name, e.g. "eth0". *\/$/;"	m	struct:ofproto_port
name	ofproto/ofproto.h	/^    char *name;$/;"	m	struct:ofproto_mirror_settings
name	ovn/lib/expr.h	/^    char *name;$/;"	m	struct:expr_symbol
name	ovn/lib/ovn-nb-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_logical_port
name	ovn/lib/ovn-nb-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_logical_router
name	ovn/lib/ovn-nb-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_logical_router_port
name	ovn/lib/ovn-nb-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_logical_switch
name	ovn/lib/ovn-sb-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_chassis
name	ovn/lib/ovn-sb-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_multicast_group
name	ovn/northd/ovn-northd.c	/^    const char *name;$/;"	m	struct:multicast_group	file:
name	ovsdb/column.h	/^    char *name;$/;"	m	struct:ovsdb_column
name	ovsdb/log.c	/^    char *name;$/;"	m	struct:ovsdb_log	file:
name	ovsdb/ovsdb-client.c	/^    const char *name;$/;"	m	struct:ovsdb_client_command	file:
name	ovsdb/ovsdb-doc	/^            name = dbNode.attributes['name'].nodeValue$/;"	v
name	ovsdb/ovsdb.h	/^    char *name;$/;"	m	struct:ovsdb_schema
name	ovsdb/server.h	/^    char *name;                  \/* Unique name. *\/$/;"	m	struct:ovsdb_lock
name	ovsdb/table.h	/^    char *name;$/;"	m	struct:ovsdb_table_schema
name	python/ovs/reconnect.py	/^        name = "ACTIVE"$/;"	v	class:Reconnect.Active
name	python/ovs/reconnect.py	/^        name = "BACKOFF"$/;"	v	class:Reconnect.Backoff
name	python/ovs/reconnect.py	/^        name = "CONNECTING"$/;"	v	class:Reconnect.ConnectInProgress
name	python/ovs/reconnect.py	/^        name = "IDLE"$/;"	v	class:Reconnect.Idle
name	python/ovs/reconnect.py	/^        name = "LISTENING"$/;"	v	class:Reconnect.Listening
name	python/ovs/reconnect.py	/^        name = "RECONNECT"$/;"	v	class:Reconnect.Reconnect
name	python/ovs/reconnect.py	/^        name = "VOID"$/;"	v	class:Reconnect.Void
name	python/setup.py	/^    name='ovs',$/;"	v
name	tests/test-classifier.c	/^    const char *name;           \/* Name (for debugging). *\/$/;"	m	struct:cls_field	file:
name	tests/test-lockfile.c	/^    const char *name;$/;"	m	struct:test	file:
name	tests/test-rstp.c	/^    const char *name;$/;"	m	struct:lan	file:
name	tests/test-stp.c	/^    const char *name;$/;"	m	struct:lan	file:
name	utilities/ovs-vsctl.c	/^    char *name;$/;"	m	struct:vsctl_bridge	file:
name	vswitchd/bridge.c	/^    char *name;                 \/* Host network device name. *\/$/;"	m	struct:iface	file:
name	vswitchd/bridge.c	/^    char *name;                 \/* User-specified arbitrary name. *\/$/;"	m	struct:bridge	file:
name	vswitchd/bridge.c	/^    char *name;$/;"	m	struct:mirror	file:
name	vswitchd/bridge.c	/^    char *name;$/;"	m	struct:port	file:
name	vswitchd/system-stats.c	/^    char name[18];              \/* Name (surrounded by parentheses). *\/$/;"	m	struct:raw_process_info	file:
name	vtep/vtep-ctl.c	/^    char *name;$/;"	m	struct:vtep_ctl_lswitch	file:
name	vtep/vtep-ctl.c	/^    char *name;$/;"	m	struct:vtep_ctl_pswitch	file:
name	vtep/vtep-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_logical_router
name	vtep/vtep-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_logical_switch
name	vtep/vtep-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_physical_port
name	vtep/vtep-idl.h	/^	char *name;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_physical_switch
name_column	lib/db-ctl-base.h	/^    const struct ovsdb_idl_column *name_column;$/;"	m	struct:cmd_show_table	typeref:struct:cmd_show_table::ovsdb_idl_column
name_column	lib/db-ctl-base.h	/^    const struct ovsdb_idl_column *name_column;$/;"	m	struct:ctl_row_id	typeref:struct:ctl_row_id::ovsdb_idl_column
name_column	lib/db-ctl-base.h	/^    const struct ovsdb_idl_column *name_column;$/;"	m	struct:weak_ref_table	typeref:struct:weak_ref_table::ovsdb_idl_column
name_node	lib/nx-match.c	/^    struct hmap_node name_node;   \/* In nxm_name_map. *\/$/;"	m	struct:nxm_field_index	typeref:struct:nxm_field_index::hmap_node	file:
name_node	vswitchd/bridge.c	/^    struct hmap_node name_node; \/* In struct bridge's "iface_by_name" hmap. *\/$/;"	m	struct:iface	typeref:struct:iface::hmap_node	file:
name_notifier	lib/route-table.c	/^static struct nln_notifier *name_notifier = NULL;$/;"	v	typeref:struct:nln_notifier	file:
name_table_change	lib/route-table.c	/^name_table_change(const struct rtnetlink_change *change OVS_UNUSED,$/;"	f	file:
name_table_init	lib/route-table.c	/^name_table_init(void)$/;"	f	file:
names	lib/svec.h	/^    char **names;$/;"	m	struct:svec
nat	lib/sflow.h	/^    SFLExtended_nat nat;$/;"	m	union:_SFLFlow_type
natEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t natEncodingLength(SFLExtended_nat *nat) {$/;"	f	file:
nbCount	datapath-windows/ovsext/BufferMgmt.h	/^    LONG          nbCount;$/;"	m	struct:_OVS_NBL_POOL
nbPool	datapath-windows/ovsext/BufferMgmt.h	/^    NDIS_HANDLE   nbPool;        \/\/ NB for clone$/;"	m	struct:_OVS_NBL_POOL
nbctl	ovn/utilities/ovn-nbctl.c	/^VLOG_DEFINE_THIS_MODULE(nbctl);$/;"	v
nbctl_acl_add	ovn/utilities/ovn-nbctl.c	/^nbctl_acl_add(struct ctl_context *ctx)$/;"	f	file:
nbctl_acl_del	ovn/utilities/ovn-nbctl.c	/^nbctl_acl_del(struct ctl_context *ctx)$/;"	f	file:
nbctl_acl_list	ovn/utilities/ovn-nbctl.c	/^nbctl_acl_list(struct ctl_context *ctx)$/;"	f	file:
nbctl_cmd_init	ovn/utilities/ovn-nbctl.c	/^nbctl_cmd_init(void)$/;"	f	file:
nbctl_commands	ovn/utilities/ovn-nbctl.c	/^static const struct ctl_command_syntax nbctl_commands[] = {$/;"	v	typeref:struct:ctl_command_syntax	file:
nbctl_default_db	ovn/utilities/ovn-nbctl.c	/^nbctl_default_db(void)$/;"	f	file:
nbctl_exit	ovn/utilities/ovn-nbctl.c	/^nbctl_exit(int status)$/;"	f	file:
nbctl_lport_add	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_add(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_del	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_del(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_addresses	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_addresses(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_enabled	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_enabled(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_options	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_options(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_parent	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_parent(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_port_security	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_port_security(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_tag	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_tag(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_type	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_type(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_get_up	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_get_up(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_list	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_list(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_set_addresses	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_set_addresses(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_set_enabled	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_set_enabled(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_set_options	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_set_options(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_set_port_security	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_set_port_security(struct ctl_context *ctx)$/;"	f	file:
nbctl_lport_set_type	ovn/utilities/ovn-nbctl.c	/^nbctl_lport_set_type(struct ctl_context *ctx)$/;"	f	file:
nbctl_lswitch_add	ovn/utilities/ovn-nbctl.c	/^nbctl_lswitch_add(struct ctl_context *ctx)$/;"	f	file:
nbctl_lswitch_del	ovn/utilities/ovn-nbctl.c	/^nbctl_lswitch_del(struct ctl_context *ctx)$/;"	f	file:
nbctl_lswitch_list	ovn/utilities/ovn-nbctl.c	/^nbctl_lswitch_list(struct ctl_context *ctx)$/;"	f	file:
nbctl_show	ovn/utilities/ovn-nbctl.c	/^nbctl_show(struct ctl_context *ctx)$/;"	f	file:
nbl	datapath-windows/ovsext/IpHelper.h	/^    PNET_BUFFER_LIST  nbl;$/;"	m	struct:_OVS_FWD_REQUEST_INFO
nblOnlyCount	datapath-windows/ovsext/BufferMgmt.h	/^    LONG          nblOnlyCount;$/;"	m	struct:_OVS_NBL_POOL
nblOnlyPool	datapath-windows/ovsext/BufferMgmt.h	/^    NDIS_HANDLE   nblOnlyPool;   \/\/ NBL + context for clone$/;"	m	struct:_OVS_NBL_POOL
nbr	ovn/northd/ovn-northd.c	/^    const struct nbrec_logical_router *nbr;  \/* May be NULL. *\/$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::nbrec_logical_router	file:
nbr	ovn/northd/ovn-northd.c	/^    const struct nbrec_logical_router_port *nbr; \/* May be NULL. *\/$/;"	m	struct:ovn_port	typeref:struct:ovn_port::nbrec_logical_router_port	file:
nbrec_acl	ovn/lib/ovn-nb-idl.h	/^struct nbrec_acl {$/;"	s
nbrec_acl_cast	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_acl_col_action	ovn/lib/ovn-nb-idl.h	50;"	d
nbrec_acl_col_direction	ovn/lib/ovn-nb-idl.h	47;"	d
nbrec_acl_col_external_ids	ovn/lib/ovn-nb-idl.h	51;"	d
nbrec_acl_col_log	ovn/lib/ovn-nb-idl.h	48;"	d
nbrec_acl_col_match	ovn/lib/ovn-nb-idl.h	52;"	d
nbrec_acl_col_priority	ovn/lib/ovn-nb-idl.h	49;"	d
nbrec_acl_columns	ovn/lib/ovn-nb-idl.c	/^struct ovsdb_idl_column nbrec_acl_columns[NBREC_ACL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
nbrec_acl_columns_init	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_columns_init(void)$/;"	f	file:
nbrec_acl_delete	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_delete(const struct nbrec_acl *row)$/;"	f
nbrec_acl_first	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_first(const struct ovsdb_idl *idl)$/;"	f
nbrec_acl_get_action	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_get_action(const struct nbrec_acl *row,$/;"	f
nbrec_acl_get_direction	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_get_direction(const struct nbrec_acl *row,$/;"	f
nbrec_acl_get_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_get_external_ids(const struct nbrec_acl *row,$/;"	f
nbrec_acl_get_for_uuid	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
nbrec_acl_get_log	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_get_log(const struct nbrec_acl *row,$/;"	f
nbrec_acl_get_match	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_get_match(const struct nbrec_acl *row,$/;"	f
nbrec_acl_get_priority	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_get_priority(const struct nbrec_acl *row,$/;"	f
nbrec_acl_init	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_init(struct nbrec_acl *row)$/;"	f
nbrec_acl_init__	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_init__(struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_acl_insert	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_insert(struct ovsdb_idl_txn *txn)$/;"	f
nbrec_acl_next	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_next(const struct nbrec_acl *row)$/;"	f
nbrec_acl_parse_action	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_parse_action(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_acl_parse_direction	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_parse_direction(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_acl_parse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_acl_parse_log	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_parse_log(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_acl_parse_match	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_parse_match(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_acl_parse_priority	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_parse_priority(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_acl_set_action	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_set_action(const struct nbrec_acl *row, const char *action)$/;"	f
nbrec_acl_set_direction	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_set_direction(const struct nbrec_acl *row, const char *direction)$/;"	f
nbrec_acl_set_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_set_external_ids(const struct nbrec_acl *row, const struct smap *external_ids)$/;"	f
nbrec_acl_set_log	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_set_log(const struct nbrec_acl *row, bool log)$/;"	f
nbrec_acl_set_match	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_set_match(const struct nbrec_acl *row, const char *match)$/;"	f
nbrec_acl_set_priority	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_set_priority(const struct nbrec_acl *row, int64_t priority)$/;"	f
nbrec_acl_unparse_action	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_unparse_action(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_acl_unparse_direction	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_unparse_direction(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_acl_unparse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_acl_unparse_log	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_unparse_log(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_acl_unparse_match	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_unparse_match(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_acl_unparse_priority	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_unparse_priority(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_acl_verify_action	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_verify_action(const struct nbrec_acl *row)$/;"	f
nbrec_acl_verify_direction	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_verify_direction(const struct nbrec_acl *row)$/;"	f
nbrec_acl_verify_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_verify_external_ids(const struct nbrec_acl *row)$/;"	f
nbrec_acl_verify_log	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_verify_log(const struct nbrec_acl *row)$/;"	f
nbrec_acl_verify_match	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_verify_match(const struct nbrec_acl *row)$/;"	f
nbrec_acl_verify_priority	ovn/lib/ovn-nb-idl.c	/^nbrec_acl_verify_priority(const struct nbrec_acl *row)$/;"	f
nbrec_get_db_version	ovn/lib/ovn-nb-idl.c	/^nbrec_get_db_version(void)$/;"	f
nbrec_idl_class	ovn/lib/ovn-nb-idl.c	/^struct ovsdb_idl_class nbrec_idl_class = {$/;"	v	typeref:struct:ovsdb_idl_class
nbrec_init	ovn/lib/ovn-nb-idl.c	/^nbrec_init(void)$/;"	f
nbrec_logical_port	ovn/lib/ovn-nb-idl.h	/^struct nbrec_logical_port {$/;"	s
nbrec_logical_port_cast	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_port_col_addresses	ovn/lib/ovn-nb-idl.h	149;"	d
nbrec_logical_port_col_enabled	ovn/lib/ovn-nb-idl.h	150;"	d
nbrec_logical_port_col_external_ids	ovn/lib/ovn-nb-idl.h	153;"	d
nbrec_logical_port_col_name	ovn/lib/ovn-nb-idl.h	157;"	d
nbrec_logical_port_col_options	ovn/lib/ovn-nb-idl.h	156;"	d
nbrec_logical_port_col_parent_name	ovn/lib/ovn-nb-idl.h	148;"	d
nbrec_logical_port_col_port_security	ovn/lib/ovn-nb-idl.h	152;"	d
nbrec_logical_port_col_tag	ovn/lib/ovn-nb-idl.h	154;"	d
nbrec_logical_port_col_type	ovn/lib/ovn-nb-idl.h	155;"	d
nbrec_logical_port_col_up	ovn/lib/ovn-nb-idl.h	151;"	d
nbrec_logical_port_columns	ovn/lib/ovn-nb-idl.c	/^struct ovsdb_idl_column nbrec_logical_port_columns[NBREC_LOGICAL_PORT_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
nbrec_logical_port_columns_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_columns_init(void)$/;"	f	file:
nbrec_logical_port_delete	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_delete(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_first	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_first(const struct ovsdb_idl *idl)$/;"	f
nbrec_logical_port_get_addresses	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_addresses(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_enabled(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_external_ids(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_for_uuid	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
nbrec_logical_port_get_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_name(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_options	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_options(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_parent_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_parent_name(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_port_security	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_port_security(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_tag	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_tag(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_type	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_type(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_get_up	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_get_up(const struct nbrec_logical_port *row,$/;"	f
nbrec_logical_port_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_init(struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_init__	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_init__(struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_port_insert	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_insert(struct ovsdb_idl_txn *txn)$/;"	f
nbrec_logical_port_next	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_next(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_parse_addresses	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_addresses(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_enabled(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_options	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_options(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_parent_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_parent_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_port_security	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_port_security(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_tag	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_tag(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_type	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_parse_up	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_parse_up(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_port_set_addresses	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_addresses(const struct nbrec_logical_port *row, const char **addresses, size_t n_addresses)$/;"	f
nbrec_logical_port_set_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_enabled(const struct nbrec_logical_port *row, const bool *enabled, size_t n_enabled)$/;"	f
nbrec_logical_port_set_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_external_ids(const struct nbrec_logical_port *row, const struct smap *external_ids)$/;"	f
nbrec_logical_port_set_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_name(const struct nbrec_logical_port *row, const char *name)$/;"	f
nbrec_logical_port_set_options	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_options(const struct nbrec_logical_port *row, const struct smap *options)$/;"	f
nbrec_logical_port_set_parent_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_parent_name(const struct nbrec_logical_port *row, const char *parent_name)$/;"	f
nbrec_logical_port_set_port_security	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_port_security(const struct nbrec_logical_port *row, const char **port_security, size_t n_port_security)$/;"	f
nbrec_logical_port_set_tag	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_tag(const struct nbrec_logical_port *row, const int64_t *tag, size_t n_tag)$/;"	f
nbrec_logical_port_set_type	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_type(const struct nbrec_logical_port *row, const char *type)$/;"	f
nbrec_logical_port_set_up	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_set_up(const struct nbrec_logical_port *row, const bool *up, size_t n_up)$/;"	f
nbrec_logical_port_unparse_addresses	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_addresses(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_port_unparse_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_enabled(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_port_unparse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_port_unparse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_port_unparse_options	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_options(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_port_unparse_parent_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_parent_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_port_unparse_port_security	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_port_security(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_port_unparse_tag	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_tag(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_port_unparse_type	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_port_unparse_up	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_unparse_up(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_port_verify_addresses	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_addresses(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_enabled(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_external_ids(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_name(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_options	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_options(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_parent_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_parent_name(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_port_security	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_port_security(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_tag	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_tag(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_type	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_type(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_port_verify_up	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_port_verify_up(const struct nbrec_logical_port *row)$/;"	f
nbrec_logical_router	ovn/lib/ovn-nb-idl.h	/^struct nbrec_logical_router {$/;"	s
nbrec_logical_router_cast	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_router_col_default_gw	ovn/lib/ovn-nb-idl.h	239;"	d
nbrec_logical_router_col_external_ids	ovn/lib/ovn-nb-idl.h	237;"	d
nbrec_logical_router_col_name	ovn/lib/ovn-nb-idl.h	238;"	d
nbrec_logical_router_col_ports	ovn/lib/ovn-nb-idl.h	240;"	d
nbrec_logical_router_columns	ovn/lib/ovn-nb-idl.c	/^struct ovsdb_idl_column nbrec_logical_router_columns[NBREC_LOGICAL_ROUTER_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
nbrec_logical_router_columns_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_columns_init(void)$/;"	f	file:
nbrec_logical_router_delete	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_delete(const struct nbrec_logical_router *row)$/;"	f
nbrec_logical_router_first	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_first(const struct ovsdb_idl *idl)$/;"	f
nbrec_logical_router_get_default_gw	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_get_default_gw(const struct nbrec_logical_router *row,$/;"	f
nbrec_logical_router_get_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_get_external_ids(const struct nbrec_logical_router *row,$/;"	f
nbrec_logical_router_get_for_uuid	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
nbrec_logical_router_get_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_get_name(const struct nbrec_logical_router *row,$/;"	f
nbrec_logical_router_get_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_get_ports(const struct nbrec_logical_router *row,$/;"	f
nbrec_logical_router_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_init(struct nbrec_logical_router *row)$/;"	f
nbrec_logical_router_init__	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_init__(struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_router_insert	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_insert(struct ovsdb_idl_txn *txn)$/;"	f
nbrec_logical_router_next	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_next(const struct nbrec_logical_router *row)$/;"	f
nbrec_logical_router_parse_default_gw	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_parse_default_gw(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_parse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_parse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_parse_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_parse_ports(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_port	ovn/lib/ovn-nb-idl.h	/^struct nbrec_logical_router_port {$/;"	s
nbrec_logical_router_port_cast	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_router_port_col_enabled	ovn/lib/ovn-nb-idl.h	311;"	d
nbrec_logical_router_port_col_external_ids	ovn/lib/ovn-nb-idl.h	314;"	d
nbrec_logical_router_port_col_mac	ovn/lib/ovn-nb-idl.h	312;"	d
nbrec_logical_router_port_col_name	ovn/lib/ovn-nb-idl.h	315;"	d
nbrec_logical_router_port_col_network	ovn/lib/ovn-nb-idl.h	310;"	d
nbrec_logical_router_port_col_peer	ovn/lib/ovn-nb-idl.h	313;"	d
nbrec_logical_router_port_columns	ovn/lib/ovn-nb-idl.c	/^struct ovsdb_idl_column nbrec_logical_router_port_columns[NBREC_LOGICAL_ROUTER_PORT_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
nbrec_logical_router_port_columns_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_columns_init(void)$/;"	f	file:
nbrec_logical_router_port_delete	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_delete(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_first	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_first(const struct ovsdb_idl *idl)$/;"	f
nbrec_logical_router_port_get_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_get_enabled(const struct nbrec_logical_router_port *row,$/;"	f
nbrec_logical_router_port_get_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_get_external_ids(const struct nbrec_logical_router_port *row,$/;"	f
nbrec_logical_router_port_get_for_uuid	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
nbrec_logical_router_port_get_mac	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_get_mac(const struct nbrec_logical_router_port *row,$/;"	f
nbrec_logical_router_port_get_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_get_name(const struct nbrec_logical_router_port *row,$/;"	f
nbrec_logical_router_port_get_network	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_get_network(const struct nbrec_logical_router_port *row,$/;"	f
nbrec_logical_router_port_get_peer	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_get_peer(const struct nbrec_logical_router_port *row,$/;"	f
nbrec_logical_router_port_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_init(struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_init__	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_init__(struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_router_port_insert	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_insert(struct ovsdb_idl_txn *txn)$/;"	f
nbrec_logical_router_port_next	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_next(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_parse_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_parse_enabled(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_port_parse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_port_parse_mac	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_parse_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_port_parse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_port_parse_network	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_parse_network(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_port_parse_peer	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_parse_peer(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_router_port_set_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_set_enabled(const struct nbrec_logical_router_port *row, const bool *enabled, size_t n_enabled)$/;"	f
nbrec_logical_router_port_set_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_set_external_ids(const struct nbrec_logical_router_port *row, const struct smap *external_ids)$/;"	f
nbrec_logical_router_port_set_mac	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_set_mac(const struct nbrec_logical_router_port *row, const char *mac)$/;"	f
nbrec_logical_router_port_set_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_set_name(const struct nbrec_logical_router_port *row, const char *name)$/;"	f
nbrec_logical_router_port_set_network	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_set_network(const struct nbrec_logical_router_port *row, const char *network)$/;"	f
nbrec_logical_router_port_set_peer	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_set_peer(const struct nbrec_logical_router_port *row, const struct nbrec_logical_router_port *peer)$/;"	f
nbrec_logical_router_port_unparse_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_unparse_enabled(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_router_port_unparse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_router_port_unparse_mac	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_unparse_mac(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_router_port_unparse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_router_port_unparse_network	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_unparse_network(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_router_port_unparse_peer	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_unparse_peer(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_router_port_verify_enabled	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_verify_enabled(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_verify_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_verify_external_ids(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_verify_mac	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_verify_mac(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_verify_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_verify_name(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_verify_network	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_verify_network(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_port_verify_peer	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_port_verify_peer(const struct nbrec_logical_router_port *row)$/;"	f
nbrec_logical_router_set_default_gw	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_set_default_gw(const struct nbrec_logical_router *row, const char *default_gw)$/;"	f
nbrec_logical_router_set_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_set_external_ids(const struct nbrec_logical_router *row, const struct smap *external_ids)$/;"	f
nbrec_logical_router_set_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_set_name(const struct nbrec_logical_router *row, const char *name)$/;"	f
nbrec_logical_router_set_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_set_ports(const struct nbrec_logical_router *row, struct nbrec_logical_router_port **ports, size_t n_ports)$/;"	f
nbrec_logical_router_unparse_default_gw	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_unparse_default_gw(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_router_unparse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_router_unparse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_router_unparse_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_unparse_ports(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_router_verify_default_gw	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_verify_default_gw(const struct nbrec_logical_router *row)$/;"	f
nbrec_logical_router_verify_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_verify_external_ids(const struct nbrec_logical_router *row)$/;"	f
nbrec_logical_router_verify_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_verify_name(const struct nbrec_logical_router *row)$/;"	f
nbrec_logical_router_verify_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_router_verify_ports(const struct nbrec_logical_router *row)$/;"	f
nbrec_logical_switch	ovn/lib/ovn-nb-idl.h	/^struct nbrec_logical_switch {$/;"	s
nbrec_logical_switch_cast	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_switch_col_acls	ovn/lib/ovn-nb-idl.h	385;"	d
nbrec_logical_switch_col_external_ids	ovn/lib/ovn-nb-idl.h	384;"	d
nbrec_logical_switch_col_name	ovn/lib/ovn-nb-idl.h	386;"	d
nbrec_logical_switch_col_ports	ovn/lib/ovn-nb-idl.h	387;"	d
nbrec_logical_switch_columns	ovn/lib/ovn-nb-idl.c	/^struct ovsdb_idl_column nbrec_logical_switch_columns[NBREC_LOGICAL_SWITCH_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
nbrec_logical_switch_columns_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_columns_init(void)$/;"	f	file:
nbrec_logical_switch_delete	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_delete(const struct nbrec_logical_switch *row)$/;"	f
nbrec_logical_switch_first	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_first(const struct ovsdb_idl *idl)$/;"	f
nbrec_logical_switch_get_acls	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_get_acls(const struct nbrec_logical_switch *row,$/;"	f
nbrec_logical_switch_get_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_get_external_ids(const struct nbrec_logical_switch *row,$/;"	f
nbrec_logical_switch_get_for_uuid	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
nbrec_logical_switch_get_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_get_name(const struct nbrec_logical_switch *row,$/;"	f
nbrec_logical_switch_get_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_get_ports(const struct nbrec_logical_switch *row,$/;"	f
nbrec_logical_switch_init	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_init(struct nbrec_logical_switch *row)$/;"	f
nbrec_logical_switch_init__	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_init__(struct ovsdb_idl_row *row)$/;"	f	file:
nbrec_logical_switch_insert	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_insert(struct ovsdb_idl_txn *txn)$/;"	f
nbrec_logical_switch_next	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_next(const struct nbrec_logical_switch *row)$/;"	f
nbrec_logical_switch_parse_acls	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_parse_acls(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_switch_parse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_switch_parse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_switch_parse_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_parse_ports(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
nbrec_logical_switch_set_acls	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_set_acls(const struct nbrec_logical_switch *row, struct nbrec_acl **acls, size_t n_acls)$/;"	f
nbrec_logical_switch_set_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_set_external_ids(const struct nbrec_logical_switch *row, const struct smap *external_ids)$/;"	f
nbrec_logical_switch_set_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_set_name(const struct nbrec_logical_switch *row, const char *name)$/;"	f
nbrec_logical_switch_set_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_set_ports(const struct nbrec_logical_switch *row, struct nbrec_logical_port **ports, size_t n_ports)$/;"	f
nbrec_logical_switch_unparse_acls	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_unparse_acls(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_switch_unparse_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_switch_unparse_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
nbrec_logical_switch_unparse_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_unparse_ports(struct ovsdb_idl_row *row_)$/;"	f	file:
nbrec_logical_switch_verify_acls	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_verify_acls(const struct nbrec_logical_switch *row)$/;"	f
nbrec_logical_switch_verify_external_ids	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_verify_external_ids(const struct nbrec_logical_switch *row)$/;"	f
nbrec_logical_switch_verify_name	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_verify_name(const struct nbrec_logical_switch *row)$/;"	f
nbrec_logical_switch_verify_ports	ovn/lib/ovn-nb-idl.c	/^nbrec_logical_switch_verify_ports(const struct nbrec_logical_switch *row)$/;"	f
nbrec_table_acl	ovn/lib/ovn-nb-idl.h	436;"	d
nbrec_table_classes	ovn/lib/ovn-nb-idl.c	/^struct ovsdb_idl_table_class nbrec_table_classes[NBREC_N_TABLES] = {$/;"	v	typeref:struct:ovsdb_idl_table_class
nbrec_table_logical_port	ovn/lib/ovn-nb-idl.h	432;"	d
nbrec_table_logical_router	ovn/lib/ovn-nb-idl.h	434;"	d
nbrec_table_logical_router_port	ovn/lib/ovn-nb-idl.h	433;"	d
nbrec_table_logical_switch	ovn/lib/ovn-nb-idl.h	435;"	d
nbs	ovn/northd/ovn-northd.c	/^    const struct nbrec_logical_port *nbs;        \/* May be NULL. *\/$/;"	m	struct:ovn_port	typeref:struct:ovn_port::nbrec_logical_port	file:
nbs	ovn/northd/ovn-northd.c	/^    const struct nbrec_logical_switch *nbs;  \/* May be NULL. *\/$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::nbrec_logical_switch	file:
nd	datapath/flow.h	/^			} nd;$/;"	m	struct:sw_flow_key::__anon33::__anon37	typeref:struct:sw_flow_key::__anon33::__anon37::__anon39
ndTarget	datapath-windows/ovsext/DpInternal.h	/^    struct in6_addr ndTarget;    \/* IPv6 neighbor discovery (ND) target. *\/$/;"	m	struct:Icmp6Key	typeref:struct:Icmp6Key::in6_addr
nd_na_cksum	include/windows/netinet/icmp6.h	259;"	d
nd_na_code	include/windows/netinet/icmp6.h	258;"	d
nd_na_flags_reserved	include/windows/netinet/icmp6.h	260;"	d
nd_na_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr	nd_na_hdr;$/;"	m	struct:nd_neighbor_advert	typeref:struct:nd_neighbor_advert::icmp6_hdr
nd_na_target	include/windows/netinet/icmp6.h	/^	struct in6_addr		nd_na_target;	\/* target address *\/$/;"	m	struct:nd_neighbor_advert	typeref:struct:nd_neighbor_advert::in6_addr
nd_na_type	include/windows/netinet/icmp6.h	257;"	d
nd_neighbor_advert	include/windows/netinet/icmp6.h	/^struct nd_neighbor_advert {	\/* neighbor advertisement *\/$/;"	s
nd_neighbor_solicit	include/windows/netinet/icmp6.h	/^struct nd_neighbor_solicit {	\/* neighbor solicitation *\/$/;"	s
nd_ns_cksum	include/windows/netinet/icmp6.h	248;"	d
nd_ns_code	include/windows/netinet/icmp6.h	247;"	d
nd_ns_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr	nd_ns_hdr;$/;"	m	struct:nd_neighbor_solicit	typeref:struct:nd_neighbor_solicit::icmp6_hdr
nd_ns_reserved	include/windows/netinet/icmp6.h	249;"	d
nd_ns_target	include/windows/netinet/icmp6.h	/^	struct in6_addr		nd_ns_target;	\/*target address *\/$/;"	m	struct:nd_neighbor_solicit	typeref:struct:nd_neighbor_solicit::in6_addr
nd_ns_type	include/windows/netinet/icmp6.h	246;"	d
nd_opt_dnssl	include/windows/netinet/icmp6.h	/^struct nd_opt_dnssl {		\/* DNSSL option RFC 6106 *\/$/;"	s
nd_opt_dnssl_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_dnssl_len;$/;"	m	struct:nd_opt_dnssl
nd_opt_dnssl_lifetime	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_dnssl_lifetime;$/;"	m	struct:nd_opt_dnssl
nd_opt_dnssl_reserved	include/windows/netinet/icmp6.h	/^	u_int16_t	nd_opt_dnssl_reserved;$/;"	m	struct:nd_opt_dnssl
nd_opt_dnssl_type	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_dnssl_type;$/;"	m	struct:nd_opt_dnssl
nd_opt_hdr	include/windows/netinet/icmp6.h	/^struct nd_opt_hdr {		\/* Neighbor discovery option header *\/$/;"	s
nd_opt_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_len;$/;"	m	struct:nd_opt_hdr
nd_opt_len	lib/packets.h	/^    uint8_t  nd_opt_len;       \/* in units of 8 octets (the size of this struct) *\/$/;"	m	struct:ovs_nd_opt
nd_opt_mac	lib/packets.h	/^    struct eth_addr nd_opt_mac;   \/* Ethernet address in the case of SLL or TLL options *\/$/;"	m	struct:ovs_nd_opt	typeref:struct:ovs_nd_opt::eth_addr
nd_opt_mtu	include/windows/netinet/icmp6.h	/^struct nd_opt_mtu {		\/* MTU option *\/$/;"	s
nd_opt_mtu_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_mtu_len;$/;"	m	struct:nd_opt_mtu
nd_opt_mtu_mtu	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_mtu_mtu;$/;"	m	struct:nd_opt_mtu
nd_opt_mtu_reserved	include/windows/netinet/icmp6.h	/^	u_int16_t	nd_opt_mtu_reserved;$/;"	m	struct:nd_opt_mtu
nd_opt_mtu_type	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_mtu_type;$/;"	m	struct:nd_opt_mtu
nd_opt_pi_flags_reserved	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_pi_flags_reserved;$/;"	m	struct:nd_opt_prefix_info
nd_opt_pi_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_pi_len;$/;"	m	struct:nd_opt_prefix_info
nd_opt_pi_preferred_time	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_pi_preferred_time;$/;"	m	struct:nd_opt_prefix_info
nd_opt_pi_prefix	include/windows/netinet/icmp6.h	/^	struct in6_addr	nd_opt_pi_prefix;$/;"	m	struct:nd_opt_prefix_info	typeref:struct:nd_opt_prefix_info::in6_addr
nd_opt_pi_prefix_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_pi_prefix_len;$/;"	m	struct:nd_opt_prefix_info
nd_opt_pi_reserved2	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_pi_reserved2;$/;"	m	struct:nd_opt_prefix_info
nd_opt_pi_type	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_pi_type;$/;"	m	struct:nd_opt_prefix_info
nd_opt_pi_valid_time	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_pi_valid_time;$/;"	m	struct:nd_opt_prefix_info
nd_opt_prefix_info	include/windows/netinet/icmp6.h	/^struct nd_opt_prefix_info {	\/* prefix information *\/$/;"	s
nd_opt_rd_hdr	include/windows/netinet/icmp6.h	/^struct nd_opt_rd_hdr {		\/* redirected header *\/$/;"	s
nd_opt_rdnss	include/windows/netinet/icmp6.h	/^struct nd_opt_rdnss {		\/* RDNSS option RFC 6106 *\/$/;"	s
nd_opt_rdnss_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rdnss_len;$/;"	m	struct:nd_opt_rdnss
nd_opt_rdnss_lifetime	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_rdnss_lifetime;$/;"	m	struct:nd_opt_rdnss
nd_opt_rdnss_reserved	include/windows/netinet/icmp6.h	/^	u_int16_t	nd_opt_rdnss_reserved;$/;"	m	struct:nd_opt_rdnss
nd_opt_rdnss_type	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rdnss_type;$/;"	m	struct:nd_opt_rdnss
nd_opt_rh_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rh_len;$/;"	m	struct:nd_opt_rd_hdr
nd_opt_rh_reserved1	include/windows/netinet/icmp6.h	/^	u_int16_t	nd_opt_rh_reserved1;$/;"	m	struct:nd_opt_rd_hdr
nd_opt_rh_reserved2	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_rh_reserved2;$/;"	m	struct:nd_opt_rd_hdr
nd_opt_rh_type	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rh_type;$/;"	m	struct:nd_opt_rd_hdr
nd_opt_route_info	include/windows/netinet/icmp6.h	/^struct nd_opt_route_info {	\/* route info *\/$/;"	s
nd_opt_rti_flags	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rti_flags;$/;"	m	struct:nd_opt_route_info
nd_opt_rti_len	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rti_len;$/;"	m	struct:nd_opt_route_info
nd_opt_rti_lifetime	include/windows/netinet/icmp6.h	/^	u_int32_t	nd_opt_rti_lifetime;$/;"	m	struct:nd_opt_route_info
nd_opt_rti_prefixlen	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rti_prefixlen;$/;"	m	struct:nd_opt_route_info
nd_opt_rti_type	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_rti_type;$/;"	m	struct:nd_opt_route_info
nd_opt_type	include/windows/netinet/icmp6.h	/^	u_int8_t	nd_opt_type;$/;"	m	struct:nd_opt_hdr
nd_opt_type	lib/packets.h	/^    uint8_t  nd_opt_type;      \/* Values defined in icmp6.h *\/$/;"	m	struct:ovs_nd_opt
nd_ra_cksum	include/windows/netinet/icmp6.h	221;"	d
nd_ra_code	include/windows/netinet/icmp6.h	220;"	d
nd_ra_curhoplimit	include/windows/netinet/icmp6.h	222;"	d
nd_ra_flags_reserved	include/windows/netinet/icmp6.h	223;"	d
nd_ra_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr	nd_ra_hdr;$/;"	m	struct:nd_router_advert	typeref:struct:nd_router_advert::icmp6_hdr
nd_ra_reachable	include/windows/netinet/icmp6.h	/^	u_int32_t		nd_ra_reachable;	\/* reachable time *\/$/;"	m	struct:nd_router_advert
nd_ra_retransmit	include/windows/netinet/icmp6.h	/^	u_int32_t		nd_ra_retransmit;	\/* retransmit timer *\/$/;"	m	struct:nd_router_advert
nd_ra_router_lifetime	include/windows/netinet/icmp6.h	238;"	d
nd_ra_type	include/windows/netinet/icmp6.h	219;"	d
nd_rd_cksum	include/windows/netinet/icmp6.h	274;"	d
nd_rd_code	include/windows/netinet/icmp6.h	273;"	d
nd_rd_dst	include/windows/netinet/icmp6.h	/^	struct in6_addr		nd_rd_dst;	\/* destination address *\/$/;"	m	struct:nd_redirect	typeref:struct:nd_redirect::in6_addr
nd_rd_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr	nd_rd_hdr;$/;"	m	struct:nd_redirect	typeref:struct:nd_redirect::icmp6_hdr
nd_rd_reserved	include/windows/netinet/icmp6.h	275;"	d
nd_rd_target	include/windows/netinet/icmp6.h	/^	struct in6_addr		nd_rd_target;	\/* target address *\/$/;"	m	struct:nd_redirect	typeref:struct:nd_redirect::in6_addr
nd_rd_type	include/windows/netinet/icmp6.h	272;"	d
nd_redirect	include/windows/netinet/icmp6.h	/^struct nd_redirect {		\/* redirect *\/$/;"	s
nd_router_advert	include/windows/netinet/icmp6.h	/^struct nd_router_advert {	\/* router advertisement *\/$/;"	s
nd_router_solicit	include/windows/netinet/icmp6.h	/^struct nd_router_solicit {	\/* router solicitation *\/$/;"	s
nd_rs_cksum	include/windows/netinet/icmp6.h	209;"	d
nd_rs_code	include/windows/netinet/icmp6.h	208;"	d
nd_rs_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr 	nd_rs_hdr;$/;"	m	struct:nd_router_solicit	typeref:struct:nd_router_solicit::icmp6_hdr
nd_rs_reserved	include/windows/netinet/icmp6.h	210;"	d
nd_rs_type	include/windows/netinet/icmp6.h	207;"	d
nd_sll	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8	nd_sll[ETH_ALEN];$/;"	m	struct:ovs_key_nd
nd_sll	include/odp-netlink.h	/^	struct eth_addr nd_sll;$/;"	m	struct:ovs_key_nd	typeref:struct:ovs_key_nd::eth_addr
nd_target	datapath/linux/compat/include/linux/openvswitch.h	/^	__be32	nd_target[4];$/;"	m	struct:ovs_key_nd
nd_target	include/odp-netlink.h	/^	ovs_be32	nd_target[4];$/;"	m	struct:ovs_key_nd
nd_target	lib/flow.h	/^    struct in6_addr nd_target;  \/* IPv6 neighbor discovery (ND) target. *\/$/;"	m	struct:flow	typeref:struct:flow::in6_addr
nd_tll	datapath/linux/compat/include/linux/openvswitch.h	/^	__u8	nd_tll[ETH_ALEN];$/;"	m	struct:ovs_key_nd
nd_tll	include/odp-netlink.h	/^	struct eth_addr nd_tll;$/;"	m	struct:ovs_key_nd	typeref:struct:ovs_key_nd::eth_addr
nd_to_iff_flags	lib/netdev-bsd.c	/^nd_to_iff_flags(enum netdev_flags nd)$/;"	f	file:
nd_to_iff_flags	lib/netdev-linux.c	/^nd_to_iff_flags(enum netdev_flags nd)$/;"	f	file:
ndisContext	datapath-windows/ovsext/BufferMgmt.h	/^    NDIS_SWITCH_CONTEXT ndisContext;$/;"	m	struct:_OVS_NBL_POOL
ndisHandle	datapath-windows/ovsext/BufferMgmt.h	/^    NDIS_HANDLE   ndisHandle;$/;"	m	struct:_OVS_NBL_POOL
need	ovsdb/ovsdb-client.c	/^    enum args_needed need;$/;"	m	struct:ovsdb_client_command	typeref:enum:ovsdb_client_command::args_needed	file:
need_linearize	datapath/linux/compat/stt.c	/^static bool need_linearize(const struct sk_buff *skb)$/;"	f	file:
need_linearize	datapath/linux/stt.c	/^static bool need_linearize(const struct sk_buff *skb)$/;"	f	file:
need_ofp_version	build-aux/extract-ofp-actions	/^                need_ofp_version = True$/;"	v
need_ofp_version	build-aux/extract-ofp-actions	/^        need_ofp_version = False$/;"	v
need_revalidate	lib/mac-learning.h	/^    bool need_revalidate;$/;"	m	struct:mac_learning
need_revalidate	lib/mcast-snooping.h	/^    bool need_revalidate;$/;"	m	struct:mcast_snooping
need_revalidate	ofproto/ofproto-dpif-mirror.c	/^    bool need_revalidate;$/;"	m	struct:mbridge	file:
need_revalidate	ofproto/ofproto-dpif.c	/^    enum revalidate_reason need_revalidate; \/* Revalidate all flows. *\/$/;"	m	struct:dpif_backer	typeref:enum:dpif_backer::revalidate_reason	file:
need_table	lib/ovsdb-idl-provider.h	/^    bool need_table;         \/* Monitor table even if no columns? *\/$/;"	m	struct:ovsdb_idl_table
needs_help	lib/dpif.h	/^    bool needs_help;$/;"	m	struct:dpif_execute
needs_probes	lib/stream-provider.h	/^    bool needs_probes;$/;"	m	struct:pstream_class
needs_probes	lib/stream-provider.h	/^    bool needs_probes;$/;"	m	struct:stream_class
negotiated	lib/lacp.c	/^    bool negotiated;         \/* True if LACP negotiations were successful. *\/$/;"	m	struct:lacp	file:
neighbor	lib/lldp/lldpd-structs.h	/^    struct lldpd_port *neighbor;$/;"	m	struct:lldpd_neighbor_change	typeref:struct:lldpd_neighbor_change::lldpd_port
neoteric_ifaces	utilities/ovs-vsctl.c	/^static struct uuid *neoteric_ifaces;$/;"	v	typeref:struct:uuid	file:
net	datapath/datapath.h	/^	possible_net_t net;$/;"	m	struct:datapath
net	datapath/linux/compat/include/net/net_namespace.h	/^	struct net *net;$/;"	m	struct:__anon49	typeref:struct:__anon49::net
netBufferList	datapath-windows/ovsext/Tunnel.h	/^   NET_BUFFER_LIST *netBufferList;$/;"	m	struct:OVS_TUNNEL_PENDED_PACKET_
netCfgInstanceId	datapath-windows/ovsext/Vport.h	/^    GUID                   netCfgInstanceId;$/;"	m	struct:_OVS_VPORT_ENTRY
netEthBroadcastAddr	datapath-windows/ovsext/Ethernet.h	/^static Eth_Address netEthBroadcastAddr = ETH_BROADCAST_ADDRESS;$/;"	v
net_add	tests/system-kmod-testsuite	/^net_add () {$/;"	f
net_add	tests/system-userspace-testsuite	/^net_add () {$/;"	f
net_add	tests/testsuite	/^net_add () {$/;"	f
net_add	utilities/ovs-sim	/^net_add() {$/;"	f
net_add	utilities/ovs-sim.in	/^net_add() {$/;"	f
net_alert_ratelimited	datapath/linux/compat/include/linux/net.h	16;"	d
net_attach	tests/system-kmod-testsuite	/^net_attach () {$/;"	f
net_attach	tests/system-userspace-testsuite	/^net_attach () {$/;"	f
net_attach	tests/testsuite	/^net_attach () {$/;"	f
net_attach	utilities/ovs-sim	/^net_attach() {$/;"	f
net_attach	utilities/ovs-sim.in	/^net_attach() {$/;"	f
net_crit_ratelimited	datapath/linux/compat/include/linux/net.h	18;"	d
net_dbg_ratelimited	datapath/linux/compat/include/linux/net.h	28;"	d
net_emerg_ratelimited	datapath/linux/compat/include/linux/net.h	14;"	d
net_err_ratelimited	datapath/linux/compat/include/linux/net.h	20;"	d
net_get_random_once	datapath/linux/compat/include/linux/net.h	40;"	d
net_gre_protocol	datapath/linux/compat/gre.c	/^static const struct net_protocol net_gre_protocol = {$/;"	v	typeref:struct:net_protocol	file:
net_gre_protocol	datapath/linux/gre.c	/^static const struct net_protocol net_gre_protocol = {$/;"	v	typeref:struct:net_protocol	file:
net_info_ratelimited	datapath/linux/compat/include/linux/net.h	26;"	d
net_notice_ratelimited	datapath/linux/compat/include/linux/net.h	22;"	d
net_ratelimited_function	datapath/linux/compat/include/linux/net.h	8;"	d
net_warn_ratelimited	datapath/linux/compat/include/linux/net.h	24;"	d
netdev	lib/bfd.c	/^    struct netdev *netdev;$/;"	m	struct:bfd	typeref:struct:bfd::netdev	file:
netdev	lib/cfm.c	/^    struct netdev *netdev;$/;"	m	struct:cfm	typeref:struct:cfm::netdev	file:
netdev	lib/dpif-netdev.c	/^    struct netdev *netdev;$/;"	m	struct:dp_netdev_port	typeref:struct:dp_netdev_port::netdev	file:
netdev	lib/netdev-provider.h	/^    struct netdev *netdev;      \/* Owns a reference to the netdev. *\/$/;"	m	struct:netdev_rxq	typeref:struct:netdev_rxq::netdev
netdev	lib/netdev-provider.h	/^struct netdev {$/;"	s
netdev	lib/netdev.c	/^    struct netdev *netdev;$/;"	m	struct:netdev_saved_flags	typeref:struct:netdev_saved_flags::netdev	file:
netdev	lib/netdev.c	/^VLOG_DEFINE_THIS_MODULE(netdev);$/;"	v
netdev	lib/netdev.h	/^    struct netdev *netdev;$/;"	m	struct:netdev_queue_dump	typeref:struct:netdev_queue_dump::netdev
netdev	ofproto/bond.c	/^    struct netdev *netdev;      \/* Network device, owned by the client. *\/$/;"	m	struct:bond_slave	typeref:struct:bond_slave::netdev	file:
netdev	ofproto/ofproto-dpif-xlate.c	/^    struct netdev *netdev;           \/* 'ofport''s netdev. *\/$/;"	m	struct:xport	typeref:struct:xport::netdev	file:
netdev	ofproto/ofproto-provider.h	/^    struct netdev *netdev;$/;"	m	struct:ofport	typeref:struct:ofport::netdev
netdev	ofproto/tunnel.c	/^    struct netdev *netdev;$/;"	m	struct:tnl_port	typeref:struct:tnl_port::netdev	file:
netdev	vswitchd/bridge.c	/^    struct netdev *netdev;      \/* Network device. *\/$/;"	m	struct:iface	typeref:struct:iface::netdev	file:
netdev_add_router	lib/netdev.c	/^COVERAGE_DEFINE(netdev_add_router);$/;"	v
netdev_add_router	lib/netdev.c	/^netdev_add_router(struct netdev *netdev, struct in_addr router)$/;"	f
netdev_alloc_pcpu_stats	datapath/linux/compat/include/linux/netdevice.h	179;"	d
netdev_arp_lookup	lib/netdev-linux.c	/^COVERAGE_DEFINE(netdev_arp_lookup);$/;"	v
netdev_arp_lookup	lib/netdev.c	/^netdev_arp_lookup(const struct netdev *netdev,$/;"	f
netdev_bsd	lib/netdev-bsd.c	/^VLOG_DEFINE_THIS_MODULE(netdev_bsd);$/;"	v
netdev_bsd	lib/netdev-bsd.c	/^struct netdev_bsd {$/;"	s	file:
netdev_bsd_alloc	lib/netdev-bsd.c	/^netdev_bsd_alloc(void)$/;"	f	file:
netdev_bsd_arp_lookup	lib/netdev-bsd.c	/^netdev_bsd_arp_lookup(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
netdev_bsd_cache_cb	lib/netdev-bsd.c	/^netdev_bsd_cache_cb(const struct rtbsd_change *change,$/;"	f	file:
netdev_bsd_cache_notifier	lib/netdev-bsd.c	/^static struct rtbsd_notifier netdev_bsd_cache_notifier;$/;"	v	typeref:struct:rtbsd_notifier	file:
netdev_bsd_cast	lib/netdev-bsd.c	/^netdev_bsd_cast(const struct netdev *netdev)$/;"	f	file:
netdev_bsd_class	lib/netdev-bsd.c	/^const struct netdev_class netdev_bsd_class =$/;"	v	typeref:struct:netdev_class
netdev_bsd_construct_system	lib/netdev-bsd.c	/^netdev_bsd_construct_system(struct netdev *netdev_)$/;"	f	file:
netdev_bsd_construct_tap	lib/netdev-bsd.c	/^netdev_bsd_construct_tap(struct netdev *netdev_)$/;"	f	file:
netdev_bsd_dealloc	lib/netdev-bsd.c	/^netdev_bsd_dealloc(struct netdev *netdev_)$/;"	f	file:
netdev_bsd_destruct	lib/netdev-bsd.c	/^netdev_bsd_destruct(struct netdev *netdev_)$/;"	f	file:
netdev_bsd_get_carrier	lib/netdev-bsd.c	/^netdev_bsd_get_carrier(const struct netdev *netdev_, bool *carrier)$/;"	f	file:
netdev_bsd_get_etheraddr	lib/netdev-bsd.c	/^netdev_bsd_get_etheraddr(const struct netdev *netdev_, struct eth_addr *mac)$/;"	f	file:
netdev_bsd_get_features	lib/netdev-bsd.c	/^netdev_bsd_get_features(const struct netdev *netdev,$/;"	f	file:
netdev_bsd_get_ifindex	lib/netdev-bsd.c	/^netdev_bsd_get_ifindex(const struct netdev *netdev_)$/;"	f	file:
netdev_bsd_get_in4	lib/netdev-bsd.c	/^netdev_bsd_get_in4(const struct netdev *netdev_, struct in_addr *in4,$/;"	f	file:
netdev_bsd_get_in6	lib/netdev-bsd.c	/^netdev_bsd_get_in6(const struct netdev *netdev_, struct in6_addr *in6)$/;"	f	file:
netdev_bsd_get_mtu	lib/netdev-bsd.c	/^netdev_bsd_get_mtu(const struct netdev *netdev_, int *mtup)$/;"	f	file:
netdev_bsd_get_next_hop	lib/netdev-bsd.c	/^netdev_bsd_get_next_hop(const struct in_addr *host OVS_UNUSED,$/;"	f	file:
netdev_bsd_get_stats	lib/netdev-bsd.c	/^netdev_bsd_get_stats(const struct netdev *netdev_, struct netdev_stats *stats)$/;"	f	file:
netdev_bsd_kernel_name_to_ovs_name	lib/netdev-bsd.c	/^netdev_bsd_kernel_name_to_ovs_name(const char *kernel_name)$/;"	f	file:
netdev_bsd_open_pcap	lib/netdev-bsd.c	/^netdev_bsd_open_pcap(const char *name, pcap_t **pcapp, int *fdp)$/;"	f	file:
netdev_bsd_parse_media	lib/netdev-bsd.c	/^netdev_bsd_parse_media(int media)$/;"	f	file:
netdev_bsd_run	lib/netdev-bsd.c	/^netdev_bsd_run(void)$/;"	f	file:
netdev_bsd_rxq_alloc	lib/netdev-bsd.c	/^netdev_bsd_rxq_alloc(void)$/;"	f	file:
netdev_bsd_rxq_construct	lib/netdev-bsd.c	/^netdev_bsd_rxq_construct(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_bsd_rxq_dealloc	lib/netdev-bsd.c	/^netdev_bsd_rxq_dealloc(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_bsd_rxq_destruct	lib/netdev-bsd.c	/^netdev_bsd_rxq_destruct(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_bsd_rxq_drain	lib/netdev-bsd.c	/^netdev_bsd_rxq_drain(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_bsd_rxq_recv	lib/netdev-bsd.c	/^netdev_bsd_rxq_recv(struct netdev_rxq *rxq_, struct dp_packet **packets,$/;"	f	file:
netdev_bsd_rxq_wait	lib/netdev-bsd.c	/^netdev_bsd_rxq_wait(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_bsd_send	lib/netdev-bsd.c	/^netdev_bsd_send(struct netdev *netdev_, int qid OVS_UNUSED,$/;"	f	file:
netdev_bsd_send_wait	lib/netdev-bsd.c	/^netdev_bsd_send_wait(struct netdev *netdev_, int qid OVS_UNUSED)$/;"	f	file:
netdev_bsd_set_etheraddr	lib/netdev-bsd.c	/^netdev_bsd_set_etheraddr(struct netdev *netdev_,$/;"	f	file:
netdev_bsd_set_in4	lib/netdev-bsd.c	/^netdev_bsd_set_in4(struct netdev *netdev_, struct in_addr addr,$/;"	f	file:
netdev_bsd_update_flags	lib/netdev-bsd.c	/^netdev_bsd_update_flags(struct netdev *netdev_, enum netdev_flags off,$/;"	f	file:
netdev_bsd_wait	lib/netdev-bsd.c	/^netdev_bsd_wait(void)$/;"	f	file:
netdev_build_header	lib/netdev.c	/^netdev_build_header(const struct netdev *netdev, struct ovs_action_push_tnl *data,$/;"	f
netdev_change_seq_changed	lib/netdev-provider.h	/^netdev_change_seq_changed(const struct netdev *netdev_)$/;"	f
netdev_class	lib/netdev-provider.h	/^    const struct netdev_class *netdev_class; \/* Functions to control$/;"	m	struct:netdev	typeref:struct:netdev::netdev_class
netdev_class	lib/netdev-provider.h	/^struct netdev_class {$/;"	s
netdev_class	lib/netdev-vport.c	/^    struct netdev_class netdev_class;$/;"	m	struct:vport_class	typeref:struct:vport_class::netdev_class	file:
netdev_class_mutex	lib/netdev.c	/^static struct hmap netdev_classes OVS_GUARDED_BY(netdev_class_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
netdev_create	datapath/linux/vport-netdev.c	/^static struct vport *netdev_create(const struct vport_parms *parms)$/;"	f	file:
netdev_create	datapath/vport-netdev.c	/^static struct vport *netdev_create(const struct vport_parms *parms)$/;"	f	file:
netdev_delete_queue	lib/netdev.c	/^netdev_delete_queue(struct netdev *netdev, unsigned int queue_id)$/;"	f
netdev_destroy	datapath/linux/vport-netdev.c	/^static void netdev_destroy(struct vport *vport)$/;"	f	file:
netdev_destroy	datapath/vport-netdev.c	/^static void netdev_destroy(struct vport *vport)$/;"	f	file:
netdev_down	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def netdev_down(netdev):$/;"	f
netdev_down	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def netdev_down(netdev):$/;"	f
netdev_dpdk	lib/netdev-dpdk.c	/^struct netdev_dpdk {$/;"	s	file:
netdev_dpdk_alloc	lib/netdev-dpdk.c	/^netdev_dpdk_alloc(void)$/;"	f	file:
netdev_dpdk_alloc_txq	lib/netdev-dpdk.c	/^netdev_dpdk_alloc_txq(struct netdev_dpdk *netdev, unsigned int n_txqs)$/;"	f	file:
netdev_dpdk_cast	lib/netdev-dpdk.c	/^netdev_dpdk_cast(const struct netdev *netdev)$/;"	f	file:
netdev_dpdk_construct	lib/netdev-dpdk.c	/^netdev_dpdk_construct(struct netdev *netdev)$/;"	f	file:
netdev_dpdk_dealloc	lib/netdev-dpdk.c	/^netdev_dpdk_dealloc(struct netdev *netdev_)$/;"	f	file:
netdev_dpdk_destruct	lib/netdev-dpdk.c	/^netdev_dpdk_destruct(struct netdev *netdev_)$/;"	f	file:
netdev_dpdk_eth_send	lib/netdev-dpdk.c	/^netdev_dpdk_eth_send(struct netdev *netdev, int qid,$/;"	f	file:
netdev_dpdk_get_carrier	lib/netdev-dpdk.c	/^netdev_dpdk_get_carrier(const struct netdev *netdev_, bool *carrier)$/;"	f	file:
netdev_dpdk_get_carrier_resets	lib/netdev-dpdk.c	/^netdev_dpdk_get_carrier_resets(const struct netdev *netdev_)$/;"	f	file:
netdev_dpdk_get_config	lib/netdev-dpdk.c	/^netdev_dpdk_get_config(const struct netdev *netdev_, struct smap *args)$/;"	f	file:
netdev_dpdk_get_etheraddr	lib/netdev-dpdk.c	/^netdev_dpdk_get_etheraddr(const struct netdev *netdev, struct eth_addr *mac)$/;"	f	file:
netdev_dpdk_get_features	lib/netdev-dpdk.c	/^netdev_dpdk_get_features(const struct netdev *netdev_,$/;"	f	file:
netdev_dpdk_get_ifindex	lib/netdev-dpdk.c	/^netdev_dpdk_get_ifindex(const struct netdev *netdev)$/;"	f	file:
netdev_dpdk_get_mtu	lib/netdev-dpdk.c	/^netdev_dpdk_get_mtu(const struct netdev *netdev, int *mtup)$/;"	f	file:
netdev_dpdk_get_numa_id	lib/netdev-dpdk.c	/^netdev_dpdk_get_numa_id(const struct netdev *netdev_)$/;"	f	file:
netdev_dpdk_get_stats	lib/netdev-dpdk.c	/^netdev_dpdk_get_stats(const struct netdev *netdev, struct netdev_stats *stats)$/;"	f	file:
netdev_dpdk_get_status	lib/netdev-dpdk.c	/^netdev_dpdk_get_status(const struct netdev *netdev_, struct smap *args)$/;"	f	file:
netdev_dpdk_get_virtio	lib/netdev-dpdk.c	/^netdev_dpdk_get_virtio(const struct netdev_dpdk *dev)$/;"	f
netdev_dpdk_register	lib/netdev-dpdk.c	/^netdev_dpdk_register(void)$/;"	f
netdev_dpdk_register	lib/netdev-dpdk.h	/^netdev_dpdk_register(void)$/;"	f
netdev_dpdk_ring_construct	lib/netdev-dpdk.c	/^netdev_dpdk_ring_construct(struct netdev *netdev)$/;"	f	file:
netdev_dpdk_ring_send	lib/netdev-dpdk.c	/^netdev_dpdk_ring_send(struct netdev *netdev_, int qid,$/;"	f	file:
netdev_dpdk_rxq_alloc	lib/netdev-dpdk.c	/^netdev_dpdk_rxq_alloc(void)$/;"	f	file:
netdev_dpdk_rxq_construct	lib/netdev-dpdk.c	/^netdev_dpdk_rxq_construct(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_dpdk_rxq_dealloc	lib/netdev-dpdk.c	/^netdev_dpdk_rxq_dealloc(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_dpdk_rxq_destruct	lib/netdev-dpdk.c	/^netdev_dpdk_rxq_destruct(struct netdev_rxq *rxq_ OVS_UNUSED)$/;"	f	file:
netdev_dpdk_rxq_recv	lib/netdev-dpdk.c	/^netdev_dpdk_rxq_recv(struct netdev_rxq *rxq_, struct dp_packet **packets,$/;"	f	file:
netdev_dpdk_send__	lib/netdev-dpdk.c	/^netdev_dpdk_send__(struct netdev_dpdk *dev, int qid,$/;"	f	file:
netdev_dpdk_set_admin_state	lib/netdev-dpdk.c	/^netdev_dpdk_set_admin_state(struct unixctl_conn *conn, int argc,$/;"	f	file:
netdev_dpdk_set_etheraddr	lib/netdev-dpdk.c	/^netdev_dpdk_set_etheraddr(struct netdev *netdev, const struct eth_addr mac)$/;"	f	file:
netdev_dpdk_set_miimon	lib/netdev-dpdk.c	/^netdev_dpdk_set_miimon(struct netdev *netdev_ OVS_UNUSED,$/;"	f	file:
netdev_dpdk_set_mtu	lib/netdev-dpdk.c	/^netdev_dpdk_set_mtu(const struct netdev *netdev, int mtu)$/;"	f	file:
netdev_dpdk_set_multiq	lib/netdev-dpdk.c	/^netdev_dpdk_set_multiq(struct netdev *netdev_, unsigned int n_txq,$/;"	f	file:
netdev_dpdk_update_flags	lib/netdev-dpdk.c	/^netdev_dpdk_update_flags(struct netdev *netdev_,$/;"	f	file:
netdev_dpdk_vhost_cuse_construct	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_cuse_construct(struct netdev *netdev_)$/;"	f	file:
netdev_dpdk_vhost_destruct	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_destruct(struct netdev *netdev_)$/;"	f	file:
netdev_dpdk_vhost_get_carrier	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_get_carrier(const struct netdev *netdev_, bool *carrier)$/;"	f	file:
netdev_dpdk_vhost_get_stats	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_get_stats(const struct netdev *netdev,$/;"	f	file:
netdev_dpdk_vhost_rxq_recv	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_rxq_recv(struct netdev_rxq *rxq_,$/;"	f	file:
netdev_dpdk_vhost_send	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_send(struct netdev *netdev, int qid OVS_UNUSED, struct dp_packet **pkts,$/;"	f	file:
netdev_dpdk_vhost_set_multiq	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_set_multiq(struct netdev *netdev_, unsigned int n_txq,$/;"	f	file:
netdev_dpdk_vhost_update_rx_counters	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_update_rx_counters(struct netdev_stats *stats,$/;"	f	file:
netdev_dpdk_vhost_update_tx_counters	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_update_tx_counters(struct netdev_stats *stats,$/;"	f	file:
netdev_dpdk_vhost_user_construct	lib/netdev-dpdk.c	/^netdev_dpdk_vhost_user_construct(struct netdev *netdev_)$/;"	f	file:
netdev_dummy	lib/netdev-dummy.c	/^VLOG_DEFINE_THIS_MODULE(netdev_dummy);$/;"	v
netdev_dummy	lib/netdev-dummy.c	/^struct netdev_dummy {$/;"	s	file:
netdev_dummy_alloc	lib/netdev-dummy.c	/^netdev_dummy_alloc(void)$/;"	f	file:
netdev_dummy_cast	lib/netdev-dummy.c	/^netdev_dummy_cast(const struct netdev *netdev)$/;"	f	file:
netdev_dummy_conn_state	lib/netdev-dummy.c	/^netdev_dummy_conn_state(struct unixctl_conn *conn, int argc,$/;"	f	file:
netdev_dummy_construct	lib/netdev-dummy.c	/^netdev_dummy_construct(struct netdev *netdev_)$/;"	f	file:
netdev_dummy_dealloc	lib/netdev-dummy.c	/^netdev_dummy_dealloc(struct netdev *netdev_)$/;"	f	file:
netdev_dummy_destruct	lib/netdev-dummy.c	/^netdev_dummy_destruct(struct netdev *netdev_)$/;"	f	file:
netdev_dummy_get_config	lib/netdev-dummy.c	/^netdev_dummy_get_config(const struct netdev *netdev_, struct smap *args)$/;"	f	file:
netdev_dummy_get_etheraddr	lib/netdev-dummy.c	/^netdev_dummy_get_etheraddr(const struct netdev *netdev, struct eth_addr *mac)$/;"	f	file:
netdev_dummy_get_ifindex	lib/netdev-dummy.c	/^netdev_dummy_get_ifindex(const struct netdev *netdev)$/;"	f	file:
netdev_dummy_get_in4	lib/netdev-dummy.c	/^netdev_dummy_get_in4(const struct netdev *netdev_,$/;"	f	file:
netdev_dummy_get_mtu	lib/netdev-dummy.c	/^netdev_dummy_get_mtu(const struct netdev *netdev, int *mtup)$/;"	f	file:
netdev_dummy_get_stats	lib/netdev-dummy.c	/^netdev_dummy_get_stats(const struct netdev *netdev, struct netdev_stats *stats)$/;"	f	file:
netdev_dummy_ip4addr	lib/netdev-dummy.c	/^netdev_dummy_ip4addr(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
netdev_dummy_override	lib/netdev-dummy.c	/^netdev_dummy_override(const char *type)$/;"	f	file:
netdev_dummy_queue_packet__	lib/netdev-dummy.c	/^netdev_dummy_queue_packet__(struct netdev_rxq_dummy *rx, struct dp_packet *packet)$/;"	f	file:
netdev_dummy_receive	lib/netdev-dummy.c	/^netdev_dummy_receive(struct unixctl_conn *conn,$/;"	f	file:
netdev_dummy_register	lib/netdev-dummy.c	/^netdev_dummy_register(enum dummy_level level)$/;"	f
netdev_dummy_run	lib/netdev-dummy.c	/^netdev_dummy_run(void)$/;"	f	file:
netdev_dummy_rxq_alloc	lib/netdev-dummy.c	/^netdev_dummy_rxq_alloc(void)$/;"	f	file:
netdev_dummy_rxq_construct	lib/netdev-dummy.c	/^netdev_dummy_rxq_construct(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_dummy_rxq_dealloc	lib/netdev-dummy.c	/^netdev_dummy_rxq_dealloc(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_dummy_rxq_destruct	lib/netdev-dummy.c	/^netdev_dummy_rxq_destruct(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_dummy_rxq_drain	lib/netdev-dummy.c	/^netdev_dummy_rxq_drain(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_dummy_rxq_recv	lib/netdev-dummy.c	/^netdev_dummy_rxq_recv(struct netdev_rxq *rxq_, struct dp_packet **arr,$/;"	f	file:
netdev_dummy_rxq_wait	lib/netdev-dummy.c	/^netdev_dummy_rxq_wait(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_dummy_send	lib/netdev-dummy.c	/^netdev_dummy_send(struct netdev *netdev, int qid OVS_UNUSED,$/;"	f	file:
netdev_dummy_set_admin_state	lib/netdev-dummy.c	/^netdev_dummy_set_admin_state(struct unixctl_conn *conn, int argc,$/;"	f	file:
netdev_dummy_set_admin_state	lib/netdev-dummy.c	/^static unixctl_cb_func netdev_dummy_set_admin_state;$/;"	v	file:
netdev_dummy_set_config	lib/netdev-dummy.c	/^netdev_dummy_set_config(struct netdev *netdev_, const struct smap *args)$/;"	f	file:
netdev_dummy_set_etheraddr	lib/netdev-dummy.c	/^netdev_dummy_set_etheraddr(struct netdev *netdev, const struct eth_addr mac)$/;"	f	file:
netdev_dummy_set_in4	lib/netdev-dummy.c	/^netdev_dummy_set_in4(struct netdev *netdev_, struct in_addr address,$/;"	f	file:
netdev_dummy_set_mtu	lib/netdev-dummy.c	/^netdev_dummy_set_mtu(const struct netdev *netdev, int mtu)$/;"	f	file:
netdev_dummy_update_flags	lib/netdev-dummy.c	/^netdev_dummy_update_flags(struct netdev *netdev_,$/;"	f	file:
netdev_dummy_wait	lib/netdev-dummy.c	/^netdev_dummy_wait(void)$/;"	f	file:
netdev_dump_queue_stats	lib/netdev.c	/^netdev_dump_queue_stats(const struct netdev *netdev,$/;"	f
netdev_dump_queue_stats_cb	lib/netdev.h	/^typedef void netdev_dump_queue_stats_cb(unsigned int queue_id,$/;"	t
netdev_exists	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def netdev_exists(netdev):$/;"	f
netdev_feature_to_name	lib/ofp-print.c	/^netdev_feature_to_name(uint32_t bit)$/;"	f	file:
netdev_features	lib/netdev.h	/^enum netdev_features {$/;"	g
netdev_features_is_full_duplex	lib/netdev.c	/^netdev_features_is_full_duplex(enum netdev_features features)$/;"	f
netdev_features_t	datapath/linux/compat/include/linux/netdevice.h	/^typedef u32 netdev_features_t;$/;"	t
netdev_features_to_bps	lib/netdev.c	/^netdev_features_to_bps(enum netdev_features features,$/;"	f
netdev_flags	lib/netdev.h	/^enum netdev_flags {$/;"	g
netdev_flow_key	lib/dpif-netdev.c	/^struct netdev_flow_key {$/;"	s	file:
netdev_flow_key_clone	lib/dpif-netdev.c	/^netdev_flow_key_clone(struct netdev_flow_key *dst,$/;"	f	file:
netdev_flow_key_equal	lib/dpif-netdev.c	/^netdev_flow_key_equal(const struct netdev_flow_key *a,$/;"	f	file:
netdev_flow_key_equal_mf	lib/dpif-netdev.c	/^netdev_flow_key_equal_mf(const struct netdev_flow_key *key,$/;"	f	file:
netdev_flow_key_from_flow	lib/dpif-netdev.c	/^netdev_flow_key_from_flow(struct netdev_flow_key *dst,$/;"	f	file:
netdev_flow_key_hash_in_mask	lib/dpif-netdev.c	/^netdev_flow_key_hash_in_mask(const struct netdev_flow_key *key,$/;"	f	file:
netdev_flow_key_init_masked	lib/dpif-netdev.c	/^netdev_flow_key_init_masked(struct netdev_flow_key *dst,$/;"	f	file:
netdev_flow_key_size	lib/dpif-netdev.c	/^netdev_flow_key_size(size_t flow_u64s)$/;"	f	file:
netdev_flow_mask_init	lib/dpif-netdev.c	/^netdev_flow_mask_init(struct netdev_flow_key *mask,$/;"	f	file:
netdev_frame_hook	datapath/linux/vport-netdev.c	/^static rx_handler_result_t netdev_frame_hook(struct sk_buff **pskb)$/;"	f	file:
netdev_frame_hook	datapath/linux/vport-netdev.c	/^static struct sk_buff *netdev_frame_hook(struct net_bridge_port *p,$/;"	f	file:
netdev_frame_hook	datapath/linux/vport-netdev.c	/^static struct sk_buff *netdev_frame_hook(struct sk_buff *skb)$/;"	f	file:
netdev_frame_hook	datapath/vport-netdev.c	/^static rx_handler_result_t netdev_frame_hook(struct sk_buff **pskb)$/;"	f	file:
netdev_frame_hook	datapath/vport-netdev.c	/^static struct sk_buff *netdev_frame_hook(struct net_bridge_port *p,$/;"	f	file:
netdev_frame_hook	datapath/vport-netdev.c	/^static struct sk_buff *netdev_frame_hook(struct sk_buff *skb)$/;"	f	file:
netdev_geneve_build_header	lib/netdev-vport.c	/^netdev_geneve_build_header(const struct netdev *netdev,$/;"	f	file:
netdev_geneve_pop_header	lib/netdev-vport.c	/^netdev_geneve_pop_header(struct dp_packet *packet)$/;"	f	file:
netdev_get_carrier	lib/netdev.c	/^netdev_get_carrier(const struct netdev *netdev)$/;"	f
netdev_get_carrier_resets	lib/netdev.c	/^netdev_get_carrier_resets(const struct netdev *netdev)$/;"	f
netdev_get_change_seq	lib/netdev.c	/^netdev_get_change_seq(const struct netdev *netdev)$/;"	f
netdev_get_class	lib/netdev.c	/^netdev_get_class(const struct netdev *netdev)$/;"	f
netdev_get_driver_name	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def netdev_get_driver_name(netdev):$/;"	f
netdev_get_etheraddr	lib/netdev.c	/^netdev_get_etheraddr(const struct netdev *netdev, struct eth_addr *mac)$/;"	f
netdev_get_ethtool	lib/netdev-linux.c	/^COVERAGE_DEFINE(netdev_get_ethtool);$/;"	v
netdev_get_features	lib/netdev.c	/^netdev_get_features(const struct netdev *netdev,$/;"	f
netdev_get_features	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def netdev_get_features(netdev):$/;"	f
netdev_get_flags	lib/netdev.c	/^netdev_get_flags(const struct netdev *netdev_, enum netdev_flags *flagsp)$/;"	f
netdev_get_hwaddr	lib/netdev-linux.c	/^COVERAGE_DEFINE(netdev_get_hwaddr);$/;"	v
netdev_get_ifindex	lib/netdev-linux.c	/^COVERAGE_DEFINE(netdev_get_ifindex);$/;"	v
netdev_get_ifindex	lib/netdev.c	/^netdev_get_ifindex(const struct netdev *netdev)$/;"	f
netdev_get_in4	lib/netdev.c	/^netdev_get_in4(const struct netdev *netdev,$/;"	f
netdev_get_in4_by_name	lib/netdev.c	/^netdev_get_in4_by_name(const char *device_name, struct in_addr *in4)$/;"	f
netdev_get_in6	lib/netdev.c	/^netdev_get_in6(const struct netdev *netdev, struct in6_addr *in6)$/;"	f
netdev_get_kernel_name	lib/netdev-bsd.c	/^netdev_get_kernel_name(const struct netdev *netdev)$/;"	f	file:
netdev_get_mtu	lib/netdev.c	/^netdev_get_mtu(const struct netdev *netdev, int *mtup)$/;"	f
netdev_get_n_queues	lib/netdev.c	/^netdev_get_n_queues(const struct netdev *netdev,$/;"	f
netdev_get_name	lib/netdev.c	/^netdev_get_name(const struct netdev *netdev)$/;"	f
netdev_get_next_hop	lib/netdev.c	/^netdev_get_next_hop(const struct netdev *netdev,$/;"	f
netdev_get_numa_id	lib/netdev.c	/^netdev_get_numa_id(const struct netdev *netdev)$/;"	f
netdev_get_qos	lib/netdev.c	/^netdev_get_qos(const struct netdev *netdev,$/;"	f
netdev_get_qos_capabilities	lib/netdev.c	/^netdev_get_qos_capabilities(const struct netdev *netdev, const char *type,$/;"	f
netdev_get_qos_types	lib/netdev.c	/^netdev_get_qos_types(const struct netdev *netdev, struct sset *types)$/;"	f
netdev_get_queue	lib/netdev.c	/^netdev_get_queue(const struct netdev *netdev,$/;"	f
netdev_get_queue_stats	lib/netdev.c	/^netdev_get_queue_stats(const struct netdev *netdev, unsigned int queue_id,$/;"	f
netdev_get_stats	lib/netdev.c	/^COVERAGE_DEFINE(netdev_get_stats);$/;"	v
netdev_get_stats	lib/netdev.c	/^netdev_get_stats(const struct netdev *netdev, struct netdev_stats *stats)$/;"	f
netdev_get_status	lib/netdev.c	/^netdev_get_status(const struct netdev *netdev, struct smap *smap)$/;"	f
netdev_get_type	lib/netdev.c	/^netdev_get_type(const struct netdev *netdev)$/;"	f
netdev_get_type_from_name	lib/netdev.c	/^netdev_get_type_from_name(const char *name)$/;"	f
netdev_gre_build_header	lib/netdev-vport.c	/^netdev_gre_build_header(const struct netdev *netdev,$/;"	f	file:
netdev_gre_pop_header	lib/netdev-vport.c	/^netdev_gre_pop_header(struct dp_packet *packet)$/;"	f	file:
netdev_gre_push_header	lib/netdev-vport.c	/^netdev_gre_push_header(struct dp_packet *packet,$/;"	f	file:
netdev_has_vlan_accel	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def netdev_has_vlan_accel(netdev):$/;"	f
netdev_internal_class	lib/netdev-linux.c	/^const struct netdev_class netdev_internal_class =$/;"	v	typeref:struct:netdev_class
netdev_internal_class	lib/netdev-windows.c	/^const struct netdev_class netdev_internal_class =$/;"	v	typeref:struct:netdev_class
netdev_internal_get_stats	lib/netdev-linux.c	/^netdev_internal_get_stats(const struct netdev *netdev_,$/;"	f	file:
netdev_internal_get_status	lib/netdev-linux.c	/^netdev_internal_get_status(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
netdev_is_pmd	lib/netdev.c	/^netdev_is_pmd(const struct netdev *netdev)$/;"	f
netdev_linux	lib/netdev-linux.c	/^VLOG_DEFINE_THIS_MODULE(netdev_linux);$/;"	v
netdev_linux	lib/netdev-linux.c	/^struct netdev_linux {$/;"	s	file:
netdev_linux_add_router	lib/netdev-linux.c	/^netdev_linux_add_router(struct netdev *netdev OVS_UNUSED, struct in_addr router)$/;"	f	file:
netdev_linux_alloc	lib/netdev-linux.c	/^netdev_linux_alloc(void)$/;"	f	file:
netdev_linux_arp_lookup	lib/netdev-linux.c	/^netdev_linux_arp_lookup(const struct netdev *netdev,$/;"	f	file:
netdev_linux_cast	lib/netdev-linux.c	/^netdev_linux_cast(const struct netdev *netdev)$/;"	f	file:
netdev_linux_class	lib/netdev-linux.c	/^const struct netdev_class netdev_linux_class =$/;"	v	typeref:struct:netdev_class
netdev_linux_common_construct	lib/netdev-linux.c	/^netdev_linux_common_construct(struct netdev_linux *netdev)$/;"	f	file:
netdev_linux_construct	lib/netdev-linux.c	/^netdev_linux_construct(struct netdev *netdev_)$/;"	f	file:
netdev_linux_construct_tap	lib/netdev-linux.c	/^netdev_linux_construct_tap(struct netdev *netdev_)$/;"	f	file:
netdev_linux_dealloc	lib/netdev-linux.c	/^netdev_linux_dealloc(struct netdev *netdev_)$/;"	f	file:
netdev_linux_delete_queue	lib/netdev-linux.c	/^netdev_linux_delete_queue(struct netdev *netdev_, unsigned int queue_id)$/;"	f	file:
netdev_linux_destruct	lib/netdev-linux.c	/^netdev_linux_destruct(struct netdev *netdev_)$/;"	f	file:
netdev_linux_do_ethtool	lib/netdev-linux.c	/^netdev_linux_do_ethtool(const char *name, struct ethtool_cmd *ecmd,$/;"	f	file:
netdev_linux_do_miimon	lib/netdev-linux.c	/^netdev_linux_do_miimon(const char *name, int cmd, const char *cmd_name,$/;"	f	file:
netdev_linux_dump_queue_stats	lib/netdev-linux.c	/^netdev_linux_dump_queue_stats(const struct netdev *netdev_,$/;"	f	file:
netdev_linux_ethtool_set_flag	lib/netdev-linux.c	/^netdev_linux_ethtool_set_flag(struct netdev *netdev, uint32_t flag,$/;"	f
netdev_linux_get_carrier	lib/netdev-linux.c	/^netdev_linux_get_carrier(const struct netdev *netdev_, bool *carrier)$/;"	f	file:
netdev_linux_get_carrier_resets	lib/netdev-linux.c	/^netdev_linux_get_carrier_resets(const struct netdev *netdev_)$/;"	f	file:
netdev_linux_get_etheraddr	lib/netdev-linux.c	/^netdev_linux_get_etheraddr(const struct netdev *netdev_, struct eth_addr *mac)$/;"	f	file:
netdev_linux_get_features	lib/netdev-linux.c	/^netdev_linux_get_features(const struct netdev *netdev_,$/;"	f	file:
netdev_linux_get_ifindex	lib/netdev-linux.c	/^netdev_linux_get_ifindex(const struct netdev *netdev_)$/;"	f	file:
netdev_linux_get_in4	lib/netdev-linux.c	/^netdev_linux_get_in4(const struct netdev *netdev_,$/;"	f	file:
netdev_linux_get_in6	lib/netdev-linux.c	/^netdev_linux_get_in6(const struct netdev *netdev_, struct in6_addr *in6)$/;"	f	file:
netdev_linux_get_ipv4	lib/netdev-linux.c	/^netdev_linux_get_ipv4(const struct netdev *netdev, struct in_addr *ip,$/;"	f	file:
netdev_linux_get_miimon	lib/netdev-linux.c	/^netdev_linux_get_miimon(const char *name, bool *miimon)$/;"	f	file:
netdev_linux_get_mtu	lib/netdev-linux.c	/^netdev_linux_get_mtu(const struct netdev *netdev_, int *mtup)$/;"	f	file:
netdev_linux_get_mtu__	lib/netdev-linux.c	/^netdev_linux_get_mtu__(struct netdev_linux *netdev, int *mtup)$/;"	f	file:
netdev_linux_get_next_hop	lib/netdev-linux.c	/^netdev_linux_get_next_hop(const struct in_addr *host, struct in_addr *next_hop,$/;"	f	file:
netdev_linux_get_qos	lib/netdev-linux.c	/^netdev_linux_get_qos(const struct netdev *netdev_,$/;"	f	file:
netdev_linux_get_qos_capabilities	lib/netdev-linux.c	/^netdev_linux_get_qos_capabilities(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
netdev_linux_get_qos_types	lib/netdev-linux.c	/^netdev_linux_get_qos_types(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
netdev_linux_get_queue	lib/netdev-linux.c	/^netdev_linux_get_queue(const struct netdev *netdev_,$/;"	f	file:
netdev_linux_get_queue_stats	lib/netdev-linux.c	/^netdev_linux_get_queue_stats(const struct netdev *netdev_,$/;"	f	file:
netdev_linux_get_stats	lib/netdev-linux.c	/^netdev_linux_get_stats(const struct netdev *netdev_,$/;"	f	file:
netdev_linux_get_status	lib/netdev-linux.c	/^netdev_linux_get_status(const struct netdev *netdev_, struct smap *smap)$/;"	f	file:
netdev_linux_miimon_enabled	lib/netdev-linux.c	/^netdev_linux_miimon_enabled(void)$/;"	f	file:
netdev_linux_miimon_run	lib/netdev-linux.c	/^netdev_linux_miimon_run(void)$/;"	f	file:
netdev_linux_miimon_wait	lib/netdev-linux.c	/^netdev_linux_miimon_wait(void)$/;"	f	file:
netdev_linux_notify_sock	lib/netdev-linux.c	/^netdev_linux_notify_sock(void)$/;"	f	file:
netdev_linux_queue_dump_done	lib/netdev-linux.c	/^netdev_linux_queue_dump_done(const struct netdev *netdev OVS_UNUSED,$/;"	f	file:
netdev_linux_queue_dump_next	lib/netdev-linux.c	/^netdev_linux_queue_dump_next(const struct netdev *netdev_, void *state_,$/;"	f	file:
netdev_linux_queue_dump_start	lib/netdev-linux.c	/^netdev_linux_queue_dump_start(const struct netdev *netdev_, void **statep)$/;"	f	file:
netdev_linux_queue_state	lib/netdev-linux.c	/^struct netdev_linux_queue_state {$/;"	s	file:
netdev_linux_read_features	lib/netdev-linux.c	/^netdev_linux_read_features(struct netdev_linux *netdev)$/;"	f	file:
netdev_linux_run	lib/netdev-linux.c	/^netdev_linux_run(void)$/;"	f	file:
netdev_linux_rxq_alloc	lib/netdev-linux.c	/^netdev_linux_rxq_alloc(void)$/;"	f	file:
netdev_linux_rxq_construct	lib/netdev-linux.c	/^netdev_linux_rxq_construct(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_linux_rxq_dealloc	lib/netdev-linux.c	/^netdev_linux_rxq_dealloc(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_linux_rxq_destruct	lib/netdev-linux.c	/^netdev_linux_rxq_destruct(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_linux_rxq_drain	lib/netdev-linux.c	/^netdev_linux_rxq_drain(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_linux_rxq_recv	lib/netdev-linux.c	/^netdev_linux_rxq_recv(struct netdev_rxq *rxq_, struct dp_packet **packets,$/;"	f	file:
netdev_linux_rxq_recv_sock	lib/netdev-linux.c	/^netdev_linux_rxq_recv_sock(int fd, struct dp_packet *buffer)$/;"	f	file:
netdev_linux_rxq_recv_tap	lib/netdev-linux.c	/^netdev_linux_rxq_recv_tap(int fd, struct dp_packet *buffer)$/;"	f	file:
netdev_linux_rxq_wait	lib/netdev-linux.c	/^netdev_linux_rxq_wait(struct netdev_rxq *rxq_)$/;"	f	file:
netdev_linux_send	lib/netdev-linux.c	/^netdev_linux_send(struct netdev *netdev_, int qid OVS_UNUSED,$/;"	f	file:
netdev_linux_send_wait	lib/netdev-linux.c	/^netdev_linux_send_wait(struct netdev *netdev, int qid OVS_UNUSED)$/;"	f	file:
netdev_linux_set_advertisements	lib/netdev-linux.c	/^netdev_linux_set_advertisements(struct netdev *netdev_,$/;"	f	file:
netdev_linux_set_etheraddr	lib/netdev-linux.c	/^netdev_linux_set_etheraddr(struct netdev *netdev_, const struct eth_addr mac)$/;"	f	file:
netdev_linux_set_in4	lib/netdev-linux.c	/^netdev_linux_set_in4(struct netdev *netdev_, struct in_addr address,$/;"	f	file:
netdev_linux_set_miimon_interval	lib/netdev-linux.c	/^netdev_linux_set_miimon_interval(struct netdev *netdev_,$/;"	f	file:
netdev_linux_set_mtu	lib/netdev-linux.c	/^netdev_linux_set_mtu(const struct netdev *netdev_, int mtu)$/;"	f	file:
netdev_linux_set_policing	lib/netdev-linux.c	/^netdev_linux_set_policing(struct netdev *netdev_,$/;"	f	file:
netdev_linux_set_qos	lib/netdev-linux.c	/^netdev_linux_set_qos(struct netdev *netdev_,$/;"	f	file:
netdev_linux_set_queue	lib/netdev-linux.c	/^netdev_linux_set_queue(struct netdev *netdev_,$/;"	f	file:
netdev_linux_update_flags	lib/netdev-linux.c	/^netdev_linux_update_flags(struct netdev *netdev_, enum netdev_flags off,$/;"	f	file:
netdev_linux_wait	lib/netdev-linux.c	/^netdev_linux_wait(void)$/;"	f	file:
netdev_master_upper_dev_get	datapath/linux/compat/include/linux/netdevice.h	/^static inline struct net_device *netdev_master_upper_dev_get(struct net_device *dev)$/;"	f
netdev_master_upper_dev_link	datapath/linux/compat/include/linux/netdevice.h	/^static inline int netdev_master_upper_dev_link(struct net_device *dev,$/;"	f
netdev_max_backlog	ofproto/ofproto-dpif-xlate.c	/^netdev_max_backlog(void)$/;"	f	file:
netdev_mtu_error	lib/netdev-linux.c	/^    int netdev_mtu_error;       \/* Cached error code from SIOCGIFMTU or SIOCSIFMTU. *\/$/;"	m	struct:netdev_linux	file:
netdev_mutex	lib/netdev.c	/^static struct ovs_mutex netdev_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
netdev_mutex	lib/netdev.c	/^static struct shash netdev_shash OVS_GUARDED_BY(netdev_mutex)$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
netdev_n_rxq	lib/netdev.c	/^netdev_n_rxq(const struct netdev *netdev)$/;"	f
netdev_n_txq	lib/netdev.c	/^netdev_n_txq(const struct netdev *netdev)$/;"	f
netdev_notifier_info_to_dev	datapath/linux/compat/include/linux/netdevice.h	/^static inline struct net_device *netdev_notifier_info_to_dev(void *info)$/;"	f
netdev_parse_name	lib/netdev.c	/^netdev_parse_name(const char *netdev_name_, char **name, char **type)$/;"	f
netdev_policing_error	lib/netdev-linux.c	/^    int netdev_policing_error;  \/* Cached error code from set policing. *\/$/;"	m	struct:netdev_linux	file:
netdev_pop_header	lib/netdev.c	/^netdev_pop_header(struct netdev *netdev, struct dp_packet **buffers, int cnt)$/;"	f
netdev_port_features_from_ofp10	lib/ofp-util.c	/^netdev_port_features_from_ofp10(ovs_be32 ofp10_)$/;"	f	file:
netdev_port_features_from_ofp11	lib/ofp-util.c	/^netdev_port_features_from_ofp11(ovs_be32 ofp11)$/;"	f	file:
netdev_port_features_to_ofp10	lib/ofp-util.c	/^netdev_port_features_to_ofp10(enum netdev_features features)$/;"	f	file:
netdev_port_features_to_ofp11	lib/ofp-util.c	/^netdev_port_features_to_ofp11(enum netdev_features features)$/;"	f	file:
netdev_port_receive	datapath/linux/vport-netdev.c	/^static void netdev_port_receive(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
netdev_port_receive	datapath/vport-netdev.c	/^static void netdev_port_receive(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
netdev_push_header	lib/netdev.c	/^netdev_push_header(const struct netdev *netdev,$/;"	f
netdev_qos_capabilities	lib/netdev.h	/^struct netdev_qos_capabilities {$/;"	s
netdev_queue_dump	lib/netdev.h	/^struct netdev_queue_dump {$/;"	s
netdev_queue_dump_done	lib/netdev.c	/^netdev_queue_dump_done(struct netdev_queue_dump *dump)$/;"	f
netdev_queue_dump_next	lib/netdev.c	/^netdev_queue_dump_next(struct netdev_queue_dump *dump,$/;"	f
netdev_queue_dump_start	lib/netdev.c	/^netdev_queue_dump_start(struct netdev_queue_dump *dump,$/;"	f
netdev_queue_stats	lib/netdev.h	/^struct netdev_queue_stats {$/;"	s
netdev_received	lib/netdev.c	/^COVERAGE_DEFINE(netdev_received);$/;"	v
netdev_registered_class	lib/netdev.c	/^struct netdev_registered_class {$/;"	s	file:
netdev_remap_name	xenserver/opt_xensource_libexec_interface-reconfigure	/^def netdev_remap_name(pif, already_renamed=[]):$/;"	f
netdev_remove	lib/netdev.c	/^netdev_remove(struct netdev *netdev)$/;"	f
netdev_rx_handler_register	datapath/linux/compat/include/linux/netdevice.h	53;"	d
netdev_rx_handler_register	datapath/linux/compat/include/linux/netdevice.h	59;"	d
netdev_rx_handler_unregister	datapath/linux/compat/include/linux/netdevice.h	66;"	d
netdev_rxq	lib/netdev-provider.h	/^struct netdev_rxq {$/;"	s
netdev_rxq_bsd	lib/netdev-bsd.c	/^struct netdev_rxq_bsd {$/;"	s	file:
netdev_rxq_bsd_cast	lib/netdev-bsd.c	/^netdev_rxq_bsd_cast(const struct netdev_rxq *rxq)$/;"	f	file:
netdev_rxq_bsd_recv_pcap	lib/netdev-bsd.c	/^netdev_rxq_bsd_recv_pcap(struct netdev_rxq_bsd *rxq, struct dp_packet *buffer)$/;"	f	file:
netdev_rxq_bsd_recv_tap	lib/netdev-bsd.c	/^netdev_rxq_bsd_recv_tap(struct netdev_rxq_bsd *rxq, struct dp_packet *buffer)$/;"	f	file:
netdev_rxq_dpdk	lib/netdev-dpdk.c	/^struct netdev_rxq_dpdk {$/;"	s	file:
netdev_rxq_dpdk_cast	lib/netdev-dpdk.c	/^netdev_rxq_dpdk_cast(const struct netdev_rxq *rx)$/;"	f	file:
netdev_rxq_drain	lib/netdev.c	/^netdev_rxq_drain(struct netdev_rxq *rx)$/;"	f
netdev_rxq_dummy	lib/netdev-dummy.c	/^struct netdev_rxq_dummy {$/;"	s	file:
netdev_rxq_dummy_cast	lib/netdev-dummy.c	/^netdev_rxq_dummy_cast(const struct netdev_rxq *rx)$/;"	f	file:
netdev_rxq_get_name	lib/netdev.c	/^netdev_rxq_get_name(const struct netdev_rxq *rx)$/;"	f
netdev_rxq_get_netdev	lib/netdev.c	/^netdev_rxq_get_netdev(const struct netdev_rxq *rx)$/;"	f
netdev_rxq_linux	lib/netdev-linux.c	/^struct netdev_rxq_linux {$/;"	s	file:
netdev_rxq_linux_cast	lib/netdev-linux.c	/^netdev_rxq_linux_cast(const struct netdev_rxq *rx)$/;"	f	file:
netdev_rxq_recv	lib/netdev.c	/^netdev_rxq_recv(struct netdev_rxq *rx, struct dp_packet **buffers, int *cnt)$/;"	f
netdev_rxq_wait	lib/netdev.c	/^netdev_rxq_wait(struct netdev_rxq *rx)$/;"	f
netdev_saved_flags	lib/netdev.c	/^struct netdev_saved_flags {$/;"	s	file:
netdev_send	datapath/linux/vport-netdev.c	/^static int netdev_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
netdev_send	datapath/vport-netdev.c	/^static int netdev_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
netdev_send	lib/netdev.c	/^netdev_send(struct netdev *netdev, int qid, struct dp_packet **buffers,$/;"	f
netdev_send_wait	lib/netdev.c	/^netdev_send_wait(struct netdev *netdev, int qid)$/;"	f
netdev_sent	lib/netdev.c	/^COVERAGE_DEFINE(netdev_sent);$/;"	v
netdev_set_advertisements	lib/netdev.c	/^netdev_set_advertisements(struct netdev *netdev,$/;"	f
netdev_set_etheraddr	lib/netdev.c	/^netdev_set_etheraddr(struct netdev *netdev, const struct eth_addr mac)$/;"	f
netdev_set_ethtool	lib/netdev-linux.c	/^COVERAGE_DEFINE(netdev_set_ethtool);$/;"	v
netdev_set_flags	lib/netdev.c	/^netdev_set_flags(struct netdev *netdev, enum netdev_flags flags,$/;"	f
netdev_set_hwaddr	lib/netdev-linux.c	/^COVERAGE_DEFINE(netdev_set_hwaddr);$/;"	v
netdev_set_in4	lib/netdev.c	/^netdev_set_in4(struct netdev *netdev, struct in_addr addr, struct in_addr mask)$/;"	f
netdev_set_miimon_interval	lib/netdev.c	/^netdev_set_miimon_interval(struct netdev *netdev, long long int interval)$/;"	f
netdev_set_mtu	lib/netdev.c	/^netdev_set_mtu(const struct netdev *netdev, int mtu)$/;"	f
netdev_set_multiq	lib/netdev.c	/^netdev_set_multiq(struct netdev *netdev, unsigned int n_txq,$/;"	f
netdev_set_policing	lib/netdev-linux.c	/^COVERAGE_DEFINE(netdev_set_policing);$/;"	v
netdev_set_policing	lib/netdev.c	/^netdev_set_policing(struct netdev *netdev, uint32_t kbits_rate,$/;"	f
netdev_set_qos	lib/netdev.c	/^netdev_set_qos(struct netdev *netdev,$/;"	f
netdev_set_queue	lib/netdev.c	/^netdev_set_queue(struct netdev *netdev,$/;"	f
netdev_stats	lib/netdev.h	/^struct netdev_stats {$/;"	s
netdev_stats_from_ovs_vport_stats	lib/netdev-linux.c	/^netdev_stats_from_ovs_vport_stats(struct netdev_stats *dst,$/;"	f	file:
netdev_stats_from_rtnl_link_stats	lib/netdev-linux.c	/^netdev_stats_from_rtnl_link_stats(struct netdev_stats *dst,$/;"	f	file:
netdev_stats_from_rtnl_link_stats64	lib/netdev-linux.c	/^netdev_stats_from_rtnl_link_stats64(struct netdev_stats *dst,$/;"	f	file:
netdev_tap_class	lib/netdev-bsd.c	/^const struct netdev_class netdev_tap_class =$/;"	v	typeref:struct:netdev_class
netdev_tap_class	lib/netdev-linux.c	/^const struct netdev_class netdev_tap_class =$/;"	v	typeref:struct:netdev_class
netdev_tap_get_stats	lib/netdev-linux.c	/^netdev_tap_get_stats(const struct netdev *netdev_, struct netdev_stats *stats)$/;"	f	file:
netdev_to_ovs_vport_type	lib/dpif-netlink.c	/^netdev_to_ovs_vport_type(const struct netdev *netdev)$/;"	f	file:
netdev_tunnel_config	lib/netdev.h	/^struct netdev_tunnel_config {$/;"	s
netdev_turn_flags_off	lib/netdev.c	/^netdev_turn_flags_off(struct netdev *netdev, enum netdev_flags flags,$/;"	f
netdev_turn_flags_on	lib/netdev.c	/^netdev_turn_flags_on(struct netdev *netdev, enum netdev_flags flags,$/;"	f
netdev_up	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def netdev_up(netdev, mtu=None):$/;"	f
netdev_up	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def netdev_up(netdev, mtu=None):$/;"	f
netdev_upper_dev_unlink	datapath/linux/compat/include/linux/netdevice.h	/^static inline void netdev_upper_dev_unlink(struct net_device *dev,$/;"	f
netdev_vport	datapath/vport-netdev.h	/^struct netdev_vport {$/;"	s
netdev_vport	lib/netdev-vport.c	/^VLOG_DEFINE_THIS_MODULE(netdev_vport);$/;"	v
netdev_vport	lib/netdev-vport.c	/^struct netdev_vport {$/;"	s	file:
netdev_vport_alloc	lib/netdev-vport.c	/^netdev_vport_alloc(void)$/;"	f	file:
netdev_vport_cast	lib/netdev-vport.c	/^netdev_vport_cast(const struct netdev *netdev)$/;"	f	file:
netdev_vport_class_get_dpif_port	lib/netdev-vport.c	/^netdev_vport_class_get_dpif_port(const struct netdev_class *class)$/;"	f
netdev_vport_construct	lib/netdev-vport.c	/^netdev_vport_construct(struct netdev *netdev_)$/;"	f	file:
netdev_vport_dealloc	lib/netdev-vport.c	/^netdev_vport_dealloc(struct netdev *netdev_)$/;"	f	file:
netdev_vport_destruct	lib/netdev-vport.c	/^netdev_vport_destruct(struct netdev *netdev_)$/;"	f	file:
netdev_vport_get_dpif_port	lib/netdev-vport.c	/^netdev_vport_get_dpif_port(const struct netdev *netdev,$/;"	f
netdev_vport_get_dpif_port_strdup	lib/netdev-vport.c	/^netdev_vport_get_dpif_port_strdup(const struct netdev *netdev)$/;"	f
netdev_vport_get_etheraddr	lib/netdev-vport.c	/^netdev_vport_get_etheraddr(const struct netdev *netdev_, struct eth_addr *mac)$/;"	f	file:
netdev_vport_inc_rx	lib/netdev-vport.c	/^netdev_vport_inc_rx(const struct netdev *netdev,$/;"	f
netdev_vport_inc_tx	lib/netdev-vport.c	/^netdev_vport_inc_tx(const struct netdev *netdev,$/;"	f
netdev_vport_is_layer3	lib/netdev-vport.c	/^netdev_vport_is_layer3(const struct netdev *dev)$/;"	f
netdev_vport_is_patch	lib/netdev-vport.c	/^netdev_vport_is_patch(const struct netdev *netdev)$/;"	f
netdev_vport_is_vport_class	lib/netdev-vport.c	/^netdev_vport_is_vport_class(const struct netdev_class *class)$/;"	f
netdev_vport_needs_dst_port	lib/netdev-vport.c	/^netdev_vport_needs_dst_port(const struct netdev *dev)$/;"	f	file:
netdev_vport_patch_peer	lib/netdev-vport.c	/^netdev_vport_patch_peer(const struct netdev *netdev_)$/;"	f
netdev_vport_patch_register	lib/netdev-vport.c	/^netdev_vport_patch_register(void)$/;"	f
netdev_vport_priv	datapath/vport-netdev.h	/^netdev_vport_priv(const struct vport *vport)$/;"	f
netdev_vport_range	lib/netdev-vport.c	/^netdev_vport_range(struct unixctl_conn *conn, int argc,$/;"	f	file:
netdev_vport_route_changed	lib/netdev-vport.c	/^netdev_vport_route_changed(void)$/;"	f	file:
netdev_vport_run	lib/netdev-vport.c	/^netdev_vport_run(void)$/;"	f	file:
netdev_vport_set_etheraddr	lib/netdev-vport.c	/^netdev_vport_set_etheraddr(struct netdev *netdev_, const struct eth_addr mac)$/;"	f	file:
netdev_vport_tunnel_register	lib/netdev-vport.c	/^netdev_vport_tunnel_register(void)$/;"	f
netdev_vport_update_flags	lib/netdev-vport.c	/^netdev_vport_update_flags(struct netdev *netdev OVS_UNUSED,$/;"	f	file:
netdev_vport_wait	lib/netdev-vport.c	/^netdev_vport_wait(void)$/;"	f	file:
netdev_vxlan_build_header	lib/netdev-vport.c	/^netdev_vxlan_build_header(const struct netdev *netdev,$/;"	f	file:
netdev_vxlan_pop_header	lib/netdev-vport.c	/^netdev_vxlan_pop_header(struct dp_packet *packet)$/;"	f	file:
netdev_windows	lib/netdev-windows.c	/^VLOG_DEFINE_THIS_MODULE(netdev_windows);$/;"	v
netdev_windows	lib/netdev-windows.c	/^struct netdev_windows {$/;"	s	file:
netdev_windows_alloc	lib/netdev-windows.c	/^netdev_windows_alloc(void)$/;"	f	file:
netdev_windows_arp_lookup	lib/netdev-windows.c	/^netdev_windows_arp_lookup(const struct netdev *netdev,$/;"	f	file:
netdev_windows_cast	lib/netdev-windows.c	/^netdev_windows_cast(const struct netdev *netdev_)$/;"	f	file:
netdev_windows_class	lib/netdev-windows.c	/^const struct netdev_class netdev_windows_class =$/;"	v	typeref:struct:netdev_class
netdev_windows_dealloc	lib/netdev-windows.c	/^netdev_windows_dealloc(struct netdev *netdev_)$/;"	f	file:
netdev_windows_destruct	lib/netdev-windows.c	/^netdev_windows_destruct(struct netdev *netdev_)$/;"	f	file:
netdev_windows_get_etheraddr	lib/netdev-windows.c	/^netdev_windows_get_etheraddr(const struct netdev *netdev_,$/;"	f	file:
netdev_windows_get_mtu	lib/netdev-windows.c	/^netdev_windows_get_mtu(const struct netdev *netdev_, int *mtup)$/;"	f	file:
netdev_windows_get_next_hop	lib/netdev-windows.c	/^netdev_windows_get_next_hop(const struct in_addr *host,$/;"	f	file:
netdev_windows_info_init	lib/netdev-windows.c	/^netdev_windows_info_init(struct netdev_windows_netdev_info *info)$/;"	f	file:
netdev_windows_init_	lib/netdev-windows.c	/^netdev_windows_init_(void)$/;"	f	file:
netdev_windows_internal_construct	lib/netdev-windows.c	/^netdev_windows_internal_construct(struct netdev *netdev_)$/;"	f	file:
netdev_windows_netdev_from_ofpbuf	lib/netdev-windows.c	/^netdev_windows_netdev_from_ofpbuf(struct netdev_windows_netdev_info *info,$/;"	f	file:
netdev_windows_netdev_info	lib/netdev-windows.c	/^struct netdev_windows_netdev_info {$/;"	s	file:
netdev_windows_netdev_to_ofpbuf	lib/netdev-windows.c	/^netdev_windows_netdev_to_ofpbuf(struct netdev_windows_netdev_info *info,$/;"	f	file:
netdev_windows_set_etheraddr	lib/netdev-windows.c	/^netdev_windows_set_etheraddr(const struct netdev *netdev_,$/;"	f	file:
netdev_windows_system_construct	lib/netdev-windows.c	/^netdev_windows_system_construct(struct netdev *netdev_)$/;"	f	file:
netdev_windows_update_flags	lib/netdev-windows.c	/^netdev_windows_update_flags(struct netdev *netdev_,$/;"	f	file:
netflow	lib/vswitch-idl.h	/^	struct ovsrec_netflow *netflow;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_netflow
netflow	ofproto/netflow.c	/^VLOG_DEFINE_THIS_MODULE(netflow);$/;"	v
netflow	ofproto/netflow.c	/^struct netflow {$/;"	s	file:
netflow	ofproto/ofproto-dpif-xlate.c	/^            struct netflow *netflow;$/;"	m	struct:xc_entry::__anon188::__anon190	typeref:struct:xc_entry::__anon188::__anon190::netflow	file:
netflow	ofproto/ofproto-dpif-xlate.c	/^    struct netflow *netflow;      \/* Netflow handle, or null. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::netflow	file:
netflow	ofproto/ofproto-dpif.c	/^    struct netflow *netflow;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::netflow	file:
netflow_cnt	ofproto/netflow.c	/^    uint32_t netflow_cnt;         \/* Flow sequence number for NetFlow. *\/$/;"	m	struct:netflow	file:
netflow_count	ofproto/netflow.c	/^static atomic_count netflow_count = ATOMIC_COUNT_INIT(0);$/;"	v	file:
netflow_create	ofproto/netflow.c	/^netflow_create(void)$/;"	f
netflow_engine_id	lib/dpif-provider.h	/^    uint8_t netflow_engine_id;$/;"	m	struct:dpif
netflow_engine_type	lib/dpif-provider.h	/^    uint8_t netflow_engine_type;$/;"	m	struct:dpif
netflow_exists	ofproto/netflow.c	/^netflow_exists(void)$/;"	f
netflow_flow	ofproto/netflow.c	/^struct netflow_flow {$/;"	s	file:
netflow_flow_hash	ofproto/netflow.c	/^netflow_flow_hash(const struct flow *flow)$/;"	f	file:
netflow_mask_wc	ofproto/netflow.c	/^netflow_mask_wc(const struct flow *flow, struct flow_wildcards *wc)$/;"	f
netflow_options	ofproto/netflow.h	/^struct netflow_options {$/;"	s
netflow_ref	ofproto/netflow.c	/^netflow_ref(const struct netflow *nf_)$/;"	f
netflow_run	ofproto/netflow.c	/^netflow_run(struct netflow *nf)$/;"	f
netflow_unref	ofproto/netflow.c	/^netflow_unref(struct netflow *nf)$/;"	f
netflow_v5_header	lib/netflow.h	/^struct netflow_v5_header {$/;"	s
netflow_v5_record	lib/netflow.h	/^struct netflow_v5_record {$/;"	s
netif_needs_gso	datapath/linux/compat/include/linux/netdevice.h	126;"	d
netif_skb_features	datapath/linux/compat/include/linux/netdevice.h	111;"	d
netlink	lib/netlink.c	/^VLOG_DEFINE_THIS_MODULE(netlink);$/;"	v
netlink_notifier	lib/netlink-notifier.c	/^VLOG_DEFINE_THIS_MODULE(netlink_notifier);$/;"	v
netlink_overflow	lib/netlink-socket.c	/^COVERAGE_DEFINE(netlink_overflow);$/;"	v
netlink_received	lib/netlink-socket.c	/^COVERAGE_DEFINE(netlink_received);$/;"	v
netlink_recv_jumbo	lib/netlink-socket.c	/^COVERAGE_DEFINE(netlink_recv_jumbo);$/;"	v
netlink_sent	lib/netlink-socket.c	/^COVERAGE_DEFINE(netlink_sent);$/;"	v
netlink_socket	lib/netlink-socket.c	/^VLOG_DEFINE_THIS_MODULE(netlink_socket);$/;"	v
netmask	lib/netdev-bsd.c	/^    struct in_addr netmask;$/;"	m	struct:netdev_bsd	typeref:struct:netdev_bsd::in_addr	file:
netmask	lib/netdev-dummy.c	/^    struct in_addr address, netmask;$/;"	m	struct:netdev_dummy	typeref:struct:netdev_dummy::	file:
netmask	lib/netdev-linux.c	/^    struct in_addr address, netmask;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::	file:
netnsok	datapath/linux/compat/include/net/genetlink.h	/^	bool                    netnsok;$/;"	m	struct:rpl_genl_family
network	lib/pcap-file.c	/^    uint32_t network;        \/* data link type *\/$/;"	m	struct:pcap_hdr	file:
network	ovn/lib/ovn-nb-idl.h	/^	char *network;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_logical_router_port
network	ovn/northd/ovn-northd.c	/^    ovs_be32 network;           \/* 192.168.10.0. *\/$/;"	m	struct:ovn_port	file:
network_interfaces	debian/openvswitch-switch.init	/^network_interfaces () {$/;"	f
new	ovsdb/monitor.c	/^    struct ovsdb_datum *new;    \/* New data, NULL for a deleted row. *\/$/;"	m	struct:ovsdb_monitor_row	typeref:struct:ovsdb_monitor_row::ovsdb_datum	file:
new	ovsdb/transaction.c	/^    struct ovsdb_row *new;      \/* The new row. *\/$/;"	m	struct:ovsdb_txn_row	typeref:struct:ovsdb_txn_row::ovsdb_row	file:
new	python/ovs/db/data.py	/^    def new(x):$/;"	m	class:Atom
new_bridge	tests/test-rstp.c	/^new_bridge(struct test_case *tc, int id)$/;"	f	file:
new_bridge	tests/test-stp.c	/^new_bridge(struct test_case *tc, int id)$/;"	f	file:
new_cookie	lib/ofp-util.h	/^    ovs_be64 new_cookie;     \/* New cookie to install or UINT64_MAX. *\/$/;"	m	struct:ofputil_flow_mod
new_device	lib/netdev-dpdk.c	/^new_device(struct virtio_net *dev)$/;"	f	file:
new_fd_pstream	lib/stream-fd.c	/^new_fd_pstream(const char *name, int fd,$/;"	f
new_fd_stream	lib/stream-fd.c	/^new_fd_stream(const char *name, int fd, int connect_status, int fd_type,$/;"	f
new_lan	tests/test-rstp.c	/^new_lan(struct test_case *tc, const char *name)$/;"	f	file:
new_lan	tests/test-stp.c	/^new_lan(struct test_case *tc, const char *name)$/;"	f	file:
new_port	tests/test-rstp.c	/^new_port(struct bridge *b, struct lan *lan, uint32_t path_cost)$/;"	f	file:
new_port	tests/test-stp.c	/^new_port(struct bridge *b, struct lan *lan, int path_cost)$/;"	f	file:
new_pstream	lib/stream-tcp.c	/^new_pstream(char *suffix, const char *name, struct pstream **pstreamp,$/;"	f	file:
new_root_aux	lib/rstp-common.h	/^    void *new_root_aux;$/;"	m	struct:rstp
new_rules	ofproto/ofproto-provider.h	/^    struct rule_collection new_rules;   \/* Replacement rules. *\/$/;"	m	struct:ofproto_flow_mod	typeref:struct:ofproto_flow_mod::rule_collection
new_ssl_stream	lib/stream-ssl.c	/^new_ssl_stream(const char *name, int fd, enum session_type type,$/;"	f	file:
new_switch	utilities/ovs-testcontroller.c	/^new_switch(struct switch_ *sw, struct vconn *vconn)$/;"	f	file:
new_tcp_stream	lib/stream-tcp.c	/^new_tcp_stream(const char *name, int fd, int connect_status,$/;"	f	file:
new_test_case	tests/test-rstp.c	/^new_test_case(void)$/;"	f	file:
new_test_case	tests/test-stp.c	/^new_test_case(void)$/;"	f	file:
new_vport	datapath/datapath.c	/^static struct vport *new_vport(const struct vport_parms *parms)$/;"	f	file:
new_vport	datapath/linux/datapath.c	/^static struct vport *new_vport(const struct vport_parms *parms)$/;"	f	file:
new_xcfg	ofproto/ofproto-dpif-xlate.c	/^static struct xlate_cfg *new_xcfg = NULL;$/;"	v	typeref:struct:xlate_cfg	file:
newer	lib/timeval.c	/^    struct cpu_usage newer;$/;"	m	struct:cpu_tracker	typeref:struct:cpu_tracker::cpu_usage	file:
next	datapath/flow_netlink.c	/^	const struct ovs_len_tbl *next;$/;"	m	struct:ovs_len_tbl	typeref:struct:ovs_len_tbl::ovs_len_tbl	file:
next	datapath/linux/flow_netlink.c	/^	const struct ovs_len_tbl *next;$/;"	m	struct:ovs_len_tbl	typeref:struct:ovs_len_tbl::ovs_len_tbl	file:
next	include/openvswitch/list.h	/^    struct ovs_list *next;     \/* Next list element. *\/$/;"	m	struct:ovs_list	typeref:struct:ovs_list::ovs_list
next	lib/classifier-private.h	/^    OVSRCU_TYPE(struct cls_match *) next; \/* Equal, lower-priority matches. *\/$/;"	m	struct:cls_match
next	lib/cmap.h	/^    OVSRCU_TYPE(struct cmap_node *) next; \/* Next node with same hash. *\/$/;"	m	struct:cmap_node
next	lib/hmap.h	/^    struct hmap_node *next;     \/* Next in linked list. *\/$/;"	m	struct:hmap_node	typeref:struct:hmap_node::hmap_node
next	lib/odp-util.c	/^    const struct attr_len_tbl *next;$/;"	m	struct:attr_len_tbl	typeref:struct:attr_len_tbl::attr_len_tbl	file:
next	lib/ofp-util.h	/^        unsigned long int next[BITMAP_N_LONGS(255)];$/;"	m	struct:ofputil_table_features::ofputil_table_instruction_features
next	lib/rculist.h	/^    OVSRCU_TYPE(struct rculist *) next;$/;"	m	struct:rculist
next	lib/tun-metadata.h	/^    struct tun_metadata_loc_chain *next;$/;"	m	struct:tun_metadata_loc_chain	typeref:struct:tun_metadata_loc_chain::tun_metadata_loc_chain
next	tests/testsuite	/^next(); => Syntax error at `)' expecting small integer.$/;"	f
nextHeader	datapath-windows/ovsext/NetProto.h	/^    UINT8        nextHeader; \/\/ type of the next header$/;"	m	struct:IPv6ExtHdr
nextHeader	datapath-windows/ovsext/NetProto.h	/^    UINT8 nextHeader;$/;"	m	struct:IPv6FragHdr
nextHop	datapath-windows/ovsext/IpHelper.h	/^    UINT32            nextHop;$/;"	m	struct:_OVS_IPFORWARD_ENTRY
nextHop	lib/sflow.h	/^    SFLAddress nextHop;        \/* Address of the next hop *\/$/;"	m	struct:_SFLExtended_mpls
nextRandomSkip	lib/sflow_sampler.c	/^inline static u_int32_t nextRandomSkip(u_int32_t mean)$/;"	f	file:
next_bogus_packet_in	ofproto/fail-open.c	/^    long long int next_bogus_packet_in;$/;"	m	struct:fail_open	file:
next_cfg	lib/vswitch-idl.h	/^	int64_t next_cfg;$/;"	m	struct:ovsrec_open_vswitch
next_check	lib/memory.c	/^static long long int next_check;$/;"	v	file:
next_compact	ovsdb/file.c	/^    long long int next_compact;$/;"	m	struct:ovsdb_file	file:
next_composition	tests/test-ovn.c	/^next_composition(unsigned int *state, int s[], int sn)$/;"	f	file:
next_free_id	lib/id-pool.c	/^    uint32_t next_free_id; \/* Possible next free id. *\/$/;"	m	struct:id_pool	file:
next_learn_with_delete	ofproto/ofproto.c	/^next_learn_with_delete(const struct rule_actions *actions,$/;"	f	file:
next_load_segment	lib/ofp-actions.c	/^next_load_segment(const struct ofpact_set_field *sf,$/;"	f	file:
next_local_refresh	ofproto/in-band.c	/^    time_t next_local_refresh;       \/* Refresh timer. *\/$/;"	m	struct:in_band	file:
next_matching_table	ofproto/ofproto.c	/^next_matching_table(const struct ofproto *ofproto,$/;"	f	file:
next_max	lib/odp-util.c	/^    int next_max;$/;"	m	struct:attr_len_tbl	file:
next_op_report	ofproto/connmgr.c	/^    long long int next_op_report;    \/* Time to report ops, or LLONG_MAX. *\/$/;"	m	struct:ofconn	file:
next_permutation	tests/test-classifier.c	/^next_permutation(int *a, int n)$/;"	f	file:
next_permutation	tests/test-heap.c	/^next_permutation(uint32_t *a, int n)$/;"	f	file:
next_ports	utilities/ovs-benchmark.c	/^next_ports(unsigned short int *local_port, unsigned short int *remote_port)$/;"	f	file:
next_random_flow	tests/test-classifier.c	/^next_random_flow(struct flow *flow, unsigned int idx)$/;"	f	file:
next_real_row	lib/ovsdb-idl.c	/^next_real_row(struct ovsdb_idl_table *table, struct hmap_node *node)$/;"	f	file:
next_rebalance	ofproto/bond.c	/^    long long int next_rebalance; \/* Next rebalancing time. *\/$/;"	m	struct:bond	file:
next_relop	tests/test-ovn.c	/^next_relop(enum expr_relop relop)$/;"	f	file:
next_remote_refresh	ofproto/in-band.c	/^    time_t next_remote_refresh; \/* Refresh timer. *\/$/;"	m	struct:in_band	file:
next_seq	lib/netlink-socket.c	/^    uint32_t next_seq;$/;"	m	struct:nl_sock	file:
next_session_nr	lib/stream-ssl.c	/^static unsigned int next_session_nr;$/;"	v	file:
next_terminal	tests/test-ovn.c	/^next_terminal(struct expr *expr,$/;"	f	file:
next_tick	ofproto/ofproto-dpif-sflow.c	/^    time_t next_tick;$/;"	m	struct:dpif_sflow	file:
next_timeout	ofproto/netflow.c	/^    long long int next_timeout;   \/* Next scheduled active timeout. *\/$/;"	m	struct:netflow	file:
next_tree_shape	tests/test-ovn.c	/^next_tree_shape(struct tree_shape ts[], int n_tses)$/;"	f	file:
next_tx	lib/bfd.c	/^    long long int next_tx;        \/* Next TX time. *\/$/;"	m	struct:bfd	file:
next_txq	ofproto/pinsched.c	/^    struct pinqueue *next_txq;  \/* Next pinqueue check in round-robin. *\/$/;"	m	struct:pinsched	typeref:struct:pinsched::pinqueue	file:
next_var	tests/test-ovn.c	/^next_var(const struct expr_symbol *symbol,$/;"	f	file:
next_visible_rule_in_list	lib/classifier.c	/^next_visible_rule_in_list(const struct cls_match *rule, cls_version_t version)$/;"	f	file:
next_visible_table	ofproto/ofproto.c	/^next_visible_table(const struct ofproto *ofproto, uint8_t table_id)$/;"	f	file:
nexthdr	datapath-windows/ovsext/NetProto.h	/^    UINT8    nexthdr;$/;"	m	struct:IPv6Hdr
nexthop	lib/netflow.h	/^    ovs_be32 nexthop;              \/* IP address of next hop.  Set to 0. *\/$/;"	m	struct:netflow_v5_record
nexthop	lib/sflow.h	/^    SFLAddress nexthop;                       \/* Address of the border router that should$/;"	m	struct:_SFLExtended_gateway
nexthop	lib/sflow.h	/^    SFLAddress nexthop;               \/* IP address of next hop router *\/$/;"	m	struct:_SFLExtended_router
nf	lib/nx-match.c	/^    const struct nxm_field nf;$/;"	m	struct:nxm_field_index	typeref:struct:nxm_field_index::nxm_field	file:
nf	ofproto/ofproto-dpif-xlate.c	/^        } nf;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon190	file:
nf_ip_hook	datapath/linux/compat/stt.c	/^static unsigned int nf_ip_hook(FIRST_PARAM, struct sk_buff *skb, LAST_PARAM)$/;"	f	file:
nf_ip_hook	datapath/linux/stt.c	/^static unsigned int nf_ip_hook(FIRST_PARAM, struct sk_buff *skb, LAST_PARAM)$/;"	f	file:
nf_output_iface	ofproto/ofproto-dpif-xlate.c	/^    ofp_port_t nf_output_iface; \/* Output interface index for NetFlow. *\/$/;"	m	struct:xlate_ctx	file:
ngrp	lib/packets.h	/^    ovs_be16 ngrp;$/;"	m	struct:igmpv3_header
ngrp	lib/packets.h	/^    ovs_be16 ngrp;$/;"	m	struct:mld_header
ni_cksum	include/windows/netinet/icmp6.h	377;"	d
ni_code	include/windows/netinet/icmp6.h	376;"	d
ni_flags	include/windows/netinet/icmp6.h	379;"	d
ni_fqdn_name	include/windows/netinet/icmp6.h	/^	u_int8_t ni_fqdn_name[3]; \/* XXX: alignment *\/$/;"	m	struct:ni_reply_fqdn
ni_fqdn_namelen	include/windows/netinet/icmp6.h	/^	u_int8_t ni_fqdn_namelen; \/* length in octets of the FQDN *\/$/;"	m	struct:ni_reply_fqdn
ni_fqdn_ttl	include/windows/netinet/icmp6.h	/^	u_int32_t ni_fqdn_ttl;	\/* TTL *\/$/;"	m	struct:ni_reply_fqdn
ni_qtype	include/windows/netinet/icmp6.h	378;"	d
ni_reply_fqdn	include/windows/netinet/icmp6.h	/^struct ni_reply_fqdn {$/;"	s
ni_type	include/windows/netinet/icmp6.h	375;"	d
nicIndex	datapath-windows/ovsext/DpInternal.h	/^    uint16_t nicIndex;$/;"	m	struct:_OVS_VPORT_EXT_INFO
nicIndex	datapath-windows/ovsext/Vport.h	/^    NDIS_SWITCH_NIC_INDEX  nicIndex;$/;"	m	struct:_OVS_VPORT_ENTRY
nicName	datapath-windows/ovsext/Vport.h	/^    NDIS_SWITCH_NIC_NAME   nicName;$/;"	m	struct:_OVS_VPORT_ENTRY
nicState	datapath-windows/ovsext/Vport.h	/^    NDIS_SWITCH_NIC_STATE  nicState;$/;"	m	struct:_OVS_VPORT_ENTRY
nicira10_stats_msg	include/openflow/nicira-ext.h	/^struct nicira10_stats_msg {$/;"	s
nicira11_stats_msg	include/openflow/nicira-ext.h	/^struct nicira11_stats_msg {$/;"	s
nicira_header	include/openflow/nicira-ext.h	/^struct nicira_header {$/;"	s
nlControlFamilyCmdOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_CMD nlControlFamilyCmdOps[] = {$/;"	v
nlControlFamilyOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_FAMILY nlControlFamilyOps = {$/;"	v
nlDatapathFamilyCmdOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_CMD nlDatapathFamilyCmdOps[] = {$/;"	v
nlDatapathFamilyOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_FAMILY nlDatapathFamilyOps = {$/;"	v
nlFLowFamilyOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_FAMILY nlFLowFamilyOps = {$/;"	v
nlFlowActionPolicy	datapath-windows/ovsext/Flow.c	/^const NL_POLICY nlFlowActionPolicy[] = {$/;"	v
nlFlowFamilyCmdOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_CMD nlFlowFamilyCmdOps[] = {$/;"	v
nlFlowKeyPolicy	datapath-windows/ovsext/Flow.c	/^const NL_POLICY nlFlowKeyPolicy[] = {$/;"	v
nlFlowKeyPolicyLen	datapath-windows/ovsext/Flow.c	/^const UINT32 nlFlowKeyPolicyLen = ARRAY_SIZE(nlFlowKeyPolicy);$/;"	v
nlFlowPolicy	datapath-windows/ovsext/Flow.c	/^const NL_POLICY nlFlowPolicy[] = {$/;"	v
nlFlowTunnelKeyPolicy	datapath-windows/ovsext/Flow.c	/^const NL_POLICY nlFlowTunnelKeyPolicy[] = {$/;"	v
nlMsg	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_MSG_HDR nlMsg;$/;"	m	struct:_OVS_MESSAGE
nlMsg	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_MSG_HDR nlMsg;$/;"	m	struct:_OVS_MESSAGE_ERROR
nlMsg	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    NL_MSG_HDR nlMsg;$/;"	m	struct:_NlMsgErr
nlNetdevFamilyCmdOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_CMD nlNetdevFamilyCmdOps[] = {$/;"	v
nlNetdevFamilyOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_FAMILY nlNetdevFamilyOps = {$/;"	v
nlPacketFamilyCmdOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_CMD nlPacketFamilyCmdOps[] = {$/;"	v
nlPacketFamilyOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_FAMILY nlPacketFamilyOps = {$/;"	v
nlVportFamilyCmdOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_CMD nlVportFamilyCmdOps[] = {$/;"	v
nlVportFamilyOps	datapath-windows/ovsext/Datapath.c	/^NETLINK_FAMILY nlVportFamilyOps = {$/;"	v
nl_actions	lib/dpif-netlink.c	/^    struct ofpbuf *nl_actions;  \/* Used if kernel does not supply actions. *\/$/;"	m	struct:dpif_netlink_flow_dump_thread	typeref:struct:dpif_netlink_flow_dump_thread::ofpbuf	file:
nl_attr_find	lib/netlink.c	/^nl_attr_find(const struct ofpbuf *buf, size_t hdr_len, uint16_t type)$/;"	f
nl_attr_find__	lib/netlink.c	/^nl_attr_find__(const struct nlattr *attrs, size_t size, uint16_t type)$/;"	f
nl_attr_find_nested	lib/netlink.c	/^nl_attr_find_nested(const struct nlattr *nla, uint16_t type)$/;"	f
nl_attr_get	lib/netlink.c	/^nl_attr_get(const struct nlattr *nla)$/;"	f
nl_attr_get_be16	lib/netlink.c	/^nl_attr_get_be16(const struct nlattr *nla)$/;"	f
nl_attr_get_be32	lib/netlink.c	/^nl_attr_get_be32(const struct nlattr *nla)$/;"	f
nl_attr_get_be64	lib/netlink.c	/^nl_attr_get_be64(const struct nlattr *nla)$/;"	f
nl_attr_get_flag	lib/netlink.c	/^nl_attr_get_flag(const struct nlattr *nla)$/;"	f
nl_attr_get_in6_addr	lib/netlink.c	/^nl_attr_get_in6_addr(const struct nlattr *nla)$/;"	f
nl_attr_get_nested	lib/netlink.c	/^nl_attr_get_nested(const struct nlattr *nla, struct ofpbuf *nested)$/;"	f
nl_attr_get_odp_port	lib/netlink.c	/^nl_attr_get_odp_port(const struct nlattr *nla)$/;"	f
nl_attr_get_size	lib/netlink.c	/^nl_attr_get_size(const struct nlattr *nla)$/;"	f
nl_attr_get_string	lib/netlink.c	/^nl_attr_get_string(const struct nlattr *nla)$/;"	f
nl_attr_get_u16	lib/netlink.c	/^nl_attr_get_u16(const struct nlattr *nla)$/;"	f
nl_attr_get_u32	lib/netlink.c	/^nl_attr_get_u32(const struct nlattr *nla)$/;"	f
nl_attr_get_u64	lib/netlink.c	/^nl_attr_get_u64(const struct nlattr *nla)$/;"	f
nl_attr_get_u8	lib/netlink.c	/^nl_attr_get_u8(const struct nlattr *nla)$/;"	f
nl_attr_get_unspec	lib/netlink.c	/^nl_attr_get_unspec(const struct nlattr *nla, size_t size)$/;"	f
nl_attr_is_valid	lib/netlink.h	/^nl_attr_is_valid(const struct nlattr *nla, size_t maxlen)$/;"	f
nl_attr_len_pad	lib/netlink.h	/^nl_attr_len_pad(const struct nlattr *nla, size_t maxlen)$/;"	f
nl_attr_next	lib/netlink.h	/^nl_attr_next(const struct nlattr *nla)$/;"	f
nl_attr_oversized	lib/netlink.c	/^nl_attr_oversized(size_t payload_size)$/;"	f
nl_attr_type	lib/netlink.c	/^nl_attr_type(const struct nlattr *nla)$/;"	f
nl_attr_type	lib/netlink.h	/^enum nl_attr_type$/;"	g
nl_attr_validate	lib/netlink.c	/^nl_attr_validate(const struct nlattr *nla, const struct nl_policy *policy)$/;"	f
nl_dump	lib/dpif-netlink.c	/^    struct nl_dump nl_dump;$/;"	m	struct:dpif_netlink_flow_dump	typeref:struct:dpif_netlink_flow_dump::nl_dump	file:
nl_dump	lib/netlink-socket.h	/^struct nl_dump {$/;"	s
nl_dump_done	lib/netlink-socket.c	/^nl_dump_done(struct nl_dump *dump)$/;"	f
nl_dump_next	lib/netlink-socket.c	/^nl_dump_next(struct nl_dump *dump, struct ofpbuf *reply, struct ofpbuf *buffer)$/;"	f
nl_dump_next__	lib/netlink-socket.c	/^nl_dump_next__(struct ofpbuf *reply, struct ofpbuf *buffer)$/;"	f	file:
nl_dump_start	lib/netlink-socket.c	/^nl_dump_start(struct nl_dump *dump, int protocol, const struct ofpbuf *request)$/;"	f
nl_flows	lib/dpif-netlink.c	/^    struct ofpbuf nl_flows;     \/* Always used to store flows. *\/$/;"	m	struct:dpif_netlink_flow_dump_thread	typeref:struct:dpif_netlink_flow_dump_thread::ofpbuf	file:
nl_lookup_genl_family	lib/netlink-socket.c	/^nl_lookup_genl_family(const char *name, int *number)$/;"	f
nl_lookup_genl_mcgroup	lib/netlink-socket.c	/^nl_lookup_genl_mcgroup(const char *family_name, const char *group_name,$/;"	f
nl_msg_end_nested	lib/netlink.c	/^nl_msg_end_nested(struct ofpbuf *msg, size_t offset)$/;"	f
nl_msg_genlmsghdr	lib/netlink.c	/^nl_msg_genlmsghdr(const struct ofpbuf *msg)$/;"	f
nl_msg_next	lib/netlink.c	/^nl_msg_next(struct ofpbuf *buffer, struct ofpbuf *msg)$/;"	f
nl_msg_nlmsgerr	lib/netlink.c	/^nl_msg_nlmsgerr(const struct ofpbuf *msg, int *errorp)$/;"	f
nl_msg_nlmsghdr	lib/netlink.c	/^nl_msg_nlmsghdr(const struct ofpbuf *msg)$/;"	f
nl_msg_push	lib/netlink.c	/^nl_msg_push(struct ofpbuf *msg, const void *data, size_t size)$/;"	f
nl_msg_push_be16	lib/netlink.c	/^nl_msg_push_be16(struct ofpbuf *msg, uint16_t type, ovs_be16 value)$/;"	f
nl_msg_push_be32	lib/netlink.c	/^nl_msg_push_be32(struct ofpbuf *msg, uint16_t type, ovs_be32 value)$/;"	f
nl_msg_push_be64	lib/netlink.c	/^nl_msg_push_be64(struct ofpbuf *msg, uint16_t type, ovs_be64 value)$/;"	f
nl_msg_push_flag	lib/netlink.c	/^nl_msg_push_flag(struct ofpbuf *msg, uint16_t type)$/;"	f
nl_msg_push_string	lib/netlink.c	/^nl_msg_push_string(struct ofpbuf *msg, uint16_t type, const char *value)$/;"	f
nl_msg_push_u16	lib/netlink.c	/^nl_msg_push_u16(struct ofpbuf *msg, uint16_t type, uint16_t value)$/;"	f
nl_msg_push_u32	lib/netlink.c	/^nl_msg_push_u32(struct ofpbuf *msg, uint16_t type, uint32_t value)$/;"	f
nl_msg_push_u64	lib/netlink.c	/^nl_msg_push_u64(struct ofpbuf *msg, uint16_t type, uint64_t value)$/;"	f
nl_msg_push_u8	lib/netlink.c	/^nl_msg_push_u8(struct ofpbuf *msg, uint16_t type, uint8_t value)$/;"	f
nl_msg_push_uninit	lib/netlink.c	/^nl_msg_push_uninit(struct ofpbuf *msg, size_t size)$/;"	f
nl_msg_push_unspec	lib/netlink.c	/^nl_msg_push_unspec(struct ofpbuf *msg, uint16_t type,$/;"	f
nl_msg_push_unspec_uninit	lib/netlink.c	/^nl_msg_push_unspec_uninit(struct ofpbuf *msg, uint16_t type, size_t size)$/;"	f
nl_msg_put	lib/netlink.c	/^nl_msg_put(struct ofpbuf *msg, const void *data, size_t size)$/;"	f
nl_msg_put_be16	lib/netlink.c	/^nl_msg_put_be16(struct ofpbuf *msg, uint16_t type, ovs_be16 value)$/;"	f
nl_msg_put_be32	lib/netlink.c	/^nl_msg_put_be32(struct ofpbuf *msg, uint16_t type, ovs_be32 value)$/;"	f
nl_msg_put_be64	lib/netlink.c	/^nl_msg_put_be64(struct ofpbuf *msg, uint16_t type, ovs_be64 value)$/;"	f
nl_msg_put_flag	lib/netlink.c	/^nl_msg_put_flag(struct ofpbuf *msg, uint16_t type)$/;"	f
nl_msg_put_genlmsghdr	lib/netlink.c	/^nl_msg_put_genlmsghdr(struct ofpbuf *msg, size_t expected_payload,$/;"	f
nl_msg_put_in6_addr	lib/netlink.c	/^nl_msg_put_in6_addr(struct ofpbuf *msg, uint16_t type,$/;"	f
nl_msg_put_nested	lib/netlink.c	/^nl_msg_put_nested(struct ofpbuf *msg,$/;"	f
nl_msg_put_nlmsghdr	lib/netlink.c	/^nl_msg_put_nlmsghdr(struct ofpbuf *msg,$/;"	f
nl_msg_put_odp_port	lib/netlink.c	/^nl_msg_put_odp_port(struct ofpbuf *msg, uint16_t type, odp_port_t value)$/;"	f
nl_msg_put_string	lib/netlink.c	/^nl_msg_put_string(struct ofpbuf *msg, uint16_t type, const char *value)$/;"	f
nl_msg_put_string__	lib/netlink.c	/^nl_msg_put_string__(struct ofpbuf *msg, uint16_t type, const char *value,$/;"	f
nl_msg_put_u16	lib/netlink.c	/^nl_msg_put_u16(struct ofpbuf *msg, uint16_t type, uint16_t value)$/;"	f
nl_msg_put_u32	lib/netlink.c	/^nl_msg_put_u32(struct ofpbuf *msg, uint16_t type, uint32_t value)$/;"	f
nl_msg_put_u64	lib/netlink.c	/^nl_msg_put_u64(struct ofpbuf *msg, uint16_t type, uint64_t value)$/;"	f
nl_msg_put_u8	lib/netlink.c	/^nl_msg_put_u8(struct ofpbuf *msg, uint16_t type, uint8_t value)$/;"	f
nl_msg_put_uninit	lib/netlink.c	/^nl_msg_put_uninit(struct ofpbuf *msg, size_t size)$/;"	f
nl_msg_put_unspec	lib/netlink.c	/^nl_msg_put_unspec(struct ofpbuf *msg, uint16_t type,$/;"	f
nl_msg_put_unspec_uninit	lib/netlink.c	/^nl_msg_put_unspec_uninit(struct ofpbuf *msg, uint16_t type, size_t size)$/;"	f
nl_msg_put_unspec_zero	lib/netlink.c	/^nl_msg_put_unspec_zero(struct ofpbuf *msg, uint16_t type, size_t size)$/;"	f
nl_msg_reserve	lib/netlink.c	/^nl_msg_reserve(struct ofpbuf *msg, size_t size)$/;"	f
nl_msg_start_nested	lib/netlink.c	/^nl_msg_start_nested(struct ofpbuf *msg, uint16_t type)$/;"	f
nl_parse_nested	lib/netlink.c	/^nl_parse_nested(const struct nlattr *nla, const struct nl_policy policy[],$/;"	f
nl_policy	lib/netlink.h	/^struct nl_policy$/;"	s
nl_policy_parse	lib/netlink.c	/^nl_policy_parse(const struct ofpbuf *msg, size_t nla_offset,$/;"	f
nl_pool	lib/netlink-socket.c	/^struct nl_pool {$/;"	s	file:
nl_pool_alloc	lib/netlink-socket.c	/^nl_pool_alloc(int protocol, struct nl_sock **sockp)$/;"	f	file:
nl_pool_release	lib/netlink-socket.c	/^nl_pool_release(struct nl_sock *sock)$/;"	f	file:
nl_seq	lib/netlink-socket.h	/^    uint32_t nl_seq;            \/* Expected nlmsg_seq for replies. *\/$/;"	m	struct:nl_dump
nl_sock	lib/dpif-netlink.c	/^    struct nl_sock *nl_sock;    \/* netlink socket. *\/$/;"	m	struct:dpif_windows_vport_sock	typeref:struct:dpif_windows_vport_sock::nl_sock	file:
nl_sock	lib/netlink-socket.c	/^struct nl_sock {$/;"	s	file:
nl_sock_allocate_seq	lib/netlink-socket.c	/^nl_sock_allocate_seq(struct nl_sock *sock, unsigned int n)$/;"	f	file:
nl_sock_clone	lib/netlink-socket.c	/^nl_sock_clone(const struct nl_sock *src, struct nl_sock **sockp)$/;"	f
nl_sock_create	lib/netlink-socket.c	/^nl_sock_create(int protocol, struct nl_sock **sockp)$/;"	f
nl_sock_destroy	lib/netlink-socket.c	/^nl_sock_destroy(struct nl_sock *sock)$/;"	f
nl_sock_drain	lib/netlink-socket.c	/^nl_sock_drain(struct nl_sock *sock)$/;"	f
nl_sock_fd	lib/netlink-socket.c	/^nl_sock_fd(const struct nl_sock *sock)$/;"	f
nl_sock_join_mcgroup	lib/netlink-socket.c	/^nl_sock_join_mcgroup(struct nl_sock *sock, unsigned int multicast_group)$/;"	f
nl_sock_leave_mcgroup	lib/netlink-socket.c	/^nl_sock_leave_mcgroup(struct nl_sock *sock, unsigned int multicast_group)$/;"	f
nl_sock_mcgroup	lib/netlink-socket.c	/^nl_sock_mcgroup(struct nl_sock *sock, unsigned int multicast_group, bool join)$/;"	f	file:
nl_sock_pid	lib/netlink-socket.c	/^nl_sock_pid(const struct nl_sock *sock)$/;"	f
nl_sock_record_errors__	lib/netlink-socket.c	/^nl_sock_record_errors__(struct nl_transaction **transactions, size_t n,$/;"	f	file:
nl_sock_recv	lib/netlink-socket.c	/^nl_sock_recv(struct nl_sock *sock, struct ofpbuf *buf, bool wait)$/;"	f
nl_sock_recv__	lib/netlink-socket.c	/^nl_sock_recv__(struct nl_sock *sock, struct ofpbuf *buf, bool wait)$/;"	f	file:
nl_sock_send	lib/netlink-socket.c	/^nl_sock_send(struct nl_sock *sock, const struct ofpbuf *msg, bool wait)$/;"	f
nl_sock_send__	lib/netlink-socket.c	/^nl_sock_send__(struct nl_sock *sock, const struct ofpbuf *msg,$/;"	f	file:
nl_sock_send_seq	lib/netlink-socket.c	/^nl_sock_send_seq(struct nl_sock *sock, const struct ofpbuf *msg,$/;"	f
nl_sock_subscribe_packet__	lib/netlink-socket.c	/^nl_sock_subscribe_packet__(struct nl_sock *sock, bool subscribe)$/;"	f
nl_sock_subscribe_packets	lib/netlink-socket.c	/^nl_sock_subscribe_packets(struct nl_sock *sock)$/;"	f
nl_sock_transact	lib/netlink-socket.c	/^nl_sock_transact(struct nl_sock *sock, const struct ofpbuf *request,$/;"	f	file:
nl_sock_transact_multiple	lib/netlink-socket.c	/^nl_sock_transact_multiple(struct nl_sock *sock,$/;"	f	file:
nl_sock_transact_multiple__	lib/netlink-socket.c	/^nl_sock_transact_multiple__(struct nl_sock *sock,$/;"	f	file:
nl_sock_unsubscribe_packets	lib/netlink-socket.c	/^nl_sock_unsubscribe_packets(struct nl_sock *sock)$/;"	f
nl_sock_wait	lib/netlink-socket.c	/^nl_sock_wait(const struct nl_sock *sock, short int events)$/;"	f
nl_transact	lib/netlink-socket.c	/^nl_transact(int protocol, const struct ofpbuf *request,$/;"	f
nl_transact_multiple	lib/netlink-socket.c	/^nl_transact_multiple(int protocol,$/;"	f
nl_transaction	lib/netlink-socket.h	/^struct nl_transaction {$/;"	s
nla	ofproto/ofproto-dpif-upcall.c	/^        struct nlattr nla;$/;"	m	union:udpif_key::__anon198	typeref:struct:udpif_key::__anon198::nlattr	file:
nlaLen	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT16 nlaLen;$/;"	m	struct:_NL_ATTR
nlaType	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT16 nlaType;$/;"	m	struct:_NL_ATTR
nla_alloc_flow_actions	datapath/flow_netlink.c	/^static struct sw_flow_actions *nla_alloc_flow_actions(int size, bool log)$/;"	f	file:
nla_alloc_flow_actions	datapath/linux/flow_netlink.c	/^static struct sw_flow_actions *nla_alloc_flow_actions(int size, bool log)$/;"	f	file:
nla_find_nested	datapath/linux/compat/include/net/netlink.h	/^static inline struct nlattr *nla_find_nested(struct nlattr *nla, int attrtype)$/;"	f
nla_for_each_nested	datapath/linux/compat/include/net/netlink.h	56;"	d
nla_get_be16	datapath/linux/compat/include/net/netlink.h	/^static inline __be16 nla_get_be16(const struct nlattr *nla)$/;"	f
nla_get_be64	datapath/linux/compat/include/net/netlink.h	/^static inline __be64 nla_get_be64(const struct nlattr *nla)$/;"	f
nla_get_be64	datapath/linux/compat/include/net/netlink.h	22;"	d
nla_get_in6_addr	datapath/linux/compat/include/net/netlink.h	/^static inline struct in6_addr nla_get_in6_addr(const struct nlattr *nla)$/;"	f
nla_get_in_addr	datapath/linux/compat/include/net/netlink.h	/^static inline __be32 nla_get_in_addr(const struct nlattr *nla)$/;"	f
nla_is_last	datapath/linux/compat/include/net/netlink.h	/^static inline bool nla_is_last(const struct nlattr *nla, int rem)$/;"	f
nla_len	lib/netlink-protocol.h	/^    uint16_t nla_len;$/;"	m	struct:nlattr
nla_put_be16	datapath/linux/compat/include/net/netlink.h	/^static inline int nla_put_be16(struct sk_buff *skb, int attrtype, __be16 value)$/;"	f
nla_put_be32	datapath/linux/compat/include/net/netlink.h	/^static inline int nla_put_be32(struct sk_buff *skb, int attrtype, __be32 value)$/;"	f
nla_put_be64	datapath/linux/compat/include/net/netlink.h	/^static inline int nla_put_be64(struct sk_buff *skb, int attrtype, __be64 value)$/;"	f
nla_put_in6_addr	datapath/linux/compat/include/net/netlink.h	/^static inline int nla_put_in6_addr(struct sk_buff *skb, int attrtype,$/;"	f
nla_put_in_addr	datapath/linux/compat/include/net/netlink.h	/^static inline int nla_put_in_addr(struct sk_buff *skb, int attrtype,$/;"	f
nla_type	lib/netlink-protocol.h	/^    uint16_t nla_type;$/;"	m	struct:nlattr
nlattr	lib/netlink-protocol.h	/^struct nlattr {$/;"	s
nlattr_set	datapath/flow_netlink.c	/^static void nlattr_set(struct nlattr *attr, u8 val,$/;"	f	file:
nlattr_set	datapath/linux/flow_netlink.c	/^static void nlattr_set(struct nlattr *attr, u8 val,$/;"	f	file:
nlmsgFlags	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT16 nlmsgFlags;$/;"	m	struct:_NL_MSG_HDR
nlmsgLen	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT32 nlmsgLen;$/;"	m	struct:_NL_MSG_HDR
nlmsgPid	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT32 nlmsgPid;$/;"	m	struct:_NL_MSG_HDR
nlmsgSeq	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT32 nlmsgSeq;$/;"	m	struct:_NL_MSG_HDR
nlmsgType	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT16 nlmsgType;$/;"	m	struct:_NL_MSG_HDR
nlmsg_flags	lib/dpif-netlink.c	/^    unsigned int nlmsg_flags;$/;"	m	struct:dpif_netlink_flow	file:
nlmsg_flags	lib/netlink-protocol.h	/^    uint16_t nlmsg_flags;$/;"	m	struct:nlmsghdr
nlmsg_len	lib/netlink-protocol.h	/^    uint32_t nlmsg_len;$/;"	m	struct:nlmsghdr
nlmsg_pid	lib/netlink-protocol.h	/^    uint32_t nlmsg_pid;$/;"	m	struct:nlmsghdr
nlmsg_seq	lib/netlink-protocol.h	/^    uint32_t nlmsg_seq;$/;"	m	struct:nlmsghdr
nlmsg_to_string	lib/netlink-socket.c	/^nlmsg_to_string(const struct ofpbuf *buffer, int protocol)$/;"	f	file:
nlmsg_type	lib/netlink-protocol.h	/^    uint16_t nlmsg_type;$/;"	m	struct:nlmsghdr
nlmsg_type	lib/route-table.c	/^    int nlmsg_type;       \/* e.g. RTM_NEWROUTE, RTM_DELROUTE. *\/$/;"	m	struct:route_table_msg	file:
nlmsg_type	lib/rtnetlink.h	/^    int nlmsg_type;             \/* e.g. RTM_NEWLINK, RTM_DELLINK. *\/$/;"	m	struct:rtnetlink_change
nlmsgerr	lib/netlink-protocol.h	/^struct nlmsgerr$/;"	s
nlmsghdr	lib/netlink-protocol.h	/^struct nlmsghdr {$/;"	s
nlmsghdr_to_string	lib/netlink-socket.c	/^nlmsghdr_to_string(const struct nlmsghdr *h, int protocol, struct ds *ds)$/;"	f	file:
nln	lib/netlink-notifier.c	/^    struct nln *nln;             \/* Parent nln. *\/$/;"	m	struct:nln_notifier	typeref:struct:nln_notifier::nln	file:
nln	lib/netlink-notifier.c	/^struct nln {$/;"	s	file:
nln	lib/route-table.c	/^static struct nln *nln = NULL;$/;"	v	typeref:struct:nln	file:
nln	lib/rtnetlink.c	/^static struct nln *nln = NULL;$/;"	v	typeref:struct:nln	file:
nln6	lib/route-table.c	/^static struct nln *nln6 = NULL;$/;"	v	typeref:struct:nln	file:
nln_changed	lib/netlink-notifier.c	/^COVERAGE_DEFINE(nln_changed);$/;"	v
nln_create	lib/netlink-notifier.c	/^nln_create(int protocol, int multicast_group, nln_parse_func *parse,$/;"	f
nln_destroy	lib/netlink-notifier.c	/^nln_destroy(struct nln *nln)$/;"	f
nln_notifier	lib/netlink-notifier.c	/^struct nln_notifier {$/;"	s	file:
nln_notifier_create	lib/netlink-notifier.c	/^nln_notifier_create(struct nln *nln, nln_notify_func *cb, void *aux)$/;"	f
nln_notifier_destroy	lib/netlink-notifier.c	/^nln_notifier_destroy(struct nln_notifier *notifier)$/;"	f
nln_notify_func	lib/netlink-notifier.h	/^typedef void nln_notify_func(const void *change, void *aux);$/;"	t
nln_parse_func	lib/netlink-notifier.h	/^typedef bool nln_parse_func(struct ofpbuf *buf, void *change);$/;"	t
nln_report	lib/netlink-notifier.c	/^nln_report(struct nln *nln, void *change)$/;"	f	file:
nln_run	lib/netlink-notifier.c	/^nln_run(struct nln *nln)$/;"	f
nln_wait	lib/netlink-notifier.c	/^nln_wait(struct nln *nln)$/;"	f
noCopiedNbl	datapath-windows/ovsext/Actions.c	/^    UINT32 noCopiedNbl;$/;"	m	struct:_OVS_ACTION_STATS	file:
noResource	datapath-windows/ovsext/Actions.c	/^    UINT32 noResource;$/;"	m	struct:_OVS_ACTION_STATS	file:
noVport	datapath-windows/ovsext/Actions.c	/^    UINT32 noVport;$/;"	m	struct:_OVS_ACTION_STATS	file:
no_argument	include/windows/getopt.h	41;"	d
no_packet_in_rule	ofproto/ofproto-dpif.c	/^    struct rule_dpif *no_packet_in_rule; \/* Drops flow table misses. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::rule_dpif	file:
noarg	lib/getopt_long.c	/^static const char noarg[] = "option doesn't take an argument -- %.*s";$/;"	v	file:
nobase_pkgdata_DATA	Makefile	/^nobase_pkgdata_DATA = $(ovs_pyfiles) $(ovstest_pyfiles)$/;"	m
nobase_pkgdata_DATA	python/automake.mk	/^nobase_pkgdata_DATA = $(ovs_pyfiles) $(ovstest_pyfiles)$/;"	m
node	datapath/flow.h	/^		struct hlist_node node[2];$/;"	m	struct:sw_flow::__anon41	typeref:struct:sw_flow::__anon41::hlist_node
node	lib/bfd.c	/^    struct hmap_node node;        \/* In 'all_bfds'. *\/$/;"	m	struct:bfd	typeref:struct:bfd::hmap_node	file:
node	lib/cfm.c	/^    struct hmap_node node; \/* Node in 'remote_mps' map. *\/$/;"	m	struct:remote_mp	typeref:struct:remote_mp::hmap_node	file:
node	lib/classifier.h	/^    struct rculist node;          \/* In struct cls_subtable 'rules_list'. *\/$/;"	m	struct:cls_rule	typeref:struct:cls_rule::rculist
node	lib/cmap.h	/^    struct cmap_node *node;$/;"	m	struct:cmap_cursor	typeref:struct:cmap_cursor::cmap_node
node	lib/dpif-netdev.c	/^    const struct cmap_node node; \/* In owning dp_netdev_pmd_thread's *\/$/;"	m	struct:dp_netdev_flow	typeref:struct:dp_netdev_flow::cmap_node	file:
node	lib/dpif-netdev.c	/^    struct cmap_node node;          \/* In 'dp->poll_threads'. *\/$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::cmap_node	file:
node	lib/dpif-netdev.c	/^    struct cmap_node node;      \/* Node in dp_netdev's 'ports'. *\/$/;"	m	struct:dp_netdev_port	typeref:struct:dp_netdev_port::cmap_node	file:
node	lib/id-pool.c	/^    struct hmap_node node;$/;"	m	struct:id_node	typeref:struct:id_node::hmap_node	file:
node	lib/lacp.c	/^    struct hmap_node node;        \/* Node in master's slaves map. *\/$/;"	m	struct:slave	typeref:struct:slave::hmap_node	file:
node	lib/lacp.c	/^    struct ovs_list node;         \/* Node in all_lacps list. *\/$/;"	m	struct:lacp	typeref:struct:lacp::ovs_list	file:
node	lib/mcast-snooping.h	/^    struct ovs_list node;$/;"	m	struct:mcast_port_bundle	typeref:struct:mcast_port_bundle::ovs_list
node	lib/netdev-dummy.c	/^    struct ovs_list node;       \/* In netdev_dummy's "rxes" list. *\/$/;"	m	struct:netdev_rxq_dummy	typeref:struct:netdev_rxq_dummy::ovs_list	file:
node	lib/netdev-provider.h	/^    struct shash_node *node;            \/* Pointer to element in global map. *\/$/;"	m	struct:netdev	typeref:struct:netdev::shash_node
node	lib/netdev.c	/^    struct ovs_list node;           \/* In struct netdev's saved_flags_list. *\/$/;"	m	struct:netdev_saved_flags	typeref:struct:netdev_saved_flags::ovs_list	file:
node	lib/netlink-notifier.c	/^    struct ovs_list node;$/;"	m	struct:nln_notifier	typeref:struct:nln_notifier::ovs_list	file:
node	lib/process.c	/^    struct ovs_list node;$/;"	m	struct:process	typeref:struct:process::ovs_list	file:
node	lib/rtbsd.h	/^    struct ovs_list node;$/;"	m	struct:rtbsd_notifier	typeref:struct:rtbsd_notifier::ovs_list
node	lib/shash.h	/^    struct hmap_node node;$/;"	m	struct:shash_node	typeref:struct:shash_node::hmap_node
node	lib/simap.h	/^    struct hmap_node node;      \/* In struct simap's 'map' hmap. *\/$/;"	m	struct:simap_node	typeref:struct:simap_node::hmap_node
node	lib/smap.h	/^    struct hmap_node node;     \/* In struct smap's 'map' hmap. *\/$/;"	m	struct:smap_node	typeref:struct:smap_node::hmap_node
node	lib/stp.c	/^    struct ovs_list node;           \/* Node in all_stps list. *\/$/;"	m	struct:stp	typeref:struct:stp::ovs_list	file:
node	lib/tnl-ports.c	/^    struct ovs_list node;$/;"	m	struct:ip_device	typeref:struct:ip_device::ovs_list	file:
node	lib/tnl-ports.c	/^    struct ovs_list node;$/;"	m	struct:tnl_port	typeref:struct:tnl_port::ovs_list	file:
node	lib/tun-metadata.c	/^    struct hmap_node node;      \/* In struct tun_table's key_hmap. *\/$/;"	m	struct:tun_meta_entry	typeref:struct:tun_meta_entry::hmap_node	file:
node	lib/unixctl.c	/^    struct ovs_list node;$/;"	m	struct:unixctl_conn	typeref:struct:unixctl_conn::ovs_list	file:
node	ofproto/bundles.h	/^    struct hmap_node  node;      \/* In struct ofconn's "bundles" hmap. *\/$/;"	m	struct:ofp_bundle	typeref:struct:ofp_bundle::hmap_node
node	ofproto/bundles.h	/^    struct ovs_list   node;$/;"	m	struct:ofp_bundle_entry	typeref:struct:ofp_bundle_entry::ovs_list
node	ofproto/connmgr.c	/^    struct hmap_node node;      \/* In struct connmgr's "services" hmap. *\/$/;"	m	struct:ofservice	typeref:struct:ofservice::hmap_node	file:
node	ofproto/connmgr.c	/^    struct ovs_list node;       \/* In struct connmgr's "all_conns" list. *\/$/;"	m	struct:ofconn	typeref:struct:ofconn::ovs_list	file:
node	ofproto/ofproto-dpif-ipfix.c	/^    struct hmap_node node;$/;"	m	struct:dpif_ipfix_flow_exporter_map_node	typeref:struct:dpif_ipfix_flow_exporter_map_node::hmap_node	file:
node	ofproto/pinsched.c	/^    struct hmap_node node;      \/* In struct pinsched's 'queues' hmap. *\/$/;"	m	struct:pinqueue	typeref:struct:pinqueue::hmap_node	file:
node	ovn/controller/encaps.c	/^    struct hmap_node node;$/;"	m	struct:port_hash_node	typeref:struct:port_hash_node::hmap_node	file:
node	ovn/lib/expr.c	/^    struct ovs_list node;$/;"	m	struct:annotation_nesting	typeref:struct:annotation_nesting::ovs_list	file:
node	ovn/lib/expr.h	/^    struct ovs_list node;       \/* In parent EXPR_T_AND or EXPR_T_OR if any. *\/$/;"	m	struct:expr	typeref:struct:expr::ovs_list
node	ovsdb/jsonrpc-server.c	/^    struct hmap_node node;      \/* In ovsdb_jsonrpc_session's "monitors". *\/$/;"	m	struct:ovsdb_jsonrpc_monitor	typeref:struct:ovsdb_jsonrpc_monitor::hmap_node	file:
node	ovsdb/jsonrpc-server.c	/^    struct ovs_list node;       \/* Element in remote's sessions list. *\/$/;"	m	struct:ovsdb_jsonrpc_session	typeref:struct:ovsdb_jsonrpc_session::ovs_list	file:
node	ovsdb/monitor.c	/^    struct ovs_list node;$/;"	m	struct:jsonrpc_monitor_node	typeref:struct:jsonrpc_monitor_node::ovs_list	file:
node	ovsdb/ovsdb.h	/^    struct ovs_list node;       \/* Element in "struct ovsdb" replicas list. *\/$/;"	m	struct:ovsdb_replica	typeref:struct:ovsdb_replica::ovs_list
node	ovsdb/transaction.c	/^    struct ovs_list node;       \/* Element in ovsdb_txn's txn_tables list. *\/$/;"	m	struct:ovsdb_txn_table	typeref:struct:ovsdb_txn_table::ovs_list	file:
node	ovsdb/trigger.h	/^    struct ovs_list node;       \/* !result: in db->triggers;$/;"	m	struct:ovsdb_trigger	typeref:struct:ovsdb_trigger::ovs_list
node	tests/test-cmap.c	/^    struct cmap_node node;$/;"	m	struct:element	typeref:struct:element::cmap_node	file:
node	tests/test-cmap.c	/^    struct hmap_node node;$/;"	m	struct:helement	typeref:struct:helement::hmap_node	file:
node	tests/test-hindex.c	/^    struct hindex_node node;$/;"	m	struct:element	typeref:struct:element::hindex_node	file:
node	tests/test-hmap.c	/^    struct hmap_node node;$/;"	m	struct:element	typeref:struct:element::hmap_node	file:
node	tests/test-list.c	/^    struct ovs_list node;$/;"	m	struct:element	typeref:struct:element::ovs_list	file:
node	vswitchd/bridge.c	/^    struct hmap_node node;      \/* In 'all_bridges'. *\/$/;"	m	struct:bridge	typeref:struct:bridge::hmap_node	file:
node1	utilities/ovs-test	/^                node1 = (my_ip, node1[1], node1[2], node1[3])$/;"	v
node1	utilities/ovs-test	/^            node1 = ovs_args.servers[0]$/;"	v
node2	utilities/ovs-test	/^            node2 = ovs_args.servers[1]$/;"	v
node_ver	datapath/flow_table.h	/^	int node_ver;$/;"	m	struct:table_instance
nodes	lib/cmap.c	/^    struct cmap_node nodes[CMAP_K];$/;"	m	struct:cmap_bucket	typeref:struct:cmap_bucket::cmap_node	file:
nodist_lib_libopenvswitch_la_OBJECTS	Makefile	/^nodist_lib_libopenvswitch_la_OBJECTS = lib\/dirs.lo lib\/vswitch-idl.lo \\$/;"	m
nodist_lib_libopenvswitch_la_SOURCES	Makefile	/^nodist_lib_libopenvswitch_la_SOURCES = lib\/dirs.c lib\/vswitch-idl.c \\$/;"	m
nodist_lib_libopenvswitch_la_SOURCES	lib/automake.mk	/^nodist_lib_libopenvswitch_la_SOURCES = \\$/;"	m
nodist_ovn_lib_libovn_la_OBJECTS	Makefile	/^nodist_ovn_lib_libovn_la_OBJECTS = ovn\/lib\/ovn-nb-idl.lo \\$/;"	m
nodist_ovn_lib_libovn_la_SOURCES	Makefile	/^nodist_ovn_lib_libovn_la_SOURCES = \\$/;"	m
nodist_ovn_lib_libovn_la_SOURCES	ovn/lib/automake.mk	/^nodist_ovn_lib_libovn_la_SOURCES = \\$/;"	m
nodist_tests_test_ovsdb_OBJECTS	Makefile	/^nodist_tests_test_ovsdb_OBJECTS = tests\/idltest.$(OBJEXT)$/;"	m
nodist_tests_test_ovsdb_SOURCES	Makefile	/^nodist_tests_test_ovsdb_SOURCES = tests\/idltest.c tests\/idltest.h$/;"	m
nodist_tests_test_ovsdb_SOURCES	tests/automake.mk	/^nodist_tests_test_ovsdb_SOURCES = tests\/idltest.c tests\/idltest.h$/;"	m
nodist_vtep_libvtep_la_OBJECTS	Makefile	/^nodist_vtep_libvtep_la_OBJECTS = vtep\/vtep-idl.lo$/;"	m
nodist_vtep_libvtep_la_SOURCES	Makefile	/^nodist_vtep_libvtep_la_SOURCES = \\$/;"	m
nodist_vtep_libvtep_la_SOURCES	vtep/automake.mk	/^nodist_vtep_libvtep_la_SOURCES = \\$/;"	m
noinst_DATA	Makefile	/^noinst_DATA = $/;"	m
noinst_HEADERS	Makefile	/^noinst_HEADERS = $(EXTRA_DIST) include\/sparse\/arpa\/inet.h \\$/;"	m
noinst_PROGRAMS	Makefile	/^noinst_PROGRAMS = $(am__EXEEXT_1) tests\/test-ovsdb$(EXEEXT) \\$/;"	m
noinst_SCRIPTS	Makefile	/^noinst_SCRIPTS = utilities\/ovs-sim ovsdb\/ovsdb-idlc ovsdb\/ovsdb-dot$/;"	m
noinst_man_MANS	Makefile	/^noinst_man_MANS = utilities\/ovs-sim.1$/;"	m
non_atomic_ullong_add	lib/dpif-netdev.c	/^non_atomic_ullong_add(atomic_ullong *var, unsigned long long n)$/;"	f	file:
non_pmd_mutex	lib/dpif-netdev.c	/^    struct ovs_mutex non_pmd_mutex;$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::ovs_mutex	file:
non_root_user	lib/daemon-unix.c	/^static bool non_root_user = false;$/;"	v	file:
nonce	datapath/linux/vport-lisp.c	/^		__u8 nonce[3];$/;"	m	union:lisphdr::__anon52	file:
nonce	datapath/vport-lisp.c	/^		__u8 nonce[3];$/;"	m	union:lisphdr::__anon55	file:
nonce_present	datapath/linux/vport-lisp.c	/^	__u8 nonce_present:1;$/;"	m	struct:lisphdr	file:
nonce_present	datapath/vport-lisp.c	/^	__u8 nonce_present:1;$/;"	m	struct:lisphdr	file:
nonmiss	lib/ofp-util.h	/^    } nonmiss, miss;$/;"	m	struct:ofputil_table_features	typeref:struct:ofputil_table_features::ofputil_table_instruction_features
nonopt_end	lib/getopt_long.c	/^static int nonopt_end = -1;   \/* first option after non options (for permute) *\/$/;"	v	file:
nonopt_start	lib/getopt_long.c	/^static int nonopt_start = -1; \/* first non option argument (for permute) *\/$/;"	v	file:
nonpmd_mempool_mutex	lib/netdev-dpdk.c	/^static struct ovs_mutex nonpmd_mempool_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
normal	ofproto/ofproto-dpif-xlate.c	/^        } normal;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon194	file:
normalize_frag_list	datapath/linux/compat/stt.c	/^static struct sk_buff *normalize_frag_list(struct sk_buff *head,$/;"	f	file:
normalize_frag_list	datapath/linux/stt.c	/^static struct sk_buff *normalize_frag_list(struct sk_buff *head,$/;"	f	file:
normalize_idle_time	lib/mac-learning.c	/^normalize_idle_time(unsigned int idle_time)$/;"	f	file:
normalize_idle_time	lib/mcast-snooping.c	/^normalize_idle_time(unsigned int idle_time)$/;"	f	file:
northd_context	ovn/northd/ovn-northd.c	/^struct northd_context {$/;"	s	file:
nossl_option	lib/stream-nossl.c	/^nossl_option(const char *detail)$/;"	f	file:
not	ovn/lib/expr.c	/^    bool not;                   \/* True inside odd number of NOT operators. *\/$/;"	m	struct:expr_context	file:
note	lib/ofp-actions.c	/^    uint8_t note[6];                \/* Start of user-defined data. *\/$/;"	m	struct:nx_action_note	file:
notifier	lib/if-notifier-bsd.c	/^    struct rtbsd_notifier notifier;$/;"	m	struct:if_notifier	typeref:struct:if_notifier::rtbsd_notifier	file:
notifier	lib/if-notifier.c	/^    struct nln_notifier *notifier;$/;"	m	struct:if_notifier	typeref:struct:if_notifier::nln_notifier	file:
notify	python/ovs/db/idl.py	/^    def notify(self, event, row, updates=None):$/;"	m	class:Idl
notify	tests/test-ovsdb.py	/^            def notify(event, row, updates=None):$/;"	f	function:idl_set
notify_sock	lib/netlink-notifier.c	/^    struct nl_sock *notify_sock; \/* Netlink socket. *\/$/;"	m	struct:nln	typeref:struct:nln::nl_sock	file:
notify_sock	lib/rtbsd.c	/^static int notify_sock = -1;$/;"	v	file:
now	lib/sflow_api.h	/^    time_t now;             \/* time now *\/$/;"	m	struct:_SFLAgent
now	ofproto/ofproto.c	/^    long long int now;$/;"	m	struct:queue_stats_cbdata	file:
now	tests/test-reconnect.c	/^static int now;$/;"	v	file:
now	tests/test-reconnect.py	/^now = 0$/;"	v
nr_bridges	datapath/linux/compat/dev-openvswitch.c	/^static int nr_bridges;$/;"	v	file:
nr_bridges	datapath/linux/dev-openvswitch.c	/^static int nr_bridges;$/;"	v	file:
nsrcs	lib/packets.h	/^    ovs_be16 nsrcs;$/;"	m	struct:igmpv3_record
nsrcs	lib/packets.h	/^    ovs_be16 nsrcs;$/;"	m	struct:mld2_record
ntoh	build-aux/extract-ofp-actions	/^                ntoh = types[base_argtype]['ntoh']$/;"	v
ntoh128	lib/byte-order.h	/^ntoh128(const ovs_be128 *src, ovs_u128 *dst)$/;"	f
ntohl	datapath-windows/ovsext/Util.h	77;"	d
ntohl	include/sparse/netinet/in.h	/^static inline uint32_t ntohl(ovs_be32 x)$/;"	f
ntohll	lib/byte-order.h	/^ntohll(ovs_be64 n)$/;"	f
ntohs	datapath-windows/ovsext/Util.h	75;"	d
ntohs	include/sparse/netinet/in.h	/^static inline uint16_t ntohs(ovs_be16 x)$/;"	f
ntr_group_mod_subtype	include/openflow/netronome-ext.h	/^enum ntr_group_mod_subtype {$/;"	g
ntr_group_prop_selection_method	include/openflow/netronome-ext.h	/^struct ntr_group_prop_selection_method {$/;"	s
ntt_actor	lib/lacp.c	/^    struct lacp_info ntt_actor;   \/* Used to decide if we Need To Transmit. *\/$/;"	m	struct:slave	typeref:struct:slave::lacp_info	file:
null_fd	python/ovs/socket_util.py	/^null_fd = -1$/;"	v
null_from_json_null	lib/jsonrpc.c	/^null_from_json_null(struct json *json)$/;"	f	file:
null_idx	ofproto/pktbuf.c	/^    unsigned int null_idx;$/;"	m	struct:pktbuf	file:
nullable_string_is_equal	ofproto/ofproto-dpif-sflow.c	/^nullable_string_is_equal(const char *a, const char *b)$/;"	f	file:
numElems	datapath-windows/ovsext/Event.h	/^    UINT16 numElems;$/;"	m	struct:_OVS_EVENT_QUEUE
numEntries	datapath-windows/ovsext/TunnelFilter.c	/^    UINT32         numEntries;$/;"	m	struct:_OVS_TUNFLT_REQUEST_LIST	file:
numHvVports	datapath-windows/ovsext/Switch.h	/^    UINT32                  numHvVports;$/;"	m	struct:_OVS_SWITCH_CONTEXT
numNonHvVports	datapath-windows/ovsext/Switch.h	/^    UINT32                  numNonHvVports;$/;"	m	struct:_OVS_SWITCH_CONTEXT
numPackets	datapath-windows/ovsext/User.h	/^    UINT32 numPackets;$/;"	m	struct:_OVS_USER_PACKET_QUEUE
numPhysicalNics	datapath-windows/ovsext/Switch.h	/^    UINT32                  numPhysicalNics;        \/\/ the number of physical$/;"	m	struct:_OVS_SWITCH_CONTEXT
numSamples	lib/sflow_api.h	/^    u_int32_t numSamples;$/;"	m	struct:_SFLSampleCollector
numSources	datapath-windows/ovsext/NetProto.h	/^   UINT16 numSources;$/;"	m	struct:IGMPV3Trailer
num_elements	lib/sflow.h	/^    u_int32_t num_elements;$/;"	m	struct:_SFLCounters_sample
num_elements	lib/sflow.h	/^    u_int32_t num_elements;$/;"	m	struct:_SFLCounters_sample_expanded
num_elements	lib/sflow.h	/^    u_int32_t num_elements;$/;"	m	struct:_SFLFlow_sample
num_elements	lib/sflow.h	/^    u_int32_t num_elements;$/;"	m	struct:_SFLFlow_sample_expanded
num_health_ccm	lib/cfm.c	/^    uint8_t num_health_ccm; \/* Number of received ccm frames every$/;"	m	struct:remote_mp	file:
num_records	lib/sflow.h	/^    u_int32_t num_records;           \/* Number of tag-len-val flow\/counter records to follow *\/$/;"	m	struct:_SFLSample_datagram_hdr
num_tests	tests/test-aa.c	/^static int num_tests = 0;$/;"	v	file:
numa	lib/ovs-numa.c	/^    struct numa_node *numa;    \/* numa node containing the core. *\/$/;"	m	struct:cpu_core	typeref:struct:cpu_core::numa_node	file:
numaNodeId	datapath-windows/ovsext/Vport.h	/^    UINT16                 numaNodeId;$/;"	m	struct:_OVS_VPORT_ENTRY
numa_id	lib/dpif-netdev.c	/^    int numa_id;                    \/* numa node id of this pmd thread. *\/$/;"	m	struct:dp_netdev_pmd_thread	file:
numa_id	lib/ovs-numa.c	/^    int numa_id;                    \/* numa node id. *\/$/;"	m	struct:numa_node	file:
numa_id	lib/ovs-numa.h	/^    int numa_id;$/;"	m	struct:ovs_numa_info
numa_node	lib/ovs-numa.c	/^struct numa_node {$/;"	s	file:
number	tests/test-ovsdb.c	/^    int number;$/;"	m	struct:test_trigger	file:
numberEntries	datapath-windows/ovsext/DpInternal.h	/^    uint32_t numberEntries;$/;"	m	struct:_OVS_EVENT_STATUS
numberOpenInstance	datapath-windows/ovsext/Datapath.h	/^    INT numberOpenInstance;$/;"	m	struct:_OVS_DEVICE_EXTENSION
nwDst	datapath-windows/ovsext/DpInternal.h	/^    ovs_be32 nwDst;              \/* IPv4 destination address. *\/$/;"	m	struct:ArpKey
nwDst	datapath-windows/ovsext/DpInternal.h	/^    ovs_be32 nwDst;              \/* IPv4 destination address. *\/$/;"	m	struct:Ipkey
nwFrag	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwFrag;              \/* FLOW_FRAG_* flags. *\/$/;"	m	struct:Icmp6Key
nwFrag	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwFrag;              \/* FLOW_FRAG_* flags. *\/$/;"	m	struct:Ipkey
nwFrag	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwFrag;              \/* FLOW_FRAG_* flags. *\/$/;"	m	struct:Ipv6Key
nwProto	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwProto;             \/* IP protocol or low 8 bits of ARP opcode. *\/$/;"	m	struct:ArpKey
nwProto	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwProto;             \/* IP protocol or low 8 bits of ARP opcode. *\/$/;"	m	struct:Icmp6Key
nwProto	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwProto;             \/* IP protocol or low 8 bits of ARP opcode. *\/$/;"	m	struct:Ipkey
nwProto	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwProto;             \/* IP protocol or low 8 bits of ARP opcode. *\/$/;"	m	struct:Ipv6Key
nwSrc	datapath-windows/ovsext/DpInternal.h	/^    ovs_be32 nwSrc;              \/* IPv4 source address. *\/$/;"	m	struct:ArpKey
nwSrc	datapath-windows/ovsext/DpInternal.h	/^    ovs_be32 nwSrc;              \/* IPv4 source address. *\/$/;"	m	struct:Ipkey
nwTos	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwTos;               \/* IP ToS (including DSCP and ECN). *\/$/;"	m	struct:Icmp6Key
nwTos	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwTos;               \/* IP ToS (including DSCP and ECN). *\/$/;"	m	struct:Ipkey
nwTos	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwTos;               \/* IP ToS (including DSCP and ECN). *\/$/;"	m	struct:Ipv6Key
nwTtl	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwTtl;               \/* IP TTL\/Hop Limit. *\/$/;"	m	struct:Icmp6Key
nwTtl	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwTtl;               \/* IP TTL\/Hop Limit. *\/$/;"	m	struct:Ipkey
nwTtl	datapath-windows/ovsext/DpInternal.h	/^    uint8_t nwTtl;               \/* IP TTL\/Hop Limit. *\/$/;"	m	struct:Ipv6Key
nw_addr	lib/ovs-router.c	/^    struct in6_addr nw_addr;$/;"	m	struct:ovs_router_entry	typeref:struct:ovs_router_entry::in6_addr	file:
nw_dscp_values	tests/test-classifier.c	/^static uint8_t nw_dscp_values[] = { 48, 0 };$/;"	v	file:
nw_dst	include/openflow/openflow-1.0.h	/^    ovs_be32 nw_dst;           \/* IP destination address. *\/$/;"	m	struct:ofp10_match
nw_dst	include/openflow/openflow-1.1.h	/^    ovs_be32 nw_dst;           \/* IP destination address. *\/$/;"	m	struct:ofp11_match
nw_dst	lib/flow.h	/^    ovs_be32 nw_dst;            \/* IPv4 destination address. *\/$/;"	m	struct:flow
nw_dst	lib/pcap-file.c	/^    ovs_be32 nw_src, nw_dst;$/;"	m	struct:tcp_key	file:
nw_dst	ofproto/netflow.c	/^    ovs_be32 nw_dst;              \/* IPv4 destination address. *\/$/;"	m	struct:netflow_flow	file:
nw_dst_mask	include/openflow/openflow-1.1.h	/^    ovs_be32 nw_dst_mask;      \/* IP destination address mask. *\/$/;"	m	struct:ofp11_match
nw_dst_values	tests/test-classifier.c	/^static ovs_be32 nw_dst_values[] = { CONSTANT_HTONL(0xc0a80002),$/;"	v	file:
nw_frag	lib/flow.h	/^    uint8_t nw_frag;            \/* FLOW_FRAG_* flags. *\/$/;"	m	struct:flow
nw_proto	include/openflow/openflow-1.0.h	/^    uint8_t nw_proto;          \/* IP protocol or lower 8 bits of$/;"	m	struct:ofp10_match
nw_proto	include/openflow/openflow-1.1.h	/^    uint8_t nw_proto;          \/* IP protocol or lower 8 bits of ARP opcode. *\/$/;"	m	struct:ofp11_match
nw_proto	lib/flow.h	/^    uint8_t nw_proto;           \/* IP protocol or low 8 bits of ARP opcode. *\/$/;"	m	struct:flow
nw_proto	lib/ofp-parse.c	/^    uint8_t nw_proto;$/;"	m	struct:protocol	file:
nw_proto	ofproto/netflow.c	/^    uint8_t nw_proto;             \/* IP protocol. *\/$/;"	m	struct:netflow_flow	file:
nw_proto_values	tests/test-classifier.c	/^static uint8_t nw_proto_values[] = { IPPROTO_TCP, IPPROTO_ICMP };$/;"	v	file:
nw_src	include/openflow/openflow-1.0.h	/^    ovs_be32 nw_src;           \/* IP source address. *\/$/;"	m	struct:ofp10_match
nw_src	include/openflow/openflow-1.1.h	/^    ovs_be32 nw_src;           \/* IP source address. *\/$/;"	m	struct:ofp11_match
nw_src	lib/flow.h	/^    ovs_be32 nw_src;            \/* IPv4 source address. *\/$/;"	m	struct:flow
nw_src	lib/pcap-file.c	/^    ovs_be32 nw_src, nw_dst;$/;"	m	struct:tcp_key	file:
nw_src	ofproto/netflow.c	/^    ovs_be32 nw_src;              \/* IPv4 source address. *\/$/;"	m	struct:netflow_flow	file:
nw_src_mask	include/openflow/openflow-1.1.h	/^    ovs_be32 nw_src_mask;      \/* IP source address mask. *\/$/;"	m	struct:ofp11_match
nw_src_values	tests/test-classifier.c	/^static ovs_be32 nw_src_values[] = { CONSTANT_HTONL(0xc0a80001),$/;"	v	file:
nw_tos	include/openflow/openflow-1.0.h	/^    uint8_t nw_tos;            \/* IP ToS (DSCP field, 6 bits). *\/$/;"	m	struct:ofp10_match
nw_tos	include/openflow/openflow-1.1.h	/^    uint8_t nw_tos;            \/* IP ToS (actually DSCP field, 6 bits). *\/$/;"	m	struct:ofp11_match
nw_tos	lib/flow.h	/^    uint8_t nw_tos;             \/* IP ToS (including DSCP and ECN). *\/$/;"	m	struct:flow
nw_tos	ofproto/netflow.c	/^    uint8_t nw_tos;               \/* IP ToS (including DSCP and ECN). *\/$/;"	m	struct:netflow_flow	file:
nw_ttl	lib/flow.h	/^    uint8_t nw_ttl;             \/* IP TTL\/Hop Limit. *\/$/;"	m	struct:flow
nx_action_bundle	lib/ofp-actions.c	/^struct nx_action_bundle {$/;"	s	file:
nx_action_cnt_ids	lib/ofp-actions.c	/^struct nx_action_cnt_ids {$/;"	s	file:
nx_action_conjunction	lib/ofp-actions.c	/^struct nx_action_conjunction {$/;"	s	file:
nx_action_conntrack	lib/ofp-actions.c	/^struct nx_action_conntrack {$/;"	s	file:
nx_action_controller	lib/ofp-actions.c	/^struct nx_action_controller {$/;"	s	file:
nx_action_fin_timeout	lib/ofp-actions.c	/^struct nx_action_fin_timeout {$/;"	s	file:
nx_action_learn	lib/ofp-actions.c	/^struct nx_action_learn {$/;"	s	file:
nx_action_multipath	lib/ofp-actions.c	/^struct nx_action_multipath {$/;"	s	file:
nx_action_note	lib/ofp-actions.c	/^struct nx_action_note {$/;"	s	file:
nx_action_output_reg	lib/ofp-actions.c	/^struct nx_action_output_reg {$/;"	s	file:
nx_action_output_reg2	lib/ofp-actions.c	/^struct nx_action_output_reg2 {$/;"	s	file:
nx_action_reg_load	lib/ofp-actions.c	/^struct nx_action_reg_load {$/;"	s	file:
nx_action_reg_load2	lib/ofp-actions.c	/^struct nx_action_reg_load2 {$/;"	s	file:
nx_action_reg_move	lib/ofp-actions.c	/^struct nx_action_reg_move {$/;"	s	file:
nx_action_resubmit	lib/ofp-actions.c	/^struct nx_action_resubmit {$/;"	s	file:
nx_action_sample	lib/ofp-actions.c	/^struct nx_action_sample {$/;"	s	file:
nx_action_stack	lib/ofp-actions.c	/^struct nx_action_stack {$/;"	s	file:
nx_action_write_metadata	lib/ofp-actions.c	/^struct nx_action_write_metadata {$/;"	s	file:
nx_aggregate_stats_request	include/openflow/nicira-ext.h	/^struct nx_aggregate_stats_request {$/;"	s
nx_async_config	include/openflow/nicira-ext.h	/^struct nx_async_config {$/;"	s
nx_bd_algorithm	lib/ofp-actions.h	/^enum nx_bd_algorithm {$/;"	g
nx_conntrack_flags	lib/ofp-actions.h	/^enum nx_conntrack_flags {$/;"	g
nx_controller_id	include/openflow/nicira-ext.h	/^struct nx_controller_id {$/;"	s
nx_flow_format	include/openflow/nicira-ext.h	/^enum nx_flow_format {$/;"	g
nx_flow_mod	include/openflow/nicira-ext.h	/^struct nx_flow_mod {$/;"	s
nx_flow_mod_table_id	include/openflow/nicira-ext.h	/^struct nx_flow_mod_table_id {$/;"	s
nx_flow_monitor_cancel	include/openflow/nicira-ext.h	/^struct nx_flow_monitor_cancel {$/;"	s
nx_flow_monitor_flags	include/openflow/nicira-ext.h	/^enum nx_flow_monitor_flags {$/;"	g
nx_flow_monitor_flags_to_name	lib/ofp-print.c	/^nx_flow_monitor_flags_to_name(uint32_t bit)$/;"	f	file:
nx_flow_monitor_request	include/openflow/nicira-ext.h	/^struct nx_flow_monitor_request {$/;"	s
nx_flow_removed	include/openflow/nicira-ext.h	/^struct nx_flow_removed {$/;"	s
nx_flow_stats	include/openflow/nicira-ext.h	/^struct nx_flow_stats {$/;"	s
nx_flow_stats_request	include/openflow/nicira-ext.h	/^struct nx_flow_stats_request {$/;"	s
nx_flow_update_abbrev	include/openflow/nicira-ext.h	/^struct nx_flow_update_abbrev {$/;"	s
nx_flow_update_event	include/openflow/nicira-ext.h	/^enum nx_flow_update_event {$/;"	g
nx_flow_update_full	include/openflow/nicira-ext.h	/^struct nx_flow_update_full {$/;"	s
nx_flow_update_header	include/openflow/nicira-ext.h	/^struct nx_flow_update_header {$/;"	s
nx_format_field_name	lib/nx-match.c	/^nx_format_field_name(enum mf_field_id id, enum ofp_version version,$/;"	f
nx_format_mask_tlv	lib/nx-match.c	/^nx_format_mask_tlv(struct ds *ds, enum mf_field_id id,$/;"	f	file:
nx_geneve_map	include/openflow/nicira-ext.h	/^struct nx_geneve_map {$/;"	s
nx_geneve_table_mod	include/openflow/nicira-ext.h	/^struct nx_geneve_table_mod {$/;"	s
nx_geneve_table_mod_command	include/openflow/nicira-ext.h	/^enum nx_geneve_table_mod_command {$/;"	g
nx_geneve_table_reply	include/openflow/nicira-ext.h	/^struct nx_geneve_table_reply {$/;"	s
nx_hash_fields	include/openflow/nicira-ext.h	/^enum nx_hash_fields {$/;"	g
nx_learn_flags	lib/ofp-actions.h	/^enum nx_learn_flags {$/;"	g
nx_match	lib/nx-match.c	/^VLOG_DEFINE_THIS_MODULE(nx_match);$/;"	v
nx_match_from_string	lib/nx-match.c	/^nx_match_from_string(const char *s, struct ofpbuf *b)$/;"	f
nx_match_from_string_raw	lib/nx-match.c	/^nx_match_from_string_raw(const char *s, struct ofpbuf *b)$/;"	f	file:
nx_match_to_string	lib/nx-match.c	/^nx_match_to_string(const uint8_t *p, unsigned int match_len)$/;"	f
nx_mp_algorithm	lib/ofp-actions.h	/^enum nx_mp_algorithm {$/;"	g
nx_packet_in	include/openflow/nicira-ext.h	/^struct nx_packet_in {$/;"	s
nx_packet_in_format	include/openflow/nicira-ext.h	/^enum nx_packet_in_format {$/;"	g
nx_pull_entry	lib/nx-match.c	/^nx_pull_entry(struct ofpbuf *b, const struct mf_field **field,$/;"	f
nx_pull_entry__	lib/nx-match.c	/^nx_pull_entry__(struct ofpbuf *b, bool allow_cookie, uint64_t *header,$/;"	f	file:
nx_pull_header	lib/nx-match.c	/^nx_pull_header(struct ofpbuf *b, const struct mf_field **field, bool *masked)$/;"	f
nx_pull_header__	lib/nx-match.c	/^nx_pull_header__(struct ofpbuf *b, bool allow_cookie, uint64_t *header,$/;"	f	file:
nx_pull_match	lib/nx-match.c	/^nx_pull_match(struct ofpbuf *b, unsigned int match_len, struct match *match,$/;"	f
nx_pull_match	tests/testsuite	/^nx_pull_match() returned error OFPBMC_BAD_FIELD$/;"	f
nx_pull_match	tests/testsuite	/^nx_pull_match() returned error OFPBMC_BAD_PREREQ$/;"	f
nx_pull_match	tests/testsuite	/^nx_pull_match() returned error OFPBMC_BAD_VALUE$/;"	f
nx_pull_match	tests/testsuite	/^nx_pull_match() returned error OFPBMC_BAD_WILDCARDS$/;"	f
nx_pull_match	tests/testsuite	/^nx_pull_match() returned error OFPBMC_DUP_FIELD$/;"	f
nx_pull_match__	lib/nx-match.c	/^nx_pull_match__(struct ofpbuf *b, unsigned int match_len, bool strict,$/;"	f	file:
nx_pull_match_entry	lib/nx-match.c	/^nx_pull_match_entry(struct ofpbuf *b, bool allow_cookie,$/;"	f	file:
nx_pull_match_loose	lib/nx-match.c	/^nx_pull_match_loose(struct ofpbuf *b, unsigned int match_len,$/;"	f
nx_pull_raw	lib/nx-match.c	/^nx_pull_raw(const uint8_t *p, unsigned int match_len, bool strict,$/;"	f	file:
nx_put_entry	lib/nx-match.c	/^nx_put_entry(struct ofpbuf *b,$/;"	f
nx_put_header	lib/nx-match.c	/^nx_put_header(struct ofpbuf *b, enum mf_field_id field,$/;"	f
nx_put_header__	lib/nx-match.c	/^nx_put_header__(struct ofpbuf *b, uint64_t header, bool masked)$/;"	f	file:
nx_put_header_len	lib/nx-match.c	/^nx_put_header_len(struct ofpbuf *b, enum mf_field_id field,$/;"	f	file:
nx_put_match	lib/nx-match.c	/^nx_put_match(struct ofpbuf *b, const struct match *match,$/;"	f
nx_put_raw	lib/nx-match.c	/^nx_put_raw(struct ofpbuf *b, enum ofp_version oxm, const struct match *match,$/;"	f	file:
nx_role	include/openflow/nicira-ext.h	/^enum nx_role {$/;"	g
nx_role_request	include/openflow/nicira-ext.h	/^struct nx_role_request {$/;"	s
nx_set_flow_format	include/openflow/nicira-ext.h	/^struct nx_set_flow_format {$/;"	s
nx_set_packet_in_format	include/openflow/nicira-ext.h	/^struct nx_set_packet_in_format {$/;"	s
nx_stack_pop	lib/nx-match.c	/^nx_stack_pop(struct ofpbuf *stack)$/;"	f	file:
nx_stack_push	lib/nx-match.c	/^nx_stack_push(struct ofpbuf *stack, union mf_subvalue *v)$/;"	f	file:
nx_vendor_code	include/openflow/nicira-ext.h	/^enum nx_vendor_code {$/;"	g
nx_vendor_error	include/openflow/nicira-ext.h	/^struct nx_vendor_error {$/;"	s
nxm_class	lib/nx-match.c	/^static int nxm_class(uint64_t header) { return header >> 48; }$/;"	f	file:
nxm_decode_n_bits	lib/nx-match.h	/^nxm_decode_n_bits(ovs_be16 ofs_nbits)$/;"	f
nxm_decode_ofs	lib/nx-match.h	/^nxm_decode_ofs(ovs_be16 ofs_nbits)$/;"	f
nxm_do_init	lib/meta-flow.c	/^nxm_do_init(void)$/;"	f	file:
nxm_encode_ofs_nbits	lib/nx-match.h	/^nxm_encode_ofs_nbits(int ofs, int n_bits)$/;"	f
nxm_execute_reg_move	lib/nx-match.c	/^nxm_execute_reg_move(const struct ofpact_reg_move *move,$/;"	f
nxm_execute_stack_pop	lib/nx-match.c	/^nxm_execute_stack_pop(const struct ofpact_stack *pop,$/;"	f
nxm_execute_stack_push	lib/nx-match.c	/^nxm_execute_stack_push(const struct ofpact_stack *push,$/;"	f
nxm_experimenter_len	lib/nx-match.c	/^nxm_experimenter_len(uint64_t header)$/;"	f	file:
nxm_field	lib/nx-match.c	/^static int nxm_field(uint64_t header) { return (header >> 41) & 0x7f; }$/;"	f	file:
nxm_field	lib/nx-match.c	/^struct nxm_field {$/;"	s	file:
nxm_field_by_header	lib/nx-match.c	/^nxm_field_by_header(uint64_t header)$/;"	f	file:
nxm_field_by_mf_id	lib/nx-match.c	/^nxm_field_by_mf_id(enum mf_field_id id, enum ofp_version version)$/;"	f	file:
nxm_field_by_name	lib/nx-match.c	/^nxm_field_by_name(const char *name, size_t len)$/;"	f	file:
nxm_field_bytes	lib/nx-match.c	/^nxm_field_bytes(uint64_t header)$/;"	f	file:
nxm_field_index	lib/nx-match.c	/^struct nxm_field_index {$/;"	s	file:
nxm_format_reg_move	lib/nx-match.c	/^nxm_format_reg_move(const struct ofpact_reg_move *move, struct ds *s)$/;"	f
nxm_format_stack_pop	lib/nx-match.c	/^nxm_format_stack_pop(const struct ofpact_stack *pop, struct ds *s)$/;"	f
nxm_format_stack_push	lib/nx-match.c	/^nxm_format_stack_push(const struct ofpact_stack *push, struct ds *s)$/;"	f
nxm_hasmask	lib/nx-match.c	/^static bool nxm_hasmask(uint64_t header) { return (header >> 40) & 1; }$/;"	f	file:
nxm_header_len	lib/nx-match.c	/^nxm_header_len(uint64_t header)$/;"	f	file:
nxm_header_map	lib/nx-match.c	/^static struct hmap nxm_header_map;$/;"	v	typeref:struct:hmap	file:
nxm_init	lib/meta-flow.c	/^nxm_init(void)$/;"	f	file:
nxm_init	lib/nx-match.c	/^nxm_init(void)$/;"	f	file:
nxm_length	lib/nx-match.c	/^static int nxm_length(uint64_t header) { return (header >> 32) & 0xff; }$/;"	f	file:
nxm_make_exact_header	lib/nx-match.c	/^nxm_make_exact_header(uint64_t header)$/;"	f	file:
nxm_make_wild_header	lib/nx-match.c	/^nxm_make_wild_header(uint64_t header)$/;"	f	file:
nxm_mf_map	lib/nx-match.c	/^static struct ovs_list nxm_mf_map[MFF_N_IDS];$/;"	v	typeref:struct:ovs_list	file:
nxm_name_map	lib/nx-match.c	/^static struct hmap nxm_name_map;$/;"	v	typeref:struct:hmap	file:
nxm_no_len	lib/nx-match.c	/^static uint64_t nxm_no_len(uint64_t header) { return header & 0xffffff80ffffffffULL; }$/;"	f	file:
nxm_parse_reg_move	lib/nx-match.c	/^nxm_parse_reg_move(struct ofpact_reg_move *move, const char *s)$/;"	f
nxm_parse_stack_action	lib/nx-match.c	/^nxm_parse_stack_action(struct ofpact_stack *stack_action, const char *s)$/;"	f
nxm_payload_len	lib/nx-match.c	/^nxm_payload_len(uint64_t header)$/;"	f	file:
nxm_put	lib/nx-match.c	/^nxm_put(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put_16	lib/nx-match.c	/^nxm_put_16(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put_16m	lib/nx-match.c	/^nxm_put_16m(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put_32	lib/nx-match.c	/^nxm_put_32(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put_32m	lib/nx-match.c	/^nxm_put_32m(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put_64m	lib/nx-match.c	/^nxm_put_64m(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put_8	lib/nx-match.c	/^nxm_put_8(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put_8m	lib/nx-match.c	/^nxm_put_8m(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f	file:
nxm_put__	lib/nx-match.c	/^nxm_put__(struct ofpbuf *b, enum mf_field_id field, enum ofp_version version,$/;"	f
nxm_put_ct_label	lib/nx-match.c	/^nxm_put_ct_label(struct ofpbuf *b,$/;"	f	file:
nxm_put_eth_masked	lib/nx-match.c	/^nxm_put_eth_masked(struct ofpbuf *b,$/;"	f	file:
nxm_put_frag	lib/nx-match.c	/^nxm_put_frag(struct ofpbuf *b, const struct match *match,$/;"	f	file:
nxm_put_ip	lib/nx-match.c	/^nxm_put_ip(struct ofpbuf *b, const struct match *match, enum ofp_version oxm)$/;"	f	file:
nxm_put_ipv6	lib/nx-match.c	/^nxm_put_ipv6(struct ofpbuf *b,$/;"	f	file:
nxm_reg_load	lib/nx-match.c	/^nxm_reg_load(const struct mf_subfield *dst, uint64_t src_data,$/;"	f
nxm_reg_move_check	lib/nx-match.c	/^nxm_reg_move_check(const struct ofpact_reg_move *move, const struct flow *flow)$/;"	f
nxm_stack_pop_check	lib/nx-match.c	/^nxm_stack_pop_check(const struct ofpact_stack *pop,$/;"	f
nxm_stack_push_check	lib/nx-match.c	/^nxm_stack_push_check(const struct ofpact_stack *push,$/;"	f
nxm_vendor	lib/nx-match.c	/^static uint32_t nxm_vendor(uint64_t header) { return header; }$/;"	f	file:
nxt	lib/sflow.h	/^    struct _SFLCounters_sample_element *nxt; \/* linked list *\/$/;"	m	struct:_SFLCounters_sample_element	typeref:struct:_SFLCounters_sample_element::_SFLCounters_sample_element
nxt	lib/sflow.h	/^    struct _SFLFlow_sample_element *nxt;$/;"	m	struct:_SFLFlow_sample_element	typeref:struct:_SFLFlow_sample_element::_SFLFlow_sample_element
nxt	lib/sflow_api.h	/^    struct _SFLPoller *nxt;$/;"	m	struct:_SFLPoller	typeref:struct:_SFLPoller::_SFLPoller
nxt	lib/sflow_api.h	/^    struct _SFLReceiver *nxt;$/;"	m	struct:_SFLReceiver	typeref:struct:_SFLReceiver::_SFLReceiver
nxt	lib/sflow_api.h	/^    struct _SFLSampler *nxt;$/;"	m	struct:_SFLSampler	typeref:struct:_SFLSampler::_SFLSampler
oam	datapath/linux/compat/include/net/geneve.h	/^	u8 oam:1;$/;"	m	struct:genevehdr
oam	lib/geneve.h	/^    uint8_t oam:1;$/;"	m	struct:genevehdr
object	lib/json.h	/^        struct shash *object;   \/* Contains "struct json *"s. *\/$/;"	m	union:json::__anon93	typeref:struct:json::__anon93::shash
obs_domain_id	lib/odp-util.h	/^        uint32_t obs_domain_id; \/* Observation Domain ID. *\/$/;"	m	struct:user_action_cookie::__anon125
obs_domain_id	lib/ofp-actions.c	/^    ovs_be32 obs_domain_id;         \/* ID of sampling observation domain. *\/$/;"	m	struct:nx_action_sample	file:
obs_domain_id	lib/ofp-actions.h	/^    uint32_t obs_domain_id;$/;"	m	struct:ofpact_sample
obs_domain_id	lib/vswitch-idl.h	/^	int64_t *obs_domain_id;$/;"	m	struct:ovsrec_ipfix
obs_domain_id	ofproto/ofproto-dpif-ipfix.c	/^    uint32_t obs_domain_id;$/;"	m	struct:ipfix_flow_key	file:
obs_domain_id	ofproto/ofproto.h	/^    uint32_t obs_domain_id;  \/* Bridge-wide Observation Domain ID. *\/$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
obs_point_id	lib/odp-util.h	/^        uint32_t obs_point_id;  \/* Observation Point ID. *\/$/;"	m	struct:user_action_cookie::__anon125
obs_point_id	lib/ofp-actions.c	/^    ovs_be32 obs_point_id;          \/* ID of sampling observation point. *\/$/;"	m	struct:nx_action_sample	file:
obs_point_id	lib/ofp-actions.h	/^    uint32_t obs_point_id;$/;"	m	struct:ofpact_sample
obs_point_id	lib/vswitch-idl.h	/^	int64_t *obs_point_id;$/;"	m	struct:ovsrec_ipfix
obs_point_id	ofproto/ofproto.h	/^    uint32_t obs_point_id;  \/* Bridge-wide Observation Point ID. *\/$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
octet_delta_count	ofproto/ofproto-dpif-ipfix.c	/^    uint64_t octet_delta_count;$/;"	m	struct:ipfix_flow_cache_entry	file:
octet_delta_sum_of_squares	ofproto/ofproto-dpif-ipfix.c	/^    uint64_t octet_delta_sum_of_squares;  \/* 0 if not IP. *\/$/;"	m	struct:ipfix_flow_cache_entry	file:
octets	lib/lldp/lldpd-structs.h	/^        u_int8_t        octets[LLDPD_MGMT_MAXADDRSIZE];$/;"	m	union:lldpd_mgmt::__anon98
octets	lib/sflow.h	/^    u_int64_t octets;$/;"	m	struct:_SFLVlan_counters
octets	lib/unicode.c	/^    uint8_t octets[5][2];$/;"	m	struct:utf8_sequence	file:
od	ovn/northd/ovn-northd.c	/^    struct ovn_datapath *od;$/;"	m	struct:ovn_lflow	typeref:struct:ovn_lflow::ovn_datapath	file:
od	ovn/northd/ovn-northd.c	/^    struct ovn_datapath *od;$/;"	m	struct:ovn_port	typeref:struct:ovn_port::ovn_datapath	file:
odp	ofproto/ofproto-dpif.h	/^    struct odp_support odp;$/;"	m	struct:dpif_backer_support	typeref:struct:dpif_backer_support::odp_support
odp_action_len	lib/odp-util.c	/^odp_action_len(uint16_t type)$/;"	f	file:
odp_actions	ofproto/ofproto-dpif-upcall.c	/^    struct ofpbuf odp_actions;     \/* Datapath actions from xlate_actions(). *\/$/;"	m	struct:upcall	typeref:struct:upcall::ofpbuf	file:
odp_actions	ofproto/ofproto-dpif-xlate.c	/^    struct ofpbuf *odp_actions;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::ofpbuf	file:
odp_actions	ofproto/ofproto-dpif-xlate.h	/^    struct ofpbuf *odp_actions;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::ofpbuf
odp_actions	ofproto/ofproto-dpif.c	/^    struct ofpbuf odp_actions;$/;"	m	struct:trace_ctx	typeref:struct:trace_ctx::ofpbuf	file:
odp_actions_from_string	lib/odp-util.c	/^odp_actions_from_string(const char *s, const struct simap *port_names,$/;"	f
odp_actions_stub	ofproto/ofproto-dpif-upcall.c	/^    uint64_t odp_actions_stub[1024 \/ 8]; \/* Stub for odp_actions. *\/$/;"	m	struct:upcall	file:
odp_ct_state_to_string	lib/odp-util.c	/^odp_ct_state_to_string(uint32_t flag)$/;"	f	file:
odp_eth_set_addrs	lib/odp-execute.c	/^odp_eth_set_addrs(struct dp_packet *packet, const struct ovs_key_ethernet *key,$/;"	f	file:
odp_execute_actions	lib/odp-execute.c	/^odp_execute_actions(void *dp, struct dp_packet **packets, int cnt, bool steal,$/;"	f
odp_execute_cb	lib/odp-execute.h	/^typedef void (*odp_execute_cb)(void *dp, struct dp_packet **packets, int cnt,$/;"	t
odp_execute_masked_set_action	lib/odp-execute.c	/^odp_execute_masked_set_action(struct dp_packet *packet,$/;"	f	file:
odp_execute_sample	lib/odp-execute.c	/^odp_execute_sample(void *dp, struct dp_packet *packet, bool steal,$/;"	f	file:
odp_execute_set_action	lib/odp-execute.c	/^odp_execute_set_action(struct dp_packet *packet, const struct nlattr *a)$/;"	f	file:
odp_flow_format	lib/odp-util.c	/^odp_flow_format(const struct nlattr *key, size_t key_len,$/;"	f
odp_flow_from_string	lib/odp-util.c	/^odp_flow_from_string(const char *s, const struct simap *port_names,$/;"	f
odp_flow_key_format	lib/odp-util.c	/^odp_flow_key_format(const struct nlattr *key,$/;"	f
odp_flow_key_from_flow	lib/odp-util.c	/^odp_flow_key_from_flow(const struct odp_flow_key_parms *parms,$/;"	f
odp_flow_key_from_flow__	lib/odp-util.c	/^odp_flow_key_from_flow__(const struct odp_flow_key_parms *parms,$/;"	f	file:
odp_flow_key_from_mask	lib/odp-util.c	/^odp_flow_key_from_mask(const struct odp_flow_key_parms *parms,$/;"	f
odp_flow_key_hash	lib/odp-util.c	/^odp_flow_key_hash(const struct nlattr *key, size_t key_len)$/;"	f
odp_flow_key_parms	lib/odp-util.h	/^struct odp_flow_key_parms {$/;"	s
odp_flow_key_to_flow	lib/odp-util.c	/^odp_flow_key_to_flow(const struct nlattr *key, size_t key_len,$/;"	f
odp_flow_key_to_flow__	lib/odp-util.c	/^odp_flow_key_to_flow__(const struct nlattr *key, size_t key_len,$/;"	f	file:
odp_flow_key_to_flow_udpif	lib/odp-util.c	/^odp_flow_key_to_flow_udpif(const struct nlattr *key, size_t key_len,$/;"	f
odp_flow_key_to_mask	lib/odp-util.c	/^odp_flow_key_to_mask(const struct nlattr *mask_key, size_t mask_key_len,$/;"	f
odp_flow_key_to_mask_udpif	lib/odp-util.c	/^odp_flow_key_to_mask_udpif(const struct nlattr *mask_key, size_t mask_key_len,$/;"	f
odp_format_ufid	lib/odp-util.c	/^odp_format_ufid(const ovs_u128 *ufid, struct ds *ds)$/;"	f
odp_garbage	ofproto/ofproto-dpif.c	/^struct odp_garbage {$/;"	s	file:
odp_in_port	lib/odp-util.h	/^    odp_port_t odp_in_port;$/;"	m	struct:odp_flow_key_parms
odp_key_attr_len	lib/odp-util.c	/^odp_key_attr_len(const struct attr_len_tbl tbl[], int max_len, uint16_t type)$/;"	f	file:
odp_key_fitness	lib/odp-util.h	/^enum odp_key_fitness {$/;"	g
odp_key_fitness_to_string	lib/odp-util.c	/^odp_key_fitness_to_string(enum odp_key_fitness fitness)$/;"	f
odp_key_from_pkt_metadata	lib/odp-util.c	/^odp_key_from_pkt_metadata(struct ofpbuf *buf, const struct pkt_metadata *md)$/;"	f
odp_key_to_pkt_metadata	lib/odp-util.c	/^odp_key_to_pkt_metadata(const struct nlattr *key, size_t key_len,$/;"	f
odp_mask_attr_is_exact	lib/odp-util.c	/^odp_mask_attr_is_exact(const struct nlattr *ma)$/;"	f	file:
odp_mask_attr_is_wildcard	lib/odp-util.c	/^odp_mask_attr_is_wildcard(const struct nlattr *ma)$/;"	f	file:
odp_mask_is_exact	lib/odp-util.c	/^odp_mask_is_exact(enum ovs_key_attr attr, const void *mask, size_t size)$/;"	f	file:
odp_port	lib/packets.h	/^    odp_port_t odp_port;$/;"	m	union:flow_in_port
odp_port	ofproto/ofproto-dpif-ipfix.c	/^    odp_port_t odp_port;$/;"	m	struct:dpif_ipfix_port	file:
odp_port	ofproto/ofproto-dpif-sflow.c	/^    odp_port_t odp_port;$/;"	m	struct:dpif_sflow_port	file:
odp_port	ofproto/ofproto-dpif-xlate.c	/^    odp_port_t odp_port;             \/* Datapath port number or ODPP_NONE. *\/$/;"	m	struct:xport	file:
odp_port	ofproto/ofproto-dpif.c	/^    odp_port_t odp_port;$/;"	m	struct:odp_garbage	file:
odp_port	ofproto/ofproto-dpif.c	/^    odp_port_t odp_port;$/;"	m	struct:ofport_dpif	file:
odp_port	ofproto/tunnel.c	/^    odp_port_t odp_port;$/;"	m	struct:tnl_match	file:
odp_port_is_alive	ofproto/ofproto-dpif-xlate.c	/^odp_port_is_alive(const struct xlate_ctx *ctx, ofp_port_t ofp_port)$/;"	f	file:
odp_port_node	ofproto/ofproto-dpif.c	/^    struct hmap_node odp_port_node; \/* In dpif_backer's "odp_to_ofport_map". *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::hmap_node	file:
odp_port_t	include/openvswitch/types.h	/^typedef uint32_t OVS_BITWISE odp_port_t;$/;"	t
odp_port_to_ofp_port	ofproto/ofproto-dpif.c	/^odp_port_to_ofp_port(const struct ofproto_dpif *ofproto, odp_port_t odp_port)$/;"	f	file:
odp_port_to_ofport	ofproto/ofproto-dpif.c	/^odp_port_to_ofport(const struct dpif_backer *backer, odp_port_t odp_port)$/;"	f
odp_portno_names	lib/odp-util.h	/^struct odp_portno_names {$/;"	s
odp_portno_names_destroy	lib/odp-util.c	/^odp_portno_names_destroy(struct hmap *portno_names)$/;"	f
odp_portno_names_get	lib/odp-util.c	/^odp_portno_names_get(const struct hmap *portno_names, odp_port_t port_no)$/;"	f	file:
odp_portno_names_set	lib/odp-util.c	/^odp_portno_names_set(struct hmap *portno_names, odp_port_t port_no,$/;"	f
odp_put_tnl_push_action	lib/odp-util.c	/^odp_put_tnl_push_action(struct ofpbuf *odp_actions,$/;"	f
odp_put_tunnel_action	lib/odp-util.c	/^odp_put_tunnel_action(const struct flow_tnl *tunnel,$/;"	f
odp_put_userspace_action	lib/odp-util.c	/^odp_put_userspace_action(uint32_t pid,$/;"	f
odp_set_ipv4	lib/odp-execute.c	/^odp_set_ipv4(struct dp_packet *packet, const struct ovs_key_ipv4 *key,$/;"	f	file:
odp_set_ipv6	lib/odp-execute.c	/^odp_set_ipv6(struct dp_packet *packet, const struct ovs_key_ipv6 *key,$/;"	f	file:
odp_set_nd	lib/odp-execute.c	/^odp_set_nd(struct dp_packet *packet, const struct ovs_key_nd *key,$/;"	f	file:
odp_set_sctp	lib/odp-execute.c	/^odp_set_sctp(struct dp_packet *packet, const struct ovs_key_sctp *key,$/;"	f	file:
odp_set_tcp	lib/odp-execute.c	/^odp_set_tcp(struct dp_packet *packet, const struct ovs_key_tcp *key,$/;"	f	file:
odp_set_tunnel_action	lib/odp-execute.c	/^odp_set_tunnel_action(const struct nlattr *a, struct flow_tnl *tun_key)$/;"	f	file:
odp_set_udp	lib/odp-execute.c	/^odp_set_udp(struct dp_packet *packet, const struct ovs_key_udp *key,$/;"	f	file:
odp_support	lib/odp-util.h	/^struct odp_support {$/;"	s
odp_to_ofport_lock	ofproto/ofproto-dpif.c	/^    struct ovs_rwlock odp_to_ofport_lock;$/;"	m	struct:dpif_backer	typeref:struct:dpif_backer::ovs_rwlock	file:
odp_to_ovs_ct_state	lib/odp-util.c	/^odp_to_ovs_ct_state(uint32_t flags)$/;"	f	file:
odp_to_ovs_frag	lib/odp-util.c	/^odp_to_ovs_frag(uint8_t odp_frag, bool is_mask)$/;"	f	file:
odp_tun_key_from_attr	lib/odp-util.c	/^odp_tun_key_from_attr(const struct nlattr *attr, bool udpif,$/;"	f
odp_tun_key_from_attr__	lib/odp-util.c	/^odp_tun_key_from_attr__(const struct nlattr *attr,$/;"	f	file:
odp_ufid_from_string	lib/odp-util.c	/^odp_ufid_from_string(const char *s_, ovs_u128 *ufid)$/;"	f
odp_util	lib/odp-util.c	/^VLOG_DEFINE_THIS_MODULE(odp_util);$/;"	v
odputil_keybuf	lib/odp-util.h	/^struct odputil_keybuf {$/;"	s
ofPort	lib/sflow.h	/^    SFLOpenFlowPort ofPort;$/;"	m	union:_SFLCounters_type
ofbundle	ofproto/ofproto-dpif-mirror.c	/^    struct ofbundle *ofbundle;$/;"	m	struct:mbundle	typeref:struct:mbundle::ofbundle	file:
ofbundle	ofproto/ofproto-dpif-xlate.c	/^    struct ofbundle *ofbundle;     \/* Key in global 'xbundles' map. *\/$/;"	m	struct:xbundle	typeref:struct:xbundle::ofbundle	file:
ofbundle	ofproto/ofproto-dpif.c	/^struct ofbundle {$/;"	s	file:
ofbundle_get_a_port	ofproto/ofproto-dpif.c	/^ofbundle_get_a_port(const struct ofbundle *bundle)$/;"	f	file:
ofconn	ofproto/connmgr.c	/^struct ofconn {$/;"	s	file:
ofconn	ofproto/connmgr.h	/^    struct ofconn *ofconn;      \/* Owning 'ofconn'. *\/$/;"	m	struct:ofmonitor	typeref:struct:ofmonitor::ofconn
ofconn	ofproto/ofproto.c	/^    struct ofconn *ofconn;      \/* Connection on which flow_mod arrived. *\/$/;"	m	struct:flow_mod_requester	typeref:struct:flow_mod_requester::ofconn	file:
ofconn_create	ofproto/connmgr.c	/^ofconn_create(struct connmgr *mgr, struct rconn *rconn, enum ofconn_type type,$/;"	f	file:
ofconn_get_async_config	ofproto/connmgr.c	/^ofconn_get_async_config(struct ofconn *ofconn,$/;"	f
ofconn_get_bundle	ofproto/connmgr.c	/^ofconn_get_bundle(struct ofconn *ofconn, uint32_t id)$/;"	f
ofconn_get_invalid_ttl_to_controller	ofproto/connmgr.c	/^ofconn_get_invalid_ttl_to_controller(struct ofconn *ofconn)$/;"	f
ofconn_get_master_election_id	ofproto/connmgr.c	/^ofconn_get_master_election_id(const struct ofconn *ofconn, uint64_t *idp)$/;"	f
ofconn_get_miss_send_len	ofproto/connmgr.c	/^ofconn_get_miss_send_len(const struct ofconn *ofconn)$/;"	f
ofconn_get_ofproto	ofproto/connmgr.c	/^ofconn_get_ofproto(const struct ofconn *ofconn)$/;"	f
ofconn_get_packet_in_format	ofproto/connmgr.c	/^ofconn_get_packet_in_format(struct ofconn *ofconn)$/;"	f
ofconn_get_protocol	ofproto/connmgr.c	/^ofconn_get_protocol(const struct ofconn *ofconn)$/;"	f
ofconn_get_role	ofproto/connmgr.c	/^ofconn_get_role(const struct ofconn *ofconn)$/;"	f
ofconn_get_target	ofproto/connmgr.c	/^ofconn_get_target(const struct ofconn *ofconn)$/;"	f	file:
ofconn_get_type	ofproto/connmgr.c	/^ofconn_get_type(const struct ofconn *ofconn)$/;"	f
ofconn_insert_bundle	ofproto/connmgr.c	/^ofconn_insert_bundle(struct ofconn *ofconn, struct ofp_bundle *bundle)$/;"	f
ofconn_log_flow_mods	ofproto/connmgr.c	/^ofconn_log_flow_mods(struct ofconn *ofconn)$/;"	f	file:
ofconn_make_name	ofproto/connmgr.c	/^ofconn_make_name(const struct connmgr *mgr, const char *target)$/;"	f	file:
ofconn_may_recv	ofproto/connmgr.c	/^ofconn_may_recv(const struct ofconn *ofconn)$/;"	f	file:
ofconn_node	ofproto/connmgr.h	/^    struct hmap_node ofconn_node; \/* In ofconn's 'monitors' hmap. *\/$/;"	m	struct:ofmonitor	typeref:struct:ofmonitor::hmap_node
ofconn_pktbuf_retrieve	ofproto/connmgr.c	/^ofconn_pktbuf_retrieve(struct ofconn *ofconn, uint32_t id,$/;"	f
ofconn_receives_async_msg	ofproto/connmgr.c	/^ofconn_receives_async_msg(const struct ofconn *ofconn,$/;"	f	file:
ofconn_reconfigure	ofproto/connmgr.c	/^ofconn_reconfigure(struct ofconn *ofconn, const struct ofproto_controller *c)$/;"	f	file:
ofconn_remove_bundle	ofproto/connmgr.c	/^ofconn_remove_bundle(struct ofconn *ofconn, struct ofp_bundle *bundle)$/;"	f
ofconn_report_flow_mod	ofproto/connmgr.c	/^ofconn_report_flow_mod(struct ofconn *ofconn,$/;"	f
ofconn_run	ofproto/connmgr.c	/^ofconn_run(struct ofconn *ofconn,$/;"	f	file:
ofconn_send	ofproto/connmgr.c	/^ofconn_send(const struct ofconn *ofconn, struct ofpbuf *msg,$/;"	f	file:
ofconn_send_error	ofproto/connmgr.c	/^ofconn_send_error(const struct ofconn *ofconn,$/;"	f
ofconn_send_replies	ofproto/connmgr.c	/^ofconn_send_replies(const struct ofconn *ofconn, struct ovs_list *replies)$/;"	f
ofconn_send_reply	ofproto/connmgr.c	/^ofconn_send_reply(const struct ofconn *ofconn, struct ofpbuf *msg)$/;"	f
ofconn_send_role_status	ofproto/connmgr.c	/^ofconn_send_role_status(struct ofconn *ofconn, uint32_t role, uint8_t reason)$/;"	f
ofconn_set_async_config	ofproto/connmgr.c	/^ofconn_set_async_config(struct ofconn *ofconn,$/;"	f
ofconn_set_controller_id	ofproto/connmgr.c	/^ofconn_set_controller_id(struct ofconn *ofconn, uint16_t controller_id)$/;"	f
ofconn_set_invalid_ttl_to_controller	ofproto/connmgr.c	/^ofconn_set_invalid_ttl_to_controller(struct ofconn *ofconn, bool enable)$/;"	f
ofconn_set_master_election_id	ofproto/connmgr.c	/^ofconn_set_master_election_id(struct ofconn *ofconn, uint64_t id)$/;"	f
ofconn_set_miss_send_len	ofproto/connmgr.c	/^ofconn_set_miss_send_len(struct ofconn *ofconn, int miss_send_len)$/;"	f
ofconn_set_packet_in_format	ofproto/connmgr.c	/^ofconn_set_packet_in_format(struct ofconn *ofconn,$/;"	f
ofconn_set_protocol	ofproto/connmgr.c	/^ofconn_set_protocol(struct ofconn *ofconn, enum ofputil_protocol protocol)$/;"	f
ofconn_set_rate_limit	ofproto/connmgr.c	/^ofconn_set_rate_limit(struct ofconn *ofconn, int rate, int burst)$/;"	f	file:
ofconn_set_role	ofproto/connmgr.c	/^ofconn_set_role(struct ofconn *ofconn, enum ofp12_controller_role role)$/;"	f
ofconn_type	ofproto/connmgr.h	/^enum ofconn_type {$/;"	g
ofconn_wait	ofproto/connmgr.c	/^ofconn_wait(struct ofconn *ofconn)$/;"	f	file:
ofconn_wants_packet_in_on_miss	ofproto/connmgr.c	/^ofconn_wants_packet_in_on_miss(struct ofconn *ofconn,$/;"	f	file:
ofctl	utilities/ovs-ofctl.c	/^VLOG_DEFINE_THIS_MODULE(ofctl);$/;"	v
ofctl	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^ofctl = '\/usr\/bin\/ovs-ofctl'$/;"	v
ofctl_add_flow	utilities/ovs-ofctl.c	/^ofctl_add_flow(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_add_flows	utilities/ovs-ofctl.c	/^ofctl_add_flows(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_add_geneve_map	utilities/ovs-ofctl.c	/^ofctl_add_geneve_map(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_add_group	utilities/ovs-ofctl.c	/^ofctl_add_group(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_add_groups	utilities/ovs-ofctl.c	/^ofctl_add_groups(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_add_meter	utilities/ovs-ofctl.c	/^ofctl_add_meter(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_barrier	utilities/ovs-ofctl.c	/^ofctl_barrier(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofctl_benchmark	utilities/ovs-ofctl.c	/^ofctl_benchmark(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_block	utilities/ovs-ofctl.c	/^ofctl_block(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofctl_check_vlan	utilities/ovs-ofctl.c	/^ofctl_check_vlan(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_del_flows	utilities/ovs-ofctl.c	/^ofctl_del_flows(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_del_geneve_map	utilities/ovs-ofctl.c	/^ofctl_del_geneve_map(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_del_groups	utilities/ovs-ofctl.c	/^ofctl_del_groups(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_del_meters	utilities/ovs-ofctl.c	/^ofctl_del_meters(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_diff_flows	utilities/ovs-ofctl.c	/^ofctl_diff_flows(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_aggregate	utilities/ovs-ofctl.c	/^ofctl_dump_aggregate(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_desc	utilities/ovs-ofctl.c	/^ofctl_dump_desc(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_flows	utilities/ovs-ofctl.c	/^ofctl_dump_flows(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_flows__	utilities/ovs-ofctl.c	/^ofctl_dump_flows__(int argc, char *argv[], bool aggregate)$/;"	f	file:
ofctl_dump_geneve_map	utilities/ovs-ofctl.c	/^ofctl_dump_geneve_map(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_group_desc	utilities/ovs-ofctl.c	/^ofctl_dump_group_desc(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_group_features	utilities/ovs-ofctl.c	/^ofctl_dump_group_features(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_group_stats	utilities/ovs-ofctl.c	/^ofctl_dump_group_stats(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_meters	utilities/ovs-ofctl.c	/^ofctl_dump_meters(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_ports	utilities/ovs-ofctl.c	/^ofctl_dump_ports(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_ports_desc	utilities/ovs-ofctl.c	/^ofctl_dump_ports_desc(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_table_desc	utilities/ovs-ofctl.c	/^ofctl_dump_table_desc(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_table_features	utilities/ovs-ofctl.c	/^ofctl_dump_table_features(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_dump_tables	utilities/ovs-ofctl.c	/^ofctl_dump_tables(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_encode_error_reply	utilities/ovs-ofctl.c	/^ofctl_encode_error_reply(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_encode_hello	utilities/ovs-ofctl.c	/^ofctl_encode_hello(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_exit	utilities/ovs-ofctl.c	/^ofctl_exit(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofctl_flow_mod	utilities/ovs-ofctl.c	/^ofctl_flow_mod(int argc, char *argv[], uint16_t command)$/;"	f	file:
ofctl_flow_mod__	utilities/ovs-ofctl.c	/^ofctl_flow_mod__(const char *remote, struct ofputil_flow_mod *fms,$/;"	f	file:
ofctl_flow_mod_file	utilities/ovs-ofctl.c	/^ofctl_flow_mod_file(int argc OVS_UNUSED, char *argv[], int command)$/;"	f	file:
ofctl_geneve_mod	utilities/ovs-ofctl.c	/^ofctl_geneve_mod(struct ovs_cmdl_context *ctx, uint16_t command)$/;"	f	file:
ofctl_get_frags	utilities/ovs-ofctl.c	/^ofctl_get_frags(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_group_mod	utilities/ovs-ofctl.c	/^ofctl_group_mod(int argc, char *argv[], uint16_t command)$/;"	f	file:
ofctl_group_mod__	utilities/ovs-ofctl.c	/^ofctl_group_mod__(const char *remote, struct ofputil_group_mod *gms,$/;"	f	file:
ofctl_group_mod_file	utilities/ovs-ofctl.c	/^ofctl_group_mod_file(int argc OVS_UNUSED, char *argv[], uint16_t command)$/;"	f	file:
ofctl_help	utilities/ovs-ofctl.c	/^ofctl_help(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
ofctl_insert_bucket	utilities/ovs-ofctl.c	/^ofctl_insert_bucket(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_list_commands	utilities/ovs-ofctl.c	/^ofctl_list_commands(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
ofctl_meter_features	utilities/ovs-ofctl.c	/^ofctl_meter_features(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_meter_mod__	utilities/ovs-ofctl.c	/^ofctl_meter_mod__(const char *bridge, const char *str, int command)$/;"	f	file:
ofctl_meter_request__	utilities/ovs-ofctl.c	/^ofctl_meter_request__(const char *bridge, const char *str,$/;"	f	file:
ofctl_meter_stats	utilities/ovs-ofctl.c	/^ofctl_meter_stats(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_mod_flows	utilities/ovs-ofctl.c	/^ofctl_mod_flows(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_mod_group	utilities/ovs-ofctl.c	/^ofctl_mod_group(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_mod_meter	utilities/ovs-ofctl.c	/^ofctl_mod_meter(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_mod_port	utilities/ovs-ofctl.c	/^ofctl_mod_port(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_mod_table	utilities/ovs-ofctl.c	/^ofctl_mod_table(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_monitor	utilities/ovs-ofctl.c	/^ofctl_monitor(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_ofp_parse	utilities/ovs-ofctl.c	/^ofctl_ofp_parse(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_ofp_parse_pcap	utilities/ovs-ofctl.c	/^ofctl_ofp_parse_pcap(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_ofp_print	utilities/ovs-ofctl.c	/^ofctl_ofp_print(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_packet_out	utilities/ovs-ofctl.c	/^ofctl_packet_out(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_parse_actions	utilities/ovs-ofctl.c	/^ofctl_parse_actions(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_parse_actions__	utilities/ovs-ofctl.c	/^ofctl_parse_actions__(const char *version_s, bool instructions)$/;"	f	file:
ofctl_parse_flow	utilities/ovs-ofctl.c	/^ofctl_parse_flow(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_parse_flows	utilities/ovs-ofctl.c	/^ofctl_parse_flows(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_parse_flows__	utilities/ovs-ofctl.c	/^ofctl_parse_flows__(struct ofputil_flow_mod *fms, size_t n_fms,$/;"	f	file:
ofctl_parse_instructions	utilities/ovs-ofctl.c	/^ofctl_parse_instructions(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_parse_nxm	utilities/ovs-ofctl.c	/^ofctl_parse_nxm(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
ofctl_parse_nxm__	utilities/ovs-ofctl.c	/^ofctl_parse_nxm__(bool oxm, enum ofp_version version)$/;"	f	file:
ofctl_parse_ofp10_match	utilities/ovs-ofctl.c	/^ofctl_parse_ofp10_match(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
ofctl_parse_ofp11_match	utilities/ovs-ofctl.c	/^ofctl_parse_ofp11_match(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
ofctl_parse_oxm	utilities/ovs-ofctl.c	/^ofctl_parse_oxm(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_parse_pcap	utilities/ovs-ofctl.c	/^ofctl_parse_pcap(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_ping	utilities/ovs-ofctl.c	/^ofctl_ping(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_print_error	utilities/ovs-ofctl.c	/^ofctl_print_error(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_probe	utilities/ovs-ofctl.c	/^ofctl_probe(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_queue_get_config	utilities/ovs-ofctl.c	/^ofctl_queue_get_config(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_queue_stats	utilities/ovs-ofctl.c	/^ofctl_queue_stats(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_remove_bucket	utilities/ovs-ofctl.c	/^ofctl_remove_bucket(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_replace_flows	utilities/ovs-ofctl.c	/^ofctl_replace_flows(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_send	utilities/ovs-ofctl.c	/^ofctl_send(struct unixctl_conn *conn, int argc,$/;"	f	file:
ofctl_set_frags	utilities/ovs-ofctl.c	/^ofctl_set_frags(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_set_output_file	utilities/ovs-ofctl.c	/^ofctl_set_output_file(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofctl_show	utilities/ovs-ofctl.c	/^ofctl_show(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_snoop	utilities/ovs-ofctl.c	/^ofctl_snoop(struct ovs_cmdl_context *ctx)$/;"	f	file:
ofctl_strip	tests/system-kmod-testsuite	/^ofctl_strip () {$/;"	f
ofctl_strip	tests/system-userspace-testsuite	/^ofctl_strip () {$/;"	f
ofctl_strip	tests/testsuite	/^ofctl_strip () {$/;"	f
ofctl_unblock	utilities/ovs-ofctl.c	/^ofctl_unblock(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofctrl	ovn/controller/ofctrl.c	/^VLOG_DEFINE_THIS_MODULE(ofctrl);$/;"	v
ofctrl_add_flow	ovn/controller/ofctrl.c	/^ofctrl_add_flow(struct hmap *desired_flows,$/;"	f
ofctrl_destroy	ovn/controller/ofctrl.c	/^ofctrl_destroy(void)$/;"	f
ofctrl_init	ovn/controller/ofctrl.c	/^ofctrl_init(void)$/;"	f
ofctrl_put	ovn/controller/ofctrl.c	/^ofctrl_put(struct hmap *flow_table)$/;"	f
ofctrl_recv	ovn/controller/ofctrl.c	/^ofctrl_recv(const struct ofp_header *oh, enum ofptype type)$/;"	f	file:
ofctrl_run	ovn/controller/ofctrl.c	/^ofctrl_run(const struct ovsrec_bridge *br_int)$/;"	f
ofctrl_state	ovn/controller/ofctrl.c	/^enum ofctrl_state {$/;"	g	file:
ofctrl_wait	ovn/controller/ofctrl.c	/^ofctrl_wait(void)$/;"	f
offlg	datapath-windows/ovsext/NetProto.h	/^    UINT16 offlg;$/;"	m	struct:IPv6FragHdr
offset	datapath-windows/ovsext/DpInternal.h	/^            uint16_t offset;$/;"	m	struct:L2Key::__anon5::__anon6
offset	datapath/linux/compat/stt.c	/^	u16 offset;$/;"	m	struct:frag_skb_cb	file:
offset	datapath/linux/stt.c	/^	u16 offset;$/;"	m	struct:frag_skb_cb	file:
offset	lib/cmap.h	/^    unsigned int offset;$/;"	m	struct:cmap_position
offset	lib/ofp-actions.c	/^    ovs_be16 offset;                \/* Bit offset into the field. *\/$/;"	m	struct:nx_action_stack	file:
offset	lib/tun-metadata.h	/^    int offset;       \/* In bytes, from start of 'opts', multiple of 4.  *\/$/;"	m	struct:tun_metadata_loc_chain
offset	ofproto/ofproto-dpif.c	/^    uint32_t offset;$/;"	m	struct:port_dump_state	file:
offset	ovsdb/log.c	/^    off_t offset;$/;"	m	struct:ovsdb_log	file:
offset	tests/test-sflow.c	/^    } offset;$/;"	m	struct:sflow_xdr	typeref:struct:sflow_xdr::__anon230	file:
ofgroup	ofproto/ofproto-provider.h	/^struct ofgroup {$/;"	s
ofm	ofproto/bundles.h	/^        struct ofproto_flow_mod ofm;   \/* ofm.fm.ofpacts must be malloced. *\/$/;"	m	union:ofp_bundle_entry::__anon182	typeref:struct:ofp_bundle_entry::__anon182::ofproto_flow_mod
ofmonitor	ofproto/connmgr.h	/^struct ofmonitor {$/;"	s
ofmonitor_pause	ofproto/connmgr.c	/^COVERAGE_DEFINE(ofmonitor_pause);$/;"	v
ofmonitor_resume	ofproto/connmgr.c	/^COVERAGE_DEFINE(ofmonitor_resume);$/;"	v
ofmonitor_run	ofproto/connmgr.c	/^ofmonitor_run(struct connmgr *mgr)$/;"	f	file:
ofmonitor_wait	ofproto/connmgr.c	/^ofmonitor_wait(struct connmgr *mgr)$/;"	f	file:
ofmsg_rl	lib/vconn.c	/^static struct vlog_rate_limit ofmsg_rl = VLOG_RATE_LIMIT_INIT(600, 600);$/;"	v	typeref:struct:vlog_rate_limit	file:
ofp10_action_enqueue	lib/ofp-actions.c	/^struct ofp10_action_enqueue {$/;"	s	file:
ofp10_action_output	lib/ofp-actions.c	/^struct ofp10_action_output {$/;"	s	file:
ofp10_capabilities	include/openflow/openflow-1.0.h	/^enum ofp10_capabilities {$/;"	g
ofp10_flow_mod	include/openflow/openflow-1.0.h	/^struct ofp10_flow_mod {$/;"	s
ofp10_flow_mod_flags	include/openflow/openflow-1.0.h	/^enum ofp10_flow_mod_flags {$/;"	g
ofp10_flow_removed	include/openflow/openflow-1.0.h	/^struct ofp10_flow_removed {$/;"	s
ofp10_flow_stats	include/openflow/openflow-1.0.h	/^struct ofp10_flow_stats {$/;"	s
ofp10_flow_stats_request	include/openflow/openflow-1.0.h	/^struct ofp10_flow_stats_request {$/;"	s
ofp10_flow_wildcards	include/openflow/openflow-1.0.h	/^enum ofp10_flow_wildcards {$/;"	g
ofp10_match	include/openflow/openflow-1.0.h	/^struct ofp10_match {$/;"	s
ofp10_match_print	lib/ofp-print.c	/^ofp10_match_print(struct ds *f, const struct ofp10_match *om, int verbosity)$/;"	f
ofp10_match_to_string	lib/ofp-print.c	/^ofp10_match_to_string(const struct ofp10_match *om, int verbosity)$/;"	f
ofp10_packet_in	include/openflow/openflow-1.0.h	/^struct ofp10_packet_in {$/;"	s
ofp10_packet_out	include/openflow/openflow-1.0.h	/^struct ofp10_packet_out {$/;"	s
ofp10_packet_queue	include/openflow/openflow-1.0.h	/^struct ofp10_packet_queue {$/;"	s
ofp10_phy_port	include/openflow/openflow-1.0.h	/^struct ofp10_phy_port {$/;"	s
ofp10_port_config	include/openflow/openflow-1.0.h	/^enum ofp10_port_config {$/;"	g
ofp10_port_features	include/openflow/openflow-1.0.h	/^enum ofp10_port_features {$/;"	g
ofp10_port_mod	include/openflow/openflow-1.0.h	/^struct ofp10_port_mod {$/;"	s
ofp10_port_state	include/openflow/openflow-1.0.h	/^enum ofp10_port_state {$/;"	g
ofp10_port_stats	include/openflow/openflow-1.0.h	/^struct ofp10_port_stats {$/;"	s
ofp10_port_stats_request	include/openflow/openflow-1.0.h	/^struct ofp10_port_stats_request {$/;"	s
ofp10_queue_get_config_reply	include/openflow/openflow-1.0.h	/^struct ofp10_queue_get_config_reply {$/;"	s
ofp10_queue_get_config_request	include/openflow/openflow-1.0.h	/^struct ofp10_queue_get_config_request {$/;"	s
ofp10_queue_stats	include/openflow/openflow-1.0.h	/^struct ofp10_queue_stats {$/;"	s
ofp10_queue_stats_request	include/openflow/openflow-1.0.h	/^struct ofp10_queue_stats_request {$/;"	s
ofp10_stats_msg	include/openflow/openflow-1.0.h	/^struct ofp10_stats_msg {$/;"	s
ofp10_table_stats	include/openflow/openflow-1.0.h	/^struct ofp10_table_stats {$/;"	s
ofp10_vendor_stats_msg	include/openflow/openflow-1.0.h	/^struct ofp10_vendor_stats_msg {$/;"	s
ofp10_wc_map	lib/ofp-util.c	/^static const struct ofp10_wc_map ofp10_wc_map[] = {$/;"	v	typeref:struct:ofp10_wc_map	file:
ofp10_wc_map	lib/ofp-util.c	/^struct ofp10_wc_map {$/;"	s	file:
ofp11_action_output	lib/ofp-actions.c	/^struct ofp11_action_output {$/;"	s	file:
ofp11_bucket	include/openflow/openflow-1.1.h	/^struct ofp11_bucket {$/;"	s
ofp11_bucket_counter	include/openflow/openflow-1.1.h	/^struct ofp11_bucket_counter {$/;"	s
ofp11_capabilities	include/openflow/openflow-1.1.h	/^enum ofp11_capabilities {$/;"	g
ofp11_flow_match_fields	include/openflow/openflow-1.1.h	/^enum ofp11_flow_match_fields {$/;"	g
ofp11_flow_mod	include/openflow/openflow-1.1.h	/^struct ofp11_flow_mod {$/;"	s
ofp11_flow_removed	include/openflow/openflow-1.1.h	/^struct ofp11_flow_removed {$/;"	s
ofp11_flow_stats	include/openflow/openflow-1.1.h	/^struct ofp11_flow_stats {$/;"	s
ofp11_flow_stats_request	include/openflow/openflow-1.1.h	/^struct ofp11_flow_stats_request {$/;"	s
ofp11_flow_wildcards	include/openflow/openflow-1.1.h	/^enum ofp11_flow_wildcards {$/;"	g
ofp11_group	include/openflow/openflow-1.1.h	/^enum ofp11_group {$/;"	g
ofp11_group_desc_stats	include/openflow/openflow-1.1.h	/^struct ofp11_group_desc_stats {$/;"	s
ofp11_group_mod	include/openflow/openflow-1.1.h	/^struct ofp11_group_mod {$/;"	s
ofp11_group_mod_command	include/openflow/openflow-1.1.h	/^enum ofp11_group_mod_command {$/;"	g
ofp11_group_stats	include/openflow/openflow-1.1.h	/^struct ofp11_group_stats {$/;"	s
ofp11_group_stats_request	include/openflow/openflow-1.1.h	/^struct ofp11_group_stats_request {$/;"	s
ofp11_group_type	include/openflow/openflow-1.1.h	/^enum ofp11_group_type {$/;"	g
ofp11_instruction	include/openflow/openflow-1.1.h	/^struct ofp11_instruction {$/;"	s
ofp11_instruction_actions	include/openflow/openflow-1.1.h	/^struct ofp11_instruction_actions {$/;"	s
ofp11_instruction_experimenter	include/openflow/openflow-1.1.h	/^struct ofp11_instruction_experimenter {$/;"	s
ofp11_instruction_goto_table	include/openflow/openflow-1.1.h	/^struct ofp11_instruction_goto_table {$/;"	s
ofp11_instruction_type	include/openflow/openflow-1.1.h	/^enum ofp11_instruction_type {$/;"	g
ofp11_instruction_write_metadata	include/openflow/openflow-1.1.h	/^struct ofp11_instruction_write_metadata {$/;"	s
ofp11_match	include/openflow/openflow-1.1.h	/^struct ofp11_match {$/;"	s
ofp11_match_header	include/openflow/openflow-1.1.h	/^struct ofp11_match_header {$/;"	s
ofp11_packet_in	include/openflow/openflow-1.1.h	/^struct ofp11_packet_in {$/;"	s
ofp11_packet_out	include/openflow/openflow-1.1.h	/^struct ofp11_packet_out {$/;"	s
ofp11_port	include/openflow/openflow-1.1.h	/^struct ofp11_port {$/;"	s
ofp11_port_features	include/openflow/openflow-1.1.h	/^enum ofp11_port_features {$/;"	g
ofp11_port_mod	include/openflow/openflow-1.1.h	/^struct ofp11_port_mod {$/;"	s
ofp11_port_state	include/openflow/openflow-1.1.h	/^enum ofp11_port_state {$/;"	g
ofp11_port_stats	include/openflow/openflow-1.1.h	/^struct ofp11_port_stats {$/;"	s
ofp11_port_stats_request	include/openflow/openflow-1.1.h	/^struct ofp11_port_stats_request {$/;"	s
ofp11_port_t	include/openvswitch/types.h	/^typedef uint32_t OVS_BITWISE ofp11_port_t;$/;"	t
ofp11_queue_get_config_reply	include/openflow/openflow-1.1.h	/^struct ofp11_queue_get_config_reply {$/;"	s
ofp11_queue_get_config_request	include/openflow/openflow-1.1.h	/^struct ofp11_queue_get_config_request {$/;"	s
ofp11_queue_stats	include/openflow/openflow-1.1.h	/^struct ofp11_queue_stats {$/;"	s
ofp11_queue_stats_request	include/openflow/openflow-1.1.h	/^struct ofp11_queue_stats_request {$/;"	s
ofp11_stats_msg	include/openflow/openflow-1.1.h	/^struct ofp11_stats_msg {$/;"	s
ofp11_table_mod	include/openflow/openflow-1.1.h	/^struct ofp11_table_mod {$/;"	s
ofp11_table_stats	include/openflow/openflow-1.1.h	/^struct ofp11_table_stats {$/;"	s
ofp11_vendor_stats_msg	include/openflow/openflow-1.1.h	/^struct ofp11_vendor_stats_msg {$/;"	s
ofp11_vlan_id	include/openflow/openflow-1.1.h	/^enum ofp11_vlan_id {$/;"	g
ofp11_wc_map	lib/ofp-util.c	/^static const struct ofp11_wc_map ofp11_wc_map[] = {$/;"	v	typeref:struct:ofp11_wc_map	file:
ofp11_wc_map	lib/ofp-util.c	/^struct ofp11_wc_map {$/;"	s	file:
ofp12_action_set_field	lib/ofp-actions.c	/^struct ofp12_action_set_field {$/;"	s	file:
ofp12_capabilities	include/openflow/openflow-1.2.h	/^enum ofp12_capabilities {$/;"	g
ofp12_controller_max_len	include/openflow/openflow-1.2.h	/^enum ofp12_controller_max_len {$/;"	g
ofp12_controller_role	include/openflow/openflow-1.2.h	/^enum ofp12_controller_role {$/;"	g
ofp12_controller_role_to_str	vswitchd/bridge.c	/^ofp12_controller_role_to_str(enum ofp12_controller_role role)$/;"	f	file:
ofp12_experimenter_stats_header	include/openflow/openflow-1.2.h	/^struct ofp12_experimenter_stats_header {$/;"	s
ofp12_flow_mod_flags	include/openflow/openflow-1.2.h	/^enum ofp12_flow_mod_flags {$/;"	g
ofp12_flow_removed	include/openflow/openflow-1.2.h	/^struct ofp12_flow_removed {$/;"	s
ofp12_group_capabilities	include/openflow/openflow-1.2.h	/^enum ofp12_group_capabilities {$/;"	g
ofp12_group_features_stats	include/openflow/openflow-1.2.h	/^struct ofp12_group_features_stats {$/;"	s
ofp12_ipv6exthdr_flags	include/openflow/openflow-1.2.h	/^enum ofp12_ipv6exthdr_flags {$/;"	g
ofp12_oxm_class	lib/nx-match.c	/^enum ofp12_oxm_class {$/;"	g	file:
ofp12_oxm_experimenter_header	include/openflow/openflow-1.2.h	/^struct ofp12_oxm_experimenter_header {$/;"	s
ofp12_packet_in	include/openflow/openflow-1.2.h	/^struct ofp12_packet_in {$/;"	s
ofp12_packet_queue	include/openflow/openflow-1.2.h	/^struct ofp12_packet_queue {$/;"	s
ofp12_role_request	include/openflow/openflow-1.2.h	/^struct ofp12_role_request {$/;"	s
ofp12_table_stats	include/openflow/openflow-1.2.h	/^struct ofp12_table_stats {$/;"	s
ofp12_vlan_id	include/openflow/openflow-1.2.h	/^enum ofp12_vlan_id {$/;"	g
ofp13_async_config	include/openflow/openflow-1.3.h	/^struct ofp13_async_config {$/;"	s
ofp13_flow_mod_flags	include/openflow/openflow-1.3.h	/^enum ofp13_flow_mod_flags {$/;"	g
ofp13_group_stats	include/openflow/openflow-1.3.h	/^struct ofp13_group_stats {$/;"	s
ofp13_instruction_meter	include/openflow/openflow-1.3.h	/^struct ofp13_instruction_meter {$/;"	s
ofp13_instruction_type	include/openflow/openflow-1.3.h	/^enum ofp13_instruction_type {$/;"	g
ofp13_meter	include/openflow/openflow-1.3.h	/^enum ofp13_meter {$/;"	g
ofp13_meter_band_drop	include/openflow/openflow-1.3.h	/^struct ofp13_meter_band_drop {$/;"	s
ofp13_meter_band_dscp_remark	include/openflow/openflow-1.3.h	/^struct ofp13_meter_band_dscp_remark {$/;"	s
ofp13_meter_band_experimenter	include/openflow/openflow-1.3.h	/^struct ofp13_meter_band_experimenter {$/;"	s
ofp13_meter_band_header	include/openflow/openflow-1.3.h	/^struct ofp13_meter_band_header {$/;"	s
ofp13_meter_band_stats	include/openflow/openflow-1.3.h	/^struct ofp13_meter_band_stats {$/;"	s
ofp13_meter_band_type	include/openflow/openflow-1.3.h	/^enum ofp13_meter_band_type {$/;"	g
ofp13_meter_config	include/openflow/openflow-1.3.h	/^struct ofp13_meter_config {$/;"	s
ofp13_meter_features	include/openflow/openflow-1.3.h	/^struct ofp13_meter_features {$/;"	s
ofp13_meter_flags	include/openflow/openflow-1.3.h	/^enum ofp13_meter_flags {$/;"	g
ofp13_meter_mod	include/openflow/openflow-1.3.h	/^struct ofp13_meter_mod {$/;"	s
ofp13_meter_mod_command	include/openflow/openflow-1.3.h	/^enum ofp13_meter_mod_command {$/;"	g
ofp13_meter_multipart_request	include/openflow/openflow-1.3.h	/^struct ofp13_meter_multipart_request {$/;"	s
ofp13_meter_stats	include/openflow/openflow-1.3.h	/^struct ofp13_meter_stats {$/;"	s
ofp13_multipart_request_flags	include/openflow/openflow-1.3.h	/^enum ofp13_multipart_request_flags {$/;"	g
ofp13_packet_in	include/openflow/openflow-1.3.h	/^struct ofp13_packet_in {$/;"	s
ofp13_port_stats	include/openflow/openflow-1.3.h	/^struct ofp13_port_stats {$/;"	s
ofp13_queue_stats	include/openflow/openflow-1.3.h	/^struct ofp13_queue_stats {$/;"	s
ofp13_table_config	include/openflow/openflow-1.3.h	/^enum ofp13_table_config {$/;"	g
ofp13_table_feature_prop_actions	include/openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_actions {$/;"	s
ofp13_table_feature_prop_experimenter	include/openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_experimenter {$/;"	s
ofp13_table_feature_prop_header	include/openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_header {$/;"	s
ofp13_table_feature_prop_instructions	include/openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_instructions {$/;"	s
ofp13_table_feature_prop_next_tables	include/openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_next_tables {$/;"	s
ofp13_table_feature_prop_oxm	include/openflow/openflow-1.3.h	/^struct ofp13_table_feature_prop_oxm {$/;"	s
ofp13_table_feature_prop_type	include/openflow/openflow-1.3.h	/^enum ofp13_table_feature_prop_type {$/;"	g
ofp13_table_features	include/openflow/openflow-1.3.h	/^struct ofp13_table_features {$/;"	s
ofp13_table_stats	include/openflow/openflow-1.3.h	/^struct ofp13_table_stats {$/;"	s
ofp14_async_config	include/openflow/openflow-1.4.h	/^struct ofp14_async_config {$/;"	s
ofp14_async_config_prop_experimenter	include/openflow/openflow-1.4.h	/^struct ofp14_async_config_prop_experimenter {$/;"	s
ofp14_async_config_prop_header	include/openflow/openflow-1.4.h	/^struct ofp14_async_config_prop_header {$/;"	s
ofp14_async_config_prop_reasons	include/openflow/openflow-1.4.h	/^struct ofp14_async_config_prop_reasons {$/;"	s
ofp14_async_config_prop_type	include/openflow/openflow-1.4.h	/^enum ofp14_async_config_prop_type {$/;"	g
ofp14_bundle_ctrl_msg	include/openflow/openflow-1.4.h	/^struct ofp14_bundle_ctrl_msg {$/;"	s
ofp14_bundle_ctrl_type	include/openflow/openflow-1.4.h	/^enum ofp14_bundle_ctrl_type {$/;"	g
ofp14_bundle_flags	include/openflow/openflow-1.4.h	/^enum ofp14_bundle_flags {$/;"	g
ofp14_controller_role_reason	include/openflow/openflow-1.4.h	/^enum ofp14_controller_role_reason {$/;"	g
ofp14_flow_monitor_command	include/openflow/openflow-1.4.h	/^enum ofp14_flow_monitor_command {$/;"	g
ofp14_flow_monitor_flags	include/openflow/openflow-1.4.h	/^enum ofp14_flow_monitor_flags {$/;"	g
ofp14_flow_monitor_request	include/openflow/openflow-1.4.h	/^struct ofp14_flow_monitor_request {$/;"	s
ofp14_port	include/openflow/openflow-1.4.h	/^struct ofp14_port {$/;"	s
ofp14_port_desc_prop_ethernet	include/openflow/openflow-1.4.h	/^struct ofp14_port_desc_prop_ethernet {$/;"	s
ofp14_port_mod	include/openflow/openflow-1.4.h	/^struct ofp14_port_mod {$/;"	s
ofp14_port_mod_prop_ethernet	include/openflow/openflow-1.4.h	/^struct ofp14_port_mod_prop_ethernet {$/;"	s
ofp14_port_mod_prop_type	include/openflow/openflow-1.4.h	/^enum ofp14_port_mod_prop_type {$/;"	g
ofp14_port_stats	include/openflow/openflow-1.4.h	/^struct ofp14_port_stats {$/;"	s
ofp14_port_stats_prop_ethernet	include/openflow/openflow-1.4.h	/^struct ofp14_port_stats_prop_ethernet {$/;"	s
ofp14_port_stats_prop_type	include/openflow/openflow-1.4.h	/^enum ofp14_port_stats_prop_type {$/;"	g
ofp14_queue_stats	include/openflow/openflow-1.4.h	/^struct ofp14_queue_stats {$/;"	s
ofp14_requestforward	include/openflow/openflow-1.4.h	/^struct ofp14_requestforward {$/;"	s
ofp14_requestforward_reason	include/openflow/openflow-1.4.h	/^enum ofp14_requestforward_reason {$/;"	g
ofp14_role_prop_experimenter	include/openflow/openflow-1.4.h	/^struct ofp14_role_prop_experimenter {$/;"	s
ofp14_role_prop_header	include/openflow/openflow-1.4.h	/^struct ofp14_role_prop_header {$/;"	s
ofp14_role_prop_type	include/openflow/openflow-1.4.h	/^enum ofp14_role_prop_type {$/;"	g
ofp14_role_status	include/openflow/openflow-1.4.h	/^struct ofp14_role_status {$/;"	s
ofp14_table_desc	include/openflow/openflow-1.4.h	/^struct ofp14_table_desc {$/;"	s
ofp14_table_mod	include/openflow/openflow-1.4.h	/^struct ofp14_table_mod {$/;"	s
ofp14_table_mod_prop_eviction	include/openflow/openflow-1.4.h	/^struct ofp14_table_mod_prop_eviction {$/;"	s
ofp14_table_mod_prop_eviction_flag	include/openflow/openflow-1.4.h	/^enum ofp14_table_mod_prop_eviction_flag {$/;"	g
ofp14_table_mod_prop_type	include/openflow/openflow-1.4.h	/^enum ofp14_table_mod_prop_type {$/;"	g
ofp14_table_mod_prop_vacancy	include/openflow/openflow-1.4.h	/^struct ofp14_table_mod_prop_vacancy {$/;"	s
ofp14_table_reason	include/openflow/openflow-1.4.h	/^enum ofp14_table_reason {$/;"	g
ofp15_action_copy_field	lib/ofp-actions.c	/^struct ofp15_action_copy_field {$/;"	s	file:
ofp15_bucket	include/openflow/openflow-1.5.h	/^struct ofp15_bucket {$/;"	s
ofp15_group_bucket	include/openflow/openflow-1.5.h	/^enum ofp15_group_bucket {$/;"	g
ofp15_group_bucket_prop_type	include/openflow/openflow-1.5.h	/^enum ofp15_group_bucket_prop_type {$/;"	g
ofp15_group_bucket_prop_watch	include/openflow/openflow-1.5.h	/^struct ofp15_group_bucket_prop_watch {$/;"	s
ofp15_group_bucket_prop_weight	include/openflow/openflow-1.5.h	/^struct ofp15_group_bucket_prop_weight {$/;"	s
ofp15_group_desc_request	include/openflow/openflow-1.5.h	/^struct ofp15_group_desc_request {$/;"	s
ofp15_group_desc_stats	include/openflow/openflow-1.5.h	/^struct ofp15_group_desc_stats {$/;"	s
ofp15_group_mod	include/openflow/openflow-1.5.h	/^struct ofp15_group_mod {$/;"	s
ofp15_group_mod_command	include/openflow/openflow-1.5.h	/^enum ofp15_group_mod_command {$/;"	g
ofp15_port_desc_request	include/openflow/openflow-1.5.h	/^struct ofp15_port_desc_request {$/;"	s
ofp_action_dl_addr	lib/ofp-actions.c	/^struct ofp_action_dl_addr {$/;"	s	file:
ofp_action_header	lib/ofp-actions.c	/^struct ofp_action_header {$/;"	s	file:
ofp_actions	lib/ofp-actions.c	/^VLOG_DEFINE_THIS_MODULE(ofp_actions);$/;"	v
ofp_aggregate_stats_reply	include/openflow/openflow-common.h	/^struct ofp_aggregate_stats_reply {$/;"	s
ofp_async_config_reason_to_string	lib/ofp-print.c	/^ofp_async_config_reason_to_string(uint32_t reason,$/;"	f	file:
ofp_bundle	ofproto/bundles.h	/^struct ofp_bundle {$/;"	s
ofp_bundle_add_message	ofproto/bundles.c	/^ofp_bundle_add_message(struct ofconn *ofconn, uint32_t id, uint16_t flags,$/;"	f
ofp_bundle_close	ofproto/bundles.c	/^ofp_bundle_close(struct ofconn *ofconn, uint32_t id, uint16_t flags)$/;"	f
ofp_bundle_create	ofproto/bundles.c	/^ofp_bundle_create(uint32_t id, uint16_t flags)$/;"	f	file:
ofp_bundle_discard	ofproto/bundles.c	/^ofp_bundle_discard(struct ofconn *ofconn, uint32_t id)$/;"	f
ofp_bundle_entry	ofproto/bundles.h	/^struct ofp_bundle_entry {$/;"	s
ofp_bundle_entry_alloc	ofproto/bundles.h	/^ofp_bundle_entry_alloc(enum ofptype type, const struct ofp_header *oh)$/;"	f
ofp_bundle_entry_free	ofproto/bundles.h	/^ofp_bundle_entry_free(struct ofp_bundle_entry *entry)$/;"	f
ofp_bundle_open	ofproto/bundles.c	/^ofp_bundle_open(struct ofconn *ofconn, uint32_t id, uint16_t flags)$/;"	f
ofp_bundle_remove__	ofproto/bundles.c	/^ofp_bundle_remove__(struct ofconn *ofconn, struct ofp_bundle *bundle,$/;"	f
ofp_capabilities	include/openflow/openflow-common.h	/^enum ofp_capabilities {$/;"	g
ofp_config_flags	include/openflow/openflow-common.h	/^enum ofp_config_flags {$/;"	g
ofp_desc_stats	include/openflow/openflow-common.h	/^struct ofp_desc_stats {$/;"	s
ofp_error_msg	include/openflow/openflow-common.h	/^struct ofp_error_msg {$/;"	s
ofp_errors	lib/ofp-errors.c	/^VLOG_DEFINE_THIS_MODULE(ofp_errors);$/;"	v
ofp_flow_mod_command	include/openflow/openflow-common.h	/^enum ofp_flow_mod_command {$/;"	g
ofp_flow_mod_flags	include/openflow/openflow-common.h	/^enum ofp_flow_mod_flags {$/;"	g
ofp_flow_removed_reason	include/openflow/openflow-common.h	/^enum ofp_flow_removed_reason {$/;"	g
ofp_flow_removed_reason_to_string	lib/ofp-print.c	/^ofp_flow_removed_reason_to_string(enum ofp_flow_removed_reason reason,$/;"	f	file:
ofp_group	include/openflow/openflow-common.h	/^enum ofp_group {$/;"	g
ofp_group_capabilities	include/openflow/openflow-common.h	/^enum ofp_group_capabilities {$/;"	g
ofp_group_prop_type	include/openflow/openflow-1.5.h	/^enum ofp_group_prop_type {$/;"	g
ofp_header	include/openflow/openflow-common.h	/^struct ofp_header {$/;"	s
ofp_header_to_string__	lib/ofp-print.c	/^ofp_header_to_string__(const struct ofp_header *oh, enum ofpraw raw,$/;"	f	file:
ofp_hello_elem_header	include/openflow/openflow-common.h	/^struct ofp_hello_elem_header {$/;"	s
ofp_hello_elem_type	include/openflow/openflow-common.h	/^enum ofp_hello_elem_type {$/;"	g
ofp_is_stat	lib/ofp-msgs.c	/^ofp_is_stat(enum ofp_version version, uint8_t type)$/;"	f	file:
ofp_is_stat_reply	lib/ofp-msgs.c	/^ofp_is_stat_reply(enum ofp_version version, uint8_t type)$/;"	f	file:
ofp_is_stat_request	lib/ofp-msgs.c	/^ofp_is_stat_request(enum ofp_version version, uint8_t type)$/;"	f	file:
ofp_match_type	include/openflow/openflow-common.h	/^enum ofp_match_type {$/;"	g
ofp_msg	ofproto/bundles.h	/^    struct ofp_header ofp_msg[DIV_ROUND_UP(64, sizeof(struct ofp_header))];$/;"	m	struct:ofp_bundle_entry	typeref:struct:ofp_bundle_entry::ofp_header
ofp_msgs	lib/ofp-msgs.c	/^VLOG_DEFINE_THIS_MODULE(ofp_msgs);$/;"	v
ofp_node	ofproto/ofproto-dpif-xlate.c	/^    struct hmap_node ofp_node;       \/* Node in parent xbridge 'xports' map. *\/$/;"	m	struct:xport	typeref:struct:xport::hmap_node	file:
ofp_packet_in_reason	include/openflow/openflow-common.h	/^enum ofp_packet_in_reason {$/;"	g
ofp_packet_to_string	lib/ofp-print.c	/^ofp_packet_to_string(const void *data, size_t len)$/;"	f
ofp_port	lib/packets.h	/^    ofp_port_t ofp_port;$/;"	m	union:flow_in_port
ofp_port	ofproto/bond.c	/^    ofp_port_t  ofp_port;       \/* OpenFlow port number. *\/$/;"	m	struct:bond_slave	file:
ofp_port	ofproto/ofproto-dpif-xlate.c	/^    ofp_port_t ofp_port;             \/* Key in parent xbridge 'xports' map. *\/$/;"	m	struct:xport	file:
ofp_port	ofproto/ofproto-provider.h	/^    ofp_port_t ofp_port;        \/* OpenFlow port number. *\/$/;"	m	struct:ofport
ofp_port	ofproto/ofproto.c	/^    ofp_port_t ofp_port;        \/* OpenFlow port number. *\/$/;"	m	struct:ofport_usage	file:
ofp_port	ofproto/ofproto.h	/^    ofp_port_t ofp_port;        \/* OpenFlow port number. *\/$/;"	m	struct:iface_hint
ofp_port	ofproto/ofproto.h	/^    ofp_port_t ofp_port;        \/* OpenFlow port number. *\/$/;"	m	struct:ofproto_port
ofp_port	vswitchd/bridge.c	/^    ofp_port_t ofp_port;        \/* OpenFlow port number. *\/$/;"	m	struct:iface	file:
ofp_port_config	include/openflow/openflow-common.h	/^enum ofp_port_config {$/;"	g
ofp_port_desc_prop_type	include/openflow/openflow-1.4.h	/^enum ofp_port_desc_prop_type {$/;"	g
ofp_port_features	include/openflow/openflow-common.h	/^enum ofp_port_features {$/;"	g
ofp_port_node	vswitchd/bridge.c	/^    struct hmap_node ofp_port_node; \/* In struct bridge's "ifaces" hmap. *\/$/;"	m	struct:iface	typeref:struct:iface::hmap_node	file:
ofp_port_reason	include/openflow/openflow-common.h	/^enum ofp_port_reason {$/;"	g
ofp_port_reason_to_string	lib/ofp-print.c	/^ofp_port_reason_to_string(enum ofp_port_reason reason,$/;"	f	file:
ofp_port_state	include/openflow/openflow-common.h	/^enum ofp_port_state {$/;"	g
ofp_port_status	include/openflow/openflow-common.h	/^struct ofp_port_status {$/;"	s
ofp_port_t	include/openvswitch/types.h	/^typedef uint16_t OVS_BITWISE ofp_port_t;$/;"	t
ofp_port_to_odp_port	ofproto/ofproto-dpif-xlate.c	/^ofp_port_to_odp_port(const struct xbridge *xbridge, ofp_port_t ofp_port)$/;"	f	file:
ofp_port_to_odp_port	ofproto/ofproto-dpif.c	/^ofp_port_to_odp_port(const struct ofproto_dpif *ofproto, ofp_port_t ofp_port)$/;"	f	file:
ofp_port_to_ofport	ofproto/ofproto-dpif.c	/^ofp_port_to_ofport(const struct ofproto_dpif *ofproto, ofp_port_t ofp_port)$/;"	f
ofp_print	lib/ofp-print.c	/^ofp_print(FILE *stream, const void *oh, size_t len, int verbosity)$/;"	f
ofp_print_aggregate_stats_reply	lib/ofp-print.c	/^ofp_print_aggregate_stats_reply(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_bit_names	lib/ofp-print.c	/^ofp_print_bit_names(struct ds *string, uint32_t bits,$/;"	f	file:
ofp_print_bucket_id	lib/ofp-print.c	/^ofp_print_bucket_id(struct ds *s, const char *label, uint32_t bucket_id,$/;"	f	file:
ofp_print_bundle_add	lib/ofp-print.c	/^ofp_print_bundle_add(struct ds *s, const struct ofp_header *oh, int verbosity)$/;"	f	file:
ofp_print_bundle_ctrl	lib/ofp-print.c	/^ofp_print_bundle_ctrl(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_duration	lib/ofp-print.c	/^ofp_print_duration(struct ds *string, unsigned int sec, unsigned int nsec)$/;"	f	file:
ofp_print_echo	lib/ofp-print.c	/^ofp_print_echo(struct ds *string, const struct ofp_header *oh, int verbosity)$/;"	f	file:
ofp_print_error	lib/ofp-print.c	/^ofp_print_error(struct ds *string, enum ofperr error)$/;"	f	file:
ofp_print_error_msg	lib/ofp-print.c	/^ofp_print_error_msg(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_flow_flags	lib/ofp-print.c	/^ofp_print_flow_flags(struct ds *s, enum ofputil_flow_mod_flags flags)$/;"	f	file:
ofp_print_flow_mod	lib/ofp-print.c	/^ofp_print_flow_mod(struct ds *s, const struct ofp_header *oh, int verbosity)$/;"	f	file:
ofp_print_flow_removed	lib/ofp-print.c	/^ofp_print_flow_removed(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_flow_stats	lib/ofp-print.c	/^ofp_print_flow_stats(struct ds *string, struct ofputil_flow_stats *fs)$/;"	f
ofp_print_flow_stats_reply	lib/ofp-print.c	/^ofp_print_flow_stats_reply(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_flow_stats_request	lib/ofp-print.c	/^ofp_print_flow_stats_request(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_geneve_table_mod	lib/ofp-print.c	/^ofp_print_geneve_table_mod(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_geneve_table_reply	lib/ofp-print.c	/^ofp_print_geneve_table_reply(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_group	lib/ofp-print.c	/^ofp_print_group(struct ds *s, uint32_t group_id, uint8_t type,$/;"	f	file:
ofp_print_group_desc	lib/ofp-print.c	/^ofp_print_group_desc(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_group_features	lib/ofp-print.c	/^ofp_print_group_features(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_group_mod	lib/ofp-print.c	/^ofp_print_group_mod(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_group_mod__	lib/ofp-print.c	/^ofp_print_group_mod__(struct ds *s, enum ofp_version ofp_version,$/;"	f	file:
ofp_print_group_stats	lib/ofp-print.c	/^ofp_print_group_stats(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_hello	lib/ofp-print.c	/^ofp_print_hello(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_meter_band	lib/ofp-print.c	/^ofp_print_meter_band(struct ds *s, uint16_t flags,$/;"	f	file:
ofp_print_meter_config	lib/ofp-print.c	/^ofp_print_meter_config(struct ds *s, const struct ofputil_meter_config *mc)$/;"	f	file:
ofp_print_meter_config_reply	lib/ofp-print.c	/^ofp_print_meter_config_reply(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_meter_features_reply	lib/ofp-print.c	/^ofp_print_meter_features_reply(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_meter_flags	lib/ofp-print.c	/^ofp_print_meter_flags(struct ds *s, uint16_t flags)$/;"	f	file:
ofp_print_meter_mod	lib/ofp-print.c	/^ofp_print_meter_mod(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_meter_mod__	lib/ofp-print.c	/^ofp_print_meter_mod__(struct ds *s, const struct ofputil_meter_mod *mm)$/;"	f	file:
ofp_print_meter_stats	lib/ofp-print.c	/^ofp_print_meter_stats(struct ds *s, const struct ofputil_meter_stats *ms)$/;"	f	file:
ofp_print_meter_stats_reply	lib/ofp-print.c	/^ofp_print_meter_stats_reply(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_meter_stats_request	lib/ofp-print.c	/^ofp_print_meter_stats_request(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_nxst_flow_monitor_reply	lib/ofp-print.c	/^ofp_print_nxst_flow_monitor_reply(struct ds *string,$/;"	f	file:
ofp_print_nxst_flow_monitor_request	lib/ofp-print.c	/^ofp_print_nxst_flow_monitor_request(struct ds *string,$/;"	f	file:
ofp_print_nxt_flow_mod_table_id	lib/ofp-print.c	/^ofp_print_nxt_flow_mod_table_id(struct ds *string,$/;"	f	file:
ofp_print_nxt_flow_monitor_cancel	lib/ofp-print.c	/^ofp_print_nxt_flow_monitor_cancel(struct ds *string,$/;"	f	file:
ofp_print_nxt_set_async_config	lib/ofp-print.c	/^ofp_print_nxt_set_async_config(struct ds *string,$/;"	f	file:
ofp_print_nxt_set_controller_id	lib/ofp-print.c	/^ofp_print_nxt_set_controller_id(struct ds *string,$/;"	f	file:
ofp_print_nxt_set_flow_format	lib/ofp-print.c	/^ofp_print_nxt_set_flow_format(struct ds *string,$/;"	f	file:
ofp_print_nxt_set_packet_in_format	lib/ofp-print.c	/^ofp_print_nxt_set_packet_in_format(struct ds *string,$/;"	f	file:
ofp_print_ofpst_desc_reply	lib/ofp-print.c	/^ofp_print_ofpst_desc_reply(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_ofpst_group_desc_request	lib/ofp-print.c	/^ofp_print_ofpst_group_desc_request(struct ds *string,$/;"	f	file:
ofp_print_ofpst_group_request	lib/ofp-print.c	/^ofp_print_ofpst_group_request(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_ofpst_port_desc_reply	lib/ofp-print.c	/^ofp_print_ofpst_port_desc_reply(struct ds *string,$/;"	f	file:
ofp_print_ofpst_port_desc_request	lib/ofp-print.c	/^ofp_print_ofpst_port_desc_request(struct ds *string,$/;"	f	file:
ofp_print_ofpst_port_reply	lib/ofp-print.c	/^ofp_print_ofpst_port_reply(struct ds *string, const struct ofp_header *oh,$/;"	f	file:
ofp_print_ofpst_port_request	lib/ofp-print.c	/^ofp_print_ofpst_port_request(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_ofpst_queue_reply	lib/ofp-print.c	/^ofp_print_ofpst_queue_reply(struct ds *string, const struct ofp_header *oh,$/;"	f	file:
ofp_print_ofpst_queue_request	lib/ofp-print.c	/^ofp_print_ofpst_queue_request(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_packet	lib/ofp-print.c	/^ofp_print_packet(FILE *stream, const void *data, size_t len)$/;"	f
ofp_print_packet_in	lib/ofp-print.c	/^ofp_print_packet_in(struct ds *string, const struct ofp_header *oh,$/;"	f	file:
ofp_print_packet_out	lib/ofp-print.c	/^ofp_print_packet_out(struct ds *string, const struct ofp_header *oh,$/;"	f	file:
ofp_print_phy_port	lib/ofp-print.c	/^ofp_print_phy_port(struct ds *string, const struct ofputil_phy_port *port)$/;"	f	file:
ofp_print_phy_ports	lib/ofp-print.c	/^ofp_print_phy_ports(struct ds *string, uint8_t ofp_version,$/;"	f	file:
ofp_print_port_config	lib/ofp-print.c	/^ofp_print_port_config(struct ds *string, enum ofputil_port_config config)$/;"	f	file:
ofp_print_port_features	lib/ofp-print.c	/^ofp_print_port_features(struct ds *string, enum netdev_features features)$/;"	f	file:
ofp_print_port_mod	lib/ofp-print.c	/^ofp_print_port_mod(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_port_state	lib/ofp-print.c	/^ofp_print_port_state(struct ds *string, enum ofputil_port_state state)$/;"	f	file:
ofp_print_port_status	lib/ofp-print.c	/^ofp_print_port_status(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_queue_get_config_reply	lib/ofp-print.c	/^ofp_print_queue_get_config_reply(struct ds *string,$/;"	f	file:
ofp_print_queue_get_config_request	lib/ofp-print.c	/^ofp_print_queue_get_config_request(struct ds *string,$/;"	f	file:
ofp_print_queue_name	lib/ofp-print.c	/^ofp_print_queue_name(struct ds *string, uint32_t queue_id)$/;"	f	file:
ofp_print_requestforward	lib/ofp-print.c	/^ofp_print_requestforward(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_role_generic	lib/ofp-print.c	/^ofp_print_role_generic(struct ds *string, enum ofp12_controller_role role,$/;"	f	file:
ofp_print_role_message	lib/ofp-print.c	/^ofp_print_role_message(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_role_status_message	lib/ofp-print.c	/^ofp_print_role_status_message(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_stats	lib/ofp-print.c	/^ofp_print_stats(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_switch_config	lib/ofp-print.c	/^ofp_print_switch_config(struct ds *string, const struct ofp_switch_config *osc)$/;"	f	file:
ofp_print_switch_features	lib/ofp-print.c	/^ofp_print_switch_features(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_table_desc	lib/ofp-print.c	/^ofp_print_table_desc(struct ds *string, const struct ofputil_table_desc *td)$/;"	f	file:
ofp_print_table_desc_reply	lib/ofp-print.c	/^ofp_print_table_desc_reply(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_table_features	lib/ofp-print.c	/^ofp_print_table_features(struct ds *s,$/;"	f
ofp_print_table_features_reply	lib/ofp-print.c	/^ofp_print_table_features_reply(struct ds *s, const struct ofp_header *oh)$/;"	f	file:
ofp_print_table_mod	lib/ofp-print.c	/^ofp_print_table_mod(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_table_stats_reply	lib/ofp-print.c	/^ofp_print_table_stats_reply(struct ds *string, const struct ofp_header *oh)$/;"	f	file:
ofp_print_version	lib/ofp-print.c	/^ofp_print_version(const struct ofp_header *oh,$/;"	f
ofp_prop_experimenter	lib/ofp-util.c	/^struct ofp_prop_experimenter {$/;"	s	file:
ofp_prop_header	lib/ofp-util.c	/^struct ofp_prop_header {$/;"	s	file:
ofp_queue_prop_header	include/openflow/openflow-common.h	/^struct ofp_queue_prop_header {$/;"	s
ofp_queue_prop_rate	include/openflow/openflow-common.h	/^struct ofp_queue_prop_rate {$/;"	s
ofp_queue_properties	include/openflow/openflow-common.h	/^enum ofp_queue_properties {$/;"	g
ofp_raw_action_type	lib/ofp-actions.c	/^enum ofp_raw_action_type {$/;"	g	file:
ofp_requestforward_reason_to_string	lib/ofp-print.c	/^ofp_requestforward_reason_to_string(enum ofp14_requestforward_reason reason,$/;"	f	file:
ofp_requests	ofproto/ofproto-provider.h	/^    struct simap ofp_requests;  \/* OpenFlow port number requests. *\/$/;"	m	struct:ofproto	typeref:struct:ofproto::simap
ofp_role_reason_to_string	lib/ofp-print.c	/^ofp_role_reason_to_string(enum ofp14_controller_role_reason reason,$/;"	f	file:
ofp_stats_reply_flags	include/openflow/openflow-common.h	/^enum ofp_stats_reply_flags {$/;"	g
ofp_switch_config	include/openflow/openflow-common.h	/^struct ofp_switch_config {$/;"	s
ofp_switch_features	include/openflow/openflow-common.h	/^struct ofp_switch_features {$/;"	s
ofp_table	include/openflow/openflow-common.h	/^enum ofp_table {$/;"	g
ofp_table_config	include/openflow/openflow-common.h	/^enum ofp_table_config {$/;"	g
ofp_table_reason_to_string	lib/ofp-print.c	/^ofp_table_reason_to_string(enum ofp14_table_reason reason,$/;"	f	file:
ofp_to_string	lib/ofp-print.c	/^ofp_to_string(const void *oh_, size_t len, int verbosity)$/;"	f
ofp_to_string__	lib/ofp-print.c	/^ofp_to_string__(const struct ofp_header *oh, enum ofpraw raw,$/;"	f	file:
ofp_util	lib/ofp-util.c	/^VLOG_DEFINE_THIS_MODULE(ofp_util);$/;"	v
ofp_vendor_header	include/openflow/openflow-common.h	/^struct ofp_vendor_header {$/;"	s
ofp_version	include/openflow/openflow-common.h	/^enum ofp_version {$/;"	g
ofp_version	lib/ofp-actions.c	/^    uint8_t ofp_version;          \/* From ofp_header. *\/$/;"	m	struct:ofpact_hdrs	file:
ofp_version_usage	lib/ofp-version-opt.c	/^ofp_version_usage(void)$/;"	f
ofpact	lib/ofp-actions.c	/^    enum ofpact_type ofpact;    \/* Internal name for action type. *\/$/;"	m	struct:ofpact_map	typeref:enum:ofpact_map::ofpact_type	file:
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_bundle	typeref:struct:ofpact_bundle::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_cnt_ids	typeref:struct:ofpact_cnt_ids::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_conjunction	typeref:struct:ofpact_conjunction::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_controller	typeref:struct:ofpact_controller::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_dscp	typeref:struct:ofpact_dscp::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_ecn	typeref:struct:ofpact_ecn::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_enqueue	typeref:struct:ofpact_enqueue::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_fin_timeout	typeref:struct:ofpact_fin_timeout::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_goto_table	typeref:struct:ofpact_goto_table::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_group	typeref:struct:ofpact_group::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_ip_ttl	typeref:struct:ofpact_ip_ttl::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_ipv4	typeref:struct:ofpact_ipv4::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_l4_port	typeref:struct:ofpact_l4_port::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_learn	typeref:struct:ofpact_learn::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_mac	typeref:struct:ofpact_mac::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_metadata	typeref:struct:ofpact_metadata::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_meter	typeref:struct:ofpact_meter::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_mpls_label	typeref:struct:ofpact_mpls_label::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_mpls_tc	typeref:struct:ofpact_mpls_tc::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_mpls_ttl	typeref:struct:ofpact_mpls_ttl::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_multipath	typeref:struct:ofpact_multipath::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_nest	typeref:struct:ofpact_nest::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_note	typeref:struct:ofpact_note::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_null	typeref:struct:ofpact_null::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_output	typeref:struct:ofpact_output::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_output_reg	typeref:struct:ofpact_output_reg::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_pop_mpls	typeref:struct:ofpact_pop_mpls::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_push_mpls	typeref:struct:ofpact_push_mpls::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_queue	typeref:struct:ofpact_queue::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_reg_move	typeref:struct:ofpact_reg_move::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_resubmit	typeref:struct:ofpact_resubmit::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_sample	typeref:struct:ofpact_sample::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_set_field	typeref:struct:ofpact_set_field::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_stack	typeref:struct:ofpact_stack::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_tunnel	typeref:struct:ofpact_tunnel::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_unroll_xlate	typeref:struct:ofpact_unroll_xlate::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_vlan_pcp	typeref:struct:ofpact_vlan_pcp::ofpact
ofpact	lib/ofp-actions.h	/^    struct ofpact ofpact;$/;"	m	struct:ofpact_vlan_vid	typeref:struct:ofpact_vlan_vid::ofpact
ofpact	lib/ofp-actions.h	/^struct ofpact {$/;"	s
ofpact_bitmap_format	lib/ofp-actions.c	/^ofpact_bitmap_format(uint64_t ofpacts_bitmap, struct ds *s)$/;"	f
ofpact_bitmap_from_openflow	lib/ofp-actions.c	/^ofpact_bitmap_from_openflow(ovs_be32 ofpat_bitmap, enum ofp_version version)$/;"	f
ofpact_bitmap_to_openflow	lib/ofp-actions.c	/^ofpact_bitmap_to_openflow(uint64_t ofpacts_bitmap, enum ofp_version version)$/;"	f
ofpact_bundle	lib/ofp-actions.h	/^struct ofpact_bundle {$/;"	s
ofpact_check__	lib/ofp-actions.c	/^ofpact_check__(enum ofputil_protocol *usable_protocols, struct ofpact *a,$/;"	f	file:
ofpact_check_output_port	lib/ofp-actions.c	/^ofpact_check_output_port(ofp_port_t port, ofp_port_t max_ports)$/;"	f
ofpact_cnt_ids	lib/ofp-actions.h	/^struct ofpact_cnt_ids {$/;"	s
ofpact_conjunction	lib/ofp-actions.h	/^struct ofpact_conjunction {$/;"	s
ofpact_conntrack	lib/ofp-actions.h	/^struct ofpact_conntrack {$/;"	s
ofpact_controller	lib/ofp-actions.h	/^struct ofpact_controller {$/;"	s
ofpact_copy	lib/ofp-actions.c	/^ofpact_copy(struct ofpbuf *out, const struct ofpact *a)$/;"	f	file:
ofpact_ct_get_action_len	lib/ofp-actions.h	/^ofpact_ct_get_action_len(const struct ofpact_conntrack *oc)$/;"	f
ofpact_decode_hmap	lib/ofp-actions.c	/^ofpact_decode_hmap(void)$/;"	f	file:
ofpact_decode_raw	lib/ofp-actions.c	/^ofpact_decode_raw(enum ofp_version ofp_version,$/;"	f	file:
ofpact_dscp	lib/ofp-actions.h	/^struct ofpact_dscp {$/;"	s
ofpact_dummy_enable	lib/ofp-actions.c	/^ofpact_dummy_enable(void)$/;"	f
ofpact_ecn	lib/ofp-actions.h	/^struct ofpact_ecn {$/;"	s
ofpact_encode_hmap	lib/ofp-actions.c	/^ofpact_encode_hmap(void)$/;"	f	file:
ofpact_end	lib/ofp-actions.h	/^ofpact_end(const struct ofpact *ofpacts, size_t ofpacts_len)$/;"	f
ofpact_enqueue	lib/ofp-actions.h	/^struct ofpact_enqueue {$/;"	s
ofpact_fin_timeout	lib/ofp-actions.h	/^struct ofpact_fin_timeout {$/;"	s
ofpact_format	lib/ofp-actions.c	/^ofpact_format(const struct ofpact *a, struct ds *s)$/;"	f	file:
ofpact_get_mf_field	lib/ofp-actions.c	/^ofpact_get_mf_field(enum ofpact_type type, const void *ofpact)$/;"	f	file:
ofpact_goto_table	lib/ofp-actions.h	/^struct ofpact_goto_table {$/;"	s
ofpact_group	lib/ofp-actions.h	/^struct ofpact_group {$/;"	s
ofpact_hdrs	lib/ofp-actions.c	/^struct ofpact_hdrs {$/;"	s	file:
ofpact_hdrs_equal	lib/ofp-actions.c	/^ofpact_hdrs_equal(const struct ofpact_hdrs *a,$/;"	f	file:
ofpact_hdrs_hash	lib/ofp-actions.c	/^ofpact_hdrs_hash(const struct ofpact_hdrs *hdrs)$/;"	f	file:
ofpact_init	lib/ofp-actions.c	/^ofpact_init(struct ofpact *ofpact, enum ofpact_type type, size_t len)$/;"	f
ofpact_ip_ttl	lib/ofp-actions.h	/^struct ofpact_ip_ttl {$/;"	s
ofpact_ipv4	lib/ofp-actions.h	/^struct ofpact_ipv4 {$/;"	s
ofpact_is_allowed_in_actions_set	lib/ofp-actions.c	/^ofpact_is_allowed_in_actions_set(const struct ofpact *a)$/;"	f	file:
ofpact_is_apply_actions	lib/ofp-actions.c	/^ofpact_is_apply_actions(const struct ofpact *a)$/;"	f	file:
ofpact_is_set_or_move_action	lib/ofp-actions.c	/^ofpact_is_set_or_move_action(const struct ofpact *a)$/;"	f	file:
ofpact_l4_port	lib/ofp-actions.h	/^struct ofpact_l4_port {$/;"	s
ofpact_learn	lib/ofp-actions.h	/^struct ofpact_learn {$/;"	s
ofpact_learn_spec	lib/ofp-actions.h	/^struct ofpact_learn_spec {$/;"	s
ofpact_mac	lib/ofp-actions.h	/^struct ofpact_mac {$/;"	s
ofpact_map	lib/ofp-actions.c	/^struct ofpact_map {$/;"	s	file:
ofpact_metadata	lib/ofp-actions.h	/^struct ofpact_metadata {$/;"	s
ofpact_meter	lib/ofp-actions.h	/^struct ofpact_meter {$/;"	s
ofpact_mpls_label	lib/ofp-actions.h	/^struct ofpact_mpls_label {$/;"	s
ofpact_mpls_tc	lib/ofp-actions.h	/^struct ofpact_mpls_tc {$/;"	s
ofpact_mpls_ttl	lib/ofp-actions.h	/^struct ofpact_mpls_ttl {$/;"	s
ofpact_multipath	lib/ofp-actions.h	/^struct ofpact_multipath {$/;"	s
ofpact_name	lib/ofp-actions.c	/^ofpact_name(enum ofpact_type type)$/;"	f
ofpact_nest	lib/ofp-actions.h	/^struct ofpact_nest {$/;"	s
ofpact_nest_get_action_len	lib/ofp-actions.h	/^ofpact_nest_get_action_len(const struct ofpact_nest *on)$/;"	f
ofpact_next	lib/ofp-actions.h	/^ofpact_next(const struct ofpact *ofpact)$/;"	f
ofpact_note	lib/ofp-actions.h	/^struct ofpact_note {$/;"	s
ofpact_null	lib/ofp-actions.h	/^struct ofpact_null {$/;"	s
ofpact_output	lib/ofp-actions.h	/^struct ofpact_output {$/;"	s
ofpact_output_reg	lib/ofp-actions.h	/^struct ofpact_output_reg {$/;"	s
ofpact_outputs_to_port	lib/ofp-actions.c	/^ofpact_outputs_to_port(const struct ofpact *ofpact, ofp_port_t port)$/;"	f	file:
ofpact_pad	lib/ofp-actions.c	/^ofpact_pad(struct ofpbuf *ofpacts)$/;"	f
ofpact_parse	lib/ofp-actions.c	/^ofpact_parse(enum ofpact_type type, char *value, struct ofpbuf *ofpacts,$/;"	f	file:
ofpact_pop_mpls	lib/ofp-actions.h	/^struct ofpact_pop_mpls {$/;"	s
ofpact_pull_raw	lib/ofp-actions.c	/^ofpact_pull_raw(struct ofpbuf *buf, enum ofp_version ofp_version,$/;"	f	file:
ofpact_push_mpls	lib/ofp-actions.h	/^struct ofpact_push_mpls {$/;"	s
ofpact_put	lib/ofp-actions.c	/^ofpact_put(struct ofpbuf *ofpacts, enum ofpact_type type, size_t len)$/;"	f
ofpact_put_raw	lib/ofp-actions.c	/^ofpact_put_raw(struct ofpbuf *buf, enum ofp_version ofp_version,$/;"	f	file:
ofpact_put_reg_load	lib/ofp-actions.c	/^ofpact_put_reg_load(struct ofpbuf *ofpacts)$/;"	f
ofpact_put_set_field	lib/ofp-actions.c	/^ofpact_put_set_field(struct ofpbuf *openflow, enum ofp_version ofp_version,$/;"	f	file:
ofpact_queue	lib/ofp-actions.h	/^struct ofpact_queue {$/;"	s
ofpact_raw_instance	lib/ofp-actions.c	/^struct ofpact_raw_instance {$/;"	s	file:
ofpact_raw_lookup	lib/ofp-actions.c	/^ofpact_raw_lookup(enum ofp_version ofp_version, enum ofp_raw_action_type raw)$/;"	f	file:
ofpact_reg_move	lib/ofp-actions.h	/^struct ofpact_reg_move {$/;"	s
ofpact_resubmit	lib/ofp-actions.h	/^struct ofpact_resubmit {$/;"	s
ofpact_sample	lib/ofp-actions.h	/^struct ofpact_sample {$/;"	s
ofpact_set_field	lib/ofp-actions.h	/^struct ofpact_set_field {$/;"	s
ofpact_stack	lib/ofp-actions.h	/^struct ofpact_stack {$/;"	s
ofpact_tunnel	lib/ofp-actions.h	/^struct ofpact_tunnel {$/;"	s
ofpact_type	lib/ofp-actions.h	/^enum OVS_PACKED_ENUM ofpact_type {$/;"	g
ofpact_type_from_name	lib/ofp-actions.c	/^ofpact_type_from_name(const char *name, enum ofpact_type *type)$/;"	f	file:
ofpact_unroll_xlate	lib/ofp-actions.h	/^struct ofpact_unroll_xlate {$/;"	s
ofpact_update_len	lib/ofp-actions.c	/^ofpact_update_len(struct ofpbuf *ofpacts, struct ofpact *ofpact)$/;"	f
ofpact_vlan_pcp	lib/ofp-actions.h	/^struct ofpact_vlan_pcp {$/;"	s
ofpact_vlan_vid	lib/ofp-actions.h	/^struct ofpact_vlan_vid {$/;"	s
ofpacts	lib/ofp-util.h	/^            uint64_t ofpacts;     \/* Bitmap of supported OFPACT_*. *\/$/;"	m	struct:ofputil_table_features::ofputil_table_instruction_features::ofputil_table_action_features
ofpacts	lib/ofp-util.h	/^    const struct ofpact *ofpacts;$/;"	m	struct:ofputil_flow_stats	typeref:struct:ofputil_flow_stats::ofpact
ofpacts	lib/ofp-util.h	/^    const struct ofpact *ofpacts;$/;"	m	struct:ofputil_flow_update	typeref:struct:ofputil_flow_update::ofpact
ofpacts	lib/ofp-util.h	/^    struct ofpact *ofpacts;     \/* Actions. *\/$/;"	m	struct:ofputil_packet_out	typeref:struct:ofputil_packet_out::ofpact
ofpacts	lib/ofp-util.h	/^    struct ofpact *ofpacts;     \/* Series of "struct ofpact"s. *\/$/;"	m	struct:ofputil_bucket	typeref:struct:ofputil_bucket::ofpact
ofpacts	lib/ofp-util.h	/^    struct ofpact *ofpacts;  \/* Series of "struct ofpact"s. *\/$/;"	m	struct:ofputil_flow_mod	typeref:struct:ofputil_flow_mod::ofpact
ofpacts	lib/ofp-util.h	/^    uint64_t  ofpacts[4];      \/* Bitmaps of supported OFPACT_* *\/$/;"	m	struct:ofputil_group_features
ofpacts	lib/ofp-util.h	/^    uint64_t ofpacts;           \/* Bitmap of OFPACT_* bits. *\/$/;"	m	struct:ofputil_switch_features
ofpacts	ofproto/ofproto-dpif-rid.h	/^    struct ofpact *ofpacts;       \/* Sequence of "struct ofpacts". *\/$/;"	m	struct:recirc_state	typeref:struct:recirc_state::ofpact
ofpacts	ofproto/ofproto-dpif-xlate.c	/^            struct ofpbuf *ofpacts;$/;"	m	struct:xc_entry::__anon188::__anon193	typeref:struct:xc_entry::__anon188::__anon193::ofpbuf	file:
ofpacts	ofproto/ofproto-dpif-xlate.h	/^    const struct ofpact *ofpacts;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::ofpact
ofpacts	ofproto/ofproto-provider.h	/^    struct ofpact ofpacts[];      \/* Sequence of "struct ofpacts". *\/$/;"	m	struct:rule_actions	typeref:struct:rule_actions::ofpact
ofpacts	ovn/controller/ofctrl.c	/^    struct ofpact *ofpacts;$/;"	m	struct:ovn_flow	typeref:struct:ovn_flow::ofpact	file:
ofpacts	ovn/lib/actions.c	/^    struct ofpbuf *ofpacts;     \/* Actions. *\/$/;"	m	struct:action_context	typeref:struct:action_context::ofpbuf	file:
ofpacts	utilities/ovs-ofctl.c	/^    struct ofpact *ofpacts;$/;"	m	struct:fte_version	typeref:struct:fte_version::ofpact	file:
ofpacts_check	lib/ofp-actions.c	/^ofpacts_check(struct ofpact ofpacts[], size_t ofpacts_len,$/;"	f
ofpacts_check_consistency	lib/ofp-actions.c	/^ofpacts_check_consistency(struct ofpact ofpacts[], size_t ofpacts_len,$/;"	f
ofpacts_copy_all	lib/ofp-actions.c	/^ofpacts_copy_all(struct ofpbuf *out, const struct ofpbuf *in,$/;"	f	file:
ofpacts_copy_last	lib/ofp-actions.c	/^ofpacts_copy_last(struct ofpbuf *out, const struct ofpbuf *in,$/;"	f	file:
ofpacts_decode	lib/ofp-actions.c	/^ofpacts_decode(const void *actions, size_t actions_len,$/;"	f	file:
ofpacts_decode_for_action_set	lib/ofp-actions.c	/^ofpacts_decode_for_action_set(const struct ofp_action_header *in,$/;"	f	file:
ofpacts_equal	lib/ofp-actions.c	/^ofpacts_equal(const struct ofpact *a, size_t a_len,$/;"	f
ofpacts_execute_action_set	lib/ofp-actions.c	/^ofpacts_execute_action_set(struct ofpbuf *action_list,$/;"	f
ofpacts_format	lib/ofp-actions.c	/^ofpacts_format(const struct ofpact *ofpacts, size_t ofpacts_len,$/;"	f
ofpacts_get_meter	lib/ofp-actions.c	/^ofpacts_get_meter(const struct ofpact ofpacts[], size_t ofpacts_len)$/;"	f
ofpacts_len	lib/ofp-util.h	/^    size_t ofpacts_len;         \/* Length of ofpacts, in bytes. *\/$/;"	m	struct:ofputil_bucket
ofpacts_len	lib/ofp-util.h	/^    size_t ofpacts_len;         \/* Size of ofpacts in bytes. *\/$/;"	m	struct:ofputil_packet_out
ofpacts_len	lib/ofp-util.h	/^    size_t ofpacts_len;      \/* Length of ofpacts, in bytes. *\/$/;"	m	struct:ofputil_flow_mod
ofpacts_len	lib/ofp-util.h	/^    size_t ofpacts_len;$/;"	m	struct:ofputil_flow_stats
ofpacts_len	lib/ofp-util.h	/^    size_t ofpacts_len;$/;"	m	struct:ofputil_flow_update
ofpacts_len	ofproto/ofproto-dpif-rid.h	/^    uint32_t ofpacts_len;         \/* Size of 'ofpacts', in bytes. *\/$/;"	m	struct:recirc_state
ofpacts_len	ofproto/ofproto-dpif-xlate.h	/^    size_t ofpacts_len;$/;"	m	struct:xlate_in
ofpacts_len	ofproto/ofproto-provider.h	/^    uint32_t ofpacts_len;         \/* Size of 'ofpacts', in bytes. *\/$/;"	m	struct:rule_actions
ofpacts_len	ovn/controller/ofctrl.c	/^    size_t ofpacts_len;$/;"	m	struct:ovn_flow	file:
ofpacts_len	utilities/ovs-ofctl.c	/^    size_t ofpacts_len;$/;"	m	struct:fte_version	file:
ofpacts_output_to_group	lib/ofp-actions.c	/^ofpacts_output_to_group(const struct ofpact *ofpacts, size_t ofpacts_len,$/;"	f
ofpacts_output_to_port	lib/ofp-actions.c	/^ofpacts_output_to_port(const struct ofpact *ofpacts, size_t ofpacts_len,$/;"	f
ofpacts_parse	lib/ofp-actions.c	/^ofpacts_parse(char *str, struct ofpbuf *ofpacts,$/;"	f	file:
ofpacts_parse__	lib/ofp-actions.c	/^ofpacts_parse__(char *str, struct ofpbuf *ofpacts,$/;"	f	file:
ofpacts_parse_actions	lib/ofp-actions.c	/^ofpacts_parse_actions(const char *s, struct ofpbuf *ofpacts,$/;"	f
ofpacts_parse_copy	lib/ofp-actions.c	/^ofpacts_parse_copy(const char *s_, struct ofpbuf *ofpacts,$/;"	f	file:
ofpacts_parse_instructions	lib/ofp-actions.c	/^ofpacts_parse_instructions(const char *s, struct ofpbuf *ofpacts,$/;"	f
ofpacts_pull	lib/ofp-actions.c	/^ofpacts_pull(struct ofpbuf *ofpacts)$/;"	f	file:
ofpacts_pull_openflow_actions	lib/ofp-actions.c	/^ofpacts_pull_openflow_actions(struct ofpbuf *openflow,$/;"	f
ofpacts_pull_openflow_actions__	lib/ofp-actions.c	/^ofpacts_pull_openflow_actions__(struct ofpbuf *openflow,$/;"	f	file:
ofpacts_pull_openflow_instructions	lib/ofp-actions.c	/^ofpacts_pull_openflow_instructions(struct ofpbuf *openflow,$/;"	f
ofpacts_put_openflow_actions	lib/ofp-actions.c	/^ofpacts_put_openflow_actions(const struct ofpact ofpacts[], size_t ofpacts_len,$/;"	f
ofpacts_put_openflow_instructions	lib/ofp-actions.c	/^ofpacts_put_openflow_instructions(const struct ofpact ofpacts[],$/;"	f
ofpacts_update_instruction_actions	lib/ofp-actions.c	/^ofpacts_update_instruction_actions(struct ofpbuf *openflow, size_t ofs)$/;"	f	file:
ofpacts_verify	lib/ofp-actions.c	/^ofpacts_verify(const struct ofpact ofpacts[], size_t ofpacts_len,$/;"	f	file:
ofpacts_verify_nested	lib/ofp-actions.c	/^ofpacts_verify_nested(const struct ofpact *a, enum ofpact_type outer_action)$/;"	f	file:
ofpat	lib/ofp-actions.c	/^    int ofpat;                  \/* OFPAT_* number from OpenFlow spec. *\/$/;"	m	struct:ofpact_map	file:
ofpbuf	lib/ofpbuf.h	/^struct ofpbuf {$/;"	s
ofpbuf_at	lib/ofpbuf.h	/^static inline void *ofpbuf_at(const struct ofpbuf *b, size_t offset,$/;"	f
ofpbuf_at_assert	lib/ofpbuf.h	/^static inline void *ofpbuf_at_assert(const struct ofpbuf *b, size_t offset,$/;"	f
ofpbuf_clear	lib/ofpbuf.h	/^static inline void ofpbuf_clear(struct ofpbuf *b)$/;"	f
ofpbuf_clone	lib/ofpbuf.c	/^ofpbuf_clone(const struct ofpbuf *buffer)$/;"	f
ofpbuf_clone_data	lib/ofpbuf.c	/^ofpbuf_clone_data(const void *data, size_t size)$/;"	f
ofpbuf_clone_data_with_headroom	lib/ofpbuf.c	/^ofpbuf_clone_data_with_headroom(const void *data, size_t size, size_t headroom)$/;"	f
ofpbuf_clone_with_headroom	lib/ofpbuf.c	/^ofpbuf_clone_with_headroom(const struct ofpbuf *buffer, size_t headroom)$/;"	f
ofpbuf_copy__	lib/ofpbuf.c	/^ofpbuf_copy__(struct ofpbuf *b, uint8_t *new_base,$/;"	f	file:
ofpbuf_delete	lib/ofpbuf.h	/^static inline void ofpbuf_delete(struct ofpbuf *b)$/;"	f
ofpbuf_end	lib/ofpbuf.h	/^static inline void *ofpbuf_end(const struct ofpbuf *b)$/;"	f
ofpbuf_equal	lib/ofpbuf.h	/^static inline bool ofpbuf_equal(const struct ofpbuf *a, const struct ofpbuf *b)$/;"	f
ofpbuf_from_list	lib/ofpbuf.h	/^static inline struct ofpbuf *ofpbuf_from_list(const struct ovs_list *list)$/;"	f
ofpbuf_headroom	lib/ofpbuf.h	/^static inline size_t ofpbuf_headroom(const struct ofpbuf *b)$/;"	f
ofpbuf_init	lib/ofpbuf.c	/^ofpbuf_init(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_init__	lib/ofpbuf.c	/^ofpbuf_init__(struct ofpbuf *b, size_t allocated, enum ofpbuf_source source)$/;"	f	file:
ofpbuf_list_delete	lib/ofpbuf.c	/^ofpbuf_list_delete(struct ovs_list *list)$/;"	f
ofpbuf_new	lib/ofpbuf.c	/^ofpbuf_new(size_t size)$/;"	f
ofpbuf_new_with_headroom	lib/ofpbuf.c	/^ofpbuf_new_with_headroom(size_t size, size_t headroom)$/;"	f
ofpbuf_padto	lib/ofpbuf.c	/^ofpbuf_padto(struct ofpbuf *b, size_t length)$/;"	f
ofpbuf_prealloc_headroom	lib/ofpbuf.c	/^ofpbuf_prealloc_headroom(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_prealloc_tailroom	lib/ofpbuf.c	/^ofpbuf_prealloc_tailroom(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_pull	lib/ofpbuf.h	/^static inline void *ofpbuf_pull(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_push	lib/ofpbuf.c	/^ofpbuf_push(struct ofpbuf *b, const void *p, size_t size)$/;"	f
ofpbuf_push_uninit	lib/ofpbuf.c	/^ofpbuf_push_uninit(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_push_zeros	lib/ofpbuf.c	/^ofpbuf_push_zeros(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_put	lib/ofpbuf.c	/^ofpbuf_put(struct ofpbuf *b, const void *p, size_t size)$/;"	f
ofpbuf_put_hex	lib/ofpbuf.c	/^ofpbuf_put_hex(struct ofpbuf *b, const char *s, size_t *n)$/;"	f
ofpbuf_put_uninit	lib/ofpbuf.c	/^ofpbuf_put_uninit(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_put_zeros	lib/ofpbuf.c	/^ofpbuf_put_zeros(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_reinit	lib/ofpbuf.c	/^ofpbuf_reinit(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_reserve	lib/ofpbuf.c	/^ofpbuf_reserve(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_resize__	lib/ofpbuf.c	/^ofpbuf_resize__(struct ofpbuf *b, size_t new_headroom, size_t new_tailroom)$/;"	f	file:
ofpbuf_shift	lib/ofpbuf.c	/^ofpbuf_shift(struct ofpbuf *b, int delta)$/;"	f
ofpbuf_source	lib/ofpbuf.h	/^enum OVS_PACKED_ENUM ofpbuf_source {$/;"	g
ofpbuf_steal_data	lib/ofpbuf.c	/^ofpbuf_steal_data(struct ofpbuf *b)$/;"	f
ofpbuf_tail	lib/ofpbuf.h	/^static inline void *ofpbuf_tail(const struct ofpbuf *b)$/;"	f
ofpbuf_tailroom	lib/ofpbuf.h	/^static inline size_t ofpbuf_tailroom(const struct ofpbuf *b)$/;"	f
ofpbuf_to_string	lib/ofpbuf.c	/^ofpbuf_to_string(const struct ofpbuf *b, size_t maxbytes)$/;"	f
ofpbuf_trim	lib/ofpbuf.c	/^ofpbuf_trim(struct ofpbuf *b)$/;"	f
ofpbuf_try_pull	lib/ofpbuf.h	/^static inline void *ofpbuf_try_pull(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_uninit	lib/ofpbuf.c	/^ofpbuf_uninit(struct ofpbuf *b)$/;"	f
ofpbuf_use	lib/ofpbuf.c	/^ofpbuf_use(struct ofpbuf *b, void *base, size_t allocated)$/;"	f	file:
ofpbuf_use__	lib/ofpbuf.c	/^ofpbuf_use__(struct ofpbuf *b, void *base, size_t allocated, size_t size,$/;"	f	file:
ofpbuf_use_const	lib/ofpbuf.c	/^ofpbuf_use_const(struct ofpbuf *b, const void *data, size_t size)$/;"	f
ofpbuf_use_ds	lib/ofpbuf.c	/^ofpbuf_use_ds(struct ofpbuf *b, const struct ds *ds)$/;"	f
ofpbuf_use_stack	lib/ofpbuf.c	/^ofpbuf_use_stack(struct ofpbuf *b, void *base, size_t allocated)$/;"	f
ofpbuf_use_stub	lib/ofpbuf.c	/^ofpbuf_use_stub(struct ofpbuf *b, void *base, size_t allocated)$/;"	f
ofperr	lib/ofp-errors.h	/^enum ofperr {$/;"	g
ofperr_decode	lib/ofp-errors.c	/^ofperr_decode(enum ofp_version version,$/;"	f	file:
ofperr_decode_msg	lib/ofp-errors.c	/^ofperr_decode_msg(const struct ofp_header *oh, struct ofpbuf *payload)$/;"	f
ofperr_domain_from_version	lib/ofp-errors.c	/^ofperr_domain_from_version(enum ofp_version version)$/;"	f	file:
ofperr_domain_get_name	lib/ofp-errors.c	/^ofperr_domain_get_name(enum ofp_version version)$/;"	f
ofperr_encode_hello	lib/ofp-errors.c	/^ofperr_encode_hello(enum ofperr error, enum ofp_version ofp_version,$/;"	f
ofperr_encode_msg__	lib/ofp-errors.c	/^ofperr_encode_msg__(enum ofperr error, enum ofp_version ofp_version,$/;"	f	file:
ofperr_encode_reply	lib/ofp-errors.c	/^ofperr_encode_reply(enum ofperr error, const struct ofp_header *oh)$/;"	f
ofperr_from_name	lib/ofp-errors.c	/^ofperr_from_name(const char *name)$/;"	f
ofperr_get_code	lib/ofp-errors.c	/^ofperr_get_code(enum ofperr error, enum ofp_version version)$/;"	f
ofperr_get_description	lib/ofp-errors.c	/^ofperr_get_description(enum ofperr error)$/;"	f
ofperr_get_name	lib/ofp-errors.c	/^ofperr_get_name(enum ofperr error)$/;"	f
ofperr_get_triplet__	lib/ofp-errors.c	/^ofperr_get_triplet__(enum ofperr error, const struct ofperr_domain *domain)$/;"	f	file:
ofperr_get_type	lib/ofp-errors.c	/^ofperr_get_type(enum ofperr error, enum ofp_version version)$/;"	f
ofperr_get_vendor	lib/ofp-errors.c	/^ofperr_get_vendor(enum ofperr error, enum ofp_version version)$/;"	f
ofperr_is_valid	lib/ofp-errors.c	/^ofperr_is_valid(enum ofperr error)$/;"	f
ofperr_to_string	lib/ofp-errors.c	/^ofperr_to_string(enum ofperr error)$/;"	f
ofphdrs	lib/ofp-msgs.c	/^struct ofphdrs {$/;"	s	file:
ofphdrs_decode	lib/ofp-msgs.c	/^ofphdrs_decode(struct ofphdrs *hdrs,$/;"	f	file:
ofphdrs_decode_assert	lib/ofp-msgs.c	/^ofphdrs_decode_assert(struct ofphdrs *hdrs,$/;"	f	file:
ofphdrs_equal	lib/ofp-msgs.c	/^ofphdrs_equal(const struct ofphdrs *a, const struct ofphdrs *b)$/;"	f	file:
ofphdrs_hash	lib/ofp-msgs.c	/^ofphdrs_hash(const struct ofphdrs *hdrs)$/;"	f	file:
ofphdrs_is_stat	lib/ofp-msgs.c	/^ofphdrs_is_stat(const struct ofphdrs *hdrs)$/;"	f	file:
ofphdrs_len	lib/ofp-msgs.c	/^ofphdrs_len(const struct ofphdrs *hdrs)$/;"	f
ofpit	lib/ofp-actions.c	/^    int ofpit;                         \/* OFPIT_* number from OpenFlow spec. *\/$/;"	m	struct:ovsinst_map	file:
ofpmp_append	lib/ofp-msgs.c	/^ofpmp_append(struct ovs_list *replies, size_t len)$/;"	f
ofpmp_decode_raw	lib/ofp-msgs.c	/^ofpmp_decode_raw(struct ovs_list *replies)$/;"	f
ofpmp_flags	lib/ofp-msgs.c	/^ofpmp_flags(const struct ofp_header *oh)$/;"	f
ofpmp_flags__	lib/ofp-msgs.c	/^ofpmp_flags__(const struct ofp_header *oh)$/;"	f	file:
ofpmp_init	lib/ofp-msgs.c	/^ofpmp_init(struct ovs_list *replies, const struct ofp_header *request)$/;"	f
ofpmp_more	lib/ofp-msgs.c	/^ofpmp_more(const struct ofp_header *oh)$/;"	f
ofpmp_postappend	lib/ofp-msgs.c	/^ofpmp_postappend(struct ovs_list *replies, size_t start_ofs)$/;"	f
ofpmp_reserve	lib/ofp-msgs.c	/^ofpmp_reserve(struct ovs_list *replies, size_t len)$/;"	f
ofpmp_version	lib/ofp-msgs.c	/^ofpmp_version(struct ovs_list *replies)$/;"	f
ofpmsg_body	lib/ofp-msgs.c	/^ofpmsg_body(const struct ofp_header *oh)$/;"	f
ofpmsg_is_stat_request	lib/ofp-msgs.c	/^ofpmsg_is_stat_request(const struct ofp_header *oh)$/;"	f
ofpmsg_update_length	lib/ofp-msgs.c	/^ofpmsg_update_length(struct ofpbuf *buf)$/;"	f
ofpmsgs_init	lib/ofp-msgs.c	/^ofpmsgs_init(void)$/;"	f	file:
ofport	lib/vswitch-idl.h	/^	int64_t *ofport;$/;"	m	struct:ovsrec_interface
ofport	ofproto/ofproto-dpif-ipfix.c	/^    struct ofport *ofport;      \/* To retrieve port stats. *\/$/;"	m	struct:dpif_ipfix_port	typeref:struct:dpif_ipfix_port::ofport	file:
ofport	ofproto/ofproto-dpif-monitor.c	/^    const struct ofport_dpif *ofport; \/* The corresponding ofport. *\/$/;"	m	struct:mport	typeref:struct:mport::ofport_dpif	file:
ofport	ofproto/ofproto-dpif-monitor.c	/^    const struct ofport_dpif *ofport;$/;"	m	struct:send_soon_entry	typeref:struct:send_soon_entry::ofport_dpif	file:
ofport	ofproto/ofproto-dpif-sflow.c	/^    struct ofport *ofport;      \/* To retrive port stats. *\/$/;"	m	struct:dpif_sflow_port	typeref:struct:dpif_sflow_port::ofport	file:
ofport	ofproto/ofproto-dpif-xlate.c	/^    struct ofport_dpif *ofport;      \/* Key in global 'xports map. *\/$/;"	m	struct:xport	typeref:struct:xport::ofport_dpif	file:
ofport	ofproto/ofproto-provider.h	/^struct ofport {$/;"	s
ofport	ofproto/ofproto.c	/^    struct ofport *ofport;$/;"	m	struct:queue_stats_cbdata	typeref:struct:queue_stats_cbdata::ofport	file:
ofport	ofproto/tunnel.c	/^    const struct ofport_dpif *ofport;$/;"	m	struct:tnl_port	typeref:struct:tnl_port::ofport_dpif	file:
ofport	ovn/controller/physical.c	/^    ofp_port_t ofport;$/;"	m	struct:chassis_tunnel	file:
ofport_destroy	ofproto/ofproto.c	/^ofport_destroy(struct ofport *port)$/;"	f	file:
ofport_destroy__	ofproto/ofproto.c	/^ofport_destroy__(struct ofport *port)$/;"	f	file:
ofport_dpif	ofproto/ofproto-dpif.c	/^struct ofport_dpif {$/;"	s	file:
ofport_dpif_cast	ofproto/ofproto-dpif.c	/^ofport_dpif_cast(const struct ofport *ofport)$/;"	f	file:
ofport_equal	ofproto/ofproto.c	/^ofport_equal(const struct ofputil_phy_port *a,$/;"	f	file:
ofport_get_usage	ofproto/ofproto.c	/^ofport_get_usage(const struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f	file:
ofport_install	ofproto/ofproto.c	/^ofport_install(struct ofproto *p,$/;"	f	file:
ofport_map__	ofproto/tunnel.c	/^static struct hmap ofport_map__ = HMAP_INITIALIZER(&ofport_map__);$/;"	v	typeref:struct:hmap	file:
ofport_modified	ofproto/ofproto.c	/^ofport_modified(struct ofport *port, struct ofputil_phy_port *pp)$/;"	f	file:
ofport_node	ofproto/tunnel.c	/^    struct hmap_node ofport_node;$/;"	m	struct:tnl_port	typeref:struct:tnl_port::hmap_node	file:
ofport_open	ofproto/ofproto.c	/^ofport_open(struct ofproto *ofproto,$/;"	f	file:
ofport_remove	ofproto/ofproto.c	/^ofport_remove(struct ofport *ofport)$/;"	f	file:
ofport_remove_usage	ofproto/ofproto.c	/^ofport_remove_usage(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f	file:
ofport_remove_with_name	ofproto/ofproto.c	/^ofport_remove_with_name(struct ofproto *ofproto, const char *name)$/;"	f	file:
ofport_request	lib/vswitch-idl.h	/^	int64_t *ofport_request;$/;"	m	struct:ovsrec_interface
ofport_set_usage	ofproto/ofproto.c	/^ofport_set_usage(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f	file:
ofport_update_peer	ofproto/ofproto-dpif.c	/^ofport_update_peer(struct ofport_dpif *ofport)$/;"	f	file:
ofport_usage	ofproto/ofproto-provider.h	/^    struct hmap ofport_usage;   \/* Map ofport to last used time. *\/$/;"	m	struct:ofproto	typeref:struct:ofproto::hmap
ofport_usage	ofproto/ofproto.c	/^struct ofport_usage {$/;"	s	file:
ofpp_none_bundle	ofproto/ofproto-dpif-xlate.c	/^static struct xbundle ofpp_none_bundle = {$/;"	v	typeref:struct:xbundle	file:
ofpraw	lib/ofp-msgs.h	/^enum ofpraw {$/;"	g
ofpraw_alloc	lib/ofp-msgs.c	/^ofpraw_alloc(enum ofpraw raw, uint8_t version, size_t extra_tailroom)$/;"	f
ofpraw_alloc_reply	lib/ofp-msgs.c	/^ofpraw_alloc_reply(enum ofpraw raw, const struct ofp_header *request,$/;"	f
ofpraw_alloc_stats_reply	lib/ofp-msgs.c	/^ofpraw_alloc_stats_reply(const struct ofp_header *request,$/;"	f
ofpraw_alloc_xid	lib/ofp-msgs.c	/^ofpraw_alloc_xid(enum ofpraw raw, uint8_t version, ovs_be32 xid,$/;"	f
ofpraw_decode	lib/ofp-msgs.c	/^ofpraw_decode(enum ofpraw *raw, const struct ofp_header *oh)$/;"	f
ofpraw_decode_assert	lib/ofp-msgs.c	/^ofpraw_decode_assert(const struct ofp_header *oh)$/;"	f
ofpraw_decode_partial	lib/ofp-msgs.c	/^ofpraw_decode_partial(enum ofpraw *raw,$/;"	f
ofpraw_from_ofphdrs	lib/ofp-msgs.c	/^ofpraw_from_ofphdrs(enum ofpraw *raw, const struct ofphdrs *hdrs)$/;"	f	file:
ofpraw_get_name	lib/ofp-msgs.c	/^ofpraw_get_name(enum ofpraw raw)$/;"	f
ofpraw_pull	lib/ofp-msgs.c	/^ofpraw_pull(enum ofpraw *rawp, struct ofpbuf *msg)$/;"	f
ofpraw_pull_assert	lib/ofp-msgs.c	/^ofpraw_pull_assert(struct ofpbuf *msg)$/;"	f
ofpraw_put	lib/ofp-msgs.c	/^ofpraw_put(enum ofpraw raw, uint8_t version, struct ofpbuf *buf)$/;"	f
ofpraw_put__	lib/ofp-msgs.c	/^ofpraw_put__(enum ofpraw raw, uint8_t version, ovs_be32 xid,$/;"	f	file:
ofpraw_put_reply	lib/ofp-msgs.c	/^ofpraw_put_reply(enum ofpraw raw, const struct ofp_header *request,$/;"	f
ofpraw_put_stats_reply	lib/ofp-msgs.c	/^ofpraw_put_stats_reply(const struct ofp_header *request, struct ofpbuf *buf)$/;"	f
ofpraw_put_xid	lib/ofp-msgs.c	/^ofpraw_put_xid(enum ofpraw raw, uint8_t version, ovs_be32 xid,$/;"	f
ofpraw_stats_request_to_reply	lib/ofp-msgs.c	/^ofpraw_stats_request_to_reply(enum ofpraw raw, uint8_t version)$/;"	f
ofproto	ofproto/bond.c	/^    struct ofproto_dpif *ofproto; \/* The bridge this bond belongs to. *\/$/;"	m	struct:bond	typeref:struct:bond::ofproto_dpif	file:
ofproto	ofproto/connmgr.c	/^    struct ofproto *ofproto;$/;"	m	struct:connmgr	typeref:struct:connmgr::ofproto	file:
ofproto	ofproto/fail-open.c	/^    struct ofproto *ofproto;$/;"	m	struct:fail_open	typeref:struct:fail_open::ofproto	file:
ofproto	ofproto/in-band.c	/^    struct ofproto *ofproto;$/;"	m	struct:in_band	typeref:struct:in_band::ofproto	file:
ofproto	ofproto/ofproto-dpif-rid.h	/^    struct ofproto_dpif *ofproto; \/* Post-recirculation bridge. *\/$/;"	m	struct:recirc_state	typeref:struct:recirc_state::ofproto_dpif
ofproto	ofproto/ofproto-dpif-upcall.c	/^    struct ofproto_dpif *ofproto;  \/* Parent ofproto. *\/$/;"	m	struct:upcall	typeref:struct:upcall::ofproto_dpif	file:
ofproto	ofproto/ofproto-dpif-xlate.c	/^            struct ofproto_dpif *ofproto;$/;"	m	struct:xc_entry::__anon188::__anon193	typeref:struct:xc_entry::__anon188::__anon193::ofproto_dpif	file:
ofproto	ofproto/ofproto-dpif-xlate.c	/^            struct ofproto_dpif *ofproto;$/;"	m	struct:xc_entry::__anon188::__anon194	typeref:struct:xc_entry::__anon188::__anon194::ofproto_dpif	file:
ofproto	ofproto/ofproto-dpif-xlate.c	/^    struct ofproto_dpif *ofproto; \/* Key in global 'xbridges' map. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::ofproto_dpif	file:
ofproto	ofproto/ofproto-dpif-xlate.h	/^    struct ofproto_dpif *ofproto;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::ofproto_dpif
ofproto	ofproto/ofproto-dpif.c	/^    struct ofproto_dpif *ofproto; \/* Owning ofproto. *\/$/;"	m	struct:ofbundle	typeref:struct:ofbundle::ofproto_dpif	file:
ofproto	ofproto/ofproto-provider.h	/^    const struct ofproto *ofproto;  \/* The ofproto that contains this group. *\/$/;"	m	struct:ofgroup	typeref:struct:ofgroup::ofproto
ofproto	ofproto/ofproto-provider.h	/^    struct ofproto *const ofproto; \/* The ofproto that contains this rule. *\/$/;"	m	struct:rule
ofproto	ofproto/ofproto-provider.h	/^    struct ofproto *ofproto;    \/* The ofproto that contains this port. *\/$/;"	m	struct:ofport	typeref:struct:ofport::ofproto
ofproto	ofproto/ofproto-provider.h	/^struct ofproto {$/;"	s
ofproto	ofproto/ofproto.c	/^VLOG_DEFINE_THIS_MODULE(ofproto);$/;"	v
ofproto	ofproto/ofproto.h	/^    const struct ofproto *ofproto;$/;"	m	struct:ofproto_port_dump	typeref:struct:ofproto_port_dump::ofproto
ofproto	vswitchd/bridge.c	/^    struct ofproto *ofproto;    \/* OpenFlow switch. *\/$/;"	m	struct:bridge	typeref:struct:bridge::ofproto	file:
ofproto_aa_mapping_register	ofproto/ofproto.c	/^ofproto_aa_mapping_register(struct ofproto *ofproto, void *aux,$/;"	f
ofproto_aa_mapping_unregister	ofproto/ofproto.c	/^ofproto_aa_mapping_unregister(struct ofproto *ofproto, void *aux)$/;"	f
ofproto_aa_vlan_get_queue_size	ofproto/ofproto.c	/^ofproto_aa_vlan_get_queue_size(struct ofproto *ofproto)$/;"	f
ofproto_aa_vlan_get_queued	ofproto/ofproto.c	/^ofproto_aa_vlan_get_queued(struct ofproto *ofproto,$/;"	f
ofproto_band	ofproto/ofproto.h	/^enum ofproto_band {$/;"	g
ofproto_bump_tables_version	ofproto/ofproto.c	/^ofproto_bump_tables_version(struct ofproto *ofproto)$/;"	f	file:
ofproto_bundle_register	ofproto/ofproto.c	/^ofproto_bundle_register(struct ofproto *ofproto, void *aux,$/;"	f
ofproto_bundle_settings	ofproto/ofproto.h	/^struct ofproto_bundle_settings {$/;"	s
ofproto_bundle_unregister	ofproto/ofproto.c	/^ofproto_bundle_unregister(struct ofproto *ofproto, void *aux)$/;"	f
ofproto_check_ofpacts	ofproto/ofproto.c	/^ofproto_check_ofpacts(struct ofproto *ofproto,$/;"	f	file:
ofproto_class	ofproto/ofproto-provider.h	/^    const struct ofproto_class *ofproto_class;$/;"	m	struct:ofproto	typeref:struct:ofproto::ofproto_class
ofproto_class	ofproto/ofproto-provider.h	/^struct ofproto_class {$/;"	s
ofproto_class_find__	ofproto/ofproto.c	/^ofproto_class_find__(const char *type)$/;"	f	file:
ofproto_class_register	ofproto/ofproto.c	/^ofproto_class_register(const struct ofproto_class *new_class)$/;"	f
ofproto_class_unregister	ofproto/ofproto.c	/^ofproto_class_unregister(const struct ofproto_class *class)$/;"	f
ofproto_classes	ofproto/ofproto.c	/^static const struct ofproto_class **ofproto_classes;$/;"	v	typeref:struct:ofproto_class	file:
ofproto_configure_table	ofproto/ofproto.c	/^ofproto_configure_table(struct ofproto *ofproto, int table_id,$/;"	f
ofproto_controller	ofproto/ofproto.h	/^struct ofproto_controller {$/;"	s
ofproto_controller_info	ofproto/ofproto.h	/^struct ofproto_controller_info {$/;"	s
ofproto_create	ofproto/ofproto.c	/^ofproto_create(const char *datapath_name, const char *datapath_type,$/;"	f
ofproto_delete	ofproto/ofproto.c	/^ofproto_delete(const char *name, const char *type)$/;"	f
ofproto_dpif	ofproto/ofproto-dpif.c	/^VLOG_DEFINE_THIS_MODULE(ofproto_dpif);$/;"	v
ofproto_dpif	ofproto/ofproto-dpif.c	/^struct ofproto_dpif {$/;"	s	file:
ofproto_dpif_add_internal_flow	ofproto/ofproto-dpif.c	/^ofproto_dpif_add_internal_flow(struct ofproto_dpif *ofproto,$/;"	f
ofproto_dpif_backer_enabled	ofproto/ofproto-dpif.c	/^ofproto_dpif_backer_enabled(struct dpif_backer* backer)$/;"	f
ofproto_dpif_cast	ofproto/ofproto-dpif.c	/^ofproto_dpif_cast(const struct ofproto *ofproto)$/;"	f	file:
ofproto_dpif_class	ofproto/ofproto-dpif.c	/^const struct ofproto_class ofproto_dpif_class = {$/;"	v	typeref:struct:ofproto_class
ofproto_dpif_delete_internal_flow	ofproto/ofproto-dpif.c	/^ofproto_dpif_delete_internal_flow(struct ofproto_dpif *ofproto,$/;"	f
ofproto_dpif_execute_actions	ofproto/ofproto-dpif.c	/^ofproto_dpif_execute_actions(struct ofproto_dpif *ofproto,$/;"	f
ofproto_dpif_execute_actions__	ofproto/ofproto-dpif.c	/^ofproto_dpif_execute_actions__(struct ofproto_dpif *ofproto,$/;"	f
ofproto_dpif_expired	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(ofproto_dpif_expired);$/;"	v
ofproto_dpif_flow_mod	ofproto/ofproto-dpif.c	/^ofproto_dpif_flow_mod(struct ofproto_dpif *ofproto,$/;"	f
ofproto_dpif_get_enable_ufid	ofproto/ofproto-dpif.c	/^ofproto_dpif_get_enable_ufid(const struct dpif_backer *backer)$/;"	f
ofproto_dpif_get_support	ofproto/ofproto-dpif.c	/^ofproto_dpif_get_support(const struct ofproto_dpif *ofproto)$/;"	f
ofproto_dpif_get_tables_version	ofproto/ofproto-dpif.c	/^ofproto_dpif_get_tables_version(struct ofproto_dpif *ofproto OVS_UNUSED)$/;"	f
ofproto_dpif_lookup	ofproto/ofproto-dpif.c	/^ofproto_dpif_lookup(const char *name)$/;"	f	file:
ofproto_dpif_mirror	ofproto/ofproto-dpif-mirror.c	/^VLOG_DEFINE_THIS_MODULE(ofproto_dpif_mirror);$/;"	v
ofproto_dpif_monitor	ofproto/ofproto-dpif-monitor.c	/^VLOG_DEFINE_THIS_MODULE(ofproto_dpif_monitor);$/;"	v
ofproto_dpif_monitor_port_send_soon	ofproto/ofproto-dpif-monitor.c	/^ofproto_dpif_monitor_port_send_soon(const struct ofport_dpif *ofport)$/;"	f
ofproto_dpif_monitor_port_update	ofproto/ofproto-dpif-monitor.c	/^ofproto_dpif_monitor_port_update(const struct ofport_dpif *ofport,$/;"	f
ofproto_dpif_rid	ofproto/ofproto-dpif-rid.c	/^VLOG_DEFINE_THIS_MODULE(ofproto_dpif_rid);$/;"	v
ofproto_dpif_send_packet	ofproto/ofproto-dpif.c	/^ofproto_dpif_send_packet(const struct ofport_dpif *ofport, struct dp_packet *packet)$/;"	f
ofproto_dpif_send_packet_in	ofproto/ofproto-dpif.c	/^ofproto_dpif_send_packet_in(struct ofproto_dpif *ofproto,$/;"	f
ofproto_dpif_upcall	ofproto/ofproto-dpif-upcall.c	/^VLOG_DEFINE_THIS_MODULE(ofproto_dpif_upcall);$/;"	v
ofproto_dpif_wants_packet_in_on_miss	ofproto/ofproto-dpif.c	/^ofproto_dpif_wants_packet_in_on_miss(struct ofproto_dpif *ofproto)$/;"	f
ofproto_dpif_xlate	ofproto/ofproto-dpif-xlate.c	/^VLOG_DEFINE_THIS_MODULE(ofproto_dpif_xlate);$/;"	v
ofproto_enumerate_names	ofproto/ofproto.c	/^ofproto_enumerate_names(const char *type, struct sset *names)$/;"	f
ofproto_enumerate_types	ofproto/ofproto.c	/^ofproto_enumerate_types(struct sset *types)$/;"	f
ofproto_fail_mode	ofproto/ofproto.h	/^enum ofproto_fail_mode {$/;"	g
ofproto_flow_limit	ofproto/ofproto.c	/^unsigned ofproto_flow_limit = OFPROTO_FLOW_LIMIT_DEFAULT;$/;"	v
ofproto_flow_mod	ofproto/ofproto-provider.h	/^struct ofproto_flow_mod {$/;"	s
ofproto_flush	ofproto/ofproto.c	/^COVERAGE_DEFINE(ofproto_flush);$/;"	v
ofproto_flush_flows	ofproto/ofproto.c	/^ofproto_flush_flows(struct ofproto *ofproto)$/;"	f
ofproto_free_ofproto_controller_info	ofproto/ofproto.c	/^ofproto_free_ofproto_controller_info(struct shash *info)$/;"	f
ofproto_get_all_flows	ofproto/ofproto.c	/^ofproto_get_all_flows(struct ofproto *p, struct ds *results)$/;"	f
ofproto_get_datapath_id	ofproto/ofproto.c	/^ofproto_get_datapath_id(const struct ofproto *ofproto)$/;"	f
ofproto_get_flow_restore_wait	ofproto/ofproto.c	/^ofproto_get_flow_restore_wait(void)$/;"	f
ofproto_get_memory_usage	ofproto/ofproto.c	/^ofproto_get_memory_usage(const struct ofproto *ofproto, struct simap *usage)$/;"	f
ofproto_get_n_tables	ofproto/ofproto.c	/^ofproto_get_n_tables(const struct ofproto *ofproto)$/;"	f
ofproto_get_n_visible_tables	ofproto/ofproto.c	/^ofproto_get_n_visible_tables(const struct ofproto *ofproto)$/;"	f
ofproto_get_netflow_ids	ofproto/ofproto.c	/^ofproto_get_netflow_ids(const struct ofproto *ofproto,$/;"	f
ofproto_get_ofproto_controller_info	ofproto/ofproto.c	/^ofproto_get_ofproto_controller_info(const struct ofproto *ofproto,$/;"	f
ofproto_get_port	ofproto/ofproto.c	/^ofproto_get_port(const struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f
ofproto_get_rstp_status	ofproto/ofproto.c	/^ofproto_get_rstp_status(struct ofproto *ofproto,$/;"	f
ofproto_get_snoops	ofproto/ofproto.c	/^ofproto_get_snoops(const struct ofproto *ofproto, struct sset *snoops)$/;"	f
ofproto_get_stp_status	ofproto/ofproto.c	/^ofproto_get_stp_status(struct ofproto *ofproto,$/;"	f
ofproto_get_vlan_usage	ofproto/ofproto.c	/^ofproto_get_vlan_usage(struct ofproto *ofproto, unsigned long int *vlan_bitmap)$/;"	f
ofproto_group_delete_all	ofproto/ofproto.c	/^ofproto_group_delete_all(struct ofproto *ofproto)$/;"	f
ofproto_group_lookup	ofproto/ofproto.c	/^ofproto_group_lookup(const struct ofproto *ofproto, uint32_t group_id,$/;"	f
ofproto_group_ref	ofproto/ofproto.c	/^ofproto_group_ref(struct ofgroup *group)$/;"	f
ofproto_group_unref	ofproto/ofproto.c	/^ofproto_group_unref(struct ofgroup *group)$/;"	f
ofproto_has_snoops	ofproto/ofproto.c	/^ofproto_has_snoops(const struct ofproto *ofproto)$/;"	f
ofproto_has_vlan_usage_changed	ofproto/ofproto.c	/^ofproto_has_vlan_usage_changed(const struct ofproto *ofproto)$/;"	f
ofproto_init	ofproto/ofproto.c	/^ofproto_init(const struct shash *iface_hints)$/;"	f
ofproto_init_max_ports	ofproto/ofproto.c	/^ofproto_init_max_ports(struct ofproto *ofproto, uint16_t max_ports)$/;"	f
ofproto_init_tables	ofproto/ofproto.c	/^ofproto_init_tables(struct ofproto *ofproto, int n_tables)$/;"	f
ofproto_ipfix_bridge_exporter_options	ofproto/ofproto.h	/^struct ofproto_ipfix_bridge_exporter_options {$/;"	s
ofproto_ipfix_bridge_exporter_options_clone	ofproto/ofproto-dpif-ipfix.c	/^ofproto_ipfix_bridge_exporter_options_clone($/;"	f	file:
ofproto_ipfix_bridge_exporter_options_destroy	ofproto/ofproto-dpif-ipfix.c	/^ofproto_ipfix_bridge_exporter_options_destroy($/;"	f	file:
ofproto_ipfix_bridge_exporter_options_equal	ofproto/ofproto-dpif-ipfix.c	/^ofproto_ipfix_bridge_exporter_options_equal($/;"	f	file:
ofproto_ipfix_flow_exporter_options	ofproto/ofproto.h	/^struct ofproto_ipfix_flow_exporter_options {$/;"	s
ofproto_ipfix_flow_exporter_options_clone	ofproto/ofproto-dpif-ipfix.c	/^ofproto_ipfix_flow_exporter_options_clone($/;"	f	file:
ofproto_ipfix_flow_exporter_options_destroy	ofproto/ofproto-dpif-ipfix.c	/^ofproto_ipfix_flow_exporter_options_destroy($/;"	f	file:
ofproto_ipfix_flow_exporter_options_equal	ofproto/ofproto-dpif-ipfix.c	/^ofproto_ipfix_flow_exporter_options_equal($/;"	f	file:
ofproto_is_alive	ofproto/ofproto.c	/^ofproto_is_alive(const struct ofproto *p)$/;"	f
ofproto_is_mirror_output_bundle	ofproto/ofproto.c	/^ofproto_is_mirror_output_bundle(const struct ofproto *ofproto, void *aux)$/;"	f
ofproto_libofproto_la_CFLAGS	Makefile	/^ofproto_libofproto_la_CFLAGS = $(AM_CFLAGS)$/;"	m
ofproto_libofproto_la_CFLAGS	ofproto/automake.mk	/^ofproto_libofproto_la_CFLAGS = $(AM_CFLAGS)$/;"	m
ofproto_libofproto_la_CPPFLAGS	Makefile	/^ofproto_libofproto_la_CPPFLAGS = $(AM_CPPFLAGS)$/;"	m
ofproto_libofproto_la_CPPFLAGS	ofproto/automake.mk	/^ofproto_libofproto_la_CPPFLAGS = $(AM_CPPFLAGS)$/;"	m
ofproto_libofproto_la_DEPENDENCIES	Makefile	/^ofproto_libofproto_la_DEPENDENCIES = lib\/libsflow.la \\$/;"	m
ofproto_libofproto_la_LDFLAGS	Makefile	/^ofproto_libofproto_la_LDFLAGS = \\$/;"	m
ofproto_libofproto_la_LDFLAGS	ofproto/automake.mk	/^ofproto_libofproto_la_LDFLAGS = \\$/;"	m
ofproto_libofproto_la_LIBADD	Makefile	/^ofproto_libofproto_la_LIBADD = lib\/libsflow.la $(am__append_27)$/;"	m
ofproto_libofproto_la_LIBADD	ofproto/automake.mk	/^ofproto_libofproto_la_LIBADD = lib\/libsflow.la$/;"	m
ofproto_libofproto_la_LINK	Makefile	/^ofproto_libofproto_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
ofproto_libofproto_la_OBJECTS	Makefile	/^ofproto_libofproto_la_OBJECTS = $(am_ofproto_libofproto_la_OBJECTS)$/;"	m
ofproto_libofproto_la_SOURCES	Makefile	/^ofproto_libofproto_la_SOURCES = ofproto\/bond.c ofproto\/bond.h \\$/;"	m
ofproto_libofproto_la_SOURCES	ofproto/automake.mk	/^ofproto_libofproto_la_SOURCES = \\$/;"	m
ofproto_lookup	ofproto/ofproto.c	/^ofproto_lookup(const char *name)$/;"	f
ofproto_max_idle	ofproto/ofproto.c	/^unsigned ofproto_max_idle = OFPROTO_MAX_IDLE_DEFAULT;$/;"	v
ofproto_mcast_snooping_port_settings	ofproto/ofproto.h	/^struct ofproto_mcast_snooping_port_settings {$/;"	s
ofproto_mcast_snooping_settings	ofproto/ofproto.h	/^struct ofproto_mcast_snooping_settings {$/;"	s
ofproto_meter_id	lib/ofp-util.h	/^typedef struct { uint32_t uint32; } ofproto_meter_id;$/;"	t	typeref:struct:__anon133
ofproto_mirror_get_stats	ofproto/ofproto.c	/^ofproto_mirror_get_stats(struct ofproto *ofproto, void *aux,$/;"	f
ofproto_mirror_register	ofproto/ofproto.c	/^ofproto_mirror_register(struct ofproto *ofproto, void *aux,$/;"	f
ofproto_mirror_settings	ofproto/ofproto.h	/^struct ofproto_mirror_settings {$/;"	s
ofproto_mirror_unregister	ofproto/ofproto.c	/^ofproto_mirror_unregister(struct ofproto *ofproto, void *aux)$/;"	f
ofproto_mutex	ofproto/connmgr.c	/^    OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/connmgr.c	/^static void ofconn_destroy(struct ofconn *) OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/connmgr.c	/^static void ofconn_flush(struct ofconn *) OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/connmgr.c	/^static void update_fail_open(struct connmgr *) OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/connmgr.h	/^    OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/connmgr.h	/^void ofmonitor_flush(struct connmgr *) OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/fail-open.h	/^void fail_open_destroy(struct fail_open *) OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/fail-open.h	/^void fail_open_flushed(struct fail_open *) OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/fail-open.h	/^void fail_open_maybe_recover(struct fail_open *) OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto-provider.h	/^    OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto-provider.h	/^    OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto-provider.h	/^void rule_collection_ref(struct rule_collection *) OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto.c	/^        OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto.c	/^    OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto.c	/^    OVS_REQUIRES(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto.c	/^static void ofport_destroy__(struct ofport *) OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto.c	/^static void run_rule_executes(struct ofproto *) OVS_EXCLUDED(ofproto_mutex);$/;"	v
ofproto_mutex	ofproto/ofproto.c	/^struct ovs_mutex ofproto_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex
ofproto_normalize_type	ofproto/ofproto.c	/^ofproto_normalize_type(const char *type)$/;"	f
ofproto_packet_in	ofproto/connmgr.h	/^struct ofproto_packet_in {$/;"	s
ofproto_packet_in_miss_type	ofproto/connmgr.h	/^enum ofproto_packet_in_miss_type {$/;"	g
ofproto_packet_out	ofproto/ofproto.c	/^COVERAGE_DEFINE(ofproto_packet_out);$/;"	v
ofproto_parse_name	ofproto/names.c	/^ofproto_parse_name(const char *ofproto_name, char **name, char **type)$/;"	f
ofproto_port	ofproto/ofproto.h	/^struct ofproto_port {$/;"	s
ofproto_port_add	ofproto/ofproto.c	/^ofproto_port_add(struct ofproto *ofproto, struct netdev *netdev,$/;"	f
ofproto_port_bfd_status_changed	ofproto/ofproto.c	/^ofproto_port_bfd_status_changed(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f
ofproto_port_cfm_status_changed	ofproto/ofproto.c	/^ofproto_port_cfm_status_changed(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f
ofproto_port_clear_cfm	ofproto/ofproto.c	/^ofproto_port_clear_cfm(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f
ofproto_port_clone	ofproto/ofproto.c	/^ofproto_port_clone(struct ofproto_port *port, const struct ofproto_port *old)$/;"	f
ofproto_port_del	ofproto/ofproto.c	/^ofproto_port_del(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f
ofproto_port_destroy	ofproto/ofproto.c	/^ofproto_port_destroy(struct ofproto_port *ofproto_port)$/;"	f
ofproto_port_dump	ofproto/ofproto.h	/^struct ofproto_port_dump {$/;"	s
ofproto_port_dump_done	ofproto/ofproto.c	/^ofproto_port_dump_done(struct ofproto_port_dump *dump)$/;"	f
ofproto_port_dump_next	ofproto/ofproto.c	/^ofproto_port_dump_next(struct ofproto_port_dump *dump,$/;"	f
ofproto_port_dump_start	ofproto/ofproto.c	/^ofproto_port_dump_start(struct ofproto_port_dump *dump,$/;"	f
ofproto_port_from_dpif_port	ofproto/ofproto-dpif.c	/^ofproto_port_from_dpif_port(struct ofproto_dpif *ofproto,$/;"	f	file:
ofproto_port_get_bfd_status	ofproto/ofproto.c	/^ofproto_port_get_bfd_status(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_get_cfm_status	ofproto/ofproto.c	/^ofproto_port_get_cfm_status(const struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_get_lacp_stats	ofproto/ofproto.c	/^ofproto_port_get_lacp_stats(const struct ofport *port, struct lacp_slave_stats *stats)$/;"	f
ofproto_port_get_rstp_status	ofproto/ofproto.c	/^ofproto_port_get_rstp_status(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_get_stats	ofproto/ofproto.c	/^ofproto_port_get_stats(const struct ofport *port, struct netdev_stats *stats)$/;"	f
ofproto_port_get_stp_stats	ofproto/ofproto.c	/^ofproto_port_get_stp_stats(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_get_stp_status	ofproto/ofproto.c	/^ofproto_port_get_stp_status(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_is_lacp_current	ofproto/ofproto.c	/^ofproto_port_is_lacp_current(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f
ofproto_port_mod	ofproto/ofproto-provider.h	/^struct ofproto_port_mod {$/;"	s
ofproto_port_open_type	ofproto/ofproto.c	/^ofproto_port_open_type(const char *datapath_type, const char *port_type)$/;"	f
ofproto_port_query_by_name	ofproto/ofproto.c	/^ofproto_port_query_by_name(const struct ofproto *ofproto, const char *devname,$/;"	f
ofproto_port_queue	ofproto/ofproto.h	/^struct ofproto_port_queue {$/;"	s
ofproto_port_rstp_settings	ofproto/ofproto.h	/^struct ofproto_port_rstp_settings {$/;"	s
ofproto_port_rstp_status	ofproto/ofproto.h	/^struct ofproto_port_rstp_status {$/;"	s
ofproto_port_set_bfd	ofproto/ofproto.c	/^ofproto_port_set_bfd(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_set_cfm	ofproto/ofproto.c	/^ofproto_port_set_cfm(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_set_lldp	ofproto/ofproto.c	/^ofproto_port_set_lldp(struct ofproto *ofproto,$/;"	f
ofproto_port_set_mcast_snooping	ofproto/ofproto.c	/^ofproto_port_set_mcast_snooping(struct ofproto *ofproto, void *aux,$/;"	f
ofproto_port_set_queues	ofproto/ofproto.c	/^ofproto_port_set_queues(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_set_realdev	ofproto/ofproto.c	/^ofproto_port_set_realdev(struct ofproto *ofproto, ofp_port_t vlandev_ofp_port,$/;"	f
ofproto_port_set_rstp	ofproto/ofproto.c	/^ofproto_port_set_rstp(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_set_state	ofproto/ofproto.c	/^ofproto_port_set_state(struct ofport *port, enum ofputil_port_state state)$/;"	f
ofproto_port_set_stp	ofproto/ofproto.c	/^ofproto_port_set_stp(struct ofproto *ofproto, ofp_port_t ofp_port,$/;"	f
ofproto_port_stp_settings	ofproto/ofproto.h	/^struct ofproto_port_stp_settings {$/;"	s
ofproto_port_stp_stats	ofproto/ofproto.h	/^struct ofproto_port_stp_stats {$/;"	s
ofproto_port_stp_status	ofproto/ofproto.h	/^struct ofproto_port_stp_status {$/;"	s
ofproto_port_unregister	ofproto/ofproto.c	/^ofproto_port_unregister(struct ofproto *ofproto, ofp_port_t ofp_port)$/;"	f
ofproto_queue_req	ofproto/ofproto.c	/^COVERAGE_DEFINE(ofproto_queue_req);$/;"	v
ofproto_reconnect_controllers	ofproto/ofproto.c	/^ofproto_reconnect_controllers(struct ofproto *ofproto)$/;"	f
ofproto_recv_openflow	ofproto/ofproto.c	/^COVERAGE_DEFINE(ofproto_recv_openflow);$/;"	v
ofproto_reinit_ports	ofproto/ofproto.c	/^COVERAGE_DEFINE(ofproto_reinit_ports);$/;"	v
ofproto_revalidate_all_backers	ofproto/ofproto-dpif.c	/^ofproto_revalidate_all_backers(void)$/;"	f	file:
ofproto_rstp_settings	ofproto/ofproto.h	/^struct ofproto_rstp_settings {$/;"	s
ofproto_rstp_status	ofproto/ofproto.h	/^struct ofproto_rstp_status {$/;"	s
ofproto_rule_ref	ofproto/ofproto.c	/^ofproto_rule_ref(struct rule *rule)$/;"	f
ofproto_rule_try_ref	ofproto/ofproto.c	/^ofproto_rule_try_ref(struct rule *rule)$/;"	f
ofproto_rule_unref	ofproto/ofproto.c	/^ofproto_rule_unref(struct rule *rule)$/;"	f
ofproto_run	ofproto/ofproto.c	/^ofproto_run(struct ofproto *p)$/;"	f
ofproto_set_aa	ofproto/ofproto.c	/^ofproto_set_aa(struct ofproto *ofproto, void *aux OVS_UNUSED,$/;"	f
ofproto_set_controllers	ofproto/ofproto.c	/^ofproto_set_controllers(struct ofproto *p,$/;"	f
ofproto_set_cpu_mask	ofproto/ofproto.c	/^ofproto_set_cpu_mask(const char *cmask)$/;"	f
ofproto_set_datapath_id	ofproto/ofproto.c	/^ofproto_set_datapath_id(struct ofproto *p, uint64_t datapath_id)$/;"	f
ofproto_set_dp_desc	ofproto/ofproto.c	/^ofproto_set_dp_desc(struct ofproto *p, const char *dp_desc)$/;"	f
ofproto_set_extra_in_band_remotes	ofproto/ofproto.c	/^ofproto_set_extra_in_band_remotes(struct ofproto *ofproto,$/;"	f
ofproto_set_fail_mode	ofproto/ofproto.c	/^ofproto_set_fail_mode(struct ofproto *p, enum ofproto_fail_mode fail_mode)$/;"	f
ofproto_set_flood_vlans	ofproto/ofproto.c	/^ofproto_set_flood_vlans(struct ofproto *ofproto, unsigned long *flood_vlans)$/;"	f
ofproto_set_flow_limit	ofproto/ofproto.c	/^ofproto_set_flow_limit(unsigned limit)$/;"	f
ofproto_set_flow_restore_wait	ofproto/ofproto.c	/^ofproto_set_flow_restore_wait(bool flow_restore_wait_db)$/;"	f
ofproto_set_forward_bpdu	ofproto/ofproto.c	/^ofproto_set_forward_bpdu(struct ofproto *ofproto, bool forward_bpdu)$/;"	f
ofproto_set_in_band_queue	ofproto/ofproto.c	/^ofproto_set_in_band_queue(struct ofproto *ofproto, int queue_id)$/;"	f
ofproto_set_ipfix	ofproto/ofproto.c	/^ofproto_set_ipfix(struct ofproto *ofproto,$/;"	f
ofproto_set_mac_table_config	ofproto/ofproto.c	/^ofproto_set_mac_table_config(struct ofproto *ofproto, unsigned idle_time,$/;"	f
ofproto_set_max_idle	ofproto/ofproto.c	/^ofproto_set_max_idle(unsigned max_idle)$/;"	f
ofproto_set_mcast_snooping	ofproto/ofproto.c	/^ofproto_set_mcast_snooping(struct ofproto *ofproto,$/;"	f
ofproto_set_n_dpdk_rxqs	ofproto/ofproto.c	/^ofproto_set_n_dpdk_rxqs(int n_rxqs)$/;"	f
ofproto_set_netflow	ofproto/ofproto.c	/^ofproto_set_netflow(struct ofproto *ofproto,$/;"	f
ofproto_set_rstp	ofproto/ofproto.c	/^ofproto_set_rstp(struct ofproto *ofproto,$/;"	f
ofproto_set_sflow	ofproto/ofproto.c	/^ofproto_set_sflow(struct ofproto *ofproto,$/;"	f
ofproto_set_snoops	ofproto/ofproto.c	/^ofproto_set_snoops(struct ofproto *ofproto, const struct sset *snoops)$/;"	f
ofproto_set_stp	ofproto/ofproto.c	/^ofproto_set_stp(struct ofproto *ofproto,$/;"	f
ofproto_set_threads	ofproto/ofproto.c	/^ofproto_set_threads(int n_handlers_, int n_revalidators_)$/;"	f
ofproto_sflow_options	ofproto/ofproto.h	/^struct ofproto_sflow_options {$/;"	s
ofproto_sflow_options_clone	ofproto/ofproto-dpif-sflow.c	/^ofproto_sflow_options_clone(const struct ofproto_sflow_options *old)$/;"	f	file:
ofproto_sflow_options_destroy	ofproto/ofproto-dpif-sflow.c	/^ofproto_sflow_options_destroy(struct ofproto_sflow_options *options)$/;"	f	file:
ofproto_sflow_options_equal	ofproto/ofproto-dpif-sflow.c	/^ofproto_sflow_options_equal(const struct ofproto_sflow_options *a,$/;"	f	file:
ofproto_stp_settings	ofproto/ofproto.h	/^struct ofproto_stp_settings {$/;"	s
ofproto_stp_status	ofproto/ofproto.h	/^struct ofproto_stp_status {$/;"	s
ofproto_table_get_miss_config	ofproto/ofproto.c	/^ofproto_table_get_miss_config(const struct ofproto *ofproto, uint8_t table_id)$/;"	f
ofproto_table_settings	ofproto/ofproto.h	/^struct ofproto_table_settings {$/;"	s
ofproto_trace	ofproto/ofproto-dpif.c	/^ofproto_trace(struct ofproto_dpif *ofproto, struct flow *flow,$/;"	f	file:
ofproto_tunnel_init	ofproto/tunnel.c	/^ofproto_tunnel_init(void)$/;"	f
ofproto_type_get_memory_usage	ofproto/ofproto.c	/^ofproto_type_get_memory_usage(const char *datapath_type, struct simap *usage)$/;"	f
ofproto_type_run	ofproto/ofproto.c	/^ofproto_type_run(const char *datapath_type)$/;"	f
ofproto_type_wait	ofproto/ofproto.c	/^ofproto_type_wait(const char *datapath_type)$/;"	f
ofproto_unixctl_dpif_dump_dps	ofproto/ofproto-dpif.c	/^ofproto_unixctl_dpif_dump_dps(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofproto_unixctl_dpif_dump_flows	ofproto/ofproto-dpif.c	/^ofproto_unixctl_dpif_dump_flows(struct unixctl_conn *conn,$/;"	f	file:
ofproto_unixctl_dpif_show	ofproto/ofproto-dpif.c	/^ofproto_unixctl_dpif_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofproto_unixctl_fdb_flush	ofproto/ofproto-dpif.c	/^ofproto_unixctl_fdb_flush(struct unixctl_conn *conn, int argc,$/;"	f	file:
ofproto_unixctl_fdb_show	ofproto/ofproto-dpif.c	/^ofproto_unixctl_fdb_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofproto_unixctl_init	ofproto/ofproto-dpif.c	/^ofproto_unixctl_init(void)$/;"	f	file:
ofproto_unixctl_init	ofproto/ofproto.c	/^ofproto_unixctl_init(void)$/;"	f	file:
ofproto_unixctl_list	ofproto/ofproto.c	/^ofproto_unixctl_list(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ofproto_unixctl_mcast_snooping_flush	ofproto/ofproto-dpif.c	/^ofproto_unixctl_mcast_snooping_flush(struct unixctl_conn *conn, int argc,$/;"	f	file:
ofproto_unixctl_mcast_snooping_show	ofproto/ofproto-dpif.c	/^ofproto_unixctl_mcast_snooping_show(struct unixctl_conn *conn,$/;"	f	file:
ofproto_unixctl_trace	ofproto/ofproto-dpif.c	/^ofproto_unixctl_trace(struct unixctl_conn *conn, int argc, const char *argv[],$/;"	f	file:
ofproto_unixctl_trace_actions	ofproto/ofproto-dpif.c	/^ofproto_unixctl_trace_actions(struct unixctl_conn *conn, int argc,$/;"	f	file:
ofproto_update_port	ofproto/ofproto.c	/^COVERAGE_DEFINE(ofproto_update_port);$/;"	v
ofproto_use_tnl_push_pop	ofproto/ofproto-dpif.c	/^static bool ofproto_use_tnl_push_pop = true;$/;"	v	file:
ofproto_wait	ofproto/ofproto.c	/^ofproto_wait(struct ofproto *p)$/;"	f
ofptype	lib/ofp-msgs.h	/^enum ofptype {$/;"	g
ofptype_decode	lib/ofp-msgs.c	/^ofptype_decode(enum ofptype *typep, const struct ofp_header *oh)$/;"	f
ofptype_from_ofpraw	lib/ofp-msgs.c	/^ofptype_from_ofpraw(enum ofpraw raw)$/;"	f
ofptype_get_name	lib/ofp-msgs.c	/^ofptype_get_name(enum ofptype type)$/;"	f
ofptype_pull	lib/ofp-msgs.c	/^ofptype_pull(enum ofptype *typep, struct ofpbuf *buf)$/;"	f
ofputil_aggregate_stats	lib/ofp-util.h	/^struct ofputil_aggregate_stats {$/;"	s
ofputil_append_flow_monitor_request	lib/ofp-util.c	/^ofputil_append_flow_monitor_request($/;"	f
ofputil_append_flow_stats_reply	lib/ofp-util.c	/^ofputil_append_flow_stats_reply(const struct ofputil_flow_stats *fs,$/;"	f
ofputil_append_flow_update	lib/ofp-util.c	/^ofputil_append_flow_update(const struct ofputil_flow_update *update,$/;"	f
ofputil_append_group_desc_reply	lib/ofp-util.c	/^ofputil_append_group_desc_reply(const struct ofputil_group_desc *gds,$/;"	f
ofputil_append_group_stats	lib/ofp-util.c	/^ofputil_append_group_stats(struct ovs_list *replies,$/;"	f
ofputil_append_meter_config	lib/ofp-util.c	/^ofputil_append_meter_config(struct ovs_list *replies,$/;"	f
ofputil_append_meter_stats	lib/ofp-util.c	/^ofputil_append_meter_stats(struct ovs_list *replies,$/;"	f
ofputil_append_ofp11_group_desc_reply	lib/ofp-util.c	/^ofputil_append_ofp11_group_desc_reply(const struct ofputil_group_desc *gds,$/;"	f	file:
ofputil_append_ofp14_port_stats	lib/ofp-util.c	/^ofputil_append_ofp14_port_stats(const struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_append_ofp15_group_desc_reply	lib/ofp-util.c	/^ofputil_append_ofp15_group_desc_reply(const struct ofputil_group_desc *gds,$/;"	f	file:
ofputil_append_port_desc_stats_reply	lib/ofp-util.c	/^ofputil_append_port_desc_stats_reply(const struct ofputil_phy_port *pp,$/;"	f
ofputil_append_port_stat	lib/ofp-util.c	/^ofputil_append_port_stat(struct ovs_list *replies,$/;"	f
ofputil_append_queue_get_config_reply	lib/ofp-util.c	/^ofputil_append_queue_get_config_reply(struct ofpbuf *reply,$/;"	f
ofputil_append_queue_stat	lib/ofp-util.c	/^ofputil_append_queue_stat(struct ovs_list *replies,$/;"	f
ofputil_append_table_desc_reply	lib/ofp-util.c	/^ofputil_append_table_desc_reply(const struct ofputil_table_desc *td,$/;"	f
ofputil_append_table_features_reply	lib/ofp-util.c	/^ofputil_append_table_features_reply(const struct ofputil_table_features *tf,$/;"	f
ofputil_append_table_stats_reply	lib/ofp-util.c	/^ofputil_append_table_stats_reply(struct ofpbuf *reply,$/;"	f
ofputil_async_msg_type	lib/ofp-util.h	/^enum ofputil_async_msg_type {$/;"	g
ofputil_bucket	lib/ofp-util.h	/^struct ofputil_bucket {$/;"	s
ofputil_bucket_check_duplicate_id	lib/ofp-util.c	/^ofputil_bucket_check_duplicate_id(const struct ovs_list *buckets)$/;"	f
ofputil_bucket_clone_data	lib/ofp-util.c	/^ofputil_bucket_clone_data(const struct ofputil_bucket *bucket)$/;"	f	file:
ofputil_bucket_clone_list	lib/ofp-util.c	/^ofputil_bucket_clone_list(struct ovs_list *dest, const struct ovs_list *src,$/;"	f
ofputil_bucket_find	lib/ofp-util.c	/^ofputil_bucket_find(const struct ovs_list *buckets, uint32_t bucket_id)$/;"	f
ofputil_bucket_has_liveness	lib/ofp-util.h	/^ofputil_bucket_has_liveness(const struct ofputil_bucket *bucket)$/;"	f
ofputil_bucket_list_back	lib/ofp-util.c	/^ofputil_bucket_list_back(const struct ovs_list *buckets)$/;"	f
ofputil_bucket_list_destroy	lib/ofp-util.c	/^ofputil_bucket_list_destroy(struct ovs_list *buckets)$/;"	f
ofputil_bucket_list_front	lib/ofp-util.c	/^ofputil_bucket_list_front(const struct ovs_list *buckets)$/;"	f
ofputil_bundle_add_msg	lib/ofp-util.h	/^struct ofputil_bundle_add_msg {$/;"	s
ofputil_bundle_ctrl_msg	lib/ofp-util.h	/^struct ofputil_bundle_ctrl_msg {$/;"	s
ofputil_capabilities	lib/ofp-util.h	/^enum ofputil_capabilities {$/;"	g
ofputil_capabilities_mask	lib/ofp-util.c	/^ofputil_capabilities_mask(enum ofp_version ofp_version)$/;"	f	file:
ofputil_capabilities_to_name	lib/ofp-print.c	/^ofputil_capabilities_to_name(uint32_t bit)$/;"	f	file:
ofputil_count_port_stats	lib/ofp-util.c	/^ofputil_count_port_stats(const struct ofp_header *oh)$/;"	f
ofputil_count_queue_stats	lib/ofp-util.c	/^ofputil_count_queue_stats(const struct ofp_header *oh)$/;"	f
ofputil_decode_aggregate_stats_reply	lib/ofp-util.c	/^ofputil_decode_aggregate_stats_reply(struct ofputil_aggregate_stats *stats,$/;"	f
ofputil_decode_bundle_add	lib/ofp-util.c	/^ofputil_decode_bundle_add(const struct ofp_header *oh,$/;"	f
ofputil_decode_bundle_ctrl	lib/ofp-util.c	/^ofputil_decode_bundle_ctrl(const struct ofp_header *oh,$/;"	f
ofputil_decode_flow_mod	lib/ofp-util.c	/^ofputil_decode_flow_mod(struct ofputil_flow_mod *fm,$/;"	f
ofputil_decode_flow_mod_flags	lib/ofp-util.c	/^ofputil_decode_flow_mod_flags(ovs_be16 raw_flags_,$/;"	f	file:
ofputil_decode_flow_monitor_cancel	lib/ofp-util.c	/^ofputil_decode_flow_monitor_cancel(const struct ofp_header *oh)$/;"	f
ofputil_decode_flow_monitor_request	lib/ofp-util.c	/^ofputil_decode_flow_monitor_request(struct ofputil_flow_monitor_request *rq,$/;"	f
ofputil_decode_flow_removed	lib/ofp-util.c	/^ofputil_decode_flow_removed(struct ofputil_flow_removed *fr,$/;"	f
ofputil_decode_flow_stats_reply	lib/ofp-util.c	/^ofputil_decode_flow_stats_reply(struct ofputil_flow_stats *fs,$/;"	f
ofputil_decode_flow_stats_request	lib/ofp-util.c	/^ofputil_decode_flow_stats_request(struct ofputil_flow_stats_request *fsr,$/;"	f
ofputil_decode_flow_update	lib/ofp-util.c	/^ofputil_decode_flow_update(struct ofputil_flow_update *update,$/;"	f
ofputil_decode_geneve_table_mod	lib/ofp-util.c	/^ofputil_decode_geneve_table_mod(const struct ofp_header *oh,$/;"	f
ofputil_decode_geneve_table_reply	lib/ofp-util.c	/^ofputil_decode_geneve_table_reply(const struct ofp_header *oh,$/;"	f
ofputil_decode_group_desc_reply	lib/ofp-util.c	/^ofputil_decode_group_desc_reply(struct ofputil_group_desc *gd,$/;"	f
ofputil_decode_group_desc_request	lib/ofp-util.c	/^ofputil_decode_group_desc_request(const struct ofp_header *oh)$/;"	f
ofputil_decode_group_features_reply	lib/ofp-util.c	/^ofputil_decode_group_features_reply(const struct ofp_header *oh,$/;"	f
ofputil_decode_group_mod	lib/ofp-util.c	/^ofputil_decode_group_mod(const struct ofp_header *oh,$/;"	f
ofputil_decode_group_stats_reply	lib/ofp-util.c	/^ofputil_decode_group_stats_reply(struct ofpbuf *msg,$/;"	f
ofputil_decode_group_stats_request	lib/ofp-util.c	/^ofputil_decode_group_stats_request(const struct ofp_header *request,$/;"	f
ofputil_decode_hello	lib/ofp-util.c	/^ofputil_decode_hello(const struct ofp_header *oh, uint32_t *allowed_versions)$/;"	f
ofputil_decode_hello_bitmap	lib/ofp-util.c	/^ofputil_decode_hello_bitmap(const struct ofp_hello_elem_header *oheh,$/;"	f	file:
ofputil_decode_meter_config	lib/ofp-util.c	/^ofputil_decode_meter_config(struct ofpbuf *msg,$/;"	f
ofputil_decode_meter_features	lib/ofp-util.c	/^ofputil_decode_meter_features(const struct ofp_header *oh,$/;"	f
ofputil_decode_meter_mod	lib/ofp-util.c	/^ofputil_decode_meter_mod(const struct ofp_header *oh,$/;"	f
ofputil_decode_meter_request	lib/ofp-util.c	/^ofputil_decode_meter_request(const struct ofp_header *oh, uint32_t *meter_id)$/;"	f
ofputil_decode_meter_stats	lib/ofp-util.c	/^ofputil_decode_meter_stats(struct ofpbuf *msg,$/;"	f
ofputil_decode_nxst_flow_request	lib/ofp-util.c	/^ofputil_decode_nxst_flow_request(struct ofputil_flow_stats_request *fsr,$/;"	f	file:
ofputil_decode_ofp10_phy_port	lib/ofp-util.c	/^ofputil_decode_ofp10_phy_port(struct ofputil_phy_port *pp,$/;"	f	file:
ofputil_decode_ofp10_table_stats	lib/ofp-util.c	/^ofputil_decode_ofp10_table_stats(struct ofpbuf *msg,$/;"	f	file:
ofputil_decode_ofp11_group_desc_reply	lib/ofp-util.c	/^ofputil_decode_ofp11_group_desc_reply(struct ofputil_group_desc *gd,$/;"	f	file:
ofputil_decode_ofp11_port	lib/ofp-util.c	/^ofputil_decode_ofp11_port(struct ofputil_phy_port *pp,$/;"	f	file:
ofputil_decode_ofp11_table_stats	lib/ofp-util.c	/^ofputil_decode_ofp11_table_stats(struct ofpbuf *msg,$/;"	f	file:
ofputil_decode_ofp12_table_stats	lib/ofp-util.c	/^ofputil_decode_ofp12_table_stats(struct ofpbuf *msg,$/;"	f	file:
ofputil_decode_ofp13_table_stats	lib/ofp-util.c	/^ofputil_decode_ofp13_table_stats(struct ofpbuf *msg,$/;"	f	file:
ofputil_decode_ofp15_group_desc_reply	lib/ofp-util.c	/^ofputil_decode_ofp15_group_desc_reply(struct ofputil_group_desc *gd,$/;"	f	file:
ofputil_decode_ofpst10_flow_request	lib/ofp-util.c	/^ofputil_decode_ofpst10_flow_request(struct ofputil_flow_stats_request *fsr,$/;"	f	file:
ofputil_decode_ofpst11_flow_request	lib/ofp-util.c	/^ofputil_decode_ofpst11_flow_request(struct ofputil_flow_stats_request *fsr,$/;"	f	file:
ofputil_decode_packet_in	lib/ofp-util.c	/^ofputil_decode_packet_in(struct ofputil_packet_in *pin,$/;"	f
ofputil_decode_packet_out	lib/ofp-util.c	/^ofputil_decode_packet_out(struct ofputil_packet_out *po,$/;"	f
ofputil_decode_port_desc_stats_request	lib/ofp-util.c	/^ofputil_decode_port_desc_stats_request(const struct ofp_header *request,$/;"	f
ofputil_decode_port_mod	lib/ofp-util.c	/^ofputil_decode_port_mod(const struct ofp_header *oh,$/;"	f
ofputil_decode_port_stats	lib/ofp-util.c	/^ofputil_decode_port_stats(struct ofputil_port_stats *ps, struct ofpbuf *msg)$/;"	f
ofputil_decode_port_stats_request	lib/ofp-util.c	/^ofputil_decode_port_stats_request(const struct ofp_header *request,$/;"	f
ofputil_decode_port_status	lib/ofp-util.c	/^ofputil_decode_port_status(const struct ofp_header *oh,$/;"	f
ofputil_decode_queue_get_config_reply	lib/ofp-util.c	/^ofputil_decode_queue_get_config_reply(struct ofpbuf *reply, ofp_port_t *port)$/;"	f
ofputil_decode_queue_get_config_request	lib/ofp-util.c	/^ofputil_decode_queue_get_config_request(const struct ofp_header *oh,$/;"	f
ofputil_decode_queue_stats	lib/ofp-util.c	/^ofputil_decode_queue_stats(struct ofputil_queue_stats *qs, struct ofpbuf *msg)$/;"	f
ofputil_decode_queue_stats_request	lib/ofp-util.c	/^ofputil_decode_queue_stats_request(const struct ofp_header *request,$/;"	f
ofputil_decode_requestforward	lib/ofp-util.c	/^ofputil_decode_requestforward(const struct ofp_header *outer,$/;"	f
ofputil_decode_role_message	lib/ofp-util.c	/^ofputil_decode_role_message(const struct ofp_header *oh,$/;"	f
ofputil_decode_role_status	lib/ofp-util.c	/^ofputil_decode_role_status(const struct ofp_header *oh,$/;"	f
ofputil_decode_set_async_config	lib/ofp-util.c	/^ofputil_decode_set_async_config(const struct ofp_header *oh,$/;"	f
ofputil_decode_switch_features	lib/ofp-util.c	/^ofputil_decode_switch_features(const struct ofp_header *oh,$/;"	f
ofputil_decode_table_desc	lib/ofp-util.c	/^ofputil_decode_table_desc(struct ofpbuf *msg,$/;"	f
ofputil_decode_table_eviction	lib/ofp-util.c	/^ofputil_decode_table_eviction(ovs_be32 config, enum ofp_version version)$/;"	f	file:
ofputil_decode_table_features	lib/ofp-util.c	/^ofputil_decode_table_features(struct ofpbuf *msg,$/;"	f
ofputil_decode_table_miss	lib/ofp-util.c	/^ofputil_decode_table_miss(ovs_be32 config_, enum ofp_version version)$/;"	f	file:
ofputil_decode_table_mod	lib/ofp-util.c	/^ofputil_decode_table_mod(const struct ofp_header *oh,$/;"	f
ofputil_decode_table_stats_reply	lib/ofp-util.c	/^ofputil_decode_table_stats_reply(struct ofpbuf *msg,$/;"	f
ofputil_destroy_requestforward	lib/ofp-util.c	/^ofputil_destroy_requestforward(struct ofputil_requestforward *rf)$/;"	f
ofputil_dl_type_from_openflow	lib/ofp-util.c	/^ofputil_dl_type_from_openflow(ovs_be16 ofp_dl_type)$/;"	f
ofputil_dl_type_to_openflow	lib/ofp-util.c	/^ofputil_dl_type_to_openflow(ovs_be16 flow_dl_type)$/;"	f
ofputil_encode_aggregate_stats_reply	lib/ofp-util.c	/^ofputil_encode_aggregate_stats_reply($/;"	f
ofputil_encode_barrier_request	lib/ofp-util.c	/^ofputil_encode_barrier_request(enum ofp_version ofp_version)$/;"	f
ofputil_encode_bundle_add	lib/ofp-util.c	/^ofputil_encode_bundle_add(enum ofp_version ofp_version,$/;"	f
ofputil_encode_bundle_ctrl_reply	lib/ofp-util.c	/^ofputil_encode_bundle_ctrl_reply(const struct ofp_header *oh,$/;"	f
ofputil_encode_bundle_ctrl_request	lib/ofp-util.c	/^ofputil_encode_bundle_ctrl_request(enum ofp_version ofp_version,$/;"	f
ofputil_encode_dump_ports_request	lib/ofp-util.c	/^ofputil_encode_dump_ports_request(enum ofp_version ofp_version, ofp_port_t port)$/;"	f
ofputil_encode_flow_mod	lib/ofp-util.c	/^ofputil_encode_flow_mod(const struct ofputil_flow_mod *fm,$/;"	f
ofputil_encode_flow_mod_flags	lib/ofp-util.c	/^ofputil_encode_flow_mod_flags(enum ofputil_flow_mod_flags flags,$/;"	f	file:
ofputil_encode_flow_monitor_cancel	lib/ofp-util.c	/^ofputil_encode_flow_monitor_cancel(uint32_t id)$/;"	f
ofputil_encode_flow_removed	lib/ofp-util.c	/^ofputil_encode_flow_removed(const struct ofputil_flow_removed *fr,$/;"	f
ofputil_encode_flow_stats_request	lib/ofp-util.c	/^ofputil_encode_flow_stats_request(const struct ofputil_flow_stats_request *fsr,$/;"	f
ofputil_encode_geneve_table_mod	lib/ofp-util.c	/^ofputil_encode_geneve_table_mod(enum ofp_version ofp_version,$/;"	f
ofputil_encode_geneve_table_reply	lib/ofp-util.c	/^ofputil_encode_geneve_table_reply(const struct ofp_header *oh,$/;"	f
ofputil_encode_get_async_config	lib/ofp-util.c	/^ofputil_encode_get_async_config(const struct ofp_header *oh,$/;"	f
ofputil_encode_group_desc_request	lib/ofp-util.c	/^ofputil_encode_group_desc_request(enum ofp_version ofp_version,$/;"	f
ofputil_encode_group_features_reply	lib/ofp-util.c	/^ofputil_encode_group_features_reply($/;"	f
ofputil_encode_group_features_request	lib/ofp-util.c	/^ofputil_encode_group_features_request(enum ofp_version ofp_version)$/;"	f
ofputil_encode_group_mod	lib/ofp-util.c	/^ofputil_encode_group_mod(enum ofp_version ofp_version,$/;"	f
ofputil_encode_group_stats_request	lib/ofp-util.c	/^ofputil_encode_group_stats_request(enum ofp_version ofp_version,$/;"	f
ofputil_encode_hello	lib/ofp-util.c	/^ofputil_encode_hello(uint32_t allowed_versions)$/;"	f
ofputil_encode_meter_features_reply	lib/ofp-util.c	/^ofputil_encode_meter_features_reply(const struct ofputil_meter_features *mf,$/;"	f
ofputil_encode_meter_mod	lib/ofp-util.c	/^ofputil_encode_meter_mod(enum ofp_version ofp_version,$/;"	f
ofputil_encode_meter_request	lib/ofp-util.c	/^ofputil_encode_meter_request(enum ofp_version ofp_version,$/;"	f
ofputil_encode_nx_packet_in	lib/ofp-util.c	/^ofputil_encode_nx_packet_in(const struct ofputil_packet_in *pin)$/;"	f	file:
ofputil_encode_nx_set_flow_format	lib/ofp-util.c	/^ofputil_encode_nx_set_flow_format(enum nx_flow_format nxff)$/;"	f
ofputil_encode_ofp10_packet_in	lib/ofp-util.c	/^ofputil_encode_ofp10_packet_in(const struct ofputil_packet_in *pin)$/;"	f	file:
ofputil_encode_ofp10_phy_port	lib/ofp-util.c	/^ofputil_encode_ofp10_phy_port(const struct ofputil_phy_port *pp,$/;"	f	file:
ofputil_encode_ofp11_group_mod	lib/ofp-util.c	/^ofputil_encode_ofp11_group_mod(enum ofp_version ofp_version,$/;"	f	file:
ofputil_encode_ofp11_packet_in	lib/ofp-util.c	/^ofputil_encode_ofp11_packet_in(const struct ofputil_packet_in *pin)$/;"	f	file:
ofputil_encode_ofp11_port	lib/ofp-util.c	/^ofputil_encode_ofp11_port(const struct ofputil_phy_port *pp,$/;"	f	file:
ofputil_encode_ofp12_packet_in	lib/ofp-util.c	/^ofputil_encode_ofp12_packet_in(const struct ofputil_packet_in *pin,$/;"	f	file:
ofputil_encode_ofp15_group_mod	lib/ofp-util.c	/^ofputil_encode_ofp15_group_mod(enum ofp_version ofp_version,$/;"	f	file:
ofputil_encode_packet_in	lib/ofp-util.c	/^ofputil_encode_packet_in(const struct ofputil_packet_in *pin,$/;"	f
ofputil_encode_packet_out	lib/ofp-util.c	/^ofputil_encode_packet_out(const struct ofputil_packet_out *po,$/;"	f
ofputil_encode_port_desc_stats_request	lib/ofp-util.c	/^ofputil_encode_port_desc_stats_request(enum ofp_version ofp_version,$/;"	f
ofputil_encode_port_mod	lib/ofp-util.c	/^ofputil_encode_port_mod(const struct ofputil_port_mod *pm,$/;"	f
ofputil_encode_port_status	lib/ofp-util.c	/^ofputil_encode_port_status(const struct ofputil_port_status *ps,$/;"	f
ofputil_encode_queue_get_config_reply	lib/ofp-util.c	/^ofputil_encode_queue_get_config_reply(const struct ofp_header *oh)$/;"	f
ofputil_encode_queue_get_config_request	lib/ofp-util.c	/^ofputil_encode_queue_get_config_request(enum ofp_version version,$/;"	f
ofputil_encode_queue_stats_request	lib/ofp-util.c	/^ofputil_encode_queue_stats_request(enum ofp_version ofp_version,$/;"	f
ofputil_encode_requestforward	lib/ofp-util.c	/^ofputil_encode_requestforward(const struct ofputil_requestforward *rf,$/;"	f
ofputil_encode_role_reply	lib/ofp-util.c	/^ofputil_encode_role_reply(const struct ofp_header *request,$/;"	f
ofputil_encode_role_status	lib/ofp-util.c	/^ofputil_encode_role_status(const struct ofputil_role_status *status,$/;"	f
ofputil_encode_set_protocol	lib/ofp-util.c	/^ofputil_encode_set_protocol(enum ofputil_protocol current,$/;"	f
ofputil_encode_switch_features	lib/ofp-util.c	/^ofputil_encode_switch_features(const struct ofputil_switch_features *features,$/;"	f
ofputil_encode_table_config	lib/ofp-util.c	/^ofputil_encode_table_config(enum ofputil_table_miss miss,$/;"	f	file:
ofputil_encode_table_desc_request	lib/ofp-util.c	/^ofputil_encode_table_desc_request(enum ofp_version ofp_version)$/;"	f
ofputil_encode_table_features_request	lib/ofp-util.c	/^ofputil_encode_table_features_request(enum ofp_version ofp_version)$/;"	f
ofputil_encode_table_mod	lib/ofp-util.c	/^ofputil_encode_table_mod(const struct ofputil_table_mod *tm,$/;"	f
ofputil_encode_table_stats_reply	lib/ofp-util.c	/^ofputil_encode_table_stats_reply(const struct ofp_header *request)$/;"	f
ofputil_eviction_flag_to_string	lib/ofp-print.c	/^ofputil_eviction_flag_to_string(uint32_t bit)$/;"	f	file:
ofputil_flow_dump_protocols	lib/ofp-util.c	/^enum ofputil_protocol ofputil_flow_dump_protocols[] = {$/;"	v	typeref:enum:ofputil_protocol
ofputil_flow_mod	lib/ofp-util.h	/^struct ofputil_flow_mod {$/;"	s
ofputil_flow_mod_flag	lib/ofp-util.c	/^struct ofputil_flow_mod_flag {$/;"	s	file:
ofputil_flow_mod_flags	lib/ofp-util.c	/^static const struct ofputil_flow_mod_flag ofputil_flow_mod_flags[] = {$/;"	v	typeref:struct:ofputil_flow_mod_flag	file:
ofputil_flow_mod_flags	lib/ofp-util.h	/^enum ofputil_flow_mod_flags {$/;"	g
ofputil_flow_monitor_request	lib/ofp-util.h	/^struct ofputil_flow_monitor_request {$/;"	s
ofputil_flow_removed	lib/ofp-util.h	/^struct ofputil_flow_removed {$/;"	s
ofputil_flow_stats	lib/ofp-util.h	/^struct ofputil_flow_stats {$/;"	s
ofputil_flow_stats_request	lib/ofp-util.h	/^struct ofputil_flow_stats_request {$/;"	s
ofputil_flow_update	lib/ofp-util.h	/^struct ofputil_flow_update {$/;"	s
ofputil_format_group	lib/ofp-util.c	/^ofputil_format_group(uint32_t group_id, struct ds *s)$/;"	f
ofputil_format_port	lib/ofp-util.c	/^ofputil_format_port(ofp_port_t port, struct ds *s)$/;"	f
ofputil_format_version	lib/ofp-util.c	/^ofputil_format_version(struct ds *msg, enum ofp_version version)$/;"	f
ofputil_format_version_bitmap	lib/ofp-util.c	/^ofputil_format_version_bitmap(struct ds *msg, uint32_t bitmap)$/;"	f
ofputil_format_version_bitmap__	lib/ofp-util.c	/^ofputil_format_version_bitmap__(struct ds *msg, uint32_t bitmap,$/;"	f	file:
ofputil_format_version_bitmap_names	lib/ofp-util.c	/^ofputil_format_version_bitmap_names(struct ds *msg, uint32_t bitmap)$/;"	f
ofputil_format_version_name	lib/ofp-util.c	/^ofputil_format_version_name(struct ds *msg, enum ofp_version version)$/;"	f
ofputil_frag_handling_from_string	lib/ofp-util.c	/^ofputil_frag_handling_from_string(const char *s, enum ofp_config_flags *flags)$/;"	f
ofputil_frag_handling_to_string	lib/ofp-util.c	/^ofputil_frag_handling_to_string(enum ofp_config_flags flags)$/;"	f
ofputil_geneve_map	lib/ofp-util.h	/^struct ofputil_geneve_map {$/;"	s
ofputil_geneve_table_mod	lib/ofp-util.h	/^struct ofputil_geneve_table_mod {$/;"	s
ofputil_geneve_table_reply	lib/ofp-util.h	/^struct ofputil_geneve_table_reply {$/;"	s
ofputil_get_async_reply	lib/ofp-util.c	/^ofputil_get_async_reply(struct ofpbuf *buf, const uint32_t master_mask,$/;"	f	file:
ofputil_group_bucket_counters_to_ofp11	lib/ofp-util.c	/^ofputil_group_bucket_counters_to_ofp11(const struct ofputil_group_stats *gs,$/;"	f	file:
ofputil_group_desc	lib/ofp-util.h	/^struct ofputil_group_desc {$/;"	s
ofputil_group_features	lib/ofp-util.h	/^struct ofputil_group_features {$/;"	s
ofputil_group_from_string	lib/ofp-util.c	/^ofputil_group_from_string(const char *s, uint32_t *group_idp)$/;"	f
ofputil_group_mod	lib/ofp-util.h	/^struct ofputil_group_mod {$/;"	s
ofputil_group_props	lib/ofp-util.h	/^struct ofputil_group_props {$/;"	s
ofputil_group_stats	lib/ofp-util.h	/^struct ofputil_group_stats {$/;"	s
ofputil_group_stats_to_ofp11	lib/ofp-util.c	/^ofputil_group_stats_to_ofp11(const struct ofputil_group_stats *gs,$/;"	f	file:
ofputil_group_stats_to_ofp13	lib/ofp-util.c	/^ofputil_group_stats_to_ofp13(const struct ofputil_group_stats *gs,$/;"	f	file:
ofputil_group_to_string	lib/ofp-util.c	/^ofputil_group_to_string(uint32_t group_id,$/;"	f
ofputil_init_group_properties	lib/ofp-util.c	/^ofputil_init_group_properties(struct ofputil_group_props *gp)$/;"	f	file:
ofputil_is_bundlable	lib/ofp-util.c	/^ofputil_is_bundlable(enum ofptype type)$/;"	f	file:
ofputil_make_flow_mod_table_id	lib/ofp-util.c	/^ofputil_make_flow_mod_table_id(bool flow_mod_table_id)$/;"	f
ofputil_make_set_packet_in_format	lib/ofp-util.c	/^ofputil_make_set_packet_in_format(enum ofp_version ofp_version,$/;"	f
ofputil_match_from_ofp10_match	lib/ofp-util.c	/^ofputil_match_from_ofp10_match(const struct ofp10_match *ofmatch,$/;"	f
ofputil_match_from_ofp11_match	lib/ofp-util.c	/^ofputil_match_from_ofp11_match(const struct ofp11_match *ofmatch,$/;"	f
ofputil_match_to_ofp10_match	lib/ofp-util.c	/^ofputil_match_to_ofp10_match(const struct match *match,$/;"	f
ofputil_match_to_ofp11_match	lib/ofp-util.c	/^ofputil_match_to_ofp11_match(const struct match *match,$/;"	f
ofputil_match_typical_len	lib/ofp-util.c	/^ofputil_match_typical_len(enum ofputil_protocol protocol)$/;"	f
ofputil_meter_band	lib/ofp-util.h	/^struct ofputil_meter_band {$/;"	s
ofputil_meter_band_stats	lib/ofp-util.h	/^struct ofputil_meter_band_stats {$/;"	s
ofputil_meter_band_types_to_name	lib/ofp-print.c	/^ofputil_meter_band_types_to_name(uint32_t bit)$/;"	f	file:
ofputil_meter_capabilities_to_name	lib/ofp-print.c	/^ofputil_meter_capabilities_to_name(uint32_t bit)$/;"	f	file:
ofputil_meter_config	lib/ofp-util.h	/^struct ofputil_meter_config {$/;"	s
ofputil_meter_features	lib/ofp-util.h	/^struct ofputil_meter_features {$/;"	s
ofputil_meter_mod	lib/ofp-util.h	/^struct ofputil_meter_mod {$/;"	s
ofputil_meter_request_type	lib/ofp-util.h	/^enum ofputil_meter_request_type {$/;"	g
ofputil_meter_stats	lib/ofp-util.h	/^struct ofputil_meter_stats {$/;"	s
ofputil_n_flow_dump_protocols	lib/ofp-util.c	/^size_t ofputil_n_flow_dump_protocols = ARRAY_SIZE(ofputil_flow_dump_protocols);$/;"	v
ofputil_netmask_to_wcbits	lib/ofp-util.c	/^ofputil_netmask_to_wcbits(ovs_be32 netmask)$/;"	f
ofputil_normalize_match	lib/ofp-util.c	/^ofputil_normalize_match(struct match *match)$/;"	f
ofputil_normalize_match__	lib/ofp-util.c	/^ofputil_normalize_match__(struct match *match, bool may_log)$/;"	f	file:
ofputil_normalize_match_quiet	lib/ofp-util.c	/^ofputil_normalize_match_quiet(struct match *match)$/;"	f
ofputil_nx_flow_format_is_valid	lib/ofp-util.c	/^ofputil_nx_flow_format_is_valid(enum nx_flow_format flow_format)$/;"	f
ofputil_nx_flow_format_to_protocol	lib/ofp-util.c	/^ofputil_nx_flow_format_to_protocol(enum nx_flow_format flow_format)$/;"	f
ofputil_nx_flow_format_to_string	lib/ofp-util.c	/^ofputil_nx_flow_format_to_string(enum nx_flow_format flow_format)$/;"	f
ofputil_packet_in	lib/ofp-util.h	/^struct ofputil_packet_in {$/;"	s
ofputil_packet_in_format_from_string	lib/ofp-util.c	/^ofputil_packet_in_format_from_string(const char *s)$/;"	f
ofputil_packet_in_format_is_valid	lib/ofp-util.c	/^ofputil_packet_in_format_is_valid(enum nx_packet_in_format packet_in_format)$/;"	f
ofputil_packet_in_format_to_string	lib/ofp-util.c	/^ofputil_packet_in_format_to_string(enum nx_packet_in_format packet_in_format)$/;"	f
ofputil_packet_in_reason_from_string	lib/ofp-util.c	/^ofputil_packet_in_reason_from_string(const char *s,$/;"	f
ofputil_packet_in_reason_to_string	lib/ofp-util.c	/^ofputil_packet_in_reason_to_string(enum ofp_packet_in_reason reason,$/;"	f
ofputil_packet_out	lib/ofp-util.h	/^struct ofputil_packet_out {$/;"	s
ofputil_parse_key_value	lib/ofp-util.c	/^ofputil_parse_key_value(char **stringp, char **keyp, char **valuep)$/;"	f
ofputil_phy_port	lib/ofp-util.h	/^struct ofputil_phy_port {$/;"	s
ofputil_port_config	lib/ofp-util.h	/^enum ofputil_port_config {$/;"	g
ofputil_port_config_to_name	lib/ofp-print.c	/^ofputil_port_config_to_name(uint32_t bit)$/;"	f	file:
ofputil_port_from_ofp11	lib/ofp-util.c	/^ofputil_port_from_ofp11(ovs_be32 ofp11_port, ofp_port_t *ofp10_port)$/;"	f
ofputil_port_from_string	lib/ofp-util.c	/^ofputil_port_from_string(const char *s, ofp_port_t *portp)$/;"	f
ofputil_port_mod	lib/ofp-util.h	/^struct ofputil_port_mod {$/;"	s
ofputil_port_state	lib/ofp-util.h	/^enum ofputil_port_state {$/;"	g
ofputil_port_state_to_name	lib/ofp-print.c	/^ofputil_port_state_to_name(uint32_t bit)$/;"	f	file:
ofputil_port_stats	lib/ofp-util.h	/^struct ofputil_port_stats {$/;"	s
ofputil_port_stats_from_ofp10	lib/ofp-util.c	/^ofputil_port_stats_from_ofp10(struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_port_stats_from_ofp11	lib/ofp-util.c	/^ofputil_port_stats_from_ofp11(struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_port_stats_from_ofp13	lib/ofp-util.c	/^ofputil_port_stats_from_ofp13(struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_port_stats_to_ofp10	lib/ofp-util.c	/^ofputil_port_stats_to_ofp10(const struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_port_stats_to_ofp11	lib/ofp-util.c	/^ofputil_port_stats_to_ofp11(const struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_port_stats_to_ofp13	lib/ofp-util.c	/^ofputil_port_stats_to_ofp13(const struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_port_status	lib/ofp-util.h	/^struct ofputil_port_status {$/;"	s
ofputil_port_to_ofp11	lib/ofp-util.c	/^ofputil_port_to_ofp11(ofp_port_t ofp10_port)$/;"	f
ofputil_port_to_string	lib/ofp-util.c	/^ofputil_port_to_string(ofp_port_t port,$/;"	f
ofputil_protocol	lib/ofp-util.h	/^enum ofputil_protocol {$/;"	g
ofputil_protocol_from_ofp_version	lib/ofp-util.c	/^ofputil_protocol_from_ofp_version(enum ofp_version version)$/;"	f
ofputil_protocol_from_string__	lib/ofp-util.c	/^ofputil_protocol_from_string__(const char *s, size_t n)$/;"	f	file:
ofputil_protocol_is_valid	lib/ofp-util.c	/^ofputil_protocol_is_valid(enum ofputil_protocol protocol)$/;"	f
ofputil_protocol_set_base	lib/ofp-util.c	/^ofputil_protocol_set_base(enum ofputil_protocol cur,$/;"	f
ofputil_protocol_set_tid	lib/ofp-util.c	/^ofputil_protocol_set_tid(enum ofputil_protocol protocol, bool enable)$/;"	f
ofputil_protocol_to_base	lib/ofp-util.c	/^ofputil_protocol_to_base(enum ofputil_protocol protocol)$/;"	f
ofputil_protocol_to_ofp_version	lib/ofp-util.c	/^ofputil_protocol_to_ofp_version(enum ofputil_protocol protocol)$/;"	f
ofputil_protocol_to_string	lib/ofp-util.c	/^ofputil_protocol_to_string(enum ofputil_protocol protocol)$/;"	f
ofputil_protocols_from_ofp_version	lib/ofp-util.c	/^ofputil_protocols_from_ofp_version(enum ofp_version version)$/;"	f
ofputil_protocols_from_string	lib/ofp-util.c	/^ofputil_protocols_from_string(const char *s)$/;"	f
ofputil_protocols_from_version_bitmap	lib/ofp-util.c	/^ofputil_protocols_from_version_bitmap(uint32_t bitmap)$/;"	f
ofputil_protocols_to_string	lib/ofp-util.c	/^ofputil_protocols_to_string(enum ofputil_protocol protocols)$/;"	f
ofputil_protocols_to_version_bitmap	lib/ofp-util.c	/^ofputil_protocols_to_version_bitmap(enum ofputil_protocol protocols)$/;"	f
ofputil_pull_band_stats	lib/ofp-util.c	/^ofputil_pull_band_stats(struct ofpbuf *msg, size_t len, uint16_t *n_bands,$/;"	f	file:
ofputil_pull_bands	lib/ofp-util.c	/^ofputil_pull_bands(struct ofpbuf *msg, size_t len, uint16_t *n_bands,$/;"	f	file:
ofputil_pull_ofp11_buckets	lib/ofp-util.c	/^ofputil_pull_ofp11_buckets(struct ofpbuf *msg, size_t buckets_length,$/;"	f	file:
ofputil_pull_ofp11_group_mod	lib/ofp-util.c	/^ofputil_pull_ofp11_group_mod(struct ofpbuf *msg, enum ofp_version ofp_version,$/;"	f	file:
ofputil_pull_ofp11_match	lib/ofp-util.c	/^ofputil_pull_ofp11_match(struct ofpbuf *buf, struct match *match,$/;"	f
ofputil_pull_ofp14_port	lib/ofp-util.c	/^ofputil_pull_ofp14_port(struct ofputil_phy_port *pp, struct ofpbuf *msg)$/;"	f	file:
ofputil_pull_ofp14_port_stats	lib/ofp-util.c	/^ofputil_pull_ofp14_port_stats(struct ofputil_port_stats *ops,$/;"	f	file:
ofputil_pull_ofp14_queue_stats	lib/ofp-util.c	/^ofputil_pull_ofp14_queue_stats(struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_pull_ofp15_buckets	lib/ofp-util.c	/^ofputil_pull_ofp15_buckets(struct ofpbuf *msg, size_t buckets_length,$/;"	f	file:
ofputil_pull_ofp15_group_mod	lib/ofp-util.c	/^ofputil_pull_ofp15_group_mod(struct ofpbuf *msg, enum ofp_version ofp_version,$/;"	f	file:
ofputil_pull_phy_port	lib/ofp-util.c	/^ofputil_pull_phy_port(enum ofp_version ofp_version, struct ofpbuf *b,$/;"	f
ofputil_pull_property	lib/ofp-util.c	/^ofputil_pull_property(struct ofpbuf *msg, struct ofpbuf *property,$/;"	f	file:
ofputil_pull_property__	lib/ofp-util.c	/^ofputil_pull_property__(struct ofpbuf *msg, struct ofpbuf *property,$/;"	f	file:
ofputil_pull_queue_get_config_reply	lib/ofp-util.c	/^ofputil_pull_queue_get_config_reply(struct ofpbuf *reply,$/;"	f
ofputil_put_bands	lib/ofp-util.c	/^ofputil_put_bands(uint16_t n_bands, const struct ofputil_meter_band *mb,$/;"	f	file:
ofputil_put_eviction_flags	lib/ofp-print.c	/^ofputil_put_eviction_flags(struct ds *string, uint32_t eviction_flags)$/;"	f	file:
ofputil_put_group_prop_ntr_selection_method	lib/ofp-util.c	/^ofputil_put_group_prop_ntr_selection_method(enum ofp_version ofp_version,$/;"	f	file:
ofputil_put_ofp10_table_stats	lib/ofp-util.c	/^ofputil_put_ofp10_table_stats(const struct ofputil_table_stats *stats,$/;"	f	file:
ofputil_put_ofp11_bucket	lib/ofp-util.c	/^ofputil_put_ofp11_bucket(const struct ofputil_bucket *bucket,$/;"	f	file:
ofputil_put_ofp11_match	lib/ofp-util.c	/^ofputil_put_ofp11_match(struct ofpbuf *b, const struct match *match,$/;"	f
ofputil_put_ofp11_table_stats	lib/ofp-util.c	/^ofputil_put_ofp11_table_stats(const struct ofputil_table_stats *stats,$/;"	f	file:
ofputil_put_ofp12_table_stats	lib/ofp-util.c	/^ofputil_put_ofp12_table_stats(const struct ofputil_table_stats *stats,$/;"	f	file:
ofputil_put_ofp13_table_stats	lib/ofp-util.c	/^ofputil_put_ofp13_table_stats(const struct ofputil_table_stats *stats,$/;"	f	file:
ofputil_put_ofp14_port	lib/ofp-util.c	/^ofputil_put_ofp14_port(const struct ofputil_phy_port *pp,$/;"	f	file:
ofputil_put_ofp15_bucket	lib/ofp-util.c	/^ofputil_put_ofp15_bucket(const struct ofputil_bucket *bucket,$/;"	f	file:
ofputil_put_ofp15_group_bucket_prop_watch	lib/ofp-util.c	/^ofputil_put_ofp15_group_bucket_prop_watch(ovs_be32 watch, uint16_t type,$/;"	f	file:
ofputil_put_ofp15_group_bucket_prop_weight	lib/ofp-util.c	/^ofputil_put_ofp15_group_bucket_prop_weight(ovs_be16 weight,$/;"	f	file:
ofputil_put_phy_port	lib/ofp-util.c	/^ofputil_put_phy_port(enum ofp_version ofp_version,$/;"	f	file:
ofputil_put_switch_features_port	lib/ofp-util.c	/^ofputil_put_switch_features_port(const struct ofputil_phy_port *pp,$/;"	f
ofputil_queue_config	lib/ofp-util.h	/^struct ofputil_queue_config {$/;"	s
ofputil_queue_stats	lib/ofp-util.h	/^struct ofputil_queue_stats {$/;"	s
ofputil_queue_stats_from_ofp10	lib/ofp-util.c	/^ofputil_queue_stats_from_ofp10(struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_queue_stats_from_ofp11	lib/ofp-util.c	/^ofputil_queue_stats_from_ofp11(struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_queue_stats_from_ofp13	lib/ofp-util.c	/^ofputil_queue_stats_from_ofp13(struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_queue_stats_request	lib/ofp-util.h	/^struct ofputil_queue_stats_request {$/;"	s
ofputil_queue_stats_to_ofp10	lib/ofp-util.c	/^ofputil_queue_stats_to_ofp10(const struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_queue_stats_to_ofp11	lib/ofp-util.c	/^ofputil_queue_stats_to_ofp11(const struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_queue_stats_to_ofp13	lib/ofp-util.c	/^ofputil_queue_stats_to_ofp13(const struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_queue_stats_to_ofp14	lib/ofp-util.c	/^ofputil_queue_stats_to_ofp14(const struct ofputil_queue_stats *oqs,$/;"	f	file:
ofputil_requestforward	lib/ofp-util.h	/^struct ofputil_requestforward {$/;"	s
ofputil_role_request	lib/ofp-util.h	/^struct ofputil_role_request {$/;"	s
ofputil_role_status	lib/ofp-util.h	/^struct ofputil_role_status {$/;"	s
ofputil_start_flow_update	lib/ofp-util.c	/^ofputil_start_flow_update(struct ovs_list *replies)$/;"	f
ofputil_switch_features	lib/ofp-util.h	/^struct ofputil_switch_features {$/;"	s
ofputil_switch_features_has_ports	lib/ofp-util.c	/^ofputil_switch_features_has_ports(struct ofpbuf *b)$/;"	f
ofputil_table_action_features	lib/ofp-util.h	/^        struct ofputil_table_action_features {$/;"	s	struct:ofputil_table_features::ofputil_table_instruction_features
ofputil_table_desc	lib/ofp-util.h	/^struct ofputil_table_desc {$/;"	s
ofputil_table_eviction	lib/ofp-util.h	/^enum ofputil_table_eviction {$/;"	g
ofputil_table_eviction_to_string	lib/ofp-print.c	/^ofputil_table_eviction_to_string(enum ofputil_table_eviction eviction)$/;"	f	file:
ofputil_table_features	lib/ofp-util.h	/^struct ofputil_table_features {$/;"	s
ofputil_table_instruction_features	lib/ofp-util.h	/^    struct ofputil_table_instruction_features {$/;"	s	struct:ofputil_table_features
ofputil_table_miss	lib/ofp-util.h	/^enum ofputil_table_miss {$/;"	g
ofputil_table_miss_to_string	lib/ofp-print.c	/^ofputil_table_miss_to_string(enum ofputil_table_miss miss)$/;"	f	file:
ofputil_table_mod	lib/ofp-util.h	/^struct ofputil_table_mod {$/;"	s
ofputil_table_stats	lib/ofp-util.h	/^struct ofputil_table_stats {$/;"	s
ofputil_tid_command	lib/ofp-util.c	/^ofputil_tid_command(const struct ofputil_flow_mod *fm,$/;"	f	file:
ofputil_uninit_geneve_table	lib/ofp-util.c	/^ofputil_uninit_geneve_table(struct ovs_list *mappings)$/;"	f
ofputil_uninit_group_desc	lib/ofp-util.c	/^ofputil_uninit_group_desc(struct ofputil_group_desc *gd)$/;"	f
ofputil_uninit_group_mod	lib/ofp-util.c	/^ofputil_uninit_group_mod(struct ofputil_group_mod *gm)$/;"	f
ofputil_version_from_string	lib/ofp-util.c	/^ofputil_version_from_string(const char *s)$/;"	f
ofputil_version_to_string	lib/ofp-util.c	/^ofputil_version_to_string(enum ofp_version ofp_version)$/;"	f
ofputil_versions_from_string	lib/ofp-util.c	/^ofputil_versions_from_string(const char *s)$/;"	f
ofputil_versions_from_strings	lib/ofp-util.c	/^ofputil_versions_from_strings(char ** const s, size_t count)$/;"	f
ofputil_wcbits_to_netmask	lib/ofp-util.c	/^ofputil_wcbits_to_netmask(int wcbits)$/;"	f
ofputil_wildcard_from_ofpfw10	lib/ofp-util.c	/^ofputil_wildcard_from_ofpfw10(uint32_t ofpfw, struct flow_wildcards *wc)$/;"	f
ofs	lib/meta-flow.h	/^    unsigned int ofs;           \/* Bit offset. *\/$/;"	m	struct:mf_subfield
ofs	ovn/lib/expr.c	/^    int ofs;                          \/* Starting bit offset. *\/$/;"	m	struct:expr_field	file:
ofs	tests/test-classifier.c	/^    int ofs;                    \/* Offset in struct flow. *\/$/;"	m	struct:cls_field	file:
ofs_nbits	lib/ofp-actions.c	/^    ovs_be16 ofs_nbits;             \/* (ofs << 6) | (n_bits - 1). *\/$/;"	m	struct:nx_action_reg_load	file:
ofs_nbits	lib/ofp-actions.c	/^    ovs_be16 ofs_nbits;         \/* (ofs << 6) | (n_bits - 1). *\/$/;"	m	struct:nx_action_bundle	file:
ofs_nbits	lib/ofp-actions.c	/^    ovs_be16 ofs_nbits;         \/* (ofs << 6) | (n_bits - 1). *\/$/;"	m	struct:nx_action_multipath	file:
ofs_nbits	lib/ofp-actions.c	/^    ovs_be16 ofs_nbits;         \/* (ofs << 6) | (n_bits - 1). *\/$/;"	m	struct:nx_action_output_reg	file:
ofs_nbits	lib/ofp-actions.c	/^    ovs_be16 ofs_nbits;         \/* (ofs << 6) | (n_bits - 1). *\/$/;"	m	struct:nx_action_output_reg2	file:
ofservice	ofproto/connmgr.c	/^struct ofservice {$/;"	s	file:
ofservice_create	ofproto/connmgr.c	/^ofservice_create(struct connmgr *mgr, const char *target,$/;"	f	file:
ofservice_destroy	ofproto/connmgr.c	/^ofservice_destroy(struct connmgr *mgr, struct ofservice *ofservice)$/;"	f	file:
ofservice_lookup	ofproto/connmgr.c	/^ofservice_lookup(struct connmgr *mgr, const char *target)$/;"	f	file:
ofservice_reconfigure	ofproto/connmgr.c	/^ofservice_reconfigure(struct ofservice *ofservice,$/;"	f	file:
oftable	ofproto/ofproto-provider.h	/^struct oftable {$/;"	s
oftable_destroy	ofproto/ofproto.c	/^oftable_destroy(struct oftable *table)$/;"	f	file:
oftable_flags	ofproto/ofproto-provider.h	/^enum oftable_flags {$/;"	g
oftable_init	ofproto/ofproto.c	/^oftable_init(struct oftable *table)$/;"	f	file:
oftable_set_name	ofproto/ofproto.c	/^oftable_set_name(struct oftable *table, const char *name)$/;"	f	file:
ogf	ofproto/ofproto-provider.h	/^    struct ofputil_group_features ogf;$/;"	m	struct:ofproto	typeref:struct:ofproto::ofputil_group_features
oidComplete	datapath-windows/ovsext/Oid.c	/^    NDIS_EVENT oidComplete;$/;"	m	struct:_OVS_OID_CONTEXT	file:
old	lib/ovsdb-idl-provider.h	/^    struct ovsdb_datum *old;    \/* Committed data (null if orphaned). *\/$/;"	m	struct:ovsdb_idl_row	typeref:struct:ovsdb_idl_row::ovsdb_datum
old	ovsdb/monitor.c	/^    struct ovsdb_datum *old;    \/* Old data, NULL for an inserted row. *\/$/;"	m	struct:ovsdb_monitor_row	typeref:struct:ovsdb_monitor_row::ovsdb_datum	file:
old	ovsdb/transaction.c	/^    struct ovsdb_row *old;      \/* The old row. *\/$/;"	m	struct:ovsdb_txn_row	typeref:struct:ovsdb_txn_row::ovsdb_row	file:
old	utilities/bugtool/ovs-bugtool	/^                old = fcntl.fcntl(output_fd, fcntl.F_GETFD)$/;"	v
old_root_aux	lib/rstp-common.h	/^    void *old_root_aux;$/;"	m	struct:rstp
old_rules	ofproto/ofproto-provider.h	/^    struct rule_collection old_rules;   \/* Affected rules. *\/$/;"	m	struct:ofproto_flow_mod	typeref:struct:ofproto_flow_mod::rule_collection
older	lib/timeval.c	/^    struct cpu_usage older;$/;"	m	struct:cpu_tracker	typeref:struct:cpu_tracker::cpu_usage	file:
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	datapath/Makefile	/^oldincludedir = \/usr\/include$/;"	m
omh	include/openflow/openflow-1.1.h	/^    struct ofp11_match_header omh;$/;"	m	struct:ofp11_match	typeref:struct:ofp11_match::ofp11_match_header
on_exit	tests/system-kmod-testsuite	/^on_exit () {$/;"	f
on_exit	tests/system-userspace-testsuite	/^on_exit () {$/;"	f
on_exit	tests/testsuite	/^on_exit () {$/;"	f
once	lib/dirs.c	/^    struct ovsthread_once once; \/* Ensures 'value' gets initialized once. *\/$/;"	m	struct:directory	typeref:struct:directory::ovsthread_once	file:
once	lib/perf-counter.h	/^    bool once;$/;"	m	struct:perf_counter
one	lib/hindex.h	/^    struct hindex_node *one;$/;"	m	struct:hindex	typeref:struct:hindex::hindex_node
one	lib/hmap.h	/^    struct hmap_node *one;$/;"	m	struct:hmap	typeref:struct:hmap::hmap_node
one_arg	utilities/ovs-pki	/^one_arg() {$/;"	f
one_arg	utilities/ovs-pki.in	/^one_arg() {$/;"	f
one_or_two_args	utilities/ovs-pki	/^one_or_two_args() {$/;"	f
one_or_two_args	utilities/ovs-pki.in	/^one_or_two_args() {$/;"	f
oneline	ovn/utilities/ovn-nbctl.c	/^static bool oneline;$/;"	v	file:
oneline	ovn/utilities/ovn-sbctl.c	/^static bool oneline;$/;"	v	file:
oneline	utilities/ovs-vsctl.c	/^static bool oneline;$/;"	v	file:
oneline	vtep/vtep-ctl.c	/^static bool oneline;$/;"	v	file:
onf_action_copy_field	lib/ofp-actions.c	/^struct onf_action_copy_field {$/;"	s	file:
only_ovs_info	utilities/bugtool/ovs-bugtool	/^            only_ovs_info = True$/;"	v
op	datapath/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
op	datapath/linux/actions.c	/^  u8 op, htype, hlen, hops;$/;"	m	struct:dhcphdr	file:
op	lib/dhcp.h	/^    uint8_t op;                 \/* DHCP_BOOTREQUEST or DHCP_BOOTREPLY. *\/$/;"	m	struct:dhcp_header
op	ofproto/bond.c	/^    enum bond_op op;$/;"	m	struct:bond_pr_rule_op	typeref:enum:bond_pr_rule_op::bond_op	file:
op	ofproto/in-band.c	/^    enum in_band_op op;$/;"	m	struct:in_band_rule	typeref:enum:in_band_rule::in_band_op	file:
op_backoff	ofproto/connmgr.c	/^    long long int op_backoff;        \/* Earliest time to report ops again. *\/$/;"	m	struct:ofconn	file:
op_index	lib/ovsdb-idl.c	/^    int op_index;               \/* Index into transaction's operation array. *\/$/;"	m	struct:ovsdb_idl_txn_insert	file:
open	lib/dpif-provider.h	/^    int (*open)(const struct dpif_class *dpif_class,$/;"	m	struct:dpif_class
open	lib/stream-provider.h	/^    int (*open)(const char *name, char *suffix, struct stream **streamp,$/;"	m	struct:stream_class
open	lib/vconn-provider.h	/^    int (*open)(const char *name, uint32_t allowed_versions,$/;"	m	struct:vconn_class
open	python/ovs/jsonrpc.py	/^    def open(name):$/;"	m	class:Session
open	python/ovs/stream.py	/^    def open(name):$/;"	m	class:PassiveStream
open	python/ovs/stream.py	/^    def open(name, dscp=DSCP_DEFAULT):$/;"	m	class:Stream
open_block	python/ovs/stream.py	/^    def open_block((error, stream)):$/;"	m	class:Stream
open_db	ovsdb/ovsdb-server.c	/^open_db(struct server_config *config, const char *filename)$/;"	f	file:
open_dpif	lib/dpif-netlink.c	/^open_dpif(const struct dpif_netlink_dp *dp, struct dpif **dpifp)$/;"	f	file:
open_dpif_backer	ofproto/ofproto-dpif.c	/^open_dpif_backer(const char *type, struct dpif_backer **backerp)$/;"	f	file:
open_file	build-aux/extract-ofp-actions	/^def open_file(fn):$/;"	f
open_file	build-aux/extract-ofp-errors	/^def open_file(fn):$/;"	f
open_jsonrpc	ovsdb/ovsdb-client.c	/^open_jsonrpc(const char *server)$/;"	f	file:
open_pif_ifcfg	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def open_pif_ifcfg(pif):$/;"	f
open_target	utilities/ovs-ofctl.c	/^enum open_target { MGMT, SNOOP };$/;"	g	file:
open_txn	lib/ovsdb-idl.h	/^    struct ovsdb_idl_txn *open_txn;$/;"	m	struct:ovsdb_idl_loop	typeref:struct:ovsdb_idl_loop::ovsdb_idl_txn
open_unreliably	python/ovs/jsonrpc.py	/^    def open_unreliably(jsonrpc):$/;"	m	class:Session
open_vconn	utilities/ovs-ofctl.c	/^open_vconn(const char *name, struct vconn **vconnp)$/;"	f	file:
open_vconn__	utilities/ovs-ofctl.c	/^open_vconn__(const char *name, enum open_target target,$/;"	f	file:
open_vconn_for_flow_mod	utilities/ovs-ofctl.c	/^open_vconn_for_flow_mod(const char *remote, struct vconn **vconnp,$/;"	f	file:
open_vconn_socket	utilities/ovs-ofctl.c	/^open_vconn_socket(const char *name, struct vconn **vconnp)$/;"	f	file:
openflow_from_hex	utilities/ovs-ofctl.c	/^openflow_from_hex(const char *hex, struct ofpbuf **msgp)$/;"	f	file:
openflowinclude_HEADERS	Makefile	/^openflowinclude_HEADERS = \\$/;"	m
openflowinclude_HEADERS	include/openflow/automake.mk	/^openflowinclude_HEADERS = \\$/;"	m
openflowincludedir	Makefile	/^openflowincludedir = $(includedir)\/openflow$/;"	m
openflowincludedir	include/openflow/automake.mk	/^openflowincludedir = $(includedir)\/openflow$/;"	m
openlog	include/windows/syslog.h	/^openlog(const char *ident, int option, int facility)$/;"	f
openlog	lib/syslog-provider.h	/^    void (*openlog)(struct syslogger *this, int facility);$/;"	m	struct:syslog_class
openvswitch_extras	datapath/Makefile	/^openvswitch_extras = \\$/;"	m
openvswitch_extras	datapath/Modules.mk	/^openvswitch_extras = \\$/;"	m
openvswitch_handle_frame_hook_t	datapath/linux/compat/include/linux/netdevice.h	/^typedef struct sk_buff *(openvswitch_handle_frame_hook_t)(struct sk_buff *skb);$/;"	t	typeref:struct:openvswitch_handle_frame_hook_t
openvswitch_headers	datapath/Makefile	/^openvswitch_headers = compat.h datapath.h flow.h flow_netlink.h \\$/;"	m
openvswitch_headers	datapath/Modules.mk	/^openvswitch_headers = \\$/;"	m
openvswitch_sources	datapath/Makefile	/^openvswitch_sources = actions.c datapath.c dp_notify.c flow.c \\$/;"	m
openvswitch_sources	datapath/Modules.mk	/^openvswitch_sources = \\$/;"	m
openvswitchinclude_HEADERS	Makefile	/^openvswitchinclude_HEADERS = \\$/;"	m
openvswitchinclude_HEADERS	include/openvswitch/automake.mk	/^openvswitchinclude_HEADERS = \\$/;"	m
openvswitchincludedir	Makefile	/^openvswitchincludedir = $(includedir)\/openvswitch$/;"	m
openvswitchincludedir	include/openvswitch/automake.mk	/^openvswitchincludedir = $(includedir)\/openvswitch$/;"	m
oper	lib/ovs-lldp.h	/^    enum bridge_aa_vlan_oper oper;$/;"	m	struct:bridge_aa_vlan	typeref:enum:bridge_aa_vlan::bridge_aa_vlan_oper
oper_p2p_mac_state	lib/rstp-common.h	/^enum oper_p2p_mac_state {$/;"	g
operate	lib/dpif-provider.h	/^    void (*operate)(struct dpif *dpif, struct dpif_op **ops, size_t n_ops);$/;"	m	struct:dpif_class
operation	datapath-windows/ovsext/TunnelFilter.c	/^    OVS_TUNFLT_OPERATION    operation;$/;"	m	struct:_OVS_TUNFLT_REQUEST	file:
operation	tests/test-ovn.c	/^static enum { OP_CONVERT, OP_SIMPLIFY, OP_NORMALIZE, OP_FLOW } operation$/;"	v	typeref:enum:__anon227	file:
operator	utilities/ovs-dpctl-top	/^import operator$/;"	i
opm	ofproto/bundles.h	/^        struct ofproto_port_mod opm;$/;"	m	union:ofp_bundle_entry::__anon182	typeref:struct:ofp_bundle_entry::__anon182::ofproto_port_mod
ops	datapath/linux/compat/include/net/genetlink.h	/^	const struct genl_ops * ops;            \/* private *\/$/;"	m	struct:rpl_genl_family	typeref:struct:rpl_genl_family::genl_ops
ops	datapath/linux/compat/include/net/net_namespace.h	/^	struct pernet_operations ops;$/;"	m	struct:rpl_pernet_operations	typeref:struct:rpl_pernet_operations::pernet_operations
ops	datapath/vport.h	/^	const struct vport_ops *ops;$/;"	m	struct:vport	typeref:struct:vport::vport_ops
ops	lib/netdev-linux.c	/^    const struct tc_ops *ops;$/;"	m	struct:tc	typeref:struct:tc::tc_ops	file:
opsCount	datapath-windows/ovsext/Datapath.c	/^    UINT16 opsCount;$/;"	m	struct:_NETLINK_FAMILY	file:
optPad1	datapath-windows/ovsext/NetProto.h	/^    UINT16       optPad1;$/;"	m	struct:IPv6ExtHdr
optPad2	datapath-windows/ovsext/NetProto.h	/^    UINT32       optPad2;$/;"	m	struct:IPv6ExtHdr
opt_class	datapath/linux/compat/include/net/geneve.h	/^	__be16	opt_class;$/;"	m	struct:geneve_opt
opt_class	lib/geneve.h	/^    ovs_be16  opt_class;$/;"	m	struct:geneve_opt
opt_data	datapath/linux/compat/include/net/geneve.h	/^	u8	opt_data[];$/;"	m	struct:geneve_opt
opt_len	datapath/linux/compat/include/net/geneve.h	/^	u8 opt_len:6;$/;"	m	struct:genevehdr
opt_len	lib/geneve.h	/^    uint8_t opt_len:6;$/;"	m	struct:genevehdr
optarg	lib/getopt_long.c	/^char    *optarg;		\/* argument associated with option *\/$/;"	v
opterr	lib/getopt_long.c	/^int	opterr = 1;		\/* if error message should be printed *\/$/;"	v
optind	lib/getopt_long.c	/^int	optind = 1;		\/* index into parent argv vector *\/$/;"	v
option	include/windows/getopt.h	/^struct option {$/;"	s
option_class	include/openflow/nicira-ext.h	/^    ovs_be16 option_class; \/* Geneve option class. *\/$/;"	m	struct:nx_geneve_map
option_class	lib/ofp-util.h	/^    uint16_t option_class;$/;"	m	struct:ofputil_geneve_map
option_len	include/openflow/nicira-ext.h	/^    uint8_t  option_len;   \/* Geneve option length (multiple of 4). *\/$/;"	m	struct:nx_geneve_map
option_len	lib/ofp-util.h	/^    uint8_t  option_len;$/;"	m	struct:ofputil_geneve_map
option_require_arg	utilities/ovs-appctl-bashcomp.bash	/^option_require_arg() {$/;"	f
option_type	include/openflow/nicira-ext.h	/^    uint8_t  option_type;  \/* Geneve option type. *\/$/;"	m	struct:nx_geneve_map
option_type	lib/ofp-util.h	/^    uint8_t  option_type;$/;"	m	struct:ofputil_geneve_map
optional	datapath-windows/ovsext/Netlink/Netlink.h	/^    BOOLEAN optional;$/;"	m	struct:_NL_POLICY
optional	lib/netlink.h	/^    bool optional;$/;"	m	struct:nl_policy
optional_argument	include/windows/getopt.h	43;"	d
options	datapath/flow.h	/^	const void *options;$/;"	m	struct:ovs_tunnel_info
options	datapath/linux/compat/include/net/geneve.h	/^	struct geneve_opt options[];$/;"	m	struct:genevehdr	typeref:struct:genevehdr::geneve_opt
options	datapath/vport.h	/^	struct nlattr *options;$/;"	m	struct:vport_parms	typeref:struct:vport_parms::nlattr
options	lib/db-ctl-base.h	/^    const char *options;$/;"	m	struct:ctl_command_syntax
options	lib/db-ctl-base.h	/^    struct shash options;$/;"	m	struct:ctl_command	typeref:struct:ctl_command::shash
options	lib/db-ctl-base.h	/^    struct shash options;$/;"	m	struct:ctl_context	typeref:struct:ctl_context::shash
options	lib/dpif-netlink.h	/^    const struct nlattr *options;          \/* OVS_VPORT_ATTR_OPTIONS. *\/$/;"	m	struct:dpif_netlink_vport	typeref:struct:dpif_netlink_vport::nlattr
options	lib/geneve.h	/^    struct geneve_opt options[];$/;"	m	struct:genevehdr	typeref:struct:genevehdr::geneve_opt
options	lib/packets.h	/^    struct ovs_nd_opt options[0];$/;"	m	struct:ovs_nd_msg	typeref:struct:ovs_nd_msg::ovs_nd_opt
options	lib/vswitch-idl.h	/^	struct smap options;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::smap
options	ofproto/ofproto-dpif-ipfix.c	/^    struct ofproto_ipfix_bridge_exporter_options *options;$/;"	m	struct:dpif_ipfix_bridge_exporter	typeref:struct:dpif_ipfix_bridge_exporter::ofproto_ipfix_bridge_exporter_options	file:
options	ofproto/ofproto-dpif-ipfix.c	/^    struct ofproto_ipfix_flow_exporter_options *options;$/;"	m	struct:dpif_ipfix_flow_exporter	typeref:struct:dpif_ipfix_flow_exporter::ofproto_ipfix_flow_exporter_options	file:
options	ofproto/ofproto-dpif-sflow.c	/^    struct ofproto_sflow_options *options;$/;"	m	struct:dpif_sflow	typeref:struct:dpif_sflow::ofproto_sflow_options	file:
options	ovn/lib/ovn-nb-idl.h	/^	struct smap options;$/;"	m	struct:nbrec_logical_port	typeref:struct:nbrec_logical_port::smap
options	ovn/lib/ovn-sb-idl.h	/^	struct smap options;$/;"	m	struct:sbrec_encap	typeref:struct:sbrec_encap::smap
options	ovn/lib/ovn-sb-idl.h	/^	struct smap options;$/;"	m	struct:sbrec_port_binding	typeref:struct:sbrec_port_binding::smap
options	utilities/ovs-dev.py	/^options = None$/;"	v
options_len	datapath/flow.h	/^	u8 options_len;$/;"	m	struct:ovs_tunnel_info
options_len	lib/dpif-netlink.h	/^    size_t options_len;$/;"	m	struct:dpif_netlink_vport
optopt	lib/getopt_long.c	/^int	optopt = '?';		\/* character checked for validity *\/$/;"	v
optparse	utilities/ovs-dev.py	/^import optparse$/;"	i
optparse	utilities/ovs-parse-backtrace	/^import optparse$/;"	i
optreset	lib/getopt_long.c	/^int	optreset;		\/* reset getopt *\/$/;"	v
opts	lib/tun-metadata.h	/^    } opts;$/;"	m	struct:tun_metadata	typeref:union:tun_metadata::__anon161
opup	lib/cfm.c	/^    bool opup;             \/* Operational State. *\/$/;"	m	struct:cfm	file:
opup	lib/cfm.c	/^    bool opup;           \/* Operational State. *\/$/;"	m	struct:remote_mp	file:
opup	lib/cfm.h	/^    bool opup;                  \/* Operational State. *\/$/;"	m	struct:cfm_settings
order	utilities/ovs-ofctl.c	/^    enum sort_order order;$/;"	m	struct:sort_criterion	typeref:enum:sort_criterion::sort_order	file:
ordinal_schema	tests/testsuite	/^ordinal_schema () {$/;"	f
origDataLength	datapath-windows/ovsext/BufferMgmt.h	/^            UINT32 origDataLength;$/;"	m	union:_OVS_BUFFER_CONTEXT::__anon2::__anon3
orig_len	lib/pcap-file.c	/^    uint32_t orig_len;       \/* actual length of packet *\/$/;"	m	struct:pcaprec_hdr	file:
orig_skb_priority	ofproto/ofproto-dpif-xlate.c	/^    uint32_t orig_skb_priority; \/* Priority when packet arrived. *\/$/;"	m	struct:xlate_ctx	file:
orig_tunnel_ip_dst	ofproto/ofproto-dpif-xlate.c	/^    ovs_be32 orig_tunnel_ip_dst;$/;"	m	struct:xlate_ctx	file:
os	build-aux/check-structs	/^import os.path$/;"	i
os	build-aux/extract-ofp-actions	/^import os.path$/;"	i
os	build-aux/extract-ofp-errors	/^import os.path$/;"	i
os	build-aux/extract-ofp-fields	/^import os.path$/;"	i
os	build-aux/extract-ofp-msgs	/^import os.path$/;"	i
os	build-aux/xml2nroff	/^import os$/;"	i
os	debian/ovs-monitor-ipsec	/^import os$/;"	i
os	ovsdb/ovsdb-doc	/^import os$/;"	i
os	ovsdb/ovsdb-dot	/^import os$/;"	i
os	ovsdb/ovsdb-idlc	/^import os$/;"	i
os	python/ovs/daemon.py	/^import os$/;"	i
os	python/ovs/dirs.py	/^import os$/;"	i
os	python/ovs/fatal_signal.py	/^import os$/;"	i
os	python/ovs/jsonrpc.py	/^import os$/;"	i
os	python/ovs/process.py	/^import os$/;"	i
os	python/ovs/reconnect.py	/^import os$/;"	i
os	python/ovs/socket_util.py	/^import os$/;"	i
os	python/ovs/socket_util.py	/^import os.path$/;"	i
os	python/ovs/stream.py	/^import os$/;"	i
os	python/ovs/unixctl/client.py	/^import os$/;"	i
os	python/ovs/unixctl/server.py	/^import os$/;"	i
os	python/ovs/util.py	/^import os$/;"	i
os	python/ovs/util.py	/^import os.path$/;"	i
os	python/ovs/vlog.py	/^import os$/;"	i
os	python/ovstest/util.py	/^import os$/;"	i
os	tests/test-jsonrpc.py	/^import os$/;"	i
os	tests/test-ovsdb.py	/^import os$/;"	i
os	tests/test-unix-socket.py	/^import os$/;"	i
os	utilities/bugtool/ovs-bugtool	/^import os$/;"	i
os	utilities/ovs-check-dead-ifs	/^import os$/;"	i
os	utilities/ovs-dev.py	/^import os$/;"	i
os	utilities/ovs-dpctl-top	/^import os$/;"	i
os	utilities/ovs-parse-backtrace	/^import os$/;"	i
os	utilities/ovs-test	/^import os$/;"	i
os	utilities/ovs-vlan-test	/^import os$/;"	i
os	utilities/qemu-wrap.py	/^import sys, os, subprocess$/;"	i
os	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^import os$/;"	i
os	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^import os$/;"	i
os	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^import os$/;"	i
os	xenserver/opt_xensource_libexec_interface-reconfigure	/^import os, sys, getopt$/;"	i
os	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^import os$/;"	i
os	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import os$/;"	i
osm	include/openflow/openflow-1.0.h	/^    struct ofp10_stats_msg osm; \/* Type OFPST_VENDOR. *\/$/;"	m	struct:ofp10_vendor_stats_msg	typeref:struct:ofp10_vendor_stats_msg::ofp10_stats_msg
osm	include/openflow/openflow-1.1.h	/^    struct ofp11_stats_msg osm; \/* Type OFPST_VENDOR. *\/$/;"	m	struct:ofp11_vendor_stats_msg	typeref:struct:ofp11_vendor_stats_msg::ofp11_stats_msg
other_bucket_protected	lib/cmap.c	/^other_bucket_protected(struct cmap_impl *impl, struct cmap_bucket *b, int slot)$/;"	f	file:
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_controller	typeref:struct:ovsrec_controller::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_ipfix	typeref:struct:ovsrec_ipfix::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_manager	typeref:struct:ovsrec_manager::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_open_vswitch	typeref:struct:ovsrec_open_vswitch::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_port	typeref:struct:ovsrec_port::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_qos	typeref:struct:ovsrec_qos::smap
other_config	lib/vswitch-idl.h	/^	struct smap other_config;$/;"	m	struct:ovsrec_queue	typeref:struct:ovsrec_queue::smap
other_config	vtep/vtep-idl.h	/^	struct smap other_config;$/;"	m	struct:vteprec_manager	typeref:struct:vteprec_manager::smap
other_hash	lib/cmap.c	/^other_hash(uint32_t hash)$/;"	f	file:
other_tc_load	lib/netdev-linux.c	/^other_tc_load(struct netdev *netdev_, struct ofpbuf *nlmsg OVS_UNUSED)$/;"	f	file:
out	ofproto/ofproto-dpif-mirror.c	/^    struct mbundle *out;        \/* Output port or NULL. *\/$/;"	m	struct:mirror	typeref:struct:mirror::mbundle	file:
outPkts	datapath-windows/ovsext/Stt.h	/^    UINT64 outPkts;$/;"	m	struct:_OVS_STT_VPORT
outPkts	datapath-windows/ovsext/Vxlan.h	/^    UINT64 outPkts;$/;"	m	struct:_OVS_VXLAN_VPORT
out_bundle	ofproto/ofproto.h	/^    void *out_bundle;           \/* A registered ofbundle handle or NULL. *\/$/;"	m	struct:ofproto_mirror_settings
out_group	include/openflow/openflow-1.1.h	/^    ovs_be32 out_group;          \/* For OFPFC_DELETE* commands, require$/;"	m	struct:ofp11_flow_mod
out_group	include/openflow/openflow-1.1.h	/^    ovs_be32 out_group;       \/* Require matching entries to include this$/;"	m	struct:ofp11_flow_stats_request
out_group	include/openflow/openflow-1.4.h	/^    ovs_be32 out_group;         \/* Required output port, if not OFPG_ANY. *\/$/;"	m	struct:ofp14_flow_monitor_request
out_group	lib/ofp-util.h	/^    uint32_t out_group;$/;"	m	struct:ofputil_flow_mod
out_group	lib/ofp-util.h	/^    uint32_t out_group;$/;"	m	struct:ofputil_flow_stats_request
out_group	ofproto/ofproto.c	/^    uint32_t out_group;$/;"	m	struct:rule_criteria	file:
out_key	lib/netdev.h	/^    ovs_be64 out_key;$/;"	m	struct:netdev_tunnel_config
out_key_flow	lib/netdev.h	/^    bool out_key_flow;$/;"	m	struct:netdev_tunnel_config
out_key_present	lib/netdev.h	/^    bool out_key_present;$/;"	m	struct:netdev_tunnel_config
out_of_memory	lib/util.c	/^out_of_memory(void)$/;"	f
out_ofport	ofproto/bond.c	/^    ofp_port_t out_ofport;$/;"	m	struct:bond_pr_rule_op	file:
out_port	datapath/linux/compat/include/linux/openvswitch.h	/^	uint32_t out_port;$/;"	m	struct:ovs_action_push_tnl
out_port	include/odp-netlink.h	/^	uint32_t out_port;$/;"	m	struct:ovs_action_push_tnl
out_port	include/openflow/nicira-ext.h	/^    ovs_be16 out_port;            \/* For OFPFC_DELETE* commands, require$/;"	m	struct:nx_flow_mod
out_port	include/openflow/nicira-ext.h	/^    ovs_be16 out_port;          \/* Required output port, if not OFPP_NONE. *\/$/;"	m	struct:nx_flow_monitor_request
out_port	include/openflow/nicira-ext.h	/^    ovs_be16 out_port;        \/* Require matching entries to include this$/;"	m	struct:nx_aggregate_stats_request
out_port	include/openflow/nicira-ext.h	/^    ovs_be16 out_port;        \/* Require matching entries to include this$/;"	m	struct:nx_flow_stats_request
out_port	include/openflow/openflow-1.0.h	/^    ovs_be16 out_port;            \/* For OFPFC_DELETE* commands, require$/;"	m	struct:ofp10_flow_mod
out_port	include/openflow/openflow-1.0.h	/^    ovs_be16 out_port;        \/* Require matching entries to include this$/;"	m	struct:ofp10_flow_stats_request
out_port	include/openflow/openflow-1.1.h	/^    ovs_be32 out_port;           \/* For OFPFC_DELETE* commands, require$/;"	m	struct:ofp11_flow_mod
out_port	include/openflow/openflow-1.1.h	/^    ovs_be32 out_port;        \/* Require matching entries to include this$/;"	m	struct:ofp11_flow_stats_request
out_port	include/openflow/openflow-1.4.h	/^    ovs_be32 out_port;          \/* Required output port, if not OFPP_ANY. *\/$/;"	m	struct:ofp14_flow_monitor_request
out_port	lib/ofp-util.h	/^    ofp_port_t out_port;$/;"	m	struct:ofputil_flow_mod
out_port	lib/ofp-util.h	/^    ofp_port_t out_port;$/;"	m	struct:ofputil_flow_monitor_request
out_port	lib/ofp-util.h	/^    ofp_port_t out_port;$/;"	m	struct:ofputil_flow_stats_request
out_port	ofproto/connmgr.h	/^    ofp_port_t out_port;$/;"	m	struct:ofmonitor
out_port	ofproto/ofproto-dpif-sflow.h	/^    odp_port_t out_port;     \/* ODP output port. *\/$/;"	m	struct:dpif_sflow_actions
out_port	ofproto/ofproto.c	/^    ofp_port_t out_port;$/;"	m	struct:rule_criteria	file:
out_stack	lib/sflow.h	/^    SFLLabelStack out_stack;$/;"	m	struct:_SFLExtended_mpls
out_tun_key	lib/dpif.h	/^    struct nlattr *out_tun_key;    \/* Output tunnel key. *\/$/;"	m	struct:dpif_upcall	typeref:struct:dpif_upcall::nlattr
out_tun_key	ofproto/ofproto-dpif-upcall.c	/^    const struct nlattr *out_tun_key;  \/* Datapath output tunnel key. *\/$/;"	m	struct:upcall	typeref:struct:upcall::nlattr	file:
out_vlan	ofproto/ofproto-dpif-mirror.c	/^    int out_vlan;               \/* Output VLAN or -1. *\/$/;"	m	struct:mirror	file:
out_vlan	ofproto/ofproto.h	/^    uint16_t out_vlan;          \/* Output VLAN, only if out_bundle is NULL. *\/$/;"	m	struct:ofproto_mirror_settings
output	build-aux/extract-ofp-fields	/^        output = make_meta_flow(fields)$/;"	v
output	build-aux/extract-ofp-fields	/^        output = make_nx_match(fields)$/;"	v
output	lib/db-ctl-base.h	/^    struct ds output;$/;"	m	struct:ctl_command	typeref:struct:ctl_command::ds
output	lib/db-ctl-base.h	/^    struct ds output;$/;"	m	struct:ctl_context	typeref:struct:ctl_context::ds
output	lib/dpctl.h	/^    void (*output)(void *aux, bool error, const char *string);$/;"	m	struct:dpctl_params
output	lib/jsonrpc.c	/^    struct ovs_list output;     \/* Contains "struct ofpbuf"s. *\/$/;"	m	struct:jsonrpc	typeref:struct:jsonrpc::ovs_list	file:
output	lib/netflow.h	/^    ovs_be16 output;               \/* Output interface index. *\/$/;"	m	struct:netflow_v5_record
output	lib/odp-util.h	/^        uint32_t output;        \/* SFL_FLOW_SAMPLE_TYPE 'output' value. *\/$/;"	m	struct:user_action_cookie::__anon123
output	lib/sflow.h	/^    u_int32_t output;               \/* SNMP ifIndex of output interface,$/;"	m	struct:_SFLFlow_sample
output	lib/sflow.h	/^    u_int32_t output;               \/* SNMP ifIndex of output interface,$/;"	m	struct:_SFLFlow_sample_expanded
output	tests/flowgen.pl	/^sub output {$/;"	s
output	tests/test-sha1.c	/^    const uint8_t output[20];$/;"	m	struct:test_vector	file:
output	utilities/bugtool/ovs-bugtool	/^def output(x):$/;"	f
outputBuffer	datapath-windows/ovsext/Datapath.h	/^    PVOID outputBuffer;  \/* Output buffer specified by userspace for reading$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
outputBuffer	datapath-windows/ovsext/Vport.c	/^    PVOID outputBuffer;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
outputFormat	lib/sflow.h	/^    u_int32_t outputFormat;         \/* EXPANDED *\/$/;"	m	struct:_SFLFlow_sample_expanded
outputLength	datapath-windows/ovsext/Datapath.h	/^    UINT32 outputLength; \/* Length of output buffer. *\/$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
outputLength	datapath-windows/ovsext/Vport.c	/^    UINT32 outputLength;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
outputPort	tests/test-sflow.c	/^    uint32_t outputPort;$/;"	m	struct:sflow_xdr	file:
outputPortFormat	tests/test-sflow.c	/^    uint32_t outputPortFormat;$/;"	m	struct:sflow_xdr	file:
output_bridge	lib/ovs-router.c	/^    char output_bridge[IFNAMSIZ];$/;"	m	struct:ovs_router_entry	file:
output_count	lib/jsonrpc.c	/^    size_t output_count;        \/* Number of elements in "output". *\/$/;"	m	struct:jsonrpc	file:
output_domain	build-aux/extract-ofp-errors	/^    def output_domain(map, name, description, version):$/;"	f
output_fd	utilities/bugtool/ovs-bugtool	/^            output_fd = int(v)$/;"	v
output_fd	utilities/bugtool/ovs-bugtool	/^    output_fd = -1$/;"	v
output_file	utilities/bugtool/ovs-bugtool	/^            output_file = v$/;"	v
output_file	utilities/bugtool/ovs-bugtool	/^    output_file = None$/;"	v
output_group	tests/ovsdb-monitor-sort.pl	/^sub output_group {$/;"	s
output_iface	ofproto/netflow.c	/^    ofp_port_t output_iface;      \/* Output interface index. *\/$/;"	m	struct:netflow_flow	file:
output_ip	datapath/linux/compat/gso.c	/^static int output_ip(struct sk_buff *skb)$/;"	f	file:
output_ip	datapath/linux/gso.c	/^static int output_ip(struct sk_buff *skb)$/;"	f	file:
output_normal	ofproto/ofproto-dpif-xlate.c	/^output_normal(struct xlate_ctx *ctx, const struct xbundle *out_xbundle,$/;"	f	file:
output_odp_port	lib/odp-util.h	/^        odp_port_t output_odp_port; \/* The output odp port. *\/$/;"	m	struct:user_action_cookie::__anon126
output_port	lib/vswitch-idl.h	/^	struct ovsrec_port *output_port;$/;"	m	struct:ovsrec_mirror	typeref:struct:ovsrec_mirror::ovsrec_port
output_ptable	ovn/lib/actions.c	/^    uint8_t output_ptable;      \/* OpenFlow table for 'output' to resubmit. *\/$/;"	m	struct:action_context	file:
output_sorted	utilities/ovs-vsctl.c	/^output_sorted(struct svec *svec, struct ds *output)$/;"	f	file:
output_sorted	vtep/vtep-ctl.c	/^output_sorted(struct svec *svec, struct ds *output)$/;"	f	file:
output_ts	utilities/bugtool/ovs-bugtool	/^def output_ts(x):$/;"	f
output_type	utilities/bugtool/ovs-bugtool	/^                output_type = v$/;"	v
output_type	utilities/bugtool/ovs-bugtool	/^    output_type = 'tar.gz'$/;"	v
output_userspace	datapath/actions.c	/^static int output_userspace(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
output_userspace	datapath/linux/actions.c	/^static int output_userspace(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
output_vlan	lib/vswitch-idl.h	/^	int64_t *output_vlan;$/;"	m	struct:ovsrec_mirror
output_vlan_to_vid	ofproto/ofproto-dpif-xlate.c	/^output_vlan_to_vid(const struct xbundle *out_xbundle, uint16_t vlan)$/;"	f	file:
outstanding_txns	lib/ovsdb-idl.c	/^    struct hmap outstanding_txns;$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::hmap	file:
overflow_policy	lib/vswitch-idl.h	/^	char *overflow_policy;$/;"	m	struct:ovsrec_flow_table
overlapped	lib/netlink-socket.c	/^    OVERLAPPED overlapped;$/;"	m	struct:nl_sock	file:
overwrite_pidfile	lib/daemon-unix.c	/^static bool overwrite_pidfile;$/;"	v	file:
ovn_attach	tests/system-kmod-testsuite	/^ovn_attach() {$/;"	f
ovn_attach	tests/system-userspace-testsuite	/^ovn_attach() {$/;"	f
ovn_attach	tests/testsuite	/^ovn_attach() {$/;"	f
ovn_attach	utilities/ovs-sim	/^ovn_attach() {$/;"	f
ovn_attach	utilities/ovs-sim.in	/^ovn_attach() {$/;"	f
ovn_controller_exit	ovn/controller/ovn-controller.c	/^ovn_controller_exit(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovn_controller_exit	ovn/controller/ovn-controller.c	/^static unixctl_cb_func ovn_controller_exit;$/;"	v	file:
ovn_controller_ovn_controller_DEPENDENCIES	Makefile	/^ovn_controller_ovn_controller_DEPENDENCIES = ovn\/lib\/libovn.la \\$/;"	m
ovn_controller_ovn_controller_LDADD	Makefile	/^ovn_controller_ovn_controller_LDADD = ovn\/lib\/libovn.la lib\/libopenvswitch.la$/;"	m
ovn_controller_ovn_controller_LDADD	ovn/controller/automake.mk	/^ovn_controller_ovn_controller_LDADD = ovn\/lib\/libovn.la lib\/libopenvswitch.la$/;"	m
ovn_controller_ovn_controller_OBJECTS	Makefile	/^ovn_controller_ovn_controller_OBJECTS =  \\$/;"	m
ovn_controller_ovn_controller_SOURCES	Makefile	/^ovn_controller_ovn_controller_SOURCES = \\$/;"	m
ovn_controller_ovn_controller_SOURCES	ovn/controller/automake.mk	/^ovn_controller_ovn_controller_SOURCES = \\$/;"	m
ovn_controller_vtep_exit	ovn/controller-vtep/ovn-controller-vtep.c	/^ovn_controller_vtep_exit(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovn_controller_vtep_exit	ovn/controller-vtep/ovn-controller-vtep.c	/^static unixctl_cb_func ovn_controller_vtep_exit;$/;"	v	file:
ovn_controller_vtep_ovn_controller_vtep_DEPENDENCIES	Makefile	/^ovn_controller_vtep_ovn_controller_vtep_DEPENDENCIES =  \\$/;"	m
ovn_controller_vtep_ovn_controller_vtep_LDADD	Makefile	/^ovn_controller_vtep_ovn_controller_vtep_LDADD = ovn\/lib\/libovn.la lib\/libopenvswitch.la vtep\/libvtep.la$/;"	m
ovn_controller_vtep_ovn_controller_vtep_LDADD	ovn/controller-vtep/automake.mk	/^ovn_controller_vtep_ovn_controller_vtep_LDADD = ovn\/lib\/libovn.la lib\/libopenvswitch.la vtep\/libvtep.la$/;"	m
ovn_controller_vtep_ovn_controller_vtep_OBJECTS	Makefile	/^ovn_controller_vtep_ovn_controller_vtep_OBJECTS =  \\$/;"	m
ovn_controller_vtep_ovn_controller_vtep_SOURCES	Makefile	/^ovn_controller_vtep_ovn_controller_vtep_SOURCES = \\$/;"	m
ovn_controller_vtep_ovn_controller_vtep_SOURCES	ovn/controller-vtep/automake.mk	/^ovn_controller_vtep_ovn_controller_vtep_SOURCES = \\$/;"	m
ovn_datapath	ovn/northd/ovn-northd.c	/^struct ovn_datapath {$/;"	s	file:
ovn_datapath_allocate_key	ovn/northd/ovn-northd.c	/^ovn_datapath_allocate_key(struct hmap *dp_tnlids)$/;"	f	file:
ovn_datapath_create	ovn/northd/ovn-northd.c	/^ovn_datapath_create(struct hmap *datapaths, const struct uuid *key,$/;"	f	file:
ovn_datapath_destroy	ovn/northd/ovn-northd.c	/^ovn_datapath_destroy(struct hmap *datapaths, struct ovn_datapath *od)$/;"	f	file:
ovn_datapath_find	ovn/northd/ovn-northd.c	/^ovn_datapath_find(struct hmap *datapaths, const struct uuid *uuid)$/;"	f	file:
ovn_datapath_from_sbrec	ovn/northd/ovn-northd.c	/^ovn_datapath_from_sbrec(struct hmap *datapaths,$/;"	f	file:
ovn_datapath_type	ovn/northd/ovn-northd.c	/^enum ovn_datapath_type {$/;"	g	file:
ovn_flow	ovn/controller/ofctrl.c	/^struct ovn_flow {$/;"	s	file:
ovn_flow_destroy	ovn/controller/ofctrl.c	/^ovn_flow_destroy(struct ovn_flow *f)$/;"	f	file:
ovn_flow_hash	ovn/controller/ofctrl.c	/^ovn_flow_hash(const struct ovn_flow *f)$/;"	f	file:
ovn_flow_log	ovn/controller/ofctrl.c	/^ovn_flow_log(const struct ovn_flow *f, const char *action)$/;"	f	file:
ovn_flow_lookup	ovn/controller/ofctrl.c	/^ovn_flow_lookup(struct hmap *flow_table, const struct ovn_flow *target)$/;"	f	file:
ovn_flow_table_clear	ovn/controller/ofctrl.c	/^ovn_flow_table_clear(struct hmap *flow_table)$/;"	f	file:
ovn_flow_table_destroy	ovn/controller/ofctrl.c	/^ovn_flow_table_destroy(struct hmap *flow_table)$/;"	f	file:
ovn_flow_to_string	ovn/controller/ofctrl.c	/^ovn_flow_to_string(const struct ovn_flow *f)$/;"	f	file:
ovn_init_db	tests/system-kmod-testsuite	/^ovn_init_db () {$/;"	f
ovn_init_db	tests/system-userspace-testsuite	/^ovn_init_db () {$/;"	f
ovn_init_db	tests/testsuite	/^ovn_init_db () {$/;"	f
ovn_lflow	ovn/northd/ovn-northd.c	/^struct ovn_lflow {$/;"	s	file:
ovn_lflow_add	ovn/northd/ovn-northd.c	/^ovn_lflow_add(struct hmap *lflow_map, struct ovn_datapath *od,$/;"	f	file:
ovn_lflow_destroy	ovn/northd/ovn-northd.c	/^ovn_lflow_destroy(struct hmap *lflows, struct ovn_lflow *lflow)$/;"	f	file:
ovn_lflow_equal	ovn/northd/ovn-northd.c	/^ovn_lflow_equal(const struct ovn_lflow *a, const struct ovn_lflow *b)$/;"	f	file:
ovn_lflow_find	ovn/northd/ovn-northd.c	/^ovn_lflow_find(struct hmap *lflows, struct ovn_datapath *od,$/;"	f	file:
ovn_lflow_hash	ovn/northd/ovn-northd.c	/^ovn_lflow_hash(const struct ovn_lflow *lflow)$/;"	f	file:
ovn_lflow_init	ovn/northd/ovn-northd.c	/^ovn_lflow_init(struct ovn_lflow *lflow, struct ovn_datapath *od,$/;"	f	file:
ovn_lib_libovn_la_LDFLAGS	Makefile	/^ovn_lib_libovn_la_LDFLAGS = \\$/;"	m
ovn_lib_libovn_la_LDFLAGS	ovn/lib/automake.mk	/^ovn_lib_libovn_la_LDFLAGS = \\$/;"	m
ovn_lib_libovn_la_LIBADD	Makefile	/^ovn_lib_libovn_la_LIBADD =$/;"	m
ovn_lib_libovn_la_LINK	Makefile	/^ovn_lib_libovn_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
ovn_lib_libovn_la_OBJECTS	Makefile	/^ovn_lib_libovn_la_OBJECTS = $(am_ovn_lib_libovn_la_OBJECTS) \\$/;"	m
ovn_lib_libovn_la_SOURCES	Makefile	/^ovn_lib_libovn_la_SOURCES = \\$/;"	m
ovn_lib_libovn_la_SOURCES	ovn/lib/automake.mk	/^ovn_lib_libovn_la_SOURCES = \\$/;"	m
ovn_multicast	ovn/northd/ovn-northd.c	/^struct ovn_multicast {$/;"	s	file:
ovn_multicast_add	ovn/northd/ovn-northd.c	/^ovn_multicast_add(struct hmap *mcgroups, const struct multicast_group *group,$/;"	f	file:
ovn_multicast_destroy	ovn/northd/ovn-northd.c	/^ovn_multicast_destroy(struct hmap *mcgroups, struct ovn_multicast *mc)$/;"	f	file:
ovn_multicast_find	ovn/northd/ovn-northd.c	/^ovn_multicast_find(struct hmap *mcgroups, struct ovn_datapath *datapath,$/;"	f	file:
ovn_multicast_hash	ovn/northd/ovn-northd.c	/^ovn_multicast_hash(const struct ovn_datapath *datapath,$/;"	f	file:
ovn_multicast_update_sbrec	ovn/northd/ovn-northd.c	/^ovn_multicast_update_sbrec(const struct ovn_multicast *mc,$/;"	f	file:
ovn_northd	ovn/northd/ovn-northd.c	/^VLOG_DEFINE_THIS_MODULE(ovn_northd);$/;"	v
ovn_northd_exit	ovn/northd/ovn-northd.c	/^ovn_northd_exit(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovn_northd_exit	ovn/northd/ovn-northd.c	/^static unixctl_cb_func ovn_northd_exit;$/;"	v	file:
ovn_northd_ovn_northd_DEPENDENCIES	Makefile	/^ovn_northd_ovn_northd_DEPENDENCIES = ovn\/lib\/libovn.la \\$/;"	m
ovn_northd_ovn_northd_LDADD	Makefile	/^ovn_northd_ovn_northd_LDADD = \\$/;"	m
ovn_northd_ovn_northd_LDADD	ovn/northd/automake.mk	/^ovn_northd_ovn_northd_LDADD = \\$/;"	m
ovn_northd_ovn_northd_OBJECTS	Makefile	/^ovn_northd_ovn_northd_OBJECTS = $(am_ovn_northd_ovn_northd_OBJECTS)$/;"	m
ovn_northd_ovn_northd_SOURCES	Makefile	/^ovn_northd_ovn_northd_SOURCES = ovn\/northd\/ovn-northd.c$/;"	m
ovn_northd_ovn_northd_SOURCES	ovn/northd/automake.mk	/^ovn_northd_ovn_northd_SOURCES = ovn\/northd\/ovn-northd.c$/;"	m
ovn_pipeline	ovn/northd/ovn-northd.c	/^enum ovn_pipeline {$/;"	g	file:
ovn_populate_arp	tests/system-kmod-testsuite	/^ovn_populate_arp() {$/;"	f
ovn_populate_arp	tests/system-userspace-testsuite	/^ovn_populate_arp() {$/;"	f
ovn_populate_arp	tests/testsuite	/^ovn_populate_arp() {$/;"	f
ovn_port	ovn/northd/ovn-northd.c	/^struct ovn_port {$/;"	s	file:
ovn_port_allocate_key	ovn/northd/ovn-northd.c	/^ovn_port_allocate_key(struct ovn_datapath *od)$/;"	f	file:
ovn_port_create	ovn/northd/ovn-northd.c	/^ovn_port_create(struct hmap *ports, const char *key,$/;"	f	file:
ovn_port_destroy	ovn/northd/ovn-northd.c	/^ovn_port_destroy(struct hmap *ports, struct ovn_port *port)$/;"	f	file:
ovn_port_find	ovn/northd/ovn-northd.c	/^ovn_port_find(struct hmap *ports, const char *name)$/;"	f	file:
ovn_port_update_sbrec	ovn/northd/ovn-northd.c	/^ovn_port_update_sbrec(const struct ovn_port *op)$/;"	f	file:
ovn_stage	ovn/northd/ovn-northd.c	/^enum ovn_stage {$/;"	g	file:
ovn_stage_build	ovn/northd/ovn-northd.c	/^ovn_stage_build(enum ovn_datapath_type dp_type, enum ovn_pipeline pipeline,$/;"	f	file:
ovn_stage_get_pipeline	ovn/northd/ovn-northd.c	/^ovn_stage_get_pipeline(enum ovn_stage stage)$/;"	f	file:
ovn_stage_get_table	ovn/northd/ovn-northd.c	/^ovn_stage_get_table(enum ovn_stage stage)$/;"	f	file:
ovn_stage_to_str	ovn/northd/ovn-northd.c	/^ovn_stage_to_str(enum ovn_stage stage)$/;"	f	file:
ovn_start	tests/system-kmod-testsuite	/^ovn_start () {$/;"	f
ovn_start	tests/system-userspace-testsuite	/^ovn_start () {$/;"	f
ovn_start	tests/testsuite	/^ovn_start () {$/;"	f
ovn_start	utilities/ovs-sim	/^ovn_start() {$/;"	f
ovn_start	utilities/ovs-sim.in	/^ovn_start() {$/;"	f
ovn_utilities_ovn_nbctl_DEPENDENCIES	Makefile	/^ovn_utilities_ovn_nbctl_DEPENDENCIES = ovn\/lib\/libovn.la \\$/;"	m
ovn_utilities_ovn_nbctl_LDADD	Makefile	/^ovn_utilities_ovn_nbctl_LDADD = ovn\/lib\/libovn.la ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovn_utilities_ovn_nbctl_LDADD	ovn/utilities/automake.mk	/^ovn_utilities_ovn_nbctl_LDADD = ovn\/lib\/libovn.la ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovn_utilities_ovn_nbctl_OBJECTS	Makefile	/^ovn_utilities_ovn_nbctl_OBJECTS =  \\$/;"	m
ovn_utilities_ovn_nbctl_SOURCES	Makefile	/^ovn_utilities_ovn_nbctl_SOURCES = ovn\/utilities\/ovn-nbctl.c$/;"	m
ovn_utilities_ovn_nbctl_SOURCES	ovn/utilities/automake.mk	/^ovn_utilities_ovn_nbctl_SOURCES = ovn\/utilities\/ovn-nbctl.c$/;"	m
ovn_utilities_ovn_sbctl_DEPENDENCIES	Makefile	/^ovn_utilities_ovn_sbctl_DEPENDENCIES = ovn\/lib\/libovn.la \\$/;"	m
ovn_utilities_ovn_sbctl_LDADD	Makefile	/^ovn_utilities_ovn_sbctl_LDADD = ovn\/lib\/libovn.la ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovn_utilities_ovn_sbctl_LDADD	ovn/utilities/automake.mk	/^ovn_utilities_ovn_sbctl_LDADD = ovn\/lib\/libovn.la ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovn_utilities_ovn_sbctl_OBJECTS	Makefile	/^ovn_utilities_ovn_sbctl_OBJECTS =  \\$/;"	m
ovn_utilities_ovn_sbctl_SOURCES	Makefile	/^ovn_utilities_ovn_sbctl_SOURCES = ovn\/utilities\/ovn-sbctl.c$/;"	m
ovn_utilities_ovn_sbctl_SOURCES	ovn/utilities/automake.mk	/^ovn_utilities_ovn_sbctl_SOURCES = ovn\/utilities\/ovn-sbctl.c$/;"	m
ovnnb_db	ovn/northd/ovn-northd.c	/^static const char *ovnnb_db;$/;"	v	file:
ovnnb_db_changed	ovn/northd/ovn-northd.c	/^ovnnb_db_changed(struct northd_context *ctx)$/;"	f	file:
ovnnb_idl	ovn/northd/ovn-northd.c	/^    struct ovsdb_idl *ovnnb_idl;$/;"	m	struct:northd_context	typeref:struct:northd_context::ovsdb_idl	file:
ovnnb_txn	ovn/northd/ovn-northd.c	/^    struct ovsdb_idl_txn *ovnnb_txn;$/;"	m	struct:northd_context	typeref:struct:northd_context::ovsdb_idl_txn	file:
ovnsb_db	ovn/northd/ovn-northd.c	/^static const char *ovnsb_db;$/;"	v	file:
ovnsb_db_changed	ovn/northd/ovn-northd.c	/^ovnsb_db_changed(struct northd_context *ctx)$/;"	f	file:
ovnsb_idl	ovn/controller-vtep/ovn-controller-vtep.h	/^    struct ovsdb_idl *ovnsb_idl;$/;"	m	struct:controller_vtep_ctx	typeref:struct:controller_vtep_ctx::ovsdb_idl
ovnsb_idl	ovn/controller/ovn-controller.h	/^    struct ovsdb_idl *ovnsb_idl;$/;"	m	struct:controller_ctx	typeref:struct:controller_ctx::ovsdb_idl
ovnsb_idl	ovn/northd/ovn-northd.c	/^    struct ovsdb_idl *ovnsb_idl;$/;"	m	struct:northd_context	typeref:struct:northd_context::ovsdb_idl	file:
ovnsb_idl_txn	ovn/controller-vtep/ovn-controller-vtep.h	/^    struct ovsdb_idl_txn *ovnsb_idl_txn;$/;"	m	struct:controller_vtep_ctx	typeref:struct:controller_vtep_ctx::ovsdb_idl_txn
ovnsb_idl_txn	ovn/controller/ovn-controller.h	/^    struct ovsdb_idl_txn *ovnsb_idl_txn;$/;"	m	struct:controller_ctx	typeref:struct:controller_ctx::ovsdb_idl_txn
ovnsb_remote	ovn/controller-vtep/ovn-controller-vtep.c	/^static char *ovnsb_remote;$/;"	v	file:
ovnsb_txn	ovn/northd/ovn-northd.c	/^    struct ovsdb_idl_txn *ovnsb_txn;$/;"	m	struct:northd_context	typeref:struct:northd_context::ovsdb_idl_txn	file:
ovs	debian/ovs-monitor-ipsec	/^import ovs.daemon$/;"	i
ovs	debian/ovs-monitor-ipsec	/^import ovs.db.idl$/;"	i
ovs	debian/ovs-monitor-ipsec	/^import ovs.dirs$/;"	i
ovs	debian/ovs-monitor-ipsec	/^import ovs.unixctl$/;"	i
ovs	debian/ovs-monitor-ipsec	/^import ovs.unixctl.server$/;"	i
ovs	debian/ovs-monitor-ipsec	/^import ovs.util$/;"	i
ovs	debian/ovs-monitor-ipsec	/^import ovs.vlog$/;"	i
ovs	ovsdb/ovsdb-doc	/^import ovs.db.schema$/;"	i
ovs	ovsdb/ovsdb-doc	/^import ovs.json$/;"	i
ovs	ovsdb/ovsdb-dot	/^import ovs.db.error$/;"	i
ovs	ovsdb/ovsdb-dot	/^import ovs.db.schema$/;"	i
ovs	ovsdb/ovsdb-idlc	/^import ovs.db.error$/;"	i
ovs	ovsdb/ovsdb-idlc	/^import ovs.db.schema$/;"	i
ovs	ovsdb/ovsdb-idlc	/^import ovs.json$/;"	i
ovs	python/ovs/daemon.py	/^import ovs.dirs$/;"	i
ovs	python/ovs/daemon.py	/^import ovs.fatal_signal$/;"	i
ovs	python/ovs/daemon.py	/^import ovs.process$/;"	i
ovs	python/ovs/daemon.py	/^import ovs.socket_util$/;"	i
ovs	python/ovs/daemon.py	/^import ovs.timeval$/;"	i
ovs	python/ovs/daemon.py	/^import ovs.util$/;"	i
ovs	python/ovs/daemon.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/db/data.py	/^import ovs.db.parser$/;"	i
ovs	python/ovs/db/data.py	/^import ovs.db.types$/;"	i
ovs	python/ovs/db/data.py	/^import ovs.json$/;"	i
ovs	python/ovs/db/data.py	/^import ovs.jsonrpc$/;"	i
ovs	python/ovs/db/data.py	/^import ovs.ovsuuid$/;"	i
ovs	python/ovs/db/data.py	/^import ovs.poller$/;"	i
ovs	python/ovs/db/data.py	/^import ovs.socket_util$/;"	i
ovs	python/ovs/db/error.py	/^import ovs.json$/;"	i
ovs	python/ovs/db/idl.py	/^import ovs.db.parser$/;"	i
ovs	python/ovs/db/idl.py	/^import ovs.db.schema$/;"	i
ovs	python/ovs/db/idl.py	/^import ovs.jsonrpc$/;"	i
ovs	python/ovs/db/idl.py	/^import ovs.ovsuuid$/;"	i
ovs	python/ovs/db/idl.py	/^import ovs.poller$/;"	i
ovs	python/ovs/db/idl.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/db/schema.py	/^import ovs.db.parser$/;"	i
ovs	python/ovs/db/types.py	/^import ovs.db.data$/;"	i
ovs	python/ovs/db/types.py	/^import ovs.db.parser$/;"	i
ovs	python/ovs/db/types.py	/^import ovs.ovsuuid$/;"	i
ovs	python/ovs/fatal_signal.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/jsonrpc.py	/^import ovs.json$/;"	i
ovs	python/ovs/jsonrpc.py	/^import ovs.poller$/;"	i
ovs	python/ovs/jsonrpc.py	/^import ovs.reconnect$/;"	i
ovs	python/ovs/jsonrpc.py	/^import ovs.stream$/;"	i
ovs	python/ovs/jsonrpc.py	/^import ovs.timeval$/;"	i
ovs	python/ovs/jsonrpc.py	/^import ovs.util$/;"	i
ovs	python/ovs/jsonrpc.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/ovsuuid.py	/^import ovs.db.parser$/;"	i
ovs	python/ovs/poller.py	/^import ovs.timeval$/;"	i
ovs	python/ovs/poller.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/reconnect.py	/^import ovs.util$/;"	i
ovs	python/ovs/reconnect.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/socket_util.py	/^import ovs.fatal_signal$/;"	i
ovs	python/ovs/socket_util.py	/^import ovs.poller$/;"	i
ovs	python/ovs/socket_util.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/stream.py	/^import ovs.poller$/;"	i
ovs	python/ovs/stream.py	/^import ovs.socket_util$/;"	i
ovs	python/ovs/stream.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/unixctl/__init__.py	/^import ovs.util$/;"	i
ovs	python/ovs/unixctl/client.py	/^import ovs.jsonrpc$/;"	i
ovs	python/ovs/unixctl/client.py	/^import ovs.stream$/;"	i
ovs	python/ovs/unixctl/client.py	/^import ovs.util$/;"	i
ovs	python/ovs/unixctl/server.py	/^import ovs.dirs$/;"	i
ovs	python/ovs/unixctl/server.py	/^import ovs.jsonrpc$/;"	i
ovs	python/ovs/unixctl/server.py	/^import ovs.stream$/;"	i
ovs	python/ovs/unixctl/server.py	/^import ovs.unixctl$/;"	i
ovs	python/ovs/unixctl/server.py	/^import ovs.util$/;"	i
ovs	python/ovs/unixctl/server.py	/^import ovs.version$/;"	i
ovs	python/ovs/unixctl/server.py	/^import ovs.vlog$/;"	i
ovs	python/ovs/vlog.py	/^import ovs.dirs$/;"	i
ovs	python/ovs/vlog.py	/^import ovs.unixctl$/;"	i
ovs	python/ovs/vlog.py	/^import ovs.util$/;"	i
ovs	tests/appctl.py	/^import ovs.daemon$/;"	i
ovs	tests/appctl.py	/^import ovs.unixctl$/;"	i
ovs	tests/appctl.py	/^import ovs.unixctl.client$/;"	i
ovs	tests/appctl.py	/^import ovs.util$/;"	i
ovs	tests/appctl.py	/^import ovs.vlog$/;"	i
ovs	tests/test-daemon.py	/^import ovs.daemon$/;"	i
ovs	tests/test-daemon.py	/^import ovs.util$/;"	i
ovs	tests/test-json.py	/^import ovs.json$/;"	i
ovs	tests/test-jsonrpc.py	/^import ovs.daemon$/;"	i
ovs	tests/test-jsonrpc.py	/^import ovs.json$/;"	i
ovs	tests/test-jsonrpc.py	/^import ovs.jsonrpc$/;"	i
ovs	tests/test-jsonrpc.py	/^import ovs.poller$/;"	i
ovs	tests/test-jsonrpc.py	/^import ovs.stream$/;"	i
ovs	tests/test-ovsdb.py	/^import ovs.db.idl$/;"	i
ovs	tests/test-ovsdb.py	/^import ovs.db.schema$/;"	i
ovs	tests/test-ovsdb.py	/^import ovs.ovsuuid$/;"	i
ovs	tests/test-ovsdb.py	/^import ovs.poller$/;"	i
ovs	tests/test-ovsdb.py	/^import ovs.util$/;"	i
ovs	tests/test-reconnect.py	/^import ovs.reconnect$/;"	i
ovs	tests/test-unix-socket.py	/^import ovs.socket_util$/;"	i
ovs	tests/test-unixctl.py	/^import ovs.daemon$/;"	i
ovs	tests/test-unixctl.py	/^import ovs.unixctl$/;"	i
ovs	tests/test-unixctl.py	/^import ovs.unixctl.server$/;"	i
ovs	tests/test-vlog.py	/^import ovs.vlog$/;"	i
ovs	utilities/ovs-vsctl.c	/^    const struct ovsrec_open_vswitch *ovs;$/;"	m	struct:vsctl_context	typeref:struct:vsctl_context::ovsrec_open_vswitch	file:
ovs	vtep/ovs-vtep	/^import ovs.daemon$/;"	i
ovs	vtep/ovs-vtep	/^import ovs.dirs$/;"	i
ovs	vtep/ovs-vtep	/^import ovs.unixctl.server$/;"	i
ovs	vtep/ovs-vtep	/^import ovs.util$/;"	i
ovs	vtep/ovs-vtep	/^import ovs.vlog$/;"	i
ovs	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.daemon$/;"	i
ovs	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.db.idl$/;"	i
ovs	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.dirs$/;"	i
ovs	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.unixctl$/;"	i
ovs	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.unixctl.server$/;"	i
ovsActionStats	datapath-windows/ovsext/Actions.c	/^OVS_ACTION_STATS ovsActionStats;$/;"	v
ovsCtrlLockObj	datapath-windows/ovsext/Datapath.c	/^NDIS_SPIN_LOCK ovsCtrlLockObj;$/;"	v
ovsDelete	datapath-windows/ovsext/Vport.c	/^    BOOLEAN ovsDelete;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
ovsEventQueue	datapath-windows/ovsext/Event.c	/^LIST_ENTRY ovsEventQueue;$/;"	v
ovsExtFriendlyName	datapath-windows/ovsext/Driver.c	/^static PWCHAR ovsExtFriendlyName = L"Open vSwitch Extension";$/;"	v	file:
ovsExtFriendlyNameUC	datapath-windows/ovsext/Driver.c	/^NDIS_STRING ovsExtFriendlyNameUC;$/;"	v
ovsExtGuid	datapath-windows/ovsext/Driver.c	/^static const GUID ovsExtGuid = {$/;"	v	file:
ovsExtGuidStr	datapath-windows/ovsext/Driver.c	/^static PWCHAR ovsExtGuidStr = L"{583CC151-73EC-4A6A-8B47-578297AD7623}";$/;"	v	file:
ovsExtGuidUC	datapath-windows/ovsext/Driver.c	/^NDIS_STRING ovsExtGuidUC;$/;"	v
ovsExtServiceName	datapath-windows/ovsext/Driver.c	/^static PWCHAR ovsExtServiceName = L"OVSExt";$/;"	v	file:
ovsFwdHashTable	datapath-windows/ovsext/IpHelper.c	/^static PLIST_ENTRY          ovsFwdHashTable;    \/\/ based on DST IP$/;"	v	file:
ovsHdr	datapath-windows/ovsext/Netlink/Netlink.h	/^    OVS_HDR ovsHdr;$/;"	m	struct:_OVS_MESSAGE
ovsInstance	datapath-windows/ovsext/Datapath.h	/^    POVS_OPEN_INSTANCE ovsInstance; \/* Private data of the device handle. *\/$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
ovsInternalIP	datapath-windows/ovsext/IpHelper.c	/^static UINT32               ovsInternalIP;$/;"	v	file:
ovsInternalIPConfigured	datapath-windows/ovsext/IpHelper.c	/^static BOOLEAN             ovsInternalIPConfigured;$/;"	v	file:
ovsInternalIPRow	datapath-windows/ovsext/IpHelper.c	/^static MIB_IPINTERFACE_ROW ovsInternalIPRow;$/;"	v	file:
ovsInternalNetCfgId	datapath-windows/ovsext/IpHelper.c	/^static GUID                ovsInternalNetCfgId;$/;"	v	file:
ovsInternalPortNo	datapath-windows/ovsext/IpHelper.c	/^static UINT32              ovsInternalPortNo;$/;"	v	file:
ovsInternalRow	datapath-windows/ovsext/IpHelper.c	/^static MIB_IF_ROW2         ovsInternalRow;$/;"	v	file:
ovsIpHelperLock	datapath-windows/ovsext/IpHelper.c	/^static NDIS_SPIN_LOCK       ovsIpHelperLock;$/;"	v	file:
ovsIpHelperRequestList	datapath-windows/ovsext/IpHelper.c	/^static LIST_ENTRY           ovsIpHelperRequestList;$/;"	v	file:
ovsIpHelperThreadContext	datapath-windows/ovsext/IpHelper.c	/^static OVS_IP_HELPER_THREAD_CONTEXT ovsIpHelperThreadContext;$/;"	v	file:
ovsLogFlags	datapath-windows/ovsext/Debug.c	/^UINT32  ovsLogFlags = 0xffffffff;$/;"	v
ovsLogLevel	datapath-windows/ovsext/Debug.c	/^UINT32  ovsLogLevel = OVS_DBG_DEFAULT;$/;"	v
ovsMsg	datapath-windows/ovsext/Datapath.h	/^        POVS_MESSAGE ovsMsg;    \/* OVS message passed during dump start. *\/$/;"	m	struct:_OVS_OPEN_INSTANCE::__anon4
ovsMsg	datapath-windows/ovsext/Datapath.h	/^    POVS_MESSAGE ovsMsg; \/* OVS message that userspace passed down. *\/$/;"	m	struct:_OVS_USER_PARAMS_CONTEXT
ovsName	datapath-windows/ovsext/Vport.h	/^    CHAR                   ovsName[OVS_MAX_PORT_NAME_LENGTH];$/;"	m	struct:_OVS_VPORT_ENTRY
ovsNameLink	datapath-windows/ovsext/Vport.h	/^    LIST_ENTRY             ovsNameLink;$/;"	m	struct:_OVS_VPORT_ENTRY
ovsNeighHashTable	datapath-windows/ovsext/IpHelper.c	/^static PLIST_ENTRY          ovsNeighHashTable;  \/\/ based on DST IP$/;"	v	file:
ovsNumEventQueue	datapath-windows/ovsext/Event.c	/^UINT32 ovsNumEventQueue;$/;"	v
ovsNumFwdEntries	datapath-windows/ovsext/IpHelper.c	/^static UINT32               ovsNumFwdEntries;$/;"	v	file:
ovsNumIpHelperRequests	datapath-windows/ovsext/IpHelper.c	/^static UINT32               ovsNumIpHelperRequests;$/;"	v	file:
ovsNumPollAll	datapath-windows/ovsext/Event.c	/^UINT32 ovsNumPollAll;$/;"	v
ovsNumberOfOpenInstances	datapath-windows/ovsext/Datapath.c	/^UINT32 ovsNumberOfOpenInstances;$/;"	v
ovsOpenInstanceArray	datapath-windows/ovsext/Datapath.c	/^POVS_OPEN_INSTANCE ovsOpenInstanceArray[OVS_MAX_OPEN_INSTANCES];$/;"	v
ovsPktKey	datapath-windows/ovsext/Stt.h	/^    OVS_STT_PKT_KEY     ovsPktKey;$/;"	m	struct:_OVS_STT_PKT_ENTRY
ovsPool	datapath-windows/ovsext/Switch.h	/^    OVS_NBL_POOL            ovsPool;$/;"	m	struct:_OVS_SWITCH_CONTEXT
ovsPortNameHashArray	datapath-windows/ovsext/Switch.h	/^    PLIST_ENTRY             ovsPortNameHashArray;   \/\/ based on ovsName$/;"	m	struct:_OVS_SWITCH_CONTEXT
ovsRouteHashTable	datapath-windows/ovsext/IpHelper.c	/^static PLIST_ENTRY          ovsRouteHashTable;  \/\/ based on DST PREFIX$/;"	v	file:
ovsSortedIPNeighList	datapath-windows/ovsext/IpHelper.c	/^static LIST_ENTRY           ovsSortedIPNeighList;$/;"	v	file:
ovsState	datapath-windows/ovsext/Vport.h	/^    OVS_VPORT_STATE        ovsState;$/;"	m	struct:_OVS_VPORT_ENTRY
ovsTableLock	datapath-windows/ovsext/IpHelper.c	/^static PNDIS_RW_LOCK_EX     ovsTableLock;$/;"	v	file:
ovsTimeIncrementPerTick	datapath-windows/ovsext/Switch.c	/^UINT64 ovsTimeIncrementPerTick;$/;"	v
ovsType	datapath-windows/ovsext/Vport.h	/^    OVS_VPORT_TYPE         ovsType;$/;"	m	struct:_OVS_VPORT_ENTRY
ovsUserStats	datapath-windows/ovsext/User.c	/^OVS_USER_STATS ovsUserStats;$/;"	v
ovs_16aligned_be32	include/openvswitch/types.h	/^} ovs_16aligned_be32;$/;"	t	typeref:struct:__anon59
ovs_16aligned_in6_addr	lib/packets.h	/^union ovs_16aligned_in6_addr {$/;"	u
ovs_16aligned_ip6_frag	lib/packets.h	/^struct ovs_16aligned_ip6_frag {$/;"	s
ovs_16aligned_ip6_hdr	lib/packets.h	/^struct ovs_16aligned_ip6_hdr {$/;"	s
ovs_16aligned_ip6_hdrctl	lib/packets.h	/^        struct ovs_16aligned_ip6_hdrctl {$/;"	s	union:ovs_16aligned_ip6_hdr::__anon150
ovs_16aligned_u32	include/openvswitch/types.h	/^} ovs_16aligned_u32;$/;"	t	typeref:struct:__anon58
ovs_32aligned_be64	include/openvswitch/types.h	/^} ovs_32aligned_be64;$/;"	t	typeref:struct:__anon65
ovs_32aligned_u64	include/openvswitch/types.h	/^} ovs_32aligned_u64;$/;"	t	typeref:struct:__anon60
ovs_abort	lib/util.c	/^ovs_abort(int err_no, const char *format, ...)$/;"	f
ovs_abort_valist	lib/util.c	/^ovs_abort_valist(int err_no, const char *format, va_list args)$/;"	f
ovs_action_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_action_attr {$/;"	g
ovs_action_attr	include/odp-netlink.h	/^enum ovs_action_attr {$/;"	g
ovs_action_hash	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_action_hash {$/;"	s
ovs_action_hash	include/odp-netlink.h	/^struct ovs_action_hash {$/;"	s
ovs_action_push_mpls	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_action_push_mpls {$/;"	s
ovs_action_push_mpls	include/odp-netlink.h	/^struct ovs_action_push_mpls {$/;"	s
ovs_action_push_tnl	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_action_push_tnl {$/;"	s
ovs_action_push_tnl	include/odp-netlink.h	/^struct ovs_action_push_tnl {$/;"	s
ovs_action_push_vlan	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_action_push_vlan {$/;"	s
ovs_action_push_vlan	include/odp-netlink.h	/^struct ovs_action_push_vlan {$/;"	s
ovs_args	utilities/ovs-test	/^        ovs_args = args.ovs_initialize_args()$/;"	v
ovs_assert	lib/util.h	73;"	d
ovs_assert	lib/util.h	78;"	d
ovs_assert	lib/vlog.c	51;"	d	file:
ovs_assert	lib/vlog.c	52;"	d	file:
ovs_assert_failure	lib/util.c	/^ovs_assert_failure(const char *where, const char *function,$/;"	f
ovs_barrier	lib/ovs-thread.h	/^struct ovs_barrier {$/;"	s
ovs_barrier_block	lib/ovs-thread.c	/^ovs_barrier_block(struct ovs_barrier *barrier)$/;"	f
ovs_barrier_destroy	lib/ovs-thread.c	/^ovs_barrier_destroy(struct ovs_barrier *barrier)$/;"	f
ovs_barrier_init	lib/ovs-thread.c	/^ovs_barrier_init(struct ovs_barrier *barrier, uint32_t size)$/;"	f
ovs_be128	include/openvswitch/types.h	/^} ovs_be128;$/;"	t	typeref:union:__anon63
ovs_be128_equals	lib/util.h	/^ovs_be128_equals(const ovs_be128 *a, const ovs_be128 *b)$/;"	f
ovs_be128_is_zero	lib/util.h	/^ovs_be128_is_zero(const ovs_be128 *val)$/;"	f
ovs_be16	datapath-windows/ovsext/Types.h	/^typedef unsigned short uint16, uint16_t, ovs_be16, u16;$/;"	t
ovs_be16	include/openvswitch/types.h	/^typedef uint16_t OVS_BITWISE ovs_be16;$/;"	t
ovs_be32	datapath-windows/ovsext/Types.h	/^typedef unsigned int uint32, uint32_t, ovs_be32, u32;$/;"	t
ovs_be32	include/openvswitch/types.h	/^typedef uint32_t OVS_BITWISE ovs_be32;$/;"	t
ovs_be64	datapath-windows/ovsext/Types.h	/^typedef unsigned long long uint64, uint64_t, ovs_be64, u64;$/;"	t
ovs_be64	include/openvswitch/types.h	/^typedef uint64_t OVS_BITWISE ovs_be64;$/;"	t
ovs_bindir	lib/dirs.c	/^ovs_bindir(void)$/;"	f
ovs_cmdl_command	lib/command-line.h	/^struct ovs_cmdl_command {$/;"	s
ovs_cmdl_context	lib/command-line.h	/^struct ovs_cmdl_context {$/;"	s
ovs_cmdl_handler	lib/command-line.h	/^typedef void (*ovs_cmdl_handler)(struct ovs_cmdl_context *);$/;"	t
ovs_cmdl_long_options_to_short_options	lib/command-line.c	/^ovs_cmdl_long_options_to_short_options(const struct option options[])$/;"	f
ovs_cmdl_print_commands	lib/command-line.c	/^ovs_cmdl_print_commands(const struct ovs_cmdl_command commands[])$/;"	f
ovs_cmdl_print_options	lib/command-line.c	/^ovs_cmdl_print_options(const struct option options[])$/;"	f
ovs_cmdl_proctitle_init	lib/command-line.c	/^ovs_cmdl_proctitle_init(int argc OVS_UNUSED, char **argv OVS_UNUSED)$/;"	f
ovs_cmdl_proctitle_init	lib/command-line.c	/^ovs_cmdl_proctitle_init(int argc, char **argv)$/;"	f
ovs_cmdl_proctitle_restore	lib/command-line.c	/^ovs_cmdl_proctitle_restore(void)$/;"	f
ovs_cmdl_proctitle_set	lib/command-line.c	/^ovs_cmdl_proctitle_set(const char *format OVS_UNUSED, ...)$/;"	f
ovs_cmdl_proctitle_set	lib/command-line.c	/^ovs_cmdl_proctitle_set(const char *format, ...)$/;"	f
ovs_cmdl_proctitle_set	lib/command-line.h	53;"	d
ovs_cmdl_run_command	lib/command-line.c	/^ovs_cmdl_run_command(struct ovs_cmdl_context *ctx, const struct ovs_cmdl_command commands[])$/;"	f
ovs_comp_helper	utilities/ovs-appctl-bashcomp.bash	/^ovs_comp_helper() {$/;"	f
ovs_compat_exit_net	datapath/linux/compat/net_namespace.c	/^EXPORT_SYMBOL_GPL(ovs_compat_exit_net);$/;"	v
ovs_compat_exit_net	datapath/linux/compat/net_namespace.c	/^void ovs_compat_exit_net(struct net *net, struct rpl_pernet_operations *pnet)$/;"	f
ovs_compat_exit_net	datapath/linux/net_namespace.c	/^EXPORT_SYMBOL_GPL(ovs_compat_exit_net);$/;"	v
ovs_compat_exit_net	datapath/linux/net_namespace.c	/^void ovs_compat_exit_net(struct net *net, struct rpl_pernet_operations *pnet)$/;"	f
ovs_compat_init_net	datapath/linux/compat/net_namespace.c	/^EXPORT_SYMBOL_GPL(ovs_compat_init_net);$/;"	v
ovs_compat_init_net	datapath/linux/compat/net_namespace.c	/^int ovs_compat_init_net(struct net *net, struct rpl_pernet_operations *pnet)$/;"	f
ovs_compat_init_net	datapath/linux/net_namespace.c	/^EXPORT_SYMBOL_GPL(ovs_compat_init_net);$/;"	v
ovs_compat_init_net	datapath/linux/net_namespace.c	/^int ovs_compat_init_net(struct net *net, struct rpl_pernet_operations *pnet)$/;"	f
ovs_conntrack_policy	lib/odp-util.c	/^static const struct nl_policy ovs_conntrack_policy[] = {$/;"	v	typeref:struct:nl_policy	file:
ovs_ct_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_ct_attr {$/;"	g
ovs_ct_attr	include/odp-netlink.h	/^enum ovs_ct_attr {$/;"	g
ovs_datapath_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_datapath_attr {$/;"	g
ovs_datapath_attr	include/odp-netlink.h	/^enum ovs_datapath_attr {$/;"	g
ovs_datapath_cmd	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_datapath_cmd {$/;"	g
ovs_datapath_cmd	include/odp-netlink.h	/^enum ovs_datapath_cmd {$/;"	g
ovs_datapath_family	lib/dpif-netlink.c	/^static int ovs_datapath_family;$/;"	v	file:
ovs_dbdir	lib/dirs.c	/^ovs_dbdir(void)$/;"	f
ovs_delete_bridge	utilities/ovs-vsctl.c	/^ovs_delete_bridge(const struct ovsrec_open_vswitch *ovs,$/;"	f	file:
ovs_dp_change	datapath/datapath.c	/^static void ovs_dp_change(struct datapath *dp, struct nlattr *a[])$/;"	f	file:
ovs_dp_change	datapath/linux/datapath.c	/^static void ovs_dp_change(struct datapath *dp, struct nlattr *a[])$/;"	f	file:
ovs_dp_cmd_alloc_info	datapath/datapath.c	/^static struct sk_buff *ovs_dp_cmd_alloc_info(struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_alloc_info	datapath/linux/datapath.c	/^static struct sk_buff *ovs_dp_cmd_alloc_info(struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_del	datapath/datapath.c	/^static int ovs_dp_cmd_del(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_del	datapath/linux/datapath.c	/^static int ovs_dp_cmd_del(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_dump	datapath/datapath.c	/^static int ovs_dp_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)$/;"	f	file:
ovs_dp_cmd_dump	datapath/linux/datapath.c	/^static int ovs_dp_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)$/;"	f	file:
ovs_dp_cmd_fill_info	datapath/datapath.c	/^static int ovs_dp_cmd_fill_info(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
ovs_dp_cmd_fill_info	datapath/linux/datapath.c	/^static int ovs_dp_cmd_fill_info(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
ovs_dp_cmd_get	datapath/datapath.c	/^static int ovs_dp_cmd_get(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_get	datapath/linux/datapath.c	/^static int ovs_dp_cmd_get(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_msg_size	datapath/datapath.c	/^static size_t ovs_dp_cmd_msg_size(void)$/;"	f	file:
ovs_dp_cmd_msg_size	datapath/linux/datapath.c	/^static size_t ovs_dp_cmd_msg_size(void)$/;"	f	file:
ovs_dp_cmd_new	datapath/datapath.c	/^static int ovs_dp_cmd_new(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_new	datapath/linux/datapath.c	/^static int ovs_dp_cmd_new(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_set	datapath/datapath.c	/^static int ovs_dp_cmd_set(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_cmd_set	datapath/linux/datapath.c	/^static int ovs_dp_cmd_set(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_datapath_multicast_group	datapath/datapath.c	/^static struct genl_multicast_group ovs_dp_datapath_multicast_group = {$/;"	v	typeref:struct:genl_multicast_group	file:
ovs_dp_datapath_multicast_group	datapath/linux/datapath.c	/^static struct genl_multicast_group ovs_dp_datapath_multicast_group = {$/;"	v	typeref:struct:genl_multicast_group	file:
ovs_dp_detach_port	datapath/datapath.c	/^void ovs_dp_detach_port(struct vport *p)$/;"	f
ovs_dp_detach_port	datapath/linux/datapath.c	/^void ovs_dp_detach_port(struct vport *p)$/;"	f
ovs_dp_device_notifier	datapath/dp_notify.c	/^struct notifier_block ovs_dp_device_notifier = {$/;"	v	typeref:struct:notifier_block
ovs_dp_device_notifier	datapath/linux/dp_notify.c	/^struct notifier_block ovs_dp_device_notifier = {$/;"	v	typeref:struct:notifier_block
ovs_dp_flow_multicast_group	datapath/datapath.c	/^static struct genl_multicast_group ovs_dp_flow_multicast_group = {$/;"	v	typeref:struct:genl_multicast_group	file:
ovs_dp_flow_multicast_group	datapath/linux/datapath.c	/^static struct genl_multicast_group ovs_dp_flow_multicast_group = {$/;"	v	typeref:struct:genl_multicast_group	file:
ovs_dp_get_net	datapath/datapath.h	/^static inline struct net *ovs_dp_get_net(const struct datapath *dp)$/;"	f
ovs_dp_megaflow_stats	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_dp_megaflow_stats {$/;"	s
ovs_dp_megaflow_stats	include/odp-netlink.h	/^struct ovs_dp_megaflow_stats {$/;"	s
ovs_dp_name	datapath/datapath.c	/^const char *ovs_dp_name(const struct datapath *dp)$/;"	f
ovs_dp_name	datapath/linux/datapath.c	/^const char *ovs_dp_name(const struct datapath *dp)$/;"	f
ovs_dp_notify_wq	datapath/dp_notify.c	/^void ovs_dp_notify_wq(struct work_struct *work)$/;"	f
ovs_dp_notify_wq	datapath/linux/dp_notify.c	/^void ovs_dp_notify_wq(struct work_struct *work)$/;"	f
ovs_dp_process_packet	datapath/datapath.c	/^void ovs_dp_process_packet(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f
ovs_dp_process_packet	datapath/linux/datapath.c	/^void ovs_dp_process_packet(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f
ovs_dp_reset_user_features	datapath/datapath.c	/^static void ovs_dp_reset_user_features(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_reset_user_features	datapath/linux/datapath.c	/^static void ovs_dp_reset_user_features(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_dp_set_net	datapath/datapath.h	/^static inline void ovs_dp_set_net(struct datapath *dp, struct net *net)$/;"	f
ovs_dp_stats	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_dp_stats {$/;"	s
ovs_dp_stats	include/odp-netlink.h	/^struct ovs_dp_stats {$/;"	s
ovs_dp_upcall	datapath/datapath.c	/^int ovs_dp_upcall(struct datapath *dp, struct sk_buff *skb,$/;"	f
ovs_dp_upcall	datapath/linux/datapath.c	/^int ovs_dp_upcall(struct datapath *dp, struct sk_buff *skb,$/;"	f
ovs_dp_vport_multicast_group	datapath/datapath.c	/^struct genl_multicast_group ovs_dp_vport_multicast_group = {$/;"	v	typeref:struct:genl_multicast_group
ovs_dp_vport_multicast_group	datapath/linux/datapath.c	/^struct genl_multicast_group ovs_dp_vport_multicast_group = {$/;"	v	typeref:struct:genl_multicast_group
ovs_error	lib/util.c	/^ovs_error(int err_no, const char *format, ...)$/;"	f
ovs_error	python/ovs/util.py	/^def ovs_error(err_no, message, vlog=None):$/;"	f
ovs_error_valist	lib/util.c	/^ovs_error_valist(int err_no, const char *format, va_list args)$/;"	f
ovs_execute_actions	datapath/actions.c	/^int ovs_execute_actions(struct datapath *dp, struct sk_buff *skb,$/;"	f
ovs_execute_actions	datapath/linux/actions.c	/^int ovs_execute_actions(struct datapath *dp, struct sk_buff *skb,$/;"	f
ovs_exit_net	datapath/datapath.c	/^static void __net_exit ovs_exit_net(struct net *dnet)$/;"	f	file:
ovs_exit_net	datapath/linux/datapath.c	/^static void __net_exit ovs_exit_net(struct net *dnet)$/;"	f	file:
ovs_fatal	lib/db-ctl-base.h	45;"	d
ovs_fatal	lib/util.c	/^ovs_fatal(int err_no, const char *format, ...)$/;"	f
ovs_fatal	python/ovs/util.py	/^def ovs_fatal(*args, **kwargs):$/;"	f
ovs_fatal_valist	lib/util.c	/^ovs_fatal_valist(int err_no, const char *format, va_list args)$/;"	f
ovs_flow_alloc	datapath/flow_table.c	/^struct sw_flow *ovs_flow_alloc(void)$/;"	f
ovs_flow_alloc	datapath/linux/flow_table.c	/^struct sw_flow *ovs_flow_alloc(void)$/;"	f
ovs_flow_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_flow_attr {$/;"	g
ovs_flow_attr	include/odp-netlink.h	/^enum ovs_flow_attr {$/;"	g
ovs_flow_cmd	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_flow_cmd {$/;"	g
ovs_flow_cmd	include/odp-netlink.h	/^enum ovs_flow_cmd {$/;"	g
ovs_flow_cmd_alloc_info	datapath/datapath.c	/^static struct sk_buff *ovs_flow_cmd_alloc_info(const struct sw_flow_actions *acts,$/;"	f	file:
ovs_flow_cmd_alloc_info	datapath/linux/datapath.c	/^static struct sk_buff *ovs_flow_cmd_alloc_info(const struct sw_flow_actions *acts,$/;"	f	file:
ovs_flow_cmd_build_info	datapath/datapath.c	/^static struct sk_buff *ovs_flow_cmd_build_info(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmd_build_info	datapath/linux/datapath.c	/^static struct sk_buff *ovs_flow_cmd_build_info(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmd_del	datapath/datapath.c	/^static int ovs_flow_cmd_del(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmd_del	datapath/linux/datapath.c	/^static int ovs_flow_cmd_del(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmd_dump	datapath/datapath.c	/^static int ovs_flow_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)$/;"	f	file:
ovs_flow_cmd_dump	datapath/linux/datapath.c	/^static int ovs_flow_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)$/;"	f	file:
ovs_flow_cmd_fill_actions	datapath/datapath.c	/^static int ovs_flow_cmd_fill_actions(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmd_fill_actions	datapath/linux/datapath.c	/^static int ovs_flow_cmd_fill_actions(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmd_fill_info	datapath/datapath.c	/^static int ovs_flow_cmd_fill_info(const struct sw_flow *flow, int dp_ifindex,$/;"	f	file:
ovs_flow_cmd_fill_info	datapath/linux/datapath.c	/^static int ovs_flow_cmd_fill_info(const struct sw_flow *flow, int dp_ifindex,$/;"	f	file:
ovs_flow_cmd_fill_stats	datapath/datapath.c	/^static int ovs_flow_cmd_fill_stats(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmd_fill_stats	datapath/linux/datapath.c	/^static int ovs_flow_cmd_fill_stats(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmd_get	datapath/datapath.c	/^static int ovs_flow_cmd_get(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmd_get	datapath/linux/datapath.c	/^static int ovs_flow_cmd_get(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmd_msg_size	datapath/datapath.c	/^static size_t ovs_flow_cmd_msg_size(const struct sw_flow_actions *acts,$/;"	f	file:
ovs_flow_cmd_msg_size	datapath/linux/datapath.c	/^static size_t ovs_flow_cmd_msg_size(const struct sw_flow_actions *acts,$/;"	f	file:
ovs_flow_cmd_new	datapath/datapath.c	/^static int ovs_flow_cmd_new(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmd_new	datapath/linux/datapath.c	/^static int ovs_flow_cmd_new(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmd_set	datapath/datapath.c	/^static int ovs_flow_cmd_set(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmd_set	datapath/linux/datapath.c	/^static int ovs_flow_cmd_set(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_flow_cmp	datapath/flow_table.c	/^bool ovs_flow_cmp(const struct sw_flow *flow, const struct sw_flow_match *match)$/;"	f
ovs_flow_cmp	datapath/linux/flow_table.c	/^bool ovs_flow_cmp(const struct sw_flow *flow, const struct sw_flow_match *match)$/;"	f
ovs_flow_cmp_ufid	datapath/flow_table.c	/^static bool ovs_flow_cmp_ufid(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmp_ufid	datapath/linux/flow_table.c	/^static bool ovs_flow_cmp_ufid(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmp_unmasked_key	datapath/flow_table.c	/^static bool ovs_flow_cmp_unmasked_key(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_cmp_unmasked_key	datapath/linux/flow_table.c	/^static bool ovs_flow_cmp_unmasked_key(const struct sw_flow *flow,$/;"	f	file:
ovs_flow_exit	datapath/flow_table.c	/^void ovs_flow_exit(void)$/;"	f
ovs_flow_exit	datapath/linux/flow_table.c	/^void ovs_flow_exit(void)$/;"	f
ovs_flow_family	lib/dpif-netlink.c	/^static int ovs_flow_family;$/;"	v	file:
ovs_flow_free	datapath/flow_table.c	/^void ovs_flow_free(struct sw_flow *flow, bool deferred)$/;"	f
ovs_flow_free	datapath/linux/flow_table.c	/^void ovs_flow_free(struct sw_flow *flow, bool deferred)$/;"	f
ovs_flow_hash	datapath/flow.h	/^	u32 ovs_flow_hash;		\/* Datapath computed hash value.  *\/$/;"	m	struct:sw_flow_key
ovs_flow_init	datapath/flow_table.c	/^int ovs_flow_init(void)$/;"	f
ovs_flow_init	datapath/linux/flow_table.c	/^int ovs_flow_init(void)$/;"	f
ovs_flow_key_attr_lens	lib/odp-util.c	/^static const struct attr_len_tbl ovs_flow_key_attr_lens[OVS_KEY_ATTR_MAX + 1] = {$/;"	v	typeref:struct:attr_len_tbl	file:
ovs_flow_key_extract	datapath/flow.c	/^int ovs_flow_key_extract(const struct ovs_tunnel_info *tun_info,$/;"	f
ovs_flow_key_extract	datapath/linux/flow.c	/^int ovs_flow_key_extract(const struct ovs_tunnel_info *tun_info,$/;"	f
ovs_flow_key_extract_userspace	datapath/flow.c	/^int ovs_flow_key_extract_userspace(const struct nlattr *attr,$/;"	f
ovs_flow_key_extract_userspace	datapath/linux/flow.c	/^int ovs_flow_key_extract_userspace(const struct nlattr *attr,$/;"	f
ovs_flow_key_update	datapath/flow.c	/^int ovs_flow_key_update(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f
ovs_flow_key_update	datapath/linux/flow.c	/^int ovs_flow_key_update(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f
ovs_flow_mask_key	datapath/flow_table.c	/^void ovs_flow_mask_key(struct sw_flow_key *dst, const struct sw_flow_key *src,$/;"	f
ovs_flow_mask_key	datapath/linux/flow_table.c	/^void ovs_flow_mask_key(struct sw_flow_key *dst, const struct sw_flow_key *src,$/;"	f
ovs_flow_stats	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_flow_stats {$/;"	s
ovs_flow_stats	include/odp-netlink.h	/^struct ovs_flow_stats {$/;"	s
ovs_flow_stats_clear	datapath/flow.c	/^void ovs_flow_stats_clear(struct sw_flow *flow)$/;"	f
ovs_flow_stats_clear	datapath/linux/flow.c	/^void ovs_flow_stats_clear(struct sw_flow *flow)$/;"	f
ovs_flow_stats_get	datapath/flow.c	/^void ovs_flow_stats_get(const struct sw_flow *flow,$/;"	f
ovs_flow_stats_get	datapath/linux/flow.c	/^void ovs_flow_stats_get(const struct sw_flow *flow,$/;"	f
ovs_flow_stats_update	datapath/flow.c	/^void ovs_flow_stats_update(struct sw_flow *flow, __be16 tcp_flags,$/;"	f
ovs_flow_stats_update	datapath/linux/flow.c	/^void ovs_flow_stats_update(struct sw_flow *flow, __be16 tcp_flags,$/;"	f
ovs_flow_tbl_count	datapath/flow_table.c	/^int ovs_flow_tbl_count(const struct flow_table *table)$/;"	f
ovs_flow_tbl_count	datapath/linux/flow_table.c	/^int ovs_flow_tbl_count(const struct flow_table *table)$/;"	f
ovs_flow_tbl_destroy	datapath/flow_table.c	/^void ovs_flow_tbl_destroy(struct flow_table *table)$/;"	f
ovs_flow_tbl_destroy	datapath/linux/flow_table.c	/^void ovs_flow_tbl_destroy(struct flow_table *table)$/;"	f
ovs_flow_tbl_dump_next	datapath/flow_table.c	/^struct sw_flow *ovs_flow_tbl_dump_next(struct table_instance *ti,$/;"	f
ovs_flow_tbl_dump_next	datapath/linux/flow_table.c	/^struct sw_flow *ovs_flow_tbl_dump_next(struct table_instance *ti,$/;"	f
ovs_flow_tbl_flush	datapath/flow_table.c	/^int ovs_flow_tbl_flush(struct flow_table *flow_table)$/;"	f
ovs_flow_tbl_flush	datapath/linux/flow_table.c	/^int ovs_flow_tbl_flush(struct flow_table *flow_table)$/;"	f
ovs_flow_tbl_init	datapath/flow_table.c	/^int ovs_flow_tbl_init(struct flow_table *table)$/;"	f
ovs_flow_tbl_init	datapath/linux/flow_table.c	/^int ovs_flow_tbl_init(struct flow_table *table)$/;"	f
ovs_flow_tbl_insert	datapath/flow_table.c	/^int ovs_flow_tbl_insert(struct flow_table *table, struct sw_flow *flow,$/;"	f
ovs_flow_tbl_insert	datapath/linux/flow_table.c	/^int ovs_flow_tbl_insert(struct flow_table *table, struct sw_flow *flow,$/;"	f
ovs_flow_tbl_lookup	datapath/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_lookup	datapath/linux/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_lookup_exact	datapath/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup_exact(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_lookup_exact	datapath/linux/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup_exact(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_lookup_stats	datapath/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup_stats(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_lookup_stats	datapath/linux/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup_stats(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_lookup_ufid	datapath/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup_ufid(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_lookup_ufid	datapath/linux/flow_table.c	/^struct sw_flow *ovs_flow_tbl_lookup_ufid(struct flow_table *tbl,$/;"	f
ovs_flow_tbl_num_masks	datapath/flow_table.c	/^int ovs_flow_tbl_num_masks(const struct flow_table *table)$/;"	f
ovs_flow_tbl_num_masks	datapath/linux/flow_table.c	/^int ovs_flow_tbl_num_masks(const struct flow_table *table)$/;"	f
ovs_flow_tbl_remove	datapath/flow_table.c	/^void ovs_flow_tbl_remove(struct flow_table *table, struct sw_flow *flow)$/;"	f
ovs_flow_tbl_remove	datapath/linux/flow_table.c	/^void ovs_flow_tbl_remove(struct flow_table *table, struct sw_flow *flow)$/;"	f
ovs_flow_tun_info_init	datapath/flow.h	/^static inline void ovs_flow_tun_info_init(struct ovs_tunnel_info *tun_info,$/;"	f
ovs_flow_used_time	datapath/flow.c	/^u64 ovs_flow_used_time(unsigned long flow_jiffies)$/;"	f
ovs_flow_used_time	datapath/linux/flow.c	/^u64 ovs_flow_used_time(unsigned long flow_jiffies)$/;"	f
ovs_format_message	lib/util.c	/^ovs_format_message(int error)$/;"	f
ovs_frag_type	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_frag_type {$/;"	g
ovs_frag_type	include/odp-netlink.h	/^enum ovs_frag_type {$/;"	g
ovs_frag_type_from_string	lib/odp-util.c	/^ovs_frag_type_from_string(const char *s, enum ovs_frag_type *type)$/;"	f	file:
ovs_frag_type_to_string	lib/odp-util.c	/^ovs_frag_type_to_string(enum ovs_frag_type type)$/;"	f	file:
ovs_geneve_tnl_exit	datapath/linux/vport-geneve.c	/^module_exit(ovs_geneve_tnl_exit);$/;"	v
ovs_geneve_tnl_exit	datapath/linux/vport-geneve.c	/^static void __exit ovs_geneve_tnl_exit(void)$/;"	f	file:
ovs_geneve_tnl_exit	datapath/vport-geneve.c	/^module_exit(ovs_geneve_tnl_exit);$/;"	v
ovs_geneve_tnl_exit	datapath/vport-geneve.c	/^static void __exit ovs_geneve_tnl_exit(void)$/;"	f	file:
ovs_geneve_tnl_init	datapath/linux/vport-geneve.c	/^module_init(ovs_geneve_tnl_init);$/;"	v
ovs_geneve_tnl_init	datapath/linux/vport-geneve.c	/^static int __init ovs_geneve_tnl_init(void)$/;"	f	file:
ovs_geneve_tnl_init	datapath/vport-geneve.c	/^module_init(ovs_geneve_tnl_init);$/;"	v
ovs_geneve_tnl_init	datapath/vport-geneve.c	/^static int __init ovs_geneve_tnl_init(void)$/;"	f	file:
ovs_geneve_vport_ops	datapath/linux/vport-geneve.c	/^static struct vport_ops ovs_geneve_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_geneve_vport_ops	datapath/linux/vport-geneve.c	/^static struct vport_ops ovs_geneve_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_geneve_vport_ops	datapath/vport-geneve.c	/^static struct vport_ops ovs_geneve_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_geneve_vport_ops	datapath/vport-geneve.c	/^static struct vport_ops ovs_geneve_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_get_physical_interface	python/ovstest/vswitch.py	/^def ovs_get_physical_interface(bridge):$/;"	f
ovs_get_program_name	lib/util.c	/^ovs_get_program_name(void)$/;"	f
ovs_get_program_version	lib/util.c	/^ovs_get_program_version(void)$/;"	f
ovs_gre_tnl_exit	datapath/linux/vport-gre.c	/^module_exit(ovs_gre_tnl_exit);$/;"	v
ovs_gre_tnl_exit	datapath/linux/vport-gre.c	/^static void __exit ovs_gre_tnl_exit(void)$/;"	f	file:
ovs_gre_tnl_exit	datapath/vport-gre.c	/^module_exit(ovs_gre_tnl_exit);$/;"	v
ovs_gre_tnl_exit	datapath/vport-gre.c	/^static void __exit ovs_gre_tnl_exit(void)$/;"	f	file:
ovs_gre_tnl_init	datapath/linux/vport-gre.c	/^module_init(ovs_gre_tnl_init);$/;"	v
ovs_gre_tnl_init	datapath/linux/vport-gre.c	/^static int __init ovs_gre_tnl_init(void)$/;"	f	file:
ovs_gre_tnl_init	datapath/vport-gre.c	/^module_init(ovs_gre_tnl_init);$/;"	v
ovs_gre_tnl_init	datapath/vport-gre.c	/^static int __init ovs_gre_tnl_init(void)$/;"	f	file:
ovs_gre_vport_ops	datapath/linux/vport-gre.c	/^static struct vport_ops ovs_gre_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_gre_vport_ops	datapath/linux/vport-gre.c	/^static struct vport_ops ovs_gre_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_gre_vport_ops	datapath/vport-gre.c	/^static struct vport_ops ovs_gre_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_gre_vport_ops	datapath/vport-gre.c	/^static struct vport_ops ovs_gre_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_gso_cb	datapath/linux/compat/gso.h	/^struct ovs_gso_cb {$/;"	s
ovs_hash_alg	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_hash_alg {$/;"	g
ovs_hash_alg	include/odp-netlink.h	/^enum ovs_hash_alg {$/;"	g
ovs_header	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_header {$/;"	s
ovs_header	include/odp-netlink.h	/^struct ovs_header {$/;"	s
ovs_hex_dump	lib/util.c	/^ovs_hex_dump(FILE *stream, const void *buf_, size_t size,$/;"	f
ovs_identifier_is_key	datapath/flow.h	/^static inline bool ovs_identifier_is_key(const struct sw_flow_id *sfid)$/;"	f
ovs_identifier_is_ufid	datapath/flow.h	/^static inline bool ovs_identifier_is_ufid(const struct sw_flow_id *sfid)$/;"	f
ovs_idl	ovn/controller/ovn-controller.h	/^    struct ovsdb_idl *ovs_idl;$/;"	m	struct:controller_ctx	typeref:struct:controller_ctx::ovsdb_idl
ovs_idl_txn	ovn/controller/ovn-controller.h	/^    struct ovsdb_idl_txn *ovs_idl_txn;$/;"	m	struct:controller_ctx	typeref:struct:controller_ctx::ovsdb_idl_txn
ovs_info_caps	utilities/bugtool/ovs-bugtool	/^        ovs_info_caps = [CAP_NETWORK_STATUS, CAP_SYSTEM_LOGS,$/;"	v
ovs_info_list	utilities/bugtool/ovs-bugtool	/^        ovs_info_list = ['process-tree']$/;"	v
ovs_init	tests/system-kmod-testsuite	/^ovs_init() {$/;"	f
ovs_init	tests/system-userspace-testsuite	/^ovs_init() {$/;"	f
ovs_init	tests/testsuite	/^ovs_init() {$/;"	f
ovs_init_net	datapath/datapath.c	/^static int __net_init ovs_init_net(struct net *net)$/;"	f	file:
ovs_init_net	datapath/linux/datapath.c	/^static int __net_init ovs_init_net(struct net *net)$/;"	f	file:
ovs_initialize_args	python/ovstest/args.py	/^def ovs_initialize_args():$/;"	f
ovs_insert_bridge	utilities/ovs-vsctl.c	/^ovs_insert_bridge(const struct ovsrec_open_vswitch *ovs,$/;"	f	file:
ovs_instruction_name_from_type	lib/ofp-actions.c	/^ovs_instruction_name_from_type(enum ovs_instruction_type type)$/;"	f
ovs_instruction_type	lib/ofp-actions.h	/^enum ovs_instruction_type {$/;"	g
ovs_instruction_type_from_inst_type	lib/ofp-actions.c	/^ovs_instruction_type_from_inst_type(enum ovs_instruction_type *instruction_type,$/;"	f
ovs_instruction_type_from_name	lib/ofp-actions.c	/^ovs_instruction_type_from_name(const char *name)$/;"	f
ovs_instruction_type_from_ofpact_type	lib/ofp-actions.c	/^ovs_instruction_type_from_ofpact_type(enum ofpact_type type)$/;"	f
ovs_internal_dev_get_vport	datapath/linux/vport-internal_dev.c	/^struct vport *ovs_internal_dev_get_vport(struct net_device *netdev)$/;"	f
ovs_internal_dev_get_vport	datapath/vport-internal_dev.c	/^struct vport *ovs_internal_dev_get_vport(struct net_device *netdev)$/;"	f
ovs_internal_dev_rtnl_link_register	datapath/linux/vport-internal_dev.c	/^int ovs_internal_dev_rtnl_link_register(void)$/;"	f
ovs_internal_dev_rtnl_link_register	datapath/vport-internal_dev.c	/^int ovs_internal_dev_rtnl_link_register(void)$/;"	f
ovs_internal_dev_rtnl_link_unregister	datapath/linux/vport-internal_dev.c	/^void ovs_internal_dev_rtnl_link_unregister(void)$/;"	f
ovs_internal_dev_rtnl_link_unregister	datapath/vport-internal_dev.c	/^void ovs_internal_dev_rtnl_link_unregister(void)$/;"	f
ovs_internal_vport_ops	datapath/linux/vport-internal_dev.c	/^static struct vport_ops ovs_internal_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_internal_vport_ops	datapath/linux/vport-internal_dev.c	/^static struct vport_ops ovs_internal_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_internal_vport_ops	datapath/vport-internal_dev.c	/^static struct vport_ops ovs_internal_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_internal_vport_ops	datapath/vport-internal_dev.c	/^static struct vport_ops ovs_internal_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_iptunnel_handle_offloads	datapath/linux/compat/include/net/ip_tunnels.h	36;"	d
ovs_iptunnel_handle_offloads	datapath/linux/compat/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(ovs_iptunnel_handle_offloads);$/;"	v
ovs_iptunnel_handle_offloads	datapath/linux/compat/ip_tunnels_core.c	/^struct sk_buff *ovs_iptunnel_handle_offloads(struct sk_buff *skb,$/;"	f
ovs_iptunnel_handle_offloads	datapath/linux/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(ovs_iptunnel_handle_offloads);$/;"	v
ovs_iptunnel_handle_offloads	datapath/linux/ip_tunnels_core.c	/^struct sk_buff *ovs_iptunnel_handle_offloads(struct sk_buff *skb,$/;"	f
ovs_is_internal_dev	datapath/linux/vport-internal_dev.c	/^int ovs_is_internal_dev(const struct net_device *netdev)$/;"	f
ovs_is_internal_dev	datapath/vport-internal_dev.c	/^int ovs_is_internal_dev(const struct net_device *netdev)$/;"	f
ovs_key_arp	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_arp {$/;"	s
ovs_key_arp	include/odp-netlink.h	/^struct ovs_key_arp {$/;"	s
ovs_key_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_key_attr {$/;"	g
ovs_key_attr	include/odp-netlink.h	/^enum ovs_key_attr {$/;"	g
ovs_key_attr_size	datapath/flow_netlink.c	/^size_t ovs_key_attr_size(void)$/;"	f
ovs_key_attr_size	datapath/linux/flow_netlink.c	/^size_t ovs_key_attr_size(void)$/;"	f
ovs_key_attr_to_string	lib/odp-util.c	/^ovs_key_attr_to_string(enum ovs_key_attr attr, char *namebuf, size_t bufsize)$/;"	f	file:
ovs_key_ct_labels	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_ct_labels {$/;"	s
ovs_key_ct_labels	include/odp-netlink.h	/^struct ovs_key_ct_labels {$/;"	s
ovs_key_ethernet	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_ethernet {$/;"	s
ovs_key_ethernet	include/odp-netlink.h	/^struct ovs_key_ethernet {$/;"	s
ovs_key_from_nlattrs	datapath/flow_netlink.c	/^static int ovs_key_from_nlattrs(struct sw_flow_match *match, u64 attrs,$/;"	f	file:
ovs_key_from_nlattrs	datapath/linux/flow_netlink.c	/^static int ovs_key_from_nlattrs(struct sw_flow_match *match, u64 attrs,$/;"	f	file:
ovs_key_icmp	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_icmp {$/;"	s
ovs_key_icmp	include/odp-netlink.h	/^struct ovs_key_icmp {$/;"	s
ovs_key_icmpv6	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_icmpv6 {$/;"	s
ovs_key_icmpv6	include/odp-netlink.h	/^struct ovs_key_icmpv6 {$/;"	s
ovs_key_ipv4	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_ipv4 {$/;"	s
ovs_key_ipv4	include/odp-netlink.h	/^struct ovs_key_ipv4 {$/;"	s
ovs_key_ipv4_tunnel	datapath/flow.h	/^struct ovs_key_ipv4_tunnel {$/;"	s
ovs_key_ipv6	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_ipv6 {$/;"	s
ovs_key_ipv6	include/odp-netlink.h	/^struct ovs_key_ipv6 {$/;"	s
ovs_key_lens	datapath/flow_netlink.c	/^static const struct ovs_len_tbl ovs_key_lens[OVS_KEY_ATTR_MAX + 1] = {$/;"	v	typeref:struct:ovs_len_tbl	file:
ovs_key_lens	datapath/linux/flow_netlink.c	/^static const struct ovs_len_tbl ovs_key_lens[OVS_KEY_ATTR_MAX + 1] = {$/;"	v	typeref:struct:ovs_len_tbl	file:
ovs_key_mpls	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_mpls {$/;"	s
ovs_key_mpls	include/odp-netlink.h	/^struct ovs_key_mpls {$/;"	s
ovs_key_nd	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_nd {$/;"	s
ovs_key_nd	include/odp-netlink.h	/^struct ovs_key_nd {$/;"	s
ovs_key_sctp	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_sctp {$/;"	s
ovs_key_sctp	include/odp-netlink.h	/^struct ovs_key_sctp {$/;"	s
ovs_key_tcp	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_tcp {$/;"	s
ovs_key_tcp	include/odp-netlink.h	/^struct ovs_key_tcp {$/;"	s
ovs_key_tp	lib/odp-util.c	/^union ovs_key_tp {$/;"	u	file:
ovs_key_udp	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_key_udp {$/;"	s
ovs_key_udp	include/odp-netlink.h	/^struct ovs_key_udp {$/;"	s
ovs_key_vlan__	lib/odp-util.c	/^struct ovs_key_vlan__ {$/;"	s	file:
ovs_lasterror_to_string	lib/util.c	/^ovs_lasterror_to_string(void)$/;"	f
ovs_len_tbl	datapath/flow_netlink.c	/^struct ovs_len_tbl {$/;"	s	file:
ovs_len_tbl	datapath/linux/flow_netlink.c	/^struct ovs_len_tbl {$/;"	s	file:
ovs_lisp_tnl_exit	datapath/linux/vport-lisp.c	/^module_exit(ovs_lisp_tnl_exit);$/;"	v
ovs_lisp_tnl_exit	datapath/linux/vport-lisp.c	/^static void __exit ovs_lisp_tnl_exit(void)$/;"	f	file:
ovs_lisp_tnl_exit	datapath/vport-lisp.c	/^module_exit(ovs_lisp_tnl_exit);$/;"	v
ovs_lisp_tnl_exit	datapath/vport-lisp.c	/^static void __exit ovs_lisp_tnl_exit(void)$/;"	f	file:
ovs_lisp_tnl_init	datapath/linux/vport-lisp.c	/^module_init(ovs_lisp_tnl_init);$/;"	v
ovs_lisp_tnl_init	datapath/linux/vport-lisp.c	/^static int __init ovs_lisp_tnl_init(void)$/;"	f	file:
ovs_lisp_tnl_init	datapath/vport-lisp.c	/^module_init(ovs_lisp_tnl_init);$/;"	v
ovs_lisp_tnl_init	datapath/vport-lisp.c	/^static int __init ovs_lisp_tnl_init(void)$/;"	f	file:
ovs_lisp_vport_ops	datapath/linux/vport-lisp.c	/^static struct vport_ops ovs_lisp_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_lisp_vport_ops	datapath/linux/vport-lisp.c	/^static struct vport_ops ovs_lisp_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_lisp_vport_ops	datapath/vport-lisp.c	/^static struct vport_ops ovs_lisp_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_lisp_vport_ops	datapath/vport-lisp.c	/^static struct vport_ops ovs_lisp_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_list	include/openvswitch/list.h	/^struct ovs_list {$/;"	s
ovs_lldp	lib/ovs-lldp.c	/^VLOG_DEFINE_THIS_MODULE(ovs_lldp);$/;"	v
ovs_lock	datapath/datapath.c	/^void ovs_lock(void)$/;"	f
ovs_lock	datapath/linux/datapath.c	/^void ovs_lock(void)$/;"	f
ovs_logdir	lib/dirs.c	/^ovs_logdir(void)$/;"	f
ovs_logs	utilities/bugtool/ovs-bugtool	/^    ovs_logs = ([ OPENVSWITCH_LOG_DIR + x for x in$/;"	v
ovs_lookup_vport	datapath/datapath.c	/^struct vport *ovs_lookup_vport(const struct datapath *dp, u16 port_no)$/;"	f
ovs_lookup_vport	datapath/linux/datapath.c	/^struct vport *ovs_lookup_vport(const struct datapath *dp, u16 port_no)$/;"	f
ovs_match_init	datapath/flow_netlink.c	/^void ovs_match_init(struct sw_flow_match *match,$/;"	f
ovs_match_init	datapath/linux/flow_netlink.c	/^void ovs_match_init(struct sw_flow_match *match,$/;"	f
ovs_must_notify	datapath/datapath.c	/^static bool ovs_must_notify(struct genl_family *family, struct genl_info *info,$/;"	f	file:
ovs_must_notify	datapath/linux/datapath.c	/^static bool ovs_must_notify(struct genl_family *family, struct genl_info *info,$/;"	f	file:
ovs_mutex	include/openvswitch/thread.h	/^struct OVS_LOCKABLE ovs_mutex {$/;"	s
ovs_mutex_cond_wait	lib/ovs-thread.c	/^ovs_mutex_cond_wait(pthread_cond_t *cond, const struct ovs_mutex *mutex_)$/;"	f
ovs_mutex_init	lib/ovs-thread.c	/^ovs_mutex_init(const struct ovs_mutex *mutex)$/;"	f
ovs_mutex_init__	lib/ovs-thread.c	/^ovs_mutex_init__(const struct ovs_mutex *l_, int type)$/;"	f	file:
ovs_mutex_init_adaptive	lib/ovs-thread.c	/^ovs_mutex_init_adaptive(const struct ovs_mutex *mutex)$/;"	f
ovs_mutex_init_recursive	lib/ovs-thread.c	/^ovs_mutex_init_recursive(const struct ovs_mutex *mutex)$/;"	f
ovs_mutex_lock	include/openvswitch/thread.h	59;"	d
ovs_mutex_trylock	include/openvswitch/thread.h	64;"	d
ovs_name	lib/netdev-linux.c	/^    const char *ovs_name;$/;"	m	struct:tc_ops	file:
ovs_native_tunneling_is_on	ofproto/ofproto-dpif.c	/^ovs_native_tunneling_is_on(struct ofproto_dpif *ofproto)$/;"	f
ovs_nd_msg	lib/packets.h	/^struct ovs_nd_msg {$/;"	s
ovs_nd_opt	lib/packets.h	/^struct ovs_nd_opt {$/;"	s
ovs_net	datapath/datapath.h	/^struct ovs_net {$/;"	s
ovs_net_id	datapath/datapath.c	/^EXPORT_SYMBOL_GPL(ovs_net_id);$/;"	v
ovs_net_id	datapath/linux/datapath.c	/^EXPORT_SYMBOL_GPL(ovs_net_id);$/;"	v
ovs_net_ops	datapath/datapath.c	/^static struct pernet_operations ovs_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
ovs_net_ops	datapath/linux/datapath.c	/^static struct pernet_operations ovs_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
ovs_netdev_detach_dev	datapath/linux/vport-netdev.c	/^void ovs_netdev_detach_dev(struct vport *vport)$/;"	f
ovs_netdev_detach_dev	datapath/vport-netdev.c	/^void ovs_netdev_detach_dev(struct vport *vport)$/;"	f
ovs_netdev_exit	datapath/linux/vport-netdev.c	/^void ovs_netdev_exit(void)$/;"	f
ovs_netdev_exit	datapath/vport-netdev.c	/^void ovs_netdev_exit(void)$/;"	f
ovs_netdev_get_name	datapath/linux/vport-netdev.c	/^const char *ovs_netdev_get_name(const struct vport *vport)$/;"	f
ovs_netdev_get_name	datapath/vport-netdev.c	/^const char *ovs_netdev_get_name(const struct vport *vport)$/;"	f
ovs_netdev_get_vport	datapath/linux/vport-netdev.c	/^struct vport *ovs_netdev_get_vport(struct net_device *dev)$/;"	f
ovs_netdev_get_vport	datapath/vport-netdev.c	/^struct vport *ovs_netdev_get_vport(struct net_device *dev)$/;"	f
ovs_netdev_init	datapath/linux/vport-netdev.c	/^int __init ovs_netdev_init(void)$/;"	f
ovs_netdev_init	datapath/vport-netdev.c	/^int __init ovs_netdev_init(void)$/;"	f
ovs_netdev_vport_ops	datapath/linux/vport-netdev.c	/^static struct vport_ops ovs_netdev_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_netdev_vport_ops	datapath/linux/vport-netdev.c	/^static struct vport_ops ovs_netdev_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_netdev_vport_ops	datapath/vport-netdev.c	/^static struct vport_ops ovs_netdev_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_netdev_vport_ops	datapath/vport-netdev.c	/^static struct vport_ops ovs_netdev_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_nl_mcast_attr	datapath-windows/include/OvsDpInterfaceExt.h	/^enum ovs_nl_mcast_attr {$/;"	g
ovs_nla_copy_actions	datapath/flow_netlink.c	/^int ovs_nla_copy_actions(const struct nlattr *attr,$/;"	f
ovs_nla_copy_actions	datapath/linux/flow_netlink.c	/^int ovs_nla_copy_actions(const struct nlattr *attr,$/;"	f
ovs_nla_free_flow_actions	datapath/flow_netlink.c	/^void ovs_nla_free_flow_actions(struct sw_flow_actions *sf_acts)$/;"	f
ovs_nla_free_flow_actions	datapath/linux/flow_netlink.c	/^void ovs_nla_free_flow_actions(struct sw_flow_actions *sf_acts)$/;"	f
ovs_nla_get_flow_metadata	datapath/flow_netlink.c	/^int ovs_nla_get_flow_metadata(const struct nlattr *attr,$/;"	f
ovs_nla_get_flow_metadata	datapath/linux/flow_netlink.c	/^int ovs_nla_get_flow_metadata(const struct nlattr *attr,$/;"	f
ovs_nla_get_identifier	datapath/flow_netlink.c	/^int ovs_nla_get_identifier(struct sw_flow_id *sfid, const struct nlattr *ufid,$/;"	f
ovs_nla_get_identifier	datapath/linux/flow_netlink.c	/^int ovs_nla_get_identifier(struct sw_flow_id *sfid, const struct nlattr *ufid,$/;"	f
ovs_nla_get_match	datapath/flow_netlink.c	/^int ovs_nla_get_match(struct sw_flow_match *match,$/;"	f
ovs_nla_get_match	datapath/linux/flow_netlink.c	/^int ovs_nla_get_match(struct sw_flow_match *match,$/;"	f
ovs_nla_get_ufid	datapath/flow_netlink.c	/^bool ovs_nla_get_ufid(struct sw_flow_id *sfid, const struct nlattr *attr,$/;"	f
ovs_nla_get_ufid	datapath/linux/flow_netlink.c	/^bool ovs_nla_get_ufid(struct sw_flow_id *sfid, const struct nlattr *attr,$/;"	f
ovs_nla_get_ufid_flags	datapath/flow_netlink.c	/^u32 ovs_nla_get_ufid_flags(const struct nlattr *attr)$/;"	f
ovs_nla_get_ufid_flags	datapath/linux/flow_netlink.c	/^u32 ovs_nla_get_ufid_flags(const struct nlattr *attr)$/;"	f
ovs_nla_put_actions	datapath/flow_netlink.c	/^int ovs_nla_put_actions(const struct nlattr *attr, int len, struct sk_buff *skb)$/;"	f
ovs_nla_put_actions	datapath/linux/flow_netlink.c	/^int ovs_nla_put_actions(const struct nlattr *attr, int len, struct sk_buff *skb)$/;"	f
ovs_nla_put_egress_tunnel_key	datapath/flow_netlink.c	/^int ovs_nla_put_egress_tunnel_key(struct sk_buff *skb,$/;"	f
ovs_nla_put_egress_tunnel_key	datapath/linux/flow_netlink.c	/^int ovs_nla_put_egress_tunnel_key(struct sk_buff *skb,$/;"	f
ovs_nla_put_identifier	datapath/flow_netlink.c	/^int ovs_nla_put_identifier(const struct sw_flow *flow, struct sk_buff *skb)$/;"	f
ovs_nla_put_identifier	datapath/linux/flow_netlink.c	/^int ovs_nla_put_identifier(const struct sw_flow *flow, struct sk_buff *skb)$/;"	f
ovs_nla_put_key	datapath/flow_netlink.c	/^int ovs_nla_put_key(const struct sw_flow_key *swkey,$/;"	f
ovs_nla_put_key	datapath/linux/flow_netlink.c	/^int ovs_nla_put_key(const struct sw_flow_key *swkey,$/;"	f
ovs_nla_put_mask	datapath/flow_netlink.c	/^int ovs_nla_put_mask(const struct sw_flow *flow, struct sk_buff *skb)$/;"	f
ovs_nla_put_mask	datapath/linux/flow_netlink.c	/^int ovs_nla_put_mask(const struct sw_flow *flow, struct sk_buff *skb)$/;"	f
ovs_nla_put_masked_key	datapath/flow_netlink.c	/^int ovs_nla_put_masked_key(const struct sw_flow *flow, struct sk_buff *skb)$/;"	f
ovs_nla_put_masked_key	datapath/linux/flow_netlink.c	/^int ovs_nla_put_masked_key(const struct sw_flow *flow, struct sk_buff *skb)$/;"	f
ovs_notify	datapath/datapath.c	/^static void ovs_notify(struct genl_family *family, struct genl_multicast_group *grp,$/;"	f	file:
ovs_notify	datapath/linux/datapath.c	/^static void ovs_notify(struct genl_family *family, struct genl_multicast_group *grp,$/;"	f	file:
ovs_numa	lib/ovs-numa.c	/^VLOG_DEFINE_THIS_MODULE(ovs_numa);$/;"	v
ovs_numa_core_id_is_valid	lib/ovs-numa.c	/^ovs_numa_core_id_is_valid(unsigned core_id)$/;"	f
ovs_numa_core_id_is_valid	lib/ovs-numa.h	/^ovs_numa_core_id_is_valid(unsigned core_id OVS_UNUSED)$/;"	f
ovs_numa_core_is_pinned	lib/ovs-numa.c	/^ovs_numa_core_is_pinned(unsigned core_id)$/;"	f
ovs_numa_core_is_pinned	lib/ovs-numa.h	/^ovs_numa_core_is_pinned(unsigned core_id OVS_UNUSED)$/;"	f
ovs_numa_dump	lib/ovs-numa.h	/^struct ovs_numa_dump {$/;"	s
ovs_numa_dump_cores_on_numa	lib/ovs-numa.c	/^ovs_numa_dump_cores_on_numa(int numa_id)$/;"	f
ovs_numa_dump_cores_on_numa	lib/ovs-numa.h	/^ovs_numa_dump_cores_on_numa(int numa_id OVS_UNUSED)$/;"	f
ovs_numa_dump_destroy	lib/ovs-numa.c	/^ovs_numa_dump_destroy(struct ovs_numa_dump *dump)$/;"	f
ovs_numa_dump_destroy	lib/ovs-numa.h	/^ovs_numa_dump_destroy(struct ovs_numa_dump *dump OVS_UNUSED)$/;"	f
ovs_numa_get_n_cores	lib/ovs-numa.c	/^ovs_numa_get_n_cores(void)$/;"	f
ovs_numa_get_n_cores	lib/ovs-numa.h	/^ovs_numa_get_n_cores(void)$/;"	f
ovs_numa_get_n_cores_on_numa	lib/ovs-numa.c	/^ovs_numa_get_n_cores_on_numa(int numa_id)$/;"	f
ovs_numa_get_n_cores_on_numa	lib/ovs-numa.h	/^ovs_numa_get_n_cores_on_numa(int numa_id OVS_UNUSED)$/;"	f
ovs_numa_get_n_numas	lib/ovs-numa.c	/^ovs_numa_get_n_numas(void)$/;"	f
ovs_numa_get_n_numas	lib/ovs-numa.h	/^ovs_numa_get_n_numas(void)$/;"	f
ovs_numa_get_n_unpinned_cores_on_numa	lib/ovs-numa.c	/^ovs_numa_get_n_unpinned_cores_on_numa(int numa_id)$/;"	f
ovs_numa_get_n_unpinned_cores_on_numa	lib/ovs-numa.h	/^ovs_numa_get_n_unpinned_cores_on_numa(int numa_id OVS_UNUSED)$/;"	f
ovs_numa_get_numa_id	lib/ovs-numa.c	/^ovs_numa_get_numa_id(unsigned core_id)$/;"	f
ovs_numa_get_numa_id	lib/ovs-numa.h	/^ovs_numa_get_numa_id(unsigned core_id OVS_UNUSED)$/;"	f
ovs_numa_get_unpinned_core_any	lib/ovs-numa.c	/^ovs_numa_get_unpinned_core_any(void)$/;"	f
ovs_numa_get_unpinned_core_any	lib/ovs-numa.h	/^ovs_numa_get_unpinned_core_any(void)$/;"	f
ovs_numa_get_unpinned_core_on_numa	lib/ovs-numa.c	/^ovs_numa_get_unpinned_core_on_numa(int numa_id)$/;"	f
ovs_numa_get_unpinned_core_on_numa	lib/ovs-numa.h	/^ovs_numa_get_unpinned_core_on_numa(int numa_id OVS_UNUSED)$/;"	f
ovs_numa_info	lib/ovs-numa.h	/^struct ovs_numa_info {$/;"	s
ovs_numa_init	lib/ovs-numa.c	/^ovs_numa_init(void)$/;"	f
ovs_numa_init	lib/ovs-numa.h	/^ovs_numa_init(void)$/;"	f
ovs_numa_numa_id_is_valid	lib/ovs-numa.c	/^ovs_numa_numa_id_is_valid(int numa_id)$/;"	f
ovs_numa_numa_id_is_valid	lib/ovs-numa.h	/^ovs_numa_numa_id_is_valid(int numa_id OVS_UNUSED)$/;"	f
ovs_numa_set_cpu_mask	lib/ovs-numa.c	/^ovs_numa_set_cpu_mask(const char *cmask)$/;"	f
ovs_numa_set_cpu_mask	lib/ovs-numa.h	/^ovs_numa_set_cpu_mask(const char *cmask OVS_UNUSED)$/;"	f
ovs_numa_try_pin_core_specific	lib/ovs-numa.c	/^ovs_numa_try_pin_core_specific(unsigned core_id)$/;"	f
ovs_numa_try_pin_core_specific	lib/ovs-numa.h	/^ovs_numa_try_pin_core_specific(unsigned core_id OVS_UNUSED)$/;"	f
ovs_numa_unpin_core	lib/ovs-numa.c	/^ovs_numa_unpin_core(unsigned core_id)$/;"	f
ovs_numa_unpin_core	lib/ovs-numa.h	/^ovs_numa_unpin_core(unsigned core_id OVS_UNUSED)$/;"	f
ovs_ofctl	vtep/ovs-vtep	/^def ovs_ofctl(args):$/;"	f
ovs_packet_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_packet_attr {$/;"	g
ovs_packet_attr	include/odp-netlink.h	/^enum ovs_packet_attr {$/;"	g
ovs_packet_cmd	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_packet_cmd {$/;"	g
ovs_packet_cmd	include/odp-netlink.h	/^enum ovs_packet_cmd {$/;"	g
ovs_packet_cmd_execute	datapath/datapath.c	/^static int ovs_packet_cmd_execute(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_packet_cmd_execute	datapath/linux/datapath.c	/^static int ovs_packet_cmd_execute(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_packet_family	lib/dpif-netlink.c	/^static int ovs_packet_family;$/;"	v	file:
ovs_parse_tnl_push	lib/odp-util.c	/^ovs_parse_tnl_push(const char *s, struct ovs_action_push_tnl *data)$/;"	f	file:
ovs_pcap_open	lib/pcap-file.c	/^ovs_pcap_open(const char *file_name, const char *mode)$/;"	f
ovs_pcap_read	lib/pcap-file.c	/^ovs_pcap_read(FILE *file, struct dp_packet **bufp, long long int *when)$/;"	f
ovs_pcap_read_header	lib/pcap-file.c	/^ovs_pcap_read_header(FILE *file)$/;"	f
ovs_pcap_write	lib/pcap-file.c	/^ovs_pcap_write(FILE *file, struct dp_packet *buf)$/;"	f
ovs_pcap_write_header	lib/pcap-file.c	/^ovs_pcap_write_header(FILE *file)$/;"	f
ovs_pkgdatadir	lib/dirs.c	/^ovs_pkgdatadir(void)$/;"	f
ovs_prefetch_range	lib/util.h	/^ovs_prefetch_range(const void *start, size_t size)$/;"	f
ovs_print_version	lib/util.c	/^ovs_print_version(uint8_t min_ofp, uint8_t max_ofp)$/;"	f
ovs_pyfiles	Makefile	/^ovs_pyfiles = \\$/;"	m
ovs_pyfiles	python/automake.mk	/^ovs_pyfiles = \\$/;"	m
ovs_rcu	lib/ovs-rcu.c	/^VLOG_DEFINE_THIS_MODULE(ovs_rcu);$/;"	v
ovs_refcount	lib/ovs-atomic.h	/^struct ovs_refcount {$/;"	s
ovs_refcount_init	lib/ovs-atomic.h	/^ovs_refcount_init(struct ovs_refcount *refcount)$/;"	f
ovs_refcount_read	lib/ovs-atomic.h	/^ovs_refcount_read(const struct ovs_refcount *refcount_)$/;"	f
ovs_refcount_ref	lib/ovs-atomic.h	/^ovs_refcount_ref(struct ovs_refcount *refcount)$/;"	f
ovs_refcount_try_ref_rcu	lib/ovs-atomic.h	/^ovs_refcount_try_ref_rcu(struct ovs_refcount *refcount)$/;"	f
ovs_refcount_unref	lib/ovs-atomic.h	/^ovs_refcount_unref(struct ovs_refcount *refcount)$/;"	f
ovs_refcount_unref_relaxed	lib/ovs-atomic.h	/^ovs_refcount_unref_relaxed(struct ovs_refcount *refcount)$/;"	f
ovs_remote	ovn/controller/ovn-controller.c	/^static char *ovs_remote;$/;"	v	file:
ovs_retval_to_string	lib/util.c	/^ovs_retval_to_string(int retval)$/;"	f
ovs_retval_to_string	python/ovs/util.py	/^def ovs_retval_to_string(retval):$/;"	f
ovs_router_add	lib/ovs-router.c	/^ovs_router_add(struct unixctl_conn *conn, int argc,$/;"	f	file:
ovs_router_del	lib/ovs-router.c	/^ovs_router_del(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovs_router_entry	lib/ovs-router.c	/^struct ovs_router_entry {$/;"	s	file:
ovs_router_entry_cast	lib/ovs-router.c	/^ovs_router_entry_cast(const struct cls_rule *cr)$/;"	f	file:
ovs_router_flush	lib/ovs-router.c	/^ovs_router_flush(void)$/;"	f
ovs_router_init	lib/ovs-router.c	/^ovs_router_init(void)$/;"	f
ovs_router_insert	lib/ovs-router.c	/^ovs_router_insert(const struct in6_addr *ip_dst, uint8_t plen,$/;"	f
ovs_router_insert__	lib/ovs-router.c	/^ovs_router_insert__(uint8_t priority, const struct in6_addr *ip6_dst,$/;"	f	file:
ovs_router_lookup	lib/ovs-router.c	/^ovs_router_lookup(const struct in6_addr *ip6_dst, char output_bridge[],$/;"	f
ovs_router_lookup4	lib/ovs-router.c	/^ovs_router_lookup4(ovs_be32 ip_dst, char output_bridge[], ovs_be32 *gw)$/;"	f
ovs_router_lookup_cmd	lib/ovs-router.c	/^ovs_router_lookup_cmd(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovs_router_show	lib/ovs-router.c	/^ovs_router_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovs_rte_pktmbuf_init	lib/netdev-dpdk.c	/^ovs_rte_pktmbuf_init(struct rte_mempool *mp,$/;"	f	file:
ovs_rundir	lib/dirs.c	/^ovs_rundir(void)$/;"	f
ovs_rwlock	lib/ovs-thread.h	/^struct OVS_LOCKABLE ovs_rwlock {$/;"	s
ovs_rwlock_init	lib/ovs-thread.c	/^ovs_rwlock_init(const struct ovs_rwlock *l_)$/;"	f
ovs_rwlock_rdlock	lib/ovs-thread.h	100;"	d
ovs_rwlock_tryrdlock	lib/ovs-thread.h	105;"	d
ovs_rwlock_trywrlock	lib/ovs-thread.h	95;"	d
ovs_rwlock_wrlock	lib/ovs-thread.h	90;"	d
ovs_sample_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_sample_attr {$/;"	g
ovs_sample_attr	include/odp-netlink.h	/^enum ovs_sample_attr {$/;"	g
ovs_save	utilities/ovs-ctl	/^ovs_save () {$/;"	f
ovs_save	utilities/ovs-ctl.in	/^ovs_save () {$/;"	f
ovs_scan	lib/util.c	/^ovs_scan(const char *s, const char *format, ...)$/;"	f
ovs_scan__	lib/util.c	/^ovs_scan__(const char *s, int *n, const char *format, va_list *args)$/;"	f	file:
ovs_scan_len	lib/util.c	/^ovs_scan_len(const char *s, int *n, const char *format, ...)$/;"	f
ovs_set_program_name	include/openvswitch/util.h	29;"	d
ovs_set_program_name__	lib/util.c	/^ovs_set_program_name__(const char *argv0, const char *version, const char *date,$/;"	f
ovs_setenv	tests/system-kmod-testsuite	/^ovs_setenv() {$/;"	f
ovs_setenv	tests/system-userspace-testsuite	/^ovs_setenv() {$/;"	f
ovs_setenv	tests/testsuite	/^ovs_setenv() {$/;"	f
ovs_skb_cb	datapath/datapath.h	/^struct ovs_skb_cb {$/;"	s
ovs_skb_get_inner_protocol	datapath/linux/compat/gso.h	/^static inline __be16 ovs_skb_get_inner_protocol(struct sk_buff *skb)$/;"	f
ovs_skb_init_inner_protocol	datapath/linux/compat/gso.h	/^static inline void ovs_skb_init_inner_protocol(struct sk_buff *skb) {$/;"	f
ovs_skb_inner_transport_offset	datapath/linux/compat/gso.h	/^static inline int ovs_skb_inner_transport_offset(const struct sk_buff *skb)$/;"	f
ovs_skb_is_encapsulated	datapath/linux/compat/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(ovs_skb_is_encapsulated);$/;"	v
ovs_skb_is_encapsulated	datapath/linux/compat/ip_tunnels_core.c	/^bool ovs_skb_is_encapsulated(struct sk_buff *skb)$/;"	f
ovs_skb_is_encapsulated	datapath/linux/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(ovs_skb_is_encapsulated);$/;"	v
ovs_skb_is_encapsulated	datapath/linux/ip_tunnels_core.c	/^bool ovs_skb_is_encapsulated(struct sk_buff *skb)$/;"	f
ovs_skb_postpush_rcsum	datapath/vport.h	/^static inline void ovs_skb_postpush_rcsum(struct sk_buff *skb,$/;"	f
ovs_skb_set_inner_protocol	datapath/linux/compat/gso.h	/^static inline void ovs_skb_set_inner_protocol(struct sk_buff *skb,$/;"	f
ovs_snprintf	lib/stdio.c	/^ovs_snprintf(char *s, size_t n, const char *format, ... )$/;"	f
ovs_sock_create_kern	datapath/linux/compat/socket.c	/^int ovs_sock_create_kern(struct net *net, int family, int type, int protocol, struct socket **res)$/;"	f
ovs_sock_create_kern	datapath/linux/socket.c	/^int ovs_sock_create_kern(struct net *net, int family, int type, int protocol, struct socket **res)$/;"	f
ovs_sock_release	datapath/linux/compat/socket.c	/^void ovs_sock_release(struct socket *sock)$/;"	f
ovs_sock_release	datapath/linux/socket.c	/^void ovs_sock_release(struct socket *sock)$/;"	f
ovs_strerror	lib/util.c	/^ovs_strerror(int error)$/;"	f
ovs_strlcpy	lib/util.c	/^ovs_strlcpy(char *dst, const char *src, size_t size)$/;"	f
ovs_strzcpy	lib/util.c	/^ovs_strzcpy(char *dst, const char *src, size_t size)$/;"	f
ovs_stt_cleanup_module	datapath/linux/compat/stt.c	/^EXPORT_SYMBOL_GPL(ovs_stt_cleanup_module);$/;"	v
ovs_stt_cleanup_module	datapath/linux/compat/stt.c	/^void ovs_stt_cleanup_module(void)$/;"	f
ovs_stt_cleanup_module	datapath/linux/stt.c	/^EXPORT_SYMBOL_GPL(ovs_stt_cleanup_module);$/;"	v
ovs_stt_cleanup_module	datapath/linux/stt.c	/^void ovs_stt_cleanup_module(void)$/;"	f
ovs_stt_init_module	datapath/linux/compat/stt.c	/^EXPORT_SYMBOL_GPL(ovs_stt_init_module);$/;"	v
ovs_stt_init_module	datapath/linux/compat/stt.c	/^int ovs_stt_init_module(void)$/;"	f
ovs_stt_init_module	datapath/linux/stt.c	/^EXPORT_SYMBOL_GPL(ovs_stt_init_module);$/;"	v
ovs_stt_init_module	datapath/linux/stt.c	/^int ovs_stt_init_module(void)$/;"	f
ovs_stt_tnl_exit	datapath/linux/vport-stt.c	/^module_exit(ovs_stt_tnl_exit);$/;"	v
ovs_stt_tnl_exit	datapath/linux/vport-stt.c	/^static void __exit ovs_stt_tnl_exit(void)$/;"	f	file:
ovs_stt_tnl_exit	datapath/vport-stt.c	/^module_exit(ovs_stt_tnl_exit);$/;"	v
ovs_stt_tnl_exit	datapath/vport-stt.c	/^static void __exit ovs_stt_tnl_exit(void)$/;"	f	file:
ovs_stt_tnl_init	datapath/linux/vport-stt.c	/^module_init(ovs_stt_tnl_init);$/;"	v
ovs_stt_tnl_init	datapath/linux/vport-stt.c	/^static int __init ovs_stt_tnl_init(void)$/;"	f	file:
ovs_stt_tnl_init	datapath/vport-stt.c	/^module_init(ovs_stt_tnl_init);$/;"	v
ovs_stt_tnl_init	datapath/vport-stt.c	/^static int __init ovs_stt_tnl_init(void)$/;"	f	file:
ovs_stt_vport_ops	datapath/linux/vport-stt.c	/^static struct vport_ops ovs_stt_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_stt_vport_ops	datapath/linux/vport-stt.c	/^static struct vport_ops ovs_stt_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_stt_vport_ops	datapath/vport-stt.c	/^static struct vport_ops ovs_stt_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_stt_vport_ops	datapath/vport-stt.c	/^static struct vport_ops ovs_stt_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_sysconfdir	lib/dirs.c	/^ovs_sysconfdir(void)$/;"	f
ovs_thread	lib/ovs-thread.c	/^VLOG_DEFINE_THIS_MODULE(ovs_thread);$/;"	v
ovs_thread_create	lib/ovs-thread.c	/^ovs_thread_create(const char *name, void *(*start)(void *), void *arg)$/;"	f
ovs_thread_stats_next_bucket	lib/ovs-thread.c	/^ovs_thread_stats_next_bucket(const struct ovsthread_stats *stats, size_t i)$/;"	f
ovs_to_odp_ct_state	lib/odp-util.c	/^ovs_to_odp_ct_state(uint8_t state)$/;"	f	file:
ovs_to_odp_frag	lib/odp-util.c	/^ovs_to_odp_frag(uint8_t nw_frag, bool is_mask)$/;"	f	file:
ovs_tun_key_attr_lens	lib/odp-util.c	/^static const struct attr_len_tbl ovs_tun_key_attr_lens[OVS_TUNNEL_KEY_ATTR_MAX + 1] = {$/;"	v	typeref:struct:attr_len_tbl	file:
ovs_tun_key_attr_size	datapath/flow_netlink.c	/^size_t ovs_tun_key_attr_size(void)$/;"	f
ovs_tun_key_attr_size	datapath/linux/flow_netlink.c	/^size_t ovs_tun_key_attr_size(void)$/;"	f
ovs_tunnel_get_egress_info	datapath/linux/vport.c	/^EXPORT_SYMBOL_GPL(ovs_tunnel_get_egress_info);$/;"	v
ovs_tunnel_get_egress_info	datapath/linux/vport.c	/^int ovs_tunnel_get_egress_info(struct ovs_tunnel_info *egress_tun_info,$/;"	f
ovs_tunnel_get_egress_info	datapath/vport.c	/^EXPORT_SYMBOL_GPL(ovs_tunnel_get_egress_info);$/;"	v
ovs_tunnel_get_egress_info	datapath/vport.c	/^int ovs_tunnel_get_egress_info(struct ovs_tunnel_info *egress_tun_info,$/;"	f
ovs_tunnel_info	datapath/flow.h	/^struct ovs_tunnel_info {$/;"	s
ovs_tunnel_key_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_tunnel_key_attr {$/;"	g
ovs_tunnel_key_attr	include/odp-netlink.h	/^enum ovs_tunnel_key_attr {$/;"	g
ovs_tunnel_key_lens	datapath/flow_netlink.c	/^static const struct ovs_len_tbl ovs_tunnel_key_lens[OVS_TUNNEL_KEY_ATTR_MAX + 1] = {$/;"	v	typeref:struct:ovs_len_tbl	file:
ovs_tunnel_key_lens	datapath/linux/flow_netlink.c	/^static const struct ovs_len_tbl ovs_tunnel_key_lens[OVS_TUNNEL_KEY_ATTR_MAX + 1] = {$/;"	v	typeref:struct:ovs_len_tbl	file:
ovs_txn	ovn/controller/encaps.c	/^    struct ovsdb_idl_txn *ovs_txn;$/;"	m	struct:tunnel_ctx	typeref:struct:tunnel_ctx::ovsdb_idl_txn	file:
ovs_type	lib/netdev-windows.c	/^    uint32_t ovs_type;$/;"	m	struct:netdev_windows_netdev_info	file:
ovs_u128	include/openvswitch/types.h	/^} ovs_u128;$/;"	t	typeref:union:__anon61
ovs_u128_equals	lib/util.h	/^ovs_u128_equals(const ovs_u128 *a, const ovs_u128 *b)$/;"	f
ovs_u128_is_ones	lib/util.h	/^ovs_u128_is_ones(const ovs_u128 *val)$/;"	f
ovs_u128_is_zero	lib/util.h	/^ovs_u128_is_zero(const ovs_u128 *val)$/;"	f
ovs_udp_csum_gso	datapath/linux/compat/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(ovs_udp_csum_gso);$/;"	v
ovs_udp_csum_gso	datapath/linux/compat/udp_tunnel.c	/^void ovs_udp_csum_gso(struct sk_buff *skb)$/;"	f
ovs_udp_csum_gso	datapath/linux/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(ovs_udp_csum_gso);$/;"	v
ovs_udp_csum_gso	datapath/linux/udp_tunnel.c	/^void ovs_udp_csum_gso(struct sk_buff *skb)$/;"	f
ovs_udp_gso	datapath/linux/compat/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(ovs_udp_gso);$/;"	v
ovs_udp_gso	datapath/linux/compat/udp_tunnel.c	/^void ovs_udp_gso(struct sk_buff *skb)$/;"	f
ovs_udp_gso	datapath/linux/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(ovs_udp_gso);$/;"	v
ovs_udp_gso	datapath/linux/udp_tunnel.c	/^void ovs_udp_gso(struct sk_buff *skb)$/;"	f
ovs_unlock	datapath/datapath.c	/^void ovs_unlock(void)$/;"	f
ovs_unlock	datapath/linux/datapath.c	/^void ovs_unlock(void)$/;"	f
ovs_userspace_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_userspace_attr {$/;"	g
ovs_userspace_attr	include/odp-netlink.h	/^enum ovs_userspace_attr {$/;"	g
ovs_version	lib/vswitch-idl.h	/^	char *ovs_version;$/;"	m	struct:ovsrec_open_vswitch
ovs_vport_add	datapath/linux/vport.c	/^struct vport *ovs_vport_add(const struct vport_parms *parms)$/;"	f
ovs_vport_add	datapath/vport.c	/^struct vport *ovs_vport_add(const struct vport_parms *parms)$/;"	f
ovs_vport_alloc	datapath/linux/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_alloc);$/;"	v
ovs_vport_alloc	datapath/linux/vport.c	/^struct vport *ovs_vport_alloc(int priv_size, const struct vport_ops *ops,$/;"	f
ovs_vport_alloc	datapath/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_alloc);$/;"	v
ovs_vport_alloc	datapath/vport.c	/^struct vport *ovs_vport_alloc(int priv_size, const struct vport_ops *ops,$/;"	f
ovs_vport_attr	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_vport_attr {$/;"	g
ovs_vport_attr	include/odp-netlink.h	/^enum ovs_vport_attr {$/;"	g
ovs_vport_cmd	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_vport_cmd {$/;"	g
ovs_vport_cmd	include/odp-netlink.h	/^enum ovs_vport_cmd {$/;"	g
ovs_vport_cmd_alloc_info	datapath/datapath.c	/^static struct sk_buff *ovs_vport_cmd_alloc_info(void)$/;"	f	file:
ovs_vport_cmd_alloc_info	datapath/linux/datapath.c	/^static struct sk_buff *ovs_vport_cmd_alloc_info(void)$/;"	f	file:
ovs_vport_cmd_build_info	datapath/datapath.c	/^struct sk_buff *ovs_vport_cmd_build_info(struct vport *vport, u32 portid,$/;"	f
ovs_vport_cmd_build_info	datapath/linux/datapath.c	/^struct sk_buff *ovs_vport_cmd_build_info(struct vport *vport, u32 portid,$/;"	f
ovs_vport_cmd_del	datapath/datapath.c	/^static int ovs_vport_cmd_del(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_cmd_del	datapath/linux/datapath.c	/^static int ovs_vport_cmd_del(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_cmd_dump	datapath/datapath.c	/^static int ovs_vport_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)$/;"	f	file:
ovs_vport_cmd_dump	datapath/linux/datapath.c	/^static int ovs_vport_cmd_dump(struct sk_buff *skb, struct netlink_callback *cb)$/;"	f	file:
ovs_vport_cmd_fill_info	datapath/datapath.c	/^static int ovs_vport_cmd_fill_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
ovs_vport_cmd_fill_info	datapath/linux/datapath.c	/^static int ovs_vport_cmd_fill_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
ovs_vport_cmd_get	datapath/datapath.c	/^static int ovs_vport_cmd_get(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_cmd_get	datapath/linux/datapath.c	/^static int ovs_vport_cmd_get(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_cmd_new	datapath/datapath.c	/^static int ovs_vport_cmd_new(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_cmd_new	datapath/linux/datapath.c	/^static int ovs_vport_cmd_new(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_cmd_set	datapath/datapath.c	/^static int ovs_vport_cmd_set(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_cmd_set	datapath/linux/datapath.c	/^static int ovs_vport_cmd_set(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
ovs_vport_deferred_free	datapath/linux/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_deferred_free);$/;"	v
ovs_vport_deferred_free	datapath/linux/vport.c	/^void ovs_vport_deferred_free(struct vport *vport)$/;"	f
ovs_vport_deferred_free	datapath/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_deferred_free);$/;"	v
ovs_vport_deferred_free	datapath/vport.c	/^void ovs_vport_deferred_free(struct vport *vport)$/;"	f
ovs_vport_del	datapath/linux/vport.c	/^void ovs_vport_del(struct vport *vport)$/;"	f
ovs_vport_del	datapath/vport.c	/^void ovs_vport_del(struct vport *vport)$/;"	f
ovs_vport_exit	datapath/linux/vport.c	/^void ovs_vport_exit(void)$/;"	f
ovs_vport_exit	datapath/vport.c	/^void ovs_vport_exit(void)$/;"	f
ovs_vport_family	lib/dpif-netlink.c	/^static int ovs_vport_family;$/;"	v	file:
ovs_vport_find_upcall_portid	datapath/linux/vport.c	/^u32 ovs_vport_find_upcall_portid(const struct vport *vport, struct sk_buff *skb)$/;"	f
ovs_vport_find_upcall_portid	datapath/vport.c	/^u32 ovs_vport_find_upcall_portid(const struct vport *vport, struct sk_buff *skb)$/;"	f
ovs_vport_free	datapath/linux/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_free);$/;"	v
ovs_vport_free	datapath/linux/vport.c	/^void ovs_vport_free(struct vport *vport)$/;"	f
ovs_vport_free	datapath/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_free);$/;"	v
ovs_vport_free	datapath/vport.c	/^void ovs_vport_free(struct vport *vport)$/;"	f
ovs_vport_get_egress_tun_info	datapath/linux/vport.c	/^int ovs_vport_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f
ovs_vport_get_egress_tun_info	datapath/vport.c	/^int ovs_vport_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f
ovs_vport_get_options	datapath/linux/vport.c	/^int ovs_vport_get_options(const struct vport *vport, struct sk_buff *skb)$/;"	f
ovs_vport_get_options	datapath/vport.c	/^int ovs_vport_get_options(const struct vport *vport, struct sk_buff *skb)$/;"	f
ovs_vport_get_stats	datapath/linux/vport.c	/^void ovs_vport_get_stats(struct vport *vport, struct ovs_vport_stats *stats)$/;"	f
ovs_vport_get_stats	datapath/vport.c	/^void ovs_vport_get_stats(struct vport *vport, struct ovs_vport_stats *stats)$/;"	f
ovs_vport_get_upcall_portids	datapath/linux/vport.c	/^int ovs_vport_get_upcall_portids(const struct vport *vport,$/;"	f
ovs_vport_get_upcall_portids	datapath/vport.c	/^int ovs_vport_get_upcall_portids(const struct vport *vport,$/;"	f
ovs_vport_init	datapath/linux/vport.c	/^int ovs_vport_init(void)$/;"	f
ovs_vport_init	datapath/vport.c	/^int ovs_vport_init(void)$/;"	f
ovs_vport_locate	datapath/linux/vport.c	/^struct vport *ovs_vport_locate(const struct net *net, const char *name)$/;"	f
ovs_vport_locate	datapath/vport.c	/^struct vport *ovs_vport_locate(const struct net *net, const char *name)$/;"	f
ovs_vport_lookup	datapath/linux/vport.c	/^static struct vport_ops *ovs_vport_lookup(const struct vport_parms *parms)$/;"	f	file:
ovs_vport_lookup	datapath/vport.c	/^static struct vport_ops *ovs_vport_lookup(const struct vport_parms *parms)$/;"	f	file:
ovs_vport_mcgroup	lib/dpif-netlink.c	/^static unsigned int ovs_vport_mcgroup;$/;"	v	file:
ovs_vport_ops_register	datapath/linux/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_ops_register);$/;"	v
ovs_vport_ops_register	datapath/linux/vport.c	/^int ovs_vport_ops_register(struct vport_ops *ops)$/;"	f
ovs_vport_ops_register	datapath/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_ops_register);$/;"	v
ovs_vport_ops_register	datapath/vport.c	/^int ovs_vport_ops_register(struct vport_ops *ops)$/;"	f
ovs_vport_ops_unregister	datapath/linux/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_ops_unregister);$/;"	v
ovs_vport_ops_unregister	datapath/linux/vport.c	/^void ovs_vport_ops_unregister(struct vport_ops *ops)$/;"	f
ovs_vport_ops_unregister	datapath/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_ops_unregister);$/;"	v
ovs_vport_ops_unregister	datapath/vport.c	/^void ovs_vport_ops_unregister(struct vport_ops *ops)$/;"	f
ovs_vport_ovsl	datapath/datapath.h	/^static inline struct vport *ovs_vport_ovsl(const struct datapath *dp, int port_no)$/;"	f
ovs_vport_ovsl_rcu	datapath/datapath.h	/^static inline struct vport *ovs_vport_ovsl_rcu(const struct datapath *dp, int port_no)$/;"	f
ovs_vport_rcu	datapath/datapath.h	/^static inline struct vport *ovs_vport_rcu(const struct datapath *dp, int port_no)$/;"	f
ovs_vport_receive	datapath/linux/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_receive);$/;"	v
ovs_vport_receive	datapath/linux/vport.c	/^void ovs_vport_receive(struct vport *vport, struct sk_buff *skb,$/;"	f
ovs_vport_receive	datapath/vport.c	/^EXPORT_SYMBOL_GPL(ovs_vport_receive);$/;"	v
ovs_vport_receive	datapath/vport.c	/^void ovs_vport_receive(struct vport *vport, struct sk_buff *skb,$/;"	f
ovs_vport_record_error	datapath/linux/vport.c	/^static void ovs_vport_record_error(struct vport *vport,$/;"	f	file:
ovs_vport_record_error	datapath/vport.c	/^static void ovs_vport_record_error(struct vport *vport,$/;"	f	file:
ovs_vport_send	datapath/linux/vport.c	/^int ovs_vport_send(struct vport *vport, struct sk_buff *skb)$/;"	f
ovs_vport_send	datapath/vport.c	/^int ovs_vport_send(struct vport *vport, struct sk_buff *skb)$/;"	f
ovs_vport_set_options	datapath/linux/vport.c	/^int ovs_vport_set_options(struct vport *vport, struct nlattr *options)$/;"	f
ovs_vport_set_options	datapath/vport.c	/^int ovs_vport_set_options(struct vport *vport, struct nlattr *options)$/;"	f
ovs_vport_set_upcall_portids	datapath/linux/vport.c	/^int ovs_vport_set_upcall_portids(struct vport *vport, const struct nlattr *ids)$/;"	f
ovs_vport_set_upcall_portids	datapath/vport.c	/^int ovs_vport_set_upcall_portids(struct vport *vport, const struct nlattr *ids)$/;"	f
ovs_vport_stats	datapath/linux/compat/include/linux/openvswitch.h	/^struct ovs_vport_stats {$/;"	s
ovs_vport_stats	include/odp-netlink.h	/^struct ovs_vport_stats {$/;"	s
ovs_vport_type	datapath/linux/compat/include/linux/openvswitch.h	/^enum ovs_vport_type {$/;"	g
ovs_vport_type	include/odp-netlink.h	/^enum ovs_vport_type {$/;"	g
ovs_vsctl	debian/ifupdown.sh	/^ovs_vsctl() {$/;"	f
ovs_vsctl	tests/testsuite	/^ovs_vsctl () {$/;"	f
ovs_vsctl	utilities/ovs-ctl	/^ovs_vsctl () {$/;"	f
ovs_vsctl	utilities/ovs-ctl.in	/^ovs_vsctl () {$/;"	f
ovs_vsctl	utilities/ovs-docker	/^ovs_vsctl () {$/;"	f
ovs_vsctl	utilities/ovs-save	/^ovs_vsctl () {$/;"	f
ovs_vsctl	vtep/ovs-vtep	/^def ovs_vsctl(args):$/;"	f
ovs_vsctl_add_bridge	python/ovstest/vswitch.py	/^def ovs_vsctl_add_bridge(bridge):$/;"	f
ovs_vsctl_add_port_to_bridge	python/ovstest/vswitch.py	/^def ovs_vsctl_add_port_to_bridge(bridge, iface):$/;"	f
ovs_vsctl_del_bridge	python/ovstest/vswitch.py	/^def ovs_vsctl_del_bridge(bridge):$/;"	f
ovs_vsctl_del_pbridge	python/ovstest/vswitch.py	/^def ovs_vsctl_del_pbridge(bridge, iface):$/;"	f
ovs_vsctl_del_port_from_bridge	python/ovstest/vswitch.py	/^def ovs_vsctl_del_port_from_bridge(port):$/;"	f
ovs_vsctl_is_ovs_bridge	python/ovstest/vswitch.py	/^def ovs_vsctl_is_ovs_bridge(bridge):$/;"	f
ovs_vsctl_set	python/ovstest/vswitch.py	/^def ovs_vsctl_set(table, record, column, key, value):$/;"	f
ovs_vsnprintf	lib/stdio.c	/^ovs_vsnprintf(char *s, size_t n, const char *format, va_list args)$/;"	f
ovs_vswitchd_exit	vswitchd/ovs-vswitchd.c	/^ovs_vswitchd_exit(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovs_vswitchd_exit	vswitchd/ovs-vswitchd.c	/^static unixctl_cb_func ovs_vswitchd_exit;$/;"	v	file:
ovs_vxlan_ext_attr_lens	lib/odp-util.c	/^static const struct attr_len_tbl ovs_vxlan_ext_attr_lens[OVS_VXLAN_EXT_MAX + 1] = {$/;"	v	typeref:struct:attr_len_tbl	file:
ovs_vxlan_ext_key_lens	datapath/flow_netlink.c	/^static const struct ovs_len_tbl ovs_vxlan_ext_key_lens[OVS_VXLAN_EXT_MAX + 1] = {$/;"	v	typeref:struct:ovs_len_tbl	file:
ovs_vxlan_ext_key_lens	datapath/linux/flow_netlink.c	/^static const struct ovs_len_tbl ovs_vxlan_ext_key_lens[OVS_VXLAN_EXT_MAX + 1] = {$/;"	v	typeref:struct:ovs_len_tbl	file:
ovs_vxlan_opts	datapath/vport-vxlan.h	/^struct ovs_vxlan_opts {$/;"	s
ovs_vxlan_tnl_exit	datapath/linux/vport-vxlan.c	/^module_exit(ovs_vxlan_tnl_exit);$/;"	v
ovs_vxlan_tnl_exit	datapath/linux/vport-vxlan.c	/^static void __exit ovs_vxlan_tnl_exit(void)$/;"	f	file:
ovs_vxlan_tnl_exit	datapath/vport-vxlan.c	/^module_exit(ovs_vxlan_tnl_exit);$/;"	v
ovs_vxlan_tnl_exit	datapath/vport-vxlan.c	/^static void __exit ovs_vxlan_tnl_exit(void)$/;"	f	file:
ovs_vxlan_tnl_init	datapath/linux/vport-vxlan.c	/^module_init(ovs_vxlan_tnl_init);$/;"	v
ovs_vxlan_tnl_init	datapath/linux/vport-vxlan.c	/^static int __init ovs_vxlan_tnl_init(void)$/;"	f	file:
ovs_vxlan_tnl_init	datapath/vport-vxlan.c	/^module_init(ovs_vxlan_tnl_init);$/;"	v
ovs_vxlan_tnl_init	datapath/vport-vxlan.c	/^static int __init ovs_vxlan_tnl_init(void)$/;"	f	file:
ovs_vxlan_vport_ops	datapath/linux/vport-vxlan.c	/^static struct vport_ops ovs_vxlan_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_vxlan_vport_ops	datapath/linux/vport-vxlan.c	/^static struct vport_ops ovs_vxlan_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_vxlan_vport_ops	datapath/vport-vxlan.c	/^static struct vport_ops ovs_vxlan_vport_ops = {$/;"	v	typeref:struct:vport_ops	file:
ovs_vxlan_vport_ops	datapath/vport-vxlan.c	/^static struct vport_ops ovs_vxlan_vport_ops;$/;"	v	typeref:struct:vport_ops	file:
ovs_wait	tests/system-kmod-testsuite	/^ovs_wait () {$/;"	f
ovs_wait	tests/system-userspace-testsuite	/^ovs_wait () {$/;"	f
ovs_wait	tests/testsuite	/^ovs_wait () {$/;"	f
ovs_win_control_cmd	datapath-windows/include/OvsDpInterfaceExt.h	/^enum ovs_win_control_cmd {$/;"	g
ovs_win_netdev_attr	datapath-windows/include/OvsDpInterfaceExt.h	/^enum ovs_win_netdev_attr {$/;"	g
ovs_win_netdev_cmd	datapath-windows/include/OvsDpInterfaceExt.h	/^enum ovs_win_netdev_cmd {$/;"	g
ovs_win_netdev_family	lib/netdev-windows.c	/^static int ovs_win_netdev_family;$/;"	v	file:
ovs_win_netdev_sock	lib/netdev-windows.c	/^struct nl_sock *ovs_win_netdev_sock;$/;"	v	typeref:struct:nl_sock
ovsdb	ovsdb/ovsdb.h	/^struct ovsdb {$/;"	s
ovsdb_add_replica	ovsdb/ovsdb.c	/^ovsdb_add_replica(struct ovsdb *db, struct ovsdb_replica *r)$/;"	f
ovsdb_atom	lib/ovsdb-data.h	/^union ovsdb_atom {$/;"	u
ovsdb_atom_check_constraints	lib/ovsdb-data.c	/^ovsdb_atom_check_constraints(const union ovsdb_atom *atom,$/;"	f
ovsdb_atom_clone	lib/ovsdb-data.c	/^ovsdb_atom_clone(union ovsdb_atom *new, const union ovsdb_atom *old,$/;"	f
ovsdb_atom_compare_3way	lib/ovsdb-data.c	/^ovsdb_atom_compare_3way(const union ovsdb_atom *a,$/;"	f
ovsdb_atom_default	lib/ovsdb-data.c	/^ovsdb_atom_default(enum ovsdb_atomic_type type)$/;"	f
ovsdb_atom_destroy	lib/ovsdb-data.h	/^ovsdb_atom_destroy(union ovsdb_atom *atom, enum ovsdb_atomic_type type)$/;"	f
ovsdb_atom_equals	lib/ovsdb-data.h	/^static inline bool ovsdb_atom_equals(const union ovsdb_atom *a,$/;"	f
ovsdb_atom_from_json	lib/ovsdb-data.c	/^ovsdb_atom_from_json(union ovsdb_atom *atom,$/;"	f
ovsdb_atom_from_json__	lib/ovsdb-data.c	/^ovsdb_atom_from_json__(union ovsdb_atom *atom,$/;"	f	file:
ovsdb_atom_from_string	lib/ovsdb-data.c	/^ovsdb_atom_from_string(union ovsdb_atom *atom,$/;"	f
ovsdb_atom_from_string__	lib/ovsdb-data.c	/^ovsdb_atom_from_string__(union ovsdb_atom *atom,$/;"	f	file:
ovsdb_atom_hash	lib/ovsdb-data.c	/^ovsdb_atom_hash(const union ovsdb_atom *atom, enum ovsdb_atomic_type type,$/;"	f
ovsdb_atom_init_default	lib/ovsdb-data.c	/^ovsdb_atom_init_default(union ovsdb_atom *atom, enum ovsdb_atomic_type type)$/;"	f
ovsdb_atom_is_default	lib/ovsdb-data.c	/^ovsdb_atom_is_default(const union ovsdb_atom *atom,$/;"	f
ovsdb_atom_needs_destruction	lib/ovsdb-data.h	/^ovsdb_atom_needs_destruction(enum ovsdb_atomic_type type)$/;"	f
ovsdb_atom_parse_uuid	lib/ovsdb-data.c	/^ovsdb_atom_parse_uuid(struct uuid *uuid, const struct json *json,$/;"	f	file:
ovsdb_atom_swap	lib/ovsdb-data.c	/^ovsdb_atom_swap(union ovsdb_atom *a, union ovsdb_atom *b)$/;"	f
ovsdb_atom_to_bare	lib/ovsdb-data.c	/^ovsdb_atom_to_bare(const union ovsdb_atom *atom, enum ovsdb_atomic_type type,$/;"	f
ovsdb_atom_to_json	lib/ovsdb-data.c	/^ovsdb_atom_to_json(const union ovsdb_atom *atom, enum ovsdb_atomic_type type)$/;"	f
ovsdb_atom_to_string	lib/ovsdb-data.c	/^ovsdb_atom_to_string(const union ovsdb_atom *atom, enum ovsdb_atomic_type type,$/;"	f
ovsdb_atomic_type	lib/ovsdb-types.h	/^enum ovsdb_atomic_type {$/;"	g
ovsdb_atomic_type_from_json	lib/ovsdb-types.c	/^ovsdb_atomic_type_from_json(enum ovsdb_atomic_type *type,$/;"	f
ovsdb_atomic_type_from_string	lib/ovsdb-types.c	/^ovsdb_atomic_type_from_string(const char *string, enum ovsdb_atomic_type *type)$/;"	f
ovsdb_atomic_type_is_valid	lib/ovsdb-types.h	/^ovsdb_atomic_type_is_valid(enum ovsdb_atomic_type atomic_type)$/;"	f
ovsdb_atomic_type_to_json	lib/ovsdb-types.c	/^ovsdb_atomic_type_to_json(enum ovsdb_atomic_type type)$/;"	f
ovsdb_atomic_type_to_string	lib/ovsdb-types.c	/^ovsdb_atomic_type_to_string(enum ovsdb_atomic_type type)$/;"	f
ovsdb_base_type	lib/ovsdb-types.h	/^struct ovsdb_base_type {$/;"	s
ovsdb_base_type_clear_constraints	lib/ovsdb-types.c	/^ovsdb_base_type_clear_constraints(struct ovsdb_base_type *base)$/;"	f
ovsdb_base_type_clone	lib/ovsdb-types.c	/^ovsdb_base_type_clone(struct ovsdb_base_type *dst,$/;"	f
ovsdb_base_type_destroy	lib/ovsdb-types.c	/^ovsdb_base_type_destroy(struct ovsdb_base_type *base)$/;"	f
ovsdb_base_type_from_json	lib/ovsdb-types.c	/^ovsdb_base_type_from_json(struct ovsdb_base_type *base,$/;"	f
ovsdb_base_type_get_enum_type	lib/ovsdb-types.c	/^ovsdb_base_type_get_enum_type(enum ovsdb_atomic_type atomic_type)$/;"	f
ovsdb_base_type_has_constraints	lib/ovsdb-types.c	/^ovsdb_base_type_has_constraints(const struct ovsdb_base_type *base)$/;"	f
ovsdb_base_type_init	lib/ovsdb-types.c	/^ovsdb_base_type_init(struct ovsdb_base_type *base, enum ovsdb_atomic_type type)$/;"	f
ovsdb_base_type_is_ref	lib/ovsdb-types.h	/^ovsdb_base_type_is_ref(const struct ovsdb_base_type *base)$/;"	f
ovsdb_base_type_is_strong_ref	lib/ovsdb-types.h	/^ovsdb_base_type_is_strong_ref(const struct ovsdb_base_type *base)$/;"	f
ovsdb_base_type_is_valid	lib/ovsdb-types.c	/^ovsdb_base_type_is_valid(const struct ovsdb_base_type *base)$/;"	f
ovsdb_base_type_is_weak_ref	lib/ovsdb-types.h	/^ovsdb_base_type_is_weak_ref(const struct ovsdb_base_type *base)$/;"	f
ovsdb_base_type_to_json	lib/ovsdb-types.c	/^ovsdb_base_type_to_json(const struct ovsdb_base_type *base)$/;"	f
ovsdb_clause	ovsdb/condition.h	/^struct ovsdb_clause {$/;"	s
ovsdb_clause_evaluate	ovsdb/condition.c	/^ovsdb_clause_evaluate(const struct ovsdb_row *row,$/;"	f	file:
ovsdb_clause_free	ovsdb/condition.c	/^ovsdb_clause_free(struct ovsdb_clause *clause)$/;"	f	file:
ovsdb_clause_from_json	ovsdb/condition.c	/^ovsdb_clause_from_json(const struct ovsdb_table_schema *ts,$/;"	f	file:
ovsdb_clause_to_json	ovsdb/condition.c	/^ovsdb_clause_to_json(const struct ovsdb_clause *clause)$/;"	f	file:
ovsdb_client	ovsdb/ovsdb-client.c	/^VLOG_DEFINE_THIS_MODULE(ovsdb_client);$/;"	v
ovsdb_client_block	ovsdb/ovsdb-client.c	/^ovsdb_client_block(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_client_command	ovsdb/ovsdb-client.c	/^struct ovsdb_client_command {$/;"	s	file:
ovsdb_client_exit	ovsdb/ovsdb-client.c	/^ovsdb_client_exit(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_client_unblock	ovsdb/ovsdb-client.c	/^ovsdb_client_unblock(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_column	ovsdb/column.h	/^struct ovsdb_column {$/;"	s
ovsdb_column_clone	ovsdb/column.c	/^ovsdb_column_clone(const struct ovsdb_column *old)$/;"	f
ovsdb_column_create	ovsdb/column.c	/^ovsdb_column_create(const char *name,$/;"	f
ovsdb_column_destroy	ovsdb/column.c	/^ovsdb_column_destroy(struct ovsdb_column *column)$/;"	f
ovsdb_column_from_json	ovsdb/column.c	/^ovsdb_column_from_json(const struct json *json, const char *name,$/;"	f
ovsdb_column_set	ovsdb/column.h	/^struct ovsdb_column_set {$/;"	s
ovsdb_column_set_add	ovsdb/column.c	/^ovsdb_column_set_add(struct ovsdb_column_set *set,$/;"	f
ovsdb_column_set_add_all	ovsdb/column.c	/^ovsdb_column_set_add_all(struct ovsdb_column_set *set,$/;"	f
ovsdb_column_set_clone	ovsdb/column.c	/^ovsdb_column_set_clone(struct ovsdb_column_set *new,$/;"	f
ovsdb_column_set_contains	ovsdb/column.c	/^ovsdb_column_set_contains(const struct ovsdb_column_set *set,$/;"	f
ovsdb_column_set_destroy	ovsdb/column.c	/^ovsdb_column_set_destroy(struct ovsdb_column_set *set)$/;"	f
ovsdb_column_set_equals	ovsdb/column.c	/^ovsdb_column_set_equals(const struct ovsdb_column_set *a,$/;"	f
ovsdb_column_set_from_json	ovsdb/column.c	/^ovsdb_column_set_from_json(const struct json *json,$/;"	f
ovsdb_column_set_init	ovsdb/column.c	/^ovsdb_column_set_init(struct ovsdb_column_set *set)$/;"	f
ovsdb_column_set_to_json	ovsdb/column.c	/^ovsdb_column_set_to_json(const struct ovsdb_column_set *set)$/;"	f
ovsdb_column_set_to_string	ovsdb/column.c	/^ovsdb_column_set_to_string(const struct ovsdb_column_set *set)$/;"	f
ovsdb_column_to_json	ovsdb/column.c	/^ovsdb_column_to_json(const struct ovsdb_column *column)$/;"	f
ovsdb_condition	ovsdb/condition.h	/^struct ovsdb_condition {$/;"	s
ovsdb_condition_destroy	ovsdb/condition.c	/^ovsdb_condition_destroy(struct ovsdb_condition *cnd)$/;"	f
ovsdb_condition_evaluate	ovsdb/condition.c	/^ovsdb_condition_evaluate(const struct ovsdb_row *row,$/;"	f
ovsdb_condition_from_json	ovsdb/condition.c	/^ovsdb_condition_from_json(const struct ovsdb_table_schema *ts,$/;"	f
ovsdb_condition_to_json	ovsdb/condition.c	/^ovsdb_condition_to_json(const struct ovsdb_condition *cnd)$/;"	f
ovsdb_create	ovsdb/ovsdb.c	/^ovsdb_create(struct ovsdb_schema *schema)$/;"	f
ovsdb_datum	lib/ovsdb-data.h	/^struct ovsdb_datum {$/;"	s
ovsdb_datum_add_unsafe	lib/ovsdb-data.c	/^ovsdb_datum_add_unsafe(struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_check_constraints	lib/ovsdb-data.c	/^ovsdb_datum_check_constraints(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_clone	lib/ovsdb-data.c	/^ovsdb_datum_clone(struct ovsdb_datum *new, const struct ovsdb_datum *old,$/;"	f
ovsdb_datum_compare_3way	lib/ovsdb-data.c	/^ovsdb_datum_compare_3way(const struct ovsdb_datum *a,$/;"	f
ovsdb_datum_conforms_to_type	lib/ovsdb-data.h	/^ovsdb_datum_conforms_to_type(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_default	lib/ovsdb-data.c	/^ovsdb_datum_default(const struct ovsdb_type *type)$/;"	f
ovsdb_datum_destroy	lib/ovsdb-data.c	/^ovsdb_datum_destroy(struct ovsdb_datum *datum, const struct ovsdb_type *type)$/;"	f
ovsdb_datum_equals	lib/ovsdb-data.c	/^ovsdb_datum_equals(const struct ovsdb_datum *a,$/;"	f
ovsdb_datum_excludes_all	lib/ovsdb-data.c	/^ovsdb_datum_excludes_all(const struct ovsdb_datum *a,$/;"	f
ovsdb_datum_find	lib/ovsdb-data.c	/^ovsdb_datum_find(const struct ovsdb_datum *a, int i,$/;"	f	file:
ovsdb_datum_find_key	lib/ovsdb-data.c	/^ovsdb_datum_find_key(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_find_key_value	lib/ovsdb-data.c	/^ovsdb_datum_find_key_value(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_from_json	lib/ovsdb-data.c	/^ovsdb_datum_from_json(struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_from_json__	lib/ovsdb-data.c	/^ovsdb_datum_from_json__(struct ovsdb_datum *datum,$/;"	f	file:
ovsdb_datum_from_smap	lib/ovsdb-data.c	/^ovsdb_datum_from_smap(struct ovsdb_datum *datum, struct smap *smap)$/;"	f
ovsdb_datum_from_string	lib/ovsdb-data.c	/^ovsdb_datum_from_string(struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_hash	lib/ovsdb-data.c	/^ovsdb_datum_hash(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_includes_all	lib/ovsdb-data.c	/^ovsdb_datum_includes_all(const struct ovsdb_datum *a,$/;"	f
ovsdb_datum_init_default	lib/ovsdb-data.c	/^ovsdb_datum_init_default(struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_init_empty	lib/ovsdb-data.c	/^ovsdb_datum_init_empty(struct ovsdb_datum *datum)$/;"	f
ovsdb_datum_is_default	lib/ovsdb-data.c	/^ovsdb_datum_is_default(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_reallocate	lib/ovsdb-data.c	/^ovsdb_datum_reallocate(struct ovsdb_datum *a, const struct ovsdb_type *type,$/;"	f	file:
ovsdb_datum_remove_unsafe	lib/ovsdb-data.c	/^ovsdb_datum_remove_unsafe(struct ovsdb_datum *datum, size_t idx,$/;"	f
ovsdb_datum_sort	lib/ovsdb-data.c	/^ovsdb_datum_sort(struct ovsdb_datum *datum, enum ovsdb_atomic_type key_type)$/;"	f
ovsdb_datum_sort__	lib/ovsdb-data.c	/^ovsdb_datum_sort__(struct ovsdb_datum *datum, enum ovsdb_atomic_type key_type,$/;"	f	file:
ovsdb_datum_sort_assert	lib/ovsdb-data.c	/^ovsdb_datum_sort_assert(struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_sort_cbdata	lib/ovsdb-data.c	/^struct ovsdb_datum_sort_cbdata {$/;"	s	file:
ovsdb_datum_sort_compare_cb	lib/ovsdb-data.c	/^ovsdb_datum_sort_compare_cb(size_t a, size_t b, void *cbdata_)$/;"	f	file:
ovsdb_datum_sort_swap_cb	lib/ovsdb-data.c	/^ovsdb_datum_sort_swap_cb(size_t a, size_t b, void *cbdata_)$/;"	f	file:
ovsdb_datum_sort_unique	lib/ovsdb-data.c	/^ovsdb_datum_sort_unique(struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_subtract	lib/ovsdb-data.c	/^ovsdb_datum_subtract(struct ovsdb_datum *a, const struct ovsdb_type *a_type,$/;"	f
ovsdb_datum_swap	lib/ovsdb-data.c	/^ovsdb_datum_swap(struct ovsdb_datum *a, struct ovsdb_datum *b)$/;"	f
ovsdb_datum_to_bare	lib/ovsdb-data.c	/^ovsdb_datum_to_bare(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_to_json	lib/ovsdb-data.c	/^ovsdb_datum_to_json(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_to_string	lib/ovsdb-data.c	/^ovsdb_datum_to_string(const struct ovsdb_datum *datum,$/;"	f
ovsdb_datum_union	lib/ovsdb-data.c	/^ovsdb_datum_union(struct ovsdb_datum *a, const struct ovsdb_datum *b,$/;"	f
ovsdb_destroy	ovsdb/ovsdb.c	/^ovsdb_destroy(struct ovsdb *db)$/;"	f
ovsdb_error	lib/ovsdb-error.c	/^VLOG_DEFINE_THIS_MODULE(ovsdb_error);$/;"	v
ovsdb_error	lib/ovsdb-error.c	/^ovsdb_error(const char *tag, const char *details, ...)$/;"	f
ovsdb_error	lib/ovsdb-error.c	/^struct ovsdb_error {$/;"	s	file:
ovsdb_error_assert	lib/ovsdb-error.c	/^ovsdb_error_assert(struct ovsdb_error *error)$/;"	f
ovsdb_error_clone	lib/ovsdb-error.c	/^ovsdb_error_clone(const struct ovsdb_error *old)$/;"	f
ovsdb_error_destroy	lib/ovsdb-error.c	/^ovsdb_error_destroy(struct ovsdb_error *error)$/;"	f
ovsdb_error_get_tag	lib/ovsdb-error.c	/^ovsdb_error_get_tag(const struct ovsdb_error *error)$/;"	f
ovsdb_error_to_json	lib/ovsdb-error.c	/^ovsdb_error_to_json(const struct ovsdb_error *error)$/;"	f
ovsdb_error_to_string	lib/ovsdb-error.c	/^ovsdb_error_to_string(const struct ovsdb_error *error)$/;"	f
ovsdb_error_valist	lib/ovsdb-error.c	/^ovsdb_error_valist(const char *tag, const char *details, va_list args)$/;"	f	file:
ovsdb_escape	ovsdb/ovsdb-idlc	/^def ovsdb_escape(string):$/;"	f
ovsdb_execute	ovsdb/execution.c	/^ovsdb_execute(struct ovsdb *db, const struct ovsdb_session *session,$/;"	f
ovsdb_execute_abort	ovsdb/execution.c	/^ovsdb_execute_abort(struct ovsdb_execution *x OVS_UNUSED,$/;"	f	file:
ovsdb_execute_abort	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_abort;$/;"	v	file:
ovsdb_execute_assert	ovsdb/execution.c	/^ovsdb_execute_assert(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_assert	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_assert;$/;"	v	file:
ovsdb_execute_comment	ovsdb/execution.c	/^ovsdb_execute_comment(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_comment	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_comment;$/;"	v	file:
ovsdb_execute_commit	ovsdb/execution.c	/^ovsdb_execute_commit(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_commit	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_commit;$/;"	v	file:
ovsdb_execute_delete	ovsdb/execution.c	/^ovsdb_execute_delete(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_delete	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_delete;$/;"	v	file:
ovsdb_execute_insert	ovsdb/execution.c	/^ovsdb_execute_insert(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_insert	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_insert;$/;"	v	file:
ovsdb_execute_mutate	ovsdb/execution.c	/^ovsdb_execute_mutate(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_mutate	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_mutate;$/;"	v	file:
ovsdb_execute_select	ovsdb/execution.c	/^ovsdb_execute_select(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_select	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_select;$/;"	v	file:
ovsdb_execute_update	ovsdb/execution.c	/^ovsdb_execute_update(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_update	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_update;$/;"	v	file:
ovsdb_execute_wait	ovsdb/execution.c	/^ovsdb_execute_wait(struct ovsdb_execution *x, struct ovsdb_parser *parser,$/;"	f	file:
ovsdb_execute_wait	ovsdb/execution.c	/^static ovsdb_operation_executor ovsdb_execute_wait;$/;"	v	file:
ovsdb_execute_wait_query_cb	ovsdb/execution.c	/^ovsdb_execute_wait_query_cb(const struct ovsdb_row *row, void *aux_)$/;"	f	file:
ovsdb_execution	ovsdb/execution.c	/^struct ovsdb_execution {$/;"	s	file:
ovsdb_file	ovsdb/file.c	/^VLOG_DEFINE_THIS_MODULE(ovsdb_file);$/;"	v
ovsdb_file	ovsdb/file.c	/^struct ovsdb_file {$/;"	s	file:
ovsdb_file_cast	ovsdb/file.c	/^ovsdb_file_cast(struct ovsdb_replica *replica)$/;"	f	file:
ovsdb_file_change_cb	ovsdb/file.c	/^ovsdb_file_change_cb(const struct ovsdb_row *old,$/;"	f	file:
ovsdb_file_class	ovsdb/file.c	/^static const struct ovsdb_replica_class ovsdb_file_class = {$/;"	v	typeref:struct:ovsdb_replica_class	file:
ovsdb_file_class	ovsdb/file.c	/^static const struct ovsdb_replica_class ovsdb_file_class;$/;"	v	typeref:struct:ovsdb_replica_class	file:
ovsdb_file_commit	ovsdb/file.c	/^ovsdb_file_commit(struct ovsdb_replica *replica,$/;"	f	file:
ovsdb_file_compact	ovsdb/file.c	/^ovsdb_file_compact(struct ovsdb_file *file)$/;"	f
ovsdb_file_create	ovsdb/file.c	/^ovsdb_file_create(struct ovsdb *db, struct ovsdb_log *log,$/;"	f	file:
ovsdb_file_destroy	ovsdb/file.c	/^ovsdb_file_destroy(struct ovsdb_replica *replica)$/;"	f	file:
ovsdb_file_open	ovsdb/file.c	/^ovsdb_file_open(const char *file_name, bool read_only,$/;"	f
ovsdb_file_open__	ovsdb/file.c	/^ovsdb_file_open__(const char *file_name,$/;"	f	file:
ovsdb_file_open_as_schema	ovsdb/file.c	/^ovsdb_file_open_as_schema(const char *file_name,$/;"	f
ovsdb_file_open_log	ovsdb/file.c	/^ovsdb_file_open_log(const char *file_name, enum ovsdb_log_open_mode open_mode,$/;"	f	file:
ovsdb_file_read_schema	ovsdb/file.c	/^ovsdb_file_read_schema(const char *file_name, struct ovsdb_schema **schemap)$/;"	f
ovsdb_file_save_copy	ovsdb/file.c	/^ovsdb_file_save_copy(const char *file_name, int locking,$/;"	f
ovsdb_file_save_copy__	ovsdb/file.c	/^ovsdb_file_save_copy__(const char *file_name, int locking,$/;"	f	file:
ovsdb_file_txn	ovsdb/file.c	/^struct ovsdb_file_txn {$/;"	s	file:
ovsdb_file_txn_add_row	ovsdb/file.c	/^ovsdb_file_txn_add_row(struct ovsdb_file_txn *ftxn,$/;"	f	file:
ovsdb_file_txn_commit	ovsdb/file.c	/^ovsdb_file_txn_commit(struct json *json, const char *comment,$/;"	f	file:
ovsdb_file_txn_from_json	ovsdb/file.c	/^ovsdb_file_txn_from_json(struct ovsdb *db, const struct json *json,$/;"	f	file:
ovsdb_file_txn_init	ovsdb/file.c	/^ovsdb_file_txn_init(struct ovsdb_file_txn *ftxn)$/;"	f	file:
ovsdb_file_txn_row_from_json	ovsdb/file.c	/^ovsdb_file_txn_row_from_json(struct ovsdb_txn *txn, struct ovsdb_table *table,$/;"	f	file:
ovsdb_file_txn_table_from_json	ovsdb/file.c	/^ovsdb_file_txn_table_from_json(struct ovsdb_txn *txn,$/;"	f	file:
ovsdb_file_update_row_from_json	ovsdb/file.c	/^ovsdb_file_update_row_from_json(struct ovsdb_row *row, bool converting,$/;"	f	file:
ovsdb_function	ovsdb/condition.h	/^enum ovsdb_function {$/;"	g
ovsdb_function_from_string	ovsdb/condition.c	/^ovsdb_function_from_string(const char *name, enum ovsdb_function *function)$/;"	f
ovsdb_function_to_string	ovsdb/condition.c	/^ovsdb_function_to_string(enum ovsdb_function function)$/;"	f
ovsdb_get_memory_usage	ovsdb/ovsdb.c	/^ovsdb_get_memory_usage(const struct ovsdb *db, struct simap *usage)$/;"	f
ovsdb_get_table	ovsdb/ovsdb.c	/^ovsdb_get_table(const struct ovsdb *db, const char *name)$/;"	f
ovsdb_idl	lib/ovsdb-idl.c	/^VLOG_DEFINE_THIS_MODULE(ovsdb_idl);$/;"	v
ovsdb_idl	lib/ovsdb-idl.c	/^struct ovsdb_idl {$/;"	s	file:
ovsdb_idl_add_column	lib/ovsdb-idl.c	/^ovsdb_idl_add_column(struct ovsdb_idl *idl,$/;"	f
ovsdb_idl_add_table	lib/ovsdb-idl.c	/^ovsdb_idl_add_table(struct ovsdb_idl *idl,$/;"	f
ovsdb_idl_arc	lib/ovsdb-idl.c	/^struct ovsdb_idl_arc {$/;"	s	file:
ovsdb_idl_class	lib/ovsdb-idl-provider.h	/^struct ovsdb_idl_class {$/;"	s
ovsdb_idl_clear	lib/ovsdb-idl.c	/^ovsdb_idl_clear(struct ovsdb_idl *idl)$/;"	f	file:
ovsdb_idl_column	lib/ovsdb-idl-provider.h	/^struct ovsdb_idl_column {$/;"	s
ovsdb_idl_create	lib/ovsdb-idl.c	/^ovsdb_idl_create(const char *remote, const struct ovsdb_idl_class *class,$/;"	f
ovsdb_idl_delete_row	lib/ovsdb-idl.c	/^ovsdb_idl_delete_row(struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_destroy	lib/ovsdb-idl.c	/^ovsdb_idl_destroy(struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_enable_reconnect	lib/ovsdb-idl.c	/^ovsdb_idl_enable_reconnect(struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_first_row	lib/ovsdb-idl.c	/^ovsdb_idl_first_row(const struct ovsdb_idl *idl,$/;"	f
ovsdb_idl_force_reconnect	lib/ovsdb-idl.c	/^ovsdb_idl_force_reconnect(struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_get	lib/ovsdb-idl.c	/^ovsdb_idl_get(const struct ovsdb_idl_row *row,$/;"	f
ovsdb_idl_get_initial_snapshot	lib/ovsdb-idl.c	/^ovsdb_idl_get_initial_snapshot(struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_get_last_error	lib/ovsdb-idl.c	/^ovsdb_idl_get_last_error(const struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_get_mode	lib/ovsdb-idl.c	/^ovsdb_idl_get_mode(struct ovsdb_idl *idl,$/;"	f	file:
ovsdb_idl_get_row	lib/ovsdb-idl.c	/^ovsdb_idl_get_row(struct ovsdb_idl_table *table, const struct uuid *uuid)$/;"	f	file:
ovsdb_idl_get_row_arc	lib/ovsdb-idl.c	/^ovsdb_idl_get_row_arc(struct ovsdb_idl_row *src,$/;"	f
ovsdb_idl_get_row_for_uuid	lib/ovsdb-idl.c	/^ovsdb_idl_get_row_for_uuid(const struct ovsdb_idl *idl,$/;"	f
ovsdb_idl_get_seqno	lib/ovsdb-idl.c	/^ovsdb_idl_get_seqno(const struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_has_ever_connected	lib/ovsdb-idl.c	/^ovsdb_idl_has_ever_connected(const struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_has_lock	lib/ovsdb-idl.c	/^ovsdb_idl_has_lock(const struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_insert_row	lib/ovsdb-idl.c	/^ovsdb_idl_insert_row(struct ovsdb_idl_row *row, const struct json *row_json)$/;"	f	file:
ovsdb_idl_is_alive	lib/ovsdb-idl.c	/^ovsdb_idl_is_alive(const struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_is_lock_contended	lib/ovsdb-idl.c	/^ovsdb_idl_is_lock_contended(const struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_is_mutable	lib/ovsdb-idl.c	/^ovsdb_idl_is_mutable(const struct ovsdb_idl_row *row,$/;"	f
ovsdb_idl_loop	lib/ovsdb-idl.h	/^struct ovsdb_idl_loop {$/;"	s
ovsdb_idl_loop_commit_and_wait	lib/ovsdb-idl.c	/^ovsdb_idl_loop_commit_and_wait(struct ovsdb_idl_loop *loop)$/;"	f
ovsdb_idl_loop_destroy	lib/ovsdb-idl.c	/^ovsdb_idl_loop_destroy(struct ovsdb_idl_loop *loop)$/;"	f
ovsdb_idl_loop_run	lib/ovsdb-idl.c	/^ovsdb_idl_loop_run(struct ovsdb_idl_loop *loop)$/;"	f
ovsdb_idl_modify_row	lib/ovsdb-idl.c	/^ovsdb_idl_modify_row(struct ovsdb_idl_row *row, const struct json *row_json)$/;"	f	file:
ovsdb_idl_next_row	lib/ovsdb-idl.c	/^ovsdb_idl_next_row(const struct ovsdb_idl_row *row)$/;"	f
ovsdb_idl_omit	lib/ovsdb-idl.c	/^ovsdb_idl_omit(struct ovsdb_idl *idl, const struct ovsdb_idl_column *column)$/;"	f
ovsdb_idl_omit_alert	lib/ovsdb-idl.c	/^ovsdb_idl_omit_alert(struct ovsdb_idl *idl,$/;"	f
ovsdb_idl_parse_lock_notify	lib/ovsdb-idl.c	/^ovsdb_idl_parse_lock_notify(struct ovsdb_idl *idl,$/;"	f	file:
ovsdb_idl_parse_lock_reply	lib/ovsdb-idl.c	/^ovsdb_idl_parse_lock_reply(struct ovsdb_idl *idl, const struct json *result)$/;"	f	file:
ovsdb_idl_parse_update	lib/ovsdb-idl.c	/^ovsdb_idl_parse_update(struct ovsdb_idl *idl, const struct json *table_updates)$/;"	f	file:
ovsdb_idl_parse_update__	lib/ovsdb-idl.c	/^ovsdb_idl_parse_update__(struct ovsdb_idl *idl,$/;"	f	file:
ovsdb_idl_process_update	lib/ovsdb-idl.c	/^ovsdb_idl_process_update(struct ovsdb_idl_table *table,$/;"	f	file:
ovsdb_idl_read	lib/ovsdb-idl.c	/^ovsdb_idl_read(const struct ovsdb_idl_row *row,$/;"	f
ovsdb_idl_row	lib/ovsdb-idl-provider.h	/^struct ovsdb_idl_row {$/;"	s
ovsdb_idl_row_clear_arcs	lib/ovsdb-idl.c	/^ovsdb_idl_row_clear_arcs(struct ovsdb_idl_row *row, bool destroy_dsts)$/;"	f	file:
ovsdb_idl_row_clear_new	lib/ovsdb-idl.c	/^ovsdb_idl_row_clear_new(struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_clear_old	lib/ovsdb-idl.c	/^ovsdb_idl_row_clear_old(struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_create	lib/ovsdb-idl.c	/^ovsdb_idl_row_create(struct ovsdb_idl_table *table, const struct uuid *uuid)$/;"	f	file:
ovsdb_idl_row_create__	lib/ovsdb-idl.c	/^ovsdb_idl_row_create__(const struct ovsdb_idl_table_class *class)$/;"	f	file:
ovsdb_idl_row_destroy	lib/ovsdb-idl.c	/^ovsdb_idl_row_destroy(struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_exists	lib/ovsdb-idl.c	/^ovsdb_idl_row_exists(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_is_orphan	lib/ovsdb-idl.c	/^ovsdb_idl_row_is_orphan(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_is_synthetic	lib/ovsdb-idl.c	/^ovsdb_idl_row_is_synthetic(const struct ovsdb_idl_row *row)$/;"	f
ovsdb_idl_row_parse	lib/ovsdb-idl.c	/^ovsdb_idl_row_parse(struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_reparse_backrefs	lib/ovsdb-idl.c	/^ovsdb_idl_row_reparse_backrefs(struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_unparse	lib/ovsdb-idl.c	/^ovsdb_idl_row_unparse(struct ovsdb_idl_row *row)$/;"	f	file:
ovsdb_idl_row_update	lib/ovsdb-idl.c	/^ovsdb_idl_row_update(struct ovsdb_idl_row *row, const struct json *row_json)$/;"	f	file:
ovsdb_idl_run	lib/ovsdb-idl.c	/^ovsdb_idl_run(struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_send_lock_request	lib/ovsdb-idl.c	/^ovsdb_idl_send_lock_request(struct ovsdb_idl *idl)$/;"	f	file:
ovsdb_idl_send_lock_request__	lib/ovsdb-idl.c	/^ovsdb_idl_send_lock_request__(struct ovsdb_idl *idl, const char *method,$/;"	f	file:
ovsdb_idl_send_monitor_request	lib/ovsdb-idl.c	/^ovsdb_idl_send_monitor_request(struct ovsdb_idl *idl,$/;"	f	file:
ovsdb_idl_send_schema_request	lib/ovsdb-idl.c	/^ovsdb_idl_send_schema_request(struct ovsdb_idl *idl)$/;"	f	file:
ovsdb_idl_send_unlock_request	lib/ovsdb-idl.c	/^ovsdb_idl_send_unlock_request(struct ovsdb_idl *idl)$/;"	f	file:
ovsdb_idl_set_lock	lib/ovsdb-idl.c	/^ovsdb_idl_set_lock(struct ovsdb_idl *idl, const char *lock_name)$/;"	f
ovsdb_idl_state	lib/ovsdb-idl.c	/^enum ovsdb_idl_state {$/;"	g	file:
ovsdb_idl_table	lib/ovsdb-idl-provider.h	/^struct ovsdb_idl_table {$/;"	s
ovsdb_idl_table_class	lib/ovsdb-idl-provider.h	/^struct ovsdb_idl_table_class {$/;"	s
ovsdb_idl_table_from_class	lib/ovsdb-idl.c	/^ovsdb_idl_table_from_class(const struct ovsdb_idl *idl,$/;"	f	file:
ovsdb_idl_txn	lib/ovsdb-idl.c	/^struct ovsdb_idl_txn {$/;"	s	file:
ovsdb_idl_txn_abort	lib/ovsdb-idl.c	/^ovsdb_idl_txn_abort(struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_abort_all	lib/ovsdb-idl.c	/^ovsdb_idl_txn_abort_all(struct ovsdb_idl *idl)$/;"	f	file:
ovsdb_idl_txn_add_comment	lib/ovsdb-idl.c	/^ovsdb_idl_txn_add_comment(struct ovsdb_idl_txn *txn, const char *s, ...)$/;"	f
ovsdb_idl_txn_commit	lib/ovsdb-idl.c	/^ovsdb_idl_txn_commit(struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_commit_block	lib/ovsdb-idl.c	/^ovsdb_idl_txn_commit_block(struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_complete	lib/ovsdb-idl.c	/^ovsdb_idl_txn_complete(struct ovsdb_idl_txn *txn,$/;"	f	file:
ovsdb_idl_txn_create	lib/ovsdb-idl.c	/^ovsdb_idl_txn_create(struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_txn_delete	lib/ovsdb-idl.c	/^ovsdb_idl_txn_delete(const struct ovsdb_idl_row *row_)$/;"	f
ovsdb_idl_txn_destroy	lib/ovsdb-idl.c	/^ovsdb_idl_txn_destroy(struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_disassemble	lib/ovsdb-idl.c	/^ovsdb_idl_txn_disassemble(struct ovsdb_idl_txn *txn)$/;"	f	file:
ovsdb_idl_txn_find	lib/ovsdb-idl.c	/^ovsdb_idl_txn_find(struct ovsdb_idl *idl, const struct json *id)$/;"	f	file:
ovsdb_idl_txn_get	lib/ovsdb-idl.c	/^ovsdb_idl_txn_get(const struct ovsdb_idl_row *row)$/;"	f
ovsdb_idl_txn_get_error	lib/ovsdb-idl.c	/^ovsdb_idl_txn_get_error(const struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_get_idl	lib/ovsdb-idl.c	/^ovsdb_idl_txn_get_idl (struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_get_increment_new_value	lib/ovsdb-idl.c	/^ovsdb_idl_txn_get_increment_new_value(const struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_get_insert_uuid	lib/ovsdb-idl.c	/^ovsdb_idl_txn_get_insert_uuid(const struct ovsdb_idl_txn *txn,$/;"	f
ovsdb_idl_txn_get_row	lib/ovsdb-idl.c	/^ovsdb_idl_txn_get_row(const struct ovsdb_idl_txn *txn, const struct uuid *uuid)$/;"	f	file:
ovsdb_idl_txn_increment	lib/ovsdb-idl.c	/^ovsdb_idl_txn_increment(struct ovsdb_idl_txn *txn,$/;"	f
ovsdb_idl_txn_insert	lib/ovsdb-idl.c	/^ovsdb_idl_txn_insert(struct ovsdb_idl_txn *txn,$/;"	f
ovsdb_idl_txn_insert	lib/ovsdb-idl.c	/^struct ovsdb_idl_txn_insert {$/;"	s	file:
ovsdb_idl_txn_process_inc_reply	lib/ovsdb-idl.c	/^ovsdb_idl_txn_process_inc_reply(struct ovsdb_idl_txn *txn,$/;"	f	file:
ovsdb_idl_txn_process_insert_reply	lib/ovsdb-idl.c	/^ovsdb_idl_txn_process_insert_reply(struct ovsdb_idl_txn_insert *insert,$/;"	f	file:
ovsdb_idl_txn_process_reply	lib/ovsdb-idl.c	/^ovsdb_idl_txn_process_reply(struct ovsdb_idl *idl,$/;"	f	file:
ovsdb_idl_txn_set_dry_run	lib/ovsdb-idl.c	/^ovsdb_idl_txn_set_dry_run(struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_set_error_json	lib/ovsdb-idl.c	/^ovsdb_idl_txn_set_error_json(struct ovsdb_idl_txn *txn,$/;"	f	file:
ovsdb_idl_txn_status	lib/ovsdb-idl.h	/^enum ovsdb_idl_txn_status {$/;"	g
ovsdb_idl_txn_status_to_string	lib/ovsdb-idl.c	/^ovsdb_idl_txn_status_to_string(enum ovsdb_idl_txn_status status)$/;"	f
ovsdb_idl_txn_verify	lib/ovsdb-idl.c	/^ovsdb_idl_txn_verify(const struct ovsdb_idl_row *row_,$/;"	f
ovsdb_idl_txn_wait	lib/ovsdb-idl.c	/^ovsdb_idl_txn_wait(const struct ovsdb_idl_txn *txn)$/;"	f
ovsdb_idl_txn_write	lib/ovsdb-idl.c	/^ovsdb_idl_txn_write(const struct ovsdb_idl_row *row,$/;"	f
ovsdb_idl_txn_write__	lib/ovsdb-idl.c	/^ovsdb_idl_txn_write__(const struct ovsdb_idl_row *row_,$/;"	f	file:
ovsdb_idl_txn_write_clone	lib/ovsdb-idl.c	/^ovsdb_idl_txn_write_clone(const struct ovsdb_idl_row *row,$/;"	f
ovsdb_idl_update_has_lock	lib/ovsdb-idl.c	/^ovsdb_idl_update_has_lock(struct ovsdb_idl *idl, bool new_has_lock)$/;"	f	file:
ovsdb_idl_verify_write_only	lib/ovsdb-idl.c	/^ovsdb_idl_verify_write_only(struct ovsdb_idl *idl)$/;"	f
ovsdb_idl_wait	lib/ovsdb-idl.c	/^ovsdb_idl_wait(struct ovsdb_idl *idl)$/;"	f
ovsdb_index_search	ovsdb/transaction.c	/^ovsdb_index_search(struct hmap *index, struct ovsdb_row *row, size_t i,$/;"	f	file:
ovsdb_integer_constraints	lib/ovsdb-types.h	/^        struct ovsdb_integer_constraints {$/;"	s	union:ovsdb_base_type::__anon146
ovsdb_internal_error	lib/ovsdb-error.c	/^ovsdb_internal_error(struct ovsdb_error *inner_error,$/;"	f
ovsdb_io_error	lib/ovsdb-error.c	/^ovsdb_io_error(int errno_, const char *details, ...)$/;"	f
ovsdb_jsonrpc_default_options	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_default_options(const char *target)$/;"	f
ovsdb_jsonrpc_lookup_db	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_lookup_db(const struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_monitor	ovsdb/jsonrpc-server.c	/^struct ovsdb_jsonrpc_monitor {$/;"	s	file:
ovsdb_jsonrpc_monitor_cancel	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_cancel(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_monitor_compose_update	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_compose_update(struct ovsdb_jsonrpc_monitor *m,$/;"	f	file:
ovsdb_jsonrpc_monitor_create	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_create(struct ovsdb_jsonrpc_session *s, struct ovsdb *db,$/;"	f	file:
ovsdb_jsonrpc_monitor_destroy	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_destroy(struct ovsdb_jsonrpc_monitor *m)$/;"	f
ovsdb_jsonrpc_monitor_find	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_find(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_monitor_flush_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_flush_all(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_monitor_needs_flush	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_needs_flush(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_monitor_remove_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_monitor_remove_all(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_options	ovsdb/jsonrpc-server.h	/^struct ovsdb_jsonrpc_options {$/;"	s
ovsdb_jsonrpc_parse_monitor_request	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_parse_monitor_request(struct ovsdb_monitor *dbmon,$/;"	f	file:
ovsdb_jsonrpc_remote	ovsdb/jsonrpc-server.c	/^struct ovsdb_jsonrpc_remote {$/;"	s	file:
ovsdb_jsonrpc_remote_status	ovsdb/jsonrpc-server.h	/^struct ovsdb_jsonrpc_remote_status {$/;"	s
ovsdb_jsonrpc_replica_class	ovsdb/monitor.c	/^static const struct ovsdb_replica_class ovsdb_jsonrpc_replica_class = {$/;"	v	typeref:struct:ovsdb_replica_class	file:
ovsdb_jsonrpc_replica_class	ovsdb/monitor.c	/^static const struct ovsdb_replica_class ovsdb_jsonrpc_replica_class;$/;"	v	typeref:struct:ovsdb_replica_class	file:
ovsdb_jsonrpc_server	ovsdb/jsonrpc-server.c	/^VLOG_DEFINE_THIS_MODULE(ovsdb_jsonrpc_server);$/;"	v
ovsdb_jsonrpc_server	ovsdb/jsonrpc-server.c	/^struct ovsdb_jsonrpc_server {$/;"	s	file:
ovsdb_jsonrpc_server_add_db	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_add_db(struct ovsdb_jsonrpc_server *svr, struct ovsdb *db)$/;"	f
ovsdb_jsonrpc_server_add_remote	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_add_remote(struct ovsdb_jsonrpc_server *svr,$/;"	f	file:
ovsdb_jsonrpc_server_create	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_create(void)$/;"	f
ovsdb_jsonrpc_server_del_remote	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_del_remote(struct shash_node *node)$/;"	f	file:
ovsdb_jsonrpc_server_destroy	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_destroy(struct ovsdb_jsonrpc_server *svr)$/;"	f
ovsdb_jsonrpc_server_free_remote_status	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_free_remote_status($/;"	f
ovsdb_jsonrpc_server_get_memory_usage	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_get_memory_usage(const struct ovsdb_jsonrpc_server *svr,$/;"	f
ovsdb_jsonrpc_server_get_remote_status	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_get_remote_status($/;"	f
ovsdb_jsonrpc_server_reconnect	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_reconnect(struct ovsdb_jsonrpc_server *svr)$/;"	f
ovsdb_jsonrpc_server_remove_db	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_remove_db(struct ovsdb_jsonrpc_server *svr,$/;"	f
ovsdb_jsonrpc_server_run	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_run(struct ovsdb_jsonrpc_server *svr)$/;"	f
ovsdb_jsonrpc_server_set_remotes	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_set_remotes(struct ovsdb_jsonrpc_server *svr,$/;"	f
ovsdb_jsonrpc_server_wait	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_server_wait(struct ovsdb_jsonrpc_server *svr)$/;"	f
ovsdb_jsonrpc_session	ovsdb/jsonrpc-server.c	/^struct ovsdb_jsonrpc_session {$/;"	s	file:
ovsdb_jsonrpc_session_close	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_close(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_session_close_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_close_all(struct ovsdb_jsonrpc_remote *remote)$/;"	f	file:
ovsdb_jsonrpc_session_create	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_create(struct ovsdb_jsonrpc_remote *remote,$/;"	f	file:
ovsdb_jsonrpc_session_get_memory_usage	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_get_memory_usage(const struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_session_get_memory_usage_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_get_memory_usage_all($/;"	f	file:
ovsdb_jsonrpc_session_get_status	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_get_status(const struct ovsdb_jsonrpc_remote *remote,$/;"	f	file:
ovsdb_jsonrpc_session_got_notify	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_got_notify(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_session_got_request	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_got_request(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_session_lock	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_lock(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_session_notify	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_notify(struct ovsdb_session *session,$/;"	f	file:
ovsdb_jsonrpc_session_parse_lock_name	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_parse_lock_name(const struct jsonrpc_msg *request,$/;"	f	file:
ovsdb_jsonrpc_session_reconnect_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_reconnect_all(struct ovsdb_jsonrpc_remote *remote)$/;"	f	file:
ovsdb_jsonrpc_session_run	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_run(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_session_run_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_run_all(struct ovsdb_jsonrpc_remote *remote)$/;"	f	file:
ovsdb_jsonrpc_session_send	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_send(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_session_set_all_options	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_set_all_options($/;"	f	file:
ovsdb_jsonrpc_session_set_options	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_set_options(struct ovsdb_jsonrpc_session *session,$/;"	f	file:
ovsdb_jsonrpc_session_unlock	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_unlock(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_jsonrpc_session_unlock__	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_unlock__(struct ovsdb_lock_waiter *waiter)$/;"	f	file:
ovsdb_jsonrpc_session_unlock_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_unlock_all(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_session_wait	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_wait(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_session_wait_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_session_wait_all(struct ovsdb_jsonrpc_remote *remote)$/;"	f	file:
ovsdb_jsonrpc_trigger	ovsdb/jsonrpc-server.c	/^struct ovsdb_jsonrpc_trigger {$/;"	s	file:
ovsdb_jsonrpc_trigger_complete	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_trigger_complete(struct ovsdb_jsonrpc_trigger *t)$/;"	f	file:
ovsdb_jsonrpc_trigger_complete_all	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_trigger_complete_all(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_trigger_complete_done	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_trigger_complete_done(struct ovsdb_jsonrpc_session *s)$/;"	f	file:
ovsdb_jsonrpc_trigger_create	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_trigger_create(struct ovsdb_jsonrpc_session *s, struct ovsdb *db,$/;"	f	file:
ovsdb_jsonrpc_trigger_find	ovsdb/jsonrpc-server.c	/^ovsdb_jsonrpc_trigger_find(struct ovsdb_jsonrpc_session *s,$/;"	f	file:
ovsdb_libovsdb_la_CFLAGS	Makefile	/^ovsdb_libovsdb_la_CFLAGS = $(AM_CFLAGS)$/;"	m
ovsdb_libovsdb_la_CFLAGS	ovsdb/automake.mk	/^ovsdb_libovsdb_la_CFLAGS = $(AM_CFLAGS)$/;"	m
ovsdb_libovsdb_la_CPPFLAGS	Makefile	/^ovsdb_libovsdb_la_CPPFLAGS = $(AM_CPPFLAGS)$/;"	m
ovsdb_libovsdb_la_CPPFLAGS	ovsdb/automake.mk	/^ovsdb_libovsdb_la_CPPFLAGS = $(AM_CPPFLAGS)$/;"	m
ovsdb_libovsdb_la_LDFLAGS	Makefile	/^ovsdb_libovsdb_la_LDFLAGS = \\$/;"	m
ovsdb_libovsdb_la_LDFLAGS	ovsdb/automake.mk	/^ovsdb_libovsdb_la_LDFLAGS = \\$/;"	m
ovsdb_libovsdb_la_LIBADD	Makefile	/^ovsdb_libovsdb_la_LIBADD =$/;"	m
ovsdb_libovsdb_la_LINK	Makefile	/^ovsdb_libovsdb_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
ovsdb_libovsdb_la_OBJECTS	Makefile	/^ovsdb_libovsdb_la_OBJECTS = $(am_ovsdb_libovsdb_la_OBJECTS)$/;"	m
ovsdb_libovsdb_la_SOURCES	Makefile	/^ovsdb_libovsdb_la_SOURCES = \\$/;"	m
ovsdb_libovsdb_la_SOURCES	ovsdb/automake.mk	/^ovsdb_libovsdb_la_SOURCES = \\$/;"	m
ovsdb_lock	ovsdb/server.h	/^struct ovsdb_lock {$/;"	s
ovsdb_lock_get_owner	ovsdb/server.c	/^ovsdb_lock_get_owner(const struct ovsdb_lock *lock)$/;"	f
ovsdb_lock_mode	ovsdb/server.h	/^enum ovsdb_lock_mode {$/;"	g
ovsdb_lock_waiter	ovsdb/server.h	/^struct ovsdb_lock_waiter {$/;"	s
ovsdb_lock_waiter_destroy	ovsdb/server.c	/^ovsdb_lock_waiter_destroy(struct ovsdb_lock_waiter *waiter)$/;"	f
ovsdb_lock_waiter_is_owner	ovsdb/server.c	/^ovsdb_lock_waiter_is_owner(const struct ovsdb_lock_waiter *waiter)$/;"	f
ovsdb_lock_waiter_remove	ovsdb/server.c	/^ovsdb_lock_waiter_remove(struct ovsdb_lock_waiter *waiter)$/;"	f
ovsdb_log	ovsdb/log.c	/^struct ovsdb_log {$/;"	s	file:
ovsdb_log_close	ovsdb/log.c	/^ovsdb_log_close(struct ovsdb_log *file)$/;"	f
ovsdb_log_commit	ovsdb/log.c	/^ovsdb_log_commit(struct ovsdb_log *file)$/;"	f
ovsdb_log_get_offset	ovsdb/log.c	/^ovsdb_log_get_offset(const struct ovsdb_log *log)$/;"	f
ovsdb_log_mode	ovsdb/log.c	/^enum ovsdb_log_mode {$/;"	g	file:
ovsdb_log_open	ovsdb/log.c	/^ovsdb_log_open(const char *name, enum ovsdb_log_open_mode open_mode,$/;"	f
ovsdb_log_open_mode	ovsdb/log.h	/^enum ovsdb_log_open_mode {$/;"	g
ovsdb_log_read	ovsdb/log.c	/^ovsdb_log_read(struct ovsdb_log *file, struct json **jsonp)$/;"	f
ovsdb_log_read_cbdata	ovsdb/log.c	/^struct ovsdb_log_read_cbdata {$/;"	s	file:
ovsdb_log_unread	ovsdb/log.c	/^ovsdb_log_unread(struct ovsdb_log *file)$/;"	f
ovsdb_log_write	ovsdb/log.c	/^ovsdb_log_write(struct ovsdb_log *file, struct json *json)$/;"	f
ovsdb_monitor	ovsdb/monitor.c	/^struct ovsdb_monitor {$/;"	s	file:
ovsdb_monitor_add	ovsdb/monitor.c	/^ovsdb_monitor_add(struct ovsdb_monitor *new_dbmon)$/;"	f
ovsdb_monitor_add_column	ovsdb/monitor.c	/^ovsdb_monitor_add_column(struct ovsdb_monitor *dbmon,$/;"	f
ovsdb_monitor_add_jsonrpc_monitor	ovsdb/monitor.c	/^ovsdb_monitor_add_jsonrpc_monitor(struct ovsdb_monitor *dbmon,$/;"	f
ovsdb_monitor_add_table	ovsdb/monitor.c	/^ovsdb_monitor_add_table(struct ovsdb_monitor *m,$/;"	f
ovsdb_monitor_aux	ovsdb/monitor.c	/^struct ovsdb_monitor_aux {$/;"	s	file:
ovsdb_monitor_cast	ovsdb/monitor.c	/^ovsdb_monitor_cast(struct ovsdb_replica *replica)$/;"	f	file:
ovsdb_monitor_change_cb	ovsdb/monitor.c	/^ovsdb_monitor_change_cb(const struct ovsdb_row *old,$/;"	f	file:
ovsdb_monitor_changes	ovsdb/monitor.c	/^struct ovsdb_monitor_changes {$/;"	s	file:
ovsdb_monitor_changes_classify	ovsdb/monitor.c	/^ovsdb_monitor_changes_classify(enum ovsdb_monitor_selection type,$/;"	f	file:
ovsdb_monitor_changes_destroy	ovsdb/monitor.c	/^ovsdb_monitor_changes_destroy(struct ovsdb_monitor_changes *changes)$/;"	f	file:
ovsdb_monitor_changes_efficacy	ovsdb/monitor.c	/^enum ovsdb_monitor_changes_efficacy {$/;"	g	file:
ovsdb_monitor_changes_row_find	ovsdb/monitor.c	/^ovsdb_monitor_changes_row_find(const struct ovsdb_monitor_changes *changes,$/;"	f	file:
ovsdb_monitor_changes_update	ovsdb/monitor.c	/^ovsdb_monitor_changes_update(const struct ovsdb_row *old,$/;"	f	file:
ovsdb_monitor_column	ovsdb/monitor.c	/^struct ovsdb_monitor_column {$/;"	s	file:
ovsdb_monitor_columns_changed	ovsdb/monitor.c	/^ovsdb_monitor_columns_changed(const struct ovsdb_monitor_table *mt,$/;"	f	file:
ovsdb_monitor_commit	ovsdb/monitor.c	/^ovsdb_monitor_commit(struct ovsdb_replica *replica,$/;"	f	file:
ovsdb_monitor_compose_row_update	ovsdb/monitor.c	/^ovsdb_monitor_compose_row_update($/;"	f	file:
ovsdb_monitor_compose_update	ovsdb/monitor.c	/^ovsdb_monitor_compose_update(struct ovsdb_monitor *dbmon,$/;"	f	file:
ovsdb_monitor_create	ovsdb/monitor.c	/^ovsdb_monitor_create(struct ovsdb *db,$/;"	f
ovsdb_monitor_destroy	ovsdb/monitor.c	/^ovsdb_monitor_destroy(struct ovsdb_monitor *dbmon)$/;"	f	file:
ovsdb_monitor_destroy_callback	ovsdb/monitor.c	/^ovsdb_monitor_destroy_callback(struct ovsdb_replica *replica)$/;"	f	file:
ovsdb_monitor_equal	ovsdb/monitor.c	/^ovsdb_monitor_equal(const struct ovsdb_monitor *a,$/;"	f	file:
ovsdb_monitor_get_initial	ovsdb/monitor.c	/^ovsdb_monitor_get_initial(const struct ovsdb_monitor *dbmon)$/;"	f
ovsdb_monitor_get_update	ovsdb/monitor.c	/^ovsdb_monitor_get_update(struct ovsdb_monitor *dbmon,$/;"	f
ovsdb_monitor_hash	ovsdb/monitor.c	/^ovsdb_monitor_hash(const struct ovsdb_monitor *dbmon, size_t basis)$/;"	f	file:
ovsdb_monitor_init_aux	ovsdb/monitor.c	/^ovsdb_monitor_init_aux(struct ovsdb_monitor_aux *aux,$/;"	f	file:
ovsdb_monitor_json_cache_flush	ovsdb/monitor.c	/^ovsdb_monitor_json_cache_flush(struct ovsdb_monitor *dbmon)$/;"	f	file:
ovsdb_monitor_json_cache_insert	ovsdb/monitor.c	/^ovsdb_monitor_json_cache_insert(struct ovsdb_monitor *dbmon,$/;"	f	file:
ovsdb_monitor_json_cache_node	ovsdb/monitor.c	/^struct ovsdb_monitor_json_cache_node {$/;"	s	file:
ovsdb_monitor_json_cache_search	ovsdb/monitor.c	/^ovsdb_monitor_json_cache_search(const struct ovsdb_monitor *dbmon,$/;"	f	file:
ovsdb_monitor_needs_flush	ovsdb/monitor.c	/^ovsdb_monitor_needs_flush(struct ovsdb_monitor *dbmon,$/;"	f
ovsdb_monitor_remove_jsonrpc_monitor	ovsdb/monitor.c	/^ovsdb_monitor_remove_jsonrpc_monitor(struct ovsdb_monitor *dbmon,$/;"	f
ovsdb_monitor_row	ovsdb/monitor.c	/^struct ovsdb_monitor_row {$/;"	s	file:
ovsdb_monitor_row_destroy	ovsdb/monitor.c	/^ovsdb_monitor_row_destroy(const struct ovsdb_monitor_table *mt,$/;"	f	file:
ovsdb_monitor_row_update_type	ovsdb/monitor.c	/^ovsdb_monitor_row_update_type(bool initial, const bool old, const bool new)$/;"	f	file:
ovsdb_monitor_selection	ovsdb/monitor.h	/^enum ovsdb_monitor_selection {$/;"	g
ovsdb_monitor_table	ovsdb/monitor.c	/^struct ovsdb_monitor_table {$/;"	s	file:
ovsdb_monitor_table_add_changes	ovsdb/monitor.c	/^ovsdb_monitor_table_add_changes(struct ovsdb_monitor_table *mt,$/;"	f	file:
ovsdb_monitor_table_add_select	ovsdb/monitor.c	/^ovsdb_monitor_table_add_select(struct ovsdb_monitor *dbmon,$/;"	f
ovsdb_monitor_table_check_duplicates	ovsdb/monitor.c	/^ovsdb_monitor_table_check_duplicates(struct ovsdb_monitor *m,$/;"	f
ovsdb_monitor_table_equal	ovsdb/monitor.c	/^ovsdb_monitor_table_equal(const struct ovsdb_monitor_table *a,$/;"	f	file:
ovsdb_monitor_table_find_changes	ovsdb/monitor.c	/^ovsdb_monitor_table_find_changes(struct ovsdb_monitor_table *mt,$/;"	f	file:
ovsdb_monitor_table_track_changes	ovsdb/monitor.c	/^ovsdb_monitor_table_track_changes(struct ovsdb_monitor_table *mt,$/;"	f	file:
ovsdb_monitor_table_untrack_changes	ovsdb/monitor.c	/^ovsdb_monitor_table_untrack_changes(struct ovsdb_monitor_table *mt,$/;"	f	file:
ovsdb_monitors	ovsdb/monitor.c	/^static struct hmap ovsdb_monitors = HMAP_INITIALIZER(&ovsdb_monitors);$/;"	v	typeref:struct:hmap	file:
ovsdb_mutation	ovsdb/mutation.h	/^struct ovsdb_mutation {$/;"	s
ovsdb_mutation_check_count	ovsdb/mutation.c	/^ovsdb_mutation_check_count(struct ovsdb_datum *dst,$/;"	f	file:
ovsdb_mutation_free	ovsdb/mutation.c	/^ovsdb_mutation_free(struct ovsdb_mutation *m)$/;"	f	file:
ovsdb_mutation_from_json	ovsdb/mutation.c	/^ovsdb_mutation_from_json(const struct ovsdb_table_schema *ts,$/;"	f	file:
ovsdb_mutation_scalar_error	ovsdb/mutation.c	/^enum ovsdb_mutation_scalar_error {$/;"	g	file:
ovsdb_mutation_scalar_error	ovsdb/mutation.c	/^ovsdb_mutation_scalar_error(enum ovsdb_mutation_scalar_error error,$/;"	f	file:
ovsdb_mutation_set	ovsdb/mutation.h	/^struct ovsdb_mutation_set {$/;"	s
ovsdb_mutation_set_destroy	ovsdb/mutation.c	/^ovsdb_mutation_set_destroy(struct ovsdb_mutation_set *set)$/;"	f
ovsdb_mutation_set_execute	ovsdb/mutation.c	/^ovsdb_mutation_set_execute(struct ovsdb_row *row,$/;"	f
ovsdb_mutation_set_from_json	ovsdb/mutation.c	/^ovsdb_mutation_set_from_json(const struct ovsdb_table_schema *ts,$/;"	f
ovsdb_mutation_set_to_json	ovsdb/mutation.c	/^ovsdb_mutation_set_to_json(const struct ovsdb_mutation_set *set)$/;"	f
ovsdb_mutation_to_json	ovsdb/mutation.c	/^ovsdb_mutation_to_json(const struct ovsdb_mutation *m)$/;"	f	file:
ovsdb_mutator	ovsdb/mutation.h	/^enum ovsdb_mutator {$/;"	g
ovsdb_mutator_from_string	ovsdb/mutation.c	/^ovsdb_mutator_from_string(const char *name, enum ovsdb_mutator *mutator)$/;"	f
ovsdb_mutator_to_string	ovsdb/mutation.c	/^ovsdb_mutator_to_string(enum ovsdb_mutator mutator)$/;"	f
ovsdb_operation_executor	ovsdb/execution.c	/^typedef struct ovsdb_error *ovsdb_operation_executor(struct ovsdb_execution *,$/;"	t	typeref:struct:ovsdb_operation_executor	file:
ovsdb_ovsdb_client_DEPENDENCIES	Makefile	/^ovsdb_ovsdb_client_DEPENDENCIES = ovsdb\/libovsdb.la \\$/;"	m
ovsdb_ovsdb_client_LDADD	Makefile	/^ovsdb_ovsdb_client_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovsdb_ovsdb_client_LDADD	ovsdb/automake.mk	/^ovsdb_ovsdb_client_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovsdb_ovsdb_client_OBJECTS	Makefile	/^ovsdb_ovsdb_client_OBJECTS = $(am_ovsdb_ovsdb_client_OBJECTS)$/;"	m
ovsdb_ovsdb_client_SOURCES	Makefile	/^ovsdb_ovsdb_client_SOURCES = ovsdb\/ovsdb-client.c$/;"	m
ovsdb_ovsdb_client_SOURCES	ovsdb/automake.mk	/^ovsdb_ovsdb_client_SOURCES = ovsdb\/ovsdb-client.c$/;"	m
ovsdb_ovsdb_server_DEPENDENCIES	Makefile	/^ovsdb_ovsdb_server_DEPENDENCIES = ovsdb\/libovsdb.la \\$/;"	m
ovsdb_ovsdb_server_LDADD	Makefile	/^ovsdb_ovsdb_server_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovsdb_ovsdb_server_LDADD	ovsdb/automake.mk	/^ovsdb_ovsdb_server_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovsdb_ovsdb_server_OBJECTS	Makefile	/^ovsdb_ovsdb_server_OBJECTS = $(am_ovsdb_ovsdb_server_OBJECTS)$/;"	m
ovsdb_ovsdb_server_SOURCES	Makefile	/^ovsdb_ovsdb_server_SOURCES = ovsdb\/ovsdb-server.c$/;"	m
ovsdb_ovsdb_server_SOURCES	ovsdb/automake.mk	/^ovsdb_ovsdb_server_SOURCES = ovsdb\/ovsdb-server.c$/;"	m
ovsdb_ovsdb_tool_DEPENDENCIES	Makefile	/^ovsdb_ovsdb_tool_DEPENDENCIES = ovsdb\/libovsdb.la \\$/;"	m
ovsdb_ovsdb_tool_LDADD	Makefile	/^ovsdb_ovsdb_tool_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovsdb_ovsdb_tool_LDADD	ovsdb/automake.mk	/^ovsdb_ovsdb_tool_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
ovsdb_ovsdb_tool_OBJECTS	Makefile	/^ovsdb_ovsdb_tool_OBJECTS = $(am_ovsdb_ovsdb_tool_OBJECTS)$/;"	m
ovsdb_ovsdb_tool_SOURCES	Makefile	/^ovsdb_ovsdb_tool_SOURCES = ovsdb\/ovsdb-tool.c$/;"	m
ovsdb_ovsdb_tool_SOURCES	ovsdb/automake.mk	/^ovsdb_ovsdb_tool_SOURCES = ovsdb\/ovsdb-tool.c$/;"	m
ovsdb_parser	lib/ovsdb-parser.h	/^struct ovsdb_parser {$/;"	s
ovsdb_parser_destroy	lib/ovsdb-parser.c	/^ovsdb_parser_destroy(struct ovsdb_parser *parser)$/;"	f
ovsdb_parser_finish	lib/ovsdb-parser.c	/^ovsdb_parser_finish(struct ovsdb_parser *parser)$/;"	f
ovsdb_parser_get_error	lib/ovsdb-parser.c	/^ovsdb_parser_get_error(const struct ovsdb_parser *parser)$/;"	f
ovsdb_parser_has_error	lib/ovsdb-parser.c	/^ovsdb_parser_has_error(const struct ovsdb_parser *parser)$/;"	f
ovsdb_parser_init	lib/ovsdb-parser.c	/^ovsdb_parser_init(struct ovsdb_parser *parser, const struct json *json,$/;"	f
ovsdb_parser_is_id	lib/ovsdb-parser.c	/^ovsdb_parser_is_id(const char *string)$/;"	f
ovsdb_parser_member	lib/ovsdb-parser.c	/^ovsdb_parser_member(struct ovsdb_parser *parser, const char *name,$/;"	f
ovsdb_parser_raise_error	lib/ovsdb-parser.c	/^ovsdb_parser_raise_error(struct ovsdb_parser *parser, const char *format, ...)$/;"	f
ovsdb_parser_types	lib/ovsdb-parser.h	/^enum ovsdb_parser_types {$/;"	g
ovsdb_query	ovsdb/query.c	/^ovsdb_query(struct ovsdb_table *table, const struct ovsdb_condition *cnd,$/;"	f
ovsdb_query_distinct	ovsdb/query.c	/^ovsdb_query_distinct(struct ovsdb_table *table,$/;"	f
ovsdb_query_row_set	ovsdb/query.c	/^ovsdb_query_row_set(struct ovsdb_table *table,$/;"	f
ovsdb_real_constraints	lib/ovsdb-types.h	/^        struct ovsdb_real_constraints {$/;"	s	union:ovsdb_base_type::__anon146
ovsdb_ref_type	lib/ovsdb-types.h	/^enum ovsdb_ref_type {$/;"	g
ovsdb_remove_replica	ovsdb/ovsdb.c	/^ovsdb_remove_replica(struct ovsdb *db OVS_UNUSED, struct ovsdb_replica *r)$/;"	f
ovsdb_replica	ovsdb/ovsdb.h	/^struct ovsdb_replica {$/;"	s
ovsdb_replica_class	ovsdb/ovsdb.h	/^struct ovsdb_replica_class {$/;"	s
ovsdb_replica_init	ovsdb/ovsdb.c	/^ovsdb_replica_init(struct ovsdb_replica *r,$/;"	f
ovsdb_row	ovsdb/row.h	/^struct ovsdb_row {$/;"	s
ovsdb_row_clone	ovsdb/row.c	/^ovsdb_row_clone(const struct ovsdb_row *old)$/;"	f
ovsdb_row_columns_to_string	ovsdb/row.c	/^ovsdb_row_columns_to_string(const struct ovsdb_row *row,$/;"	f
ovsdb_row_compare_columns_3way	ovsdb/row.c	/^ovsdb_row_compare_columns_3way(const struct ovsdb_row *a,$/;"	f
ovsdb_row_create	ovsdb/row.c	/^ovsdb_row_create(const struct ovsdb_table *table)$/;"	f
ovsdb_row_destroy	ovsdb/row.c	/^ovsdb_row_destroy(struct ovsdb_row *row)$/;"	f
ovsdb_row_equal_columns	ovsdb/row.c	/^ovsdb_row_equal_columns(const struct ovsdb_row *a,$/;"	f
ovsdb_row_from_index_node	ovsdb/transaction.c	/^ovsdb_row_from_index_node(struct hmap_node *index_node,$/;"	f	file:
ovsdb_row_from_json	ovsdb/row.c	/^ovsdb_row_from_json(struct ovsdb_row *row, const struct json *json,$/;"	f
ovsdb_row_get_index_node	ovsdb/transaction.c	/^ovsdb_row_get_index_node(struct ovsdb_row *row, size_t i)$/;"	f	file:
ovsdb_row_get_uuid	ovsdb/row.h	/^ovsdb_row_get_uuid(const struct ovsdb_row *row)$/;"	f
ovsdb_row_get_uuid_rw	ovsdb/row.h	/^ovsdb_row_get_uuid_rw(struct ovsdb_row *row)$/;"	f
ovsdb_row_get_version	ovsdb/row.h	/^ovsdb_row_get_version(const struct ovsdb_row *row)$/;"	f
ovsdb_row_get_version_rw	ovsdb/row.h	/^ovsdb_row_get_version_rw(struct ovsdb_row *row)$/;"	f
ovsdb_row_hash	ovsdb/row.h	/^ovsdb_row_hash(const struct ovsdb_row *row)$/;"	f
ovsdb_row_hash	ovsdb/row.h	/^struct ovsdb_row_hash {$/;"	s
ovsdb_row_hash_columns	ovsdb/row.c	/^ovsdb_row_hash_columns(const struct ovsdb_row *row,$/;"	f
ovsdb_row_hash_contains	ovsdb/row.c	/^ovsdb_row_hash_contains(const struct ovsdb_row_hash *rh,$/;"	f
ovsdb_row_hash_contains__	ovsdb/row.c	/^ovsdb_row_hash_contains__(const struct ovsdb_row_hash *rh,$/;"	f
ovsdb_row_hash_contains_all	ovsdb/row.c	/^ovsdb_row_hash_contains_all(const struct ovsdb_row_hash *a,$/;"	f
ovsdb_row_hash_count	ovsdb/row.c	/^ovsdb_row_hash_count(const struct ovsdb_row_hash *rh)$/;"	f
ovsdb_row_hash_destroy	ovsdb/row.c	/^ovsdb_row_hash_destroy(struct ovsdb_row_hash *rh, bool destroy_rows)$/;"	f
ovsdb_row_hash_init	ovsdb/row.c	/^ovsdb_row_hash_init(struct ovsdb_row_hash *rh,$/;"	f
ovsdb_row_hash_insert	ovsdb/row.c	/^ovsdb_row_hash_insert(struct ovsdb_row_hash *rh, const struct ovsdb_row *row)$/;"	f
ovsdb_row_hash_insert__	ovsdb/row.c	/^ovsdb_row_hash_insert__(struct ovsdb_row_hash *rh, const struct ovsdb_row *row,$/;"	f
ovsdb_row_hash_node	ovsdb/row.h	/^struct ovsdb_row_hash_node {$/;"	s
ovsdb_row_index_offset__	ovsdb/transaction.c	/^ovsdb_row_index_offset__(const struct ovsdb_table *table, size_t i)$/;"	f	file:
ovsdb_row_set	ovsdb/row.h	/^struct ovsdb_row_set {$/;"	s
ovsdb_row_set_add_row	ovsdb/row.c	/^ovsdb_row_set_add_row(struct ovsdb_row_set *set, const struct ovsdb_row *row)$/;"	f
ovsdb_row_set_destroy	ovsdb/row.c	/^ovsdb_row_set_destroy(struct ovsdb_row_set *set)$/;"	f
ovsdb_row_set_init	ovsdb/row.c	/^ovsdb_row_set_init(struct ovsdb_row_set *set)$/;"	f
ovsdb_row_set_sort	ovsdb/row.c	/^ovsdb_row_set_sort(struct ovsdb_row_set *set,$/;"	f
ovsdb_row_set_sort_cbdata	ovsdb/row.c	/^struct ovsdb_row_set_sort_cbdata {$/;"	s	file:
ovsdb_row_set_sort_compare_cb	ovsdb/row.c	/^ovsdb_row_set_sort_compare_cb(size_t a, size_t b, void *cbdata_)$/;"	f	file:
ovsdb_row_set_sort_swap_cb	ovsdb/row.c	/^ovsdb_row_set_sort_swap_cb(size_t a, size_t b, void *cbdata_)$/;"	f	file:
ovsdb_row_set_to_json	ovsdb/row.c	/^ovsdb_row_set_to_json(const struct ovsdb_row_set *rows,$/;"	f
ovsdb_row_to_json	ovsdb/row.c	/^ovsdb_row_to_json(const struct ovsdb_row *row,$/;"	f
ovsdb_row_update_columns	ovsdb/row.c	/^ovsdb_row_update_columns(struct ovsdb_row *dst,$/;"	f
ovsdb_scalar_mutation	ovsdb/mutation.c	/^struct ovsdb_scalar_mutation {$/;"	s	file:
ovsdb_schema	ovsdb/ovsdb.h	/^struct ovsdb_schema {$/;"	s
ovsdb_schema_check_ref_table	ovsdb/ovsdb.c	/^ovsdb_schema_check_ref_table(struct ovsdb_column *column,$/;"	f	file:
ovsdb_schema_clone	ovsdb/ovsdb.c	/^ovsdb_schema_clone(const struct ovsdb_schema *old)$/;"	f
ovsdb_schema_create	ovsdb/ovsdb.c	/^ovsdb_schema_create(const char *name, const char *version, const char *cksum)$/;"	f
ovsdb_schema_destroy	ovsdb/ovsdb.c	/^ovsdb_schema_destroy(struct ovsdb_schema *schema)$/;"	f
ovsdb_schema_equal	ovsdb/ovsdb.c	/^ovsdb_schema_equal(const struct ovsdb_schema *a,$/;"	f
ovsdb_schema_from_file	ovsdb/ovsdb.c	/^ovsdb_schema_from_file(const char *file_name, struct ovsdb_schema **schemap)$/;"	f
ovsdb_schema_from_json	ovsdb/ovsdb.c	/^ovsdb_schema_from_json(struct json *json, struct ovsdb_schema **schemap)$/;"	f
ovsdb_schema_to_json	ovsdb/ovsdb.c	/^ovsdb_schema_to_json(const struct ovsdb_schema *schema)$/;"	f
ovsdb_server	ovsdb/ovsdb-server.c	/^VLOG_DEFINE_THIS_MODULE(ovsdb_server);$/;"	v
ovsdb_server	ovsdb/server.h	/^struct ovsdb_server {$/;"	s
ovsdb_server_add_database	ovsdb/ovsdb-server.c	/^ovsdb_server_add_database(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_add_database	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_add_database;$/;"	v	file:
ovsdb_server_add_db	ovsdb/server.c	/^ovsdb_server_add_db(struct ovsdb_server *server, struct ovsdb *db)$/;"	f
ovsdb_server_add_remote	ovsdb/ovsdb-server.c	/^ovsdb_server_add_remote(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_add_remote	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_add_remote;$/;"	v	file:
ovsdb_server_compact	ovsdb/ovsdb-server.c	/^ovsdb_server_compact(struct unixctl_conn *conn, int argc,$/;"	f	file:
ovsdb_server_compact	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_compact;$/;"	v	file:
ovsdb_server_create_lock__	ovsdb/server.c	/^ovsdb_server_create_lock__(struct ovsdb_server *server, const char *lock_name,$/;"	f	file:
ovsdb_server_destroy	ovsdb/server.c	/^ovsdb_server_destroy(struct ovsdb_server *server)$/;"	f
ovsdb_server_exit	ovsdb/ovsdb-server.c	/^ovsdb_server_exit(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_exit	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_exit;$/;"	v	file:
ovsdb_server_init	ovsdb/server.c	/^ovsdb_server_init(struct ovsdb_server *server)$/;"	f
ovsdb_server_list_databases	ovsdb/ovsdb-server.c	/^ovsdb_server_list_databases(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_list_databases	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_list_databases;$/;"	v	file:
ovsdb_server_list_remotes	ovsdb/ovsdb-server.c	/^ovsdb_server_list_remotes(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_list_remotes	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_list_remotes;$/;"	v	file:
ovsdb_server_lock	ovsdb/server.c	/^ovsdb_server_lock(struct ovsdb_server *server,$/;"	f
ovsdb_server_perf_counters_clear	ovsdb/ovsdb-server.c	/^ovsdb_server_perf_counters_clear(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_perf_counters_clear	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_perf_counters_clear;$/;"	v	file:
ovsdb_server_perf_counters_show	ovsdb/ovsdb-server.c	/^ovsdb_server_perf_counters_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_perf_counters_show	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_perf_counters_show;$/;"	v	file:
ovsdb_server_reconnect	ovsdb/ovsdb-server.c	/^ovsdb_server_reconnect(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_reconnect	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_reconnect;$/;"	v	file:
ovsdb_server_remove_database	ovsdb/ovsdb-server.c	/^ovsdb_server_remove_database(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_remove_database	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_remove_database;$/;"	v	file:
ovsdb_server_remove_db	ovsdb/server.c	/^ovsdb_server_remove_db(struct ovsdb_server *server, struct ovsdb *db)$/;"	f
ovsdb_server_remove_remote	ovsdb/ovsdb-server.c	/^ovsdb_server_remove_remote(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
ovsdb_server_remove_remote	ovsdb/ovsdb-server.c	/^static unixctl_cb_func ovsdb_server_remove_remote;$/;"	v	file:
ovsdb_session	ovsdb/server.h	/^struct ovsdb_session {$/;"	s
ovsdb_session_destroy	ovsdb/server.c	/^ovsdb_session_destroy(struct ovsdb_session *session)$/;"	f
ovsdb_session_get_lock_waiter	ovsdb/server.c	/^ovsdb_session_get_lock_waiter(const struct ovsdb_session *session,$/;"	f
ovsdb_session_init	ovsdb/server.c	/^ovsdb_session_init(struct ovsdb_session *session, struct ovsdb_server *server)$/;"	f
ovsdb_set_ref_table	ovsdb/ovsdb.c	/^ovsdb_set_ref_table(const struct shash *tables,$/;"	f	file:
ovsdb_string_constraints	lib/ovsdb-types.h	/^        struct ovsdb_string_constraints {$/;"	s	union:ovsdb_base_type::__anon146
ovsdb_symbol	lib/ovsdb-data.h	/^struct ovsdb_symbol {$/;"	s
ovsdb_symbol_referenced	lib/ovsdb-data.c	/^ovsdb_symbol_referenced(struct ovsdb_symbol *symbol,$/;"	f	file:
ovsdb_symbol_table	lib/ovsdb-data.h	/^struct ovsdb_symbol_table {$/;"	s
ovsdb_symbol_table_create	lib/ovsdb-data.c	/^ovsdb_symbol_table_create(void)$/;"	f
ovsdb_symbol_table_destroy	lib/ovsdb-data.c	/^ovsdb_symbol_table_destroy(struct ovsdb_symbol_table *symtab)$/;"	f
ovsdb_symbol_table_get	lib/ovsdb-data.c	/^ovsdb_symbol_table_get(const struct ovsdb_symbol_table *symtab,$/;"	f
ovsdb_symbol_table_insert	lib/ovsdb-data.c	/^ovsdb_symbol_table_insert(struct ovsdb_symbol_table *symtab,$/;"	f
ovsdb_symbol_table_put	lib/ovsdb-data.c	/^ovsdb_symbol_table_put(struct ovsdb_symbol_table *symtab, const char *name,$/;"	f
ovsdb_syntax_error	lib/ovsdb-error.c	/^ovsdb_syntax_error(const struct json *json, const char *tag,$/;"	f
ovsdb_table	ovsdb/table.h	/^struct ovsdb_table {$/;"	s
ovsdb_table_create	ovsdb/table.c	/^ovsdb_table_create(struct ovsdb_table_schema *ts)$/;"	f
ovsdb_table_destroy	ovsdb/table.c	/^ovsdb_table_destroy(struct ovsdb_table *table)$/;"	f
ovsdb_table_get_row	ovsdb/table.c	/^ovsdb_table_get_row(const struct ovsdb_table *table, const struct uuid *uuid)$/;"	f
ovsdb_table_schema	ovsdb/table.h	/^struct ovsdb_table_schema {$/;"	s
ovsdb_table_schema_clone	ovsdb/table.c	/^ovsdb_table_schema_clone(const struct ovsdb_table_schema *old)$/;"	f
ovsdb_table_schema_create	ovsdb/table.c	/^ovsdb_table_schema_create(const char *name, bool mutable,$/;"	f
ovsdb_table_schema_destroy	ovsdb/table.c	/^ovsdb_table_schema_destroy(struct ovsdb_table_schema *ts)$/;"	f
ovsdb_table_schema_from_json	ovsdb/table.c	/^ovsdb_table_schema_from_json(const struct json *json, const char *name,$/;"	f
ovsdb_table_schema_get_column	ovsdb/table.c	/^ovsdb_table_schema_get_column(const struct ovsdb_table_schema *ts,$/;"	f
ovsdb_table_schema_to_json	ovsdb/table.c	/^ovsdb_table_schema_to_json(const struct ovsdb_table_schema *ts,$/;"	f
ovsdb_token_is_delim	lib/ovsdb-data.c	/^ovsdb_token_is_delim(unsigned char c)$/;"	f
ovsdb_token_parse	lib/ovsdb-data.c	/^ovsdb_token_parse(const char **s, char **outp)$/;"	f
ovsdb_trigger	ovsdb/trigger.h	/^struct ovsdb_trigger {$/;"	s
ovsdb_trigger_complete	ovsdb/trigger.c	/^ovsdb_trigger_complete(struct ovsdb_trigger *t)$/;"	f	file:
ovsdb_trigger_destroy	ovsdb/trigger.c	/^ovsdb_trigger_destroy(struct ovsdb_trigger *trigger)$/;"	f
ovsdb_trigger_init	ovsdb/trigger.c	/^ovsdb_trigger_init(struct ovsdb_session *session, struct ovsdb *db,$/;"	f
ovsdb_trigger_is_complete	ovsdb/trigger.c	/^ovsdb_trigger_is_complete(const struct ovsdb_trigger *trigger)$/;"	f
ovsdb_trigger_run	ovsdb/trigger.c	/^ovsdb_trigger_run(struct ovsdb *db, long long int now)$/;"	f
ovsdb_trigger_steal_result	ovsdb/trigger.c	/^ovsdb_trigger_steal_result(struct ovsdb_trigger *trigger)$/;"	f
ovsdb_trigger_try	ovsdb/trigger.c	/^ovsdb_trigger_try(struct ovsdb_trigger *t, long long int now)$/;"	f	file:
ovsdb_trigger_wait	ovsdb/trigger.c	/^ovsdb_trigger_wait(struct ovsdb *db, long long int now)$/;"	f
ovsdb_txn	ovsdb/transaction.c	/^struct ovsdb_txn {$/;"	s	file:
ovsdb_txn_abort	ovsdb/transaction.c	/^ovsdb_txn_abort(struct ovsdb_txn *txn)$/;"	f
ovsdb_txn_add_comment	ovsdb/transaction.c	/^ovsdb_txn_add_comment(struct ovsdb_txn *txn, const char *s)$/;"	f
ovsdb_txn_adjust_atom_refs	ovsdb/transaction.c	/^ovsdb_txn_adjust_atom_refs(struct ovsdb_txn *txn, const struct ovsdb_row *r,$/;"	f	file:
ovsdb_txn_adjust_row_refs	ovsdb/transaction.c	/^ovsdb_txn_adjust_row_refs(struct ovsdb_txn *txn, const struct ovsdb_row *r,$/;"	f	file:
ovsdb_txn_commit	ovsdb/transaction.c	/^ovsdb_txn_commit(struct ovsdb_txn *txn, bool durable)$/;"	f
ovsdb_txn_commit_	ovsdb/transaction.c	/^ovsdb_txn_commit_(struct ovsdb_txn *txn, bool durable)$/;"	f	file:
ovsdb_txn_create	ovsdb/transaction.c	/^ovsdb_txn_create(struct ovsdb *db)$/;"	f
ovsdb_txn_create_txn_table	ovsdb/transaction.c	/^ovsdb_txn_create_txn_table(struct ovsdb_txn *txn, struct ovsdb_table *table)$/;"	f	file:
ovsdb_txn_for_each_change	ovsdb/transaction.c	/^ovsdb_txn_for_each_change(const struct ovsdb_txn *txn,$/;"	f
ovsdb_txn_free	ovsdb/transaction.c	/^ovsdb_txn_free(struct ovsdb_txn *txn)$/;"	f	file:
ovsdb_txn_get_comment	ovsdb/transaction.c	/^ovsdb_txn_get_comment(const struct ovsdb_txn *txn)$/;"	f
ovsdb_txn_row	ovsdb/transaction.c	/^struct ovsdb_txn_row {$/;"	s	file:
ovsdb_txn_row_abort	ovsdb/transaction.c	/^ovsdb_txn_row_abort(struct ovsdb_txn *txn OVS_UNUSED,$/;"	f	file:
ovsdb_txn_row_cb_func	ovsdb/transaction.h	/^typedef bool ovsdb_txn_row_cb_func(const struct ovsdb_row *old,$/;"	t
ovsdb_txn_row_commit	ovsdb/transaction.c	/^ovsdb_txn_row_commit(struct ovsdb_txn *txn OVS_UNUSED,$/;"	f	file:
ovsdb_txn_row_create	ovsdb/transaction.c	/^ovsdb_txn_row_create(struct ovsdb_txn *txn, struct ovsdb_table *table,$/;"	f	file:
ovsdb_txn_row_delete	ovsdb/transaction.c	/^ovsdb_txn_row_delete(struct ovsdb_txn *txn, const struct ovsdb_row *row_)$/;"	f
ovsdb_txn_row_insert	ovsdb/transaction.c	/^ovsdb_txn_row_insert(struct ovsdb_txn *txn, struct ovsdb_row *row)$/;"	f
ovsdb_txn_row_modify	ovsdb/transaction.c	/^ovsdb_txn_row_modify(struct ovsdb_txn *txn, const struct ovsdb_row *ro_row_)$/;"	f
ovsdb_txn_row_prefree	ovsdb/transaction.c	/^ovsdb_txn_row_prefree(struct ovsdb_txn_row *txn_row)$/;"	f	file:
ovsdb_txn_table	ovsdb/transaction.c	/^struct ovsdb_txn_table {$/;"	s	file:
ovsdb_txn_table_destroy	ovsdb/transaction.c	/^ovsdb_txn_table_destroy(struct ovsdb_txn_table *txn_table)$/;"	f	file:
ovsdb_type	lib/ovsdb-types.h	/^struct ovsdb_type {$/;"	s
ovsdb_type_boolean	lib/ovsdb-types.c	/^const struct ovsdb_type ovsdb_type_boolean =$/;"	v	typeref:struct:ovsdb_type
ovsdb_type_clone	lib/ovsdb-types.c	/^ovsdb_type_clone(struct ovsdb_type *dst, const struct ovsdb_type *src)$/;"	f
ovsdb_type_destroy	lib/ovsdb-types.c	/^ovsdb_type_destroy(struct ovsdb_type *type)$/;"	f
ovsdb_type_from_json	lib/ovsdb-types.c	/^ovsdb_type_from_json(struct ovsdb_type *type, const struct json *json)$/;"	f
ovsdb_type_integer	lib/ovsdb-types.c	/^const struct ovsdb_type ovsdb_type_integer =$/;"	v	typeref:struct:ovsdb_type
ovsdb_type_is_composite	lib/ovsdb-types.h	/^static inline bool ovsdb_type_is_composite(const struct ovsdb_type *type)$/;"	f
ovsdb_type_is_map	lib/ovsdb-types.h	/^static inline bool ovsdb_type_is_map(const struct ovsdb_type *type)$/;"	f
ovsdb_type_is_optional	lib/ovsdb-types.h	/^static inline bool ovsdb_type_is_optional(const struct ovsdb_type *type)$/;"	f
ovsdb_type_is_optional_scalar	lib/ovsdb-types.h	/^static inline bool ovsdb_type_is_optional_scalar($/;"	f
ovsdb_type_is_scalar	lib/ovsdb-types.h	/^static inline bool ovsdb_type_is_scalar(const struct ovsdb_type *type)$/;"	f
ovsdb_type_is_set	lib/ovsdb-types.h	/^static inline bool ovsdb_type_is_set(const struct ovsdb_type *type)$/;"	f
ovsdb_type_is_valid	lib/ovsdb-types.c	/^ovsdb_type_is_valid(const struct ovsdb_type *type)$/;"	f
ovsdb_type_real	lib/ovsdb-types.c	/^const struct ovsdb_type ovsdb_type_real =$/;"	v	typeref:struct:ovsdb_type
ovsdb_type_string	lib/ovsdb-types.c	/^const struct ovsdb_type ovsdb_type_string =$/;"	v	typeref:struct:ovsdb_type
ovsdb_type_to_english	lib/ovsdb-types.c	/^ovsdb_type_to_english(const struct ovsdb_type *type)$/;"	f
ovsdb_type_to_json	lib/ovsdb-types.c	/^ovsdb_type_to_json(const struct ovsdb_type *type)$/;"	f
ovsdb_type_uuid	lib/ovsdb-types.c	/^const struct ovsdb_type ovsdb_type_uuid =$/;"	v	typeref:struct:ovsdb_type
ovsdb_uuid_constraints	lib/ovsdb-types.h	/^        struct ovsdb_uuid_constraints {$/;"	s	union:ovsdb_base_type::__anon146
ovsdb_weak_ref	ovsdb/row.h	/^struct ovsdb_weak_ref {$/;"	s
ovsdb_wrap_error	lib/ovsdb-error.c	/^ovsdb_wrap_error(struct ovsdb_error *error, const char *details, ...)$/;"	f
ovsdp	lib/sflow.h	/^    SFLOVSDP_counters ovsdp;$/;"	m	union:_SFLCounters_type
ovsinst	lib/ofp-actions.c	/^    enum ovs_instruction_type ovsinst; \/* Internal name for instruction. *\/$/;"	m	struct:ovsinst_map	typeref:enum:ovsinst_map::ovs_instruction_type	file:
ovsinst_bitmap_from_openflow	lib/ofp-actions.c	/^ovsinst_bitmap_from_openflow(ovs_be32 ofpit_bitmap, enum ofp_version version)$/;"	f
ovsinst_bitmap_to_openflow	lib/ofp-actions.c	/^ovsinst_bitmap_to_openflow(uint32_t ovsinst_bitmap, enum ofp_version version)$/;"	f
ovsinst_map	lib/ofp-actions.c	/^struct ovsinst_map {$/;"	s	file:
ovsl_dereference	datapath/datapath.h	151;"	d
ovsrcu_call_postponed	lib/ovs-rcu.c	/^ovsrcu_call_postponed(void)$/;"	f	file:
ovsrcu_cancel_thread_exit_cb	lib/ovs-rcu.c	/^ovsrcu_cancel_thread_exit_cb(void *aux OVS_UNUSED)$/;"	f	file:
ovsrcu_cb	lib/ovs-rcu.c	/^struct ovsrcu_cb {$/;"	s	file:
ovsrcu_cbset	lib/ovs-rcu.c	/^struct ovsrcu_cbset {$/;"	s	file:
ovsrcu_flush_cbset	lib/ovs-rcu.c	/^ovsrcu_flush_cbset(struct ovsrcu_perthread *perthread)$/;"	f	file:
ovsrcu_get	lib/ovs-rcu.h	146;"	d
ovsrcu_get	lib/ovs-rcu.h	176;"	d
ovsrcu_get__	lib/ovs-rcu.h	/^ovsrcu_get__(const struct ovsrcu_pointer *pointer, memory_order order)$/;"	f
ovsrcu_get__	lib/ovs-rcu.h	136;"	d
ovsrcu_get_protected	lib/ovs-rcu.h	148;"	d
ovsrcu_get_protected	lib/ovs-rcu.h	178;"	d
ovsrcu_init	lib/ovs-rcu.h	204;"	d
ovsrcu_init_module	lib/ovs-rcu.c	/^ovsrcu_init_module(void)$/;"	f	file:
ovsrcu_is_quiescent	lib/ovs-rcu.c	/^ovsrcu_is_quiescent(void)$/;"	f
ovsrcu_perthread	lib/ovs-rcu.c	/^struct ovsrcu_perthread {$/;"	s	file:
ovsrcu_perthread_get	lib/ovs-rcu.c	/^ovsrcu_perthread_get(void)$/;"	f	file:
ovsrcu_pointer	lib/ovs-rcu.h	/^struct ovsrcu_pointer { ATOMIC(void *) p; };$/;"	s
ovsrcu_postpone	lib/ovs-rcu.h	209;"	d
ovsrcu_postpone__	lib/ovs-rcu.c	/^ovsrcu_postpone__(void (*function)(void *aux), void *aux)$/;"	f
ovsrcu_postpone_thread	lib/ovs-rcu.c	/^ovsrcu_postpone_thread(void *arg OVS_UNUSED)$/;"	f	file:
ovsrcu_quiesce	lib/ovs-rcu.c	/^ovsrcu_quiesce(void)$/;"	f
ovsrcu_quiesce_end	lib/ovs-rcu.c	/^ovsrcu_quiesce_end(void)$/;"	f
ovsrcu_quiesce_start	lib/ovs-rcu.c	/^ovsrcu_quiesce_start(void)$/;"	f
ovsrcu_quiesced	lib/ovs-rcu.c	/^ovsrcu_quiesced(void)$/;"	f	file:
ovsrcu_set	lib/ovs-rcu.h	193;"	d
ovsrcu_set__	lib/ovs-rcu.h	/^static inline void ovsrcu_set__(struct ovsrcu_pointer *pointer,$/;"	f
ovsrcu_set__	lib/ovs-rcu.h	155;"	d
ovsrcu_set_hidden	lib/ovs-rcu.h	199;"	d
ovsrcu_synchronize	lib/ovs-rcu.c	/^ovsrcu_synchronize(void)$/;"	f
ovsrcu_thread_exit_cb	lib/ovs-rcu.c	/^ovsrcu_thread_exit_cb(void *perthread)$/;"	f	file:
ovsrcu_threads	lib/ovs-rcu.c	/^static struct ovs_list ovsrcu_threads;$/;"	v	typeref:struct:ovs_list	file:
ovsrcu_threads_mutex	lib/ovs-rcu.c	/^static struct ovs_mutex ovsrcu_threads_mutex;$/;"	v	typeref:struct:ovs_mutex	file:
ovsrcu_unregister__	lib/ovs-rcu.c	/^ovsrcu_unregister__(struct ovsrcu_perthread *perthread)$/;"	f	file:
ovsrec_autoattach	lib/vswitch-idl.h	/^struct ovsrec_autoattach {$/;"	s
ovsrec_autoattach_cast	lib/vswitch-idl.c	/^ovsrec_autoattach_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_autoattach_col_mappings	lib/vswitch-idl.h	38;"	d
ovsrec_autoattach_col_system_description	lib/vswitch-idl.h	39;"	d
ovsrec_autoattach_col_system_name	lib/vswitch-idl.h	37;"	d
ovsrec_autoattach_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_autoattach_columns[OVSREC_AUTOATTACH_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_autoattach_columns_init	lib/vswitch-idl.c	/^ovsrec_autoattach_columns_init(void)$/;"	f	file:
ovsrec_autoattach_delete	lib/vswitch-idl.c	/^ovsrec_autoattach_delete(const struct ovsrec_autoattach *row)$/;"	f
ovsrec_autoattach_first	lib/vswitch-idl.c	/^ovsrec_autoattach_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_autoattach_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_autoattach_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_autoattach_get_mappings	lib/vswitch-idl.c	/^ovsrec_autoattach_get_mappings(const struct ovsrec_autoattach *row,$/;"	f
ovsrec_autoattach_get_system_description	lib/vswitch-idl.c	/^ovsrec_autoattach_get_system_description(const struct ovsrec_autoattach *row,$/;"	f
ovsrec_autoattach_get_system_name	lib/vswitch-idl.c	/^ovsrec_autoattach_get_system_name(const struct ovsrec_autoattach *row,$/;"	f
ovsrec_autoattach_init	lib/vswitch-idl.c	/^ovsrec_autoattach_init(struct ovsrec_autoattach *row)$/;"	f
ovsrec_autoattach_init__	lib/vswitch-idl.c	/^ovsrec_autoattach_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_autoattach_insert	lib/vswitch-idl.c	/^ovsrec_autoattach_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_autoattach_next	lib/vswitch-idl.c	/^ovsrec_autoattach_next(const struct ovsrec_autoattach *row)$/;"	f
ovsrec_autoattach_parse_mappings	lib/vswitch-idl.c	/^ovsrec_autoattach_parse_mappings(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_autoattach_parse_system_description	lib/vswitch-idl.c	/^ovsrec_autoattach_parse_system_description(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_autoattach_parse_system_name	lib/vswitch-idl.c	/^ovsrec_autoattach_parse_system_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_autoattach_set_mappings	lib/vswitch-idl.c	/^ovsrec_autoattach_set_mappings(const struct ovsrec_autoattach *row, const int64_t *key_mappings, const int64_t *value_mappings, size_t n_mappings)$/;"	f
ovsrec_autoattach_set_system_description	lib/vswitch-idl.c	/^ovsrec_autoattach_set_system_description(const struct ovsrec_autoattach *row, const char *system_description)$/;"	f
ovsrec_autoattach_set_system_name	lib/vswitch-idl.c	/^ovsrec_autoattach_set_system_name(const struct ovsrec_autoattach *row, const char *system_name)$/;"	f
ovsrec_autoattach_unparse_mappings	lib/vswitch-idl.c	/^ovsrec_autoattach_unparse_mappings(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_autoattach_unparse_system_description	lib/vswitch-idl.c	/^ovsrec_autoattach_unparse_system_description(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_autoattach_unparse_system_name	lib/vswitch-idl.c	/^ovsrec_autoattach_unparse_system_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_autoattach_verify_mappings	lib/vswitch-idl.c	/^ovsrec_autoattach_verify_mappings(const struct ovsrec_autoattach *row)$/;"	f
ovsrec_autoattach_verify_system_description	lib/vswitch-idl.c	/^ovsrec_autoattach_verify_system_description(const struct ovsrec_autoattach *row)$/;"	f
ovsrec_autoattach_verify_system_name	lib/vswitch-idl.c	/^ovsrec_autoattach_verify_system_name(const struct ovsrec_autoattach *row)$/;"	f
ovsrec_bridge	lib/vswitch-idl.h	/^struct ovsrec_bridge {$/;"	s
ovsrec_bridge_cast	lib/vswitch-idl.c	/^ovsrec_bridge_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_bridge_col_auto_attach	lib/vswitch-idl.h	187;"	d
ovsrec_bridge_col_controller	lib/vswitch-idl.h	186;"	d
ovsrec_bridge_col_datapath_id	lib/vswitch-idl.h	176;"	d
ovsrec_bridge_col_datapath_type	lib/vswitch-idl.h	177;"	d
ovsrec_bridge_col_datapath_version	lib/vswitch-idl.h	183;"	d
ovsrec_bridge_col_external_ids	lib/vswitch-idl.h	180;"	d
ovsrec_bridge_col_fail_mode	lib/vswitch-idl.h	191;"	d
ovsrec_bridge_col_flood_vlans	lib/vswitch-idl.h	182;"	d
ovsrec_bridge_col_flow_tables	lib/vswitch-idl.h	195;"	d
ovsrec_bridge_col_ipfix	lib/vswitch-idl.h	185;"	d
ovsrec_bridge_col_mcast_snooping_enable	lib/vswitch-idl.h	188;"	d
ovsrec_bridge_col_mirrors	lib/vswitch-idl.h	178;"	d
ovsrec_bridge_col_name	lib/vswitch-idl.h	192;"	d
ovsrec_bridge_col_netflow	lib/vswitch-idl.h	189;"	d
ovsrec_bridge_col_other_config	lib/vswitch-idl.h	194;"	d
ovsrec_bridge_col_ports	lib/vswitch-idl.h	196;"	d
ovsrec_bridge_col_protocols	lib/vswitch-idl.h	190;"	d
ovsrec_bridge_col_rstp_enable	lib/vswitch-idl.h	181;"	d
ovsrec_bridge_col_rstp_status	lib/vswitch-idl.h	179;"	d
ovsrec_bridge_col_sflow	lib/vswitch-idl.h	193;"	d
ovsrec_bridge_col_status	lib/vswitch-idl.h	184;"	d
ovsrec_bridge_col_stp_enable	lib/vswitch-idl.h	197;"	d
ovsrec_bridge_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_bridge_columns[OVSREC_BRIDGE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_bridge_columns_init	lib/vswitch-idl.c	/^ovsrec_bridge_columns_init(void)$/;"	f	file:
ovsrec_bridge_delete	lib/vswitch-idl.c	/^ovsrec_bridge_delete(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_first	lib/vswitch-idl.c	/^ovsrec_bridge_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_bridge_get_auto_attach	lib/vswitch-idl.c	/^ovsrec_bridge_get_auto_attach(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_controller	lib/vswitch-idl.c	/^ovsrec_bridge_get_controller(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_datapath_id	lib/vswitch-idl.c	/^ovsrec_bridge_get_datapath_id(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_datapath_type	lib/vswitch-idl.c	/^ovsrec_bridge_get_datapath_type(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_datapath_version	lib/vswitch-idl.c	/^ovsrec_bridge_get_datapath_version(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_external_ids	lib/vswitch-idl.c	/^ovsrec_bridge_get_external_ids(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_fail_mode	lib/vswitch-idl.c	/^ovsrec_bridge_get_fail_mode(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_flood_vlans	lib/vswitch-idl.c	/^ovsrec_bridge_get_flood_vlans(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_flow_tables	lib/vswitch-idl.c	/^ovsrec_bridge_get_flow_tables(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_bridge_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_bridge_get_ipfix	lib/vswitch-idl.c	/^ovsrec_bridge_get_ipfix(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_mcast_snooping_enable	lib/vswitch-idl.c	/^ovsrec_bridge_get_mcast_snooping_enable(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_mirrors	lib/vswitch-idl.c	/^ovsrec_bridge_get_mirrors(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_name	lib/vswitch-idl.c	/^ovsrec_bridge_get_name(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_netflow	lib/vswitch-idl.c	/^ovsrec_bridge_get_netflow(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_other_config	lib/vswitch-idl.c	/^ovsrec_bridge_get_other_config(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_ports	lib/vswitch-idl.c	/^ovsrec_bridge_get_ports(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_protocols	lib/vswitch-idl.c	/^ovsrec_bridge_get_protocols(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_rstp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_get_rstp_enable(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_rstp_status	lib/vswitch-idl.c	/^ovsrec_bridge_get_rstp_status(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_sflow	lib/vswitch-idl.c	/^ovsrec_bridge_get_sflow(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_status	lib/vswitch-idl.c	/^ovsrec_bridge_get_status(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_get_stp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_get_stp_enable(const struct ovsrec_bridge *row,$/;"	f
ovsrec_bridge_init	lib/vswitch-idl.c	/^ovsrec_bridge_init(struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_init__	lib/vswitch-idl.c	/^ovsrec_bridge_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_bridge_insert	lib/vswitch-idl.c	/^ovsrec_bridge_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_bridge_next	lib/vswitch-idl.c	/^ovsrec_bridge_next(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_parse_auto_attach	lib/vswitch-idl.c	/^ovsrec_bridge_parse_auto_attach(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_controller	lib/vswitch-idl.c	/^ovsrec_bridge_parse_controller(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_datapath_id	lib/vswitch-idl.c	/^ovsrec_bridge_parse_datapath_id(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_datapath_type	lib/vswitch-idl.c	/^ovsrec_bridge_parse_datapath_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_datapath_version	lib/vswitch-idl.c	/^ovsrec_bridge_parse_datapath_version(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_bridge_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_fail_mode	lib/vswitch-idl.c	/^ovsrec_bridge_parse_fail_mode(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_flood_vlans	lib/vswitch-idl.c	/^ovsrec_bridge_parse_flood_vlans(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_flow_tables	lib/vswitch-idl.c	/^ovsrec_bridge_parse_flow_tables(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_ipfix	lib/vswitch-idl.c	/^ovsrec_bridge_parse_ipfix(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_mcast_snooping_enable	lib/vswitch-idl.c	/^ovsrec_bridge_parse_mcast_snooping_enable(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_mirrors	lib/vswitch-idl.c	/^ovsrec_bridge_parse_mirrors(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_name	lib/vswitch-idl.c	/^ovsrec_bridge_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_netflow	lib/vswitch-idl.c	/^ovsrec_bridge_parse_netflow(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_other_config	lib/vswitch-idl.c	/^ovsrec_bridge_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_ports	lib/vswitch-idl.c	/^ovsrec_bridge_parse_ports(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_protocols	lib/vswitch-idl.c	/^ovsrec_bridge_parse_protocols(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_rstp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_parse_rstp_enable(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_rstp_status	lib/vswitch-idl.c	/^ovsrec_bridge_parse_rstp_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_sflow	lib/vswitch-idl.c	/^ovsrec_bridge_parse_sflow(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_status	lib/vswitch-idl.c	/^ovsrec_bridge_parse_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_parse_stp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_parse_stp_enable(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_bridge_set_auto_attach	lib/vswitch-idl.c	/^ovsrec_bridge_set_auto_attach(const struct ovsrec_bridge *row, const struct ovsrec_autoattach *auto_attach)$/;"	f
ovsrec_bridge_set_controller	lib/vswitch-idl.c	/^ovsrec_bridge_set_controller(const struct ovsrec_bridge *row, struct ovsrec_controller **controller, size_t n_controller)$/;"	f
ovsrec_bridge_set_datapath_id	lib/vswitch-idl.c	/^ovsrec_bridge_set_datapath_id(const struct ovsrec_bridge *row, const char *datapath_id)$/;"	f
ovsrec_bridge_set_datapath_type	lib/vswitch-idl.c	/^ovsrec_bridge_set_datapath_type(const struct ovsrec_bridge *row, const char *datapath_type)$/;"	f
ovsrec_bridge_set_datapath_version	lib/vswitch-idl.c	/^ovsrec_bridge_set_datapath_version(const struct ovsrec_bridge *row, const char *datapath_version)$/;"	f
ovsrec_bridge_set_external_ids	lib/vswitch-idl.c	/^ovsrec_bridge_set_external_ids(const struct ovsrec_bridge *row, const struct smap *external_ids)$/;"	f
ovsrec_bridge_set_fail_mode	lib/vswitch-idl.c	/^ovsrec_bridge_set_fail_mode(const struct ovsrec_bridge *row, const char *fail_mode)$/;"	f
ovsrec_bridge_set_flood_vlans	lib/vswitch-idl.c	/^ovsrec_bridge_set_flood_vlans(const struct ovsrec_bridge *row, const int64_t *flood_vlans, size_t n_flood_vlans)$/;"	f
ovsrec_bridge_set_flow_tables	lib/vswitch-idl.c	/^ovsrec_bridge_set_flow_tables(const struct ovsrec_bridge *row, const int64_t *key_flow_tables, struct ovsrec_flow_table **value_flow_tables, size_t n_flow_tables)$/;"	f
ovsrec_bridge_set_ipfix	lib/vswitch-idl.c	/^ovsrec_bridge_set_ipfix(const struct ovsrec_bridge *row, const struct ovsrec_ipfix *ipfix)$/;"	f
ovsrec_bridge_set_mcast_snooping_enable	lib/vswitch-idl.c	/^ovsrec_bridge_set_mcast_snooping_enable(const struct ovsrec_bridge *row, bool mcast_snooping_enable)$/;"	f
ovsrec_bridge_set_mirrors	lib/vswitch-idl.c	/^ovsrec_bridge_set_mirrors(const struct ovsrec_bridge *row, struct ovsrec_mirror **mirrors, size_t n_mirrors)$/;"	f
ovsrec_bridge_set_name	lib/vswitch-idl.c	/^ovsrec_bridge_set_name(const struct ovsrec_bridge *row, const char *name)$/;"	f
ovsrec_bridge_set_netflow	lib/vswitch-idl.c	/^ovsrec_bridge_set_netflow(const struct ovsrec_bridge *row, const struct ovsrec_netflow *netflow)$/;"	f
ovsrec_bridge_set_other_config	lib/vswitch-idl.c	/^ovsrec_bridge_set_other_config(const struct ovsrec_bridge *row, const struct smap *other_config)$/;"	f
ovsrec_bridge_set_ports	lib/vswitch-idl.c	/^ovsrec_bridge_set_ports(const struct ovsrec_bridge *row, struct ovsrec_port **ports, size_t n_ports)$/;"	f
ovsrec_bridge_set_protocols	lib/vswitch-idl.c	/^ovsrec_bridge_set_protocols(const struct ovsrec_bridge *row, const char **protocols, size_t n_protocols)$/;"	f
ovsrec_bridge_set_rstp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_set_rstp_enable(const struct ovsrec_bridge *row, bool rstp_enable)$/;"	f
ovsrec_bridge_set_rstp_status	lib/vswitch-idl.c	/^ovsrec_bridge_set_rstp_status(const struct ovsrec_bridge *row, const struct smap *rstp_status)$/;"	f
ovsrec_bridge_set_sflow	lib/vswitch-idl.c	/^ovsrec_bridge_set_sflow(const struct ovsrec_bridge *row, const struct ovsrec_sflow *sflow)$/;"	f
ovsrec_bridge_set_status	lib/vswitch-idl.c	/^ovsrec_bridge_set_status(const struct ovsrec_bridge *row, const struct smap *status)$/;"	f
ovsrec_bridge_set_stp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_set_stp_enable(const struct ovsrec_bridge *row, bool stp_enable)$/;"	f
ovsrec_bridge_unparse_auto_attach	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_auto_attach(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_controller	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_controller(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_datapath_id	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_datapath_id(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_datapath_type	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_datapath_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_datapath_version	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_datapath_version(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_fail_mode	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_fail_mode(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_flood_vlans	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_flood_vlans(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_flow_tables	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_flow_tables(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_ipfix	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_ipfix(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_mcast_snooping_enable	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_mcast_snooping_enable(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_mirrors	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_mirrors(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_name	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_netflow	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_netflow(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_ports	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_ports(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_protocols	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_protocols(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_rstp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_rstp_enable(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_rstp_status	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_rstp_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_sflow	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_sflow(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_unparse_status	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_bridge_unparse_stp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_unparse_stp_enable(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_bridge_verify_auto_attach	lib/vswitch-idl.c	/^ovsrec_bridge_verify_auto_attach(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_controller	lib/vswitch-idl.c	/^ovsrec_bridge_verify_controller(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_datapath_id	lib/vswitch-idl.c	/^ovsrec_bridge_verify_datapath_id(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_datapath_type	lib/vswitch-idl.c	/^ovsrec_bridge_verify_datapath_type(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_datapath_version	lib/vswitch-idl.c	/^ovsrec_bridge_verify_datapath_version(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_bridge_verify_external_ids(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_fail_mode	lib/vswitch-idl.c	/^ovsrec_bridge_verify_fail_mode(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_flood_vlans	lib/vswitch-idl.c	/^ovsrec_bridge_verify_flood_vlans(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_flow_tables	lib/vswitch-idl.c	/^ovsrec_bridge_verify_flow_tables(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_ipfix	lib/vswitch-idl.c	/^ovsrec_bridge_verify_ipfix(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_mcast_snooping_enable	lib/vswitch-idl.c	/^ovsrec_bridge_verify_mcast_snooping_enable(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_mirrors	lib/vswitch-idl.c	/^ovsrec_bridge_verify_mirrors(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_name	lib/vswitch-idl.c	/^ovsrec_bridge_verify_name(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_netflow	lib/vswitch-idl.c	/^ovsrec_bridge_verify_netflow(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_other_config	lib/vswitch-idl.c	/^ovsrec_bridge_verify_other_config(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_ports	lib/vswitch-idl.c	/^ovsrec_bridge_verify_ports(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_protocols	lib/vswitch-idl.c	/^ovsrec_bridge_verify_protocols(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_rstp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_verify_rstp_enable(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_rstp_status	lib/vswitch-idl.c	/^ovsrec_bridge_verify_rstp_status(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_sflow	lib/vswitch-idl.c	/^ovsrec_bridge_verify_sflow(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_status	lib/vswitch-idl.c	/^ovsrec_bridge_verify_status(const struct ovsrec_bridge *row)$/;"	f
ovsrec_bridge_verify_stp_enable	lib/vswitch-idl.c	/^ovsrec_bridge_verify_stp_enable(const struct ovsrec_bridge *row)$/;"	f
ovsrec_controller	lib/vswitch-idl.h	/^struct ovsrec_controller {$/;"	s
ovsrec_controller_cast	lib/vswitch-idl.c	/^ovsrec_controller_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_controller_col_connection_mode	lib/vswitch-idl.h	365;"	d
ovsrec_controller_col_controller_burst_limit	lib/vswitch-idl.h	371;"	d
ovsrec_controller_col_controller_rate_limit	lib/vswitch-idl.h	367;"	d
ovsrec_controller_col_enable_async_messages	lib/vswitch-idl.h	375;"	d
ovsrec_controller_col_external_ids	lib/vswitch-idl.h	372;"	d
ovsrec_controller_col_inactivity_probe	lib/vswitch-idl.h	368;"	d
ovsrec_controller_col_is_connected	lib/vswitch-idl.h	374;"	d
ovsrec_controller_col_local_gateway	lib/vswitch-idl.h	373;"	d
ovsrec_controller_col_local_ip	lib/vswitch-idl.h	364;"	d
ovsrec_controller_col_local_netmask	lib/vswitch-idl.h	369;"	d
ovsrec_controller_col_max_backoff	lib/vswitch-idl.h	361;"	d
ovsrec_controller_col_other_config	lib/vswitch-idl.h	366;"	d
ovsrec_controller_col_role	lib/vswitch-idl.h	370;"	d
ovsrec_controller_col_status	lib/vswitch-idl.h	362;"	d
ovsrec_controller_col_target	lib/vswitch-idl.h	363;"	d
ovsrec_controller_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_controller_columns[OVSREC_CONTROLLER_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_controller_columns_init	lib/vswitch-idl.c	/^ovsrec_controller_columns_init(void)$/;"	f	file:
ovsrec_controller_delete	lib/vswitch-idl.c	/^ovsrec_controller_delete(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_first	lib/vswitch-idl.c	/^ovsrec_controller_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_controller_get_connection_mode	lib/vswitch-idl.c	/^ovsrec_controller_get_connection_mode(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_controller_burst_limit	lib/vswitch-idl.c	/^ovsrec_controller_get_controller_burst_limit(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_controller_rate_limit	lib/vswitch-idl.c	/^ovsrec_controller_get_controller_rate_limit(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_enable_async_messages	lib/vswitch-idl.c	/^ovsrec_controller_get_enable_async_messages(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_external_ids	lib/vswitch-idl.c	/^ovsrec_controller_get_external_ids(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_controller_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_controller_get_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_controller_get_inactivity_probe(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_is_connected	lib/vswitch-idl.c	/^ovsrec_controller_get_is_connected(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_local_gateway	lib/vswitch-idl.c	/^ovsrec_controller_get_local_gateway(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_local_ip	lib/vswitch-idl.c	/^ovsrec_controller_get_local_ip(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_local_netmask	lib/vswitch-idl.c	/^ovsrec_controller_get_local_netmask(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_max_backoff	lib/vswitch-idl.c	/^ovsrec_controller_get_max_backoff(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_other_config	lib/vswitch-idl.c	/^ovsrec_controller_get_other_config(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_role	lib/vswitch-idl.c	/^ovsrec_controller_get_role(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_status	lib/vswitch-idl.c	/^ovsrec_controller_get_status(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_get_target	lib/vswitch-idl.c	/^ovsrec_controller_get_target(const struct ovsrec_controller *row,$/;"	f
ovsrec_controller_init	lib/vswitch-idl.c	/^ovsrec_controller_init(struct ovsrec_controller *row)$/;"	f
ovsrec_controller_init__	lib/vswitch-idl.c	/^ovsrec_controller_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_controller_insert	lib/vswitch-idl.c	/^ovsrec_controller_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_controller_next	lib/vswitch-idl.c	/^ovsrec_controller_next(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_parse_connection_mode	lib/vswitch-idl.c	/^ovsrec_controller_parse_connection_mode(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_controller_burst_limit	lib/vswitch-idl.c	/^ovsrec_controller_parse_controller_burst_limit(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_controller_rate_limit	lib/vswitch-idl.c	/^ovsrec_controller_parse_controller_rate_limit(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_enable_async_messages	lib/vswitch-idl.c	/^ovsrec_controller_parse_enable_async_messages(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_controller_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_controller_parse_inactivity_probe(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_is_connected	lib/vswitch-idl.c	/^ovsrec_controller_parse_is_connected(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_local_gateway	lib/vswitch-idl.c	/^ovsrec_controller_parse_local_gateway(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_local_ip	lib/vswitch-idl.c	/^ovsrec_controller_parse_local_ip(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_local_netmask	lib/vswitch-idl.c	/^ovsrec_controller_parse_local_netmask(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_max_backoff	lib/vswitch-idl.c	/^ovsrec_controller_parse_max_backoff(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_other_config	lib/vswitch-idl.c	/^ovsrec_controller_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_role	lib/vswitch-idl.c	/^ovsrec_controller_parse_role(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_status	lib/vswitch-idl.c	/^ovsrec_controller_parse_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_parse_target	lib/vswitch-idl.c	/^ovsrec_controller_parse_target(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_controller_set_connection_mode	lib/vswitch-idl.c	/^ovsrec_controller_set_connection_mode(const struct ovsrec_controller *row, const char *connection_mode)$/;"	f
ovsrec_controller_set_controller_burst_limit	lib/vswitch-idl.c	/^ovsrec_controller_set_controller_burst_limit(const struct ovsrec_controller *row, const int64_t *controller_burst_limit, size_t n_controller_burst_limit)$/;"	f
ovsrec_controller_set_controller_rate_limit	lib/vswitch-idl.c	/^ovsrec_controller_set_controller_rate_limit(const struct ovsrec_controller *row, const int64_t *controller_rate_limit, size_t n_controller_rate_limit)$/;"	f
ovsrec_controller_set_enable_async_messages	lib/vswitch-idl.c	/^ovsrec_controller_set_enable_async_messages(const struct ovsrec_controller *row, const bool *enable_async_messages, size_t n_enable_async_messages)$/;"	f
ovsrec_controller_set_external_ids	lib/vswitch-idl.c	/^ovsrec_controller_set_external_ids(const struct ovsrec_controller *row, const struct smap *external_ids)$/;"	f
ovsrec_controller_set_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_controller_set_inactivity_probe(const struct ovsrec_controller *row, const int64_t *inactivity_probe, size_t n_inactivity_probe)$/;"	f
ovsrec_controller_set_is_connected	lib/vswitch-idl.c	/^ovsrec_controller_set_is_connected(const struct ovsrec_controller *row, bool is_connected)$/;"	f
ovsrec_controller_set_local_gateway	lib/vswitch-idl.c	/^ovsrec_controller_set_local_gateway(const struct ovsrec_controller *row, const char *local_gateway)$/;"	f
ovsrec_controller_set_local_ip	lib/vswitch-idl.c	/^ovsrec_controller_set_local_ip(const struct ovsrec_controller *row, const char *local_ip)$/;"	f
ovsrec_controller_set_local_netmask	lib/vswitch-idl.c	/^ovsrec_controller_set_local_netmask(const struct ovsrec_controller *row, const char *local_netmask)$/;"	f
ovsrec_controller_set_max_backoff	lib/vswitch-idl.c	/^ovsrec_controller_set_max_backoff(const struct ovsrec_controller *row, const int64_t *max_backoff, size_t n_max_backoff)$/;"	f
ovsrec_controller_set_other_config	lib/vswitch-idl.c	/^ovsrec_controller_set_other_config(const struct ovsrec_controller *row, const struct smap *other_config)$/;"	f
ovsrec_controller_set_role	lib/vswitch-idl.c	/^ovsrec_controller_set_role(const struct ovsrec_controller *row, const char *role)$/;"	f
ovsrec_controller_set_status	lib/vswitch-idl.c	/^ovsrec_controller_set_status(const struct ovsrec_controller *row, const struct smap *status)$/;"	f
ovsrec_controller_set_target	lib/vswitch-idl.c	/^ovsrec_controller_set_target(const struct ovsrec_controller *row, const char *target)$/;"	f
ovsrec_controller_unparse_connection_mode	lib/vswitch-idl.c	/^ovsrec_controller_unparse_connection_mode(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_controller_unparse_controller_burst_limit	lib/vswitch-idl.c	/^ovsrec_controller_unparse_controller_burst_limit(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_controller_rate_limit	lib/vswitch-idl.c	/^ovsrec_controller_unparse_controller_rate_limit(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_enable_async_messages	lib/vswitch-idl.c	/^ovsrec_controller_unparse_enable_async_messages(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_controller_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_controller_unparse_inactivity_probe(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_is_connected	lib/vswitch-idl.c	/^ovsrec_controller_unparse_is_connected(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_controller_unparse_local_gateway	lib/vswitch-idl.c	/^ovsrec_controller_unparse_local_gateway(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_controller_unparse_local_ip	lib/vswitch-idl.c	/^ovsrec_controller_unparse_local_ip(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_controller_unparse_local_netmask	lib/vswitch-idl.c	/^ovsrec_controller_unparse_local_netmask(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_controller_unparse_max_backoff	lib/vswitch-idl.c	/^ovsrec_controller_unparse_max_backoff(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_controller_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_role	lib/vswitch-idl.c	/^ovsrec_controller_unparse_role(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_controller_unparse_status	lib/vswitch-idl.c	/^ovsrec_controller_unparse_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_controller_unparse_target	lib/vswitch-idl.c	/^ovsrec_controller_unparse_target(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_controller_verify_connection_mode	lib/vswitch-idl.c	/^ovsrec_controller_verify_connection_mode(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_controller_burst_limit	lib/vswitch-idl.c	/^ovsrec_controller_verify_controller_burst_limit(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_controller_rate_limit	lib/vswitch-idl.c	/^ovsrec_controller_verify_controller_rate_limit(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_enable_async_messages	lib/vswitch-idl.c	/^ovsrec_controller_verify_enable_async_messages(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_controller_verify_external_ids(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_controller_verify_inactivity_probe(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_is_connected	lib/vswitch-idl.c	/^ovsrec_controller_verify_is_connected(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_local_gateway	lib/vswitch-idl.c	/^ovsrec_controller_verify_local_gateway(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_local_ip	lib/vswitch-idl.c	/^ovsrec_controller_verify_local_ip(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_local_netmask	lib/vswitch-idl.c	/^ovsrec_controller_verify_local_netmask(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_max_backoff	lib/vswitch-idl.c	/^ovsrec_controller_verify_max_backoff(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_other_config	lib/vswitch-idl.c	/^ovsrec_controller_verify_other_config(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_role	lib/vswitch-idl.c	/^ovsrec_controller_verify_role(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_status	lib/vswitch-idl.c	/^ovsrec_controller_verify_status(const struct ovsrec_controller *row)$/;"	f
ovsrec_controller_verify_target	lib/vswitch-idl.c	/^ovsrec_controller_verify_target(const struct ovsrec_controller *row)$/;"	f
ovsrec_flow_sample_collector_set	lib/vswitch-idl.h	/^struct ovsrec_flow_sample_collector_set {$/;"	s
ovsrec_flow_sample_collector_set_cast	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_flow_sample_collector_set_col_bridge	lib/vswitch-idl.h	469;"	d
ovsrec_flow_sample_collector_set_col_external_ids	lib/vswitch-idl.h	470;"	d
ovsrec_flow_sample_collector_set_col_id	lib/vswitch-idl.h	471;"	d
ovsrec_flow_sample_collector_set_col_ipfix	lib/vswitch-idl.h	472;"	d
ovsrec_flow_sample_collector_set_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_flow_sample_collector_set_columns[OVSREC_FLOW_SAMPLE_COLLECTOR_SET_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_flow_sample_collector_set_columns_init	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_columns_init(void)$/;"	f	file:
ovsrec_flow_sample_collector_set_delete	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_delete(const struct ovsrec_flow_sample_collector_set *row)$/;"	f
ovsrec_flow_sample_collector_set_first	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_flow_sample_collector_set_get_bridge	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_get_bridge(const struct ovsrec_flow_sample_collector_set *row,$/;"	f
ovsrec_flow_sample_collector_set_get_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_get_external_ids(const struct ovsrec_flow_sample_collector_set *row,$/;"	f
ovsrec_flow_sample_collector_set_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_flow_sample_collector_set_get_id	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_get_id(const struct ovsrec_flow_sample_collector_set *row,$/;"	f
ovsrec_flow_sample_collector_set_get_ipfix	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_get_ipfix(const struct ovsrec_flow_sample_collector_set *row,$/;"	f
ovsrec_flow_sample_collector_set_init	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_init(struct ovsrec_flow_sample_collector_set *row)$/;"	f
ovsrec_flow_sample_collector_set_init__	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_flow_sample_collector_set_insert	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_flow_sample_collector_set_next	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_next(const struct ovsrec_flow_sample_collector_set *row)$/;"	f
ovsrec_flow_sample_collector_set_parse_bridge	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_parse_bridge(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_sample_collector_set_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_sample_collector_set_parse_id	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_parse_id(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_sample_collector_set_parse_ipfix	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_parse_ipfix(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_sample_collector_set_set_bridge	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_set_bridge(const struct ovsrec_flow_sample_collector_set *row, const struct ovsrec_bridge *bridge)$/;"	f
ovsrec_flow_sample_collector_set_set_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_set_external_ids(const struct ovsrec_flow_sample_collector_set *row, const struct smap *external_ids)$/;"	f
ovsrec_flow_sample_collector_set_set_id	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_set_id(const struct ovsrec_flow_sample_collector_set *row, int64_t id)$/;"	f
ovsrec_flow_sample_collector_set_set_ipfix	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_set_ipfix(const struct ovsrec_flow_sample_collector_set *row, const struct ovsrec_ipfix *ipfix)$/;"	f
ovsrec_flow_sample_collector_set_unparse_bridge	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_unparse_bridge(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_flow_sample_collector_set_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_flow_sample_collector_set_unparse_id	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_unparse_id(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_flow_sample_collector_set_unparse_ipfix	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_unparse_ipfix(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_flow_sample_collector_set_verify_bridge	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_verify_bridge(const struct ovsrec_flow_sample_collector_set *row)$/;"	f
ovsrec_flow_sample_collector_set_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_verify_external_ids(const struct ovsrec_flow_sample_collector_set *row)$/;"	f
ovsrec_flow_sample_collector_set_verify_id	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_verify_id(const struct ovsrec_flow_sample_collector_set *row)$/;"	f
ovsrec_flow_sample_collector_set_verify_ipfix	lib/vswitch-idl.c	/^ovsrec_flow_sample_collector_set_verify_ipfix(const struct ovsrec_flow_sample_collector_set *row)$/;"	f
ovsrec_flow_table	lib/vswitch-idl.h	/^struct ovsrec_flow_table {$/;"	s
ovsrec_flow_table_cast	lib/vswitch-idl.c	/^ovsrec_flow_table_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_flow_table_col_external_ids	lib/vswitch-idl.h	549;"	d
ovsrec_flow_table_col_flow_limit	lib/vswitch-idl.h	546;"	d
ovsrec_flow_table_col_groups	lib/vswitch-idl.h	548;"	d
ovsrec_flow_table_col_name	lib/vswitch-idl.h	545;"	d
ovsrec_flow_table_col_overflow_policy	lib/vswitch-idl.h	544;"	d
ovsrec_flow_table_col_prefixes	lib/vswitch-idl.h	547;"	d
ovsrec_flow_table_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_flow_table_columns[OVSREC_FLOW_TABLE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_flow_table_columns_init	lib/vswitch-idl.c	/^ovsrec_flow_table_columns_init(void)$/;"	f	file:
ovsrec_flow_table_delete	lib/vswitch-idl.c	/^ovsrec_flow_table_delete(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_first	lib/vswitch-idl.c	/^ovsrec_flow_table_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_flow_table_get_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_table_get_external_ids(const struct ovsrec_flow_table *row,$/;"	f
ovsrec_flow_table_get_flow_limit	lib/vswitch-idl.c	/^ovsrec_flow_table_get_flow_limit(const struct ovsrec_flow_table *row,$/;"	f
ovsrec_flow_table_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_flow_table_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_flow_table_get_groups	lib/vswitch-idl.c	/^ovsrec_flow_table_get_groups(const struct ovsrec_flow_table *row,$/;"	f
ovsrec_flow_table_get_name	lib/vswitch-idl.c	/^ovsrec_flow_table_get_name(const struct ovsrec_flow_table *row,$/;"	f
ovsrec_flow_table_get_overflow_policy	lib/vswitch-idl.c	/^ovsrec_flow_table_get_overflow_policy(const struct ovsrec_flow_table *row,$/;"	f
ovsrec_flow_table_get_prefixes	lib/vswitch-idl.c	/^ovsrec_flow_table_get_prefixes(const struct ovsrec_flow_table *row,$/;"	f
ovsrec_flow_table_init	lib/vswitch-idl.c	/^ovsrec_flow_table_init(struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_init__	lib/vswitch-idl.c	/^ovsrec_flow_table_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_flow_table_insert	lib/vswitch-idl.c	/^ovsrec_flow_table_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_flow_table_next	lib/vswitch-idl.c	/^ovsrec_flow_table_next(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_table_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_table_parse_flow_limit	lib/vswitch-idl.c	/^ovsrec_flow_table_parse_flow_limit(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_table_parse_groups	lib/vswitch-idl.c	/^ovsrec_flow_table_parse_groups(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_table_parse_name	lib/vswitch-idl.c	/^ovsrec_flow_table_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_table_parse_overflow_policy	lib/vswitch-idl.c	/^ovsrec_flow_table_parse_overflow_policy(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_table_parse_prefixes	lib/vswitch-idl.c	/^ovsrec_flow_table_parse_prefixes(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_flow_table_set_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_table_set_external_ids(const struct ovsrec_flow_table *row, const struct smap *external_ids)$/;"	f
ovsrec_flow_table_set_flow_limit	lib/vswitch-idl.c	/^ovsrec_flow_table_set_flow_limit(const struct ovsrec_flow_table *row, const int64_t *flow_limit, size_t n_flow_limit)$/;"	f
ovsrec_flow_table_set_groups	lib/vswitch-idl.c	/^ovsrec_flow_table_set_groups(const struct ovsrec_flow_table *row, const char **groups, size_t n_groups)$/;"	f
ovsrec_flow_table_set_name	lib/vswitch-idl.c	/^ovsrec_flow_table_set_name(const struct ovsrec_flow_table *row, const char *name)$/;"	f
ovsrec_flow_table_set_overflow_policy	lib/vswitch-idl.c	/^ovsrec_flow_table_set_overflow_policy(const struct ovsrec_flow_table *row, const char *overflow_policy)$/;"	f
ovsrec_flow_table_set_prefixes	lib/vswitch-idl.c	/^ovsrec_flow_table_set_prefixes(const struct ovsrec_flow_table *row, const char **prefixes, size_t n_prefixes)$/;"	f
ovsrec_flow_table_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_table_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_flow_table_unparse_flow_limit	lib/vswitch-idl.c	/^ovsrec_flow_table_unparse_flow_limit(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_flow_table_unparse_groups	lib/vswitch-idl.c	/^ovsrec_flow_table_unparse_groups(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_flow_table_unparse_name	lib/vswitch-idl.c	/^ovsrec_flow_table_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_flow_table_unparse_overflow_policy	lib/vswitch-idl.c	/^ovsrec_flow_table_unparse_overflow_policy(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_flow_table_unparse_prefixes	lib/vswitch-idl.c	/^ovsrec_flow_table_unparse_prefixes(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_flow_table_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_flow_table_verify_external_ids(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_verify_flow_limit	lib/vswitch-idl.c	/^ovsrec_flow_table_verify_flow_limit(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_verify_groups	lib/vswitch-idl.c	/^ovsrec_flow_table_verify_groups(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_verify_name	lib/vswitch-idl.c	/^ovsrec_flow_table_verify_name(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_verify_overflow_policy	lib/vswitch-idl.c	/^ovsrec_flow_table_verify_overflow_policy(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_flow_table_verify_prefixes	lib/vswitch-idl.c	/^ovsrec_flow_table_verify_prefixes(const struct ovsrec_flow_table *row)$/;"	f
ovsrec_fscs_is_valid	vswitchd/bridge.c	/^ovsrec_fscs_is_valid(const struct ovsrec_flow_sample_collector_set *fscs,$/;"	f	file:
ovsrec_get_db_version	lib/vswitch-idl.c	/^ovsrec_get_db_version(void)$/;"	f
ovsrec_idl_class	lib/vswitch-idl.c	/^struct ovsdb_idl_class ovsrec_idl_class = {$/;"	v	typeref:struct:ovsdb_idl_class
ovsrec_init	lib/vswitch-idl.c	/^ovsrec_init(void)$/;"	f
ovsrec_interface	lib/vswitch-idl.h	/^struct ovsrec_interface {$/;"	s
ovsrec_interface_cast	lib/vswitch-idl.c	/^ovsrec_interface_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_interface_col_admin_state	lib/vswitch-idl.h	864;"	d
ovsrec_interface_col_bfd	lib/vswitch-idl.h	852;"	d
ovsrec_interface_col_bfd_status	lib/vswitch-idl.h	855;"	d
ovsrec_interface_col_cfm_fault	lib/vswitch-idl.h	847;"	d
ovsrec_interface_col_cfm_fault_status	lib/vswitch-idl.h	875;"	d
ovsrec_interface_col_cfm_flap_count	lib/vswitch-idl.h	871;"	d
ovsrec_interface_col_cfm_health	lib/vswitch-idl.h	861;"	d
ovsrec_interface_col_cfm_mpid	lib/vswitch-idl.h	872;"	d
ovsrec_interface_col_cfm_remote_mpids	lib/vswitch-idl.h	876;"	d
ovsrec_interface_col_cfm_remote_opstate	lib/vswitch-idl.h	845;"	d
ovsrec_interface_col_duplex	lib/vswitch-idl.h	853;"	d
ovsrec_interface_col_error	lib/vswitch-idl.h	862;"	d
ovsrec_interface_col_external_ids	lib/vswitch-idl.h	865;"	d
ovsrec_interface_col_ifindex	lib/vswitch-idl.h	873;"	d
ovsrec_interface_col_ingress_policing_burst	lib/vswitch-idl.h	860;"	d
ovsrec_interface_col_ingress_policing_rate	lib/vswitch-idl.h	849;"	d
ovsrec_interface_col_lacp_current	lib/vswitch-idl.h	857;"	d
ovsrec_interface_col_link_resets	lib/vswitch-idl.h	850;"	d
ovsrec_interface_col_link_speed	lib/vswitch-idl.h	869;"	d
ovsrec_interface_col_link_state	lib/vswitch-idl.h	846;"	d
ovsrec_interface_col_lldp	lib/vswitch-idl.h	859;"	d
ovsrec_interface_col_mac	lib/vswitch-idl.h	863;"	d
ovsrec_interface_col_mac_in_use	lib/vswitch-idl.h	854;"	d
ovsrec_interface_col_mtu	lib/vswitch-idl.h	870;"	d
ovsrec_interface_col_name	lib/vswitch-idl.h	867;"	d
ovsrec_interface_col_ofport	lib/vswitch-idl.h	866;"	d
ovsrec_interface_col_ofport_request	lib/vswitch-idl.h	848;"	d
ovsrec_interface_col_options	lib/vswitch-idl.h	874;"	d
ovsrec_interface_col_other_config	lib/vswitch-idl.h	868;"	d
ovsrec_interface_col_statistics	lib/vswitch-idl.h	851;"	d
ovsrec_interface_col_status	lib/vswitch-idl.h	858;"	d
ovsrec_interface_col_type	lib/vswitch-idl.h	856;"	d
ovsrec_interface_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_interface_columns[OVSREC_INTERFACE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_interface_columns_init	lib/vswitch-idl.c	/^ovsrec_interface_columns_init(void)$/;"	f	file:
ovsrec_interface_delete	lib/vswitch-idl.c	/^ovsrec_interface_delete(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_first	lib/vswitch-idl.c	/^ovsrec_interface_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_interface_get_admin_state	lib/vswitch-idl.c	/^ovsrec_interface_get_admin_state(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_bfd	lib/vswitch-idl.c	/^ovsrec_interface_get_bfd(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_bfd_status	lib/vswitch-idl.c	/^ovsrec_interface_get_bfd_status(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_cfm_fault	lib/vswitch-idl.c	/^ovsrec_interface_get_cfm_fault(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_cfm_fault_status	lib/vswitch-idl.c	/^ovsrec_interface_get_cfm_fault_status(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_cfm_flap_count	lib/vswitch-idl.c	/^ovsrec_interface_get_cfm_flap_count(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_cfm_health	lib/vswitch-idl.c	/^ovsrec_interface_get_cfm_health(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_cfm_mpid	lib/vswitch-idl.c	/^ovsrec_interface_get_cfm_mpid(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_cfm_remote_mpids	lib/vswitch-idl.c	/^ovsrec_interface_get_cfm_remote_mpids(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_cfm_remote_opstate	lib/vswitch-idl.c	/^ovsrec_interface_get_cfm_remote_opstate(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_duplex	lib/vswitch-idl.c	/^ovsrec_interface_get_duplex(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_error	lib/vswitch-idl.c	/^ovsrec_interface_get_error(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_external_ids	lib/vswitch-idl.c	/^ovsrec_interface_get_external_ids(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_interface_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_interface_get_ifindex	lib/vswitch-idl.c	/^ovsrec_interface_get_ifindex(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_ingress_policing_burst	lib/vswitch-idl.c	/^ovsrec_interface_get_ingress_policing_burst(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_ingress_policing_rate	lib/vswitch-idl.c	/^ovsrec_interface_get_ingress_policing_rate(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_lacp_current	lib/vswitch-idl.c	/^ovsrec_interface_get_lacp_current(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_link_resets	lib/vswitch-idl.c	/^ovsrec_interface_get_link_resets(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_link_speed	lib/vswitch-idl.c	/^ovsrec_interface_get_link_speed(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_link_state	lib/vswitch-idl.c	/^ovsrec_interface_get_link_state(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_lldp	lib/vswitch-idl.c	/^ovsrec_interface_get_lldp(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_mac	lib/vswitch-idl.c	/^ovsrec_interface_get_mac(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_mac_in_use	lib/vswitch-idl.c	/^ovsrec_interface_get_mac_in_use(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_mtu	lib/vswitch-idl.c	/^ovsrec_interface_get_mtu(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_name	lib/vswitch-idl.c	/^ovsrec_interface_get_name(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_ofport	lib/vswitch-idl.c	/^ovsrec_interface_get_ofport(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_ofport_request	lib/vswitch-idl.c	/^ovsrec_interface_get_ofport_request(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_options	lib/vswitch-idl.c	/^ovsrec_interface_get_options(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_other_config	lib/vswitch-idl.c	/^ovsrec_interface_get_other_config(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_statistics	lib/vswitch-idl.c	/^ovsrec_interface_get_statistics(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_status	lib/vswitch-idl.c	/^ovsrec_interface_get_status(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_get_type	lib/vswitch-idl.c	/^ovsrec_interface_get_type(const struct ovsrec_interface *row,$/;"	f
ovsrec_interface_init	lib/vswitch-idl.c	/^ovsrec_interface_init(struct ovsrec_interface *row)$/;"	f
ovsrec_interface_init__	lib/vswitch-idl.c	/^ovsrec_interface_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_interface_insert	lib/vswitch-idl.c	/^ovsrec_interface_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_interface_next	lib/vswitch-idl.c	/^ovsrec_interface_next(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_parse_admin_state	lib/vswitch-idl.c	/^ovsrec_interface_parse_admin_state(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_bfd	lib/vswitch-idl.c	/^ovsrec_interface_parse_bfd(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_bfd_status	lib/vswitch-idl.c	/^ovsrec_interface_parse_bfd_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_cfm_fault	lib/vswitch-idl.c	/^ovsrec_interface_parse_cfm_fault(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_cfm_fault_status	lib/vswitch-idl.c	/^ovsrec_interface_parse_cfm_fault_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_cfm_flap_count	lib/vswitch-idl.c	/^ovsrec_interface_parse_cfm_flap_count(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_cfm_health	lib/vswitch-idl.c	/^ovsrec_interface_parse_cfm_health(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_cfm_mpid	lib/vswitch-idl.c	/^ovsrec_interface_parse_cfm_mpid(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_cfm_remote_mpids	lib/vswitch-idl.c	/^ovsrec_interface_parse_cfm_remote_mpids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_cfm_remote_opstate	lib/vswitch-idl.c	/^ovsrec_interface_parse_cfm_remote_opstate(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_duplex	lib/vswitch-idl.c	/^ovsrec_interface_parse_duplex(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_error	lib/vswitch-idl.c	/^ovsrec_interface_parse_error(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_interface_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_ifindex	lib/vswitch-idl.c	/^ovsrec_interface_parse_ifindex(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_ingress_policing_burst	lib/vswitch-idl.c	/^ovsrec_interface_parse_ingress_policing_burst(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_ingress_policing_rate	lib/vswitch-idl.c	/^ovsrec_interface_parse_ingress_policing_rate(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_lacp_current	lib/vswitch-idl.c	/^ovsrec_interface_parse_lacp_current(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_link_resets	lib/vswitch-idl.c	/^ovsrec_interface_parse_link_resets(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_link_speed	lib/vswitch-idl.c	/^ovsrec_interface_parse_link_speed(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_link_state	lib/vswitch-idl.c	/^ovsrec_interface_parse_link_state(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_lldp	lib/vswitch-idl.c	/^ovsrec_interface_parse_lldp(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_mac	lib/vswitch-idl.c	/^ovsrec_interface_parse_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_mac_in_use	lib/vswitch-idl.c	/^ovsrec_interface_parse_mac_in_use(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_mtu	lib/vswitch-idl.c	/^ovsrec_interface_parse_mtu(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_name	lib/vswitch-idl.c	/^ovsrec_interface_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_ofport	lib/vswitch-idl.c	/^ovsrec_interface_parse_ofport(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_ofport_request	lib/vswitch-idl.c	/^ovsrec_interface_parse_ofport_request(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_options	lib/vswitch-idl.c	/^ovsrec_interface_parse_options(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_other_config	lib/vswitch-idl.c	/^ovsrec_interface_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_statistics	lib/vswitch-idl.c	/^ovsrec_interface_parse_statistics(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_status	lib/vswitch-idl.c	/^ovsrec_interface_parse_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_parse_type	lib/vswitch-idl.c	/^ovsrec_interface_parse_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_interface_set_admin_state	lib/vswitch-idl.c	/^ovsrec_interface_set_admin_state(const struct ovsrec_interface *row, const char *admin_state)$/;"	f
ovsrec_interface_set_bfd	lib/vswitch-idl.c	/^ovsrec_interface_set_bfd(const struct ovsrec_interface *row, const struct smap *bfd)$/;"	f
ovsrec_interface_set_bfd_status	lib/vswitch-idl.c	/^ovsrec_interface_set_bfd_status(const struct ovsrec_interface *row, const struct smap *bfd_status)$/;"	f
ovsrec_interface_set_cfm_fault	lib/vswitch-idl.c	/^ovsrec_interface_set_cfm_fault(const struct ovsrec_interface *row, const bool *cfm_fault, size_t n_cfm_fault)$/;"	f
ovsrec_interface_set_cfm_fault_status	lib/vswitch-idl.c	/^ovsrec_interface_set_cfm_fault_status(const struct ovsrec_interface *row, const char **cfm_fault_status, size_t n_cfm_fault_status)$/;"	f
ovsrec_interface_set_cfm_flap_count	lib/vswitch-idl.c	/^ovsrec_interface_set_cfm_flap_count(const struct ovsrec_interface *row, const int64_t *cfm_flap_count, size_t n_cfm_flap_count)$/;"	f
ovsrec_interface_set_cfm_health	lib/vswitch-idl.c	/^ovsrec_interface_set_cfm_health(const struct ovsrec_interface *row, const int64_t *cfm_health, size_t n_cfm_health)$/;"	f
ovsrec_interface_set_cfm_mpid	lib/vswitch-idl.c	/^ovsrec_interface_set_cfm_mpid(const struct ovsrec_interface *row, const int64_t *cfm_mpid, size_t n_cfm_mpid)$/;"	f
ovsrec_interface_set_cfm_remote_mpids	lib/vswitch-idl.c	/^ovsrec_interface_set_cfm_remote_mpids(const struct ovsrec_interface *row, const int64_t *cfm_remote_mpids, size_t n_cfm_remote_mpids)$/;"	f
ovsrec_interface_set_cfm_remote_opstate	lib/vswitch-idl.c	/^ovsrec_interface_set_cfm_remote_opstate(const struct ovsrec_interface *row, const char *cfm_remote_opstate)$/;"	f
ovsrec_interface_set_duplex	lib/vswitch-idl.c	/^ovsrec_interface_set_duplex(const struct ovsrec_interface *row, const char *duplex)$/;"	f
ovsrec_interface_set_error	lib/vswitch-idl.c	/^ovsrec_interface_set_error(const struct ovsrec_interface *row, const char *error)$/;"	f
ovsrec_interface_set_external_ids	lib/vswitch-idl.c	/^ovsrec_interface_set_external_ids(const struct ovsrec_interface *row, const struct smap *external_ids)$/;"	f
ovsrec_interface_set_ifindex	lib/vswitch-idl.c	/^ovsrec_interface_set_ifindex(const struct ovsrec_interface *row, const int64_t *ifindex, size_t n_ifindex)$/;"	f
ovsrec_interface_set_ingress_policing_burst	lib/vswitch-idl.c	/^ovsrec_interface_set_ingress_policing_burst(const struct ovsrec_interface *row, int64_t ingress_policing_burst)$/;"	f
ovsrec_interface_set_ingress_policing_rate	lib/vswitch-idl.c	/^ovsrec_interface_set_ingress_policing_rate(const struct ovsrec_interface *row, int64_t ingress_policing_rate)$/;"	f
ovsrec_interface_set_lacp_current	lib/vswitch-idl.c	/^ovsrec_interface_set_lacp_current(const struct ovsrec_interface *row, const bool *lacp_current, size_t n_lacp_current)$/;"	f
ovsrec_interface_set_link_resets	lib/vswitch-idl.c	/^ovsrec_interface_set_link_resets(const struct ovsrec_interface *row, const int64_t *link_resets, size_t n_link_resets)$/;"	f
ovsrec_interface_set_link_speed	lib/vswitch-idl.c	/^ovsrec_interface_set_link_speed(const struct ovsrec_interface *row, const int64_t *link_speed, size_t n_link_speed)$/;"	f
ovsrec_interface_set_link_state	lib/vswitch-idl.c	/^ovsrec_interface_set_link_state(const struct ovsrec_interface *row, const char *link_state)$/;"	f
ovsrec_interface_set_lldp	lib/vswitch-idl.c	/^ovsrec_interface_set_lldp(const struct ovsrec_interface *row, const struct smap *lldp)$/;"	f
ovsrec_interface_set_mac	lib/vswitch-idl.c	/^ovsrec_interface_set_mac(const struct ovsrec_interface *row, const char *mac)$/;"	f
ovsrec_interface_set_mac_in_use	lib/vswitch-idl.c	/^ovsrec_interface_set_mac_in_use(const struct ovsrec_interface *row, const char *mac_in_use)$/;"	f
ovsrec_interface_set_mtu	lib/vswitch-idl.c	/^ovsrec_interface_set_mtu(const struct ovsrec_interface *row, const int64_t *mtu, size_t n_mtu)$/;"	f
ovsrec_interface_set_name	lib/vswitch-idl.c	/^ovsrec_interface_set_name(const struct ovsrec_interface *row, const char *name)$/;"	f
ovsrec_interface_set_ofport	lib/vswitch-idl.c	/^ovsrec_interface_set_ofport(const struct ovsrec_interface *row, const int64_t *ofport, size_t n_ofport)$/;"	f
ovsrec_interface_set_ofport_request	lib/vswitch-idl.c	/^ovsrec_interface_set_ofport_request(const struct ovsrec_interface *row, const int64_t *ofport_request, size_t n_ofport_request)$/;"	f
ovsrec_interface_set_options	lib/vswitch-idl.c	/^ovsrec_interface_set_options(const struct ovsrec_interface *row, const struct smap *options)$/;"	f
ovsrec_interface_set_other_config	lib/vswitch-idl.c	/^ovsrec_interface_set_other_config(const struct ovsrec_interface *row, const struct smap *other_config)$/;"	f
ovsrec_interface_set_statistics	lib/vswitch-idl.c	/^ovsrec_interface_set_statistics(const struct ovsrec_interface *row, const char **key_statistics, const int64_t *value_statistics, size_t n_statistics)$/;"	f
ovsrec_interface_set_status	lib/vswitch-idl.c	/^ovsrec_interface_set_status(const struct ovsrec_interface *row, const struct smap *status)$/;"	f
ovsrec_interface_set_type	lib/vswitch-idl.c	/^ovsrec_interface_set_type(const struct ovsrec_interface *row, const char *type)$/;"	f
ovsrec_interface_unparse_admin_state	lib/vswitch-idl.c	/^ovsrec_interface_unparse_admin_state(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_bfd	lib/vswitch-idl.c	/^ovsrec_interface_unparse_bfd(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_bfd_status	lib/vswitch-idl.c	/^ovsrec_interface_unparse_bfd_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_cfm_fault	lib/vswitch-idl.c	/^ovsrec_interface_unparse_cfm_fault(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_cfm_fault_status	lib/vswitch-idl.c	/^ovsrec_interface_unparse_cfm_fault_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_cfm_flap_count	lib/vswitch-idl.c	/^ovsrec_interface_unparse_cfm_flap_count(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_cfm_health	lib/vswitch-idl.c	/^ovsrec_interface_unparse_cfm_health(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_cfm_mpid	lib/vswitch-idl.c	/^ovsrec_interface_unparse_cfm_mpid(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_cfm_remote_mpids	lib/vswitch-idl.c	/^ovsrec_interface_unparse_cfm_remote_mpids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_cfm_remote_opstate	lib/vswitch-idl.c	/^ovsrec_interface_unparse_cfm_remote_opstate(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_duplex	lib/vswitch-idl.c	/^ovsrec_interface_unparse_duplex(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_error	lib/vswitch-idl.c	/^ovsrec_interface_unparse_error(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_interface_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_ifindex	lib/vswitch-idl.c	/^ovsrec_interface_unparse_ifindex(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_ingress_policing_burst	lib/vswitch-idl.c	/^ovsrec_interface_unparse_ingress_policing_burst(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_ingress_policing_rate	lib/vswitch-idl.c	/^ovsrec_interface_unparse_ingress_policing_rate(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_lacp_current	lib/vswitch-idl.c	/^ovsrec_interface_unparse_lacp_current(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_link_resets	lib/vswitch-idl.c	/^ovsrec_interface_unparse_link_resets(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_link_speed	lib/vswitch-idl.c	/^ovsrec_interface_unparse_link_speed(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_link_state	lib/vswitch-idl.c	/^ovsrec_interface_unparse_link_state(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_lldp	lib/vswitch-idl.c	/^ovsrec_interface_unparse_lldp(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_mac	lib/vswitch-idl.c	/^ovsrec_interface_unparse_mac(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_mac_in_use	lib/vswitch-idl.c	/^ovsrec_interface_unparse_mac_in_use(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_mtu	lib/vswitch-idl.c	/^ovsrec_interface_unparse_mtu(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_name	lib/vswitch-idl.c	/^ovsrec_interface_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_unparse_ofport	lib/vswitch-idl.c	/^ovsrec_interface_unparse_ofport(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_ofport_request	lib/vswitch-idl.c	/^ovsrec_interface_unparse_ofport_request(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_options	lib/vswitch-idl.c	/^ovsrec_interface_unparse_options(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_interface_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_statistics	lib/vswitch-idl.c	/^ovsrec_interface_unparse_statistics(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_status	lib/vswitch-idl.c	/^ovsrec_interface_unparse_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_interface_unparse_type	lib/vswitch-idl.c	/^ovsrec_interface_unparse_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_interface_verify_admin_state	lib/vswitch-idl.c	/^ovsrec_interface_verify_admin_state(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_bfd	lib/vswitch-idl.c	/^ovsrec_interface_verify_bfd(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_bfd_status	lib/vswitch-idl.c	/^ovsrec_interface_verify_bfd_status(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_cfm_fault	lib/vswitch-idl.c	/^ovsrec_interface_verify_cfm_fault(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_cfm_fault_status	lib/vswitch-idl.c	/^ovsrec_interface_verify_cfm_fault_status(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_cfm_flap_count	lib/vswitch-idl.c	/^ovsrec_interface_verify_cfm_flap_count(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_cfm_health	lib/vswitch-idl.c	/^ovsrec_interface_verify_cfm_health(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_cfm_mpid	lib/vswitch-idl.c	/^ovsrec_interface_verify_cfm_mpid(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_cfm_remote_mpids	lib/vswitch-idl.c	/^ovsrec_interface_verify_cfm_remote_mpids(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_cfm_remote_opstate	lib/vswitch-idl.c	/^ovsrec_interface_verify_cfm_remote_opstate(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_duplex	lib/vswitch-idl.c	/^ovsrec_interface_verify_duplex(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_error	lib/vswitch-idl.c	/^ovsrec_interface_verify_error(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_interface_verify_external_ids(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_ifindex	lib/vswitch-idl.c	/^ovsrec_interface_verify_ifindex(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_ingress_policing_burst	lib/vswitch-idl.c	/^ovsrec_interface_verify_ingress_policing_burst(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_ingress_policing_rate	lib/vswitch-idl.c	/^ovsrec_interface_verify_ingress_policing_rate(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_lacp_current	lib/vswitch-idl.c	/^ovsrec_interface_verify_lacp_current(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_link_resets	lib/vswitch-idl.c	/^ovsrec_interface_verify_link_resets(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_link_speed	lib/vswitch-idl.c	/^ovsrec_interface_verify_link_speed(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_link_state	lib/vswitch-idl.c	/^ovsrec_interface_verify_link_state(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_lldp	lib/vswitch-idl.c	/^ovsrec_interface_verify_lldp(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_mac	lib/vswitch-idl.c	/^ovsrec_interface_verify_mac(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_mac_in_use	lib/vswitch-idl.c	/^ovsrec_interface_verify_mac_in_use(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_mtu	lib/vswitch-idl.c	/^ovsrec_interface_verify_mtu(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_name	lib/vswitch-idl.c	/^ovsrec_interface_verify_name(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_ofport	lib/vswitch-idl.c	/^ovsrec_interface_verify_ofport(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_ofport_request	lib/vswitch-idl.c	/^ovsrec_interface_verify_ofport_request(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_options	lib/vswitch-idl.c	/^ovsrec_interface_verify_options(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_other_config	lib/vswitch-idl.c	/^ovsrec_interface_verify_other_config(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_statistics	lib/vswitch-idl.c	/^ovsrec_interface_verify_statistics(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_status	lib/vswitch-idl.c	/^ovsrec_interface_verify_status(const struct ovsrec_interface *row)$/;"	f
ovsrec_interface_verify_type	lib/vswitch-idl.c	/^ovsrec_interface_verify_type(const struct ovsrec_interface *row)$/;"	f
ovsrec_ipfix	lib/vswitch-idl.h	/^struct ovsrec_ipfix {$/;"	s
ovsrec_ipfix_cast	lib/vswitch-idl.c	/^ovsrec_ipfix_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_ipfix_col_cache_active_timeout	lib/vswitch-idl.h	639;"	d
ovsrec_ipfix_col_cache_max_flows	lib/vswitch-idl.h	640;"	d
ovsrec_ipfix_col_external_ids	lib/vswitch-idl.h	643;"	d
ovsrec_ipfix_col_obs_domain_id	lib/vswitch-idl.h	641;"	d
ovsrec_ipfix_col_obs_point_id	lib/vswitch-idl.h	638;"	d
ovsrec_ipfix_col_other_config	lib/vswitch-idl.h	642;"	d
ovsrec_ipfix_col_sampling	lib/vswitch-idl.h	644;"	d
ovsrec_ipfix_col_targets	lib/vswitch-idl.h	645;"	d
ovsrec_ipfix_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_ipfix_columns[OVSREC_IPFIX_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_ipfix_columns_init	lib/vswitch-idl.c	/^ovsrec_ipfix_columns_init(void)$/;"	f	file:
ovsrec_ipfix_delete	lib/vswitch-idl.c	/^ovsrec_ipfix_delete(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_first	lib/vswitch-idl.c	/^ovsrec_ipfix_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_ipfix_get_cache_active_timeout	lib/vswitch-idl.c	/^ovsrec_ipfix_get_cache_active_timeout(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_get_cache_max_flows	lib/vswitch-idl.c	/^ovsrec_ipfix_get_cache_max_flows(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_get_external_ids	lib/vswitch-idl.c	/^ovsrec_ipfix_get_external_ids(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_ipfix_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_ipfix_get_obs_domain_id	lib/vswitch-idl.c	/^ovsrec_ipfix_get_obs_domain_id(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_get_obs_point_id	lib/vswitch-idl.c	/^ovsrec_ipfix_get_obs_point_id(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_get_other_config	lib/vswitch-idl.c	/^ovsrec_ipfix_get_other_config(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_get_sampling	lib/vswitch-idl.c	/^ovsrec_ipfix_get_sampling(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_get_targets	lib/vswitch-idl.c	/^ovsrec_ipfix_get_targets(const struct ovsrec_ipfix *row,$/;"	f
ovsrec_ipfix_init	lib/vswitch-idl.c	/^ovsrec_ipfix_init(struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_init__	lib/vswitch-idl.c	/^ovsrec_ipfix_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_ipfix_insert	lib/vswitch-idl.c	/^ovsrec_ipfix_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_ipfix_is_valid	vswitchd/bridge.c	/^ovsrec_ipfix_is_valid(const struct ovsrec_ipfix *ipfix)$/;"	f	file:
ovsrec_ipfix_next	lib/vswitch-idl.c	/^ovsrec_ipfix_next(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_parse_cache_active_timeout	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_cache_active_timeout(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_parse_cache_max_flows	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_cache_max_flows(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_parse_obs_domain_id	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_obs_domain_id(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_parse_obs_point_id	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_obs_point_id(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_parse_other_config	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_parse_sampling	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_sampling(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_parse_targets	lib/vswitch-idl.c	/^ovsrec_ipfix_parse_targets(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ipfix_set_cache_active_timeout	lib/vswitch-idl.c	/^ovsrec_ipfix_set_cache_active_timeout(const struct ovsrec_ipfix *row, const int64_t *cache_active_timeout, size_t n_cache_active_timeout)$/;"	f
ovsrec_ipfix_set_cache_max_flows	lib/vswitch-idl.c	/^ovsrec_ipfix_set_cache_max_flows(const struct ovsrec_ipfix *row, const int64_t *cache_max_flows, size_t n_cache_max_flows)$/;"	f
ovsrec_ipfix_set_external_ids	lib/vswitch-idl.c	/^ovsrec_ipfix_set_external_ids(const struct ovsrec_ipfix *row, const struct smap *external_ids)$/;"	f
ovsrec_ipfix_set_obs_domain_id	lib/vswitch-idl.c	/^ovsrec_ipfix_set_obs_domain_id(const struct ovsrec_ipfix *row, const int64_t *obs_domain_id, size_t n_obs_domain_id)$/;"	f
ovsrec_ipfix_set_obs_point_id	lib/vswitch-idl.c	/^ovsrec_ipfix_set_obs_point_id(const struct ovsrec_ipfix *row, const int64_t *obs_point_id, size_t n_obs_point_id)$/;"	f
ovsrec_ipfix_set_other_config	lib/vswitch-idl.c	/^ovsrec_ipfix_set_other_config(const struct ovsrec_ipfix *row, const struct smap *other_config)$/;"	f
ovsrec_ipfix_set_sampling	lib/vswitch-idl.c	/^ovsrec_ipfix_set_sampling(const struct ovsrec_ipfix *row, const int64_t *sampling, size_t n_sampling)$/;"	f
ovsrec_ipfix_set_targets	lib/vswitch-idl.c	/^ovsrec_ipfix_set_targets(const struct ovsrec_ipfix *row, const char **targets, size_t n_targets)$/;"	f
ovsrec_ipfix_unparse_cache_active_timeout	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_cache_active_timeout(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_unparse_cache_max_flows	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_cache_max_flows(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_unparse_obs_domain_id	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_obs_domain_id(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_unparse_obs_point_id	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_obs_point_id(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_unparse_sampling	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_sampling(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_unparse_targets	lib/vswitch-idl.c	/^ovsrec_ipfix_unparse_targets(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ipfix_verify_cache_active_timeout	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_cache_active_timeout(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_verify_cache_max_flows	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_cache_max_flows(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_external_ids(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_verify_obs_domain_id	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_obs_domain_id(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_verify_obs_point_id	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_obs_point_id(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_verify_other_config	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_other_config(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_verify_sampling	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_sampling(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_ipfix_verify_targets	lib/vswitch-idl.c	/^ovsrec_ipfix_verify_targets(const struct ovsrec_ipfix *row)$/;"	f
ovsrec_manager	lib/vswitch-idl.h	/^struct ovsrec_manager {$/;"	s
ovsrec_manager_cast	lib/vswitch-idl.c	/^ovsrec_manager_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_manager_col_connection_mode	lib/vswitch-idl.h	1042;"	d
ovsrec_manager_col_external_ids	lib/vswitch-idl.h	1045;"	d
ovsrec_manager_col_inactivity_probe	lib/vswitch-idl.h	1044;"	d
ovsrec_manager_col_is_connected	lib/vswitch-idl.h	1046;"	d
ovsrec_manager_col_max_backoff	lib/vswitch-idl.h	1039;"	d
ovsrec_manager_col_other_config	lib/vswitch-idl.h	1043;"	d
ovsrec_manager_col_status	lib/vswitch-idl.h	1040;"	d
ovsrec_manager_col_target	lib/vswitch-idl.h	1041;"	d
ovsrec_manager_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_manager_columns[OVSREC_MANAGER_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_manager_columns_init	lib/vswitch-idl.c	/^ovsrec_manager_columns_init(void)$/;"	f	file:
ovsrec_manager_delete	lib/vswitch-idl.c	/^ovsrec_manager_delete(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_first	lib/vswitch-idl.c	/^ovsrec_manager_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_manager_get_connection_mode	lib/vswitch-idl.c	/^ovsrec_manager_get_connection_mode(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_get_external_ids	lib/vswitch-idl.c	/^ovsrec_manager_get_external_ids(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_manager_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_manager_get_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_manager_get_inactivity_probe(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_get_is_connected	lib/vswitch-idl.c	/^ovsrec_manager_get_is_connected(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_get_max_backoff	lib/vswitch-idl.c	/^ovsrec_manager_get_max_backoff(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_get_other_config	lib/vswitch-idl.c	/^ovsrec_manager_get_other_config(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_get_status	lib/vswitch-idl.c	/^ovsrec_manager_get_status(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_get_target	lib/vswitch-idl.c	/^ovsrec_manager_get_target(const struct ovsrec_manager *row,$/;"	f
ovsrec_manager_init	lib/vswitch-idl.c	/^ovsrec_manager_init(struct ovsrec_manager *row)$/;"	f
ovsrec_manager_init__	lib/vswitch-idl.c	/^ovsrec_manager_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_manager_insert	lib/vswitch-idl.c	/^ovsrec_manager_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_manager_next	lib/vswitch-idl.c	/^ovsrec_manager_next(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_parse_connection_mode	lib/vswitch-idl.c	/^ovsrec_manager_parse_connection_mode(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_manager_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_parse_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_manager_parse_inactivity_probe(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_parse_is_connected	lib/vswitch-idl.c	/^ovsrec_manager_parse_is_connected(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_parse_max_backoff	lib/vswitch-idl.c	/^ovsrec_manager_parse_max_backoff(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_parse_other_config	lib/vswitch-idl.c	/^ovsrec_manager_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_parse_status	lib/vswitch-idl.c	/^ovsrec_manager_parse_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_parse_target	lib/vswitch-idl.c	/^ovsrec_manager_parse_target(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_manager_set_connection_mode	lib/vswitch-idl.c	/^ovsrec_manager_set_connection_mode(const struct ovsrec_manager *row, const char *connection_mode)$/;"	f
ovsrec_manager_set_external_ids	lib/vswitch-idl.c	/^ovsrec_manager_set_external_ids(const struct ovsrec_manager *row, const struct smap *external_ids)$/;"	f
ovsrec_manager_set_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_manager_set_inactivity_probe(const struct ovsrec_manager *row, const int64_t *inactivity_probe, size_t n_inactivity_probe)$/;"	f
ovsrec_manager_set_is_connected	lib/vswitch-idl.c	/^ovsrec_manager_set_is_connected(const struct ovsrec_manager *row, bool is_connected)$/;"	f
ovsrec_manager_set_max_backoff	lib/vswitch-idl.c	/^ovsrec_manager_set_max_backoff(const struct ovsrec_manager *row, const int64_t *max_backoff, size_t n_max_backoff)$/;"	f
ovsrec_manager_set_other_config	lib/vswitch-idl.c	/^ovsrec_manager_set_other_config(const struct ovsrec_manager *row, const struct smap *other_config)$/;"	f
ovsrec_manager_set_status	lib/vswitch-idl.c	/^ovsrec_manager_set_status(const struct ovsrec_manager *row, const struct smap *status)$/;"	f
ovsrec_manager_set_target	lib/vswitch-idl.c	/^ovsrec_manager_set_target(const struct ovsrec_manager *row, const char *target)$/;"	f
ovsrec_manager_unparse_connection_mode	lib/vswitch-idl.c	/^ovsrec_manager_unparse_connection_mode(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_manager_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_manager_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_manager_unparse_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_manager_unparse_inactivity_probe(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_manager_unparse_is_connected	lib/vswitch-idl.c	/^ovsrec_manager_unparse_is_connected(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_manager_unparse_max_backoff	lib/vswitch-idl.c	/^ovsrec_manager_unparse_max_backoff(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_manager_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_manager_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_manager_unparse_status	lib/vswitch-idl.c	/^ovsrec_manager_unparse_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_manager_unparse_target	lib/vswitch-idl.c	/^ovsrec_manager_unparse_target(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_manager_verify_connection_mode	lib/vswitch-idl.c	/^ovsrec_manager_verify_connection_mode(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_manager_verify_external_ids(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_verify_inactivity_probe	lib/vswitch-idl.c	/^ovsrec_manager_verify_inactivity_probe(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_verify_is_connected	lib/vswitch-idl.c	/^ovsrec_manager_verify_is_connected(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_verify_max_backoff	lib/vswitch-idl.c	/^ovsrec_manager_verify_max_backoff(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_verify_other_config	lib/vswitch-idl.c	/^ovsrec_manager_verify_other_config(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_verify_status	lib/vswitch-idl.c	/^ovsrec_manager_verify_status(const struct ovsrec_manager *row)$/;"	f
ovsrec_manager_verify_target	lib/vswitch-idl.c	/^ovsrec_manager_verify_target(const struct ovsrec_manager *row)$/;"	f
ovsrec_mirror	lib/vswitch-idl.h	/^struct ovsrec_mirror {$/;"	s
ovsrec_mirror_cast	lib/vswitch-idl.c	/^ovsrec_mirror_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_mirror_col_external_ids	lib/vswitch-idl.h	1151;"	d
ovsrec_mirror_col_name	lib/vswitch-idl.h	1148;"	d
ovsrec_mirror_col_output_port	lib/vswitch-idl.h	1145;"	d
ovsrec_mirror_col_output_vlan	lib/vswitch-idl.h	1152;"	d
ovsrec_mirror_col_select_all	lib/vswitch-idl.h	1149;"	d
ovsrec_mirror_col_select_dst_port	lib/vswitch-idl.h	1150;"	d
ovsrec_mirror_col_select_src_port	lib/vswitch-idl.h	1146;"	d
ovsrec_mirror_col_select_vlan	lib/vswitch-idl.h	1153;"	d
ovsrec_mirror_col_statistics	lib/vswitch-idl.h	1147;"	d
ovsrec_mirror_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_mirror_columns[OVSREC_MIRROR_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_mirror_columns_init	lib/vswitch-idl.c	/^ovsrec_mirror_columns_init(void)$/;"	f	file:
ovsrec_mirror_delete	lib/vswitch-idl.c	/^ovsrec_mirror_delete(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_first	lib/vswitch-idl.c	/^ovsrec_mirror_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_mirror_get_external_ids	lib/vswitch-idl.c	/^ovsrec_mirror_get_external_ids(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_mirror_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_mirror_get_name	lib/vswitch-idl.c	/^ovsrec_mirror_get_name(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_output_port	lib/vswitch-idl.c	/^ovsrec_mirror_get_output_port(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_output_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_get_output_vlan(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_select_all	lib/vswitch-idl.c	/^ovsrec_mirror_get_select_all(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_select_dst_port	lib/vswitch-idl.c	/^ovsrec_mirror_get_select_dst_port(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_select_src_port	lib/vswitch-idl.c	/^ovsrec_mirror_get_select_src_port(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_select_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_get_select_vlan(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_get_statistics	lib/vswitch-idl.c	/^ovsrec_mirror_get_statistics(const struct ovsrec_mirror *row,$/;"	f
ovsrec_mirror_init	lib/vswitch-idl.c	/^ovsrec_mirror_init(struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_init__	lib/vswitch-idl.c	/^ovsrec_mirror_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_mirror_insert	lib/vswitch-idl.c	/^ovsrec_mirror_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_mirror_next	lib/vswitch-idl.c	/^ovsrec_mirror_next(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_mirror_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_name	lib/vswitch-idl.c	/^ovsrec_mirror_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_output_port	lib/vswitch-idl.c	/^ovsrec_mirror_parse_output_port(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_output_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_parse_output_vlan(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_select_all	lib/vswitch-idl.c	/^ovsrec_mirror_parse_select_all(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_select_dst_port	lib/vswitch-idl.c	/^ovsrec_mirror_parse_select_dst_port(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_select_src_port	lib/vswitch-idl.c	/^ovsrec_mirror_parse_select_src_port(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_select_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_parse_select_vlan(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_parse_statistics	lib/vswitch-idl.c	/^ovsrec_mirror_parse_statistics(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_mirror_set_external_ids	lib/vswitch-idl.c	/^ovsrec_mirror_set_external_ids(const struct ovsrec_mirror *row, const struct smap *external_ids)$/;"	f
ovsrec_mirror_set_name	lib/vswitch-idl.c	/^ovsrec_mirror_set_name(const struct ovsrec_mirror *row, const char *name)$/;"	f
ovsrec_mirror_set_output_port	lib/vswitch-idl.c	/^ovsrec_mirror_set_output_port(const struct ovsrec_mirror *row, const struct ovsrec_port *output_port)$/;"	f
ovsrec_mirror_set_output_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_set_output_vlan(const struct ovsrec_mirror *row, const int64_t *output_vlan, size_t n_output_vlan)$/;"	f
ovsrec_mirror_set_select_all	lib/vswitch-idl.c	/^ovsrec_mirror_set_select_all(const struct ovsrec_mirror *row, bool select_all)$/;"	f
ovsrec_mirror_set_select_dst_port	lib/vswitch-idl.c	/^ovsrec_mirror_set_select_dst_port(const struct ovsrec_mirror *row, struct ovsrec_port **select_dst_port, size_t n_select_dst_port)$/;"	f
ovsrec_mirror_set_select_src_port	lib/vswitch-idl.c	/^ovsrec_mirror_set_select_src_port(const struct ovsrec_mirror *row, struct ovsrec_port **select_src_port, size_t n_select_src_port)$/;"	f
ovsrec_mirror_set_select_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_set_select_vlan(const struct ovsrec_mirror *row, const int64_t *select_vlan, size_t n_select_vlan)$/;"	f
ovsrec_mirror_set_statistics	lib/vswitch-idl.c	/^ovsrec_mirror_set_statistics(const struct ovsrec_mirror *row, const char **key_statistics, const int64_t *value_statistics, size_t n_statistics)$/;"	f
ovsrec_mirror_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_mirror_unparse_name	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_mirror_unparse_output_port	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_output_port(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_mirror_unparse_output_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_output_vlan(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_mirror_unparse_select_all	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_select_all(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_mirror_unparse_select_dst_port	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_select_dst_port(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_mirror_unparse_select_src_port	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_select_src_port(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_mirror_unparse_select_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_select_vlan(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_mirror_unparse_statistics	lib/vswitch-idl.c	/^ovsrec_mirror_unparse_statistics(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_mirror_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_mirror_verify_external_ids(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_name	lib/vswitch-idl.c	/^ovsrec_mirror_verify_name(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_output_port	lib/vswitch-idl.c	/^ovsrec_mirror_verify_output_port(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_output_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_verify_output_vlan(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_select_all	lib/vswitch-idl.c	/^ovsrec_mirror_verify_select_all(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_select_dst_port	lib/vswitch-idl.c	/^ovsrec_mirror_verify_select_dst_port(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_select_src_port	lib/vswitch-idl.c	/^ovsrec_mirror_verify_select_src_port(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_select_vlan	lib/vswitch-idl.c	/^ovsrec_mirror_verify_select_vlan(const struct ovsrec_mirror *row)$/;"	f
ovsrec_mirror_verify_statistics	lib/vswitch-idl.c	/^ovsrec_mirror_verify_statistics(const struct ovsrec_mirror *row)$/;"	f
ovsrec_netflow	lib/vswitch-idl.h	/^struct ovsrec_netflow {$/;"	s
ovsrec_netflow_cast	lib/vswitch-idl.c	/^ovsrec_netflow_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_netflow_col_active_timeout	lib/vswitch-idl.h	1241;"	d
ovsrec_netflow_col_add_id_to_interface	lib/vswitch-idl.h	1242;"	d
ovsrec_netflow_col_engine_id	lib/vswitch-idl.h	1240;"	d
ovsrec_netflow_col_engine_type	lib/vswitch-idl.h	1245;"	d
ovsrec_netflow_col_external_ids	lib/vswitch-idl.h	1243;"	d
ovsrec_netflow_col_targets	lib/vswitch-idl.h	1244;"	d
ovsrec_netflow_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_netflow_columns[OVSREC_NETFLOW_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_netflow_columns_init	lib/vswitch-idl.c	/^ovsrec_netflow_columns_init(void)$/;"	f	file:
ovsrec_netflow_delete	lib/vswitch-idl.c	/^ovsrec_netflow_delete(const struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_first	lib/vswitch-idl.c	/^ovsrec_netflow_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_netflow_get_active_timeout	lib/vswitch-idl.c	/^ovsrec_netflow_get_active_timeout(const struct ovsrec_netflow *row,$/;"	f
ovsrec_netflow_get_add_id_to_interface	lib/vswitch-idl.c	/^ovsrec_netflow_get_add_id_to_interface(const struct ovsrec_netflow *row,$/;"	f
ovsrec_netflow_get_engine_id	lib/vswitch-idl.c	/^ovsrec_netflow_get_engine_id(const struct ovsrec_netflow *row,$/;"	f
ovsrec_netflow_get_engine_type	lib/vswitch-idl.c	/^ovsrec_netflow_get_engine_type(const struct ovsrec_netflow *row,$/;"	f
ovsrec_netflow_get_external_ids	lib/vswitch-idl.c	/^ovsrec_netflow_get_external_ids(const struct ovsrec_netflow *row,$/;"	f
ovsrec_netflow_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_netflow_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_netflow_get_targets	lib/vswitch-idl.c	/^ovsrec_netflow_get_targets(const struct ovsrec_netflow *row,$/;"	f
ovsrec_netflow_init	lib/vswitch-idl.c	/^ovsrec_netflow_init(struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_init__	lib/vswitch-idl.c	/^ovsrec_netflow_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_netflow_insert	lib/vswitch-idl.c	/^ovsrec_netflow_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_netflow_next	lib/vswitch-idl.c	/^ovsrec_netflow_next(const struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_parse_active_timeout	lib/vswitch-idl.c	/^ovsrec_netflow_parse_active_timeout(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_netflow_parse_add_id_to_interface	lib/vswitch-idl.c	/^ovsrec_netflow_parse_add_id_to_interface(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_netflow_parse_engine_id	lib/vswitch-idl.c	/^ovsrec_netflow_parse_engine_id(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_netflow_parse_engine_type	lib/vswitch-idl.c	/^ovsrec_netflow_parse_engine_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_netflow_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_netflow_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_netflow_parse_targets	lib/vswitch-idl.c	/^ovsrec_netflow_parse_targets(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_netflow_set_active_timeout	lib/vswitch-idl.c	/^ovsrec_netflow_set_active_timeout(const struct ovsrec_netflow *row, int64_t active_timeout)$/;"	f
ovsrec_netflow_set_add_id_to_interface	lib/vswitch-idl.c	/^ovsrec_netflow_set_add_id_to_interface(const struct ovsrec_netflow *row, bool add_id_to_interface)$/;"	f
ovsrec_netflow_set_engine_id	lib/vswitch-idl.c	/^ovsrec_netflow_set_engine_id(const struct ovsrec_netflow *row, const int64_t *engine_id, size_t n_engine_id)$/;"	f
ovsrec_netflow_set_engine_type	lib/vswitch-idl.c	/^ovsrec_netflow_set_engine_type(const struct ovsrec_netflow *row, const int64_t *engine_type, size_t n_engine_type)$/;"	f
ovsrec_netflow_set_external_ids	lib/vswitch-idl.c	/^ovsrec_netflow_set_external_ids(const struct ovsrec_netflow *row, const struct smap *external_ids)$/;"	f
ovsrec_netflow_set_targets	lib/vswitch-idl.c	/^ovsrec_netflow_set_targets(const struct ovsrec_netflow *row, const char **targets, size_t n_targets)$/;"	f
ovsrec_netflow_unparse_active_timeout	lib/vswitch-idl.c	/^ovsrec_netflow_unparse_active_timeout(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_netflow_unparse_add_id_to_interface	lib/vswitch-idl.c	/^ovsrec_netflow_unparse_add_id_to_interface(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_netflow_unparse_engine_id	lib/vswitch-idl.c	/^ovsrec_netflow_unparse_engine_id(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_netflow_unparse_engine_type	lib/vswitch-idl.c	/^ovsrec_netflow_unparse_engine_type(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_netflow_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_netflow_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_netflow_unparse_targets	lib/vswitch-idl.c	/^ovsrec_netflow_unparse_targets(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_netflow_verify_active_timeout	lib/vswitch-idl.c	/^ovsrec_netflow_verify_active_timeout(const struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_verify_add_id_to_interface	lib/vswitch-idl.c	/^ovsrec_netflow_verify_add_id_to_interface(const struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_verify_engine_id	lib/vswitch-idl.c	/^ovsrec_netflow_verify_engine_id(const struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_verify_engine_type	lib/vswitch-idl.c	/^ovsrec_netflow_verify_engine_type(const struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_netflow_verify_external_ids(const struct ovsrec_netflow *row)$/;"	f
ovsrec_netflow_verify_targets	lib/vswitch-idl.c	/^ovsrec_netflow_verify_targets(const struct ovsrec_netflow *row)$/;"	f
ovsrec_open_vswitch	lib/vswitch-idl.h	/^struct ovsrec_open_vswitch {$/;"	s
ovsrec_open_vswitch_cast	lib/vswitch-idl.c	/^ovsrec_open_vswitch_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_open_vswitch_col_bridges	lib/vswitch-idl.h	1364;"	d
ovsrec_open_vswitch_col_cur_cfg	lib/vswitch-idl.h	1368;"	d
ovsrec_open_vswitch_col_datapath_types	lib/vswitch-idl.h	1358;"	d
ovsrec_open_vswitch_col_db_version	lib/vswitch-idl.h	1356;"	d
ovsrec_open_vswitch_col_external_ids	lib/vswitch-idl.h	1365;"	d
ovsrec_open_vswitch_col_iface_types	lib/vswitch-idl.h	1359;"	d
ovsrec_open_vswitch_col_manager_options	lib/vswitch-idl.h	1369;"	d
ovsrec_open_vswitch_col_next_cfg	lib/vswitch-idl.h	1360;"	d
ovsrec_open_vswitch_col_other_config	lib/vswitch-idl.h	1362;"	d
ovsrec_open_vswitch_col_ovs_version	lib/vswitch-idl.h	1361;"	d
ovsrec_open_vswitch_col_ssl	lib/vswitch-idl.h	1363;"	d
ovsrec_open_vswitch_col_statistics	lib/vswitch-idl.h	1357;"	d
ovsrec_open_vswitch_col_system_type	lib/vswitch-idl.h	1366;"	d
ovsrec_open_vswitch_col_system_version	lib/vswitch-idl.h	1367;"	d
ovsrec_open_vswitch_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_open_vswitch_columns[OVSREC_OPEN_VSWITCH_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_open_vswitch_columns_init	lib/vswitch-idl.c	/^ovsrec_open_vswitch_columns_init(void)$/;"	f	file:
ovsrec_open_vswitch_delete	lib/vswitch-idl.c	/^ovsrec_open_vswitch_delete(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_first	lib/vswitch-idl.c	/^ovsrec_open_vswitch_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_open_vswitch_get_bridges	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_bridges(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_cur_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_cur_cfg(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_datapath_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_datapath_types(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_db_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_db_version(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_external_ids	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_external_ids(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_open_vswitch_get_iface_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_iface_types(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_manager_options	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_manager_options(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_next_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_next_cfg(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_other_config	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_other_config(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_ovs_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_ovs_version(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_ssl	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_ssl(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_statistics	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_statistics(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_system_type	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_system_type(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_get_system_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_get_system_version(const struct ovsrec_open_vswitch *row,$/;"	f
ovsrec_open_vswitch_init	lib/vswitch-idl.c	/^ovsrec_open_vswitch_init(struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_init__	lib/vswitch-idl.c	/^ovsrec_open_vswitch_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_open_vswitch_insert	lib/vswitch-idl.c	/^ovsrec_open_vswitch_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_open_vswitch_next	lib/vswitch-idl.c	/^ovsrec_open_vswitch_next(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_parse_bridges	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_bridges(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_cur_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_cur_cfg(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_datapath_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_datapath_types(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_db_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_db_version(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_iface_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_iface_types(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_manager_options	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_manager_options(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_next_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_next_cfg(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_other_config	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_ovs_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_ovs_version(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_ssl	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_ssl(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_statistics	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_statistics(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_system_type	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_system_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_parse_system_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_parse_system_version(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_open_vswitch_set_bridges	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_bridges(const struct ovsrec_open_vswitch *row, struct ovsrec_bridge **bridges, size_t n_bridges)$/;"	f
ovsrec_open_vswitch_set_cur_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_cur_cfg(const struct ovsrec_open_vswitch *row, int64_t cur_cfg)$/;"	f
ovsrec_open_vswitch_set_datapath_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_datapath_types(const struct ovsrec_open_vswitch *row, const char **datapath_types, size_t n_datapath_types)$/;"	f
ovsrec_open_vswitch_set_db_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_db_version(const struct ovsrec_open_vswitch *row, const char *db_version)$/;"	f
ovsrec_open_vswitch_set_external_ids	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_external_ids(const struct ovsrec_open_vswitch *row, const struct smap *external_ids)$/;"	f
ovsrec_open_vswitch_set_iface_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_iface_types(const struct ovsrec_open_vswitch *row, const char **iface_types, size_t n_iface_types)$/;"	f
ovsrec_open_vswitch_set_manager_options	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_manager_options(const struct ovsrec_open_vswitch *row, struct ovsrec_manager **manager_options, size_t n_manager_options)$/;"	f
ovsrec_open_vswitch_set_next_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_next_cfg(const struct ovsrec_open_vswitch *row, int64_t next_cfg)$/;"	f
ovsrec_open_vswitch_set_other_config	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_other_config(const struct ovsrec_open_vswitch *row, const struct smap *other_config)$/;"	f
ovsrec_open_vswitch_set_ovs_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_ovs_version(const struct ovsrec_open_vswitch *row, const char *ovs_version)$/;"	f
ovsrec_open_vswitch_set_ssl	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_ssl(const struct ovsrec_open_vswitch *row, const struct ovsrec_ssl *ssl)$/;"	f
ovsrec_open_vswitch_set_statistics	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_statistics(const struct ovsrec_open_vswitch *row, const struct smap *statistics)$/;"	f
ovsrec_open_vswitch_set_system_type	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_system_type(const struct ovsrec_open_vswitch *row, const char *system_type)$/;"	f
ovsrec_open_vswitch_set_system_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_set_system_version(const struct ovsrec_open_vswitch *row, const char *system_version)$/;"	f
ovsrec_open_vswitch_unparse_bridges	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_bridges(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_open_vswitch_unparse_cur_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_cur_cfg(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_open_vswitch_unparse_datapath_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_datapath_types(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_open_vswitch_unparse_db_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_db_version(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_open_vswitch_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_open_vswitch_unparse_iface_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_iface_types(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_open_vswitch_unparse_manager_options	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_manager_options(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_open_vswitch_unparse_next_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_next_cfg(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_open_vswitch_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_open_vswitch_unparse_ovs_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_ovs_version(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_open_vswitch_unparse_ssl	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_ssl(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_open_vswitch_unparse_statistics	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_statistics(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_open_vswitch_unparse_system_type	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_system_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_open_vswitch_unparse_system_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_unparse_system_version(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_open_vswitch_verify_bridges	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_bridges(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_cur_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_cur_cfg(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_datapath_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_datapath_types(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_db_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_db_version(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_external_ids(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_iface_types	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_iface_types(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_manager_options	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_manager_options(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_next_cfg	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_next_cfg(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_other_config	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_other_config(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_ovs_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_ovs_version(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_ssl	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_ssl(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_statistics	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_statistics(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_system_type	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_system_type(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_open_vswitch_verify_system_version	lib/vswitch-idl.c	/^ovsrec_open_vswitch_verify_system_version(const struct ovsrec_open_vswitch *row)$/;"	f
ovsrec_port	lib/vswitch-idl.h	/^struct ovsrec_port {$/;"	s
ovsrec_port_cast	lib/vswitch-idl.c	/^ovsrec_port_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_port_col_bond_active_slave	lib/vswitch-idl.h	1540;"	d
ovsrec_port_col_bond_downdelay	lib/vswitch-idl.h	1535;"	d
ovsrec_port_col_bond_fake_iface	lib/vswitch-idl.h	1538;"	d
ovsrec_port_col_bond_mode	lib/vswitch-idl.h	1550;"	d
ovsrec_port_col_bond_updelay	lib/vswitch-idl.h	1549;"	d
ovsrec_port_col_external_ids	lib/vswitch-idl.h	1547;"	d
ovsrec_port_col_fake_bridge	lib/vswitch-idl.h	1548;"	d
ovsrec_port_col_interfaces	lib/vswitch-idl.h	1536;"	d
ovsrec_port_col_lacp	lib/vswitch-idl.h	1541;"	d
ovsrec_port_col_mac	lib/vswitch-idl.h	1539;"	d
ovsrec_port_col_name	lib/vswitch-idl.h	1534;"	d
ovsrec_port_col_other_config	lib/vswitch-idl.h	1537;"	d
ovsrec_port_col_qos	lib/vswitch-idl.h	1533;"	d
ovsrec_port_col_rstp_statistics	lib/vswitch-idl.h	1543;"	d
ovsrec_port_col_rstp_status	lib/vswitch-idl.h	1542;"	d
ovsrec_port_col_statistics	lib/vswitch-idl.h	1532;"	d
ovsrec_port_col_status	lib/vswitch-idl.h	1531;"	d
ovsrec_port_col_tag	lib/vswitch-idl.h	1544;"	d
ovsrec_port_col_trunks	lib/vswitch-idl.h	1545;"	d
ovsrec_port_col_vlan_mode	lib/vswitch-idl.h	1546;"	d
ovsrec_port_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_port_columns[OVSREC_PORT_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_port_columns_init	lib/vswitch-idl.c	/^ovsrec_port_columns_init(void)$/;"	f	file:
ovsrec_port_delete	lib/vswitch-idl.c	/^ovsrec_port_delete(const struct ovsrec_port *row)$/;"	f
ovsrec_port_first	lib/vswitch-idl.c	/^ovsrec_port_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_port_get_bond_active_slave	lib/vswitch-idl.c	/^ovsrec_port_get_bond_active_slave(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_bond_downdelay	lib/vswitch-idl.c	/^ovsrec_port_get_bond_downdelay(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_bond_fake_iface	lib/vswitch-idl.c	/^ovsrec_port_get_bond_fake_iface(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_bond_mode	lib/vswitch-idl.c	/^ovsrec_port_get_bond_mode(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_bond_updelay	lib/vswitch-idl.c	/^ovsrec_port_get_bond_updelay(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_external_ids	lib/vswitch-idl.c	/^ovsrec_port_get_external_ids(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_fake_bridge	lib/vswitch-idl.c	/^ovsrec_port_get_fake_bridge(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_port_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_port_get_interfaces	lib/vswitch-idl.c	/^ovsrec_port_get_interfaces(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_lacp	lib/vswitch-idl.c	/^ovsrec_port_get_lacp(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_mac	lib/vswitch-idl.c	/^ovsrec_port_get_mac(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_name	lib/vswitch-idl.c	/^ovsrec_port_get_name(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_other_config	lib/vswitch-idl.c	/^ovsrec_port_get_other_config(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_qos	lib/vswitch-idl.c	/^ovsrec_port_get_qos(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_rstp_statistics	lib/vswitch-idl.c	/^ovsrec_port_get_rstp_statistics(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_rstp_status	lib/vswitch-idl.c	/^ovsrec_port_get_rstp_status(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_statistics	lib/vswitch-idl.c	/^ovsrec_port_get_statistics(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_status	lib/vswitch-idl.c	/^ovsrec_port_get_status(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_tag	lib/vswitch-idl.c	/^ovsrec_port_get_tag(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_trunks	lib/vswitch-idl.c	/^ovsrec_port_get_trunks(const struct ovsrec_port *row,$/;"	f
ovsrec_port_get_vlan_mode	lib/vswitch-idl.c	/^ovsrec_port_get_vlan_mode(const struct ovsrec_port *row,$/;"	f
ovsrec_port_init	lib/vswitch-idl.c	/^ovsrec_port_init(struct ovsrec_port *row)$/;"	f
ovsrec_port_init__	lib/vswitch-idl.c	/^ovsrec_port_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_port_insert	lib/vswitch-idl.c	/^ovsrec_port_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_port_next	lib/vswitch-idl.c	/^ovsrec_port_next(const struct ovsrec_port *row)$/;"	f
ovsrec_port_parse_bond_active_slave	lib/vswitch-idl.c	/^ovsrec_port_parse_bond_active_slave(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_bond_downdelay	lib/vswitch-idl.c	/^ovsrec_port_parse_bond_downdelay(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_bond_fake_iface	lib/vswitch-idl.c	/^ovsrec_port_parse_bond_fake_iface(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_bond_mode	lib/vswitch-idl.c	/^ovsrec_port_parse_bond_mode(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_bond_updelay	lib/vswitch-idl.c	/^ovsrec_port_parse_bond_updelay(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_port_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_fake_bridge	lib/vswitch-idl.c	/^ovsrec_port_parse_fake_bridge(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_interfaces	lib/vswitch-idl.c	/^ovsrec_port_parse_interfaces(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_lacp	lib/vswitch-idl.c	/^ovsrec_port_parse_lacp(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_mac	lib/vswitch-idl.c	/^ovsrec_port_parse_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_name	lib/vswitch-idl.c	/^ovsrec_port_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_other_config	lib/vswitch-idl.c	/^ovsrec_port_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_qos	lib/vswitch-idl.c	/^ovsrec_port_parse_qos(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_rstp_statistics	lib/vswitch-idl.c	/^ovsrec_port_parse_rstp_statistics(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_rstp_status	lib/vswitch-idl.c	/^ovsrec_port_parse_rstp_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_statistics	lib/vswitch-idl.c	/^ovsrec_port_parse_statistics(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_status	lib/vswitch-idl.c	/^ovsrec_port_parse_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_tag	lib/vswitch-idl.c	/^ovsrec_port_parse_tag(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_trunks	lib/vswitch-idl.c	/^ovsrec_port_parse_trunks(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_parse_vlan_mode	lib/vswitch-idl.c	/^ovsrec_port_parse_vlan_mode(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_port_set_bond_active_slave	lib/vswitch-idl.c	/^ovsrec_port_set_bond_active_slave(const struct ovsrec_port *row, const char *bond_active_slave)$/;"	f
ovsrec_port_set_bond_downdelay	lib/vswitch-idl.c	/^ovsrec_port_set_bond_downdelay(const struct ovsrec_port *row, int64_t bond_downdelay)$/;"	f
ovsrec_port_set_bond_fake_iface	lib/vswitch-idl.c	/^ovsrec_port_set_bond_fake_iface(const struct ovsrec_port *row, bool bond_fake_iface)$/;"	f
ovsrec_port_set_bond_mode	lib/vswitch-idl.c	/^ovsrec_port_set_bond_mode(const struct ovsrec_port *row, const char *bond_mode)$/;"	f
ovsrec_port_set_bond_updelay	lib/vswitch-idl.c	/^ovsrec_port_set_bond_updelay(const struct ovsrec_port *row, int64_t bond_updelay)$/;"	f
ovsrec_port_set_external_ids	lib/vswitch-idl.c	/^ovsrec_port_set_external_ids(const struct ovsrec_port *row, const struct smap *external_ids)$/;"	f
ovsrec_port_set_fake_bridge	lib/vswitch-idl.c	/^ovsrec_port_set_fake_bridge(const struct ovsrec_port *row, bool fake_bridge)$/;"	f
ovsrec_port_set_interfaces	lib/vswitch-idl.c	/^ovsrec_port_set_interfaces(const struct ovsrec_port *row, struct ovsrec_interface **interfaces, size_t n_interfaces)$/;"	f
ovsrec_port_set_lacp	lib/vswitch-idl.c	/^ovsrec_port_set_lacp(const struct ovsrec_port *row, const char *lacp)$/;"	f
ovsrec_port_set_mac	lib/vswitch-idl.c	/^ovsrec_port_set_mac(const struct ovsrec_port *row, const char *mac)$/;"	f
ovsrec_port_set_name	lib/vswitch-idl.c	/^ovsrec_port_set_name(const struct ovsrec_port *row, const char *name)$/;"	f
ovsrec_port_set_other_config	lib/vswitch-idl.c	/^ovsrec_port_set_other_config(const struct ovsrec_port *row, const struct smap *other_config)$/;"	f
ovsrec_port_set_qos	lib/vswitch-idl.c	/^ovsrec_port_set_qos(const struct ovsrec_port *row, const struct ovsrec_qos *qos)$/;"	f
ovsrec_port_set_rstp_statistics	lib/vswitch-idl.c	/^ovsrec_port_set_rstp_statistics(const struct ovsrec_port *row, const char **key_rstp_statistics, const int64_t *value_rstp_statistics, size_t n_rstp_statistics)$/;"	f
ovsrec_port_set_rstp_status	lib/vswitch-idl.c	/^ovsrec_port_set_rstp_status(const struct ovsrec_port *row, const struct smap *rstp_status)$/;"	f
ovsrec_port_set_statistics	lib/vswitch-idl.c	/^ovsrec_port_set_statistics(const struct ovsrec_port *row, const char **key_statistics, const int64_t *value_statistics, size_t n_statistics)$/;"	f
ovsrec_port_set_status	lib/vswitch-idl.c	/^ovsrec_port_set_status(const struct ovsrec_port *row, const struct smap *status)$/;"	f
ovsrec_port_set_tag	lib/vswitch-idl.c	/^ovsrec_port_set_tag(const struct ovsrec_port *row, const int64_t *tag, size_t n_tag)$/;"	f
ovsrec_port_set_trunks	lib/vswitch-idl.c	/^ovsrec_port_set_trunks(const struct ovsrec_port *row, const int64_t *trunks, size_t n_trunks)$/;"	f
ovsrec_port_set_vlan_mode	lib/vswitch-idl.c	/^ovsrec_port_set_vlan_mode(const struct ovsrec_port *row, const char *vlan_mode)$/;"	f
ovsrec_port_unparse_bond_active_slave	lib/vswitch-idl.c	/^ovsrec_port_unparse_bond_active_slave(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_bond_downdelay	lib/vswitch-idl.c	/^ovsrec_port_unparse_bond_downdelay(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_bond_fake_iface	lib/vswitch-idl.c	/^ovsrec_port_unparse_bond_fake_iface(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_bond_mode	lib/vswitch-idl.c	/^ovsrec_port_unparse_bond_mode(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_bond_updelay	lib/vswitch-idl.c	/^ovsrec_port_unparse_bond_updelay(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_port_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_fake_bridge	lib/vswitch-idl.c	/^ovsrec_port_unparse_fake_bridge(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_interfaces	lib/vswitch-idl.c	/^ovsrec_port_unparse_interfaces(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_lacp	lib/vswitch-idl.c	/^ovsrec_port_unparse_lacp(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_mac	lib/vswitch-idl.c	/^ovsrec_port_unparse_mac(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_name	lib/vswitch-idl.c	/^ovsrec_port_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_port_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_qos	lib/vswitch-idl.c	/^ovsrec_port_unparse_qos(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_unparse_rstp_statistics	lib/vswitch-idl.c	/^ovsrec_port_unparse_rstp_statistics(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_rstp_status	lib/vswitch-idl.c	/^ovsrec_port_unparse_rstp_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_statistics	lib/vswitch-idl.c	/^ovsrec_port_unparse_statistics(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_status	lib/vswitch-idl.c	/^ovsrec_port_unparse_status(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_tag	lib/vswitch-idl.c	/^ovsrec_port_unparse_tag(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_trunks	lib/vswitch-idl.c	/^ovsrec_port_unparse_trunks(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_port_unparse_vlan_mode	lib/vswitch-idl.c	/^ovsrec_port_unparse_vlan_mode(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_port_verify_bond_active_slave	lib/vswitch-idl.c	/^ovsrec_port_verify_bond_active_slave(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_bond_downdelay	lib/vswitch-idl.c	/^ovsrec_port_verify_bond_downdelay(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_bond_fake_iface	lib/vswitch-idl.c	/^ovsrec_port_verify_bond_fake_iface(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_bond_mode	lib/vswitch-idl.c	/^ovsrec_port_verify_bond_mode(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_bond_updelay	lib/vswitch-idl.c	/^ovsrec_port_verify_bond_updelay(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_port_verify_external_ids(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_fake_bridge	lib/vswitch-idl.c	/^ovsrec_port_verify_fake_bridge(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_interfaces	lib/vswitch-idl.c	/^ovsrec_port_verify_interfaces(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_lacp	lib/vswitch-idl.c	/^ovsrec_port_verify_lacp(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_mac	lib/vswitch-idl.c	/^ovsrec_port_verify_mac(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_name	lib/vswitch-idl.c	/^ovsrec_port_verify_name(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_other_config	lib/vswitch-idl.c	/^ovsrec_port_verify_other_config(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_qos	lib/vswitch-idl.c	/^ovsrec_port_verify_qos(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_rstp_statistics	lib/vswitch-idl.c	/^ovsrec_port_verify_rstp_statistics(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_rstp_status	lib/vswitch-idl.c	/^ovsrec_port_verify_rstp_status(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_statistics	lib/vswitch-idl.c	/^ovsrec_port_verify_statistics(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_status	lib/vswitch-idl.c	/^ovsrec_port_verify_status(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_tag	lib/vswitch-idl.c	/^ovsrec_port_verify_tag(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_trunks	lib/vswitch-idl.c	/^ovsrec_port_verify_trunks(const struct ovsrec_port *row)$/;"	f
ovsrec_port_verify_vlan_mode	lib/vswitch-idl.c	/^ovsrec_port_verify_vlan_mode(const struct ovsrec_port *row)$/;"	f
ovsrec_qos	lib/vswitch-idl.h	/^struct ovsrec_qos {$/;"	s
ovsrec_qos_cast	lib/vswitch-idl.c	/^ovsrec_qos_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_qos_col_external_ids	lib/vswitch-idl.h	1661;"	d
ovsrec_qos_col_other_config	lib/vswitch-idl.h	1662;"	d
ovsrec_qos_col_queues	lib/vswitch-idl.h	1664;"	d
ovsrec_qos_col_type	lib/vswitch-idl.h	1663;"	d
ovsrec_qos_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_qos_columns[OVSREC_QOS_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_qos_columns_init	lib/vswitch-idl.c	/^ovsrec_qos_columns_init(void)$/;"	f	file:
ovsrec_qos_delete	lib/vswitch-idl.c	/^ovsrec_qos_delete(const struct ovsrec_qos *row)$/;"	f
ovsrec_qos_first	lib/vswitch-idl.c	/^ovsrec_qos_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_qos_get_external_ids	lib/vswitch-idl.c	/^ovsrec_qos_get_external_ids(const struct ovsrec_qos *row,$/;"	f
ovsrec_qos_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_qos_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_qos_get_other_config	lib/vswitch-idl.c	/^ovsrec_qos_get_other_config(const struct ovsrec_qos *row,$/;"	f
ovsrec_qos_get_queues	lib/vswitch-idl.c	/^ovsrec_qos_get_queues(const struct ovsrec_qos *row,$/;"	f
ovsrec_qos_get_type	lib/vswitch-idl.c	/^ovsrec_qos_get_type(const struct ovsrec_qos *row,$/;"	f
ovsrec_qos_init	lib/vswitch-idl.c	/^ovsrec_qos_init(struct ovsrec_qos *row)$/;"	f
ovsrec_qos_init__	lib/vswitch-idl.c	/^ovsrec_qos_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_qos_insert	lib/vswitch-idl.c	/^ovsrec_qos_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_qos_next	lib/vswitch-idl.c	/^ovsrec_qos_next(const struct ovsrec_qos *row)$/;"	f
ovsrec_qos_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_qos_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_qos_parse_other_config	lib/vswitch-idl.c	/^ovsrec_qos_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_qos_parse_queues	lib/vswitch-idl.c	/^ovsrec_qos_parse_queues(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_qos_parse_type	lib/vswitch-idl.c	/^ovsrec_qos_parse_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_qos_set_external_ids	lib/vswitch-idl.c	/^ovsrec_qos_set_external_ids(const struct ovsrec_qos *row, const struct smap *external_ids)$/;"	f
ovsrec_qos_set_other_config	lib/vswitch-idl.c	/^ovsrec_qos_set_other_config(const struct ovsrec_qos *row, const struct smap *other_config)$/;"	f
ovsrec_qos_set_queues	lib/vswitch-idl.c	/^ovsrec_qos_set_queues(const struct ovsrec_qos *row, const int64_t *key_queues, struct ovsrec_queue **value_queues, size_t n_queues)$/;"	f
ovsrec_qos_set_type	lib/vswitch-idl.c	/^ovsrec_qos_set_type(const struct ovsrec_qos *row, const char *type)$/;"	f
ovsrec_qos_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_qos_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_qos_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_qos_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_qos_unparse_queues	lib/vswitch-idl.c	/^ovsrec_qos_unparse_queues(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_qos_unparse_type	lib/vswitch-idl.c	/^ovsrec_qos_unparse_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_qos_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_qos_verify_external_ids(const struct ovsrec_qos *row)$/;"	f
ovsrec_qos_verify_other_config	lib/vswitch-idl.c	/^ovsrec_qos_verify_other_config(const struct ovsrec_qos *row)$/;"	f
ovsrec_qos_verify_queues	lib/vswitch-idl.c	/^ovsrec_qos_verify_queues(const struct ovsrec_qos *row)$/;"	f
ovsrec_qos_verify_type	lib/vswitch-idl.c	/^ovsrec_qos_verify_type(const struct ovsrec_qos *row)$/;"	f
ovsrec_queue	lib/vswitch-idl.h	/^struct ovsrec_queue {$/;"	s
ovsrec_queue_cast	lib/vswitch-idl.c	/^ovsrec_queue_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_queue_col_dscp	lib/vswitch-idl.h	1724;"	d
ovsrec_queue_col_external_ids	lib/vswitch-idl.h	1722;"	d
ovsrec_queue_col_other_config	lib/vswitch-idl.h	1723;"	d
ovsrec_queue_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_queue_columns[OVSREC_QUEUE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_queue_columns_init	lib/vswitch-idl.c	/^ovsrec_queue_columns_init(void)$/;"	f	file:
ovsrec_queue_delete	lib/vswitch-idl.c	/^ovsrec_queue_delete(const struct ovsrec_queue *row)$/;"	f
ovsrec_queue_first	lib/vswitch-idl.c	/^ovsrec_queue_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_queue_get_dscp	lib/vswitch-idl.c	/^ovsrec_queue_get_dscp(const struct ovsrec_queue *row,$/;"	f
ovsrec_queue_get_external_ids	lib/vswitch-idl.c	/^ovsrec_queue_get_external_ids(const struct ovsrec_queue *row,$/;"	f
ovsrec_queue_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_queue_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_queue_get_other_config	lib/vswitch-idl.c	/^ovsrec_queue_get_other_config(const struct ovsrec_queue *row,$/;"	f
ovsrec_queue_init	lib/vswitch-idl.c	/^ovsrec_queue_init(struct ovsrec_queue *row)$/;"	f
ovsrec_queue_init__	lib/vswitch-idl.c	/^ovsrec_queue_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_queue_insert	lib/vswitch-idl.c	/^ovsrec_queue_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_queue_next	lib/vswitch-idl.c	/^ovsrec_queue_next(const struct ovsrec_queue *row)$/;"	f
ovsrec_queue_parse_dscp	lib/vswitch-idl.c	/^ovsrec_queue_parse_dscp(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_queue_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_queue_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_queue_parse_other_config	lib/vswitch-idl.c	/^ovsrec_queue_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_queue_set_dscp	lib/vswitch-idl.c	/^ovsrec_queue_set_dscp(const struct ovsrec_queue *row, const int64_t *dscp, size_t n_dscp)$/;"	f
ovsrec_queue_set_external_ids	lib/vswitch-idl.c	/^ovsrec_queue_set_external_ids(const struct ovsrec_queue *row, const struct smap *external_ids)$/;"	f
ovsrec_queue_set_other_config	lib/vswitch-idl.c	/^ovsrec_queue_set_other_config(const struct ovsrec_queue *row, const struct smap *other_config)$/;"	f
ovsrec_queue_unparse_dscp	lib/vswitch-idl.c	/^ovsrec_queue_unparse_dscp(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_queue_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_queue_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_queue_unparse_other_config	lib/vswitch-idl.c	/^ovsrec_queue_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_queue_verify_dscp	lib/vswitch-idl.c	/^ovsrec_queue_verify_dscp(const struct ovsrec_queue *row)$/;"	f
ovsrec_queue_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_queue_verify_external_ids(const struct ovsrec_queue *row)$/;"	f
ovsrec_queue_verify_other_config	lib/vswitch-idl.c	/^ovsrec_queue_verify_other_config(const struct ovsrec_queue *row)$/;"	f
ovsrec_sflow	lib/vswitch-idl.h	/^struct ovsrec_sflow {$/;"	s
ovsrec_sflow_cast	lib/vswitch-idl.c	/^ovsrec_sflow_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_sflow_col_agent	lib/vswitch-idl.h	1866;"	d
ovsrec_sflow_col_external_ids	lib/vswitch-idl.h	1870;"	d
ovsrec_sflow_col_header	lib/vswitch-idl.h	1868;"	d
ovsrec_sflow_col_polling	lib/vswitch-idl.h	1869;"	d
ovsrec_sflow_col_sampling	lib/vswitch-idl.h	1867;"	d
ovsrec_sflow_col_targets	lib/vswitch-idl.h	1871;"	d
ovsrec_sflow_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_sflow_columns[OVSREC_SFLOW_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_sflow_columns_init	lib/vswitch-idl.c	/^ovsrec_sflow_columns_init(void)$/;"	f	file:
ovsrec_sflow_delete	lib/vswitch-idl.c	/^ovsrec_sflow_delete(const struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_first	lib/vswitch-idl.c	/^ovsrec_sflow_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_sflow_get_agent	lib/vswitch-idl.c	/^ovsrec_sflow_get_agent(const struct ovsrec_sflow *row,$/;"	f
ovsrec_sflow_get_external_ids	lib/vswitch-idl.c	/^ovsrec_sflow_get_external_ids(const struct ovsrec_sflow *row,$/;"	f
ovsrec_sflow_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_sflow_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_sflow_get_header	lib/vswitch-idl.c	/^ovsrec_sflow_get_header(const struct ovsrec_sflow *row,$/;"	f
ovsrec_sflow_get_polling	lib/vswitch-idl.c	/^ovsrec_sflow_get_polling(const struct ovsrec_sflow *row,$/;"	f
ovsrec_sflow_get_sampling	lib/vswitch-idl.c	/^ovsrec_sflow_get_sampling(const struct ovsrec_sflow *row,$/;"	f
ovsrec_sflow_get_targets	lib/vswitch-idl.c	/^ovsrec_sflow_get_targets(const struct ovsrec_sflow *row,$/;"	f
ovsrec_sflow_init	lib/vswitch-idl.c	/^ovsrec_sflow_init(struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_init__	lib/vswitch-idl.c	/^ovsrec_sflow_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_sflow_insert	lib/vswitch-idl.c	/^ovsrec_sflow_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_sflow_next	lib/vswitch-idl.c	/^ovsrec_sflow_next(const struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_parse_agent	lib/vswitch-idl.c	/^ovsrec_sflow_parse_agent(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_sflow_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_sflow_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_sflow_parse_header	lib/vswitch-idl.c	/^ovsrec_sflow_parse_header(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_sflow_parse_polling	lib/vswitch-idl.c	/^ovsrec_sflow_parse_polling(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_sflow_parse_sampling	lib/vswitch-idl.c	/^ovsrec_sflow_parse_sampling(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_sflow_parse_targets	lib/vswitch-idl.c	/^ovsrec_sflow_parse_targets(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_sflow_set_agent	lib/vswitch-idl.c	/^ovsrec_sflow_set_agent(const struct ovsrec_sflow *row, const char *agent)$/;"	f
ovsrec_sflow_set_external_ids	lib/vswitch-idl.c	/^ovsrec_sflow_set_external_ids(const struct ovsrec_sflow *row, const struct smap *external_ids)$/;"	f
ovsrec_sflow_set_header	lib/vswitch-idl.c	/^ovsrec_sflow_set_header(const struct ovsrec_sflow *row, const int64_t *header, size_t n_header)$/;"	f
ovsrec_sflow_set_polling	lib/vswitch-idl.c	/^ovsrec_sflow_set_polling(const struct ovsrec_sflow *row, const int64_t *polling, size_t n_polling)$/;"	f
ovsrec_sflow_set_sampling	lib/vswitch-idl.c	/^ovsrec_sflow_set_sampling(const struct ovsrec_sflow *row, const int64_t *sampling, size_t n_sampling)$/;"	f
ovsrec_sflow_set_targets	lib/vswitch-idl.c	/^ovsrec_sflow_set_targets(const struct ovsrec_sflow *row, const char **targets, size_t n_targets)$/;"	f
ovsrec_sflow_unparse_agent	lib/vswitch-idl.c	/^ovsrec_sflow_unparse_agent(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_sflow_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_sflow_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_sflow_unparse_header	lib/vswitch-idl.c	/^ovsrec_sflow_unparse_header(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_sflow_unparse_polling	lib/vswitch-idl.c	/^ovsrec_sflow_unparse_polling(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_sflow_unparse_sampling	lib/vswitch-idl.c	/^ovsrec_sflow_unparse_sampling(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_sflow_unparse_targets	lib/vswitch-idl.c	/^ovsrec_sflow_unparse_targets(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_sflow_verify_agent	lib/vswitch-idl.c	/^ovsrec_sflow_verify_agent(const struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_sflow_verify_external_ids(const struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_verify_header	lib/vswitch-idl.c	/^ovsrec_sflow_verify_header(const struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_verify_polling	lib/vswitch-idl.c	/^ovsrec_sflow_verify_polling(const struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_verify_sampling	lib/vswitch-idl.c	/^ovsrec_sflow_verify_sampling(const struct ovsrec_sflow *row)$/;"	f
ovsrec_sflow_verify_targets	lib/vswitch-idl.c	/^ovsrec_sflow_verify_targets(const struct ovsrec_sflow *row)$/;"	f
ovsrec_ssl	lib/vswitch-idl.h	/^struct ovsrec_ssl {$/;"	s
ovsrec_ssl_cast	lib/vswitch-idl.c	/^ovsrec_ssl_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_ssl_col_bootstrap_ca_cert	lib/vswitch-idl.h	1788;"	d
ovsrec_ssl_col_ca_cert	lib/vswitch-idl.h	1786;"	d
ovsrec_ssl_col_certificate	lib/vswitch-idl.h	1790;"	d
ovsrec_ssl_col_external_ids	lib/vswitch-idl.h	1789;"	d
ovsrec_ssl_col_private_key	lib/vswitch-idl.h	1787;"	d
ovsrec_ssl_columns	lib/vswitch-idl.c	/^struct ovsdb_idl_column ovsrec_ssl_columns[OVSREC_SSL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
ovsrec_ssl_columns_init	lib/vswitch-idl.c	/^ovsrec_ssl_columns_init(void)$/;"	f	file:
ovsrec_ssl_delete	lib/vswitch-idl.c	/^ovsrec_ssl_delete(const struct ovsrec_ssl *row)$/;"	f
ovsrec_ssl_first	lib/vswitch-idl.c	/^ovsrec_ssl_first(const struct ovsdb_idl *idl)$/;"	f
ovsrec_ssl_get_bootstrap_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_get_bootstrap_ca_cert(const struct ovsrec_ssl *row,$/;"	f
ovsrec_ssl_get_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_get_ca_cert(const struct ovsrec_ssl *row,$/;"	f
ovsrec_ssl_get_certificate	lib/vswitch-idl.c	/^ovsrec_ssl_get_certificate(const struct ovsrec_ssl *row,$/;"	f
ovsrec_ssl_get_external_ids	lib/vswitch-idl.c	/^ovsrec_ssl_get_external_ids(const struct ovsrec_ssl *row,$/;"	f
ovsrec_ssl_get_for_uuid	lib/vswitch-idl.c	/^ovsrec_ssl_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
ovsrec_ssl_get_private_key	lib/vswitch-idl.c	/^ovsrec_ssl_get_private_key(const struct ovsrec_ssl *row,$/;"	f
ovsrec_ssl_init	lib/vswitch-idl.c	/^ovsrec_ssl_init(struct ovsrec_ssl *row)$/;"	f
ovsrec_ssl_init__	lib/vswitch-idl.c	/^ovsrec_ssl_init__(struct ovsdb_idl_row *row)$/;"	f	file:
ovsrec_ssl_insert	lib/vswitch-idl.c	/^ovsrec_ssl_insert(struct ovsdb_idl_txn *txn)$/;"	f
ovsrec_ssl_next	lib/vswitch-idl.c	/^ovsrec_ssl_next(const struct ovsrec_ssl *row)$/;"	f
ovsrec_ssl_parse_bootstrap_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_parse_bootstrap_ca_cert(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ssl_parse_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_parse_ca_cert(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ssl_parse_certificate	lib/vswitch-idl.c	/^ovsrec_ssl_parse_certificate(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ssl_parse_external_ids	lib/vswitch-idl.c	/^ovsrec_ssl_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ssl_parse_private_key	lib/vswitch-idl.c	/^ovsrec_ssl_parse_private_key(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
ovsrec_ssl_set_bootstrap_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_set_bootstrap_ca_cert(const struct ovsrec_ssl *row, bool bootstrap_ca_cert)$/;"	f
ovsrec_ssl_set_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_set_ca_cert(const struct ovsrec_ssl *row, const char *ca_cert)$/;"	f
ovsrec_ssl_set_certificate	lib/vswitch-idl.c	/^ovsrec_ssl_set_certificate(const struct ovsrec_ssl *row, const char *certificate)$/;"	f
ovsrec_ssl_set_external_ids	lib/vswitch-idl.c	/^ovsrec_ssl_set_external_ids(const struct ovsrec_ssl *row, const struct smap *external_ids)$/;"	f
ovsrec_ssl_set_private_key	lib/vswitch-idl.c	/^ovsrec_ssl_set_private_key(const struct ovsrec_ssl *row, const char *private_key)$/;"	f
ovsrec_ssl_unparse_bootstrap_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_unparse_bootstrap_ca_cert(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_ssl_unparse_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_unparse_ca_cert(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_ssl_unparse_certificate	lib/vswitch-idl.c	/^ovsrec_ssl_unparse_certificate(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_ssl_unparse_external_ids	lib/vswitch-idl.c	/^ovsrec_ssl_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
ovsrec_ssl_unparse_private_key	lib/vswitch-idl.c	/^ovsrec_ssl_unparse_private_key(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
ovsrec_ssl_verify_bootstrap_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_verify_bootstrap_ca_cert(const struct ovsrec_ssl *row)$/;"	f
ovsrec_ssl_verify_ca_cert	lib/vswitch-idl.c	/^ovsrec_ssl_verify_ca_cert(const struct ovsrec_ssl *row)$/;"	f
ovsrec_ssl_verify_certificate	lib/vswitch-idl.c	/^ovsrec_ssl_verify_certificate(const struct ovsrec_ssl *row)$/;"	f
ovsrec_ssl_verify_external_ids	lib/vswitch-idl.c	/^ovsrec_ssl_verify_external_ids(const struct ovsrec_ssl *row)$/;"	f
ovsrec_ssl_verify_private_key	lib/vswitch-idl.c	/^ovsrec_ssl_verify_private_key(const struct ovsrec_ssl *row)$/;"	f
ovsrec_table_autoattach	lib/vswitch-idl.h	1939;"	d
ovsrec_table_bridge	lib/vswitch-idl.h	1933;"	d
ovsrec_table_classes	lib/vswitch-idl.c	/^struct ovsdb_idl_table_class ovsrec_table_classes[OVSREC_N_TABLES] = {$/;"	v	typeref:struct:ovsdb_idl_table_class
ovsrec_table_controller	lib/vswitch-idl.h	1940;"	d
ovsrec_table_flow_sample_collector_set	lib/vswitch-idl.h	1936;"	d
ovsrec_table_flow_table	lib/vswitch-idl.h	1941;"	d
ovsrec_table_interface	lib/vswitch-idl.h	1946;"	d
ovsrec_table_ipfix	lib/vswitch-idl.h	1937;"	d
ovsrec_table_manager	lib/vswitch-idl.h	1944;"	d
ovsrec_table_mirror	lib/vswitch-idl.h	1945;"	d
ovsrec_table_netflow	lib/vswitch-idl.h	1947;"	d
ovsrec_table_open_vswitch	lib/vswitch-idl.h	1938;"	d
ovsrec_table_port	lib/vswitch-idl.h	1948;"	d
ovsrec_table_qos	lib/vswitch-idl.h	1934;"	d
ovsrec_table_queue	lib/vswitch-idl.h	1942;"	d
ovsrec_table_sflow	lib/vswitch-idl.h	1935;"	d
ovsrec_table_ssl	lib/vswitch-idl.h	1943;"	d
ovstest	python/ovstest/tests.py	/^import ovstest.util as util$/;"	i
ovstest	utilities/ovs-l3ping	/^import ovstest.args as args$/;"	i
ovstest	utilities/ovs-l3ping	/^import ovstest.tests as tests$/;"	i
ovstest	utilities/ovs-l3ping	/^import ovstest.util as util$/;"	i
ovstest	utilities/ovs-test	/^import ovstest.args as args$/;"	i
ovstest	utilities/ovs-test	/^import ovstest.rpcserver as rpcserver$/;"	i
ovstest	utilities/ovs-test	/^import ovstest.tests as tests$/;"	i
ovstest	utilities/ovs-test	/^import ovstest.util as util$/;"	i
ovstest_func	tests/ovstest.h	/^typedef void (*ovstest_func)(int argc, char *argv[]);$/;"	t
ovstest_pyfiles	Makefile	/^ovstest_pyfiles = \\$/;"	m
ovstest_pyfiles	python/automake.mk	/^ovstest_pyfiles = \\$/;"	m
ovstest_register	tests/ovstest.c	/^ovstest_register(const char *test_name, ovs_cmdl_handler f)$/;"	f
ovsthread_aux	lib/ovs-thread.c	/^struct ovsthread_aux {$/;"	s	file:
ovsthread_cancel_ovsthread_key_destruct__	lib/ovs-thread.c	/^ovsthread_cancel_ovsthread_key_destruct__(void *aux OVS_UNUSED)$/;"	f	file:
ovsthread_getspecific	lib/ovs-thread.c	/^ovsthread_getspecific(ovsthread_key_t key)$/;"	f
ovsthread_id_self	lib/ovs-thread.h	/^ovsthread_id_self(void)$/;"	f
ovsthread_key	lib/ovs-thread.c	/^struct ovsthread_key {$/;"	s	file:
ovsthread_key_create	lib/ovs-thread.c	/^ovsthread_key_create(ovsthread_key_t *keyp, void (*destructor)(void *))$/;"	f
ovsthread_key_delete	lib/ovs-thread.c	/^ovsthread_key_delete(ovsthread_key_t key)$/;"	f
ovsthread_key_destruct__	lib/ovs-thread.c	/^ovsthread_key_destruct__(void *slots_)$/;"	f	file:
ovsthread_key_lookup__	lib/ovs-thread.c	/^ovsthread_key_lookup__(const struct ovsthread_key *key)$/;"	f	file:
ovsthread_key_slots	lib/ovs-thread.c	/^struct ovsthread_key_slots {$/;"	s	file:
ovsthread_key_t	lib/ovs-thread.h	/^typedef struct ovsthread_key *ovsthread_key_t;$/;"	t	typeref:struct:ovsthread_key
ovsthread_once	include/openvswitch/thread.h	/^struct ovsthread_once {$/;"	s
ovsthread_once_done	lib/ovs-thread.c	/^ovsthread_once_done(struct ovsthread_once *once)$/;"	f
ovsthread_once_start	include/openvswitch/thread.h	/^ovsthread_once_start(struct ovsthread_once *once)$/;"	f
ovsthread_once_start__	lib/ovs-thread.c	/^ovsthread_once_start__(struct ovsthread_once *once)$/;"	f
ovsthread_setspecific	lib/ovs-thread.c	/^ovsthread_setspecific(ovsthread_key_t key, const void *value)$/;"	f
ovsthread_stats	lib/ovs-thread.h	/^struct ovsthread_stats {$/;"	s
ovsthread_stats_bucket_get	lib/ovs-thread.c	/^ovsthread_stats_bucket_get(struct ovsthread_stats *stats,$/;"	f
ovsthread_stats_destroy	lib/ovs-thread.c	/^ovsthread_stats_destroy(struct ovsthread_stats *stats)$/;"	f
ovsthread_stats_init	lib/ovs-thread.c	/^ovsthread_stats_init(struct ovsthread_stats *stats)$/;"	f
ovsthread_wrapper	lib/ovs-thread.c	/^ovsthread_wrapper(void *aux_)$/;"	f	file:
ovsuuid	python/ovs/db/data.py	/^import ovs.ovsuuid$/;"	i
ovsuuid	python/ovs/db/idl.py	/^import ovs.ovsuuid$/;"	i
ovsuuid	python/ovs/db/types.py	/^import ovs.ovsuuid$/;"	i
ovsuuid	tests/test-ovsdb.py	/^import ovs.ovsuuid$/;"	i
owner	datapath/vport.h	/^	struct module *owner;$/;"	m	struct:vport_ops	typeref:struct:vport_ops::module
oxm_bitmap_from_mf_bitmap	lib/nx-match.c	/^oxm_bitmap_from_mf_bitmap(const struct mf_bitmap *fields,$/;"	f
oxm_bitmap_to_mf_bitmap	lib/nx-match.c	/^oxm_bitmap_to_mf_bitmap(ovs_be64 oxm_bitmap, enum ofp_version version)$/;"	f
oxm_format_field_array	lib/nx-match.c	/^oxm_format_field_array(struct ds *ds, const struct field_array *fa)$/;"	f
oxm_header	include/openflow/openflow-1.2.h	/^    ovs_be32 oxm_header;   \/* oxm_class = OFPXMC_EXPERIMENTER *\/$/;"	m	struct:ofp12_oxm_experimenter_header
oxm_maskable_fields	lib/nx-match.c	/^oxm_maskable_fields(void)$/;"	f
oxm_match_from_string	lib/nx-match.c	/^oxm_match_from_string(const char *s, struct ofpbuf *b)$/;"	f
oxm_match_to_string	lib/nx-match.c	/^oxm_match_to_string(const struct ofpbuf *p, unsigned int match_len)$/;"	f
oxm_matchable_fields	lib/nx-match.c	/^oxm_matchable_fields(void)$/;"	f
oxm_name_to_class	build-aux/extract-ofp-fields	/^def oxm_name_to_class(name):$/;"	f
oxm_pull_field_array	lib/nx-match.c	/^oxm_pull_field_array(const void *fields_data, size_t fields_len,$/;"	f
oxm_pull_match	lib/nx-match.c	/^oxm_pull_match(struct ofpbuf *b, struct match *match)$/;"	f
oxm_pull_match__	lib/nx-match.c	/^oxm_pull_match__(struct ofpbuf *b, bool strict, struct match *match)$/;"	f	file:
oxm_pull_match_loose	lib/nx-match.c	/^oxm_pull_match_loose(struct ofpbuf *b, struct match *match)$/;"	f
oxm_put_field_array	lib/nx-match.c	/^oxm_put_field_array(struct ofpbuf *b, const struct field_array *fa,$/;"	f
oxm_put_match	lib/nx-match.c	/^oxm_put_match(struct ofpbuf *b, const struct match *match,$/;"	f
oxm_writable_fields	lib/nx-match.c	/^oxm_writable_fields(void)$/;"	f
p	lib/ovs-rcu.h	/^struct ovsrcu_pointer { ATOMIC(void *) p; };$/;"	m	struct:ovsrcu_pointer
p1	lib/ovs-thread.c	/^    void **p1[L1_SIZE];$/;"	m	struct:ovsthread_key_slots	file:
p_chassis	lib/lldp/lldpd-structs.h	/^    struct lldpd_chassis *p_chassis; \/* Attached chassis *\/$/;"	m	struct:lldpd_port	typeref:struct:lldpd_port::lldpd_chassis
p_descr	lib/lldp/lldpd-structs.h	/^    char                 *p_descr;$/;"	m	struct:lldpd_port
p_element	lib/lldp/lldpd-structs.h	/^    struct lldpd_aa_element_tlv        p_element;$/;"	m	struct:lldpd_port	typeref:struct:lldpd_port::lldpd_aa_element_tlv
p_entries	lib/lldp/lldpd-structs.h	/^    struct ovs_list      p_entries;$/;"	m	struct:lldpd_port	typeref:struct:lldpd_port::ovs_list
p_hidden_in	lib/lldp/lldpd-structs.h	/^    u_int8_t             p_hidden_in:1; \/* Considered hidden for reception *\/$/;"	m	struct:lldpd_port
p_hidden_out	lib/lldp/lldpd-structs.h	/^    u_int8_t             p_hidden_out:1; \/* Considered hidden for emission *\/$/;"	m	struct:lldpd_port
p_id	lib/lldp/lldpd-structs.h	/^    char                 *p_id;$/;"	m	struct:lldpd_port
p_id_len	lib/lldp/lldpd-structs.h	/^    int                  p_id_len;$/;"	m	struct:lldpd_port
p_id_subtype	lib/lldp/lldpd-structs.h	/^    u_int8_t             p_id_subtype;$/;"	m	struct:lldpd_port
p_isid_vlan_maps	lib/lldp/lldpd-structs.h	/^    struct ovs_list p_isid_vlan_maps; \/* Contains "struct lldpd_aa_isid_vlan_maps_tlv"s. *\/$/;"	m	struct:lldpd_port	typeref:struct:lldpd_port::ovs_list
p_lastchange	lib/lldp/lldpd-structs.h	/^    time_t               p_lastchange; \/* Time of last change of values *\/$/;"	m	struct:lldpd_port
p_lastframe	lib/lldp/lldpd-structs.h	/^    struct lldpd_frame   *p_lastframe; \/* Frame received during last update *\/$/;"	m	struct:lldpd_port	typeref:struct:lldpd_port::lldpd_frame
p_lastupdate	lib/lldp/lldpd-structs.h	/^    time_t               p_lastupdate; \/* Time of last update received *\/$/;"	m	struct:lldpd_port
p_mfs	lib/lldp/lldpd-structs.h	/^    u_int16_t            p_mfs;$/;"	m	struct:lldpd_port
p_protocol	lib/lldp/lldpd-structs.h	/^    u_int8_t             p_protocol;   \/* Protocol used to get this port *\/$/;"	m	struct:lldpd_port
pack_ethaddr	tests/flowgen.pl	/^sub pack_ethaddr {$/;"	s
packages	python/setup.py	/^    packages=['ovs', 'ovs.db', 'ovs.unixctl'],$/;"	v
packet	datapath-windows/ovsext/User.h	/^    OVS_PACKET_INFO packet;$/;"	m	struct:_OVS_PACKET_QUEUE_ELEM
packet	lib/dpif.h	/^    struct dp_packet *packet;          \/* Packet to execute. *\/$/;"	m	struct:dpif_execute	typeref:struct:dpif_execute::dp_packet
packet	lib/dpif.h	/^    struct dp_packet packet;       \/* Packet data. *\/$/;"	m	struct:dpif_upcall	typeref:struct:dpif_upcall::dp_packet
packet	lib/ofp-util.h	/^    const void *packet;         \/* Packet data, if buffer_id == UINT32_MAX. *\/$/;"	m	struct:ofputil_packet_out
packet	lib/ofp-util.h	/^    const void *packet;$/;"	m	struct:ofputil_packet_in
packet	ofproto/netflow.c	/^    struct ofpbuf packet;         \/* NetFlow packet being accumulated. *\/$/;"	m	struct:netflow	typeref:struct:netflow::ofpbuf	file:
packet	ofproto/ofproto-dpif-upcall.c	/^    const struct dp_packet *packet;   \/* Packet associated with this upcall. *\/$/;"	m	struct:upcall	typeref:struct:upcall::dp_packet	file:
packet	ofproto/ofproto-dpif-xlate.h	/^    const struct dp_packet *packet;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::dp_packet
packet	ofproto/ofproto.c	/^    struct dp_packet *packet;      \/* Owns the packet. *\/$/;"	m	struct:rule_execute	typeref:struct:rule_execute::dp_packet	file:
packet	ofproto/pktbuf.c	/^struct packet {$/;"	s	file:
packetBuf	datapath-windows/ovsext/DpInternal.h	/^   PCHAR packetBuf;$/;"	m	struct:OvsPacketExecute
packetBuf	datapath-windows/ovsext/Stt.h	/^    PCHAR               packetBuf;$/;"	m	struct:_OVS_STT_PKT_ENTRY
packetCount	datapath-windows/ovsext/DpInternal.h	/^    Ovs64AlignedU64 packetCount;$/;"	m	struct:OvsFlowStats
packetCount	datapath-windows/ovsext/Flow.h	/^    UINT64 packetCount;$/;"	m	struct:_OvsFlow
packetLen	datapath-windows/ovsext/DpInternal.h	/^    uint32_t packetLen;$/;"	m	struct:_OVS_PACKET_INFO
packetLen	datapath-windows/ovsext/DpInternal.h	/^   uint32_t packetLen;$/;"	m	struct:OvsPacketExecute
packetList	datapath-windows/ovsext/User.h	/^    LIST_ENTRY  packetList;$/;"	m	struct:_OVS_USER_PACKET_QUEUE
packetQueue	datapath-windows/ovsext/Datapath.h	/^    POVS_USER_PACKET_QUEUE packetQueue;$/;"	m	struct:_OVS_OPEN_INSTANCE
packetSeqNo	lib/sflow_api.h	/^    u_int32_t packetSeqNo;$/;"	m	struct:_SFLSampleCollector
packet_band_count	include/openflow/openflow-1.3.h	/^    ovs_be64    packet_band_count;      \/* Number of packets in band. *\/$/;"	m	struct:ofp13_meter_band_stats
packet_batch	lib/dpif-netdev.c	/^struct packet_batch {$/;"	s	file:
packet_batch_execute	lib/dpif-netdev.c	/^packet_batch_execute(struct packet_batch *batch,$/;"	f	file:
packet_batch_init	lib/dpif-netdev.c	/^packet_batch_init(struct packet_batch *batch, struct dp_netdev_flow *flow)$/;"	f	file:
packet_batch_update	lib/dpif-netdev.c	/^packet_batch_update(struct packet_batch *batch, struct dp_packet *packet,$/;"	f	file:
packet_count	datapath/flow.h	/^	u64 packet_count;		\/* Number of packets matched. *\/$/;"	m	struct:flow_stats
packet_count	include/openflow/nicira-ext.h	/^    ovs_be64 packet_count;    \/* Number of packets, UINT64_MAX if unknown. *\/$/;"	m	struct:nx_flow_stats
packet_count	include/openflow/nicira-ext.h	/^    ovs_be64 packet_count;$/;"	m	struct:nx_flow_removed
packet_count	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 packet_count; \/* Number of packets in flow. *\/$/;"	m	struct:ofp10_flow_stats
packet_count	include/openflow/openflow-1.0.h	/^    ovs_be64 packet_count;$/;"	m	struct:ofp10_flow_removed
packet_count	include/openflow/openflow-1.1.h	/^    ovs_be64 packet_count;     \/* Number of packets in flow. *\/$/;"	m	struct:ofp11_flow_stats
packet_count	include/openflow/openflow-1.1.h	/^    ovs_be64 packet_count;     \/* Number of packets processed by group. *\/$/;"	m	struct:ofp11_group_stats
packet_count	include/openflow/openflow-1.1.h	/^    ovs_be64 packet_count;   \/* Number of packets processed by bucket. *\/$/;"	m	struct:ofp11_bucket_counter
packet_count	include/openflow/openflow-1.1.h	/^    ovs_be64 packet_count;$/;"	m	struct:ofp11_flow_removed
packet_count	include/openflow/openflow-1.2.h	/^    ovs_be64 packet_count;$/;"	m	struct:ofp12_flow_removed
packet_count	include/openflow/openflow-common.h	/^    ovs_32aligned_be64 packet_count; \/* Number of packets in flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
packet_count	lib/dpif-netdev.c	/^    atomic_ullong packet_count;    \/* Number of packets matched. *\/$/;"	m	struct:dp_netdev_flow_stats	file:
packet_count	lib/dpif-netdev.c	/^    unsigned int packet_count;$/;"	m	struct:packet_batch	file:
packet_count	lib/netflow.h	/^    ovs_be32 packet_count;         \/* Number of packets. *\/$/;"	m	struct:netflow_v5_record
packet_count	lib/ofp-util.h	/^    uint64_t packet_count;      \/* Packet count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_aggregate_stats
packet_count	lib/ofp-util.h	/^    uint64_t packet_count;      \/* Packet count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_flow_removed
packet_count	lib/ofp-util.h	/^    uint64_t packet_count;      \/* Packet count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_flow_stats
packet_count	lib/ofp-util.h	/^    uint64_t packet_count;      \/* Packet count, UINT64_MAX if unknown. *\/$/;"	m	struct:ofputil_group_stats
packet_count	lib/ofp-util.h	/^    uint64_t packet_count;   \/* Number of packets processed by bucket. *\/$/;"	m	struct:bucket_counter
packet_count	lib/ofp-util.h	/^    uint64_t packet_count;$/;"	m	struct:ofputil_meter_band_stats
packet_count	ofproto/netflow.c	/^    uint64_t packet_count;        \/* Packets from subrules. *\/$/;"	m	struct:netflow_flow	file:
packet_count	ofproto/ofproto-dpif-mirror.c	/^    int64_t packet_count;       \/* Number of packets sent. *\/$/;"	m	struct:mirror	file:
packet_csum_pseudoheader	lib/packets.c	/^packet_csum_pseudoheader(const struct ip_header *ip)$/;"	f
packet_delta_count	ofproto/ofproto-dpif-ipfix.c	/^    uint64_t packet_delta_count;$/;"	m	struct:ipfix_flow_cache_entry	file:
packet_format_tcp_flags	lib/packets.c	/^packet_format_tcp_flags(struct ds *s, uint16_t tcp_flags)$/;"	f
packet_in_count	include/openflow/openflow-1.3.h	/^    ovs_be64  packet_in_count;   \/* Number of packets in input. *\/$/;"	m	struct:ofp13_meter_stats
packet_in_count	lib/ofp-util.h	/^    uint64_t packet_in_count;$/;"	m	struct:ofputil_meter_stats
packet_in_counter	ofproto/connmgr.c	/^    struct rconn_packet_counter *packet_in_counter; \/* # queued on 'rconn'. *\/$/;"	m	struct:ofconn	typeref:struct:ofconn::rconn_packet_counter	file:
packet_in_format	ofproto/connmgr.c	/^    enum nx_packet_in_format packet_in_format; \/* OFPT_PACKET_IN format. *\/$/;"	m	struct:ofconn	typeref:enum:ofconn::nx_packet_in_format	file:
packet_in_mask	include/openflow/nicira-ext.h	/^    ovs_be32 packet_in_mask[2];    \/* Bitmasks of OFPR_* values. *\/$/;"	m	struct:nx_async_config
packet_in_mask	include/openflow/openflow-1.3.h	/^    ovs_be32 packet_in_mask[2];   \/* Bitmasks of OFPR_* values. *\/$/;"	m	struct:ofp13_async_config
packet_in_overflow	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(packet_in_overflow);$/;"	v
packet_len	lib/ofp-util.h	/^    size_t packet_len;          \/* Length of packet data in bytes. *\/$/;"	m	struct:ofputil_packet_out
packet_len	lib/ofp-util.h	/^    size_t packet_len;          \/* Number of bytes in 'packet'. *\/$/;"	m	struct:ofputil_packet_in
packet_length	datapath/linux/vport-netdev.c	/^static unsigned int packet_length(const struct sk_buff *skb)$/;"	f	file:
packet_length	datapath/vport-netdev.c	/^static unsigned int packet_length(const struct sk_buff *skb)$/;"	f	file:
packet_out	ofproto/ofproto-dpif.c	/^packet_out(struct ofproto *ofproto_, struct dp_packet *packet,$/;"	f	file:
packet_out	ofproto/ofproto-provider.h	/^    enum ofperr (*packet_out)(struct ofproto *ofproto, struct dp_packet *packet,$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::packet_out
packet_policy	datapath/datapath.c	/^static const struct nla_policy packet_policy[OVS_PACKET_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
packet_policy	datapath/linux/datapath.c	/^static const struct nla_policy packet_policy[OVS_PACKET_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
packet_rh_present	lib/packets.c	/^packet_rh_present(struct dp_packet *packet)$/;"	f	file:
packet_set_icmp	lib/packets.c	/^packet_set_icmp(struct dp_packet *packet, uint8_t type, uint8_t code)$/;"	f
packet_set_ipv4	lib/packets.c	/^packet_set_ipv4(struct dp_packet *packet, ovs_be32 src, ovs_be32 dst,$/;"	f
packet_set_ipv4_addr	lib/packets.c	/^packet_set_ipv4_addr(struct dp_packet *packet,$/;"	f	file:
packet_set_ipv6	lib/packets.c	/^packet_set_ipv6(struct dp_packet *packet, uint8_t proto, const ovs_be32 src[4],$/;"	f
packet_set_ipv6_addr	lib/packets.c	/^packet_set_ipv6_addr(struct dp_packet *packet, uint8_t proto,$/;"	f	file:
packet_set_ipv6_flow_label	lib/packets.c	/^packet_set_ipv6_flow_label(ovs_16aligned_be32 *flow_label, ovs_be32 flow_key)$/;"	f	file:
packet_set_ipv6_tc	lib/packets.c	/^packet_set_ipv6_tc(ovs_16aligned_be32 *flow_label, uint8_t tc)$/;"	f	file:
packet_set_nd	lib/packets.c	/^packet_set_nd(struct dp_packet *packet, const ovs_be32 target[4],$/;"	f
packet_set_port	lib/packets.c	/^packet_set_port(ovs_be16 *port, ovs_be16 new_port, ovs_be16 *csum)$/;"	f	file:
packet_set_sctp_port	lib/packets.c	/^packet_set_sctp_port(struct dp_packet *packet, ovs_be16 src, ovs_be16 dst)$/;"	f
packet_set_tcp_port	lib/packets.c	/^packet_set_tcp_port(struct dp_packet *packet, ovs_be16 src, ovs_be16 dst)$/;"	f
packet_set_udp_port	lib/packets.c	/^packet_set_udp_port(struct dp_packet *packet, ovs_be16 src, ovs_be16 dst)$/;"	f
packet_tcp_flag_to_string	lib/packets.c	/^packet_tcp_flag_to_string(uint32_t flag)$/;"	f
packet_update_csum128	lib/packets.c	/^packet_update_csum128(struct dp_packet *packet, uint8_t proto,$/;"	f	file:
packets	lib/dpif-netdev.c	/^    struct dp_packet *packets[NETDEV_MAX_BURST];$/;"	m	struct:packet_batch	typeref:struct:packet_batch::dp_packet	file:
packets	ofproto/pinsched.c	/^    struct ovs_list packets;    \/* Contains "struct ofpbuf"s. *\/$/;"	m	struct:pinqueue	typeref:struct:pinqueue::ovs_list	file:
packets	ofproto/pktbuf.c	/^    struct packet packets[PKTBUF_CNT];$/;"	m	struct:pktbuf	typeref:struct:pktbuf::packet	file:
packets_from_local	vtep/vtep-idl.h	/^	int64_t packets_from_local;$/;"	m	struct:vteprec_logical_binding_stats
packets_to_local	vtep/vtep-idl.h	/^	int64_t packets_to_local;$/;"	m	struct:vteprec_logical_binding_stats
pad	datapath-windows/ovsext/DpInternal.h	/^            uint32_t pad;$/;"	m	union:OvsIPv4TunnelKey::__anon7::__anon8
pad	datapath-windows/ovsext/DpInternal.h	/^    uint32_t pad;$/;"	m	struct:Ipv6Key
pad	datapath-windows/ovsext/DpInternal.h	/^    uint8_t pad[3];$/;"	m	struct:ArpKey
pad	datapath-windows/ovsext/IpHelper.h	/^    UINT32            pad;$/;"	m	struct:_OVS_IPNEIGH_ENTRY
pad	datapath-windows/ovsext/NetProto.h	/^        UINT16 pad:9;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
pad	include/openflow/netronome-ext.h	/^    ovs_be32 pad;$/;"	m	struct:ntr_group_prop_selection_method
pad	include/openflow/nicira-ext.h	/^    uint8_t  pad[2];$/;"	m	struct:nx_geneve_map
pad	include/openflow/nicira-ext.h	/^    uint8_t pad;                \/* Reserved, currently zeroed. *\/$/;"	m	struct:nx_flow_update_full
pad	include/openflow/nicira-ext.h	/^    uint8_t pad;$/;"	m	struct:nx_flow_stats
pad	include/openflow/nicira-ext.h	/^    uint8_t pad[3];           \/* Align to 64 bits. *\/$/;"	m	struct:nx_aggregate_stats_request
pad	include/openflow/nicira-ext.h	/^    uint8_t pad[3];           \/* Align to 64 bits. *\/$/;"	m	struct:nx_flow_stats_request
pad	include/openflow/nicira-ext.h	/^    uint8_t pad[4];             \/* Align to 64-bits. *\/$/;"	m	struct:nicira10_stats_msg
pad	include/openflow/nicira-ext.h	/^    uint8_t pad[6];               \/* Align to 64-bits. *\/$/;"	m	struct:nx_flow_mod
pad	include/openflow/nicira-ext.h	/^    uint8_t pad[6];           \/* Align to 64-bits. *\/$/;"	m	struct:nx_packet_in
pad	include/openflow/nicira-ext.h	/^    uint8_t pad[6];$/;"	m	struct:nx_geneve_table_mod
pad	include/openflow/nicira-ext.h	/^    uint8_t pad[7];$/;"	m	struct:nx_flow_mod_table_id
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad;              \/* Align to 32 bits. *\/$/;"	m	struct:ofp10_flow_stats_request
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad;$/;"	m	struct:ofp10_flow_stats
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad;$/;"	m	struct:ofp10_packet_in
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[1];           \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_flow_removed
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[2];             \/* 64-bit alignment. *\/$/;"	m	struct:ofp10_packet_queue
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[2];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_queue_stats
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[2];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_queue_stats_request
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[2];$/;"	m	struct:ofp10_queue_get_config_request
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[3];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp10_table_stats
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[4];         \/* Pad to 64-bits. *\/$/;"	m	struct:ofp10_port_mod
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[6];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_port_stats
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[6];$/;"	m	struct:ofp10_port_stats_request
pad	include/openflow/openflow-1.0.h	/^    uint8_t pad[6];$/;"	m	struct:ofp10_queue_get_config_reply
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad;                  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_group_mod
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad;                \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_group_desc_stats
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad;$/;"	m	struct:ofp11_flow_stats
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[2];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_group_stats
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[3];                \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_instruction_goto_table
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[3];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_flow_stats_request
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[3];         \/* Pad to 32 bits *\/$/;"	m	struct:ofp11_table_mod
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];             \/* Align to 64-bits *\/$/;"	m	struct:ofp11_instruction
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];             \/* Align to 64-bits *\/$/;"	m	struct:ofp11_instruction_actions
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];             \/* Align to 64-bits *\/$/;"	m	struct:ofp11_instruction_write_metadata
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_group_stats_request
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_port_stats
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_bucket
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_port
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_port_mod
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_port_stats_request
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_queue_get_config_reply
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_queue_get_config_request
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[4];$/;"	m	struct:ofp11_stats_msg
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[6];$/;"	m	struct:ofp11_packet_out
pad	include/openflow/openflow-1.1.h	/^    uint8_t pad[7];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_table_stats
pad	include/openflow/openflow-1.2.h	/^    uint8_t pad[4];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp12_role_request
pad	include/openflow/openflow-1.2.h	/^    uint8_t pad[6];        \/* 64-bit alignment. *\/$/;"	m	struct:ofp12_packet_queue
pad	include/openflow/openflow-1.2.h	/^    uint8_t pad[7];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp12_table_stats
pad	include/openflow/openflow-1.3.h	/^    uint8_t     pad[3];$/;"	m	struct:ofp13_meter_band_dscp_remark
pad	include/openflow/openflow-1.3.h	/^    uint8_t     pad[4];$/;"	m	struct:ofp13_meter_band_drop
pad	include/openflow/openflow-1.3.h	/^    uint8_t    pad[2];$/;"	m	struct:ofp13_meter_features
pad	include/openflow/openflow-1.3.h	/^    uint8_t   pad[6];$/;"	m	struct:ofp13_meter_stats
pad	include/openflow/openflow-1.3.h	/^    uint8_t  pad[3];        \/* Align to 32-bits. *\/$/;"	m	struct:ofp13_table_stats
pad	include/openflow/openflow-1.3.h	/^    uint8_t pad[4];     \/* Align to 64 bits. *\/$/;"	m	struct:ofp13_meter_multipart_request
pad	include/openflow/openflow-1.3.h	/^    uint8_t pad[5];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp13_table_features
pad	include/openflow/openflow-1.4.h	/^    uint8_t          pad[4];  \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
pad	include/openflow/openflow-1.4.h	/^    uint8_t          pad[4];  \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
pad	include/openflow/openflow-1.4.h	/^    uint8_t  pad[3];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_role_status
pad	include/openflow/openflow-1.4.h	/^    uint8_t pad[1];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
pad	include/openflow/openflow-1.4.h	/^    uint8_t pad[1];        \/* Align to 32-bits. *\/$/;"	m	struct:ofp14_table_desc
pad	include/openflow/openflow-1.4.h	/^    uint8_t pad[2];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port_stats
pad	include/openflow/openflow-1.4.h	/^    uint8_t pad[2];$/;"	m	struct:ofp14_port
pad	include/openflow/openflow-1.4.h	/^    uint8_t pad[3];         \/* Pad to 32 bits *\/$/;"	m	struct:ofp14_table_mod
pad	include/openflow/openflow-1.4.h	/^    uint8_t pad[4];$/;"	m	struct:ofp14_port_mod
pad	include/openflow/openflow-1.4.h	/^    uint8_t pad[6];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_queue_stats
pad	include/openflow/openflow-1.5.h	/^    uint8_t          pad[2];  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
pad	include/openflow/openflow-1.5.h	/^    uint8_t pad;                  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_desc_stats
pad	include/openflow/openflow-1.5.h	/^    uint8_t pad;                  \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_mod
pad	include/openflow/openflow-1.5.h	/^    uint8_t pad[4];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp15_group_desc_request
pad	include/openflow/openflow-1.5.h	/^    uint8_t pad[4];            \/* Align to 64 bits. *\/$/;"	m	struct:ofp15_port_desc_request
pad	include/openflow/openflow-common.h	/^    uint8_t pad[2];         \/* Align to 64-bits. *\/$/;"	m	struct:ofp_switch_features
pad	include/openflow/openflow-common.h	/^    uint8_t pad[4];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp_aggregate_stats_reply
pad	include/openflow/openflow-common.h	/^    uint8_t pad[4];    \/* 64-bit alignemnt. *\/$/;"	m	struct:ofp_queue_prop_header
pad	include/openflow/openflow-common.h	/^    uint8_t pad[6];       \/* 64-bit alignment *\/$/;"	m	struct:ofp_queue_prop_rate
pad	include/openflow/openflow-common.h	/^    uint8_t pad[7];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp_port_status
pad	lib/cmap.c	/^    uint8_t pad[CACHE_LINE_SIZE - sizeof(unsigned int) * 5];$/;"	m	struct:cmap_impl	file:
pad	lib/cmap.c	/^    uint8_t pad[CMAP_PADDING];$/;"	m	struct:cmap_bucket	file:
pad	lib/netflow.h	/^    uint8_t  pad[2];$/;"	m	struct:netflow_v5_record
pad	lib/ofp-actions.c	/^    ovs_be16 pad;               \/* Must be zero. *\/$/;"	m	struct:nx_action_fin_timeout	file:
pad	lib/ofp-actions.c	/^    uint8_t pad;                \/* Must be zero. *\/$/;"	m	struct:nx_action_learn	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[10];$/;"	m	struct:nx_action_output_reg2	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[12];                \/* See above. *\/$/;"	m	struct:nx_action_stack	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[2];             \/* Not used. *\/$/;"	m	struct:onf_action_copy_field	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[2];$/;"	m	struct:ofp15_action_copy_field	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[3];             \/* Zeroes *\/$/;"	m	struct:nx_action_conntrack	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[3];$/;"	m	struct:nx_action_resubmit	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[4];$/;"	m	struct:ofp12_action_set_field	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[6];                   \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_action_output	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[6];           \/* Pad for 64-bit alignment. *\/$/;"	m	struct:ofp10_action_enqueue	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[6];$/;"	m	struct:ext_action_header	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[6];$/;"	m	struct:nx_action_reg_load2	file:
pad	lib/ofp-actions.c	/^    uint8_t pad[6];$/;"	m	struct:ofp_action_dl_addr	file:
pad	lib/ofp-actions.h	/^        uint8_t pad[OFPACT_ALIGN(sizeof(CT_MEMBERS))];$/;"	m	union:ofpact_conntrack::__anon129
pad	lib/ofp-actions.h	/^    uint8_t pad[PAD_SIZE(sizeof(struct ofpact), OFPACT_ALIGNTO)];$/;"	m	struct:ofpact_nest
pad	lib/tun-metadata.h	/^    uint8_t pad[4];             \/* Pad to 64-bit boundary. *\/$/;"	m	struct:tun_metadata
pad0	datapath/linux/compat/include/linux/openvswitch.h	/^	__u32 pad0;		 \/* Pad for future expension. *\/$/;"	m	struct:ovs_dp_megaflow_stats
pad0	include/odp-netlink.h	/^	uint32_t pad0;		 \/* Pad for future expension. *\/$/;"	m	struct:ovs_dp_megaflow_stats
pad0	lib/ofp-actions.c	/^    ovs_be16 pad0;$/;"	m	struct:nx_action_multipath	file:
pad1	datapath-windows/ovsext/Datapath.c	/^    UINT8 pad1;$/;"	m	struct:_NETLINK_FAMILY	file:
pad1	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 pad1;		 \/* Pad for future expension. *\/$/;"	m	struct:ovs_dp_megaflow_stats
pad1	include/odp-netlink.h	/^	ovs_32aligned_u64 pad1;		 \/* Pad for future expension. *\/$/;"	m	struct:ovs_dp_megaflow_stats
pad1	include/openflow/openflow-1.0.h	/^    uint8_t pad1[1];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_match
pad1	include/openflow/openflow-1.1.h	/^    uint8_t pad1[1];           \/* Align to 32-bits *\/$/;"	m	struct:ofp11_match
pad1	include/openflow/openflow-1.5.h	/^    uint8_t pad1[2];              \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_mod
pad1	lib/flow.h	/^    uint8_t pad1[4];            \/* Pad to 64 bits. *\/$/;"	m	struct:flow
pad1	lib/netflow.h	/^    uint8_t  pad1;$/;"	m	struct:netflow_v5_record
pad1	lib/ofp-actions.c	/^    ovs_be16 pad1;$/;"	m	struct:nx_action_multipath	file:
pad1	lib/packets.h	/^    uint8_t  pad1[5];        \/* Pad to 64 bits. *\/$/;"	m	struct:flow_tnl
pad1	lib/sflow.h	/^    u_int8_t pad1[2];           \/* 2 pad *\/$/;"	m	struct:_SFLSampled_ethernet
pad1	lib/sflow.h	/^    uint8_t pad1[2];$/;"	m	struct:_SFLLACP_counters
pad2	datapath-windows/ovsext/Datapath.c	/^    UINT16 pad2;$/;"	m	struct:_NETLINK_FAMILY	file:
pad2	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64 pad2;		 \/* Pad for future expension. *\/$/;"	m	struct:ovs_dp_megaflow_stats
pad2	include/odp-netlink.h	/^	ovs_32aligned_u64 pad2;		 \/* Pad for future expension. *\/$/;"	m	struct:ovs_dp_megaflow_stats
pad2	include/openflow/openflow-1.0.h	/^    uint8_t pad2[2];           \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_match
pad2	include/openflow/openflow-1.0.h	/^    uint8_t pad2[2];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp10_flow_removed
pad2	include/openflow/openflow-1.0.h	/^    uint8_t pad2[6];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp10_flow_stats
pad2	include/openflow/openflow-1.1.h	/^    uint8_t  pad2[2];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_flow_stats
pad2	include/openflow/openflow-1.1.h	/^    uint8_t pad2[2];                  \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_port
pad2	include/openflow/openflow-1.1.h	/^    uint8_t pad2[2];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp11_flow_removed
pad2	include/openflow/openflow-1.1.h	/^    uint8_t pad2[2];        \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_port_mod
pad2	include/openflow/openflow-1.1.h	/^    uint8_t pad2[3];           \/* Align to 64-bits *\/$/;"	m	struct:ofp11_match
pad2	include/openflow/openflow-1.1.h	/^    uint8_t pad2[4];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_group_stats
pad2	include/openflow/openflow-1.1.h	/^    uint8_t pad2[4];          \/* Align to 64 bits. *\/$/;"	m	struct:ofp11_flow_stats_request
pad2	include/openflow/openflow-1.4.h	/^    uint8_t pad2[2];                  \/* Align to 64 bits. *\/$/;"	m	struct:ofp14_port
pad2	include/openflow/openflow-1.4.h	/^    uint8_t pad2[2];$/;"	m	struct:ofp14_port_mod
pad2	include/openflow/openflow-1.5.h	/^    uint8_t pad2[6];              \/* Pad to 64 bits. *\/$/;"	m	struct:ofp15_group_desc_stats
pad2	lib/flow.h	/^    uint8_t pad2[2];            \/* Pad to 64 bits. *\/$/;"	m	struct:flow
pad2	lib/ofp-actions.c	/^    uint8_t pad2[2];            \/* Not used. *\/$/;"	m	struct:onf_action_copy_field	file:
pad2	lib/ofp-actions.c	/^    uint8_t pad2[4];$/;"	m	struct:ofp15_action_copy_field	file:
pad2	lib/sflow.h	/^    u_int8_t pad2[2];$/;"	m	struct:_SFLSampled_ethernet
pad2	lib/sflow.h	/^    uint8_t pad2[2];$/;"	m	struct:_SFLLACP_counters
pad3	include/openflow/openflow-1.1.h	/^    uint8_t pad3[4];        \/* Pad to 64 bits. *\/$/;"	m	struct:ofp11_port_mod
pad3	lib/flow.h	/^    ovs_be16 pad3;              \/* Pad to 64 bits. *\/$/;"	m	struct:flow
pad3	lib/ofp-actions.c	/^    uint8_t pad3[4];            \/* Not used. *\/$/;"	m	struct:onf_action_copy_field	file:
pad_ofpat	lib/ofp-actions.c	/^pad_ofpat(struct ofpbuf *openflow, size_t start_ofs)$/;"	f	file:
padding	datapath/linux/compat/include/linux/flex_array.h	/^		char padding[FLEX_ARRAY_BASE_SIZE];$/;"	m	union:flex_array::__anon42
pairs	ofproto/ofproto.h	/^    struct smap pairs;$/;"	m	struct:ofproto_controller_info	typeref:struct:ofproto_controller_info::smap
parallel_ops	datapath/linux/compat/include/net/genetlink.h	/^	bool                    parallel_ops;$/;"	m	struct:rpl_genl_family
params	lib/jsonrpc.h	/^    struct json *params;        \/* Request or notification only. *\/$/;"	m	struct:jsonrpc_msg	typeref:struct:jsonrpc_msg::json
parent	lib/syslog-direct.c	/^    struct syslogger parent;$/;"	m	struct:syslog_direct	typeref:struct:syslog_direct::syslogger	file:
parent	lib/syslog-libc.c	/^    struct syslogger parent;$/;"	m	struct:syslog_libc	typeref:struct:syslog_libc::syslogger	file:
parent	utilities/ovs-vsctl.c	/^    struct vsctl_bridge *parent; \/* Real bridge, or NULL. *\/$/;"	m	struct:vsctl_bridge	typeref:struct:vsctl_bridge::vsctl_bridge	file:
parent_name	ovn/lib/ovn-nb-idl.h	/^	char *parent_name;$/;"	m	struct:nbrec_logical_port
parent_port	ovn/lib/ovn-sb-idl.h	/^	char *parent_port;$/;"	m	struct:sbrec_port_binding
parse	lib/netlink-notifier.c	/^    nln_parse_func *parse;       \/* Message parsing function. *\/$/;"	m	struct:nln	file:
parse	lib/ovsdb-idl-provider.h	/^    void (*parse)(struct ovsdb_idl_row *, const struct ovsdb_datum *);$/;"	m	struct:ovsdb_idl_column
parse	utilities/bugtool/ovs-bugtool	/^from xml.dom.minidom import parse, getDOMImplementation$/;"	i
parseSchema	ovsdb/ovsdb-idlc	/^def parseSchema(filename):$/;"	f
parseStruct	build-aux/check-structs	/^def parseStruct():$/;"	f
parseTaggedName	build-aux/check-structs	/^def parseTaggedName():$/;"	f
parseTaggedName	build-aux/extract-ofp-errors	/^def parseTaggedName():$/;"	f
parseTypeName	build-aux/check-structs	/^def parseTypeName():$/;"	f
parseXML	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^from xml.dom.minidom import parse as parseXML$/;"	i
parse_8021q_onward	lib/odp-util.c	/^parse_8021q_onward(const struct nlattr *attrs[OVS_KEY_ATTR_MAX + 1],$/;"	f	file:
parse_BUNDLE	lib/ofp-actions.c	/^parse_BUNDLE(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_CLEAR_ACTIONS	lib/ofp-actions.c	/^parse_CLEAR_ACTIONS(char *arg OVS_UNUSED, struct ofpbuf *ofpacts,$/;"	f	file:
parse_CONJUNCTION	lib/ofp-actions.c	/^parse_CONJUNCTION(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_CONTROLLER	lib/ofp-actions.c	/^parse_CONTROLLER(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_CT	lib/ofp-actions.c	/^parse_CT(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_DEBUG_RECIRC	lib/ofp-actions.c	/^parse_DEBUG_RECIRC(char *arg OVS_UNUSED, struct ofpbuf *ofpacts,$/;"	f	file:
parse_DEC_MPLS_TTL	lib/ofp-actions.c	/^parse_DEC_MPLS_TTL(char *arg OVS_UNUSED, struct ofpbuf *ofpacts,$/;"	f	file:
parse_DEC_TTL	lib/ofp-actions.c	/^parse_DEC_TTL(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_ENQUEUE	lib/ofp-actions.c	/^parse_ENQUEUE(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_EXIT	lib/ofp-actions.c	/^parse_EXIT(char *arg OVS_UNUSED, struct ofpbuf *ofpacts,$/;"	f	file:
parse_FIN_TIMEOUT	lib/ofp-actions.c	/^parse_FIN_TIMEOUT(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_GOTO_TABLE	lib/ofp-actions.c	/^parse_GOTO_TABLE(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_GROUP	lib/ofp-actions.c	/^parse_GROUP(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_LEARN	lib/ofp-actions.c	/^parse_LEARN(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_METER	lib/ofp-actions.c	/^parse_METER(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_MULTIPATH	lib/ofp-actions.c	/^parse_MULTIPATH(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_NOTE	lib/ofp-actions.c	/^parse_NOTE(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_OUTPUT	lib/ofp-actions.c	/^parse_OUTPUT(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_OUTPUT_REG	lib/ofp-actions.c	/^parse_OUTPUT_REG(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_POP_MPLS	lib/ofp-actions.c	/^parse_POP_MPLS(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_POP_QUEUE	lib/ofp-actions.c	/^parse_POP_QUEUE(const char *arg OVS_UNUSED, struct ofpbuf *ofpacts,$/;"	f	file:
parse_PUSH_MPLS	lib/ofp-actions.c	/^parse_PUSH_MPLS(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_PUSH_VLAN	lib/ofp-actions.c	/^parse_PUSH_VLAN(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_REG_MOVE	lib/ofp-actions.c	/^parse_REG_MOVE(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_RESUBMIT	lib/ofp-actions.c	/^parse_RESUBMIT(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SAMPLE	lib/ofp-actions.c	/^parse_SAMPLE(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_ETH_DST	lib/ofp-actions.c	/^parse_SET_ETH_DST(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_ETH_SRC	lib/ofp-actions.c	/^parse_SET_ETH_SRC(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_FIELD	lib/ofp-actions.c	/^parse_SET_FIELD(const char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_ICMP_ID	lib/ofp-actions.c	/^parse_SET_ICMP_ID(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_IPV4_DST	lib/ofp-actions.c	/^parse_SET_IPV4_DST(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_IPV4_SRC	lib/ofp-actions.c	/^parse_SET_IPV4_SRC(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_IP_DSCP	lib/ofp-actions.c	/^parse_SET_IP_DSCP(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_IP_ECN	lib/ofp-actions.c	/^parse_SET_IP_ECN(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_IP_TTL	lib/ofp-actions.c	/^parse_SET_IP_TTL(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_L4_DST_PORT	lib/ofp-actions.c	/^parse_SET_L4_DST_PORT(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_L4_SRC_PORT	lib/ofp-actions.c	/^parse_SET_L4_SRC_PORT(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_MPLS_LABEL	lib/ofp-actions.c	/^parse_SET_MPLS_LABEL(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_MPLS_TC	lib/ofp-actions.c	/^parse_SET_MPLS_TC(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_MPLS_TTL	lib/ofp-actions.c	/^parse_SET_MPLS_TTL(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_QUEUE	lib/ofp-actions.c	/^parse_SET_QUEUE(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_TUNNEL	lib/ofp-actions.c	/^parse_SET_TUNNEL(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_VLAN_PCP	lib/ofp-actions.c	/^parse_SET_VLAN_PCP(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_SET_VLAN_VID	lib/ofp-actions.c	/^parse_SET_VLAN_VID(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_STACK_POP	lib/ofp-actions.c	/^parse_STACK_POP(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_STACK_PUSH	lib/ofp-actions.c	/^parse_STACK_PUSH(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_STRIP_VLAN	lib/ofp-actions.c	/^parse_STRIP_VLAN(char *arg OVS_UNUSED, struct ofpbuf *ofpacts,$/;"	f	file:
parse_UNROLL_XLATE	lib/ofp-actions.c	/^parse_UNROLL_XLATE(char *arg OVS_UNUSED, struct ofpbuf *ofpacts OVS_UNUSED,$/;"	f	file:
parse_WRITE_ACTIONS	lib/ofp-actions.c	/^parse_WRITE_ACTIONS(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_WRITE_METADATA	lib/ofp-actions.c	/^parse_WRITE_METADATA(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_action_bitmap	lib/ofp-util.c	/^parse_action_bitmap(struct ofpbuf *payload, enum ofp_version ofp_version,$/;"	f	file:
parse_actions	ovn/lib/actions.c	/^parse_actions(struct action_context *ctx)$/;"	f	file:
parse_actions	tests/test-odp.c	/^parse_actions(void)$/;"	f	file:
parse_age	utilities/ovs-pki	/^parse_age() {$/;"	f
parse_age	utilities/ovs-pki.in	/^parse_age() {$/;"	f
parse_and_annotate	ovn/lib/expr.c	/^parse_and_annotate(const char *s, const struct shash *symtab,$/;"	f	file:
parse_and_compgen	utilities/ovs-appctl-bashcomp.bash	/^parse_and_compgen() {$/;"	f
parse_app_args	tests/dpdk/ring_client.c	/^parse_app_args(int argc, char *argv[])$/;"	f	file:
parse_assignment	ovn/lib/expr.c	/^parse_assignment(struct expr_context *ctx, const struct simap *ports,$/;"	f	file:
parse_atom_token	lib/ovsdb-data.c	/^parse_atom_token(const char **s, const struct ovsdb_base_type *base,$/;"	f	file:
parse_body	ovsdb/log.c	/^parse_body(struct ovsdb_log *file, off_t offset, unsigned long int length,$/;"	f	file:
parse_bool	ovsdb/jsonrpc-server.c	/^parse_bool(struct ovsdb_parser *parser, const char *name, bool default_value)$/;"	f	file:
parse_bracketed_token	lib/socket-util.c	/^parse_bracketed_token(char **pp)$/;"	f	file:
parse_bucket_str	lib/ofp-parse.c	/^parse_bucket_str(struct ofputil_bucket *bucket, char *str_, uint8_t group_type,$/;"	f	file:
parse_bundle_actions	tests/test-bundle.c	/^parse_bundle_actions(char *actions)$/;"	f	file:
parse_bundle_load	lib/ofp-actions.c	/^parse_bundle_load(const char *arg, struct ofpbuf *ofpacts)$/;"	f	file:
parse_client_num	tests/dpdk/ring_client.c	/^parse_client_num(const char *client)$/;"	f	file:
parse_column_key_value	lib/db-ctl-base.c	/^parse_column_key_value(const char *arg,$/;"	f	file:
parse_column_names	lib/db-ctl-base.c	/^parse_column_names(const char *column_names,$/;"	f	file:
parse_command	lib/db-ctl-base.c	/^parse_command(int argc, char *argv[], struct shash *local_options,$/;"	f	file:
parse_command_line	utilities/ovs-appctl.c	/^parse_command_line(int argc, char *argv[])$/;"	f	file:
parse_conntrack_action	lib/odp-util.c	/^parse_conntrack_action(const char *s_, struct ofpbuf *actions)$/;"	f	file:
parse_constant	ovn/lib/expr.c	/^parse_constant(struct expr_context *ctx, struct expr_constant_set *cs,$/;"	f	file:
parse_constant_set	ovn/lib/expr.c	/^parse_constant_set(struct expr_context *ctx, struct expr_constant_set *cs)$/;"	f	file:
parse_controller	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^    def parse_controller(controller):$/;"	f	function:vswitchCurrentControllers
parse_cpuinfo	lib/ovs-thread.c	/^parse_cpuinfo(long int *n_cores)$/;"	f	file:
parse_db_column	ovsdb/ovsdb-server.c	/^parse_db_column(const struct shash *all_dbs,$/;"	f	file:
parse_db_column__	ovsdb/ovsdb-server.c	/^parse_db_column__(const struct shash *all_dbs,$/;"	f	file:
parse_db_string_column	ovsdb/ovsdb-server.c	/^parse_db_string_column(const struct shash *all_dbs,$/;"	f	file:
parse_ethertype	datapath/flow.c	/^static __be16 parse_ethertype(struct sk_buff *skb)$/;"	f	file:
parse_ethertype	datapath/linux/flow.c	/^static __be16 parse_ethertype(struct sk_buff *skb)$/;"	f	file:
parse_ethertype	lib/flow.c	/^parse_ethertype(const void **datap, size_t *sizep)$/;"	f	file:
parse_ethertype	lib/odp-util.c	/^parse_ethertype(const struct nlattr *attrs[OVS_KEY_ATTR_MAX + 1],$/;"	f	file:
parse_field	build-aux/extract-ofp-fields	/^def parse_field(mff, comment):$/;"	f
parse_field	lib/ofp-parse.c	/^parse_field(const struct mf_field *mf, const char *s, struct match *match,$/;"	f	file:
parse_field	ovn/lib/expr.c	/^parse_field(struct expr_context *ctx, struct expr_field *f)$/;"	f	file:
parse_field_from_string	ovn/lib/expr.c	/^parse_field_from_string(const char *s, const struct shash *symtab,$/;"	f	file:
parse_filter	tests/test-odp.c	/^parse_filter(char *filter_parse)$/;"	f	file:
parse_flags	lib/flow.c	/^parse_flags(const char *s, const char *(*bit_to_string)(uint32_t),$/;"	f
parse_flow_and_packet	ofproto/ofproto-dpif.c	/^parse_flow_and_packet(int argc, const char *argv[],$/;"	f	file:
parse_flow_mask_nlattrs	datapath/flow_netlink.c	/^static int parse_flow_mask_nlattrs(const struct nlattr *attr,$/;"	f	file:
parse_flow_mask_nlattrs	datapath/linux/flow_netlink.c	/^static int parse_flow_mask_nlattrs(const struct nlattr *attr,$/;"	f	file:
parse_flow_monitor_request	lib/ofp-parse.c	/^parse_flow_monitor_request(struct ofputil_flow_monitor_request *fmr,$/;"	f
parse_flow_monitor_request__	lib/ofp-parse.c	/^parse_flow_monitor_request__(struct ofputil_flow_monitor_request *fmr,$/;"	f	file:
parse_flow_nlattrs	datapath/flow_netlink.c	/^static int parse_flow_nlattrs(const struct nlattr *attr,$/;"	f	file:
parse_flow_nlattrs	datapath/linux/flow_netlink.c	/^static int parse_flow_nlattrs(const struct nlattr *attr,$/;"	f	file:
parse_flow_nlattrs	lib/odp-util.c	/^parse_flow_nlattrs(const struct nlattr *key, size_t key_len,$/;"	f	file:
parse_gre_header	datapath/linux/compat/gre.c	/^static int parse_gre_header(struct sk_buff *skb, struct tnl_ptk_info *tpi,$/;"	f	file:
parse_gre_header	datapath/linux/gre.c	/^static int parse_gre_header(struct sk_buff *skb, struct tnl_ptk_info *tpi,$/;"	f	file:
parse_gre_header	lib/netdev-vport.c	/^parse_gre_header(struct dp_packet *packet,$/;"	f	file:
parse_group_prop_ntr	lib/ofp-util.c	/^parse_group_prop_ntr(struct ofpbuf *payload, uint32_t exp_type,$/;"	f	file:
parse_group_prop_ntr_selection_method	lib/ofp-util.c	/^parse_group_prop_ntr_selection_method(struct ofpbuf *payload,$/;"	f	file:
parse_header	ovsdb/log.c	/^parse_header(char *header, unsigned long int *length,$/;"	f	file:
parse_icmpv6	datapath/flow.c	/^static int parse_icmpv6(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
parse_icmpv6	datapath/linux/flow.c	/^static int parse_icmpv6(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
parse_icmpv6	lib/flow.c	/^parse_icmpv6(const void **datap, size_t *sizep, const struct icmp6_hdr *icmp,$/;"	f	file:
parse_if_inet6_line	lib/netdev-linux.c	/^parse_if_inet6_line(const char *line,$/;"	f	file:
parse_instruction_ids	lib/ofp-util.c	/^parse_instruction_ids(struct ofpbuf *payload, bool loose, uint32_t *insts)$/;"	f	file:
parse_int_string	lib/util.c	/^parse_int_string(const char *s, uint8_t *valuep, int field_width, char **tail)$/;"	f
parse_ipv6_l4_proto	datapath/linux/compat/stt.c	/^static u8 parse_ipv6_l4_proto(struct sk_buff *skb)$/;"	f	file:
parse_ipv6_l4_proto	datapath/linux/stt.c	/^static u8 parse_ipv6_l4_proto(struct sk_buff *skb)$/;"	f	file:
parse_ipv6hdr	datapath/flow.c	/^static int parse_ipv6hdr(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
parse_ipv6hdr	datapath/linux/flow.c	/^static int parse_ipv6hdr(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
parse_json	ovsdb/ovsdb-client.c	/^parse_json(const char *s)$/;"	f	file:
parse_json	ovsdb/ovsdb-tool.c	/^parse_json(const char *s)$/;"	f	file:
parse_json	tests/test-jsonrpc.c	/^parse_json(const char *s)$/;"	f	file:
parse_json	tests/test-ovsdb.c	/^parse_json(const char *s)$/;"	f	file:
parse_json_pair	lib/ovsdb-data.c	/^parse_json_pair(const struct json *json,$/;"	f	file:
parse_json_pair	python/ovs/db/parser.py	/^def parse_json_pair(json):$/;"	f
parse_key	lib/netdev-vport.c	/^parse_key(const struct smap *args, const char *name,$/;"	f	file:
parse_key_value	lib/ovsdb-data.c	/^parse_key_value(const char **s, const struct ovsdb_type *type,$/;"	f	file:
parse_keys	tests/test-odp.c	/^parse_keys(bool wc_keys)$/;"	f	file:
parse_l2_5_onward	lib/odp-util.c	/^parse_l2_5_onward(const struct nlattr *attrs[OVS_KEY_ATTR_MAX + 1],$/;"	f	file:
parse_lacp_packet	lib/lacp.c	/^parse_lacp_packet(const struct dp_packet *p)$/;"	f	file:
parse_listening_port	tests/system-kmod-testsuite	/^parse_listening_port () {$/;"	f
parse_listening_port	tests/system-userspace-testsuite	/^parse_listening_port () {$/;"	f
parse_listening_port	tests/testsuite	/^parse_listening_port () {$/;"	f
parse_mf_flags	lib/meta-flow.c	/^parse_mf_flags(const char *s, const char *(*bit_to_string)(uint32_t),$/;"	f	file:
parse_monitor_columns	ovsdb/ovsdb-client.c	/^parse_monitor_columns(char *arg, const char *server, const char *database,$/;"	f	file:
parse_mpls	lib/flow.c	/^parse_mpls(const void **datap, size_t *sizep)$/;"	f	file:
parse_multiple	tests/test-json.c	/^parse_multiple(FILE *stream)$/;"	f	file:
parse_multiple	tests/test-json.py	/^def parse_multiple(stream):$/;"	f
parse_next_action	ovn/lib/actions.c	/^parse_next_action(struct action_context *ctx)$/;"	f	file:
parse_noargs_dec_ttl	lib/ofp-actions.c	/^parse_noargs_dec_ttl(struct ofpbuf *ofpacts)$/;"	f	file:
parse_nxm_field_name	lib/nx-match.c	/^parse_nxm_field_name(const char *name, int name_len)$/;"	f	file:
parse_odp_action	lib/odp-util.c	/^parse_odp_action(const char *s, const struct simap *port_names,$/;"	f	file:
parse_odp_flags	lib/odp-util.c	/^parse_odp_flags(const char *s, const char *(*bit_to_string)(uint32_t),$/;"	f	file:
parse_odp_key_mask_attr	lib/odp-util.c	/^parse_odp_key_mask_attr(const char *s, const struct simap *port_names,$/;"	f	file:
parse_odp_packet	lib/dpif-netlink.c	/^parse_odp_packet(const struct dpif_netlink *dpif, struct ofpbuf *buf,$/;"	f	file:
parse_odp_userspace_action	lib/odp-util.c	/^parse_odp_userspace_action(const char *s, struct ofpbuf *actions)$/;"	f	file:
parse_ofp14_port_ethernet_property	lib/ofp-util.c	/^parse_ofp14_port_ethernet_property(const struct ofpbuf *payload,$/;"	f	file:
parse_ofp14_port_stats_ethernet_property	lib/ofp-util.c	/^parse_ofp14_port_stats_ethernet_property(const struct ofpbuf *payload,$/;"	f	file:
parse_ofp15_group_bucket_prop_watch	lib/ofp-util.c	/^parse_ofp15_group_bucket_prop_watch(const struct ofpbuf *payload,$/;"	f	file:
parse_ofp15_group_bucket_prop_weight	lib/ofp-util.c	/^parse_ofp15_group_bucket_prop_weight(const struct ofpbuf *payload,$/;"	f	file:
parse_ofp15_group_prop_exp	lib/ofp-util.c	/^parse_ofp15_group_prop_exp(struct ofpbuf *payload,$/;"	f	file:
parse_ofp15_group_properties	lib/ofp-util.c	/^parse_ofp15_group_properties(struct ofpbuf *msg,$/;"	f	file:
parse_ofp_exact_flow	lib/ofp-parse.c	/^parse_ofp_exact_flow(struct flow *flow, struct flow *mask, const char *s,$/;"	f
parse_ofp_flow_mod_file	lib/ofp-parse.c	/^parse_ofp_flow_mod_file(const char *file_name, int command,$/;"	f
parse_ofp_flow_mod_str	lib/ofp-parse.c	/^parse_ofp_flow_mod_str(struct ofputil_flow_mod *fm, const char *string,$/;"	f
parse_ofp_flow_stats_request_str	lib/ofp-parse.c	/^parse_ofp_flow_stats_request_str(struct ofputil_flow_stats_request *fsr,$/;"	f
parse_ofp_geneve_table_mod_str	lib/ofp-parse.c	/^parse_ofp_geneve_table_mod_str(struct ofputil_geneve_table_mod *gtm,$/;"	f
parse_ofp_group_mod_file	lib/ofp-parse.c	/^parse_ofp_group_mod_file(const char *file_name, uint16_t command,$/;"	f
parse_ofp_group_mod_str	lib/ofp-parse.c	/^parse_ofp_group_mod_str(struct ofputil_group_mod *gm, uint16_t command,$/;"	f
parse_ofp_group_mod_str__	lib/ofp-parse.c	/^parse_ofp_group_mod_str__(struct ofputil_group_mod *gm, uint16_t command,$/;"	f	file:
parse_ofp_meter_mod_str	lib/ofp-parse.c	/^parse_ofp_meter_mod_str(struct ofputil_meter_mod *mm, const char *str_,$/;"	f
parse_ofp_meter_mod_str__	lib/ofp-parse.c	/^parse_ofp_meter_mod_str__(struct ofputil_meter_mod *mm, char *string,$/;"	f	file:
parse_ofp_str	lib/ofp-parse.c	/^parse_ofp_str(struct ofputil_flow_mod *fm, int command, const char *str_,$/;"	f
parse_ofp_str__	lib/ofp-parse.c	/^parse_ofp_str__(struct ofputil_flow_mod *fm, int command, char *string,$/;"	f	file:
parse_ofp_table_mod	lib/ofp-parse.c	/^parse_ofp_table_mod(struct ofputil_table_mod *tm, const char *table_id,$/;"	f
parse_option	datapath/actions.c	/^static void parse_option(u8 *options, u8 opt, int *offset, __be32 addr, int type)$/;"	f	file:
parse_option	datapath/linux/actions.c	/^static void parse_option(u8 *options, u8 opt, int *offset, __be32 addr, int type)$/;"	f	file:
parse_optional_uint	lib/ovsdb-types.c	/^parse_optional_uint(struct ovsdb_parser *parser, const char *member,$/;"	f	file:
parse_options	ovn/controller-vtep/ovn-controller-vtep.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	ovn/controller/ovn-controller.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	ovn/northd/ovn-northd.c	/^parse_options(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
parse_options	ovn/utilities/ovn-nbctl.c	/^parse_options(int argc, char *argv[], struct shash *local_options)$/;"	f	file:
parse_options	ovn/utilities/ovn-sbctl.c	/^parse_options(int argc, char *argv[], struct shash *local_options)$/;"	f	file:
parse_options	ovsdb/ovsdb-client.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	ovsdb/ovsdb-server.c	/^parse_options(int *argcp, char **argvp[],$/;"	f	file:
parse_options	ovsdb/ovsdb-tool.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	tests/test-jsonrpc.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	tests/test-lib.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	tests/test-netflow.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	tests/test-ovsdb.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	tests/test-sflow.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	tests/test-util.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	utilities/ovs-benchmark.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	utilities/ovs-dpctl.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	utilities/ovs-ofctl.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	utilities/ovs-testcontroller.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	utilities/ovs-vlan-bug-workaround.c	/^parse_options(int argc, char *argv[])$/;"	f	file:
parse_options	utilities/ovs-vsctl.c	/^parse_options(int argc, char *argv[], struct shash *local_options)$/;"	f	file:
parse_options	vswitchd/ovs-vswitchd.c	/^parse_options(int argc, char *argv[], char **unixctl_pathp)$/;"	f	file:
parse_options	vtep/vtep-ctl.c	/^parse_options(int argc, char *argv[], struct shash *local_options)$/;"	f	file:
parse_oxm	build-aux/extract-ofp-fields	/^def parse_oxm(s, prefix, n_bytes):$/;"	f
parse_oxms	build-aux/extract-ofp-fields	/^def parse_oxms(s, prefix, n_bytes):$/;"	f
parse_oxms	lib/ofp-util.c	/^parse_oxms(struct ofpbuf *payload, bool loose,$/;"	f	file:
parse_pop_vlan	lib/ofp-actions.c	/^parse_pop_vlan(struct ofpbuf *ofpacts)$/;"	f	file:
parse_port_mod_ethernet_property	lib/ofp-util.c	/^parse_port_mod_ethernet_property(struct ofpbuf *property,$/;"	f	file:
parse_protocol	lib/ofp-parse.c	/^parse_protocol(const char *name, const struct protocol **p_out)$/;"	f	file:
parse_queue_rate	lib/ofp-util.c	/^parse_queue_rate(const struct ofp_queue_prop_header *hdr, uint16_t *rate)$/;"	f	file:
parse_reg_load	lib/ofp-actions.c	/^parse_reg_load(char *arg, struct ofpbuf *ofpacts)$/;"	f	file:
parse_relop	ovn/lib/expr.c	/^parse_relop(struct expr_context *ctx, enum expr_relop *relop)$/;"	f	file:
parse_relops	tests/test-ovn.c	/^parse_relops(const char *s)$/;"	f	file:
parse_row	ovsdb/execution.c	/^parse_row(const struct json *json, const struct ovsdb_table *table,$/;"	f	file:
parse_scanset	lib/util.c	/^parse_scanset(const char *p_, unsigned long *set, bool *complemented)$/;"	f	file:
parse_schema	lib/ovsdb-idl.c	/^parse_schema(const struct json *schema_json)$/;"	f	file:
parse_select_group_field	lib/ofp-parse.c	/^parse_select_group_field(char *s, struct field_array *fa,$/;"	f	file:
parse_set_action	ovn/lib/actions.c	/^parse_set_action(struct action_context *ctx)$/;"	f	file:
parse_set_tunnel	lib/ofp-actions.c	/^parse_set_tunnel(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
parse_set_vlan_pcp	lib/ofp-actions.c	/^parse_set_vlan_pcp(char *arg, struct ofpbuf *ofpacts, bool push_vlan_if_needed)$/;"	f	file:
parse_set_vlan_vid	lib/ofp-actions.c	/^parse_set_vlan_vid(char *arg, struct ofpbuf *ofpacts, bool push_vlan_if_needed)$/;"	f	file:
parse_sockaddr_components	lib/socket-util.c	/^parse_sockaddr_components(struct sockaddr_storage *ss,$/;"	f	file:
parse_state	lib/json.c	/^    enum json_parse_state parse_state;$/;"	m	struct:json_parser	typeref:enum:json_parser::json_parse_state	file:
parse_subargs	utilities/ovs-dev.py	/^def parse_subargs(option, opt_str, value, parser):$/;"	f
parse_table	ovsdb/execution.c	/^parse_table(struct ovsdb_execution *x,$/;"	f	file:
parse_table_desc_eviction_property	lib/ofp-util.c	/^parse_table_desc_eviction_property(struct ofpbuf *property,$/;"	f	file:
parse_table_features_next_table	lib/ofp-util.c	/^parse_table_features_next_table(struct ofpbuf *payload,$/;"	f	file:
parse_table_mod_eviction_property	lib/ofp-util.c	/^parse_table_mod_eviction_property(struct ofpbuf *property,$/;"	f	file:
parse_target	utilities/ovs-benchmark.c	/^parse_target(const char *s_, struct in_addr *addr,$/;"	f	file:
parse_uuids	tests/test-ovsdb.c	/^parse_uuids(const struct json *json, struct ovsdb_symbol_table *symtab,$/;"	f	file:
parse_uuids	tests/test-ovsdb.py	/^def parse_uuids(json, symtab):$/;"	f
parse_vlan	datapath/flow.c	/^static int parse_vlan(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
parse_vlan	datapath/linux/flow.c	/^static int parse_vlan(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
parse_vlan	lib/flow.c	/^parse_vlan(const void **datap, size_t *sizep)$/;"	f	file:
parsed_dpif_open	lib/dpctl.c	/^parsed_dpif_open(const char *arg_, bool create, struct dpif **dpifp)$/;"	f	file:
parser	lib/jsonrpc.c	/^    struct json_parser *parser;$/;"	m	struct:jsonrpc	typeref:struct:jsonrpc::json_parser	file:
parser	python/ovs/db/data.py	/^import ovs.db.parser$/;"	i
parser	python/ovs/db/idl.py	/^import ovs.db.parser$/;"	i
parser	python/ovs/db/schema.py	/^import ovs.db.parser$/;"	i
parser	python/ovs/db/types.py	/^import ovs.db.parser$/;"	i
parser	python/ovs/ovsuuid.py	/^import ovs.db.parser$/;"	i
parser	utilities/ovs-dev.py	/^parser = None$/;"	v
part_is_free	datapath/linux/compat/flex_array.c	/^static int part_is_free(struct flex_array_part *part)$/;"	f	file:
part_is_free	datapath/linux/flex_array.c	/^static int part_is_free(struct flex_array_part *part)$/;"	f	file:
partition	lib/sort.c	/^partition(size_t p, size_t r,$/;"	f	file:
partition_re	utilities/bugtool/ovs-bugtool	/^partition_re = re.compile(r'(.*[0-9]+$)|(^xvd)')$/;"	v
partitions	lib/classifier.h	/^    struct cmap partitions;         \/* Contains "struct cls_partition"s. *\/$/;"	m	struct:classifier	typeref:struct:classifier::cmap
partner	lib/lacp.c	/^    struct lacp_info partner;     \/* Partner information. *\/$/;"	m	struct:slave	typeref:struct:slave::lacp_info	file:
partner	lib/lacp.c	/^    struct lacp_info partner; \/* LACP partner information. *\/$/;"	m	struct:lacp_pdu	typeref:struct:lacp_pdu::lacp_info	file:
partnerAdmin	lib/sflow.h	/^	uint8_t partnerAdmin;$/;"	m	struct:_SFLLACP_portState::__anon158
partnerOper	lib/sflow.h	/^	uint8_t partnerOper;$/;"	m	struct:_SFLLACP_portState::__anon158
partnerSystemID	lib/sflow.h	/^    struct eth_addr partnerSystemID; \/* 6 bytes *\/$/;"	m	struct:_SFLLACP_counters	typeref:struct:_SFLLACP_counters::eth_addr
partner_len	lib/lacp.c	/^    uint8_t partner_len;      \/* Always 20. *\/$/;"	m	struct:lacp_pdu	file:
partner_type	lib/lacp.c	/^    uint8_t partner_type;     \/* Always 2. *\/$/;"	m	struct:lacp_pdu	file:
parts	datapath/linux/compat/include/linux/flex_array.h	/^			struct flex_array_part *parts[];$/;"	m	struct:flex_array::__anon42::__anon43	typeref:struct:flex_array::__anon42::__anon43::flex_array_part
parts	lib/uuid.h	/^    uint32_t parts[4];$/;"	m	struct:uuid
passive	lib/reconnect.c	/^    bool passive;$/;"	m	struct:reconnect	file:
patch	ovn/controller/patch.c	/^VLOG_DEFINE_THIS_MODULE(patch);$/;"	v
patch_port_name	ovn/controller/patch.c	/^patch_port_name(const char *src, const char *dst)$/;"	f	file:
patch_run	ovn/controller/patch.c	/^patch_run(struct controller_ctx *ctx, const struct ovsrec_bridge *br_int)$/;"	f
patcher	python/ovs/poller.py	/^    import eventlet.patcher$/;"	i
path	build-aux/check-structs	/^import os.path$/;"	i
path	build-aux/extract-ofp-actions	/^import os.path$/;"	i
path	build-aux/extract-ofp-errors	/^import os.path$/;"	i
path	build-aux/extract-ofp-fields	/^import os.path$/;"	i
path	build-aux/extract-ofp-msgs	/^import os.path$/;"	i
path	python/ovs/socket_util.py	/^import os.path$/;"	i
path	python/ovs/util.py	/^import os.path$/;"	i
path	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def path(self):$/;"	m	class:ConfigurationFile
path_cost	lib/stp.c	/^    int path_cost;                  \/* 8.5.5.3: Cost of tx\/rx on this port. *\/$/;"	m	struct:stp_port	file:
path_cost	ofproto/ofproto.h	/^    uint16_t path_cost;$/;"	m	struct:ofproto_port_stp_settings
path_cost	ofproto/ofproto.h	/^    uint32_t path_cost;$/;"	m	struct:ofproto_port_rstp_settings
pattern_rwlock	lib/vlog.c	/^static int syslog_fd OVS_GUARDED_BY(pattern_rwlock) = -1;$/;"	v	file:
pattern_rwlock	lib/vlog.c	/^static struct ovs_rwlock pattern_rwlock = OVS_RWLOCK_INITIALIZER;$/;"	v	typeref:struct:ovs_rwlock	file:
pause	ofproto/ofproto-dpif-upcall.c	/^    bool pause;                        \/* Set by leader on 'pause_latch. *\/$/;"	m	struct:udpif	file:
pauseProducing	python/ovstest/tcp.py	/^    def pauseProducing(self):$/;"	m	class:Producer
pause_barrier	ofproto/ofproto-dpif-upcall.c	/^    struct ovs_barrier pause_barrier;  \/* Barrier used to pause all *\/$/;"	m	struct:udpif	typeref:struct:udpif::ovs_barrier	file:
pause_latch	ofproto/ofproto-dpif-upcall.c	/^    struct latch pause_latch;          \/* Set to force revalidators pause. *\/$/;"	m	struct:udpif	typeref:struct:udpif::latch	file:
payload	datapath-windows/ovsext/DpInternal.h	/^    uint8_t *payload;$/;"	m	struct:_OVS_PACKET_INFO
payload	lib/pcap-file.c	/^    struct dp_packet payload;$/;"	m	struct:tcp_stream	typeref:struct:tcp_stream::dp_packet	file:
payload_len	datapath-windows/ovsext/NetProto.h	/^    UINT16   payload_len;$/;"	m	struct:IPv6Hdr
pcap	lib/netdev-bsd.c	/^    pcap_t *pcap;$/;"	m	struct:netdev_bsd	file:
pcap	lib/pcap-file.c	/^VLOG_DEFINE_THIS_MODULE(pcap);$/;"	v
pcap_arg	lib/netdev-bsd.c	/^struct pcap_arg {$/;"	s	file:
pcap_handle	lib/netdev-bsd.c	/^    pcap_t *pcap_handle;$/;"	m	struct:netdev_rxq_bsd	file:
pcap_hdr	lib/pcap-file.c	/^struct pcap_hdr {$/;"	s	file:
pcaprec_hdr	lib/pcap-file.c	/^struct pcaprec_hdr {$/;"	s	file:
pconn	lib/netdev-dummy.c	/^        struct dummy_packet_pconn pconn;$/;"	m	union:dummy_packet_conn::__anon109	typeref:struct:dummy_packet_conn::__anon109::dummy_packet_pconn	file:
pcpu_sw_netstats	datapath/linux/compat/include/linux/netdevice.h	/^struct pcpu_sw_netstats {$/;"	s
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	datapath/Makefile	/^pdfdir = ${docdir}$/;"	m
peer	include/openflow/openflow-1.0.h	/^    ovs_be32 peer;          \/* Features advertised by peer. *\/$/;"	m	struct:ofp10_phy_port
peer	include/openflow/openflow-1.1.h	/^    ovs_be32 peer;          \/* Features advertised by peer. *\/$/;"	m	struct:ofp11_port
peer	include/openflow/openflow-1.4.h	/^    ovs_be32 peer;          \/* Features advertised by peer. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
peer	lib/netdev-vport.c	/^    char *peer;$/;"	m	struct:netdev_vport	file:
peer	lib/ofp-util.h	/^    enum netdev_features peer;       \/* Features advertised by peer. *\/$/;"	m	struct:ofputil_phy_port	typeref:enum:ofputil_phy_port::netdev_features
peer	ofproto/ofproto-dpif-xlate.c	/^    struct xport *peer;              \/* Patch port peer or null. *\/$/;"	m	struct:xport	typeref:struct:xport::xport	file:
peer	ofproto/ofproto-dpif.c	/^    struct ofport_dpif *peer;   \/* Peer if patch port. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::ofport_dpif	file:
peer	ovn/lib/ovn-nb-idl.h	/^	struct nbrec_logical_router_port *peer;$/;"	m	struct:nbrec_logical_router_port	typeref:struct:nbrec_logical_router_port::nbrec_logical_router_port
peer	ovn/northd/ovn-northd.c	/^    struct ovn_port *peer;$/;"	m	struct:ovn_port	typeref:struct:ovn_port::ovn_port	file:
peer_ip	datapath/linux/compat/include/net/udp_tunnel.h	/^		struct in_addr		peer_ip;$/;"	m	union:udp_port_cfg::__anon51	typeref:struct:udp_port_cfg::__anon51::in_addr
peer_ip6	datapath/linux/compat/include/net/udp_tunnel.h	/^		struct in6_addr		peer_ip6;$/;"	m	union:udp_port_cfg::__anon51	typeref:struct:udp_port_cfg::__anon51::in6_addr
peer_udp_port	datapath/linux/compat/include/net/udp_tunnel.h	/^	__be16			peer_udp_port;$/;"	m	struct:udp_port_cfg
peer_versions	lib/vconn-provider.h	/^    uint32_t peer_versions;     \/* Peer's bitmap of versions it will accept. *\/$/;"	m	struct:vconn
pend_io_request	lib/netlink-socket.c	/^pend_io_request(struct nl_sock *sock)$/;"	f	file:
pendingInjectedNblCount	datapath-windows/ovsext/Switch.h	/^    volatile LONG pendingInjectedNblCount;$/;"	m	struct:_OVS_SWITCH_CONTEXT
pendingIrp	datapath-windows/ovsext/Event.h	/^    PIRP pendingIrp;$/;"	m	struct:_OVS_EVENT_QUEUE
pendingIrp	datapath-windows/ovsext/User.h	/^    PIRP pendingIrp;$/;"	m	struct:_OVS_USER_PACKET_QUEUE
pendingOidCount	datapath-windows/ovsext/Switch.h	/^    volatile LONG pendingOidCount;$/;"	m	struct:_OVS_SWITCH_CONTEXT
per_pmd_key	lib/dpif-netdev.c	/^    ovsthread_key_t per_pmd_key;$/;"	m	struct:dp_netdev	file:
percpu_stats	datapath/vport.h	/^	struct pcpu_sw_netstats __percpu *percpu_stats;$/;"	m	struct:vport	typeref:struct:vport::__percpu
perf_counter	lib/perf-counter.h	/^struct perf_counter {$/;"	s
perf_counter_accumulate	lib/perf-counter.c	/^perf_counter_accumulate(struct perf_counter *counter, uint64_t start_count)$/;"	f
perf_counter_init	lib/perf-counter.c	/^perf_counter_init(struct perf_counter *counter)$/;"	f	file:
perf_counter_read	lib/perf-counter.c	/^perf_counter_read(uint64_t *counter)$/;"	f
perf_counter_to_ds	lib/perf-counter.c	/^perf_counter_to_ds(struct ds *ds, struct perf_counter *pfc)$/;"	f	file:
perf_counters	lib/perf-counter.c	/^static struct shash perf_counters = SHASH_INITIALIZER(&perf_counters);$/;"	v	typeref:struct:shash	file:
perf_counters_clear	lib/perf-counter.c	/^perf_counters_clear(void)$/;"	f
perf_counters_clear	lib/perf-counter.h	/^static inline void perf_counters_clear(void) {}$/;"	f
perf_counters_destroy	lib/perf-counter.c	/^perf_counters_destroy()$/;"	f
perf_counters_destroy	lib/perf-counter.h	/^static inline void perf_counters_destroy(void) {}$/;"	f
perf_counters_init	lib/perf-counter.c	/^perf_counters_init(void)$/;"	f
perf_counters_init	lib/perf-counter.h	/^static inline void perf_counters_init(void) {}$/;"	f
perf_counters_to_ds	lib/perf-counter.c	/^perf_counters_to_ds(struct ds *ds)$/;"	f	file:
perf_counters_to_string	lib/perf-counter.c	/^perf_counters_to_string()$/;"	f
perf_counters_to_string	lib/perf-counter.h	/^perf_counters_to_string(void)$/;"	f
perf_event_open	lib/perf-counter.c	/^perf_event_open(struct perf_event_attr *hw_event, pid_t pid,$/;"	f	file:
perf_event_setup	lib/perf-counter.c	/^perf_event_setup(void)$/;"	f	file:
permMACAddress	datapath-windows/ovsext/DpInternal.h	/^    uint8_t permMACAddress[ETH_ADDR_LEN];$/;"	m	struct:_OVS_VPORT_EXT_INFO
permMacAddress	datapath-windows/ovsext/Vport.h	/^    UINT8                  permMacAddress[ETH_ADDR_LEN];$/;"	m	struct:_OVS_VPORT_ENTRY
permute_args	lib/getopt_long.c	/^permute_args(int panonopt_start, int panonopt_end, int opt_end, char **nargv)$/;"	f	file:
pernet_operations	datapath/linux/compat/include/net/net_namespace.h	15;"	d
persistent	ovsdb/column.h	/^    bool persistent;$/;"	m	struct:ovsdb_column
perthread_key	lib/ovs-rcu.c	/^static pthread_key_t perthread_key;$/;"	v	file:
perturb	lib/netdev-linux.c	/^    uint32_t perturb;$/;"	m	struct:sfq	file:
pfd_accept	lib/stream-fd.c	/^pfd_accept(struct pstream *pstream, struct stream **new_streamp)$/;"	f	file:
pfd_close	lib/stream-fd.c	/^pfd_close(struct pstream *pstream)$/;"	f	file:
pfd_wait	lib/stream-fd.c	/^pfd_wait(struct pstream *pstream)$/;"	f	file:
phy	datapath/flow.h	/^	} __packed phy; \/* Safe when right after 'tun_key'. *\/$/;"	m	struct:sw_flow_key	typeref:struct:sw_flow_key::__anon27
physical	ovn/controller/physical.c	/^VLOG_DEFINE_THIS_MODULE(physical);$/;"	v
physical_register_ovs_idl	ovn/controller/physical.c	/^physical_register_ovs_idl(struct ovsdb_idl *ovs_idl)$/;"	f
physical_run	ovn/controller/physical.c	/^physical_run(struct controller_ctx *ctx, enum mf_field_id mff_ovn_geneve,$/;"	f
pi	include/openflow/openflow-1.3.h	/^    struct ofp12_packet_in pi;$/;"	m	struct:ofp13_packet_in	typeref:struct:ofp13_packet_in::ofp12_packet_in
pick_datapath_id	ofproto/ofproto.c	/^pick_datapath_id(const struct ofproto *ofproto)$/;"	f	file:
pick_fallback_dpid	ofproto/ofproto.c	/^pick_fallback_dpid(void)$/;"	f	file:
pid	datapath-windows/ovsext/Datapath.h	/^    UINT32 pid;$/;"	m	struct:_OVS_OPEN_INSTANCE
pid	datapath-windows/ovsext/User.h	/^    UINT32 pid;$/;"	m	struct:_OVS_USER_PACKET_QUEUE
pid	lib/netlink-socket.c	/^    uint32_t pid;$/;"	m	struct:nl_sock	file:
pid	lib/process.c	/^    pid_t pid;$/;"	m	struct:process	file:
pid	utilities/ovs-check-dead-ifs	/^        pid = int(pid)$/;"	v
pidCount	datapath-windows/ovsext/Datapath.h	/^    INT pidCount;$/;"	m	struct:_OVS_DEVICE_EXTENSION
pidHashArray	datapath-windows/ovsext/Switch.h	/^    PLIST_ENTRY             pidHashArray;           \/\/ based on packet pids$/;"	m	struct:_OVS_SWITCH_CONTEXT
pidHashLock	datapath-windows/ovsext/Switch.h	/^    NDIS_SPIN_LOCK          pidHashLock;            \/\/ Lock for pidHash table$/;"	m	struct:_OVS_SWITCH_CONTEXT
pidLink	datapath-windows/ovsext/Datapath.h	/^    LIST_ENTRY             pidLink; \/* Links the instance to$/;"	m	struct:_OVS_OPEN_INSTANCE
pid_t	include/windows/windefs.h	/^typedef int pid_t;$/;"	t
pidfile	lib/daemon-unix.c	/^char *pidfile;$/;"	v
pidfile	lib/daemon-windows.c	/^char *pidfile;                 \/* --pidfile: Name of pidfile (null if none). *\/$/;"	v
pidfile_dev	lib/daemon-unix.c	/^static dev_t pidfile_dev;$/;"	v	file:
pidfile_ino	lib/daemon-unix.c	/^static ino_t pidfile_ino;$/;"	v	file:
pidof	utilities/bugtool/ovs-bugtool	/^def pidof(name):$/;"	f
pif_bridge_name	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_bridge_name(pif):$/;"	f
pif_currently_in_use	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def pif_currently_in_use(pif):$/;"	f
pif_datapath	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def pif_datapath(pif):$/;"	f
pif_exists	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def pif_exists(self, pif):$/;"	m	class:DatabaseCache
pif_get_bond_masters	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_get_bond_masters(pif):$/;"	f
pif_get_bond_slaves	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_get_bond_slaves(pif):$/;"	f
pif_get_bond_slaves_sorted	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^def pif_get_bond_slaves_sorted(pif):$/;"	f
pif_get_vlan_masters	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_get_vlan_masters(pif):$/;"	f
pif_get_vlan_slave	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_get_vlan_slave(pif):$/;"	f
pif_ipdev_name	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_ipdev_name(pif):$/;"	f
pif_is_bond	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_is_bond(pif):$/;"	f
pif_is_bridged	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_is_bridged(pif):$/;"	f
pif_is_tunnel	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_is_tunnel(pif):$/;"	f
pif_is_vlan	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_is_vlan(pif):$/;"	f
pif_netdev_name	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def pif_netdev_name(pif):$/;"	f
pif_rename_physical_devices	xenserver/opt_xensource_libexec_interface-reconfigure	/^def pif_rename_physical_devices(pif):$/;"	f
pinned	lib/ovs-numa.c	/^    bool pinned;               \/* If a thread has been pinned to the core. *\/$/;"	m	struct:cpu_core	file:
pinqueue	ofproto/pinsched.c	/^struct pinqueue {$/;"	s	file:
pinqueue_destroy	ofproto/pinsched.c	/^pinqueue_destroy(struct pinsched *ps, struct pinqueue *q)$/;"	f	file:
pinqueue_get	ofproto/pinsched.c	/^pinqueue_get(struct pinsched *ps, ofp_port_t port_no)$/;"	f	file:
pins	ofproto/ofproto-dpif.c	/^    struct guarded_list pins;      \/* Contains "struct ofputil_packet_in"s. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::guarded_list	file:
pins_seq	ofproto/ofproto-dpif.c	/^    struct seq *pins_seq;          \/* For notifying 'pins' reception. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::seq	file:
pins_seqno	ofproto/ofproto-dpif.c	/^    uint64_t pins_seqno;$/;"	m	struct:ofproto_dpif	file:
pinsched	ofproto/pinsched.c	/^struct pinsched {$/;"	s	file:
pinsched_create	ofproto/pinsched.c	/^pinsched_create(int rate_limit, int burst_limit)$/;"	f
pinsched_destroy	ofproto/pinsched.c	/^pinsched_destroy(struct pinsched *ps)$/;"	f
pinsched_get_limits	ofproto/pinsched.c	/^pinsched_get_limits(const struct pinsched *ps,$/;"	f
pinsched_get_stats	ofproto/pinsched.c	/^pinsched_get_stats(const struct pinsched *ps, struct pinsched_stats *stats)$/;"	f
pinsched_run	ofproto/pinsched.c	/^pinsched_run(struct pinsched *ps, struct ovs_list *txq)$/;"	f
pinsched_send	ofproto/pinsched.c	/^pinsched_send(struct pinsched *ps, ofp_port_t port_no,$/;"	f
pinsched_set_limits	ofproto/pinsched.c	/^pinsched_set_limits(struct pinsched *ps, int rate_limit, int burst_limit)$/;"	f
pinsched_stats	ofproto/pinsched.h	/^struct pinsched_stats {$/;"	s
pinsched_wait	ofproto/pinsched.c	/^pinsched_wait(struct pinsched *ps)$/;"	f
pipeline	ovn/lib/ovn-sb-idl.h	/^	char *pipeline;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_logical_flow
pipeline	utilities/ovs-pipegen.py	/^def pipeline(size):$/;"	f
pipeline_encode	ovn/utilities/ovn-sbctl.c	/^pipeline_encode(const char *pl)$/;"	f	file:
pkgconfig_DATA	Makefile	/^pkgconfig_DATA = $(srcdir)\/lib\/libopenvswitch.pc \\$/;"	m
pkgconfigdir	Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdata_DATA	Makefile	/^pkgdata_DATA = vswitchd\/vswitch.ovsschema vtep\/vtep.ovsschema \\$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/openvswitch$/;"	m
pkgdatadir	datapath/Makefile	/^pkgdatadir = $(datadir)\/openvswitch$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/openvswitch$/;"	m
pkgincludedir	datapath/Makefile	/^pkgincludedir = $(includedir)\/openvswitch$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/openvswitch$/;"	m
pkglibdir	datapath/Makefile	/^pkglibdir = $(libdir)\/openvswitch$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/openvswitch$/;"	m
pkglibexecdir	datapath/Makefile	/^pkglibexecdir = $(libexecdir)\/openvswitch$/;"	m
pkidir_must_exist	utilities/ovs-pki	/^pkidir_must_exist() {$/;"	f
pkidir_must_exist	utilities/ovs-pki.in	/^pkidir_must_exist() {$/;"	f
pkt	lib/netdev-dummy.c	/^    struct dp_packet *pkt;$/;"	m	struct:pkt_list_node	typeref:struct:pkt_list_node::dp_packet	file:
pkt_frag	datapath/linux/compat/stt.c	/^struct pkt_frag {$/;"	s	file:
pkt_frag	datapath/linux/stt.c	/^struct pkt_frag {$/;"	s	file:
pkt_key	datapath/actions.c	/^	struct sw_flow_key pkt_key;$/;"	m	struct:deferred_action	typeref:struct:deferred_action::sw_flow_key	file:
pkt_key	datapath/linux/actions.c	/^	struct sw_flow_key pkt_key;$/;"	m	struct:deferred_action	typeref:struct:deferred_action::sw_flow_key	file:
pkt_key	datapath/linux/compat/stt.c	/^struct pkt_key {$/;"	s	file:
pkt_key	datapath/linux/stt.c	/^struct pkt_key {$/;"	s	file:
pkt_key_hash	datapath/linux/compat/stt.c	/^static u32 pkt_key_hash(const struct net *net, const struct pkt_key *key)$/;"	f	file:
pkt_key_hash	datapath/linux/stt.c	/^static u32 pkt_key_hash(const struct net *net, const struct pkt_key *key)$/;"	f	file:
pkt_key_match	datapath/linux/compat/stt.c	/^static bool pkt_key_match(struct net *net,$/;"	f	file:
pkt_key_match	datapath/linux/stt.c	/^static bool pkt_key_match(struct net *net,$/;"	f	file:
pkt_list_delete	lib/netdev-dummy.c	/^pkt_list_delete(struct ovs_list *l)$/;"	f	file:
pkt_list_node	lib/netdev-dummy.c	/^struct pkt_list_node {$/;"	s	file:
pkt_mark	lib/flow.h	/^    uint32_t pkt_mark;          \/* Packet mark. *\/$/;"	m	struct:flow
pkt_mark	lib/packets.h	/^    uint32_t pkt_mark;          \/* Packet mark. *\/$/;"	m	struct:pkt_metadata
pkt_mark	ofproto/tunnel.c	/^    uint32_t pkt_mark;$/;"	m	struct:tnl_match	file:
pkt_metadata	lib/packets.h	/^struct pkt_metadata {$/;"	s
pkt_metadata_init	lib/packets.h	/^pkt_metadata_init(struct pkt_metadata *md, odp_port_t port)$/;"	f
pkt_metadata_init_tnl	lib/netdev-vport.c	/^pkt_metadata_init_tnl(struct pkt_metadata *md)$/;"	f	file:
pkt_seq	datapath/linux/compat/stt.c	/^	__be32 pkt_seq;$/;"	m	struct:pkt_key	file:
pkt_seq	datapath/linux/stt.c	/^	__be32 pkt_seq;$/;"	m	struct:pkt_key	file:
pktbuf	ofproto/connmgr.c	/^    struct pktbuf *pktbuf;         \/* OpenFlow packet buffers. *\/$/;"	m	struct:ofconn	typeref:struct:ofconn::pktbuf	file:
pktbuf	ofproto/pktbuf.c	/^VLOG_DEFINE_THIS_MODULE(pktbuf);$/;"	v
pktbuf	ofproto/pktbuf.c	/^struct pktbuf {$/;"	s	file:
pktbuf_buffer_unknown	ofproto/pktbuf.c	/^COVERAGE_DEFINE(pktbuf_buffer_unknown);$/;"	v
pktbuf_capacity	ofproto/pktbuf.c	/^pktbuf_capacity(void)$/;"	f
pktbuf_count_packets	ofproto/pktbuf.c	/^pktbuf_count_packets(const struct pktbuf *pb)$/;"	f
pktbuf_create	ofproto/pktbuf.c	/^pktbuf_create(void)$/;"	f
pktbuf_destroy	ofproto/pktbuf.c	/^pktbuf_destroy(struct pktbuf *pb)$/;"	f
pktbuf_discard	ofproto/pktbuf.c	/^pktbuf_discard(struct pktbuf *pb, uint32_t id)$/;"	f
pktbuf_get_null	ofproto/pktbuf.c	/^pktbuf_get_null(void)$/;"	f
pktbuf_null_cookie	ofproto/pktbuf.c	/^COVERAGE_DEFINE(pktbuf_null_cookie);$/;"	v
pktbuf_retrieve	ofproto/pktbuf.c	/^pktbuf_retrieve(struct pktbuf *pb, uint32_t id, struct dp_packet **bufferp,$/;"	f
pktbuf_retrieved	ofproto/pktbuf.c	/^COVERAGE_DEFINE(pktbuf_retrieved);$/;"	v
pktbuf_reuse_error	ofproto/pktbuf.c	/^COVERAGE_DEFINE(pktbuf_reuse_error);$/;"	v
pktbuf_save	ofproto/pktbuf.c	/^pktbuf_save(struct pktbuf *pb, const void *buffer, size_t buffer_size,$/;"	f
pktlen	lib/sflow_api.h	/^    u_int32_t pktlen; \/* accumulated size *\/$/;"	m	struct:_SFLSampleCollector
place	lib/getopt_long.c	/^static const char *place = EMSG; \/* option letter processing *\/$/;"	v	file:
platform	utilities/bugtool/ovs-bugtool	/^import platform$/;"	i
plen	lib/ovs-router.c	/^    uint8_t plen;$/;"	m	struct:ovs_router_entry	file:
ploc_cfg	vtep/vtep-ctl.c	/^    const struct vteprec_physical_locator *ploc_cfg;$/;"	m	struct:vtep_ctl_ploc	typeref:struct:vtep_ctl_ploc::vteprec_physical_locator	file:
ploc_set_cfg	vtep/vtep-ctl.c	/^    const struct vteprec_physical_locator_set *ploc_set_cfg;$/;"	m	struct:vtep_ctl_mcast_mac	typeref:struct:vtep_ctl_mcast_mac::vteprec_physical_locator_set	file:
plocs	vtep/vtep-ctl.c	/^    struct shash plocs;     \/* Maps from "<encap>+<dst_ip>" to$/;"	m	struct:vtep_ctl_context	typeref:struct:vtep_ctl_context::shash	file:
pm	ofproto/ofproto-provider.h	/^    struct ofputil_port_mod pm;$/;"	m	struct:ofproto_port_mod	typeref:struct:ofproto_port_mod::ofputil_port_mod
pmd	lib/dpif-netdev.c	/^    struct dp_netdev_pmd_thread *pmd;$/;"	m	struct:dp_netdev_execute_aux	typeref:struct:dp_netdev_execute_aux::dp_netdev_pmd_thread	file:
pmd_cmask	lib/dpif-netdev.c	/^    char *pmd_cmask;$/;"	m	struct:dp_netdev	file:
pmd_config_changed	lib/dpif-netdev.c	/^pmd_config_changed(const struct dp_netdev *dp, size_t rxqs, const char *cmask)$/;"	f	file:
pmd_cpu_mask	ofproto/ofproto.c	/^char *pmd_cpu_mask;$/;"	v
pmd_cycles_counter_type	lib/dpif-netdev.c	/^enum pmd_cycles_counter_type {$/;"	g	file:
pmd_id	lib/dpif-netdev.c	/^    const unsigned pmd_id;       \/* The 'core_id' of pmd thread owning this *\/$/;"	m	struct:dp_netdev_flow	file:
pmd_id	lib/dpif.h	/^    unsigned pmd_id;                \/* Datapath poll mode driver id. *\/$/;"	m	struct:dpif_flow_del
pmd_id	lib/dpif.h	/^    unsigned pmd_id;                \/* Datapath poll mode driver id. *\/$/;"	m	struct:dpif_flow_get
pmd_id	lib/dpif.h	/^    unsigned pmd_id;                \/* Datapath poll mode driver id. *\/$/;"	m	struct:dpif_flow_put
pmd_id	lib/dpif.h	/^    unsigned pmd_id;              \/* Datapath poll mode driver id. *\/$/;"	m	struct:dpif_flow
pmd_id	ofproto/ofproto-dpif-upcall.c	/^    unsigned pmd_id;               \/* Datapath poll mode driver id. *\/$/;"	m	struct:udpif_key	file:
pmd_id	ofproto/ofproto-dpif-upcall.c	/^    unsigned pmd_id;               \/* Datapath poll mode driver id. *\/$/;"	m	struct:upcall	file:
pmd_info_clear_stats	lib/dpif-netdev.c	/^pmd_info_clear_stats(struct ds *reply OVS_UNUSED,$/;"	f	file:
pmd_info_show_stats	lib/dpif-netdev.c	/^pmd_info_show_stats(struct ds *reply,$/;"	f	file:
pmd_info_type	lib/dpif-netdev.c	/^enum pmd_info_type {$/;"	g	file:
pmd_load_queues	lib/dpif-netdev.c	/^pmd_load_queues(struct dp_netdev_pmd_thread *pmd,$/;"	f	file:
pmd_thread_main	lib/dpif-netdev.c	/^pmd_thread_main(void *f_)$/;"	f	file:
pmd_thread_setaffinity_cpu	lib/netdev-dpdk.c	/^pmd_thread_setaffinity_cpu(unsigned cpu)$/;"	f
pmd_thread_setaffinity_cpu	lib/netdev-dpdk.h	/^pmd_thread_setaffinity_cpu(unsigned cpu OVS_UNUSED)$/;"	f
pointer	ovsdb/ovsdb-idlc	/^            pointer = ''$/;"	v
pointer	ovsdb/ovsdb-idlc	/^            pointer = '*'$/;"	v
pointer	ovsdb/ovsdb-idlc	/^        pointer = ''$/;"	v
policy_applied	datapath/linux/compat/include/net/vxlan.h	/^		policy_applied:1,$/;"	m	struct:vxlanhdr_gbp
policy_id	datapath/linux/compat/include/net/vxlan.h	/^	__be16	policy_id;$/;"	m	struct:vxlanhdr_gbp
poll	python/ovs/poller.py	/^    def poll(self, timeout):$/;"	m	class:_SelectSelect
pollAll	datapath-windows/ovsext/Event.h	/^    BOOLEAN pollAll;$/;"	m	struct:_OVS_EVENT_QUEUE
poll_block	lib/poll-loop.c	/^poll_block(void)$/;"	f
poll_create_node	lib/poll-loop.c	/^COVERAGE_DEFINE(poll_create_node);$/;"	v
poll_create_node	lib/poll-loop.c	/^poll_create_node(int fd, HANDLE wevent, short int events, const char *where)$/;"	f	file:
poll_fd_wait	lib/poll-loop.h	54;"	d
poll_fd_wait_at	lib/poll-loop.c	/^poll_fd_wait_at(int fd, short int events, const char *where)$/;"	f
poll_immediate_wake	lib/poll-loop.h	68;"	d
poll_immediate_wake_at	lib/poll-loop.c	/^poll_immediate_wake_at(const char *where)$/;"	f
poll_loop	lib/poll-loop.c	/^VLOG_DEFINE_THIS_MODULE(poll_loop);$/;"	v
poll_loop	lib/poll-loop.c	/^poll_loop(void)$/;"	f	file:
poll_loop	lib/poll-loop.c	/^struct poll_loop {$/;"	s	file:
poll_min_rx	lib/bfd.c	/^    long long int poll_min_rx;    \/* Min RX negotating in a poll sequence. *\/$/;"	m	struct:bfd	file:
poll_min_tx	lib/bfd.c	/^    long long int poll_min_tx;    \/* Min TX negotating in a poll sequence. *\/$/;"	m	struct:bfd	file:
poll_node	lib/poll-loop.c	/^struct poll_node {$/;"	s	file:
poll_nodes	lib/poll-loop.c	/^    struct hmap poll_nodes;$/;"	m	struct:poll_loop	typeref:struct:poll_loop::hmap	file:
poll_thread_pos	lib/dpif-netdev.c	/^    struct cmap_position poll_thread_pos;$/;"	m	struct:dpif_netdev_flow_dump	typeref:struct:dpif_netdev_flow_dump::cmap_position	file:
poll_threads	lib/dpif-netdev.c	/^    struct cmap poll_threads;$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::cmap	file:
poll_threads_set	lib/dpif-provider.h	/^    int (*poll_threads_set)(struct dpif *dpif, unsigned int n_rxqs,$/;"	m	struct:dpif_class
poll_timer_wait	lib/poll-loop.h	61;"	d
poll_timer_wait_at	lib/poll-loop.c	/^poll_timer_wait_at(long long int msec, const char *where)$/;"	f
poll_timer_wait_until	lib/poll-loop.h	64;"	d
poll_timer_wait_until_at	lib/poll-loop.c	/^poll_timer_wait_until_at(long long int when, const char *where)$/;"	f
poll_wevent_wait	lib/poll-loop.h	57;"	d
poll_wevent_wait_at	lib/poll-loop.c	/^poll_wevent_wait_at(HANDLE wevent, const char *where)$/;"	f
poll_zero_timeout	lib/poll-loop.c	/^COVERAGE_DEFINE(poll_zero_timeout);$/;"	v
poller	python/ovs/db/data.py	/^import ovs.poller$/;"	i
poller	python/ovs/db/idl.py	/^import ovs.poller$/;"	i
poller	python/ovs/jsonrpc.py	/^import ovs.poller$/;"	i
poller	python/ovs/socket_util.py	/^import ovs.poller$/;"	i
poller	python/ovs/stream.py	/^import ovs.poller$/;"	i
poller	tests/test-jsonrpc.py	/^import ovs.poller$/;"	i
poller	tests/test-ovsdb.py	/^import ovs.poller$/;"	i
pollers	lib/sflow_api.h	/^    SFLPoller  *pollers;    \/* the list of samplers *\/$/;"	m	struct:_SFLAgent
pollfd	lib/poll-loop.c	/^    struct pollfd pollfd;       \/* Events to pass to time_poll(). *\/$/;"	m	struct:poll_node	typeref:struct:poll_node::pollfd	file:
polling	lib/vswitch-idl.h	/^	int64_t *polling;$/;"	m	struct:ovsrec_sflow
polling_interval	ofproto/ofproto.h	/^    uint32_t polling_interval;$/;"	m	struct:ofproto_sflow_options
pool_mutex	lib/netlink-socket.c	/^static struct ovs_mutex pool_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
pop_header	lib/netdev-provider.h	/^    int (*pop_header)(struct dp_packet *packet);$/;"	m	struct:netdev_class
pop_mpls	datapath/actions.c	/^static int pop_mpls(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
pop_mpls	datapath/linux/actions.c	/^static int pop_mpls(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
pop_mpls	lib/packets.c	/^pop_mpls(struct dp_packet *packet, ovs_be16 ethtype)$/;"	f
pop_tunnel_name	ovn/controller/chassis.c	/^pop_tunnel_name(uint32_t *type)$/;"	f	file:
pop_vlan	datapath/actions.c	/^static int pop_vlan(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
pop_vlan	datapath/linux/actions.c	/^static int pop_vlan(struct sk_buff *skb, struct sw_flow_key *key)$/;"	f	file:
pop_vlan	lib/odp-util.c	/^pop_vlan(struct flow *base,$/;"	f	file:
port	datapath-windows/ovsext/TunnelFilter.c	/^    UINT16                  port;$/;"	m	struct:_OVS_TUNFLT_REQUEST	file:
port	include/openflow/openflow-1.0.h	/^    ovs_be16 port;          \/* Port to be queried. Should refer$/;"	m	struct:ofp10_queue_get_config_request
port	include/openflow/openflow-1.0.h	/^    ovs_be16 port;$/;"	m	struct:ofp10_queue_get_config_reply
port	include/openflow/openflow-1.1.h	/^    ovs_be32 port;$/;"	m	struct:ofp11_queue_get_config_reply
port	include/openflow/openflow-1.1.h	/^    ovs_be32 port;$/;"	m	struct:ofp11_queue_get_config_request
port	include/openflow/openflow-1.2.h	/^    ovs_be32 port;         \/* Port this queue is attached to. *\/$/;"	m	struct:ofp12_packet_queue
port	lib/dpif-netdev.c	/^    struct dp_netdev_port *port;$/;"	m	struct:rxq_poll	typeref:struct:rxq_poll::dp_netdev_port	file:
port	lib/mac-learning.h	/^    void *port;                 \/* Client-provided port pointer. *\/$/;"	m	struct:mac_learning_port
port	lib/mcast-snooping.h	/^    void *port;$/;"	m	struct:mcast_port_bundle
port	lib/ofp-actions.c	/^    ovs_be16 port;                  \/* Output port. *\/$/;"	m	struct:ofp10_action_output	file:
port	lib/ofp-actions.c	/^    ovs_be16 port;            \/* Port that queue belongs. Should$/;"	m	struct:ofp10_action_enqueue	file:
port	lib/ofp-actions.c	/^    ovs_be32 port;                    \/* Output port. *\/$/;"	m	struct:ofp11_action_output	file:
port	lib/ofp-actions.h	/^    ofp_port_t port;            \/* Output port. *\/$/;"	m	struct:ofpact_output
port	lib/ofp-actions.h	/^    ofp_port_t port;$/;"	m	struct:ofpact_enqueue
port	lib/ofp-actions.h	/^    uint16_t port;              \/* TCP, UDP or SCTP port number. *\/$/;"	m	struct:ofpact_l4_port
port	lib/tnl-ports.c	/^    odp_port_t port;$/;"	m	struct:tnl_port	file:
port	ofproto/ofproto-dpif.c	/^    struct ofproto_port port;$/;"	m	struct:port_dump_state	typeref:struct:port_dump_state::ofproto_port	file:
port	ofproto/ofproto-provider.h	/^    struct ofport *port;                \/* Affected port. *\/$/;"	m	struct:ofproto_port_mod	typeref:struct:ofproto_port_mod::ofport
port	ovn/controller/encaps.c	/^    const struct ovsrec_port *port;$/;"	m	struct:port_hash_node	typeref:struct:port_hash_node::ovsrec_port	file:
port	python/ovstest/args.py	/^def port(string):$/;"	f
port	utilities/ovs-vsctl.c	/^    struct vsctl_port *port;$/;"	m	struct:vsctl_iface	typeref:struct:vsctl_iface::vsctl_port	file:
port	vswitchd/bridge.c	/^    struct port *port;          \/* Containing port. *\/$/;"	m	struct:iface	typeref:struct:iface::port	file:
port	vswitchd/bridge.c	/^struct port {$/;"	s	file:
port16	datapath/linux/compat/include/net/flow_keys.h	/^		__be16 port16[2];$/;"	m	union:flow_keys::__anon47
portFriendlyName	datapath-windows/ovsext/Vport.h	/^    IF_COUNTED_STRING      portFriendlyName;$/;"	m	struct:_OVS_VPORT_ENTRY
portId	datapath-windows/ovsext/DpInternal.h	/^    uint32_t portId;$/;"	m	struct:_OVS_VPORT_EXT_INFO
portId	datapath-windows/ovsext/Vport.h	/^    NDIS_SWITCH_PORT_ID    portId;$/;"	m	struct:_OVS_VPORT_ENTRY
portIdHashArray	datapath-windows/ovsext/Switch.h	/^    PLIST_ENTRY             portIdHashArray;        \/\/ based on Hyper-V portId$/;"	m	struct:_OVS_SWITCH_CONTEXT
portIdLink	datapath-windows/ovsext/Vport.h	/^    LIST_ENTRY             portIdLink;$/;"	m	struct:_OVS_VPORT_ENTRY
portName	lib/sflow.h	/^    SFLPortName portName;$/;"	m	union:_SFLCounters_type
portName	lib/sflow.h	/^    SFLString portName;$/;"	m	struct:__anon157
portNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t portNo;$/;"	m	struct:_OVS_EVENT_ENTRY
portNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t portNo;$/;"	m	struct:_OVS_VPORT_EXT_INFO
portNo	datapath-windows/ovsext/DpInternal.h	/^    uint32_t portNo;$/;"	m	struct:_OVS_VPORT_GET
portNo	datapath-windows/ovsext/Event.h	/^    UINT32 portNo;$/;"	m	struct:_OVS_EVENT_QUEUE_ELEM
portNo	datapath-windows/ovsext/Vport.h	/^    UINT32                 portNo;$/;"	m	struct:_OVS_VPORT_ENTRY
portNoHashArray	datapath-windows/ovsext/Switch.h	/^    PLIST_ENTRY             portNoHashArray;        \/\/ based on ovs port number$/;"	m	struct:_OVS_SWITCH_CONTEXT
portNoLink	datapath-windows/ovsext/Vport.h	/^    LIST_ENTRY             portNoLink;$/;"	m	struct:_OVS_VPORT_ENTRY
portOptions	datapath-windows/ovsext/Vport.h	/^    PNL_ATTR               portOptions;$/;"	m	struct:_OVS_VPORT_ENTRY
portState	datapath-windows/ovsext/Vport.h	/^    NDIS_SWITCH_PORT_STATE portState;$/;"	m	struct:_OVS_VPORT_ENTRY
portState	lib/sflow.h	/^    SFLLACP_portState portState;$/;"	m	struct:_SFLLACP_counters
portType	datapath-windows/ovsext/Vport.h	/^    NDIS_SWITCH_PORT_TYPE  portType;$/;"	m	struct:_OVS_VPORT_ENTRY
port_add	lib/dpif-provider.h	/^    int (*port_add)(struct dpif *dpif, struct netdev *netdev,$/;"	m	struct:dpif_class
port_add	ofproto/ofproto-dpif.c	/^port_add(struct ofproto *ofproto_, struct netdev *netdev)$/;"	f	file:
port_add	ofproto/ofproto-provider.h	/^    int (*port_add)(struct ofproto *ofproto, struct netdev *netdev);$/;"	m	struct:ofproto_class
port_alloc	ofproto/ofproto-dpif.c	/^port_alloc(void)$/;"	f	file:
port_alloc	ofproto/ofproto-provider.h	/^    struct ofport *(*port_alloc)(void);$/;"	m	struct:ofproto_class	typeref:struct:ofproto_class::port_alloc
port_bindings	ovn/utilities/ovn-sbctl.c	/^    struct shash port_bindings;$/;"	m	struct:sbctl_context	typeref:struct:sbctl_context::shash	file:
port_by_name	ofproto/ofproto-provider.h	/^    struct shash port_by_name;$/;"	m	struct:ofproto	typeref:struct:ofproto::shash
port_cfg	utilities/ovs-vsctl.c	/^    struct ovsrec_port *port_cfg;$/;"	m	struct:vsctl_port	typeref:struct:vsctl_port::ovsrec_port	file:
port_cfg	vtep/vtep-ctl.c	/^    const struct vteprec_physical_port *port_cfg;$/;"	m	struct:vtep_ctl_port	typeref:struct:vtep_ctl_port::vteprec_physical_port	file:
port_conf	lib/netdev-dpdk.c	/^static const struct rte_eth_conf port_conf = {$/;"	v	typeref:struct:rte_eth_conf	file:
port_configure	vswitchd/bridge.c	/^port_configure(struct port *port)$/;"	f	file:
port_configure_bond	vswitchd/bridge.c	/^port_configure_bond(struct port *port, struct bond_settings *s)$/;"	f	file:
port_configure_lacp	vswitchd/bridge.c	/^port_configure_lacp(struct port *port, struct lacp_settings *s)$/;"	f	file:
port_configure_rstp	vswitchd/bridge.c	/^port_configure_rstp(const struct ofproto *ofproto, struct port *port,$/;"	f	file:
port_configure_stp	vswitchd/bridge.c	/^port_configure_stp(const struct ofproto *ofproto, struct port *port,$/;"	f	file:
port_construct	ofproto/ofproto-dpif.c	/^port_construct(struct ofport *port_)$/;"	f	file:
port_construct	ofproto/ofproto-provider.h	/^    int (*port_construct)(struct ofport *ofport);$/;"	m	struct:ofproto_class
port_create	vswitchd/bridge.c	/^port_create(struct bridge *br, const struct ovsrec_port *cfg)$/;"	f	file:
port_dealloc	ofproto/ofproto-dpif.c	/^port_dealloc(struct ofport *port_)$/;"	f	file:
port_dealloc	ofproto/ofproto-provider.h	/^    void (*port_dealloc)(struct ofport *ofport);$/;"	m	struct:ofproto_class
port_del	lib/dpif-provider.h	/^    int (*port_del)(struct dpif *dpif, odp_port_t port_no);$/;"	m	struct:dpif_class
port_del	ofproto/ofproto-dpif.c	/^port_del(struct ofproto *ofproto_, ofp_port_t ofp_port)$/;"	f	file:
port_del	ofproto/ofproto-provider.h	/^    int (*port_del)(struct ofproto *ofproto, ofp_port_t ofp_port);$/;"	m	struct:ofproto_class
port_del_ifaces	vswitchd/bridge.c	/^port_del_ifaces(struct port *port)$/;"	f	file:
port_destroy	vswitchd/bridge.c	/^port_destroy(struct port *port)$/;"	f	file:
port_destruct	ofproto/ofproto-dpif.c	/^port_destruct(struct ofport *port_)$/;"	f	file:
port_destruct	ofproto/ofproto-provider.h	/^    void (*port_destruct)(struct ofport *ofport);$/;"	m	struct:ofproto_class
port_dump_done	lib/dpif-provider.h	/^    int (*port_dump_done)(const struct dpif *dpif, void *state);$/;"	m	struct:dpif_class
port_dump_done	ofproto/ofproto-dpif.c	/^port_dump_done(const struct ofproto *ofproto_ OVS_UNUSED, void *state_)$/;"	f	file:
port_dump_done	ofproto/ofproto-provider.h	/^    int (*port_dump_done)(const struct ofproto *ofproto, void *state);$/;"	m	struct:ofproto_class
port_dump_next	lib/dpif-provider.h	/^    int (*port_dump_next)(const struct dpif *dpif, void *state,$/;"	m	struct:dpif_class
port_dump_next	ofproto/ofproto-dpif.c	/^port_dump_next(const struct ofproto *ofproto_, void *state_,$/;"	f	file:
port_dump_next	ofproto/ofproto-provider.h	/^    int (*port_dump_next)(const struct ofproto *ofproto, void *state,$/;"	m	struct:ofproto_class
port_dump_start	lib/dpif-provider.h	/^    int (*port_dump_start)(const struct dpif *dpif, void **statep);$/;"	m	struct:dpif_class
port_dump_start	ofproto/ofproto-dpif.c	/^port_dump_start(const struct ofproto *ofproto_ OVS_UNUSED, void **statep)$/;"	f	file:
port_dump_start	ofproto/ofproto-provider.h	/^    int (*port_dump_start)(const struct ofproto *ofproto, void **statep);$/;"	m	struct:ofproto_class
port_dump_state	ofproto/ofproto-dpif.c	/^struct port_dump_state {$/;"	s	file:
port_elem	vswitchd/bridge.c	/^    struct ovs_list port_elem;  \/* Element in struct port's "ifaces" list. *\/$/;"	m	struct:iface	typeref:struct:iface::ovs_list	file:
port_fault_status	vtep/vtep-idl.h	/^	char **port_fault_status;$/;"	m	struct:vteprec_physical_port
port_flag	lib/rstp-state-machines.c	/^enum port_flag {$/;"	g	file:
port_get_lacp_stats	ofproto/ofproto-dpif.c	/^port_get_lacp_stats(const struct ofport *ofport_, struct lacp_slave_stats *stats)$/;"	f	file:
port_get_lacp_stats	ofproto/ofproto-provider.h	/^    int (*port_get_lacp_stats)(const struct ofport *port,$/;"	m	struct:ofproto_class
port_get_pid	lib/dpif-provider.h	/^    uint32_t (*port_get_pid)(const struct dpif *dpif, odp_port_t port_no,$/;"	m	struct:dpif_class
port_get_stats	ofproto/ofproto-dpif.c	/^port_get_stats(const struct ofport *ofport_, struct netdev_stats *stats)$/;"	f	file:
port_get_stats	ofproto/ofproto-provider.h	/^    int (*port_get_stats)(const struct ofport *port,$/;"	m	struct:ofproto_class
port_hash	ovn/controller/encaps.c	/^port_hash(const char *chassis_id, const char *type, const char *ip)$/;"	f	file:
port_hash_node	ovn/controller/encaps.c	/^struct port_hash_node {$/;"	s	file:
port_hash_rec	ovn/controller/encaps.c	/^port_hash_rec(const struct ovsrec_port *port)$/;"	f	file:
port_id	lib/lacp.c	/^    uint16_t port_id;             \/* Port ID. *\/$/;"	m	struct:slave	file:
port_id	lib/netdev-dpdk.c	/^    int port_id;$/;"	m	struct:netdev_dpdk	file:
port_id	lib/netdev-dpdk.c	/^    int port_id;$/;"	m	struct:netdev_rxq_dpdk	file:
port_id	lib/stp.c	/^    int port_id;                    \/* 8.5.5.1: Unique port identifier. *\/$/;"	m	struct:stp_port	file:
port_id	ofproto/ofproto.h	/^    int port_id;$/;"	m	struct:ofproto_port_stp_status
port_id	ofproto/ofproto.h	/^    uint16_t port_id;$/;"	m	struct:ofproto_port_rstp_status
port_information_state_machine	lib/rstp-common.h	/^enum port_information_state_machine {$/;"	g
port_is_bond_fake_iface	vswitchd/bridge.c	/^port_is_bond_fake_iface(const struct port *port)$/;"	f	file:
port_is_fake_bridge	utilities/ovs-vsctl.c	/^port_is_fake_bridge(const struct ovsrec_port *port_cfg)$/;"	f	file:
port_is_lacp_current	ofproto/ofproto-dpif.c	/^port_is_lacp_current(const struct ofport *ofport_)$/;"	f	file:
port_is_lacp_current	ofproto/ofproto-provider.h	/^    int (*port_is_lacp_current)(const struct ofport *port);$/;"	m	struct:ofproto_class
port_is_synthetic	vswitchd/bridge.c	/^port_is_synthetic(const struct port *port)$/;"	f	file:
port_key_hint	ovn/northd/ovn-northd.c	/^    uint32_t port_key_hint;$/;"	m	struct:ovn_datapath	file:
port_list	lib/tnl-ports.c	/^static struct ovs_list port_list;$/;"	v	typeref:struct:ovs_list	file:
port_lookup	vswitchd/bridge.c	/^port_lookup(const struct bridge *br, const char *name)$/;"	f	file:
port_lru_node	lib/mac-learning.h	/^    struct ovs_list port_lru_node; \/* In mac_learning_port's "port_lru"s. *\/$/;"	m	struct:mac_entry	typeref:struct:mac_entry::ovs_list
port_lrus	lib/mac-learning.h	/^    struct ovs_list port_lrus;  \/* Contains "struct mac_entry"s by port_lru. *\/$/;"	m	struct:mac_learning_port	typeref:struct:mac_learning_port::ovs_list
port_mod_finish	ofproto/ofproto.c	/^port_mod_finish(struct ofconn *ofconn, struct ofputil_port_mod *pm,$/;"	f	file:
port_mod_start	ofproto/ofproto.c	/^port_mod_start(struct ofconn *ofconn, struct ofputil_port_mod *pm,$/;"	f	file:
port_modified	ofproto/ofproto-dpif.c	/^port_modified(struct ofport *port_)$/;"	f	file:
port_modified	ofproto/ofproto-provider.h	/^    void (*port_modified)(struct ofport *ofport);$/;"	m	struct:ofproto_class
port_mutex	lib/dpif-netdev.c	/^    struct ovs_mutex port_mutex;$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::ovs_mutex	file:
port_name	lib/ovs-lldp.h	/^    char *port_name;$/;"	m	struct:bridge_aa_vlan
port_name	lib/stp.c	/^    char *port_name;                \/* Human-readable name for log messages. *\/$/;"	m	struct:stp_port	file:
port_names	ovn/controller/encaps.c	/^    struct sset port_names;$/;"	m	struct:tunnel_ctx	typeref:struct:tunnel_ctx::sset	file:
port_no	datapath/vport.h	/^	u16 port_no;$/;"	m	struct:vport
port_no	datapath/vport.h	/^	u16 port_no;$/;"	m	struct:vport_parms
port_no	include/openflow/openflow-1.0.h	/^    ovs_be16 port_no;        \/* All ports if OFPP_ALL. *\/$/;"	m	struct:ofp10_queue_stats_request
port_no	include/openflow/openflow-1.0.h	/^    ovs_be16 port_no;        \/* OFPST_PORT message may request statistics$/;"	m	struct:ofp10_port_stats_request
port_no	include/openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_phy_port
port_no	include/openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_port_mod
port_no	include/openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_port_stats
port_no	include/openflow/openflow-1.0.h	/^    ovs_be16 port_no;$/;"	m	struct:ofp10_queue_stats
port_no	include/openflow/openflow-1.1.h	/^    ovs_be32 port_no;         \/* All ports if OFPP_ANY. *\/$/;"	m	struct:ofp11_queue_stats_request
port_no	include/openflow/openflow-1.1.h	/^    ovs_be32 port_no;        \/* OFPST_PORT message must request statistics$/;"	m	struct:ofp11_port_stats_request
port_no	include/openflow/openflow-1.1.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp11_port
port_no	include/openflow/openflow-1.1.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp11_port_mod
port_no	include/openflow/openflow-1.1.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp11_port_stats
port_no	include/openflow/openflow-1.1.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp11_queue_stats
port_no	include/openflow/openflow-1.4.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp14_port
port_no	include/openflow/openflow-1.4.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp14_port_mod
port_no	include/openflow/openflow-1.4.h	/^    ovs_be32 port_no;$/;"	m	struct:ofp14_port_stats
port_no	include/openflow/openflow-1.5.h	/^    ovs_be32 port_no;         \/* All ports if OFPP_ANY. *\/$/;"	m	struct:ofp15_port_desc_request
port_no	lib/dpif-netdev.c	/^    odp_port_t port_no;$/;"	m	struct:dp_netdev_port	file:
port_no	lib/dpif-netlink.h	/^    odp_port_t port_no;                    \/* ODPP_NONE if unknown. *\/$/;"	m	struct:dpif_netlink_vport
port_no	lib/dpif.h	/^    odp_port_t port_no;         \/* Port number within datapath. *\/$/;"	m	struct:dpif_port
port_no	lib/learning-switch.c	/^    ofp_port_t port_no;         \/* OpenFlow port number. *\/$/;"	m	struct:lswitch_port	file:
port_no	lib/netdev-windows.c	/^    uint32_t port_no;$/;"	m	struct:netdev_windows	file:
port_no	lib/netdev-windows.c	/^    uint32_t port_no;$/;"	m	struct:netdev_windows_netdev_info	file:
port_no	lib/odp-util.h	/^    odp_port_t port_no;         \/* Port number in the datapath. *\/$/;"	m	struct:odp_portno_names
port_no	lib/ofp-util.h	/^    ofp_port_t port_no;           \/* OFPP_ANY means "all ports". *\/$/;"	m	struct:ofputil_queue_stats_request
port_no	lib/ofp-util.h	/^    ofp_port_t port_no;$/;"	m	struct:ofputil_phy_port
port_no	lib/ofp-util.h	/^    ofp_port_t port_no;$/;"	m	struct:ofputil_port_mod
port_no	lib/ofp-util.h	/^    ofp_port_t port_no;$/;"	m	struct:ofputil_port_stats
port_no	lib/ofp-util.h	/^    ofp_port_t port_no;$/;"	m	struct:ofputil_queue_stats
port_no	lib/sflow.h	/^    u_int32_t port_no;$/;"	m	struct:__anon156
port_no	ofproto/pinsched.c	/^    ofp_port_t port_no;         \/* Port number. *\/$/;"	m	struct:pinqueue	file:
port_no	tests/test-rstp.c	/^    int port_no;$/;"	m	struct:bpdu	file:
port_no	tests/test-rstp.c	/^    int port_no;$/;"	m	struct:lan_conn	file:
port_no	tests/test-stp.c	/^    int port_no;$/;"	m	struct:bpdu	file:
port_no	tests/test-stp.c	/^    int port_no;$/;"	m	struct:lan_conn	file:
port_notifier	lib/dpif-netlink.c	/^    struct nl_sock *port_notifier; \/* vport multicast group subscriber. *\/$/;"	m	struct:dpif_netlink	typeref:struct:dpif_netlink::nl_sock	file:
port_num	ofproto/ofproto.h	/^    uint16_t port_num;           \/* In the range 1-4095, inclusive. *\/$/;"	m	struct:ofproto_port_rstp_settings
port_num	ofproto/ofproto.h	/^    uint8_t port_num;           \/* In the range 1-255, inclusive. *\/$/;"	m	struct:ofproto_port_stp_settings
port_open_type	lib/dpif-provider.h	/^    const char *(*port_open_type)(const struct dpif_class *dpif_class,$/;"	m	struct:dpif_class
port_open_type	ofproto/ofproto-dpif.c	/^port_open_type(const char *datapath_type, const char *port_type)$/;"	f	file:
port_open_type	ofproto/ofproto-provider.h	/^    const char *(*port_open_type)(const char *datapath_type,$/;"	m	struct:ofproto_class
port_poll	lib/dpif-provider.h	/^    int (*port_poll)(const struct dpif *dpif, char **devnamep);$/;"	m	struct:dpif_class
port_poll	ofproto/ofproto-dpif.c	/^port_poll(const struct ofproto *ofproto_, char **devnamep)$/;"	f	file:
port_poll	ofproto/ofproto-provider.h	/^    int (*port_poll)(const struct ofproto *ofproto, char **devnamep);$/;"	m	struct:ofproto_class
port_poll_errno	ofproto/ofproto-dpif.c	/^    int port_poll_errno;           \/* Last errno for port_poll() reply. *\/$/;"	m	struct:ofproto_dpif	file:
port_poll_set	ofproto/ofproto-dpif.c	/^    struct sset port_poll_set;     \/* Queued names for port_poll() reply. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::sset	file:
port_poll_wait	lib/dpif-provider.h	/^    void (*port_poll_wait)(const struct dpif *dpif);$/;"	m	struct:dpif_class
port_poll_wait	ofproto/ofproto-dpif.c	/^port_poll_wait(const struct ofproto *ofproto_)$/;"	f	file:
port_poll_wait	ofproto/ofproto-provider.h	/^    void (*port_poll_wait)(const struct ofproto *ofproto);$/;"	m	struct:ofproto_class
port_priority	lib/lacp.c	/^    uint16_t port_priority;       \/* Port Priority. *\/$/;"	m	struct:slave	file:
port_protocol_migration_state_machine	lib/rstp-common.h	/^enum port_protocol_migration_state_machine {$/;"	g
port_query_by_name	lib/dpif-provider.h	/^    int (*port_query_by_name)(const struct dpif *dpif, const char *devname,$/;"	m	struct:dpif_class
port_query_by_name	ofproto/ofproto-dpif.c	/^port_query_by_name(const struct ofproto *ofproto_, const char *devname,$/;"	f	file:
port_query_by_name	ofproto/ofproto-provider.h	/^    int (*port_query_by_name)(const struct ofproto *ofproto,$/;"	m	struct:ofproto_class
port_query_by_number	lib/dpif-provider.h	/^    int (*port_query_by_number)(const struct dpif *dpif, odp_port_t port_no,$/;"	m	struct:dpif_class
port_queues	lib/learning-switch.h	/^    const struct simap *port_queues;$/;"	m	struct:lswitch_config	typeref:struct:lswitch_config::simap
port_queues	utilities/ovs-testcontroller.c	/^static struct simap port_queues = SIMAP_INITIALIZER(&port_queues);$/;"	v	typeref:struct:simap	file:
port_receive_state_machine	lib/rstp-common.h	/^enum port_receive_state_machine {$/;"	g
port_reconfigured	ofproto/ofproto-dpif.c	/^port_reconfigured(struct ofport *port_, enum ofputil_port_config old_config)$/;"	f	file:
port_reconfigured	ofproto/ofproto-provider.h	/^    void (*port_reconfigured)(struct ofport *ofport,$/;"	m	struct:ofproto_class
port_ref	lib/dpif-netdev.c	/^port_ref(struct dp_netdev_port *port)$/;"	f	file:
port_refresh_bond_status	vswitchd/bridge.c	/^port_refresh_bond_status(struct port *port, bool force_update)$/;"	f	file:
port_refresh_rstp_status	vswitchd/bridge.c	/^port_refresh_rstp_status(struct port *port)$/;"	f	file:
port_refresh_stp_stats	vswitchd/bridge.c	/^port_refresh_stp_stats(struct port *port)$/;"	f	file:
port_refresh_stp_status	vswitchd/bridge.c	/^port_refresh_stp_status(struct port *port)$/;"	f	file:
port_role_selection_state_machine	lib/rstp-common.h	/^enum port_role_selection_state_machine {$/;"	g
port_role_transition_state_machine	lib/rstp-common.h	/^enum port_role_transition_state_machine {$/;"	g
port_run	ofproto/ofproto-dpif.c	/^port_run(struct ofport_dpif *ofport)$/;"	f	file:
port_security	ovn/lib/ovn-nb-idl.h	/^	char **port_security;$/;"	m	struct:nbrec_logical_port
port_seq	lib/dpif-netdev.c	/^    struct seq *port_seq;       \/* Incremented whenever a port changes. *\/$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::seq	file:
port_state_transition_state_machine	lib/rstp-common.h	/^enum port_state_transition_state_machine {$/;"	g
port_status_mask	include/openflow/nicira-ext.h	/^    ovs_be32 port_status_mask[2];  \/* Bitmasks of OFPRR_* values. *\/$/;"	m	struct:nx_async_config
port_status_mask	include/openflow/openflow-1.3.h	/^    ovs_be32 port_status_mask[2]; \/* Bitmasks of OFPPR_* values. *\/$/;"	m	struct:ofp13_async_config
port_tnlids	ovn/northd/ovn-northd.c	/^    struct hmap port_tnlids;$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::hmap	file:
port_transmit_state_machine	lib/rstp-common.h	/^enum port_transmit_state_machine {$/;"	g
port_try_ref	lib/dpif-netdev.c	/^port_try_ref(struct dp_netdev_port *port)$/;"	f	file:
port_unref	lib/dpif-netdev.c	/^port_unref(struct dp_netdev_port *port)$/;"	f	file:
port_vlan_mode	ofproto/ofproto.h	/^enum port_vlan_mode {$/;"	g
portid	datapath/datapath.h	/^	u32 portid;$/;"	m	struct:dp_upcall_info
portid	datapath/linux/compat/include/net/genetlink.h	17;"	d
portid_mutex	lib/netlink-socket.c	/^static struct ovs_mutex portid_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
portno	lib/tnl-ports.c	/^    odp_port_t portno;$/;"	m	struct:tnl_port_in	file:
ports	datapath/datapath.h	/^	struct hlist_head *ports;$/;"	m	struct:datapath	typeref:struct:datapath::hlist_head
ports	datapath/linux/compat/include/net/flow_keys.h	/^		__be32 ports;$/;"	m	union:flow_keys::__anon47
ports	lib/dpif-netdev.c	/^    struct cmap ports;$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::cmap	file:
ports	lib/stp.c	/^    struct stp_port ports[STP_MAX_PORTS];$/;"	m	struct:stp	typeref:struct:stp::stp_port	file:
ports	lib/vswitch-idl.h	/^	struct ovsrec_port **ports;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_port
ports	ofproto/ofproto-dpif-sflow.c	/^    struct hmap ports;          \/* Contains "struct dpif_sflow_port"s. *\/$/;"	m	struct:dpif_sflow	typeref:struct:dpif_sflow::hmap	file:
ports	ofproto/ofproto-dpif.c	/^    struct ovs_list ports;      \/* Contains "struct ofport"s. *\/$/;"	m	struct:ofbundle	typeref:struct:ofbundle::ovs_list	file:
ports	ofproto/ofproto-dpif.c	/^    struct sset ports;             \/* Set of standard port names. *\/$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::sset	file:
ports	ofproto/ofproto-provider.h	/^    struct hmap ports;          \/* Contains "struct ofport"s. *\/$/;"	m	struct:ofproto	typeref:struct:ofproto::hmap
ports	ovn/controller/lflow.c	/^    struct simap ports;         \/* Logical port name to port number. *\/$/;"	m	struct:logical_datapath	typeref:struct:logical_datapath::simap	file:
ports	ovn/lib/actions.c	/^    const struct simap *ports;  \/* Map from port name to number. *\/$/;"	m	struct:action_context	typeref:struct:action_context::simap	file:
ports	ovn/lib/ovn-nb-idl.h	/^	struct nbrec_logical_port **ports;$/;"	m	struct:nbrec_logical_switch	typeref:struct:nbrec_logical_switch::nbrec_logical_port
ports	ovn/lib/ovn-nb-idl.h	/^	struct nbrec_logical_router_port **ports;$/;"	m	struct:nbrec_logical_router	typeref:struct:nbrec_logical_router::nbrec_logical_router_port
ports	ovn/lib/ovn-sb-idl.h	/^	struct sbrec_port_binding **ports;$/;"	m	struct:sbrec_multicast_group	typeref:struct:sbrec_multicast_group::sbrec_port_binding
ports	ovn/northd/ovn-northd.c	/^    struct ovn_port **ports;$/;"	m	struct:ovn_multicast	typeref:struct:ovn_multicast::ovn_port	file:
ports	tests/test-rstp.c	/^    struct lan *ports[RSTP_MAX_PORTS];$/;"	m	struct:bridge	typeref:struct:bridge::lan	file:
ports	tests/test-stp.c	/^    struct lan *ports[STP_MAX_PORTS];$/;"	m	struct:bridge	typeref:struct:bridge::lan	file:
ports	utilities/ovs-vsctl.c	/^    struct ovs_list ports;      \/* Contains "struct vsctl_port"s. *\/$/;"	m	struct:vsctl_bridge	typeref:struct:vsctl_bridge::ovs_list	file:
ports	utilities/ovs-vsctl.c	/^    struct shash ports;     \/* Maps from port name to struct vsctl_port. *\/$/;"	m	struct:vsctl_context	typeref:struct:vsctl_context::shash	file:
ports	vswitchd/bridge.c	/^    struct hmap ports;          \/* "struct port"s indexed by name. *\/$/;"	m	struct:bridge	typeref:struct:bridge::hmap	file:
ports	vtep/vtep-ctl.c	/^    struct ovs_list ports;      \/* Contains "struct vteprec_physical_port"s. *\/$/;"	m	struct:vtep_ctl_pswitch	typeref:struct:vtep_ctl_pswitch::ovs_list	file:
ports	vtep/vtep-ctl.c	/^    struct shash ports;     \/* Maps from port name to struct vtep_ctl_port. *\/$/;"	m	struct:vtep_ctl_context	typeref:struct:vtep_ctl_context::shash	file:
ports	vtep/vtep-idl.h	/^	struct vteprec_physical_port **ports;$/;"	m	struct:vteprec_physical_switch	typeref:struct:vteprec_physical_switch::vteprec_physical_port
ports_by_ptr	lib/mac-learning.h	/^    struct hmap ports_by_ptr;   \/* struct mac_learning_port hmap_nodes. *\/$/;"	m	struct:mac_learning	typeref:struct:mac_learning::hmap
ports_by_usage	lib/mac-learning.h	/^    struct heap ports_by_usage; \/* struct mac_learning_port heap_nodes. *\/$/;"	m	struct:mac_learning	typeref:struct:mac_learning::heap
ports_mask_len	lib/classifier-private.h	/^    const int ports_mask_len;$/;"	m	struct:cls_subtable
ports_node	utilities/ovs-vsctl.c	/^    struct ovs_list ports_node;  \/* In struct vsctl_bridge's 'ports' list. *\/$/;"	m	struct:vsctl_port	typeref:struct:vsctl_port::ovs_list	file:
ports_node	vtep/vtep-ctl.c	/^    struct ovs_list ports_node; \/* In struct vtep_ctl_pswitch's 'ports' list. *\/$/;"	m	struct:vtep_ctl_port	typeref:struct:vtep_ctl_port::ovs_list	file:
ports_trie	lib/classifier-private.h	/^    rcu_trie_ptr ports_trie;                \/* NULL if none. *\/$/;"	m	struct:cls_subtable
pos	tests/test-rstp.c	/^static char *pos, *token;$/;"	v	file:
pos	tests/test-stp.c	/^static char *pos, *token;$/;"	v	file:
position	datapath-windows/ovsext/DpInternal.h	/^    uint32_t position[2];   \/* Offset hint to the start of flow dump. *\/$/;"	m	struct:OvsFlowDumpInput
position	datapath-windows/ovsext/DpInternal.h	/^    uint32_t position[2];$/;"	m	struct:OvsFlowDumpOutput
position	lib/dpif-netdev.c	/^    struct cmap_position position;$/;"	m	struct:dp_netdev_port_state	typeref:struct:dp_netdev_port_state::cmap_position	file:
possible_net_t	datapath/linux/compat/include/net/net_namespace.h	/^} possible_net_t;$/;"	t	typeref:struct:__anon49
post	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def post(self):$/;"	m	class:Datapath
post	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def post(self):$/;"	m	class:DatapathBridge
post	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def post(self):$/;"	m	class:DatapathVswitch
post_create	lib/db-ctl-base.c	/^post_create(struct ctl_context *ctx)$/;"	f	file:
post_db_reload_check_init	utilities/ovs-vsctl.c	/^post_db_reload_check_init(void)$/;"	f	file:
post_db_reload_do_checks	utilities/ovs-vsctl.c	/^post_db_reload_do_checks(const struct vsctl_context *vsctl_ctx)$/;"	f	file:
post_db_reload_expect_iface	utilities/ovs-vsctl.c	/^post_db_reload_expect_iface(const struct ovsrec_interface *iface)$/;"	f	file:
post_doit	datapath/linux/compat/include/net/genetlink.h	/^	void                    (*post_doit)(const struct genl_ops *ops,$/;"	m	struct:rpl_genl_family
postfork	python/ovs/timeval.py	/^def postfork():$/;"	f
postprocess	lib/db-ctl-base.h	/^    void (*postprocess)(struct ctl_context *ctx);$/;"	m	struct:ctl_command_syntax
pp	ofproto/ofproto-provider.h	/^    struct ofputil_phy_port pp;$/;"	m	struct:ofport	typeref:struct:ofport::ofputil_phy_port
ppid	vswitchd/system-stats.c	/^    pid_t ppid;                 \/* Parent. *\/$/;"	m	struct:raw_process_info	file:
pprint	utilities/bugtool/ovs-bugtool	/^import pprint$/;"	i
pr_alert_once	datapath/linux/compat/include/linux/kernel.h	32;"	d
pr_cont_once	datapath/linux/compat/include/linux/kernel.h	44;"	d
pr_crit_once	datapath/linux/compat/include/linux/kernel.h	34;"	d
pr_emerg_once	datapath/linux/compat/include/linux/kernel.h	30;"	d
pr_err_once	datapath/linux/compat/include/linux/kernel.h	36;"	d
pr_fmt	datapath/actions.c	19;"	d	file:
pr_fmt	datapath/datapath.c	19;"	d	file:
pr_fmt	datapath/flow_netlink.c	19;"	d	file:
pr_fmt	datapath/linux/actions.c	19;"	d	file:
pr_fmt	datapath/linux/compat/geneve.c	12;"	d	file:
pr_fmt	datapath/linux/compat/ip_tunnels_core.c	20;"	d	file:
pr_fmt	datapath/linux/compat/skbuff-openvswitch.c	10;"	d	file:
pr_fmt	datapath/linux/compat/vxlan.c	23;"	d	file:
pr_fmt	datapath/linux/datapath.c	19;"	d	file:
pr_fmt	datapath/linux/flow_netlink.c	19;"	d	file:
pr_fmt	datapath/linux/geneve.c	12;"	d	file:
pr_fmt	datapath/linux/ip_tunnels_core.c	20;"	d	file:
pr_fmt	datapath/linux/skbuff-openvswitch.c	10;"	d	file:
pr_fmt	datapath/linux/vport-geneve.c	10;"	d	file:
pr_fmt	datapath/linux/vport-gre.c	22;"	d	file:
pr_fmt	datapath/linux/vport-lisp.c	20;"	d	file:
pr_fmt	datapath/linux/vport-netdev.c	19;"	d	file:
pr_fmt	datapath/linux/vport-stt.c	10;"	d	file:
pr_fmt	datapath/linux/vport-vxlan.c	20;"	d	file:
pr_fmt	datapath/linux/vxlan.c	23;"	d	file:
pr_fmt	datapath/vport-geneve.c	10;"	d	file:
pr_fmt	datapath/vport-gre.c	22;"	d	file:
pr_fmt	datapath/vport-lisp.c	20;"	d	file:
pr_fmt	datapath/vport-netdev.c	19;"	d	file:
pr_fmt	datapath/vport-stt.c	10;"	d	file:
pr_fmt	datapath/vport-vxlan.c	20;"	d	file:
pr_info_once	datapath/linux/compat/include/linux/kernel.h	42;"	d
pr_notice_once	datapath/linux/compat/include/linux/kernel.h	40;"	d
pr_rule	ofproto/bond.c	/^    struct rule **pr_rule;$/;"	m	struct:bond_pr_rule_op	typeref:struct:bond_pr_rule_op::rule	file:
pr_rule	ofproto/bond.c	/^    struct rule *pr_rule;$/;"	m	struct:bond_entry	typeref:struct:bond_entry::rule	file:
pr_rule_ops	ofproto/bond.c	/^    struct hmap pr_rule_ops;     \/* Helps to maintain post recirculation rules.*\/$/;"	m	struct:bond	typeref:struct:bond::hmap	file:
pr_warn	datapath/linux/compat/include/linux/kernel.h	12;"	d
pr_warn_once	datapath/linux/compat/include/linux/kernel.h	38;"	d
prandom_u32	datapath/linux/compat/include/linux/random.h	7;"	d
pre_aa_mapping	utilities/ovs-vsctl.c	/^pre_aa_mapping(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_add	lib/db-ctl-base.c	/^pre_cmd_add(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_br_get_external_id	utilities/ovs-vsctl.c	/^pre_cmd_br_get_external_id(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_br_set_external_id	utilities/ovs-vsctl.c	/^pre_cmd_br_set_external_id(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_clear	lib/db-ctl-base.c	/^pre_cmd_clear(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_del_ssl	utilities/ovs-vsctl.c	/^pre_cmd_del_ssl(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_destroy	lib/db-ctl-base.c	/^pre_cmd_destroy(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_emer_reset	utilities/ovs-vsctl.c	/^pre_cmd_emer_reset(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_find	lib/db-ctl-base.c	/^pre_cmd_find(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_get	lib/db-ctl-base.c	/^pre_cmd_get(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_get_ssl	utilities/ovs-vsctl.c	/^pre_cmd_get_ssl(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_list	lib/db-ctl-base.c	/^pre_cmd_list(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_remove	lib/db-ctl-base.c	/^pre_cmd_remove(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_set	lib/db-ctl-base.c	/^pre_cmd_set(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_set_ssl	utilities/ovs-vsctl.c	/^pre_cmd_set_ssl(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_show	lib/db-ctl-base.c	/^pre_cmd_show(struct ctl_context *ctx)$/;"	f	file:
pre_cmd_wait_until	lib/db-ctl-base.c	/^pre_cmd_wait_until(struct ctl_context *ctx)$/;"	f	file:
pre_controller	utilities/ovs-vsctl.c	/^pre_controller(struct ctl_context *ctx)$/;"	f	file:
pre_create	lib/db-ctl-base.c	/^pre_create(struct ctl_context *ctx)$/;"	f	file:
pre_doit	datapath/linux/compat/include/net/genetlink.h	/^	int                     (*pre_doit)(const struct genl_ops *ops,$/;"	m	struct:rpl_genl_family
pre_get_column	lib/db-ctl-base.c	/^pre_get_column(struct ctl_context *ctx,$/;"	f	file:
pre_get_info	ovn/utilities/ovn-sbctl.c	/^pre_get_info(struct ctl_context *ctx)$/;"	f	file:
pre_get_info	utilities/ovs-vsctl.c	/^pre_get_info(struct ctl_context *ctx)$/;"	f	file:
pre_get_info	vtep/vtep-ctl.c	/^pre_get_info(struct ctl_context *ctx)$/;"	f	file:
pre_get_table	lib/db-ctl-base.c	/^pre_get_table(struct ctl_context *ctx, const char *table_name)$/;"	f	file:
pre_list_columns	lib/db-ctl-base.c	/^pre_list_columns(struct ctl_context *ctx,$/;"	f	file:
pre_manager	utilities/ovs-vsctl.c	/^pre_manager(struct ctl_context *ctx)$/;"	f	file:
pre_manager	vtep/vtep-ctl.c	/^pre_manager(struct ctl_context *ctx)$/;"	f	file:
pre_parse_column_key_value	lib/db-ctl-base.c	/^pre_parse_column_key_value(struct ctl_context *ctx,$/;"	f	file:
pre_to_nroff	python/build/nroff.py	/^def pre_to_nroff(nodes, para, font):$/;"	f
prec_level	include/openflow/openflow-1.3.h	/^    uint8_t     prec_level;  \/* Number of drop precedence level to add. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
prec_level	lib/ofp-util.h	/^    uint8_t prec_level;         \/* Non-zero if type == OFPMBT_DSCP_REMARK. *\/$/;"	m	struct:ofputil_meter_band
precommit_seqno	lib/ovsdb-idl.h	/^    unsigned int precommit_seqno;$/;"	m	struct:ovsdb_idl_loop
preconfigure	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def preconfigure(self, parent):$/;"	m	class:Datapath
preconfigure	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^    def preconfigure(self, parent):$/;"	m	class:DatapathBridge
preconfigure	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def preconfigure(self, parent):$/;"	m	class:DatapathVswitch
preferred_encap	ovn/controller/encaps.c	/^preferred_encap(const struct sbrec_chassis *chassis_rec)$/;"	f	file:
preferred_packet_in_format	utilities/ovs-ofctl.c	/^static int preferred_packet_in_format = -1;$/;"	v	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	datapath-windows/ovsext/IpHelper.h	/^    IP_ADDRESS_PREFIX prefix;$/;"	m	struct:_OVS_IPFORWARD_ENTRY
prefix	datapath/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	lib/classifier-private.h	/^    uint32_t prefix;           \/* Prefix bits for this node, MSB first. *\/$/;"	m	struct:trie_node
prefix	lib/syslog-provider.h	/^    const char *prefix;                \/* Prefix that is enforced by concrete$/;"	m	struct:syslogger
prefix_equal_bits	lib/classifier.c	/^prefix_equal_bits(uint32_t prefix, unsigned int n_bits, const ovs_be32 value[],$/;"	f	file:
prefix_fields	ofproto/ofproto.h	/^    enum mf_field_id prefix_fields[CLS_MAX_TRIES];$/;"	m	struct:ofproto_table_settings	typeref:enum:ofproto_table_settings::mf_field_id
prefix_output	utilities/bugtool/ovs-bugtool	/^def prefix_output(cap, prefix, newest_first=False, last_mod_time=None):$/;"	f
prefixes	lib/vswitch-idl.h	/^	char **prefixes;$/;"	m	struct:ovsrec_flow_table
prepare_dump_flows	utilities/ovs-ofctl.c	/^prepare_dump_flows(int argc, char *argv[], bool aggregate,$/;"	f	file:
prereqs	lib/meta-flow.h	/^    enum mf_prereqs prereqs;$/;"	m	struct:mf_field	typeref:enum:mf_field::mf_prereqs
prereqs	lib/ovsdb-idl-provider.h	/^    unsigned long int *prereqs; \/* Bitmap of columns to verify in "old". *\/$/;"	m	struct:ovsdb_idl_row
prereqs	ovn/lib/actions.c	/^    struct expr *prereqs;       \/* Prerequisites to apply to match. *\/$/;"	m	struct:action_context	typeref:struct:action_context::expr	file:
prereqs	ovn/lib/expr.h	/^    char *prereqs;$/;"	m	struct:expr_symbol
prerequisites	lib/db-ctl-base.h	/^    void (*prerequisites)(struct ctl_context *ctx);$/;"	m	struct:ctl_command_syntax
present	lib/tun-metadata.h	/^    } present;$/;"	m	struct:tun_metadata	typeref:union:tun_metadata::__anon160
pretty	tests/test-json.c	/^static int pretty = 0;$/;"	v	file:
prettyDict	utilities/bugtool/ovs-bugtool	/^def prettyDict(d):$/;"	f
prev	include/openvswitch/list.h	/^    struct ovs_list *prev;     \/* Previous list element. *\/$/;"	m	struct:ovs_list	typeref:struct:ovs_list::ovs_list
prev_offset	ovsdb/log.c	/^    off_t prev_offset;$/;"	m	struct:ovsdb_log	file:
printCIDLHeader	ovsdb/ovsdb-idlc	/^def printCIDLHeader(schemaFile):$/;"	f
printCIDLSource	ovsdb/ovsdb-idlc	/^def printCIDLSource(schemaFile):$/;"	f
printEdge	ovsdb/ovsdb-dot	/^def printEdge(tableName, type, baseType, label):$/;"	f
printEnum	ovsdb/ovsdb-idlc	/^def printEnum(members):$/;"	f
print_and_free	lib/ofp-print.c	/^print_and_free(FILE *stream, char *string)$/;"	f	file:
print_and_free_json	ovsdb/ovsdb-client.c	/^print_and_free_json(struct json *json)$/;"	f	file:
print_and_free_json	ovsdb/ovsdb-tool.c	/^print_and_free_json(struct json *json)$/;"	f	file:
print_and_free_json	tests/test-json.c	/^print_and_free_json(struct json *json)$/;"	f	file:
print_and_free_json	tests/test-jsonrpc.c	/^print_and_free_json(struct json *json)$/;"	f	file:
print_and_free_json	tests/test-ovsdb.c	/^print_and_free_json(struct json *json)$/;"	f	file:
print_and_free_ovsdb_error	tests/test-ovsdb.c	/^print_and_free_ovsdb_error(struct ovsdb_error *error)$/;"	f	file:
print_capabilities	utilities/bugtool/ovs-bugtool	/^def print_capabilities():$/;"	f
print_cmap	tests/test-cmap.c	/^print_cmap(const char *name, struct cmap *cmap)$/;"	f	file:
print_command_arguments	lib/db-ctl-base.c	/^print_command_arguments(const struct ctl_command_syntax *command)$/;"	f	file:
print_db_changes	ovsdb/ovsdb-tool.c	/^print_db_changes(struct shash *tables, struct shash *names,$/;"	f	file:
print_differences	utilities/ovs-ofctl.c	/^print_differences(const char *prefix,$/;"	f	file:
print_enum	build-aux/extract-ofp-errors	/^def print_enum(tag, constants, storage_class):$/;"	f
print_function	python/setup.py	/^from __future__ import print_function$/;"	i
print_geneve_table	lib/ofp-print.c	/^print_geneve_table(struct ds *s, struct ovs_list *mappings)$/;"	f	file:
print_heap	tests/test-heap.c	/^print_heap(const char *name, struct heap *heap)$/;"	f	file:
print_hex	tests/test-sflow.c	/^print_hex(const char *a, int len, char *buf, int bufLen)$/;"	f	file:
print_hindex	tests/test-hindex.c	/^print_hindex(const char *name, struct hindex *hindex)$/;"	f	file:
print_human_size	lib/dpctl.c	/^print_human_size(struct dpctl_params *dpctl_p, uint64_t value)$/;"	f	file:
print_idl	tests/test-ovsdb.c	/^print_idl(struct ovsdb_idl *idl, int step)$/;"	f	file:
print_idl	tests/test-ovsdb.py	/^def print_idl(idl, step):$/;"	f
print_ints	tests/test-cmap.c	/^print_ints(const char *name, const int *values, size_t n)$/;"	f	file:
print_ints	tests/test-hindex.c	/^print_ints(const char *name, const int *values, size_t n)$/;"	f	file:
print_ip_netmask	lib/ofp-print.c	/^print_ip_netmask(struct ds *string, const char *leader, ovs_be32 ip,$/;"	f	file:
print_ipfix_entity_macros	ofproto/ipfix-gen-entities	/^def print_ipfix_entity_macros(xml_file):$/;"	f
print_ipv6_addr	lib/packets.c	/^print_ipv6_addr(struct ds *string, const struct in6_addr *addr)$/;"	f
print_ipv6_mapped	lib/packets.c	/^print_ipv6_mapped(struct ds *s, const struct in6_addr *addr)$/;"	f
print_ipv6_masked	lib/packets.c	/^print_ipv6_masked(struct ds *s, const struct in6_addr *addr,$/;"	f
print_json	ovsdb/ovsdb-client.c	/^print_json(struct json *json)$/;"	f	file:
print_json	tests/test-json.py	/^def print_json(json):$/;"	f
print_lswitch	ovn/utilities/ovn-nbctl.c	/^print_lswitch(const struct nbrec_logical_switch *lswitch, struct ds *s)$/;"	f	file:
print_netflow	tests/test-netflow.c	/^print_netflow(struct ofpbuf *buf)$/;"	f	file:
print_port_stat	lib/ofp-print.c	/^print_port_stat(struct ds *string, const char *leader, uint64_t stat, int more)$/;"	f	file:
print_queue_rate	lib/ofp-print.c	/^print_queue_rate(struct ds *string, const char *name, unsigned int rate)$/;"	f	file:
print_safe	utilities/ovs-vlan-test	/^def print_safe(s):$/;"	f
print_safe_lock	utilities/ovs-vlan-test	/^print_safe_lock = threading.Lock()$/;"	v
print_sflow	tests/test-sflow.c	/^print_sflow(struct ofpbuf *buf)$/;"	f	file:
print_stat	lib/dpctl.c	/^print_stat(struct dpctl_params *dpctl_p, const char *leader, uint64_t value)$/;"	f	file:
print_statistics	lib/dpctl.h	/^    bool print_statistics;$/;"	m	struct:dpctl_params
print_struct_ipv4	tests/test-sflow.c	/^print_struct_ipv4(struct sflow_xdr *x, const char *prefix)$/;"	f	file:
print_table_action_features	lib/ofp-print.c	/^print_table_action_features(struct ds *s,$/;"	f	file:
print_table_instruction_features	lib/ofp-print.c	/^print_table_instruction_features($/;"	f	file:
print_tree_shape	tests/test-ovn.c	/^print_tree_shape(const struct tree_shape ts[], int n_tses)$/;"	f	file:
print_vconn_debug	tests/system-kmod-testsuite	/^print_vconn_debug () { awk -F\\| < ovs-vswitchd.log '$/;"	f
print_vconn_debug	tests/system-userspace-testsuite	/^print_vconn_debug () { awk -F\\| < ovs-vswitchd.log '$/;"	f
print_vconn_debug	tests/testsuite	/^print_vconn_debug () { awk -F\\| < ovs-vswitchd.log '$/;"	f
print_wild	lib/ofp-print.c	/^static void print_wild(struct ds *string, const char *leader, int is_wild,$/;"	f	file:
print_wild_port	lib/ofp-print.c	/^print_wild_port(struct ds *string, const char *leader, int is_wild,$/;"	f	file:
printf_stderr	utilities/ovs-appctl-bashcomp.bash	/^printf_stderr() {$/;"	f
printk_once	datapath/linux/compat/include/linux/kernel.h	19;"	d
printk_once	datapath/linux/compat/include/linux/kernel.h	20;"	d
priority	datapath-windows/ovsext/Ethernet.h	/^           priority:3,         \/\/ 802.1p priority tag$/;"	m	struct:Eth_802_1pq_Tag
priority	datapath-windows/ovsext/NetProto.h	/^    UINT8    priority:4,$/;"	m	struct:IPv6Hdr
priority	datapath/flow.h	/^		u32	priority;	\/* Packet QoS priority. *\/$/;"	m	struct:sw_flow_key::__anon27
priority	datapath/linux/compat/include/net/gre.h	/^	u8 priority;$/;"	m	struct:gre_cisco_protocol
priority	include/openflow/nicira-ext.h	/^    ovs_be16 priority;            \/* Priority level of flow entry. *\/$/;"	m	struct:nx_flow_mod
priority	include/openflow/nicira-ext.h	/^    ovs_be16 priority;          \/* Priority of the entry. *\/$/;"	m	struct:nx_flow_update_full
priority	include/openflow/nicira-ext.h	/^    ovs_be16 priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:nx_flow_removed
priority	include/openflow/nicira-ext.h	/^    ovs_be16 priority;        \/* Priority of the entry. *\/$/;"	m	struct:nx_flow_stats
priority	include/openflow/openflow-1.0.h	/^    ovs_be16 priority;            \/* Priority level of flow entry. *\/$/;"	m	struct:ofp10_flow_mod
priority	include/openflow/openflow-1.0.h	/^    ovs_be16 priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:ofp10_flow_removed
priority	include/openflow/openflow-1.0.h	/^    ovs_be16 priority;        \/* Priority of the entry. Only meaningful$/;"	m	struct:ofp10_flow_stats
priority	include/openflow/openflow-1.1.h	/^    ovs_be16 priority;           \/* Priority level of flow entry. *\/$/;"	m	struct:ofp11_flow_mod
priority	include/openflow/openflow-1.1.h	/^    ovs_be16 priority;         \/* Priority of the entry. Only meaningful$/;"	m	struct:ofp11_flow_stats
priority	include/openflow/openflow-1.1.h	/^    ovs_be16 priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:ofp11_flow_removed
priority	include/openflow/openflow-1.2.h	/^    ovs_be16 priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:ofp12_flow_removed
priority	lib/classifier-private.h	/^    const int priority;         \/* Larger numbers are higher priorities. *\/$/;"	m	struct:cls_match
priority	lib/classifier.c	/^    int priority;               \/* Cached copy of match->priority. *\/$/;"	m	struct:cls_conjunction_set	file:
priority	lib/classifier.h	/^    const int priority;           \/* Larger numbers are higher priorities. *\/$/;"	m	struct:cls_rule
priority	lib/heap.h	/^    uint64_t priority;$/;"	m	struct:heap_node
priority	lib/lacp.h	/^    uint16_t priority;                \/* Port priority. *\/$/;"	m	struct:lacp_slave_settings
priority	lib/lacp.h	/^    uint16_t priority;                \/* System priority. *\/$/;"	m	struct:lacp_settings
priority	lib/netdev-linux.c	/^    unsigned int priority;      \/* Lower values are higher priorities. *\/$/;"	m	struct:htb_class	file:
priority	lib/ofp-actions.c	/^    ovs_be16 priority;          \/* Priority level of flow entry. *\/$/;"	m	struct:nx_action_learn	file:
priority	lib/ofp-actions.h	/^    uint16_t priority;          \/* Priority level of flow entry. *\/$/;"	m	struct:ofpact_learn
priority	lib/ofp-util.h	/^    int priority;$/;"	m	struct:ofputil_flow_mod
priority	lib/ofp-util.h	/^    uint16_t priority;$/;"	m	struct:ofputil_flow_removed
priority	lib/ofp-util.h	/^    uint16_t priority;$/;"	m	struct:ofputil_flow_stats
priority	lib/ofp-util.h	/^    uint16_t priority;$/;"	m	struct:ofputil_flow_update
priority	lib/ovs-router.c	/^    uint8_t priority;$/;"	m	struct:ovs_router_entry	file:
priority	lib/pvector.h	/^    int priority;$/;"	m	struct:pvector_entry
priority	lib/sflow.h	/^    u_int32_t priority;     \/* IP priority *\/$/;"	m	struct:_SFLSampled_ipv6
priority	ofproto/in-band.c	/^    int priority;$/;"	m	struct:in_band_rule	file:
priority	ofproto/ofproto.h	/^    uint16_t priority;$/;"	m	struct:ofproto_rstp_settings
priority	ofproto/ofproto.h	/^    uint16_t priority;$/;"	m	struct:ofproto_stp_settings
priority	ofproto/ofproto.h	/^    uint8_t priority;$/;"	m	struct:ofproto_port_rstp_settings
priority	ofproto/ofproto.h	/^    uint8_t priority;$/;"	m	struct:ofproto_port_stp_settings
priority	ovn/controller/ofctrl.c	/^    uint16_t priority;$/;"	m	struct:ovn_flow	file:
priority	ovn/lib/ovn-nb-idl.h	/^	int64_t priority;$/;"	m	struct:nbrec_acl
priority	ovn/lib/ovn-sb-idl.h	/^	int64_t priority;$/;"	m	struct:sbrec_logical_flow
priority	ovn/northd/ovn-northd.c	/^    uint16_t priority;$/;"	m	struct:ovn_lflow	file:
priv	datapath-windows/ovsext/Vport.h	/^    PVOID                  priv;$/;"	m	struct:_OVS_VPORT_ENTRY
private_key	lib/stream-ssl.c	/^static struct ssl_config_file private_key;$/;"	v	typeref:struct:ssl_config_file	file:
private_key	lib/vswitch-idl.h	/^	char *private_key;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_ssl
private_key_file	ovsdb/ovsdb-server.c	/^static char *private_key_file;$/;"	v	file:
probability	lib/odp-util.h	/^        uint16_t probability;   \/* Sampling probability. *\/$/;"	m	struct:user_action_cookie::__anon125
probability	lib/ofp-actions.c	/^    ovs_be16 probability;           \/* Fraction of packets to sample. *\/$/;"	m	struct:nx_action_sample	file:
probability	lib/ofp-actions.h	/^    uint16_t probability;  \/\/ Always >0.$/;"	m	struct:ofpact_sample
probability	ofproto/ofproto-dpif-ipfix.c	/^    uint32_t probability;$/;"	m	struct:dpif_ipfix_bridge_exporter	file:
probability	ofproto/ofproto-dpif-sflow.c	/^    uint32_t probability;$/;"	m	struct:dpif_sflow	file:
probably_admitted	lib/rconn.c	/^    bool probably_admitted;$/;"	m	struct:rconn	file:
probe	lib/dpif-netlink.c	/^    bool probe;                         \/* OVS_FLOW_ATTR_PROBE. *\/$/;"	m	struct:dpif_netlink_flow	file:
probe	lib/dpif.h	/^    bool probe;                     \/* Suppress error messages. *\/$/;"	m	struct:dpif_execute
probe_interval	lib/rconn.c	/^    int probe_interval;         \/* Secs of inactivity before sending probe. *\/$/;"	m	struct:rconn	file:
probe_interval	lib/reconnect.c	/^    int probe_interval;$/;"	m	struct:reconnect	file:
probe_interval	ofproto/connmgr.c	/^    int probe_interval;         \/* Max idle time before probing, in seconds. *\/$/;"	m	struct:ofservice	file:
probe_interval	ofproto/ofproto.h	/^    int probe_interval;         \/* Max idle time before probing, in seconds. *\/$/;"	m	struct:ofproto_controller
probe_interval	ovsdb/jsonrpc-server.h	/^    int probe_interval;         \/* Max idle time before probing, in msec. *\/$/;"	m	struct:ovsdb_jsonrpc_options
proc_pkt	lib/netdev-bsd.c	/^proc_pkt(u_char *args_, const struct pcap_pkthdr *hdr, const u_char *packet)$/;"	f	file:
process	lib/process.c	/^VLOG_DEFINE_THIS_MODULE(process);$/;"	v
process	lib/process.c	/^struct process {$/;"	s	file:
process	python/ovs/daemon.py	/^import ovs.process$/;"	i
process_command	lib/unixctl.c	/^process_command(struct unixctl_conn *conn, struct jsonrpc_msg *request)$/;"	f	file:
process_counter_sample	tests/test-sflow.c	/^process_counter_sample(struct sflow_xdr *x)$/;"	f	file:
process_datagram	tests/test-sflow.c	/^process_datagram(struct sflow_xdr *x)$/;"	f	file:
process_deferred_actions	datapath/actions.c	/^static void process_deferred_actions(struct datapath *dp)$/;"	f	file:
process_deferred_actions	datapath/linux/actions.c	/^static void process_deferred_actions(struct datapath *dp)$/;"	f	file:
process_destroy	lib/process.c	/^process_destroy(struct process *p)$/;"	f
process_dpif_all_ports_changed	ofproto/ofproto-dpif.c	/^process_dpif_all_ports_changed(struct dpif_backer *backer)$/;"	f	file:
process_dpif_port_change	ofproto/ofproto-dpif.c	/^process_dpif_port_change(struct dpif_backer *backer, const char *devname)$/;"	f	file:
process_dpif_port_changes	ofproto/ofproto-dpif.c	/^process_dpif_port_changes(struct dpif_backer *backer)$/;"	f	file:
process_dpif_port_error	ofproto/ofproto-dpif.c	/^process_dpif_port_error(struct dpif_backer *backer, int error)$/;"	f	file:
process_echo_request	lib/learning-switch.c	/^process_echo_request(struct lswitch *sw, const struct ofp_header *rq)$/;"	f	file:
process_escape_args	lib/process.c	/^process_escape_args(char **argv)$/;"	f
process_exited	lib/process.c	/^process_exited(struct process *p)$/;"	f
process_flow_sample	tests/test-sflow.c	/^process_flow_sample(struct sflow_xdr *x)$/;"	f	file:
process_info	vswitchd/system-stats.c	/^struct process_info {$/;"	s	file:
process_init	lib/process.c	/^process_init(void)$/;"	f
process_kill	lib/process.c	/^process_kill(const struct process *p, int signr)$/;"	f
process_name	lib/process.c	/^process_name(const struct process *p)$/;"	f
process_packet_in	lib/learning-switch.c	/^process_packet_in(struct lswitch *sw, const struct ofp_header *oh)$/;"	f	file:
process_pid	lib/process.c	/^process_pid(const struct process *p)$/;"	f
process_port_change	ofproto/ofproto.c	/^process_port_change(struct ofproto *ofproto, int error, char *devname)$/;"	f	file:
process_prestart	lib/process.c	/^process_prestart(char **argv)$/;"	f	file:
process_register	lib/process.c	/^process_register(const char *name, pid_t pid)$/;"	f	file:
process_run	lib/process.c	/^process_run(void)$/;"	f
process_search_path	lib/process.c	/^process_search_path(const char *name)$/;"	f
process_special	ofproto/ofproto-dpif-xlate.c	/^process_special(struct xlate_ctx *ctx, const struct xport *xport)$/;"	f	file:
process_start	lib/process.c	/^COVERAGE_DEFINE(process_start);$/;"	v
process_start	lib/process.c	/^process_start(char **argv, struct process **pp)$/;"	f
process_status	lib/process.c	/^process_status(const struct process *p)$/;"	f
process_status_msg	lib/process.c	/^process_status_msg(int status)$/;"	f
process_switch_features	lib/learning-switch.c	/^process_switch_features(struct lswitch *sw, struct ofp_header *oh)$/;"	f	file:
process_upcall	ofproto/ofproto-dpif-upcall.c	/^process_upcall(struct udpif *udpif, struct upcall *upcall,$/;"	f	file:
process_vhost_flags	lib/netdev-dpdk.c	/^process_vhost_flags(char *flag, char *default_val, int size,$/;"	f	file:
process_wait	lib/process.c	/^process_wait(struct process *p)$/;"	f
proctitle_mutex	lib/command-line.c	/^static struct ovs_mutex proctitle_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
program_details	build-aux/missing	/^program_details ()$/;"	f
program_name	lib/util.c	/^char *program_name;$/;"	v
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	datapath/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_version	lib/util.c	/^static char *program_version;$/;"	v	file:
prop_header	include/openflow/openflow-common.h	/^    struct ofp_queue_prop_header prop_header;$/;"	m	struct:ofp_queue_prop_rate	typeref:struct:ofp_queue_prop_rate::ofp_queue_prop_header
properties	include/openflow/openflow-1.4.h	/^    struct ofp14_async_config_prop_header properties[0];$/;"	m	struct:ofp14_async_config	typeref:struct:ofp14_async_config::ofp14_async_config_prop_header
property	include/openflow/openflow-common.h	/^    ovs_be16 property; \/* One of OFPQT_. *\/$/;"	m	struct:ofp_queue_prop_header
props	lib/ofp-util.h	/^    struct ofputil_group_props props; \/* Group properties. *\/$/;"	m	struct:ofputil_group_desc	typeref:struct:ofputil_group_desc::ofputil_group_props
props	lib/ofp-util.h	/^    struct ofputil_group_props props; \/* Group properties. *\/$/;"	m	struct:ofputil_group_mod	typeref:struct:ofputil_group_mod::ofputil_group_props
props	ofproto/ofproto-provider.h	/^    const struct ofputil_group_props props;$/;"	m	struct:ofgroup	typeref:struct:ofgroup::ofputil_group_props
proto	datapath/flow.h	/^			u8     proto;	\/* IP protocol or lower 8 bits of ARP opcode. *\/$/;"	m	struct:sw_flow_key::__anon29::__anon31
proto	datapath/linux/compat/include/net/ip_tunnels.h	/^	__be16 proto;$/;"	m	struct:tnl_ptk_info
proto_abbrev	lib/ofp-util.c	/^struct proto_abbrev {$/;"	s	file:
proto_abbrevs	lib/ofp-util.c	/^static const struct proto_abbrev proto_abbrevs[] = {$/;"	v	typeref:struct:proto_abbrev	file:
proto_ports_offset	datapath/linux/compat/include/linux/in.h	/^static inline int proto_ports_offset(int proto)$/;"	f
proto_type	datapath/linux/compat/include/net/geneve.h	/^	__be16 proto_type;$/;"	m	struct:genevehdr
proto_type	lib/geneve.h	/^    ovs_be16 proto_type;$/;"	m	struct:genevehdr
protocol	datapath-windows/ovsext/NetProto.h	/^   UINT8    protocol;$/;"	m	struct:IPHdr
protocol	datapath-windows/ovsext/NetProto.h	/^   UINT8    protocol;$/;"	m	struct:PseudoHdr
protocol	datapath-windows/ovsext/NetProto.h	/^   UINT8    protocol;$/;"	m	struct:PseudoHdrIPv6
protocol	datapath/linux/compat/include/net/gre.h	/^	__be16 protocol;$/;"	m	struct:gre_base_hdr
protocol	lib/learning-switch.c	/^    enum ofputil_protocol protocol;$/;"	m	struct:lswitch	typeref:enum:lswitch::ofputil_protocol	file:
protocol	lib/lldp/lldpd.h	/^struct protocol {$/;"	s
protocol	lib/netlink-notifier.c	/^    int protocol;                \/* Protocol passed to nl_sock_create(). *\/$/;"	m	struct:nln	file:
protocol	lib/netlink-socket.c	/^    int protocol;$/;"	m	struct:nl_sock	file:
protocol	lib/ofp-parse.c	/^struct protocol {$/;"	s	file:
protocol	lib/ofp-util.c	/^    enum ofputil_protocol protocol;$/;"	m	struct:proto_abbrev	typeref:enum:proto_abbrev::ofputil_protocol	file:
protocol	lib/packets.h	/^    ovs_be16 protocol;$/;"	m	struct:gre_base_hdr
protocol	lib/sflow.h	/^    u_int32_t protocol;     \/* IP Protocol type (for example, TCP = 6, UDP = 17) *\/$/;"	m	struct:_SFLSampled_ipv6
protocol	lib/sflow.h	/^    u_int32_t protocol;    \/* IP Protocol type (for example, TCP = 6, UDP = 17) *\/$/;"	m	struct:_SFLSampled_ipv4
protocol	ofproto/connmgr.c	/^    enum ofputil_protocol protocol; \/* Current protocol variant. *\/$/;"	m	struct:ofconn	typeref:enum:ofconn::ofputil_protocol	file:
protocol	python/ovstest/tcp.py	/^    protocol = TcpListenerConnection$/;"	v	class:TcpListenerFactory
protocol	python/ovstest/tcp.py	/^    protocol = TcpSenderConnection$/;"	v	class:TcpSenderFactory
protocol	vtep/vtep-idl.h	/^	int64_t *protocol;$/;"	m	struct:vteprec_acl_entry
protocols	lib/vswitch-idl.h	/^	char **protocols;$/;"	m	struct:ovsrec_bridge
protocols_to_c	build-aux/extract-ofp-fields	/^def protocols_to_c(protocols):$/;"	f
protos	lib/lldp/lldpd.c	/^static struct protocol protos[] =$/;"	v	typeref:struct:protocol	file:
prototype	build-aux/extract-ofp-actions	/^            prototype = "static enum ofperr decode_%s(" % enum$/;"	v
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
provider_meter_id	ofproto/ofproto.c	/^    ofproto_meter_id provider_meter_id;$/;"	m	struct:meter	file:
ps	include/openflow/openflow-1.3.h	/^    struct ofp11_port_stats ps;$/;"	m	struct:ofp13_port_stats	typeref:struct:ofp13_port_stats::ofp11_port_stats
ps	utilities/ovs-l3ping	/^            ps = get_packet_sizes(me, he, args.client[0])$/;"	v
ps	utilities/ovs-test	/^            ps = util.get_datagram_sizes(mtu_node1, mtu_node2)$/;"	v
ps	vtep/vtep-ctl.c	/^    struct vtep_ctl_pswitch *ps;$/;"	m	struct:vtep_ctl_port	typeref:struct:vtep_ctl_port::vtep_ctl_pswitch	file:
ps_cfg	vtep/vtep-ctl.c	/^    const struct vteprec_physical_switch *ps_cfg;$/;"	m	struct:vtep_ctl_pswitch	typeref:struct:vtep_ctl_pswitch::vteprec_physical_switch	file:
ps_name	vtep/ovs-vtep	/^ps_name = ""$/;"	v
ps_type	vtep/ovs-vtep	/^ps_type = ""$/;"	v
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	datapath/Makefile	/^psdir = ${docdir}$/;"	m
psep	Makefile	/^psep = ":"$/;"	m
psh	datapath-windows/ovsext/NetProto.h	/^             psh:1,$/;"	m	struct:TCPHdr
psh1	datapath-windows/ovsext/resource.h	1227;"	d
psh10	datapath-windows/ovsext/resource.h	1237;"	d
psh11	datapath-windows/ovsext/resource.h	1238;"	d
psh12	datapath-windows/ovsext/resource.h	1239;"	d
psh13	datapath-windows/ovsext/resource.h	1240;"	d
psh14	datapath-windows/ovsext/resource.h	1241;"	d
psh15	datapath-windows/ovsext/resource.h	1242;"	d
psh16	datapath-windows/ovsext/resource.h	1243;"	d
psh2	datapath-windows/ovsext/resource.h	1229;"	d
psh3	datapath-windows/ovsext/resource.h	1230;"	d
psh4	datapath-windows/ovsext/resource.h	1231;"	d
psh5	datapath-windows/ovsext/resource.h	1232;"	d
psh6	datapath-windows/ovsext/resource.h	1233;"	d
psh7	datapath-windows/ovsext/resource.h	1234;"	d
psh8	datapath-windows/ovsext/resource.h	1235;"	d
psh9	datapath-windows/ovsext/resource.h	1236;"	d
psk_file	debian/ovs-monitor-ipsec	/^    psk_file = "\/etc\/racoon\/psk.txt"$/;"	v	class:Racoon
pskb_expand_head	datapath/linux/compat/include/linux/skbuff.h	14;"	d
pskb_expand_head	datapath/linux/compat/skbuff-openvswitch.c	256;"	d	file:
pskb_expand_head	datapath/linux/skbuff-openvswitch.c	256;"	d	file:
pssl_accept	lib/stream-ssl.c	/^pssl_accept(struct pstream *pstream, struct stream **new_streamp)$/;"	f	file:
pssl_close	lib/stream-ssl.c	/^pssl_close(struct pstream *pstream)$/;"	f	file:
pssl_open	lib/stream-ssl.c	/^pssl_open(const char *name OVS_UNUSED, char *suffix, struct pstream **pstreamp,$/;"	f	file:
pssl_pstream	lib/stream-ssl.c	/^struct pssl_pstream$/;"	s	file:
pssl_pstream_cast	lib/stream-ssl.c	/^pssl_pstream_cast(struct pstream *pstream)$/;"	f	file:
pssl_pstream_class	lib/stream-ssl.c	/^const struct pstream_class pssl_pstream_class = {$/;"	v	typeref:struct:pstream_class
pssl_pstream_class	lib/stream-ssl.c	/^const struct pstream_class pssl_pstream_class;$/;"	v	typeref:struct:pstream_class
pssl_pvconn_class	lib/vconn-stream.c	/^const struct pvconn_class pssl_pvconn_class = PSTREAM_INIT("pssl");$/;"	v	typeref:struct:pvconn_class
pssl_wait	lib/stream-ssl.c	/^pssl_wait(struct pstream *pstream)$/;"	f	file:
pstream	lib/jsonrpc.c	/^    struct pstream *pstream;$/;"	m	struct:jsonrpc_session	typeref:struct:jsonrpc_session::pstream	file:
pstream	lib/netdev-dummy.c	/^    struct pstream *pstream;$/;"	m	struct:dummy_packet_pconn	typeref:struct:dummy_packet_pconn::pstream	file:
pstream	lib/stream-fd.c	/^    struct pstream pstream;$/;"	m	struct:fd_pstream	typeref:struct:fd_pstream::pstream	file:
pstream	lib/stream-provider.h	/^struct pstream {$/;"	s
pstream	lib/stream-ssl.c	/^    struct pstream pstream;$/;"	m	struct:pssl_pstream	typeref:struct:pssl_pstream::pstream	file:
pstream	lib/vconn-stream.c	/^    struct pstream *pstream;$/;"	m	struct:pvconn_pstream	typeref:struct:pvconn_pstream::pstream	file:
pstream	tests/test-vconn.c	/^    struct pstream *pstream;$/;"	m	struct:fake_pvconn	typeref:struct:fake_pvconn::pstream	file:
pstream_accept	lib/stream.c	/^pstream_accept(struct pstream *pstream, struct stream **new_stream)$/;"	f
pstream_accept_block	lib/stream.c	/^pstream_accept_block(struct pstream *pstream, struct stream **new_stream)$/;"	f
pstream_assert_class	lib/stream-provider.h	/^static inline void pstream_assert_class(const struct pstream *pstream,$/;"	f
pstream_class	lib/stream-provider.h	/^struct pstream_class {$/;"	s
pstream_classes	lib/stream.c	/^static const struct pstream_class *pstream_classes[] = {$/;"	v	typeref:struct:pstream_class	file:
pstream_close	lib/stream.c	/^pstream_close(struct pstream *pstream)$/;"	f
pstream_get_bound_port	lib/stream.c	/^pstream_get_bound_port(const struct pstream *pstream)$/;"	f
pstream_get_name	lib/stream.c	/^pstream_get_name(const struct pstream *pstream)$/;"	f
pstream_init	lib/stream.c	/^pstream_init(struct pstream *pstream, const struct pstream_class *class,$/;"	f
pstream_lookup_class	lib/stream.c	/^pstream_lookup_class(const char *name, const struct pstream_class **classp)$/;"	f	file:
pstream_open	lib/stream.c	/^COVERAGE_DEFINE(pstream_open);$/;"	v
pstream_open	lib/stream.c	/^pstream_open(const char *name, struct pstream **pstreamp, uint8_t dscp)$/;"	f
pstream_open_with_default_port	lib/stream.c	/^pstream_open_with_default_port(const char *name_,$/;"	f
pstream_pvconn_class	lib/vconn-stream.c	/^static const struct pvconn_class pstream_pvconn_class = PSTREAM_INIT("pstream");$/;"	v	typeref:struct:pvconn_class	file:
pstream_pvconn_class	lib/vconn-stream.c	/^static const struct pvconn_class pstream_pvconn_class;$/;"	v	typeref:struct:pvconn_class	file:
pstream_set_bound_port	lib/stream.c	/^pstream_set_bound_port(struct pstream *pstream, ovs_be16 port)$/;"	f
pstream_verify_name	lib/stream.c	/^pstream_verify_name(const char *name)$/;"	f
pstream_wait	lib/stream.c	/^pstream_wait(struct pstream *pstream)$/;"	f
pswitch_delete_port	vtep/vtep-ctl.c	/^pswitch_delete_port(const struct vteprec_physical_switch *ps,$/;"	f	file:
pswitch_insert_port	vtep/vtep-ctl.c	/^pswitch_insert_port(const struct vteprec_physical_switch *ps,$/;"	f	file:
pswitches	vtep/vtep-ctl.c	/^    struct shash pswitches; \/* Maps from physical switch name to$/;"	m	struct:vtep_ctl_context	typeref:struct:vtep_ctl_context::shash	file:
ptcp_accept	lib/stream-tcp.c	/^ptcp_accept(int fd, const struct sockaddr_storage *ss,$/;"	f	file:
ptcp_open	lib/stream-tcp.c	/^ptcp_open(const char *name OVS_UNUSED, char *suffix, struct pstream **pstreamp,$/;"	f	file:
ptcp_pstream_class	lib/stream-tcp.c	/^const struct pstream_class ptcp_pstream_class = {$/;"	v	typeref:struct:pstream_class
ptcp_pvconn_class	lib/vconn-stream.c	/^const struct pvconn_class ptcp_pvconn_class = PSTREAM_INIT("ptcp");$/;"	v	typeref:struct:pvconn_class
ptr	lib/pvector.h	/^    void *ptr;$/;"	m	struct:pvector_entry
publish	lib/classifier.h	/^    bool publish;                   \/* Make changes visible to lookups? *\/$/;"	m	struct:classifier
pull_table_feature_property	lib/ofp-util.c	/^pull_table_feature_property(struct ofpbuf *msg, struct ofpbuf *payload,$/;"	f	file:
punix_accept	lib/stream-unix.c	/^punix_accept(int fd, const struct sockaddr_storage *ss, size_t ss_len,$/;"	f	file:
punix_open	lib/stream-unix.c	/^punix_open(const char *name OVS_UNUSED, char *suffix,$/;"	f	file:
punix_pstream_class	lib/stream-unix.c	/^const struct pstream_class punix_pstream_class = {$/;"	v	typeref:struct:pstream_class
punix_pvconn_class	lib/vconn-stream.c	/^const struct pvconn_class punix_pvconn_class = PSTREAM_INIT("punix");$/;"	v	typeref:struct:pvconn_class
push_header	lib/netdev-provider.h	/^    void (*push_header)(struct dp_packet *packet,$/;"	m	struct:netdev_class
push_ip_header	lib/netdev-vport.c	/^push_ip_header(struct dp_packet *packet,$/;"	f	file:
push_mpls	datapath/actions.c	/^static int push_mpls(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
push_mpls	datapath/linux/actions.c	/^static int push_mpls(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
push_mpls	lib/packets.c	/^push_mpls(struct dp_packet *packet, ovs_be16 ethtype, ovs_be32 lse)$/;"	f
push_stt_header	datapath/linux/compat/stt.c	/^static struct sk_buff *push_stt_header(struct sk_buff *head, __be64 tun_id,$/;"	f	file:
push_stt_header	datapath/linux/stt.c	/^static struct sk_buff *push_stt_header(struct sk_buff *head, __be64 tun_id,$/;"	f	file:
push_tnl_action	lib/dpif-netdev.c	/^push_tnl_action(const struct dp_netdev *dp,$/;"	f	file:
push_udp_header	lib/netdev-vport.c	/^push_udp_header(struct dp_packet *packet,$/;"	f	file:
push_ukey_ops	ofproto/ofproto-dpif-upcall.c	/^push_ukey_ops(struct udpif *udpif, struct umap *umap,$/;"	f	file:
push_ukey_ops__	ofproto/ofproto-dpif-upcall.c	/^push_ukey_ops__(struct udpif *udpif, struct ukey_op *ops, size_t n_ops)$/;"	f	file:
push_vlan	datapath/actions.c	/^static int push_vlan(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
push_vlan	datapath/linux/actions.c	/^static int push_vlan(struct sk_buff *skb, struct sw_flow_key *key,$/;"	f	file:
push_vlan_if_needed	lib/ofp-actions.h	/^    bool push_vlan_if_needed;   \/* OF 1.0 semantics if true. *\/$/;"	m	struct:ofpact_vlan_pcp
push_vlan_if_needed	lib/ofp-actions.h	/^    bool push_vlan_if_needed;   \/* OF 1.0 semantics if true. *\/$/;"	m	struct:ofpact_vlan_vid
put128	lib/sflow_receiver.c	/^inline static void put128(SFLReceiver *receiver, u_char *val)$/;"	f	file:
put32	lib/sflow_receiver.c	/^inline static void put32(SFLReceiver *receiver, u_int32_t val)$/;"	f	file:
putAddress	lib/sflow_receiver.c	/^inline static void putAddress(SFLReceiver *receiver, SFLAddress *addr)$/;"	f	file:
putGateway	lib/sflow_receiver.c	/^inline static void putGateway(SFLReceiver *receiver, SFLExtended_gateway *gw)$/;"	f	file:
putGenericCounters	lib/sflow_receiver.c	/^inline static void putGenericCounters(SFLReceiver *receiver, SFLIf_counters *counters)$/;"	f	file:
putLabelStack	lib/sflow_receiver.c	/^inline static void putLabelStack(SFLReceiver *receiver, SFLLabelStack *labelStack)$/;"	f	file:
putMACAddress	lib/sflow_receiver.c	/^inline static void putMACAddress(SFLReceiver *receiver,$/;"	f	file:
putMpls	lib/sflow_receiver.c	/^inline static void putMpls(SFLReceiver *receiver, SFLExtended_mpls *mpls)$/;"	f	file:
putMplsFtn	lib/sflow_receiver.c	/^inline static void putMplsFtn(SFLReceiver *receiver, SFLExtended_mpls_FTN *ftn)$/;"	f	file:
putMplsLdpFec	lib/sflow_receiver.c	/^inline static void putMplsLdpFec(SFLReceiver *receiver, SFLExtended_mpls_LDP_FEC *ldpfec)$/;"	f	file:
putMplsTunnel	lib/sflow_receiver.c	/^inline static void putMplsTunnel(SFLReceiver *receiver, SFLExtended_mpls_tunnel *tunnel)$/;"	f	file:
putMplsVc	lib/sflow_receiver.c	/^inline static void putMplsVc(SFLReceiver *receiver, SFLExtended_mpls_vc *vc)$/;"	f	file:
putNat	lib/sflow_receiver.c	/^inline static void putNat(SFLReceiver *receiver, SFLExtended_nat *nat)$/;"	f	file:
putNet32	lib/sflow_receiver.c	/^inline static void putNet32(SFLReceiver *receiver, u_int32_t val)$/;"	f	file:
putNet32_run	lib/sflow_receiver.c	/^inline static void putNet32_run(SFLReceiver *receiver, void *obj, size_t quads)$/;"	f	file:
putNet64	lib/sflow_receiver.c	/^inline static void putNet64(SFLReceiver *receiver, u_int64_t val64)$/;"	f	file:
putRouter	lib/sflow_receiver.c	/^inline static void putRouter(SFLReceiver *receiver, SFLExtended_router *router)$/;"	f	file:
putString	lib/sflow_receiver.c	/^inline static void putString(SFLReceiver *receiver, SFLString *s)$/;"	f	file:
putSwitch	lib/sflow_receiver.c	/^inline static void putSwitch(SFLReceiver *receiver, SFLExtended_switch *sw)$/;"	f	file:
putUrl	lib/sflow_receiver.c	/^inline static void putUrl(SFLReceiver *receiver, SFLExtended_url *url)$/;"	f	file:
putUser	lib/sflow_receiver.c	/^inline static void putUser(SFLReceiver *receiver, SFLExtended_user *user)$/;"	f	file:
putVlanTunnel	lib/sflow_receiver.c	/^inline static void putVlanTunnel(SFLReceiver *receiver, SFLExtended_vlan_tunnel *vlanTunnel)$/;"	f	file:
put_16aligned_be32	lib/unaligned.h	/^put_16aligned_be32(ovs_16aligned_be32 *x, ovs_be32 value)$/;"	f
put_16aligned_u32	lib/unaligned.h	/^put_16aligned_u32(ovs_16aligned_u32 *x, uint32_t value)$/;"	f
put_32aligned_be64	lib/unaligned.h	/^put_32aligned_be64(ovs_32aligned_be64 *x, ovs_be64 value)$/;"	f
put_32aligned_u64	lib/unaligned.h	/^put_32aligned_u64(ovs_32aligned_u64 *x, uint64_t value)$/;"	f
put_actions	ofproto/ofproto-dpif-upcall.c	/^    struct ofpbuf put_actions;     \/* Actions 'put' in the fastpath. *\/$/;"	m	struct:upcall	typeref:struct:upcall::ofpbuf	file:
put_arp_key	lib/odp-util.c	/^put_arp_key(const struct ovs_key_arp *arp, struct flow *flow)$/;"	f	file:
put_be16	lib/ofp-actions.c	/^put_be16(struct ofpbuf *b, ovs_be16 x)$/;"	f	file:
put_be32	lib/ofp-actions.c	/^put_be32(struct ofpbuf *b, ovs_be32 x)$/;"	f	file:
put_bitmap_properties	lib/ofp-util.c	/^put_bitmap_properties(struct ofpbuf *msg, uint64_t bitmap)$/;"	f	file:
put_ct_helper	ofproto/ofproto-dpif-xlate.c	/^put_ct_helper(struct ofpbuf *odp_actions, struct ofpact_conntrack *ofc)$/;"	f	file:
put_ct_label	ofproto/ofproto-dpif-xlate.c	/^put_ct_label(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
put_ct_mark	ofproto/ofproto-dpif-xlate.c	/^put_ct_mark(const struct flow *flow, struct flow *base_flow,$/;"	f	file:
put_encapsulation	ovn/controller/physical.c	/^put_encapsulation(enum mf_field_id mff_ovn_geneve,$/;"	f	file:
put_ethernet_key	lib/odp-util.c	/^put_ethernet_key(const struct ovs_key_ethernet *eth, struct flow *flow)$/;"	f	file:
put_fd_filename	lib/socket-util.c	/^put_fd_filename(struct ds *string, int fd)$/;"	f	file:
put_fields_property	lib/ofp-util.c	/^put_fields_property(struct ofpbuf *reply,$/;"	f	file:
put_icmp_key	lib/odp-util.c	/^put_icmp_key(const struct ovs_key_icmp *icmp, struct flow *flow)$/;"	f	file:
put_ipv4_key	lib/odp-util.c	/^put_ipv4_key(const struct ovs_key_ipv4 *ipv4, struct flow *flow, bool is_mask)$/;"	f	file:
put_ipv6_key	lib/odp-util.c	/^put_ipv6_key(const struct ovs_key_ipv6 *ipv6, struct flow *flow, bool is_mask)$/;"	f	file:
put_json_column	ovsdb/row.c	/^put_json_column(struct json *object, const struct ovsdb_row *row,$/;"	f	file:
put_load	ovn/controller/physical.c	/^put_load(uint64_t value, enum mf_field_id dst, int ofs, int n_bits,$/;"	f	file:
put_move	ovn/controller/physical.c	/^put_move(enum mf_field_id src, int src_ofs,$/;"	f	file:
put_nd_key	lib/odp-util.c	/^put_nd_key(const struct ovs_key_nd *nd, struct flow *flow)$/;"	f	file:
put_node	lib/heap.c	/^put_node(struct heap *heap, struct heap_node *node, size_t i)$/;"	f	file:
put_queue_rate	lib/ofp-util.c	/^put_queue_rate(struct ofpbuf *reply, enum ofp_queue_properties property,$/;"	f	file:
put_queue_stats	ofproto/ofproto.c	/^put_queue_stats(struct queue_stats_cbdata *cbdata, uint32_t queue_id,$/;"	f	file:
put_resubmit	ovn/controller/physical.c	/^put_resubmit(uint8_t table_id, struct ofpbuf *ofpacts)$/;"	f	file:
put_row	tests/test-ovsdb.c	/^put_row(struct ovsdb_table *table, struct ovsdb_row *row)$/;"	f	file:
put_stack	ovn/controller/physical.c	/^put_stack(enum mf_field_id field, struct ofpact_stack *stack)$/;"	f	file:
put_table_action_features	lib/ofp-util.c	/^put_table_action_features(struct ofpbuf *reply,$/;"	f	file:
put_table_instruction_features	lib/ofp-util.c	/^put_table_instruction_features($/;"	f	file:
put_tp_key	lib/odp-util.c	/^put_tp_key(const union ovs_key_tp *tp, struct flow *flow)$/;"	f	file:
put_u16	lib/ofp-actions.c	/^put_u16(struct ofpbuf *b, uint16_t x)$/;"	f	file:
put_u32	lib/aes128.c	/^put_u32(uint8_t *p, uint32_t x)$/;"	f	file:
put_u32	lib/ofp-actions.c	/^put_u32(struct ofpbuf *b, uint32_t x)$/;"	f	file:
put_unaligned_be16	lib/unaligned.h	160;"	d
put_unaligned_be32	lib/unaligned.h	161;"	d
put_unaligned_be64	lib/unaligned.h	162;"	d
put_unaligned_u16	lib/unaligned.h	/^static inline void put_unaligned_u16(uint16_t *p_, uint16_t x_)$/;"	f
put_unaligned_u32	lib/unaligned.h	/^static inline void put_unaligned_u32(uint32_t *p_, uint32_t x_)$/;"	f
put_unaligned_u64	lib/unaligned.h	/^put_unaligned_u64(uint64_t *p, uint64_t x)$/;"	f
put_unaligned_u64__	lib/unaligned.h	/^static inline void put_unaligned_u64__(uint64_t *p_, uint64_t x_)$/;"	f
pvclass	lib/vconn-provider.h	/^    const struct pvconn_class *pvclass;$/;"	m	struct:pvconn	typeref:struct:pvconn::pvconn_class
pvconn	lib/vconn-provider.h	/^struct pvconn {$/;"	s
pvconn	lib/vconn-stream.c	/^    struct pvconn pvconn;$/;"	m	struct:pvconn_pstream	typeref:struct:pvconn_pstream::pvconn	file:
pvconn	ofproto/connmgr.c	/^    struct pvconn *pvconn;      \/* OpenFlow connection listener. *\/$/;"	m	struct:ofservice	typeref:struct:ofservice::pvconn	file:
pvconn_accept	lib/vconn.c	/^pvconn_accept(struct pvconn *pvconn, struct vconn **new_vconn)$/;"	f
pvconn_assert_class	lib/vconn-provider.h	/^static inline void pvconn_assert_class(const struct pvconn *pvconn,$/;"	f
pvconn_class	lib/vconn-provider.h	/^struct pvconn_class {$/;"	s
pvconn_classes	lib/vconn.c	/^static const struct pvconn_class *pvconn_classes[] = {$/;"	v	typeref:struct:pvconn_class	file:
pvconn_close	lib/vconn.c	/^pvconn_close(struct pvconn *pvconn)$/;"	f
pvconn_get_name	lib/vconn.c	/^pvconn_get_name(const struct pvconn *pvconn)$/;"	f
pvconn_init	lib/vconn.c	/^pvconn_init(struct pvconn *pvconn, const struct pvconn_class *class,$/;"	f
pvconn_lookup_class	lib/vconn.c	/^pvconn_lookup_class(const char *name, const struct pvconn_class **classp)$/;"	f	file:
pvconn_name	tests/test-vconn.c	/^    char *pvconn_name;$/;"	m	struct:fake_pvconn	file:
pvconn_open	lib/vconn.c	/^pvconn_open(const char *name, uint32_t allowed_versions, uint8_t dscp,$/;"	f
pvconn_pstream	lib/vconn-stream.c	/^struct pvconn_pstream$/;"	s	file:
pvconn_pstream_accept	lib/vconn-stream.c	/^pvconn_pstream_accept(struct pvconn *pvconn, struct vconn **new_vconnp)$/;"	f	file:
pvconn_pstream_cast	lib/vconn-stream.c	/^pvconn_pstream_cast(struct pvconn *pvconn)$/;"	f	file:
pvconn_pstream_close	lib/vconn-stream.c	/^pvconn_pstream_close(struct pvconn *pvconn)$/;"	f	file:
pvconn_pstream_listen	lib/vconn-stream.c	/^pvconn_pstream_listen(const char *name, uint32_t allowed_versions,$/;"	f	file:
pvconn_pstream_wait	lib/vconn-stream.c	/^pvconn_pstream_wait(struct pvconn *pvconn)$/;"	f	file:
pvconn_verify_name	lib/vconn.c	/^pvconn_verify_name(const char *name)$/;"	f
pvconn_wait	lib/vconn.c	/^pvconn_wait(struct pvconn *pvconn)$/;"	f
pvector	lib/pvector.h	/^struct pvector {$/;"	s
pvector_change_priority	lib/pvector.c	/^pvector_change_priority(struct pvector *pvec, void *ptr, int priority)$/;"	f
pvector_count	lib/pvector.h	/^static inline size_t pvector_count(const struct pvector *pvec)$/;"	f
pvector_cursor	lib/pvector.h	/^struct pvector_cursor {$/;"	s
pvector_cursor_init	lib/pvector.h	/^pvector_cursor_init(const struct pvector *pvec,$/;"	f
pvector_cursor_lookahead	lib/pvector.h	/^static inline void pvector_cursor_lookahead(const struct pvector_cursor *cursor,$/;"	f
pvector_cursor_next	lib/pvector.h	/^static inline void *pvector_cursor_next(struct pvector_cursor *cursor,$/;"	f
pvector_destroy	lib/pvector.c	/^pvector_destroy(struct pvector *pvec)$/;"	f
pvector_entry	lib/pvector.h	/^struct pvector_entry {$/;"	s
pvector_entry_cmp	lib/pvector.c	/^pvector_entry_cmp(const void *a_, const void *b_)$/;"	f	file:
pvector_impl	lib/pvector.h	/^struct pvector_impl {$/;"	s
pvector_impl_alloc	lib/pvector.c	/^pvector_impl_alloc(size_t size)$/;"	f	file:
pvector_impl_dup	lib/pvector.c	/^pvector_impl_dup(struct pvector_impl *old)$/;"	f	file:
pvector_impl_find	lib/pvector.c	/^pvector_impl_find(struct pvector_impl *impl, void *target)$/;"	f	file:
pvector_impl_get	lib/pvector.c	/^pvector_impl_get(const struct pvector *pvec)$/;"	f	file:
pvector_impl_sort	lib/pvector.c	/^pvector_impl_sort(struct pvector_impl *impl)$/;"	f	file:
pvector_init	lib/pvector.c	/^pvector_init(struct pvector *pvec)$/;"	f
pvector_insert	lib/pvector.c	/^pvector_insert(struct pvector *pvec, void *ptr, int priority)$/;"	f
pvector_is_empty	lib/pvector.h	/^static inline bool pvector_is_empty(const struct pvector *pvec)$/;"	f
pvector_publish	lib/pvector.h	/^static inline void pvector_publish(struct pvector *pvec)$/;"	f
pvector_publish__	lib/pvector.c	/^void pvector_publish__(struct pvector *pvec)$/;"	f
pvector_remove	lib/pvector.c	/^pvector_remove(struct pvector *pvec, void *ptr)$/;"	f
pvector_verify	tests/test-classifier.c	/^pvector_verify(const struct pvector *pvec)$/;"	f	file:
pvt	lib/command-line.h	/^    void *pvt;$/;"	m	struct:ovs_cmdl_context
pwd	tests/system-kmod-testsuite	/^    pwd () {$/;"	f
pwd	tests/system-userspace-testsuite	/^    pwd () {$/;"	f
pwd	tests/testsuite	/^    pwd () {$/;"	f
pwindows_open	lib/stream-tcp.c	/^pwindows_open(const char *name, char *suffix, struct pstream **pstreamp,$/;"	f	file:
pwindows_pstream_class	lib/stream-tcp.c	/^const struct pstream_class pwindows_pstream_class = {$/;"	v	typeref:struct:pstream_class
pyftpdlib	tests/test-l7.py	/^        import pyftpdlib.log$/;"	i
qdisc_get	lib/netdev-linux.c	/^    int (*qdisc_get)(const struct netdev *netdev, struct smap *details);$/;"	m	struct:tc_ops	file:
qdisc_set	lib/netdev-linux.c	/^    int (*qdisc_set)(struct netdev *, const struct smap *details);$/;"	m	struct:tc_ops	file:
qdscp	ofproto/ofproto-dpif.c	/^    struct ofproto_port_queue *qdscp;$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::ofproto_port_queue	file:
qemu_pid	utilities/qemu-wrap.py	/^qemu_pid = "\/tmp\/%d-qemu.pid" % os.getpid()$/;"	v
qos	lib/vswitch-idl.h	/^	struct ovsrec_qos *qos;$/;"	m	struct:ovsrec_port	typeref:struct:ovsrec_port::ovsrec_qos
qos_unixctl_show	vswitchd/bridge.c	/^qos_unixctl_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
qos_unixctl_show	vswitchd/bridge.c	/^static unixctl_cb_func qos_unixctl_show;$/;"	v	file:
qos_unixctl_show_cbdata	vswitchd/bridge.c	/^struct qos_unixctl_show_cbdata {$/;"	s	file:
qos_unixctl_show_queue	vswitchd/bridge.c	/^qos_unixctl_show_queue(unsigned int queue_id,$/;"	f	file:
qqic	datapath-windows/ovsext/NetProto.h	/^   UINT8 qqic;$/;"	m	struct:IGMPV3Trailer
qrv	datapath-windows/ovsext/NetProto.h	/^   UINT8  qrv:3,$/;"	m	struct:IGMPV3Trailer
qs	include/openflow/openflow-1.3.h	/^    struct ofp11_queue_stats qs;$/;"	m	struct:ofp13_queue_stats	typeref:struct:ofp13_queue_stats::ofp11_queue_stats
qs	include/openflow/openflow-1.4.h	/^    struct ofp13_queue_stats qs;$/;"	m	struct:ofp14_queue_stats	typeref:struct:ofp14_queue_stats::ofp13_queue_stats
quads	tests/test-sflow.c	/^    uint32_t quads;$/;"	m	struct:sflow_xdr	file:
quantum	lib/netdev-linux.c	/^    uint32_t quantum;$/;"	m	struct:fqcodel	file:
quantum	lib/netdev-linux.c	/^    uint32_t quantum;$/;"	m	struct:sfq	file:
query_db_remotes	ovsdb/ovsdb-server.c	/^query_db_remotes(const char *name, const struct shash *all_dbs,$/;"	f	file:
query_db_string	ovsdb/ovsdb-server.c	/^query_db_string(const struct shash *all_dbs, const char *name,$/;"	f	file:
query_distinct_cb	ovsdb/query.c	/^query_distinct_cb(const struct ovsdb_row *row, void *hash_)$/;"	f	file:
query_netdev	lib/netdev-windows.c	/^query_netdev(const char *devname,$/;"	f	file:
query_row_set_cb	ovsdb/query.c	/^query_row_set_cb(const struct ovsdb_row *row, void *results_)$/;"	f	file:
query_switch_features	ofproto/ofproto.c	/^query_switch_features(struct ofproto *ofproto,$/;"	f	file:
query_tables	ofproto/ofproto-dpif.c	/^query_tables(struct ofproto *ofproto,$/;"	f	file:
query_tables	ofproto/ofproto-provider.h	/^    void (*query_tables)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
query_tables	ofproto/ofproto.c	/^query_tables(struct ofproto *ofproto,$/;"	f	file:
query_tables_desc	ofproto/ofproto.c	/^query_tables_desc(struct ofproto *ofproto, struct ofputil_table_desc **descp)$/;"	f	file:
queue	datapath-windows/ovsext/DpInternal.h	/^    uint32_t queue;$/;"	m	struct:_OVS_PACKET_INFO
queue	lib/ofp-actions.h	/^    uint32_t queue;$/;"	m	struct:ofpact_enqueue
queue	ofproto/ofproto.h	/^    uint32_t queue;             \/* Queue ID. *\/$/;"	m	struct:ofproto_port_queue
queueLink	datapath-windows/ovsext/Event.h	/^    LIST_ENTRY queueLink;$/;"	m	struct:_OVS_EVENT_QUEUE
queueLock	datapath-windows/ovsext/User.h	/^    NDIS_SPIN_LOCK queueLock;$/;"	m	struct:_OVS_USER_PACKET_QUEUE
queue_dump_done	lib/netdev-provider.h	/^    int (*queue_dump_done)(const struct netdev *netdev, void *state);$/;"	m	struct:netdev_class
queue_dump_next	lib/netdev-provider.h	/^    int (*queue_dump_next)(const struct netdev *netdev, void *state,$/;"	m	struct:netdev_class
queue_dump_start	lib/netdev-provider.h	/^    int (*queue_dump_start)(const struct netdev *netdev, void **statep);$/;"	m	struct:netdev_class
queue_dump_state	lib/netdev-linux.c	/^struct queue_dump_state {$/;"	s	file:
queue_flow_mod	ovn/controller/ofctrl.c	/^queue_flow_mod(struct ofputil_flow_mod *fm)$/;"	f	file:
queue_gso_packets	datapath/datapath.c	/^static int queue_gso_packets(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
queue_gso_packets	datapath/linux/datapath.c	/^static int queue_gso_packets(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
queue_id	include/openflow/openflow-1.0.h	/^    ovs_be32 queue_id;          \/* id for the specific queue. *\/$/;"	m	struct:ofp10_packet_queue
queue_id	include/openflow/openflow-1.0.h	/^    ovs_be32 queue_id;       \/* All queues if OFPQ_ALL. *\/$/;"	m	struct:ofp10_queue_stats_request
queue_id	include/openflow/openflow-1.0.h	/^    ovs_be32 queue_id;       \/* Queue id. *\/$/;"	m	struct:ofp10_queue_stats
queue_id	include/openflow/openflow-1.1.h	/^    ovs_be32 queue_id;         \/* Queue id. *\/$/;"	m	struct:ofp11_queue_stats
queue_id	include/openflow/openflow-1.1.h	/^    ovs_be32 queue_id;        \/* All queues if OFPQ_ALL. *\/$/;"	m	struct:ofp11_queue_stats_request
queue_id	include/openflow/openflow-1.2.h	/^    ovs_be32 queue_id;     \/* id for the specific queue. *\/$/;"	m	struct:ofp12_packet_queue
queue_id	lib/learning-switch.c	/^    uint32_t queue_id;          \/* OpenFlow queue number. *\/$/;"	m	struct:lswitch_port	file:
queue_id	lib/netdev-linux.c	/^    unsigned int queue_id;      \/* OpenFlow queue ID. *\/$/;"	m	struct:tc_queue	file:
queue_id	lib/netdev-provider.h	/^    int queue_id;$/;"	m	struct:netdev_rxq
queue_id	lib/ofp-actions.c	/^    ovs_be32 queue_id;        \/* Where to enqueue the packets. *\/$/;"	m	struct:ofp10_action_enqueue	file:
queue_id	lib/ofp-actions.h	/^    uint32_t queue_id;$/;"	m	struct:ofpact_queue
queue_id	lib/ofp-util.h	/^    uint32_t queue_id;$/;"	m	struct:ofputil_queue_config
queue_id	lib/ofp-util.h	/^    uint32_t queue_id;$/;"	m	struct:ofputil_queue_stats
queue_id	lib/ofp-util.h	/^    uint32_t queue_id;$/;"	m	struct:ofputil_queue_stats_request
queue_id	ofproto/in-band.c	/^    int queue_id;$/;"	m	struct:in_band	file:
queue_ids_include	vswitchd/bridge.c	/^queue_ids_include(const struct ovsdb_datum *queues, int64_t target)$/;"	f	file:
queue_msg	ovn/controller/ofctrl.c	/^queue_msg(struct ofpbuf *msg)$/;"	f	file:
queue_names	lib/learning-switch.c	/^    struct shash queue_names;   \/* Map from port name to lswitch_port. *\/$/;"	m	struct:lswitch	typeref:struct:lswitch::shash	file:
queue_numbers	lib/learning-switch.c	/^    struct hmap queue_numbers;  \/* Map from port number to lswitch_port. *\/$/;"	m	struct:lswitch	typeref:struct:lswitch::hmap	file:
queue_stats_cbdata	ofproto/ofproto.c	/^struct queue_stats_cbdata {$/;"	s	file:
queue_to_priority	lib/dpif-provider.h	/^    int (*queue_to_priority)(const struct dpif *dpif, uint32_t queue_id,$/;"	m	struct:dpif_class
queue_tx	lib/learning-switch.c	/^queue_tx(struct lswitch *sw, struct ofpbuf *b)$/;"	f	file:
queue_userspace_packet	datapath/datapath.c	/^static int queue_userspace_packet(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
queue_userspace_packet	datapath/linux/datapath.c	/^static int queue_userspace_packet(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
queue_work	datapath/linux/compat/include/linux/workqueue.h	7;"	d
queued	lib/learning-switch.c	/^    struct rconn_packet_counter *queued;$/;"	m	struct:lswitch	typeref:struct:lswitch::rconn_packet_counter	file:
queues	lib/netdev-linux.c	/^    struct hmap queues;         \/* Contains "struct tc_queue"s.$/;"	m	struct:tc	typeref:struct:tc::hmap	file:
queues	lib/netdev-linux.c	/^    unsigned int *queues;$/;"	m	struct:netdev_linux_queue_state	file:
queues	ofproto/pinsched.c	/^    struct hmap queues;         \/* Contains "struct pinqueue"s. *\/$/;"	m	struct:pinsched	typeref:struct:pinsched::hmap	file:
quicksort	lib/sort.c	/^quicksort(size_t p, size_t r,$/;"	f	file:
r	tests/idltest.h	/^	double r;$/;"	m	struct:idltest_simple
r	tests/test-reconnect.py	/^r = None$/;"	v
r1	datapath/linux/compat/include/net/geneve.h	/^	u8	r1:1;$/;"	m	struct:geneve_opt
r1	lib/geneve.h	/^    uint8_t   r1:1;$/;"	m	struct:geneve_opt
r2	datapath/linux/compat/include/net/geneve.h	/^	u8	r2:1;$/;"	m	struct:geneve_opt
r2	lib/geneve.h	/^    uint8_t   r2:1;$/;"	m	struct:geneve_opt
r3	datapath/linux/compat/include/net/geneve.h	/^	u8	r3:1;$/;"	m	struct:geneve_opt
r3	lib/geneve.h	/^    uint8_t   r3:1;$/;"	m	struct:geneve_opt
ra	tests/idltest.h	/^	double *ra;$/;"	m	struct:idltest_simple
rad1	datapath-windows/ovsext/resource.h	1261;"	d
rad10	datapath-windows/ovsext/resource.h	1270;"	d
rad11	datapath-windows/ovsext/resource.h	1271;"	d
rad12	datapath-windows/ovsext/resource.h	1272;"	d
rad13	datapath-windows/ovsext/resource.h	1273;"	d
rad14	datapath-windows/ovsext/resource.h	1274;"	d
rad15	datapath-windows/ovsext/resource.h	1275;"	d
rad16	datapath-windows/ovsext/resource.h	1276;"	d
rad2	datapath-windows/ovsext/resource.h	1262;"	d
rad3	datapath-windows/ovsext/resource.h	1263;"	d
rad4	datapath-windows/ovsext/resource.h	1264;"	d
rad5	datapath-windows/ovsext/resource.h	1265;"	d
rad6	datapath-windows/ovsext/resource.h	1266;"	d
rad7	datapath-windows/ovsext/resource.h	1267;"	d
rad8	datapath-windows/ovsext/resource.h	1268;"	d
rad9	datapath-windows/ovsext/resource.h	1269;"	d
rand_bool	utilities/ovs-pipegen.py	/^def rand_bool():$/;"	f
rand_ip_mask	utilities/ovs-pipegen.py	/^def rand_ip_mask():$/;"	f
random	include/windows/windefs.h	46;"	d
random	python/ovs/socket_util.py	/^import random$/;"	i
random	utilities/ovs-pipegen.py	/^import random$/;"	i
random	xenserver/opt_xensource_libexec_interface-reconfigure	/^import random$/;"	i
random_bytes	lib/random.c	/^random_bytes(void *p_, size_t n)$/;"	f
random_in_range	tests/test-util.c	/^random_in_range(uint32_t min, uint32_t max)$/;"	f	file:
random_init	lib/random.c	/^random_init(void)$/;"	f
random_next	lib/random.c	/^random_next(void)$/;"	f	file:
random_range	lib/random.h	/^random_range(int max)$/;"	f
random_set_seed	lib/random.c	/^random_set_seed(uint32_t seed_)$/;"	f
random_uint16	lib/random.h	/^random_uint16(void)$/;"	f
random_uint32	lib/random.c	/^random_uint32(void)$/;"	f
random_uint64	lib/random.c	/^random_uint64(void)$/;"	f
random_uint8	lib/random.h	/^random_uint8(void)$/;"	f
random_value	tests/test-classifier.c	/^random_value(void)$/;"	f	file:
range	datapath/flow.h	/^	struct sw_flow_key_range range;$/;"	m	struct:sw_flow_mask	typeref:struct:sw_flow_mask::sw_flow_key_range
range	datapath/flow.h	/^	struct sw_flow_key_range range;$/;"	m	struct:sw_flow_match	typeref:struct:sw_flow_match::sw_flow_key_range
range_n_bytes	datapath/flow_table.c	/^static u16 range_n_bytes(const struct sw_flow_key_range *range)$/;"	f	file:
range_n_bytes	datapath/linux/flow_table.c	/^static u16 range_n_bytes(const struct sw_flow_key_range *range)$/;"	f	file:
rate	include/openflow/openflow-1.3.h	/^    ovs_be32    rate;        \/* Rate for dropping packets. *\/$/;"	m	struct:ofp13_meter_band_drop
rate	include/openflow/openflow-1.3.h	/^    ovs_be32    rate;        \/* Rate for dropping packets. *\/$/;"	m	struct:ofp13_meter_band_experimenter
rate	include/openflow/openflow-1.3.h	/^    ovs_be32    rate;        \/* Rate for remarking packets. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
rate	include/openflow/openflow-1.3.h	/^    ovs_be32 rate;       \/* Rate for this band. *\/$/;"	m	struct:ofp13_meter_band_header
rate	include/openflow/openflow-common.h	/^    ovs_be16 rate;        \/* In 1\/10 of a percent; >1000 -> disabled. *\/$/;"	m	struct:ofp_queue_prop_rate
rate	include/openvswitch/token-bucket.h	/^    unsigned int rate;          \/* Tokens added per millisecond. *\/$/;"	m	struct:token_bucket
rate	lib/ofp-util.h	/^    uint32_t rate;$/;"	m	struct:ofputil_meter_band
rate_limit	ofproto/connmgr.c	/^    int rate_limit;             \/* Max packet-in rate in packets per second. *\/$/;"	m	struct:ofservice	file:
rate_limit	ofproto/ofproto.h	/^    int rate_limit;             \/* Max packet-in rate in packets per second. *\/$/;"	m	struct:ofproto_controller
raw	lib/ofp-actions.c	/^    enum ofp_raw_action_type raw;$/;"	m	struct:ofpact_raw_instance	typeref:enum:ofpact_raw_instance::ofp_raw_action_type	file:
raw	lib/ofp-actions.h	/^    uint8_t raw;                \/* Original type when added, if any. *\/$/;"	m	struct:ofpact
raw	lib/ofp-msgs.c	/^    enum ofpraw raw;            \/* Value. *\/$/;"	m	struct:raw_instance	typeref:enum:raw_instance::ofpraw	file:
raw_clz64	lib/util.c	/^raw_clz64(uint64_t n)$/;"	f
raw_clz64	lib/util.h	/^raw_clz64(uint64_t n)$/;"	f
raw_ctz	lib/util.c	/^raw_ctz(uint64_t n)$/;"	f
raw_ctz	lib/util.h	/^raw_ctz(uint64_t n)$/;"	f
raw_flag	lib/ofp-util.c	/^    uint16_t raw_flag;$/;"	m	struct:ofputil_flow_mod_flag	file:
raw_get_prefix	lib/classifier.c	/^raw_get_prefix(const ovs_be32 pr[], unsigned int ofs, unsigned int plen)$/;"	f	file:
raw_info	lib/ofp-msgs.c	/^struct raw_info {$/;"	s	file:
raw_info_get	lib/ofp-msgs.c	/^raw_info_get(enum ofpraw raw)$/;"	f	file:
raw_instance	lib/ofp-msgs.c	/^struct raw_instance {$/;"	s	file:
raw_instance_get	lib/ofp-msgs.c	/^raw_instance_get(const struct raw_info *info, uint8_t version)$/;"	f	file:
raw_instance_map	lib/ofp-msgs.c	/^static struct hmap raw_instance_map;$/;"	v	typeref:struct:hmap	file:
raw_process_info	vswitchd/system-stats.c	/^struct raw_process_info {$/;"	s	file:
rc	xenserver/opt_xensource_libexec_interface-reconfigure	/^        rc = main()$/;"	v
rc	xenserver/opt_xensource_libexec_interface-reconfigure	/^    rc = 1$/;"	v
rco_flags	lib/packets.h	/^    ovs_16aligned_be32 rco_flags;$/;"	m	struct:ovs_nd_msg
rcon	lib/aes128.c	/^static const uint32_t rcon[] = {$/;"	v	file:
rconn	lib/learning-switch.c	/^    struct rconn *rconn;$/;"	m	struct:lswitch	typeref:struct:lswitch::rconn	file:
rconn	lib/netdev-dummy.c	/^        struct dummy_packet_rconn rconn;$/;"	m	union:dummy_packet_conn::__anon109	typeref:struct:dummy_packet_conn::__anon109::dummy_packet_rconn	file:
rconn	lib/rconn.c	/^VLOG_DEFINE_THIS_MODULE(rconn);$/;"	v
rconn	lib/rconn.c	/^struct rconn {$/;"	s	file:
rconn	ofproto/connmgr.c	/^    struct rconn *rconn;        \/* OpenFlow connection. *\/$/;"	m	struct:ofconn	typeref:struct:ofconn::rconn	file:
rconn_create	lib/rconn.c	/^rconn_create(int probe_interval, int max_backoff, uint8_t dscp,$/;"	f
rconn_destroy	lib/rconn.c	/^rconn_destroy(struct rconn *rc)$/;"	f
rconn_discarded	lib/rconn.c	/^COVERAGE_DEFINE(rconn_discarded);$/;"	v
rconn_get_allowed_versions	lib/rconn.c	/^uint32_t rconn_get_allowed_versions(const struct rconn *rconn)$/;"	f
rconn_get_connection_seqno	lib/rconn.c	/^rconn_get_connection_seqno(const struct rconn *rc)$/;"	f
rconn_get_dscp	lib/rconn.c	/^rconn_get_dscp(const struct rconn *rc)$/;"	f
rconn_get_last_connection	lib/rconn.c	/^rconn_get_last_connection(const struct rconn *rc)$/;"	f
rconn_get_last_disconnect	lib/rconn.c	/^rconn_get_last_disconnect(const struct rconn *rc)$/;"	f
rconn_get_last_error	lib/rconn.c	/^rconn_get_last_error(const struct rconn *rc)$/;"	f
rconn_get_max_backoff	lib/rconn.c	/^rconn_get_max_backoff(const struct rconn *rc)$/;"	f
rconn_get_name	lib/rconn.c	/^rconn_get_name(const struct rconn *rc)$/;"	f
rconn_get_probe_interval	lib/rconn.c	/^rconn_get_probe_interval(const struct rconn *rc)$/;"	f
rconn_get_state	lib/rconn.c	/^rconn_get_state(const struct rconn *rc)$/;"	f
rconn_get_target	lib/rconn.c	/^rconn_get_target(const struct rconn *rc)$/;"	f
rconn_is_alive	lib/rconn.c	/^rconn_is_alive(const struct rconn *rconn)$/;"	f
rconn_is_connected	lib/rconn.c	/^rconn_is_connected(const struct rconn *rconn)$/;"	f
rconn_overflow	lib/rconn.c	/^COVERAGE_DEFINE(rconn_overflow);$/;"	v
rconn_packet_counter	lib/rconn.h	/^struct rconn_packet_counter {$/;"	s
rconn_packet_counter_create	lib/rconn.c	/^rconn_packet_counter_create(void)$/;"	f
rconn_packet_counter_dec	lib/rconn.c	/^rconn_packet_counter_dec(struct rconn_packet_counter *c, unsigned int n_bytes)$/;"	f
rconn_packet_counter_destroy	lib/rconn.c	/^rconn_packet_counter_destroy(struct rconn_packet_counter *c)$/;"	f
rconn_packet_counter_inc	lib/rconn.c	/^rconn_packet_counter_inc(struct rconn_packet_counter *c, unsigned int n_bytes)$/;"	f
rconn_packet_counter_n_bytes	lib/rconn.c	/^rconn_packet_counter_n_bytes(const struct rconn_packet_counter *c)$/;"	f
rconn_packet_counter_n_packets	lib/rconn.c	/^rconn_packet_counter_n_packets(const struct rconn_packet_counter *c)$/;"	f
rconn_queued	lib/rconn.c	/^COVERAGE_DEFINE(rconn_queued);$/;"	v
rconn_sent	lib/rconn.c	/^COVERAGE_DEFINE(rconn_sent);$/;"	v
rconn_set_dscp	lib/rconn.c	/^rconn_set_dscp(struct rconn *rc, uint8_t dscp)$/;"	f
rconn_set_probe_interval	lib/rconn.c	/^rconn_set_probe_interval(struct rconn *rc, int probe_interval)$/;"	f
rct1	datapath-windows/ovsext/resource.h	1285;"	d
rct2	datapath-windows/ovsext/resource.h	1286;"	d
rct3	datapath-windows/ovsext/resource.h	1287;"	d
rct4	datapath-windows/ovsext/resource.h	1288;"	d
rcu	datapath/datapath.h	/^	struct rcu_head rcu;$/;"	m	struct:datapath	typeref:struct:datapath::rcu_head
rcu	datapath/flow.h	/^	struct rcu_head rcu;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::rcu_head
rcu	datapath/flow.h	/^	struct rcu_head rcu;$/;"	m	struct:sw_flow_actions	typeref:struct:sw_flow_actions::rcu_head
rcu	datapath/flow.h	/^	struct rcu_head rcu;$/;"	m	struct:sw_flow_mask	typeref:struct:sw_flow_mask::rcu_head
rcu	datapath/flow_table.h	/^	struct rcu_head rcu;$/;"	m	struct:mask_array	typeref:struct:mask_array::rcu_head
rcu	datapath/flow_table.h	/^	struct rcu_head rcu;$/;"	m	struct:table_instance	typeref:struct:table_instance::rcu_head
rcu	datapath/linux/compat/include/net/geneve.h	/^	struct rcu_head		rcu;$/;"	m	struct:geneve_sock	typeref:struct:geneve_sock::rcu_head
rcu	datapath/linux/compat/include/net/stt.h	/^	struct rcu_head		rcu;$/;"	m	struct:stt_sock	typeref:struct:stt_sock::rcu_head
rcu	datapath/linux/compat/include/net/vxlan.h	/^	struct rcu_head	  rcu;$/;"	m	struct:vxlan_sock	typeref:struct:vxlan_sock::rcu_head
rcu	datapath/vport-netdev.h	/^	struct rcu_head rcu;$/;"	m	struct:netdev_vport	typeref:struct:netdev_vport::rcu_head
rcu	datapath/vport.h	/^	struct rcu_head rcu;$/;"	m	struct:vport	typeref:struct:vport::rcu_head
rcu	datapath/vport.h	/^	struct rcu_head rcu;$/;"	m	struct:vport_portids	typeref:struct:vport_portids::rcu_head
rcu_access_pointer	datapath/linux/compat/include/linux/rcupdate.h	19;"	d
rcu_assign_sk_user_data	datapath/linux/compat/include/net/sock.h	10;"	d
rcu_dereference_check	datapath/linux/compat/include/linux/rcupdate.h	7;"	d
rcu_dereference_ovsl	datapath/datapath.h	153;"	d
rcu_dereference_protected	datapath/linux/compat/include/linux/rcupdate.h	11;"	d
rcu_dereference_raw	datapath/linux/compat/include/linux/rcupdate.h	15;"	d
rcu_dereference_rtnl	datapath/linux/compat/include/linux/rtnetlink.h	23;"	d
rcu_dereference_sk_user_data	datapath/linux/compat/include/net/sock.h	9;"	d
rcu_free_acts_callback	datapath/flow_netlink.c	/^static void rcu_free_acts_callback(struct rcu_head *rcu)$/;"	f	file:
rcu_free_acts_callback	datapath/linux/flow_netlink.c	/^static void rcu_free_acts_callback(struct rcu_head *rcu)$/;"	f	file:
rcu_free_flow_callback	datapath/flow_table.c	/^static void rcu_free_flow_callback(struct rcu_head *rcu)$/;"	f	file:
rcu_free_flow_callback	datapath/linux/flow_table.c	/^static void rcu_free_flow_callback(struct rcu_head *rcu)$/;"	f	file:
rcu_free_gs	datapath/linux/compat/geneve.c	/^static void rcu_free_gs(struct rcu_head *rcu)$/;"	f	file:
rcu_free_gs	datapath/linux/geneve.c	/^static void rcu_free_gs(struct rcu_head *rcu)$/;"	f	file:
rcu_free_sw_flow_mask_cb	datapath/flow_table.c	/^static void rcu_free_sw_flow_mask_cb(struct rcu_head *rcu)$/;"	f	file:
rcu_free_sw_flow_mask_cb	datapath/linux/flow_table.c	/^static void rcu_free_sw_flow_mask_cb(struct rcu_head *rcu)$/;"	f	file:
rcu_free_vs	datapath/linux/compat/vxlan.c	/^static void rcu_free_vs(struct rcu_head *rcu)$/;"	f	file:
rcu_free_vs	datapath/linux/vxlan.c	/^static void rcu_free_vs(struct rcu_head *rcu)$/;"	f	file:
rcu_read_lock_held	datapath/linux/compat/include/linux/rcupdate.h	/^static inline int rcu_read_lock_held(void)$/;"	f
rcu_trie_ptr	lib/classifier.h	/^typedef OVSRCU_TYPE(struct trie_node *) rcu_trie_ptr;$/;"	t
rculist	lib/rculist.h	/^struct rculist {$/;"	s
rculist_front	lib/rculist.h	/^rculist_front(const struct rculist *list)$/;"	f
rculist_is_empty	lib/rculist.h	/^rculist_is_empty(const struct rculist *list)$/;"	f
rculist_next	lib/rculist.h	/^rculist_next(const struct rculist *list)$/;"	f
rculist_next_protected	lib/rculist.h	/^rculist_next_protected(const struct rculist *list)$/;"	f
rculist_push_back	lib/rculist.h	/^rculist_push_back(struct rculist *list, struct rculist *elem)$/;"	f
rculist_push_front	lib/rculist.h	/^rculist_push_front(struct rculist *list, struct rculist *elem)$/;"	f
rculist_size	lib/rculist.h	/^rculist_size(const struct rculist *list)$/;"	f
rcv	datapath/linux/compat/include/net/geneve.h	/^	geneve_rcv_t		*rcv;$/;"	m	struct:geneve_sock
rcv	datapath/linux/compat/include/net/stt.h	/^	stt_rcv_t		*rcv;$/;"	m	struct:stt_sock
rcv	datapath/linux/compat/include/net/vxlan.h	/^	vxlan_rcv_t	 *rcv;$/;"	m	struct:vxlan_sock
rcv_data	datapath/linux/compat/include/net/geneve.h	/^	void			*rcv_data;$/;"	m	struct:geneve_sock
rcv_data	datapath/linux/compat/include/net/stt.h	/^	void			*rcv_data;$/;"	m	struct:stt_sock
rcvbuf	lib/netlink-socket.c	/^    unsigned int rcvbuf;        \/* Receive buffer size (SO_RCVBUF). *\/$/;"	m	struct:nl_sock	file:
rcvd_len	datapath/linux/compat/stt.c	/^	u16 rcvd_len;$/;"	m	struct:first_frag	file:
rcvd_len	datapath/linux/stt.c	/^	u16 rcvd_len;$/;"	m	struct:first_frag	file:
rd	lib/route-table.c	/^    struct route_data rd; \/* Data parsed from this message. *\/$/;"	m	struct:route_table_msg	typeref:struct:route_table_msg::route_data	file:
re	build-aux/check-structs	/^import re$/;"	i
re	build-aux/extract-ofp-actions	/^import re$/;"	i
re	build-aux/extract-ofp-errors	/^import re$/;"	i
re	build-aux/extract-ofp-fields	/^import re$/;"	i
re	build-aux/extract-ofp-msgs	/^import re$/;"	i
re	ofproto/ipfix-gen-entities	/^import re$/;"	i
re	ovsdb/ovsdb-dot	/^import re$/;"	i
re	ovsdb/ovsdb-idlc	/^import re$/;"	i
re	python/build/nroff.py	/^import re$/;"	i
re	python/ovs/db/data.py	/^import re$/;"	i
re	python/ovs/db/parser.py	/^import re$/;"	i
re	python/ovs/db/schema.py	/^import re$/;"	i
re	python/ovs/json.py	/^import re$/;"	i
re	python/ovs/ovsuuid.py	/^import re$/;"	i
re	python/ovs/vlog.py	/^import re$/;"	i
re	python/ovstest/args.py	/^import re$/;"	i
re	python/ovstest/util.py	/^import re$/;"	i
re	tests/MockXenAPI.py	/^import re$/;"	i
re	tests/test-ovsdb.py	/^import re$/;"	i
re	utilities/bugtool/ovs-bugtool	/^import re$/;"	i
re	utilities/ovs-check-dead-ifs	/^import re$/;"	i
re	utilities/ovs-dpctl-top	/^import re$/;"	i
re	utilities/ovs-parse-backtrace	/^import re$/;"	i
re	utilities/ovs-tcpundump	/^import re$/;"	i
re	vtep/ovs-vtep	/^import re$/;"	i
re	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^import re$/;"	i
re	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^import re$/;"	i
re	xenserver/opt_xensource_libexec_interface-reconfigure	/^import re$/;"	i
reached	tests/test-rstp.c	/^    bool reached;$/;"	m	struct:bridge	file:
reached	tests/test-rstp.c	/^    bool reached;$/;"	m	struct:lan	file:
reached	tests/test-stp.c	/^    bool reached;$/;"	m	struct:bridge	file:
reached	tests/test-stp.c	/^    bool reached;$/;"	m	struct:lan	file:
reactor	python/ovstest/rpcserver.py	/^from twisted.internet import reactor$/;"	i
read	lib/stream-ssl.c	/^    bool read;                  \/* Whether the file was successfully read. *\/$/;"	m	struct:ssl_config_file	file:
read	utilities/ovs-pcap	/^    def read(self):$/;"	m	class:PcapReader
read1	xenserver/opt_xensource_libexec_interface-reconfigure	/^    def read1(name):$/;"	f	function:netdev_remap_name
read_cert_file	lib/stream-ssl.c	/^read_cert_file(const char *file_name, X509 ***certs, size_t *n_certs)$/;"	f	file:
read_column	ovsdb/ovsdb-server.c	/^read_column(const struct ovsdb_row *row, const char *column_name,$/;"	f	file:
read_counter	lib/cmap.c	/^read_counter(const struct cmap_bucket *bucket_)$/;"	f	file:
read_error	ovsdb/log.c	/^    struct ovsdb_error *read_error;$/;"	m	struct:ovsdb_log	typeref:struct:ovsdb_log::ovsdb_error	file:
read_even_counter	lib/cmap.c	/^read_even_counter(const struct cmap_bucket *bucket)$/;"	f	file:
read_flows_from_file	utilities/ovs-ofctl.c	/^read_flows_from_file(const char *filename, struct classifier *cls, int index)$/;"	f	file:
read_flows_from_source	utilities/ovs-ofctl.c	/^read_flows_from_source(const char *source, struct classifier *cls, int index)$/;"	f	file:
read_flows_from_switch	utilities/ovs-ofctl.c	/^read_flows_from_switch(struct vconn *vconn,$/;"	f	file:
read_fully	lib/socket-util.c	/^read_fully(int fd, void *p_, size_t size, size_t *bytes_read)$/;"	f
read_host_uuid	vswitchd/xenserver.c	/^read_host_uuid(void)$/;"	f	file:
read_integer_column	ovsdb/ovsdb-server.c	/^read_integer_column(const struct ovsdb_row *row, const char *column_name,$/;"	f	file:
read_ioctl	lib/netlink-socket.c	/^    DWORD read_ioctl;$/;"	m	struct:nl_sock	file:
read_line	utilities/bugtool/ovs-bugtool	/^    def read_line(self):$/;"	m	class:ProcOutput
read_map_string_column	ovsdb/ovsdb-server.c	/^read_map_string_column(const struct ovsdb_row *row, const char *column_name,$/;"	f	file:
read_pidfile	lib/daemon-unix.c	/^read_pidfile(const char *pidfile)$/;"	f
read_pidfile	python/ovs/daemon.py	/^def read_pidfile(pidfile):$/;"	f
read_pidfile__	lib/daemon-unix.c	/^read_pidfile__(const char *pidfile, bool delete_if_stale)$/;"	f	file:
read_psched	lib/netdev-linux.c	/^read_psched(void)$/;"	f	file:
read_string_column	ovsdb/ovsdb-server.c	/^read_string_column(const struct ovsdb_row *row, const char *column_name,$/;"	f	file:
readd	utilities/ovs-ofctl.c	/^static bool readd;$/;"	v	file:
readlines	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def readlines(self):$/;"	m	class:ConfigurationFile
real	lib/json.c	/^        double real;$/;"	m	union:json_token::__anon92	file:
real	lib/json.h	/^        double real;$/;"	m	union:json::__anon93
real	lib/ovsdb-data.h	/^    double real;$/;"	m	union:ovsdb_atom
real	lib/ovsdb-idl.c	/^    struct uuid real;           \/* Real UUID used by database server. *\/$/;"	m	struct:ovsdb_idl_txn_insert	typeref:struct:ovsdb_idl_txn_insert::uuid	file:
real	lib/ovsdb-types.h	/^        } real;$/;"	m	union:ovsdb_base_type::__anon146	typeref:struct:ovsdb_base_type::__anon146::ovsdb_real_constraints
real_dev	lib/vlandev.h	/^    struct vlan_real_dev *real_dev; \/* Parent, e.g. "eth0". *\/$/;"	m	struct:vlan_dev	typeref:struct:vlan_dev::vlan_real_dev
real_n_txq	lib/netdev-dpdk.c	/^    int real_n_txq;$/;"	m	struct:netdev_dpdk	file:
realdev_ofp_port	ofproto/ofproto-dpif.c	/^    ofp_port_t realdev_ofp_port;$/;"	m	struct:ofport_dpif	file:
realdev_ofp_port	ofproto/ofproto-dpif.c	/^    ofp_port_t realdev_ofp_port;$/;"	m	struct:vlan_splinter	file:
realdev_ofp_port	ofproto/ofproto.h	/^    ofp_port_t realdev_ofp_port;\/* OpenFlow port number of real device. *\/$/;"	m	struct:ofproto_bundle_settings
realdev_vid_node	ofproto/ofproto-dpif.c	/^    struct hmap_node realdev_vid_node;$/;"	m	struct:vlan_splinter	typeref:struct:vlan_splinter::hmap_node	file:
reason	include/openflow/nicira-ext.h	/^    ovs_be16 reason;            \/* OFPRR_* for NXFME_DELETED, else zero. *\/$/;"	m	struct:nx_flow_update_full
reason	include/openflow/nicira-ext.h	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:nx_flow_removed
reason	include/openflow/nicira-ext.h	/^    uint8_t reason;           \/* Reason packet is sent (one of OFPR_*). *\/$/;"	m	struct:nx_packet_in
reason	include/openflow/openflow-1.0.h	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:ofp10_flow_removed
reason	include/openflow/openflow-1.0.h	/^    uint8_t reason;         \/* Reason packet is being sent (one of OFPR_*) *\/$/;"	m	struct:ofp10_packet_in
reason	include/openflow/openflow-1.1.h	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:ofp11_flow_removed
reason	include/openflow/openflow-1.1.h	/^    uint8_t reason;         \/* Reason packet is being sent (one of OFPR_*) *\/$/;"	m	struct:ofp11_packet_in
reason	include/openflow/openflow-1.2.h	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:ofp12_flow_removed
reason	include/openflow/openflow-1.2.h	/^    uint8_t reason;         \/* Reason packet is being sent (one of OFPR_*) *\/$/;"	m	struct:ofp12_packet_in
reason	include/openflow/openflow-1.4.h	/^    uint8_t  reason;            \/* One of OFPCRR_*. *\/$/;"	m	struct:ofp14_role_status
reason	include/openflow/openflow-common.h	/^    uint8_t reason;          \/* One of OFPPR_*. *\/$/;"	m	struct:ofp_port_status
reason	lib/odp-util.h	/^        uint32_t reason;        \/* enum slow_path_reason. *\/$/;"	m	struct:user_action_cookie::__anon124
reason	lib/ofp-actions.c	/^    uint8_t reason;                 \/* enum ofp_packet_in_reason (OFPR_*). *\/$/;"	m	struct:nx_action_controller	file:
reason	lib/ofp-actions.h	/^    enum ofp_packet_in_reason reason; \/* Reason to put in packet-in. *\/$/;"	m	struct:ofpact_controller	typeref:enum:ofpact_controller::ofp_packet_in_reason
reason	lib/ofp-util.h	/^    enum ofp14_controller_role_reason reason;$/;"	m	struct:ofputil_role_status	typeref:enum:ofputil_role_status::ofp14_controller_role_reason
reason	lib/ofp-util.h	/^    enum ofp14_requestforward_reason reason;$/;"	m	struct:ofputil_requestforward	typeref:enum:ofputil_requestforward::ofp14_requestforward_reason
reason	lib/ofp-util.h	/^    enum ofp_flow_removed_reason reason;$/;"	m	struct:ofputil_flow_update	typeref:enum:ofputil_flow_update::ofp_flow_removed_reason
reason	lib/ofp-util.h	/^    enum ofp_packet_in_reason reason;    \/* One of OFPR_*. *\/$/;"	m	struct:ofputil_packet_in	typeref:enum:ofputil_packet_in::ofp_packet_in_reason
reason	lib/ofp-util.h	/^    enum ofp_port_reason reason;$/;"	m	struct:ofputil_port_status	typeref:enum:ofputil_port_status::ofp_port_reason
reason	lib/ofp-util.h	/^    uint8_t reason;             \/* One of OFPRR_*. *\/$/;"	m	struct:ofputil_flow_removed
reassemble	datapath/linux/compat/stt.c	/^static struct sk_buff *reassemble(struct sk_buff *skb)$/;"	f	file:
reassemble	datapath/linux/stt.c	/^static struct sk_buff *reassemble(struct sk_buff *skb)$/;"	f	file:
rebalance_interval	ofproto/bond.c	/^    int rebalance_interval;      \/* Interval between rebalances, in ms. *\/$/;"	m	struct:bond	file:
rebalance_interval	ofproto/bond.h	/^    int rebalance_interval;     \/* Milliseconds between rebalances.$/;"	m	struct:bond_settings
recalTcpCsum	datapath-windows/ovsext/User.h	/^    UINT32 recalTcpCsum;$/;"	m	struct:_OVS_USER_STATS
recalc_csum128	lib/csum.c	/^recalc_csum128(ovs_be16 old_csum, ovs_16aligned_be32 old_u32[4],$/;"	f
recalc_csum16	lib/csum.c	/^recalc_csum16(ovs_be16 old_csum, ovs_be16 old_u16, ovs_be16 new_u16)$/;"	f
recalc_csum32	lib/csum.c	/^recalc_csum32(ovs_be16 old_csum, ovs_be32 old_u32, ovs_be32 new_u32)$/;"	f
recalc_csum48	lib/csum.c	/^recalc_csum48(ovs_be16 old_csum, const struct eth_addr old_mac,$/;"	f
recargchar	lib/getopt_long.c	/^static const char recargchar[] = "option requires an argument -- %c";$/;"	v	file:
recargstring	lib/getopt_long.c	/^static const char recargstring[] = "option requires an argument -- %s";$/;"	v	file:
receiver4	lib/sflow_api.h	/^    struct sockaddr_in receiver4;$/;"	m	struct:_SFLReceiver	typeref:struct:_SFLReceiver::sockaddr_in
receiver6	lib/sflow_api.h	/^    struct sockaddr_in6 receiver6;$/;"	m	struct:_SFLReceiver	typeref:struct:_SFLReceiver::sockaddr_in6
receiverSocket4	lib/sflow_api.h	/^    int receiverSocket4;$/;"	m	struct:_SFLAgent
receiverSocket6	lib/sflow_api.h	/^    int receiverSocket6;$/;"	m	struct:_SFLAgent
receivers	lib/sflow_api.h	/^    SFLReceiver *receivers; \/* the array of receivers *\/$/;"	m	struct:_SFLAgent
recent_rusage	lib/timeval.c	/^    struct rusage recent_rusage;$/;"	m	struct:cpu_tracker	typeref:struct:cpu_tracker::rusage	file:
reciprocal_divide	datapath/linux/compat/include/linux/reciprocal_div.h	30;"	d
reciprocal_elems	datapath/linux/compat/include/linux/flex_array.h	/^			struct reciprocal_value reciprocal_elems;$/;"	m	struct:flex_array::__anon42::__anon43	typeref:struct:flex_array::__anon42::__anon43::reciprocal_value
reciprocal_value	datapath/linux/compat/include/linux/reciprocal_div.h	/^struct reciprocal_value {$/;"	s
reciprocal_value	datapath/linux/compat/include/linux/reciprocal_div.h	22;"	d
recirc	lib/odp-util.h	/^    bool recirc;$/;"	m	struct:odp_support
recirc	ofproto/ofproto-dpif-upcall.c	/^    const struct recirc_id_node *recirc; \/* Recirculation context. *\/$/;"	m	struct:upcall	typeref:struct:upcall::recirc_id_node	file:
recirc	ofproto/ofproto-dpif-xlate.h	/^        uint32_t recirc[2];   \/* When n_recircs == 1 or 2 *\/$/;"	m	union:xlate_out::__anon184
recirc	ofproto/ofproto-dpif-xlate.h	/^    const struct recirc_id_node *recirc;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::recirc_id_node
recirc_action_offset	ofproto/ofproto-dpif-xlate.c	/^    int recirc_action_offset;   \/* Offset in 'action_set' to actions to be$/;"	m	struct:xlate_ctx	file:
recirc_alloc_id	ofproto/ofproto-dpif-rid.c	/^recirc_alloc_id(struct ofproto_dpif *ofproto)$/;"	f
recirc_alloc_id__	ofproto/ofproto-dpif-rid.c	/^recirc_alloc_id__(const struct recirc_state *state, uint32_t hash)$/;"	f	file:
recirc_alloc_id_ctx	ofproto/ofproto-dpif-rid.c	/^recirc_alloc_id_ctx(const struct recirc_state *state)$/;"	f
recirc_find_equal	ofproto/ofproto-dpif-rid.c	/^recirc_find_equal(const struct recirc_state *target, uint32_t hash)$/;"	f	file:
recirc_find_id	ofproto/ofproto-dpif-rid.c	/^recirc_find_id(const struct recirc_state *target)$/;"	f
recirc_free_id	ofproto/ofproto-dpif-rid.c	/^recirc_free_id(uint32_t id)$/;"	f
recirc_free_ofproto	ofproto/ofproto-dpif-rid.c	/^recirc_free_ofproto(struct ofproto_dpif *ofproto, const char *ofproto_name)$/;"	f
recirc_id	datapath/flow.h	/^	u32 recirc_id;			\/* Recirculation ID.  *\/$/;"	m	struct:sw_flow_key
recirc_id	lib/flow.h	/^    uint32_t recirc_id;         \/* Must be exact match. *\/$/;"	m	struct:flow
recirc_id	lib/packets.h	/^    uint32_t recirc_id;         \/* Recirculation id carried with the$/;"	m	struct:pkt_metadata
recirc_id	ofproto/bond.c	/^    uint32_t recirc_id;          \/* Non zero if recirculation can be used.*\/$/;"	m	struct:bond	file:
recirc_id	ofproto/ofproto-dpif-xlate.c	/^    uint32_t recirc_id;  \/* !0 Use recirculation instead of output. *\/$/;"	m	struct:xlate_bond_recirc	file:
recirc_id	ofproto/ofproto-dpif.c	/^    uint32_t recirc_id;$/;"	m	struct:rule_dpif	file:
recirc_id_node	ofproto/ofproto-dpif-rid.h	/^struct recirc_id_node {$/;"	s
recirc_id_node_find	ofproto/ofproto-dpif-rid.c	/^recirc_id_node_find(uint32_t id)$/;"	f
recirc_id_node_try_ref_rcu	ofproto/ofproto-dpif-rid.h	/^static inline bool recirc_id_node_try_ref_rcu(const struct recirc_id_node *n_)$/;"	f
recirc_init	ofproto/ofproto-dpif-rid.c	/^recirc_init(void)$/;"	f
recirc_metadata	ofproto/ofproto-dpif-rid.h	/^struct recirc_metadata {$/;"	s
recirc_metadata_equal	ofproto/ofproto-dpif-rid.c	/^recirc_metadata_equal(const struct recirc_state *a,$/;"	f	file:
recirc_metadata_from_flow	ofproto/ofproto-dpif-rid.h	/^recirc_metadata_from_flow(struct recirc_metadata *md,$/;"	f
recirc_metadata_hash	ofproto/ofproto-dpif-rid.c	/^recirc_metadata_hash(const struct recirc_state *state)$/;"	f	file:
recirc_metadata_to_flow	ofproto/ofproto-dpif-rid.h	/^recirc_metadata_to_flow(const struct recirc_metadata *md,$/;"	f
recirc_put_unroll_xlate	ofproto/ofproto-dpif-xlate.c	/^recirc_put_unroll_xlate(struct xlate_ctx *ctx)$/;"	f	file:
recirc_ref_equal	ofproto/ofproto-dpif-rid.c	/^recirc_ref_equal(const struct recirc_state *target, uint32_t hash)$/;"	f	file:
recirc_run	ofproto/ofproto-dpif-rid.c	/^recirc_run(void)$/;"	f
recirc_state	ofproto/ofproto-dpif-rid.h	/^struct recirc_state {$/;"	s
recirc_state_clone	ofproto/ofproto-dpif-rid.c	/^recirc_state_clone(struct recirc_state *new, const struct recirc_state *old,$/;"	f	file:
recirc_table	lib/ofp-actions.c	/^    uint8_t recirc_table;       \/* Recirculate to a specific table, or$/;"	m	struct:nx_action_conntrack	file:
recirc_unroll_actions	ofproto/ofproto-dpif-xlate.c	/^recirc_unroll_actions(const struct ofpact *ofpacts, size_t ofpacts_len,$/;"	f	file:
recircs	ofproto/ofproto-dpif-upcall.c	/^    uint32_t recircs[];   \/* 'n_recircs' id's for which references are held. *\/$/;"	m	struct:udpif_key	file:
recircs	ofproto/ofproto-dpif-xlate.h	/^        uint32_t *recircs;    \/* When 'n_recircs' > 2 *\/$/;"	m	union:xlate_out::__anon184
reconfig_time	ofproto/netflow.c	/^    long long int reconfig_time;  \/* When we reconfigured the timeouts. *\/$/;"	m	struct:netflow	file:
reconfigure_remotes	ovsdb/ovsdb-server.c	/^reconfigure_remotes(struct ovsdb_jsonrpc_server *jsonrpc,$/;"	f	file:
reconfigure_ssl	ovsdb/ovsdb-server.c	/^reconfigure_ssl(const struct shash *all_dbs)$/;"	f	file:
reconfigure_system_stats	vswitchd/bridge.c	/^reconfigure_system_stats(const struct ovsrec_open_vswitch *cfg)$/;"	f	file:
reconnect	lib/jsonrpc.c	/^    struct reconnect *reconnect;$/;"	m	struct:jsonrpc_session	typeref:struct:jsonrpc_session::reconnect	file:
reconnect	lib/netdev-dummy.c	/^    struct reconnect *reconnect;$/;"	m	struct:dummy_packet_rconn	typeref:struct:dummy_packet_rconn::reconnect	file:
reconnect	lib/reconnect.c	/^VLOG_DEFINE_THIS_MODULE(reconnect);$/;"	v
reconnect	lib/reconnect.c	/^struct reconnect {$/;"	s	file:
reconnect	python/ovs/jsonrpc.py	/^import ovs.reconnect$/;"	i
reconnect	tests/test-reconnect.c	/^static struct reconnect *reconnect;$/;"	v	typeref:struct:reconnect	file:
reconnect	tests/test-reconnect.py	/^import ovs.reconnect$/;"	i
reconnect_action	lib/reconnect.h	/^enum reconnect_action {$/;"	g
reconnect_activity	lib/reconnect.c	/^reconnect_activity(struct reconnect *fsm, long long int now)$/;"	f
reconnect_connect_failed	lib/reconnect.c	/^reconnect_connect_failed(struct reconnect *fsm, long long int now, int error)$/;"	f
reconnect_connected	lib/reconnect.c	/^reconnect_connected(struct reconnect *fsm, long long int now)$/;"	f
reconnect_connecting	lib/reconnect.c	/^reconnect_connecting(struct reconnect *fsm, long long int now)$/;"	f
reconnect_create	lib/reconnect.c	/^reconnect_create(long long int now)$/;"	f
reconnect_deadline__	lib/reconnect.c	/^reconnect_deadline__(const struct reconnect *fsm)$/;"	f	file:
reconnect_destroy	lib/reconnect.c	/^reconnect_destroy(struct reconnect *fsm)$/;"	f
reconnect_disable	lib/reconnect.c	/^reconnect_disable(struct reconnect *fsm, long long int now)$/;"	f
reconnect_disconnected	lib/reconnect.c	/^reconnect_disconnected(struct reconnect *fsm, long long int now, int error)$/;"	f
reconnect_enable	lib/reconnect.c	/^reconnect_enable(struct reconnect *fsm, long long int now)$/;"	f
reconnect_force_reconnect	lib/reconnect.c	/^reconnect_force_reconnect(struct reconnect *fsm, long long int now)$/;"	f
reconnect_get_last_connect_elapsed	lib/reconnect.c	/^reconnect_get_last_connect_elapsed(const struct reconnect *fsm,$/;"	f
reconnect_get_last_disconnect_elapsed	lib/reconnect.c	/^reconnect_get_last_disconnect_elapsed(const struct reconnect *fsm,$/;"	f
reconnect_get_max_backoff	lib/reconnect.c	/^reconnect_get_max_backoff(const struct reconnect *fsm)$/;"	f
reconnect_get_max_tries	lib/reconnect.c	/^reconnect_get_max_tries(struct reconnect *fsm)$/;"	f
reconnect_get_min_backoff	lib/reconnect.c	/^reconnect_get_min_backoff(const struct reconnect *fsm)$/;"	f
reconnect_get_name	lib/reconnect.c	/^reconnect_get_name(const struct reconnect *fsm)$/;"	f
reconnect_get_probe_interval	lib/reconnect.c	/^reconnect_get_probe_interval(const struct reconnect *fsm)$/;"	f
reconnect_get_stats	lib/reconnect.c	/^reconnect_get_stats(const struct reconnect *fsm, long long int now,$/;"	f
reconnect_is_connected	lib/reconnect.c	/^reconnect_is_connected(const struct reconnect *fsm)$/;"	f
reconnect_is_enabled	lib/reconnect.c	/^reconnect_is_enabled(const struct reconnect *fsm)$/;"	f
reconnect_is_passive	lib/reconnect.c	/^reconnect_is_passive(const struct reconnect *fsm)$/;"	f
reconnect_listen_error	lib/reconnect.c	/^reconnect_listen_error(struct reconnect *fsm, long long int now, int error)$/;"	f
reconnect_listening	lib/reconnect.c	/^reconnect_listening(struct reconnect *fsm, long long int now)$/;"	f
reconnect_may_retry	lib/reconnect.c	/^reconnect_may_retry(struct reconnect *fsm)$/;"	f	file:
reconnect_port	tests/test-rstp.c	/^reconnect_port(struct bridge *b, int port_no, struct lan *new_lan)$/;"	f	file:
reconnect_port	tests/test-stp.c	/^reconnect_port(struct bridge *b, int port_no, struct lan *new_lan)$/;"	f	file:
reconnect_run	lib/reconnect.c	/^reconnect_run(struct reconnect *fsm, long long int now)$/;"	f
reconnect_set_backoff	lib/reconnect.c	/^reconnect_set_backoff(struct reconnect *fsm, int min_backoff, int max_backoff)$/;"	f
reconnect_set_max_tries	lib/reconnect.c	/^reconnect_set_max_tries(struct reconnect *fsm, unsigned int max_tries)$/;"	f
reconnect_set_name	lib/reconnect.c	/^reconnect_set_name(struct reconnect *fsm, const char *name)$/;"	f
reconnect_set_passive	lib/reconnect.c	/^reconnect_set_passive(struct reconnect *fsm, bool passive, long long int now)$/;"	f
reconnect_set_probe_interval	lib/reconnect.c	/^reconnect_set_probe_interval(struct reconnect *fsm, int probe_interval)$/;"	f
reconnect_set_quiet	lib/reconnect.c	/^reconnect_set_quiet(struct reconnect *fsm, bool quiet)$/;"	f
reconnect_state_name__	lib/reconnect.c	/^reconnect_state_name__(enum state state)$/;"	f	file:
reconnect_stats	lib/reconnect.h	/^struct reconnect_stats {$/;"	s
reconnect_timeout	lib/reconnect.c	/^reconnect_timeout(struct reconnect *fsm, long long int now)$/;"	f
reconnect_transition__	lib/reconnect.c	/^reconnect_transition__(struct reconnect *fsm, long long int now,$/;"	f	file:
reconnect_wait	lib/reconnect.c	/^reconnect_wait(struct reconnect *fsm, long long int now)$/;"	f
recs	vswitchd/bridge.c	/^static struct ovsrec_port **recs;$/;"	v	typeref:struct:ovsrec_port	file:
recurse	ofproto/ofproto-dpif-xlate.c	/^    int recurse;                \/* Current resubmit nesting depth. *\/$/;"	m	struct:xlate_ctx	file:
recurse	ofproto/ofproto-dpif-xlate.h	/^    int recurse;$/;"	m	struct:xlate_in
recurse	python/ovs/fatal_signal.py	/^recurse = False$/;"	v
recv	lib/cfm.c	/^    bool recv;           \/* CCM was received since last fault check. *\/$/;"	m	struct:remote_mp	file:
recv	lib/dpif-provider.h	/^    int (*recv)(struct dpif *dpif, uint32_t handler_id,$/;"	m	struct:dpif_class
recv	lib/lldp/lldpd-structs.h	/^    int (*recv)(struct lldpd *,$/;"	m	struct:lldpd_ops
recv	lib/stream-provider.h	/^    ssize_t (*recv)(struct stream *stream, void *buffer, size_t n);$/;"	m	struct:stream_class
recv	lib/vconn-provider.h	/^    int (*recv)(struct vconn *vconn, struct ofpbuf **msgp);$/;"	m	struct:vconn_class
recv	python/ovs/jsonrpc.py	/^    def recv(self):$/;"	m	class:Connection
recv	python/ovs/jsonrpc.py	/^    def recv(self):$/;"	m	class:Session
recv	python/ovs/stream.py	/^    def recv(self, n):$/;"	m	class:Stream
recv	utilities/ovs-vlan-test	/^    def recv(self, size):$/;"	m	class:VlanClient
recv	utilities/ovs-vlan-test	/^    def recv(self, test_id):$/;"	m	class:VlanServer
recv_S_CLEAR_FLOWS	ovn/controller/ofctrl.c	/^recv_S_CLEAR_FLOWS(const struct ofp_header *oh, enum ofptype type)$/;"	f	file:
recv_S_GENEVE_TABLE_MOD_SENT	ovn/controller/ofctrl.c	/^recv_S_GENEVE_TABLE_MOD_SENT(const struct ofp_header *oh, enum ofptype type)$/;"	f	file:
recv_S_GENEVE_TABLE_REQUESTED	ovn/controller/ofctrl.c	/^recv_S_GENEVE_TABLE_REQUESTED(const struct ofp_header *oh, enum ofptype type)$/;"	f	file:
recv_S_NEW	ovn/controller/ofctrl.c	/^recv_S_NEW(const struct ofp_header *oh OVS_UNUSED,$/;"	f	file:
recv_S_UPDATE_FLOWS	ovn/controller/ofctrl.c	/^recv_S_UPDATE_FLOWS(const struct ofp_header *oh, enum ofptype type)$/;"	f	file:
recv_any_version	lib/vconn-provider.h	/^    bool recv_any_version;      \/* True to receive a message of any version. *\/$/;"	m	struct:vconn
recv_block	python/ovs/jsonrpc.py	/^    def recv_block(self):$/;"	m	class:Connection
recv_fault	lib/cfm.c	/^    enum cfm_fault_reason recv_fault;  \/* Bit mask of faults occurring on$/;"	m	struct:cfm	typeref:enum:cfm::cfm_fault_reason	file:
recv_flow_stats_reply	utilities/ovs-ofctl.c	/^recv_flow_stats_reply(struct vconn *vconn, ovs_be32 send_xid,$/;"	f	file:
recv_packet	utilities/ovs-vlan-test	/^    def recv_packet(self, key, success_callback, timeout_callback):$/;"	m	class:UDPReceiver
recv_purge	lib/dpif-provider.h	/^    void (*recv_purge)(struct dpif *dpif);$/;"	m	struct:dpif_class
recv_queue	lib/netdev-dummy.c	/^    struct ovs_list recv_queue;$/;"	m	struct:netdev_rxq_dummy	typeref:struct:netdev_rxq_dummy::ovs_list	file:
recv_queue_len	lib/netdev-dummy.c	/^    int recv_queue_len;         \/* list_size(&recv_queue). *\/$/;"	m	struct:netdev_rxq_dummy	file:
recv_set	lib/dpif-provider.h	/^    int (*recv_set)(struct dpif *dpif, bool enable);$/;"	m	struct:dpif_class
recv_set_enable	ofproto/ofproto-dpif.c	/^    bool recv_set_enable; \/* Enables or disables receiving packets. *\/$/;"	m	struct:dpif_backer	file:
recv_upcalls	ofproto/ofproto-dpif-upcall.c	/^recv_upcalls(struct handler *handler)$/;"	f	file:
recv_wait	lib/dpif-provider.h	/^    void (*recv_wait)(struct dpif *dpif, uint32_t handler_id);$/;"	m	struct:dpif_class
recv_wait	python/ovs/jsonrpc.py	/^    def recv_wait(self, poller):$/;"	m	class:Connection
recv_wait	python/ovs/jsonrpc.py	/^    def recv_wait(self, poller):$/;"	m	class:Session
recv_wait	python/ovs/stream.py	/^    def recv_wait(self, poller):$/;"	m	class:Stream
recvdLen	datapath-windows/ovsext/Stt.h	/^    UINT32              recvdLen;$/;"	m	struct:_OVS_STT_PKT_ENTRY
reduce_timeout	ofproto/ofproto.c	/^reduce_timeout(uint16_t max, uint16_t *timeout)$/;"	f	file:
refCount	datapath-windows/ovsext/BufferMgmt.h	/^        UINT32 refCount;$/;"	m	struct:_OVS_BUFFER_CONTEXT::__anon2
refCount	datapath-windows/ovsext/IpHelper.h	/^    UINT16            refCount;$/;"	m	struct:_OVS_IPFORWARD_ENTRY
refCount	datapath-windows/ovsext/IpHelper.h	/^    UINT16            refCount;$/;"	m	struct:_OVS_IPNEIGH_ENTRY
refTable	lib/ovsdb-types.h	/^            struct ovsdb_table *refTable; \/* Referenced table, if available. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_uuid_constraints	typeref:struct:ovsdb_base_type::__anon146::ovsdb_uuid_constraints::ovsdb_table
refTableName	lib/ovsdb-types.h	/^            char *refTableName; \/* Name of referenced table, or NULL. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_uuid_constraints
refType	lib/ovsdb-types.h	/^            enum ovsdb_ref_type refType;  \/* Reference type. *\/$/;"	m	struct:ovsdb_base_type::__anon146::ovsdb_uuid_constraints	typeref:enum:ovsdb_base_type::__anon146::ovsdb_uuid_constraints::ovsdb_ref_type
ref_cnt	lib/bfd.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:bfd	typeref:struct:bfd::ovs_refcount	file:
ref_cnt	lib/cfm.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:cfm	typeref:struct:cfm::ovs_refcount	file:
ref_cnt	lib/dpif-netdev.c	/^    struct ovs_refcount ref_cnt;    \/* Every reference must be refcount'ed. *\/$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::ovs_refcount	file:
ref_cnt	lib/dpif-netdev.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::ovs_refcount	file:
ref_cnt	lib/dpif-netdev.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:dp_netdev_flow	typeref:struct:dp_netdev_flow::ovs_refcount	file:
ref_cnt	lib/dpif-netdev.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:dp_netdev_port	typeref:struct:dp_netdev_port::ovs_refcount	file:
ref_cnt	lib/lacp.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:lacp	typeref:struct:lacp::ovs_refcount	file:
ref_cnt	lib/mac-learning.h	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:mac_learning	typeref:struct:mac_learning::ovs_refcount
ref_cnt	lib/mcast-snooping.h	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:mcast_snooping	typeref:struct:mcast_snooping::ovs_refcount
ref_cnt	lib/netdev-provider.h	/^    int ref_cnt;                        \/* Times this devices was opened. *\/$/;"	m	struct:netdev
ref_cnt	lib/ovs-lldp.h	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:lldp	typeref:struct:lldp::ovs_refcount
ref_cnt	lib/rstp-common.h	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:rstp	typeref:struct:rstp::ovs_refcount
ref_cnt	lib/rstp-common.h	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:rstp_port	typeref:struct:rstp_port::ovs_refcount
ref_cnt	lib/stp.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:stp	typeref:struct:stp::ovs_refcount	file:
ref_cnt	lib/tnl-ports.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:tnl_port_in	typeref:struct:tnl_port_in::ovs_refcount	file:
ref_cnt	ofproto/bond.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:bond	typeref:struct:bond::ovs_refcount	file:
ref_cnt	ofproto/netflow.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:netflow	typeref:struct:netflow::ovs_refcount	file:
ref_cnt	ofproto/ofproto-dpif-ipfix.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:dpif_ipfix	typeref:struct:dpif_ipfix::ovs_refcount	file:
ref_cnt	ofproto/ofproto-dpif-mirror.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:mbridge	typeref:struct:mbridge::ovs_refcount	file:
ref_cnt	ofproto/ofproto-dpif-sflow.c	/^    struct ovs_refcount ref_cnt;$/;"	m	struct:dpif_sflow	typeref:struct:dpif_sflow::ovs_refcount	file:
ref_count	datapath/flow.h	/^	int ref_count;$/;"	m	struct:sw_flow_mask
ref_count	include/openflow/openflow-1.1.h	/^    ovs_be32 ref_count;        \/* Number of flows or groups that$/;"	m	struct:ofp11_group_stats
ref_count	lib/ofp-util.h	/^    uint32_t ref_count;$/;"	m	struct:ofputil_group_stats
ref_count	ofproto/ofproto-provider.h	/^    struct ovs_refcount ref_count;$/;"	m	struct:ofgroup	typeref:struct:ofgroup::ovs_refcount
ref_count	ofproto/ofproto-provider.h	/^    struct ovs_refcount ref_count;$/;"	m	struct:rule	typeref:struct:rule::ovs_refcount
refcount	lib/dpif.c	/^    int refcount;$/;"	m	struct:registered_dpif_class	file:
refcount	lib/netdev-dpdk.c	/^    int refcount;$/;"	m	struct:dpdk_mp	file:
refcount	ofproto/ofproto-dpif-rid.h	/^    struct ovs_refcount refcount;$/;"	m	struct:recirc_id_node	typeref:struct:recirc_id_node::ovs_refcount
refcount	ofproto/ofproto-dpif.c	/^    int refcount;$/;"	m	struct:dpif_backer	file:
refill	tests/test-json.c	/^refill(FILE *file, void *buffer, size_t buffer_size, size_t *n, size_t *used)$/;"	f	file:
refresh_channels	lib/dpif-netlink.c	/^    bool refresh_channels;$/;"	m	struct:dpif_netlink	file:
refresh_controller_status	vswitchd/bridge.c	/^refresh_controller_status(void)$/;"	f	file:
refresh_local	ofproto/in-band.c	/^refresh_local(struct in_band *ib)$/;"	f	file:
refresh_remote	ofproto/in-band.c	/^refresh_remote(struct in_band *ib, struct in_band_remote *r)$/;"	f	file:
refresh_remotes	ofproto/in-band.c	/^refresh_remotes(struct in_band *ib)$/;"	f	file:
refresh_rusage	lib/timeval.c	/^refresh_rusage(void)$/;"	f	file:
refs	ovsdb/ovsdb-idlc	/^                refs = []$/;"	v
register	python/ovs/poller.py	/^    def register(self, fd, events):$/;"	m	class:_SelectSelect
register_all	python/ovs/db/idl.py	/^    def register_all(self):$/;"	m	class:SchemaHelper
register_columns	python/ovs/db/idl.py	/^    def register_columns(self, table, columns):$/;"	m	class:SchemaHelper
register_dp_purge_cb	lib/dpif-provider.h	/^    void (*register_dp_purge_cb)(struct dpif *, dp_purge_callback *, void *aux);$/;"	m	struct:dpif_class
register_method	python/ovs/stream.py	/^    def register_method(method, cls):$/;"	m	class:Stream
register_pernet_device	datapath/linux/compat/include/net/net_namespace.h	17;"	d
register_rec	vswitchd/bridge.c	/^register_rec(struct ovsrec_port *rec)$/;"	f	file:
register_table	python/ovs/db/idl.py	/^    def register_table(self, table):$/;"	m	class:SchemaHelper
register_upcall_cb	lib/dpif-provider.h	/^    void (*register_upcall_cb)(struct dpif *, upcall_callback *, void *aux);$/;"	m	struct:dpif_class
registered_dpif_class	lib/dpif.c	/^struct registered_dpif_class {$/;"	s	file:
regs	lib/flow.h	/^    uint32_t regs[FLOW_N_REGS]; \/* Registers. *\/$/;"	m	struct:flow
regs	ofproto/ofproto-dpif-rid.h	/^    uint64_t regs[FLOW_N_XREGS];  \/* Registers. *\/$/;"	m	struct:recirc_metadata
rehash	lib/cmap.c	/^rehash(const struct cmap_impl *impl, uint32_t hash)$/;"	f	file:
reinit_ports	ofproto/ofproto.c	/^reinit_ports(struct ofproto *p)$/;"	f	file:
reinsert_bal	ofproto/bond.c	/^reinsert_bal(struct ovs_list *bals, struct bond_slave *slave)$/;"	f	file:
reject_slave_controller	ofproto/ofproto.c	/^reject_slave_controller(struct ofconn *ofconn)$/;"	f	file:
relevant	lib/route-table.c	/^    bool relevant;        \/* Should this message be processed? *\/$/;"	m	struct:route_table_msg	file:
reliable	lib/rconn.c	/^    bool reliable;$/;"	m	struct:rconn	file:
reload	debian/ovs-monitor-ipsec	/^    def reload(self):$/;"	f
reload_server	debian/openvswitch-testcontroller.init	/^reload_server() {$/;"	f
relop	lib/db-ctl-base.c	/^enum relop {$/;"	g	file:
relop	ovn/lib/expr.c	/^    const struct expr_symbol *relop;$/;"	m	struct:expr_sort	typeref:struct:expr_sort::expr_symbol	file:
relop	ovn/lib/expr.h	/^            enum expr_relop relop;$/;"	m	struct:expr::__anon200::__anon201	typeref:enum:expr::__anon200::__anon201::expr_relop
remote	ovsdb/jsonrpc-server.c	/^    struct ovsdb_jsonrpc_remote *remote;$/;"	m	struct:ovsdb_jsonrpc_session	typeref:struct:ovsdb_jsonrpc_session::ovsdb_jsonrpc_remote	file:
remote	vtep/vtep-idl.h	/^	struct vteprec_physical_locator *remote;$/;"	m	struct:vteprec_tunnel	typeref:struct:vteprec_tunnel::vteprec_physical_locator
remote_addr	ofproto/in-band.c	/^    struct sockaddr_in remote_addr;  \/* IP address, in network byte order. *\/$/;"	m	struct:in_band_remote	typeref:struct:in_band_remote::sockaddr_in	file:
remote_addr	utilities/ovs-benchmark.c	/^static struct in_addr remote_addr;$/;"	v	typeref:struct:in_addr	file:
remote_cfg	vtep/vtep-ctl.c	/^    const struct vteprec_mcast_macs_remote *remote_cfg;$/;"	m	struct:vtep_ctl_mcast_mac	typeref:struct:vtep_ctl_mcast_mac::vteprec_mcast_macs_remote	file:
remote_mac	ofproto/in-band.c	/^    struct eth_addr remote_mac;      \/* Next-hop MAC, all-zeros if unknown. *\/$/;"	m	struct:in_band_remote	typeref:struct:in_band_remote::eth_addr	file:
remote_max_port	utilities/ovs-benchmark.c	/^static unsigned short int remote_min_port, remote_max_port;$/;"	v	file:
remote_min_port	utilities/ovs-benchmark.c	/^static unsigned short int remote_min_port, remote_max_port;$/;"	v	file:
remote_mp	lib/cfm.c	/^struct remote_mp {$/;"	s	file:
remote_mps	lib/cfm.c	/^    struct hmap remote_mps;   \/* Remote MPs. *\/$/;"	m	struct:cfm	typeref:struct:cfm::hmap	file:
remote_netdev	ofproto/in-band.c	/^    struct netdev *remote_netdev;    \/* Device to send to next-hop MAC. *\/$/;"	m	struct:in_band_remote	typeref:struct:in_band_remote::netdev	file:
remote_opstate	lib/cfm.h	/^    int remote_opstate;$/;"	m	struct:cfm_status
remote_opup	lib/cfm.c	/^    bool remote_opup;      \/* Remote Operational State. *\/$/;"	m	struct:cfm	file:
remotes	ofproto/in-band.c	/^    struct in_band_remote *remotes;$/;"	m	struct:in_band	typeref:struct:in_band::in_band_remote	file:
remotes	ovsdb/jsonrpc-server.c	/^    struct shash remotes;      \/* Contains "struct ovsdb_jsonrpc_remote *"s. *\/$/;"	m	struct:ovsdb_jsonrpc_server	typeref:struct:ovsdb_jsonrpc_server::shash	file:
remotes	ovsdb/ovsdb-server.c	/^    struct sset *remotes;$/;"	m	struct:server_config	typeref:struct:server_config::sset	file:
removeControllerCfg	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def removeControllerCfg():$/;"	f
remove_file_to_unlink	python/ovs/fatal_signal.py	/^def remove_file_to_unlink(file):$/;"	f
remove_from_bridge	xenserver/etc_xensource_scripts_vif	/^remove_from_bridge()$/;"	f
remove_lport	ovn/utilities/ovn-nbctl.c	/^remove_lport(const struct nbrec_logical_switch *lswitch, size_t idx)$/;"	f	file:
remove_port	ovn/controller/patch.c	/^remove_port(struct controller_ctx *ctx,$/;"	f	file:
remove_version	lib/classifier-private.h	/^    ATOMIC(cls_version_t) remove_version;   \/* Version rule is removed in. *\/$/;"	m	struct:cls_match
removed	ofproto/ofproto-provider.h	/^    bool removed;                  \/* Rule has been removed from the ofproto$/;"	m	struct:rule
removed_reason	ofproto/ofproto-provider.h	/^    uint8_t removed_reason;$/;"	m	struct:rule
rename_netdev	xenserver/opt_xensource_libexec_interface-reconfigure	/^    def rename_netdev(old_name, new_name):$/;"	f	function:netdev_remap_name
render	python/ovstest/rpcserver.py	/^    def render(self, request):$/;"	m	class:TestArena
reopen_log_file	python/ovs/vlog.py	/^    def reopen_log_file():$/;"	m	class:Vlog
replace_rule_create	ofproto/ofproto.c	/^replace_rule_create(struct ofproto *ofproto, struct ofputil_flow_mod *fm,$/;"	f	file:
replace_rule_revert	ofproto/ofproto.c	/^static void replace_rule_revert(struct ofproto *ofproto,$/;"	f	file:
replace_rule_start	ofproto/ofproto.c	/^replace_rule_start(struct ofproto *ofproto, cls_version_t version,$/;"	f	file:
replica	ovsdb/file.c	/^    struct ovsdb_replica replica;$/;"	m	struct:ovsdb_file	typeref:struct:ovsdb_file::ovsdb_replica	file:
replica	ovsdb/monitor.c	/^    struct ovsdb_replica replica;$/;"	m	struct:ovsdb_monitor	typeref:struct:ovsdb_monitor::ovsdb_replica	file:
replicas	ovsdb/ovsdb.h	/^    struct ovs_list replicas;   \/* Contains "struct ovsdb_replica"s. *\/$/;"	m	struct:ovsdb	typeref:struct:ovsdb::ovs_list
replies	ofproto/ofproto.c	/^    struct ovs_list replies;$/;"	m	struct:queue_stats_cbdata	typeref:struct:queue_stats_cbdata::ovs_list	file:
reply	lib/netlink-socket.h	/^    struct ofpbuf *reply;       \/* Reply (empty if reply was an error code). *\/$/;"	m	struct:nl_transaction	typeref:struct:nl_transaction::ofpbuf
reply	python/ovs/unixctl/server.py	/^    def reply(self, body):$/;"	m	class:UnixctlConnection
reply_counter	ofproto/connmgr.c	/^    struct rconn_packet_counter *reply_counter;$/;"	m	struct:ofconn	typeref:struct:ofconn::rconn_packet_counter	file:
reply_error	python/ovs/unixctl/server.py	/^    def reply_error(self, body):$/;"	m	class:UnixctlConnection
report_error_if_changed	ovsdb/ovsdb-server.c	/^report_error_if_changed(char *error, char **last_errorp)$/;"	f	file:
report_hook	ofproto/ofproto-dpif-xlate.h	/^    void (*report_hook)(struct xlate_in *, int recurse,$/;"	m	struct:xlate_in
report_loss	lib/dpif-netlink.c	/^report_loss(struct dpif_netlink *dpif, struct dpif_channel *ch, uint32_t ch_idx,$/;"	f	file:
request	include/openflow/openflow-1.4.h	/^    struct ofp_header request;  \/* Request being forwarded. *\/$/;"	m	struct:ofp14_requestforward	typeref:struct:ofp14_requestforward::ofp_header
request	lib/netlink-socket.h	/^    struct ofpbuf *request;     \/* Request to send. *\/$/;"	m	struct:nl_transaction	typeref:struct:nl_transaction::ofpbuf
request	ofproto/ofproto.c	/^    const struct ofp_header *request;$/;"	m	struct:flow_mod_requester	typeref:struct:flow_mod_requester::ofp_header	file:
request	ovsdb/trigger.h	/^    struct json *request;       \/* Database request. *\/$/;"	m	struct:ovsdb_trigger	typeref:struct:ovsdb_trigger::json
request	utilities/ovs-vlan-test	/^    def request(self, resource):$/;"	m	class:VlanClient
requestEvent	datapath-windows/ovsext/TunnelFilter.c	/^    KEVENT                  requestEvent;$/;"	m	struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
request_id	lib/ovsdb-idl.c	/^    struct json *request_id;$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::json	file:
request_id	lib/ovsdb-idl.c	/^    struct json *request_id;$/;"	m	struct:ovsdb_idl_txn	typeref:struct:ovsdb_idl_txn::json	file:
request_id	lib/unixctl.c	/^    struct json *request_id;   \/* ID of the currently active request. *\/$/;"	m	struct:unixctl_conn	typeref:struct:unixctl_conn::json	file:
required_argument	include/windows/getopt.h	42;"	d
requires_datapath_assistance	lib/odp-execute.c	/^requires_datapath_assistance(const struct nlattr *a)$/;"	f	file:
res1	datapath-windows/ovsext/NetProto.h	/^   UINT16    res1:4,$/;"	m	struct:TCPHdr
reserve_sfa_size	datapath/flow_netlink.c	/^static struct nlattr *reserve_sfa_size(struct sw_flow_actions **sfa,$/;"	f	file:
reserve_sfa_size	datapath/linux/flow_netlink.c	/^static struct nlattr *reserve_sfa_size(struct sw_flow_actions **sfa,$/;"	f	file:
reserved	datapath-windows/ovsext/NetProto.h	/^    UINT8 reserved;$/;"	m	struct:IPv6FragHdr
reserved	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT16 reserved;$/;"	m	struct:_GENL_MSG_HDR
reserved	datapath-windows/ovsext/Stt.h	/^    UINT8    reserved;$/;"	m	struct:SttHdr
reserved	datapath/linux/compat/include/net/stt.h	/^	__u8		reserved;$/;"	m	struct:stthdr
reserved	include/openflow/nicira-ext.h	/^    uint8_t reserved[10];$/;"	m	struct:nx_geneve_table_reply
reserved	lib/netlink-protocol.h	/^    uint16_t reserved;$/;"	m	struct:genlmsghdr
reserved1	datapath-windows/ovsext/Vxlan.h	/^    UINT32  reserved1:24;$/;"	m	struct:VXLANHdr
reserved2	datapath-windows/ovsext/Vxlan.h	/^    UINT32   reserved2:8;$/;"	m	struct:VXLANHdr
reserved_flags	datapath/linux/vport-lisp.c	/^	__u8 reserved_flags:3;$/;"	m	struct:lisphdr	file:
reserved_flags	datapath/vport-lisp.c	/^	__u8 reserved_flags:3;$/;"	m	struct:lisphdr	file:
reserved_flags1	datapath/linux/compat/include/net/vxlan.h	/^	__u8	reserved_flags1:1,$/;"	m	struct:vxlanhdr_gbp
reserved_flags1	datapath/linux/compat/include/net/vxlan.h	/^	__u8	reserved_flags1:3,$/;"	m	struct:vxlanhdr_gbp
reserved_flags2	datapath/linux/compat/include/net/vxlan.h	/^		reserved_flags2:2,$/;"	m	struct:vxlanhdr_gbp
reserved_flags3	datapath/linux/compat/include/net/vxlan.h	/^		reserved_flags3:1;$/;"	m	struct:vxlanhdr_gbp
reserved_flags3	datapath/linux/compat/include/net/vxlan.h	/^		reserved_flags3:3;$/;"	m	struct:vxlanhdr_gbp
reset	lib/sflow_poller.c	/^static void reset(SFLPoller *poller)$/;"	f	file:
reset	lib/sflow_receiver.c	/^static void reset(SFLReceiver *receiver) {$/;"	f	file:
reset	lib/sflow_sampler.c	/^static void reset(SFLSampler *sampler)$/;"	f	file:
reset	utilities/ovs-dev.py	/^def reset():$/;"	f
resetSampleCollector	lib/sflow_receiver.c	/^static void resetSampleCollector(SFLReceiver *receiver)$/;"	f	file:
resize	lib/hmap.c	/^resize(struct hmap *hmap, size_t new_mask, const char *where)$/;"	f	file:
resource	python/ovs/daemon.py	/^import resource$/;"	i
restart	debian/openvswitch-switch.init	/^restart () {$/;"	f
restart	rhel/etc_init.d_openvswitch	/^restart () {$/;"	f
restart	utilities/ovs-ctl	/^restart () {$/;"	f
restart	utilities/ovs-ctl.in	/^restart () {$/;"	f
restart	xenserver/etc_init.d_openvswitch	/^restart () {$/;"	f
restart	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def restart(self):$/;"	m	class:VSwitchService
restartService	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def restartService(self, name):$/;"	m	class:VSwitchControllerDialogue
restart_controller	ovn/utilities/ovn-ctl	/^restart_controller () {$/;"	f
restart_northd	ovn/utilities/ovn-ctl	/^restart_northd () {$/;"	f
restore_all_flags	lib/netdev.c	/^restore_all_flags(void *aux OVS_UNUSED)$/;"	f	file:
restore_flows	utilities/ovs-ctl	/^restore_flows () {$/;"	f
restore_flows	utilities/ovs-ctl.in	/^restore_flows () {$/;"	f
restore_interfaces	utilities/ovs-ctl	/^restore_interfaces () {$/;"	f
restore_interfaces	utilities/ovs-ctl.in	/^restore_interfaces () {$/;"	f
restore_ofports	utilities/ovs-ctl	/^restore_ofports () {$/;"	f
restore_ofports	utilities/ovs-ctl.in	/^restore_ofports () {$/;"	f
resubmit	utilities/ovs-pipegen.py	/^def resubmit(nxt):$/;"	f
resubmit_hook	ofproto/ofproto-dpif-xlate.h	/^    void (*resubmit_hook)(struct xlate_in *, struct rule_dpif *rule,$/;"	m	struct:xlate_in
resubmit_stats	ofproto/ofproto-dpif-xlate.h	/^    const struct dpif_flow_stats *resubmit_stats;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::dpif_flow_stats
resubmits	ofproto/ofproto-dpif-xlate.c	/^    int resubmits;              \/* Total number of resubmits. *\/$/;"	m	struct:xlate_ctx	file:
resubmits	ofproto/ofproto-dpif-xlate.h	/^    int resubmits;$/;"	m	struct:xlate_in
result	lib/jsonrpc.h	/^    struct json *result;        \/* Successful reply only. *\/$/;"	m	struct:jsonrpc_msg	typeref:struct:jsonrpc_msg::json
result	ofproto/ofproto-dpif.c	/^    struct ds *result;$/;"	m	struct:trace_ctx	typeref:struct:trace_ctx::ds	file:
result	ovsdb/trigger.h	/^    struct json *result;        \/* Result (null if none yet). *\/$/;"	m	struct:ovsdb_trigger	typeref:struct:ovsdb_trigger::json
resumeProducing	python/ovstest/tcp.py	/^    def resumeProducing(self):$/;"	m	class:Producer
resv	datapath-windows/ovsext/NetProto.h	/^         resv:4;$/;"	m	struct:IGMPV3Trailer
retVal	windows/ovs-windows-installer/Actions/OVSActions.js	/^    var retVal = shell.run(cmd, windowStyle, waitOnReturn);$/;"	v
retry	utilities/ovs-vsctl.c	/^static bool retry;$/;"	v	file:
returnUnchanged	python/ovs/db/data.py	/^def returnUnchanged(x):$/;"	f
returnUnchanged	python/ovs/db/types.py	/^def returnUnchanged(x):$/;"	f
retval	lib/netdev-bsd.c	/^    int retval;$/;"	m	struct:pcap_arg	file:
rev_bond	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_bond);$/;"	v
rev_flow_table	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_flow_table);$/;"	v
rev_mac_learning	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_mac_learning);$/;"	v
rev_mcast_snooping	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_mcast_snooping);$/;"	v
rev_port_toggled	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_port_toggled);$/;"	v
rev_reconfigure	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_reconfigure);$/;"	v
rev_rstp	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_rstp);$/;"	v
rev_stp	ofproto/ofproto-dpif.c	/^COVERAGE_DEFINE(rev_stp);$/;"	v
reval_barrier	ofproto/ofproto-dpif-upcall.c	/^    struct ovs_barrier reval_barrier;  \/* Barrier used by revalidators. *\/$/;"	m	struct:udpif	typeref:struct:udpif::ovs_barrier	file:
reval_exit	ofproto/ofproto-dpif-upcall.c	/^    bool reval_exit;                   \/* Set by leader on 'exit_latch. *\/$/;"	m	struct:udpif	file:
reval_result	ofproto/ofproto-dpif-upcall.c	/^enum reval_result {$/;"	g	file:
reval_seq	ofproto/ofproto-dpif-upcall.c	/^    struct seq *reval_seq;             \/* Incremented to force revalidation. *\/$/;"	m	struct:udpif	typeref:struct:udpif::seq	file:
reval_seq	ofproto/ofproto-dpif-upcall.c	/^    uint64_t reval_seq;            \/* udpif->reval_seq at translation time. *\/$/;"	m	struct:upcall	file:
revalidate	ofproto/ofproto-dpif-upcall.c	/^revalidate(struct revalidator *revalidator)$/;"	f	file:
revalidate_gateway	ovn/controller-vtep/gateway.c	/^revalidate_gateway(struct controller_vtep_ctx *ctx)$/;"	f	file:
revalidate_missed_dp_flow	ofproto/ofproto-dpif-upcall.c	/^COVERAGE_DEFINE(revalidate_missed_dp_flow);$/;"	v
revalidate_reason	ofproto/ofproto-dpif.c	/^enum revalidate_reason {$/;"	g	file:
revalidator	ofproto/ofproto-dpif-upcall.c	/^struct revalidator {$/;"	s	file:
revalidator_pause	ofproto/ofproto-dpif-upcall.c	/^revalidator_pause(struct revalidator *revalidator)$/;"	f	file:
revalidator_purge	ofproto/ofproto-dpif-upcall.c	/^revalidator_purge(struct revalidator *revalidator)$/;"	f	file:
revalidator_sweep	ofproto/ofproto-dpif-upcall.c	/^revalidator_sweep(struct revalidator *revalidator)$/;"	f	file:
revalidator_sweep__	ofproto/ofproto-dpif-upcall.c	/^revalidator_sweep__(struct revalidator *revalidator, bool purge)$/;"	f	file:
revalidators	ofproto/ofproto-dpif-upcall.c	/^    struct revalidator *revalidators;  \/* Flow revalidators. *\/$/;"	m	struct:udpif	typeref:struct:udpif::revalidator	file:
reverse	tests/test-classifier.c	/^reverse(int *a, int n)$/;"	f	file:
reverse	tests/test-heap.c	/^reverse(uint32_t *a, int n)$/;"	f	file:
revert	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def revert(self):$/;"	m	class:ConfigurationFile
rewrite	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def rewrite(cls):$/;"	m	class:Datapath
rewrite	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^    def rewrite(cls):$/;"	m	class:DatapathVswitch
rightmost_1bit	lib/util.h	/^rightmost_1bit(uintmax_t x)$/;"	f
rightmost_1bit_idx	lib/util.h	/^rightmost_1bit_idx(uint64_t x)$/;"	f
rk	lib/aes128.h	/^    uint32_t rk[128\/8 + 28];$/;"	m	struct:aes128
rl	lib/bfd.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(20, 20);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/cfm.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(20, 30);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/jsonrpc.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/learning-switch.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(30, 300);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/meta-flow.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/netdev-bsd.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 20);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/netdev-dpdk.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 20);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/netdev-linux.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 20);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/netdev.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 20);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/netlink-socket.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(60, 600);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/netlink.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(60, 600);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/nx-match.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/ofp-actions.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/route-table.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 20);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/stream-fd.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(10, 25);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/stream-ssl.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(10, 25);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/unixctl.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	lib/vconn-stream.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(10, 25);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/connmgr.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/in-band.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(60, 60);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/ofproto-dpif-ipfix.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/ofproto-dpif-sflow.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/ofproto-dpif-upcall.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/ofproto-dpif.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/ofproto.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ofproto/tunnel.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	ovsdb/jsonrpc-server.c	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
rlim_is_finite	lib/process.c	/^rlim_is_finite(rlim_t limit)$/;"	f	file:
rmps	lib/cfm.h	/^    uint64_t *rmps;$/;"	m	struct:cfm_status
rmps_array	lib/cfm.c	/^    uint64_t *rmps_array;     \/* Cache of remote_mps. *\/$/;"	m	struct:cfm	file:
rmps_array_len	lib/cfm.c	/^    size_t rmps_array_len;    \/* Number of rmps in 'rmps_array'. *\/$/;"	m	struct:cfm	file:
rmt_diag	lib/bfd.c	/^    enum diag rmt_diag;           \/* Remote diagnostic. *\/$/;"	m	struct:bfd	typeref:enum:bfd::diag	file:
rmt_disc	lib/bfd.c	/^    uint32_t rmt_disc;            \/* bfd.RemoteDiscr. *\/$/;"	m	struct:bfd	file:
rmt_eth_dst	lib/bfd.c	/^    struct eth_addr rmt_eth_dst;   \/* Remote eth dst address. *\/$/;"	m	struct:bfd	typeref:struct:bfd::eth_addr	file:
rmt_flags	lib/bfd.c	/^    enum flags rmt_flags;         \/* Flags last received. *\/$/;"	m	struct:bfd	typeref:enum:bfd::flags	file:
rmt_min_rx	lib/bfd.c	/^    long long int rmt_min_rx;     \/* bfd.RemoteMinRxInterval. *\/$/;"	m	struct:bfd	file:
rmt_min_tx	lib/bfd.c	/^    long long int rmt_min_tx;     \/* Remote minimum TX interval. *\/$/;"	m	struct:bfd	file:
rmt_state	lib/bfd.c	/^    enum state rmt_state;         \/* bfd.RemoteSessionState. *\/$/;"	m	struct:bfd	typeref:enum:bfd::state	file:
rn_ids	datapath/vport.h	/^	struct reciprocal_value rn_ids;$/;"	m	struct:vport_portids	typeref:struct:vport_portids::reciprocal_value
ro_c	Makefile	/^ro_c = echo '\/* -*- mode: c; buffer-read-only: t -*- *\/'$/;"	m
ro_shell	Makefile	/^ro_shell = printf '\\043 Generated automatically -- do not modify!    -*- buffer-read-only: t -*-\\n'$/;"	m
role	include/openflow/nicira-ext.h	/^    ovs_be32 role;              \/* One of NX_ROLE_*. *\/$/;"	m	struct:nx_role_request
role	include/openflow/openflow-1.2.h	/^    ovs_be32 role;            \/* One of OFPCR12_ROLE_*. *\/$/;"	m	struct:ofp12_role_request
role	include/openflow/openflow-1.4.h	/^    ovs_be32 role;              \/* One of OFPCR_ROLE_*. *\/$/;"	m	struct:ofp14_role_status
role	lib/ofp-util.h	/^    enum ofp12_controller_role role;$/;"	m	struct:ofputil_role_request	typeref:enum:ofputil_role_request::ofp12_controller_role
role	lib/ofp-util.h	/^    enum ofp12_controller_role role;$/;"	m	struct:ofputil_role_status	typeref:enum:ofputil_role_status::ofp12_controller_role
role	lib/vswitch-idl.h	/^	char *role;$/;"	m	struct:ovsrec_controller
role	ofproto/connmgr.c	/^    enum ofp12_controller_role role;           \/* Role. *\/$/;"	m	struct:ofconn	typeref:enum:ofconn::ofp12_controller_role	file:
role	ofproto/ofproto.h	/^    enum ofp12_controller_role role;$/;"	m	struct:ofproto_controller_info	typeref:enum:ofproto_controller_info::ofp12_controller_role
role	ofproto/ofproto.h	/^    enum rstp_port_role role;$/;"	m	struct:ofproto_port_rstp_status	typeref:enum:ofproto_port_rstp_status::rstp_port_role
role	ofproto/ofproto.h	/^    enum stp_role role;$/;"	m	struct:ofproto_port_stp_status	typeref:enum:ofproto_port_stp_status::stp_role
root	lib/classifier.h	/^    rcu_trie_ptr root;            \/* NULL if none. *\/$/;"	m	struct:cls_trie
root_bridge_id	lib/rstp-common.h	/^    rstp_identifier root_bridge_id;$/;"	m	struct:rstp_priority_vector
root_changed	lib/rstp-common.h	/^    bool root_changed;$/;"	m	struct:rstp
root_id	ofproto/ofproto.h	/^    rstp_identifier root_id;$/;"	m	struct:ofproto_rstp_status
root_path_cost	lib/rstp-common.h	/^    uint32_t root_path_cost;$/;"	m	struct:rstp_priority_vector
root_path_cost	lib/stp.c	/^    unsigned int root_path_cost;    \/* 8.5.3.2: Cost of path to root. *\/$/;"	m	struct:stp	file:
root_path_cost	ofproto/ofproto.h	/^    int root_path_cost;$/;"	m	struct:ofproto_stp_status
root_path_cost	ofproto/ofproto.h	/^    uint32_t root_path_cost;$/;"	m	struct:ofproto_rstp_status
root_port	lib/stp.c	/^    struct stp_port *root_port;     \/* 8.5.3.3: Lowest cost port to root. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_port	file:
root_prefix	debian/ovs-monitor-ipsec	/^root_prefix = ''                # Prefix for absolute file names, for testing.$/;"	v
root_prefix	vtep/ovs-vtep	/^root_prefix = ""$/;"	v
root_prefix	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def root_prefix():$/;"	f
root_set_size	ovsdb/ovsdb.c	/^root_set_size(const struct ovsdb_schema *schema)$/;"	f	file:
rotate32	lib/sha1.c	/^rotate32(uint32_t x, int n)$/;"	f	file:
round_up	build-aux/extract-ofp-actions	/^def round_up(x, y):$/;"	f
round_up_pow2	lib/multipath.c	/^round_up_pow2(unsigned int x)$/;"	f	file:
rounddown	datapath/linux/compat/include/linux/kernel.h	60;"	d
route6_notifier	lib/route-table.c	/^static struct nln_notifier *route6_notifier = NULL;$/;"	v	typeref:struct:nln_notifier	file:
route_data	lib/route-table.c	/^struct route_data {$/;"	s	file:
route_map_clear	lib/route-table.c	/^route_map_clear(void)$/;"	f	file:
route_notifier	lib/route-table.c	/^static struct nln_notifier *route_notifier = NULL;$/;"	v	typeref:struct:nln_notifier	file:
route_table	lib/route-table.c	/^VLOG_DEFINE_THIS_MODULE(route_table);$/;"	v
route_table_bsd	lib/route-table-bsd.c	/^VLOG_DEFINE_THIS_MODULE(route_table_bsd);$/;"	v
route_table_change	lib/route-table.c	/^route_table_change(const struct route_table_msg *change OVS_UNUSED,$/;"	f	file:
route_table_fallback_lookup	lib/route-table-bsd.c	/^route_table_fallback_lookup(ovs_be32 ip, char name[], ovs_be32 *gw)$/;"	f
route_table_fallback_lookup	lib/route-table-stub.c	/^route_table_fallback_lookup(ovs_be32 ip_dst OVS_UNUSED,$/;"	f
route_table_fallback_lookup	lib/route-table.c	/^route_table_fallback_lookup(ovs_be32 ip_dst OVS_UNUSED,$/;"	f
route_table_get_change_seq	lib/route-table-bsd.c	/^route_table_get_change_seq(void)$/;"	f
route_table_get_change_seq	lib/route-table-stub.c	/^route_table_get_change_seq(void)$/;"	f
route_table_get_change_seq	lib/route-table.c	/^route_table_get_change_seq(void)$/;"	f
route_table_handle_msg	lib/route-table.c	/^route_table_handle_msg(const struct route_table_msg *change)$/;"	f	file:
route_table_init	lib/route-table-bsd.c	/^route_table_init(void)$/;"	f
route_table_init	lib/route-table-stub.c	/^route_table_init(void)$/;"	f
route_table_msg	lib/route-table.c	/^struct route_table_msg {$/;"	s	file:
route_table_mutex	lib/route-table.c	/^static struct ovs_mutex route_table_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
route_table_parse	lib/route-table.c	/^route_table_parse(struct ofpbuf *buf, struct route_table_msg *change)$/;"	f	file:
route_table_reset	lib/route-table.c	/^route_table_reset(void)$/;"	f	file:
route_table_run	lib/route-table-bsd.c	/^route_table_run(void)$/;"	f
route_table_run	lib/route-table-stub.c	/^route_table_run(void)$/;"	f
route_table_valid	lib/route-table.c	/^static bool route_table_valid = false;$/;"	v	file:
route_table_wait	lib/route-table-bsd.c	/^route_table_wait(void)$/;"	f
route_table_wait	lib/route-table-stub.c	/^route_table_wait(void)$/;"	f
router	lib/sflow.h	/^    SFLExtended_router router;$/;"	m	union:_SFLFlow_type
routerEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t routerEncodingLength(SFLExtended_router *router) {$/;"	f	file:
router_ports	ovn/northd/ovn-northd.c	/^    struct ovn_port **router_ports;$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::ovn_port	file:
row	ovsdb/execution.c	/^    const struct ovsdb_row *row;$/;"	m	struct:update_row_cbdata	typeref:struct:update_row_cbdata::ovsdb_row	file:
row	ovsdb/row.h	/^    const struct ovsdb_row *row;$/;"	m	struct:ovsdb_row_hash_node	typeref:struct:ovsdb_row_hash_node::ovsdb_row
row_ids	lib/db-ctl-base.h	/^    struct ctl_row_id row_ids[2];$/;"	m	struct:ctl_table_class	typeref:struct:ctl_table_class::ctl_row_id
row_init	lib/ovsdb-idl-provider.h	/^    void (*row_init)(struct ovsdb_idl_row *);$/;"	m	struct:ovsdb_idl_table_class
row_uuids	tests/test-ovsdb.c	/^    struct uuid *row_uuids;$/;"	m	struct:do_query_cbdata	typeref:struct:do_query_cbdata::uuid	file:
rows	lib/ovsdb-idl-provider.h	/^    struct hmap rows;        \/* Contains "struct ovsdb_idl_row"s. *\/$/;"	m	struct:ovsdb_idl_table	typeref:struct:ovsdb_idl_table::hmap
rows	ovsdb/monitor.c	/^    struct hmap rows;$/;"	m	struct:ovsdb_monitor_changes	typeref:struct:ovsdb_monitor_changes::hmap	file:
rows	ovsdb/row.h	/^    const struct ovsdb_row **rows;$/;"	m	struct:ovsdb_row_set	typeref:struct:ovsdb_row_set::ovsdb_row
rows	ovsdb/row.h	/^    struct hmap rows;$/;"	m	struct:ovsdb_row_hash	typeref:struct:ovsdb_row_hash::hmap
rows	ovsdb/table.h	/^    struct hmap rows;           \/* Contains "struct ovsdb_row"s. *\/$/;"	m	struct:ovsdb_table	typeref:struct:ovsdb_table::hmap
rpc	lib/jsonrpc.c	/^    struct jsonrpc *rpc;$/;"	m	struct:jsonrpc_session	typeref:struct:jsonrpc_session::jsonrpc	file:
rpc	lib/unixctl.c	/^    struct jsonrpc *rpc;$/;"	m	struct:unixctl_conn	typeref:struct:unixctl_conn::jsonrpc	file:
rpc_client	python/ovstest/util.py	/^def rpc_client(ip, port):$/;"	f
rpcserver	utilities/ovs-test	/^import ovstest.rpcserver as rpcserver$/;"	i
rpl___genl_register_family	datapath/linux/compat/genetlink-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl___genl_register_family);$/;"	v
rpl___genl_register_family	datapath/linux/compat/genetlink-openvswitch.c	/^int rpl___genl_register_family(struct rpl_genl_family *f)$/;"	f
rpl___genl_register_family	datapath/linux/genetlink-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl___genl_register_family);$/;"	v
rpl___genl_register_family	datapath/linux/genetlink-openvswitch.c	/^int rpl___genl_register_family(struct rpl_genl_family *f)$/;"	f
rpl___net_get_random_once	datapath/linux/compat/utils.c	/^EXPORT_SYMBOL_GPL(rpl___net_get_random_once);$/;"	v
rpl___net_get_random_once	datapath/linux/compat/utils.c	/^bool rpl___net_get_random_once(void *buf, int nbytes, bool *done,$/;"	f
rpl___net_get_random_once	datapath/linux/utils.c	/^EXPORT_SYMBOL_GPL(rpl___net_get_random_once);$/;"	v
rpl___net_get_random_once	datapath/linux/utils.c	/^bool rpl___net_get_random_once(void *buf, int nbytes, bool *done,$/;"	f
rpl___vlan_hwaccel_put_tag	datapath/linux/compat/include/linux/if_vlan.h	/^static inline struct sk_buff *rpl___vlan_hwaccel_put_tag(struct sk_buff *skb,$/;"	f
rpl__skb_get_rxhash	datapath/linux/compat/flow_dissector.c	/^EXPORT_SYMBOL_GPL(rpl__skb_get_rxhash);$/;"	v
rpl__skb_get_rxhash	datapath/linux/compat/flow_dissector.c	/^u32 rpl__skb_get_rxhash(struct sk_buff *skb)$/;"	f
rpl__skb_get_rxhash	datapath/linux/flow_dissector.c	/^EXPORT_SYMBOL_GPL(rpl__skb_get_rxhash);$/;"	v
rpl__skb_get_rxhash	datapath/linux/flow_dissector.c	/^u32 rpl__skb_get_rxhash(struct sk_buff *skb)$/;"	f
rpl__skb_gso_segment	datapath/linux/compat/netdevice.c	/^EXPORT_SYMBOL_GPL(rpl__skb_gso_segment);$/;"	v
rpl__skb_gso_segment	datapath/linux/compat/netdevice.c	/^struct sk_buff *rpl__skb_gso_segment(struct sk_buff *skb,$/;"	f
rpl__skb_gso_segment	datapath/linux/netdevice.c	/^EXPORT_SYMBOL_GPL(rpl__skb_gso_segment);$/;"	v
rpl__skb_gso_segment	datapath/linux/netdevice.c	/^struct sk_buff *rpl__skb_gso_segment(struct sk_buff *skb,$/;"	f
rpl_dev_queue_xmit	datapath/linux/compat/gso.c	/^EXPORT_SYMBOL_GPL(rpl_dev_queue_xmit);$/;"	v
rpl_dev_queue_xmit	datapath/linux/compat/gso.c	/^int rpl_dev_queue_xmit(struct sk_buff *skb)$/;"	f
rpl_dev_queue_xmit	datapath/linux/gso.c	/^EXPORT_SYMBOL_GPL(rpl_dev_queue_xmit);$/;"	v
rpl_dev_queue_xmit	datapath/linux/gso.c	/^int rpl_dev_queue_xmit(struct sk_buff *skb)$/;"	f
rpl_flex_array_alloc	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_alloc);$/;"	v
rpl_flex_array_alloc	datapath/linux/compat/flex_array.c	/^struct flex_array *rpl_flex_array_alloc(int element_size, unsigned int total,$/;"	f
rpl_flex_array_alloc	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_alloc);$/;"	v
rpl_flex_array_alloc	datapath/linux/flex_array.c	/^struct flex_array *rpl_flex_array_alloc(int element_size, unsigned int total,$/;"	f
rpl_flex_array_clear	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_clear);$/;"	v
rpl_flex_array_clear	datapath/linux/compat/flex_array.c	/^int rpl_flex_array_clear(struct flex_array *fa, unsigned int element_nr)$/;"	f
rpl_flex_array_clear	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_clear);$/;"	v
rpl_flex_array_clear	datapath/linux/flex_array.c	/^int rpl_flex_array_clear(struct flex_array *fa, unsigned int element_nr)$/;"	f
rpl_flex_array_free	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_free);$/;"	v
rpl_flex_array_free	datapath/linux/compat/flex_array.c	/^void rpl_flex_array_free(struct flex_array *fa)$/;"	f
rpl_flex_array_free	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_free);$/;"	v
rpl_flex_array_free	datapath/linux/flex_array.c	/^void rpl_flex_array_free(struct flex_array *fa)$/;"	f
rpl_flex_array_free_parts	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_free_parts);$/;"	v
rpl_flex_array_free_parts	datapath/linux/compat/flex_array.c	/^void rpl_flex_array_free_parts(struct flex_array *fa)$/;"	f
rpl_flex_array_free_parts	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_free_parts);$/;"	v
rpl_flex_array_free_parts	datapath/linux/flex_array.c	/^void rpl_flex_array_free_parts(struct flex_array *fa)$/;"	f
rpl_flex_array_get	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_get);$/;"	v
rpl_flex_array_get	datapath/linux/compat/flex_array.c	/^void *rpl_flex_array_get(struct flex_array *fa, unsigned int element_nr)$/;"	f
rpl_flex_array_get	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_get);$/;"	v
rpl_flex_array_get	datapath/linux/flex_array.c	/^void *rpl_flex_array_get(struct flex_array *fa, unsigned int element_nr)$/;"	f
rpl_flex_array_get_ptr	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_get_ptr);$/;"	v
rpl_flex_array_get_ptr	datapath/linux/compat/flex_array.c	/^void *rpl_flex_array_get_ptr(struct flex_array *fa, unsigned int element_nr)$/;"	f
rpl_flex_array_get_ptr	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_get_ptr);$/;"	v
rpl_flex_array_get_ptr	datapath/linux/flex_array.c	/^void *rpl_flex_array_get_ptr(struct flex_array *fa, unsigned int element_nr)$/;"	f
rpl_flex_array_prealloc	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_prealloc);$/;"	v
rpl_flex_array_prealloc	datapath/linux/compat/flex_array.c	/^int rpl_flex_array_prealloc(struct flex_array *fa, unsigned int start,$/;"	f
rpl_flex_array_prealloc	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_prealloc);$/;"	v
rpl_flex_array_prealloc	datapath/linux/flex_array.c	/^int rpl_flex_array_prealloc(struct flex_array *fa, unsigned int start,$/;"	f
rpl_flex_array_put	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_put);$/;"	v
rpl_flex_array_put	datapath/linux/compat/flex_array.c	/^int rpl_flex_array_put(struct flex_array *fa, unsigned int element_nr, void *src,$/;"	f
rpl_flex_array_put	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_put);$/;"	v
rpl_flex_array_put	datapath/linux/flex_array.c	/^int rpl_flex_array_put(struct flex_array *fa, unsigned int element_nr, void *src,$/;"	f
rpl_flex_array_put_ptr	datapath/linux/compat/include/linux/flex_array.h	97;"	d
rpl_flex_array_shrink	datapath/linux/compat/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_shrink);$/;"	v
rpl_flex_array_shrink	datapath/linux/compat/flex_array.c	/^int rpl_flex_array_shrink(struct flex_array *fa)$/;"	f
rpl_flex_array_shrink	datapath/linux/flex_array.c	/^EXPORT_SYMBOL_GPL(rpl_flex_array_shrink);$/;"	v
rpl_flex_array_shrink	datapath/linux/flex_array.c	/^int rpl_flex_array_shrink(struct flex_array *fa)$/;"	f
rpl_geneve_sock_add	datapath/linux/compat/geneve.c	/^EXPORT_SYMBOL_GPL(rpl_geneve_sock_add);$/;"	v
rpl_geneve_sock_add	datapath/linux/compat/geneve.c	/^struct geneve_sock *rpl_geneve_sock_add(struct net *net, __be16 port,$/;"	f
rpl_geneve_sock_add	datapath/linux/geneve.c	/^EXPORT_SYMBOL_GPL(rpl_geneve_sock_add);$/;"	v
rpl_geneve_sock_add	datapath/linux/geneve.c	/^struct geneve_sock *rpl_geneve_sock_add(struct net *net, __be16 port,$/;"	f
rpl_geneve_sock_release	datapath/linux/compat/geneve.c	/^EXPORT_SYMBOL_GPL(rpl_geneve_sock_release);$/;"	v
rpl_geneve_sock_release	datapath/linux/compat/geneve.c	/^void rpl_geneve_sock_release(struct geneve_sock *gs)$/;"	f
rpl_geneve_sock_release	datapath/linux/geneve.c	/^EXPORT_SYMBOL_GPL(rpl_geneve_sock_release);$/;"	v
rpl_geneve_sock_release	datapath/linux/geneve.c	/^void rpl_geneve_sock_release(struct geneve_sock *gs)$/;"	f
rpl_geneve_xmit_skb	datapath/linux/compat/geneve.c	/^EXPORT_SYMBOL_GPL(rpl_geneve_xmit_skb);$/;"	v
rpl_geneve_xmit_skb	datapath/linux/compat/geneve.c	/^int rpl_geneve_xmit_skb(struct geneve_sock *gs, struct rtable *rt,$/;"	f
rpl_geneve_xmit_skb	datapath/linux/geneve.c	/^EXPORT_SYMBOL_GPL(rpl_geneve_xmit_skb);$/;"	v
rpl_geneve_xmit_skb	datapath/linux/geneve.c	/^int rpl_geneve_xmit_skb(struct geneve_sock *gs, struct rtable *rt,$/;"	f
rpl_genl_family	datapath/linux/compat/include/net/genetlink.h	/^struct rpl_genl_family {$/;"	s
rpl_genl_has_listeners	datapath/linux/compat/include/net/genetlink.h	/^static inline int rpl_genl_has_listeners(struct genl_family *family,$/;"	f
rpl_genl_notify	datapath/linux/compat/genetlink-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_genl_notify);$/;"	v
rpl_genl_notify	datapath/linux/compat/genetlink-openvswitch.c	/^void rpl_genl_notify(struct rpl_genl_family *family, struct sk_buff *skb,$/;"	f
rpl_genl_notify	datapath/linux/genetlink-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_genl_notify);$/;"	v
rpl_genl_notify	datapath/linux/genetlink-openvswitch.c	/^void rpl_genl_notify(struct rpl_genl_family *family, struct sk_buff *skb,$/;"	f
rpl_genl_register_family	datapath/linux/compat/include/net/genetlink.h	/^static inline int rpl_genl_register_family(struct genl_family *family)$/;"	f
rpl_genl_unregister_family	datapath/linux/compat/include/net/genetlink.h	/^static inline int rpl_genl_unregister_family(struct genl_family *family)$/;"	f
rpl_genlmsg_put	datapath/linux/compat/include/net/genetlink.h	/^static inline void *rpl_genlmsg_put(struct sk_buff *skb, u32 portid, u32 seq,$/;"	f
rpl_getsockopt	lib/socket-util.h	/^static inline int rpl_getsockopt(int sock, int level, int optname,$/;"	f
rpl_gre_build_header	datapath/linux/compat/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_build_header);$/;"	v
rpl_gre_build_header	datapath/linux/compat/gre.c	/^void rpl_gre_build_header(struct sk_buff *skb, const struct tnl_ptk_info *tpi,$/;"	f
rpl_gre_build_header	datapath/linux/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_build_header);$/;"	v
rpl_gre_build_header	datapath/linux/gre.c	/^void rpl_gre_build_header(struct sk_buff *skb, const struct tnl_ptk_info *tpi,$/;"	f
rpl_gre_cisco_register	datapath/linux/compat/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_cisco_register);$/;"	v
rpl_gre_cisco_register	datapath/linux/compat/gre.c	/^int rpl_gre_cisco_register(struct gre_cisco_protocol *newp)$/;"	f
rpl_gre_cisco_register	datapath/linux/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_cisco_register);$/;"	v
rpl_gre_cisco_register	datapath/linux/gre.c	/^int rpl_gre_cisco_register(struct gre_cisco_protocol *newp)$/;"	f
rpl_gre_cisco_unregister	datapath/linux/compat/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_cisco_unregister);$/;"	v
rpl_gre_cisco_unregister	datapath/linux/compat/gre.c	/^int rpl_gre_cisco_unregister(struct gre_cisco_protocol *proto)$/;"	f
rpl_gre_cisco_unregister	datapath/linux/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_cisco_unregister);$/;"	v
rpl_gre_cisco_unregister	datapath/linux/gre.c	/^int rpl_gre_cisco_unregister(struct gre_cisco_protocol *proto)$/;"	f
rpl_gre_handle_offloads	datapath/linux/compat/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_handle_offloads);$/;"	v
rpl_gre_handle_offloads	datapath/linux/compat/gre.c	/^struct sk_buff *rpl_gre_handle_offloads(struct sk_buff *skb, bool gre_csum)$/;"	f
rpl_gre_handle_offloads	datapath/linux/gre.c	/^EXPORT_SYMBOL_GPL(rpl_gre_handle_offloads);$/;"	v
rpl_gre_handle_offloads	datapath/linux/gre.c	/^struct sk_buff *rpl_gre_handle_offloads(struct sk_buff *skb, bool gre_csum)$/;"	f
rpl_inet_get_local_port_range	datapath/linux/compat/include/net/ip.h	/^static inline void rpl_inet_get_local_port_range(struct net *net, int *low,$/;"	f
rpl_inet_proto_csum_replace16	datapath/linux/compat/utils.c	/^EXPORT_SYMBOL_GPL(rpl_inet_proto_csum_replace16);$/;"	v
rpl_inet_proto_csum_replace16	datapath/linux/compat/utils.c	/^void rpl_inet_proto_csum_replace16(__sum16 *sum, struct sk_buff *skb,$/;"	f
rpl_inet_proto_csum_replace16	datapath/linux/utils.c	/^EXPORT_SYMBOL_GPL(rpl_inet_proto_csum_replace16);$/;"	v
rpl_inet_proto_csum_replace16	datapath/linux/utils.c	/^void rpl_inet_proto_csum_replace16(__sum16 *sum, struct sk_buff *skb,$/;"	f
rpl_ip_local_out	datapath/linux/compat/gso.c	/^EXPORT_SYMBOL_GPL(rpl_ip_local_out);$/;"	v
rpl_ip_local_out	datapath/linux/compat/gso.c	/^int rpl_ip_local_out(struct sk_buff *skb)$/;"	f
rpl_ip_local_out	datapath/linux/gso.c	/^EXPORT_SYMBOL_GPL(rpl_ip_local_out);$/;"	v
rpl_ip_local_out	datapath/linux/gso.c	/^int rpl_ip_local_out(struct sk_buff *skb)$/;"	f
rpl_iptunnel_pull_header	datapath/linux/compat/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(rpl_iptunnel_pull_header);$/;"	v
rpl_iptunnel_pull_header	datapath/linux/compat/ip_tunnels_core.c	/^int rpl_iptunnel_pull_header(struct sk_buff *skb, int hdr_len, __be16 inner_proto)$/;"	f
rpl_iptunnel_pull_header	datapath/linux/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(rpl_iptunnel_pull_header);$/;"	v
rpl_iptunnel_pull_header	datapath/linux/ip_tunnels_core.c	/^int rpl_iptunnel_pull_header(struct sk_buff *skb, int hdr_len, __be16 inner_proto)$/;"	f
rpl_iptunnel_xmit	datapath/linux/compat/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(rpl_iptunnel_xmit);$/;"	v
rpl_iptunnel_xmit	datapath/linux/compat/ip_tunnels_core.c	/^int rpl_iptunnel_xmit(struct sock *sk, struct rtable *rt, struct sk_buff *skb,$/;"	f
rpl_iptunnel_xmit	datapath/linux/ip_tunnels_core.c	/^EXPORT_SYMBOL_GPL(rpl_iptunnel_xmit);$/;"	v
rpl_iptunnel_xmit	datapath/linux/ip_tunnels_core.c	/^int rpl_iptunnel_xmit(struct sock *sk, struct rtable *rt, struct sk_buff *skb,$/;"	f
rpl_ipv6_find_hdr	datapath/linux/compat/exthdrs_core.c	/^EXPORT_SYMBOL_GPL(rpl_ipv6_find_hdr);$/;"	v
rpl_ipv6_find_hdr	datapath/linux/compat/exthdrs_core.c	/^int rpl_ipv6_find_hdr(const struct sk_buff *skb, unsigned int *offset,$/;"	f
rpl_ipv6_find_hdr	datapath/linux/exthdrs_core.c	/^EXPORT_SYMBOL_GPL(rpl_ipv6_find_hdr);$/;"	v
rpl_ipv6_find_hdr	datapath/linux/exthdrs_core.c	/^int rpl_ipv6_find_hdr(const struct sk_buff *skb, unsigned int *offset,$/;"	f
rpl_ipv6_skip_exthdr	datapath/linux/compat/exthdrs_core.c	/^EXPORT_SYMBOL_GPL(rpl_ipv6_skip_exthdr);$/;"	v
rpl_ipv6_skip_exthdr	datapath/linux/compat/exthdrs_core.c	/^int rpl_ipv6_skip_exthdr(const struct sk_buff *skb, int start,$/;"	f
rpl_ipv6_skip_exthdr	datapath/linux/exthdrs_core.c	/^EXPORT_SYMBOL_GPL(rpl_ipv6_skip_exthdr);$/;"	v
rpl_ipv6_skip_exthdr	datapath/linux/exthdrs_core.c	/^int rpl_ipv6_skip_exthdr(const struct sk_buff *skb, int start,$/;"	f
rpl_kfree_skb_list	datapath/linux/compat/skbuff-openvswitch.c	/^EXPORT_SYMBOL(rpl_kfree_skb_list);$/;"	v
rpl_kfree_skb_list	datapath/linux/compat/skbuff-openvswitch.c	/^void rpl_kfree_skb_list(struct sk_buff *segs)$/;"	f
rpl_kfree_skb_list	datapath/linux/skbuff-openvswitch.c	/^EXPORT_SYMBOL(rpl_kfree_skb_list);$/;"	v
rpl_kfree_skb_list	datapath/linux/skbuff-openvswitch.c	/^void rpl_kfree_skb_list(struct sk_buff *segs)$/;"	f
rpl_netdev_rx_handler_register	datapath/linux/compat/dev-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_netdev_rx_handler_register);$/;"	v
rpl_netdev_rx_handler_register	datapath/linux/compat/dev-openvswitch.c	/^int rpl_netdev_rx_handler_register(struct net_device *dev,$/;"	f
rpl_netdev_rx_handler_register	datapath/linux/dev-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_netdev_rx_handler_register);$/;"	v
rpl_netdev_rx_handler_register	datapath/linux/dev-openvswitch.c	/^int rpl_netdev_rx_handler_register(struct net_device *dev,$/;"	f
rpl_netdev_rx_handler_unregister	datapath/linux/compat/dev-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_netdev_rx_handler_unregister);$/;"	v
rpl_netdev_rx_handler_unregister	datapath/linux/compat/dev-openvswitch.c	/^void rpl_netdev_rx_handler_unregister(struct net_device *dev)$/;"	f
rpl_netdev_rx_handler_unregister	datapath/linux/dev-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_netdev_rx_handler_unregister);$/;"	v
rpl_netdev_rx_handler_unregister	datapath/linux/dev-openvswitch.c	/^void rpl_netdev_rx_handler_unregister(struct net_device *dev)$/;"	f
rpl_netif_needs_gso	datapath/linux/compat/include/linux/netdevice.h	/^static inline int rpl_netif_needs_gso(struct net_device *dev,$/;"	f
rpl_netif_skb_features	datapath/linux/compat/netdevice.c	/^EXPORT_SYMBOL_GPL(rpl_netif_skb_features);$/;"	v
rpl_netif_skb_features	datapath/linux/compat/netdevice.c	/^netdev_features_t rpl_netif_skb_features(struct sk_buff *skb)$/;"	f
rpl_netif_skb_features	datapath/linux/netdevice.c	/^EXPORT_SYMBOL_GPL(rpl_netif_skb_features);$/;"	v
rpl_netif_skb_features	datapath/linux/netdevice.c	/^netdev_features_t rpl_netif_skb_features(struct sk_buff *skb)$/;"	f
rpl_pernet_operations	datapath/linux/compat/include/net/net_namespace.h	/^struct rpl_pernet_operations {$/;"	s
rpl_pskb_expand_head	datapath/linux/compat/skbuff-openvswitch.c	/^EXPORT_SYMBOL(rpl_pskb_expand_head);$/;"	v
rpl_pskb_expand_head	datapath/linux/compat/skbuff-openvswitch.c	/^int rpl_pskb_expand_head(struct sk_buff *skb, int nhead, int ntail,$/;"	f
rpl_pskb_expand_head	datapath/linux/skbuff-openvswitch.c	/^EXPORT_SYMBOL(rpl_pskb_expand_head);$/;"	v
rpl_pskb_expand_head	datapath/linux/skbuff-openvswitch.c	/^int rpl_pskb_expand_head(struct sk_buff *skb, int nhead, int ntail,$/;"	f
rpl_read_pnet	datapath/linux/compat/include/net/net_namespace.h	/^static inline struct net *rpl_read_pnet(const possible_net_t *pnet)$/;"	f
rpl_read_pnet	datapath/linux/compat/include/net/net_namespace.h	77;"	d
rpl_reciprocal_divide	datapath/linux/compat/include/linux/reciprocal_div.h	/^static inline u32 rpl_reciprocal_divide(u32 a, struct reciprocal_value R)$/;"	f
rpl_reciprocal_value	datapath/linux/compat/reciprocal_div.c	/^EXPORT_SYMBOL_GPL(rpl_reciprocal_value);$/;"	v
rpl_reciprocal_value	datapath/linux/compat/reciprocal_div.c	/^struct reciprocal_value rpl_reciprocal_value(u32 d)$/;"	f
rpl_reciprocal_value	datapath/linux/reciprocal_div.c	/^EXPORT_SYMBOL_GPL(rpl_reciprocal_value);$/;"	v
rpl_reciprocal_value	datapath/linux/reciprocal_div.c	/^struct reciprocal_value rpl_reciprocal_value(u32 d)$/;"	f
rpl_setsockopt	lib/socket-util.h	/^static inline int rpl_setsockopt(int sock, int level, int optname,$/;"	f
rpl_setup_udp_tunnel_sock	datapath/linux/compat/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_setup_udp_tunnel_sock);$/;"	v
rpl_setup_udp_tunnel_sock	datapath/linux/compat/udp_tunnel.c	/^void rpl_setup_udp_tunnel_sock(struct net *net, struct socket *sock,$/;"	f
rpl_setup_udp_tunnel_sock	datapath/linux/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_setup_udp_tunnel_sock);$/;"	v
rpl_setup_udp_tunnel_sock	datapath/linux/udp_tunnel.c	/^void rpl_setup_udp_tunnel_sock(struct net *net, struct socket *sock,$/;"	f
rpl_skb_ensure_writable	datapath/linux/compat/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_ensure_writable);$/;"	v
rpl_skb_ensure_writable	datapath/linux/compat/skbuff-openvswitch.c	/^int rpl_skb_ensure_writable(struct sk_buff *skb, int write_len)$/;"	f
rpl_skb_ensure_writable	datapath/linux/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_ensure_writable);$/;"	v
rpl_skb_ensure_writable	datapath/linux/skbuff-openvswitch.c	/^int rpl_skb_ensure_writable(struct sk_buff *skb, int write_len)$/;"	f
rpl_skb_gso_segment	datapath/linux/compat/include/linux/netdevice.h	/^struct sk_buff *rpl_skb_gso_segment(struct sk_buff *skb, netdev_features_t features)$/;"	f
rpl_skb_vlan_pop	datapath/linux/compat/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_vlan_pop);$/;"	v
rpl_skb_vlan_pop	datapath/linux/compat/skbuff-openvswitch.c	/^int rpl_skb_vlan_pop(struct sk_buff *skb)$/;"	f
rpl_skb_vlan_pop	datapath/linux/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_vlan_pop);$/;"	v
rpl_skb_vlan_pop	datapath/linux/skbuff-openvswitch.c	/^int rpl_skb_vlan_pop(struct sk_buff *skb)$/;"	f
rpl_skb_vlan_push	datapath/linux/compat/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_vlan_push);$/;"	v
rpl_skb_vlan_push	datapath/linux/compat/skbuff-openvswitch.c	/^int rpl_skb_vlan_push(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)$/;"	f
rpl_skb_vlan_push	datapath/linux/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_vlan_push);$/;"	v
rpl_skb_vlan_push	datapath/linux/skbuff-openvswitch.c	/^int rpl_skb_vlan_push(struct sk_buff *skb, __be16 vlan_proto, u16 vlan_tci)$/;"	f
rpl_skb_zerocopy	datapath/linux/compat/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_zerocopy);$/;"	v
rpl_skb_zerocopy	datapath/linux/compat/skbuff-openvswitch.c	/^rpl_skb_zerocopy(struct sk_buff *to, struct sk_buff *from, int len, int hlen)$/;"	f
rpl_skb_zerocopy	datapath/linux/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_zerocopy);$/;"	v
rpl_skb_zerocopy	datapath/linux/skbuff-openvswitch.c	/^rpl_skb_zerocopy(struct sk_buff *to, struct sk_buff *from, int len, int hlen)$/;"	f
rpl_skb_zerocopy_headlen	datapath/linux/compat/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_zerocopy_headlen);$/;"	v
rpl_skb_zerocopy_headlen	datapath/linux/compat/skbuff-openvswitch.c	/^rpl_skb_zerocopy_headlen(const struct sk_buff *from)$/;"	f
rpl_skb_zerocopy_headlen	datapath/linux/skbuff-openvswitch.c	/^EXPORT_SYMBOL_GPL(rpl_skb_zerocopy_headlen);$/;"	v
rpl_skb_zerocopy_headlen	datapath/linux/skbuff-openvswitch.c	/^rpl_skb_zerocopy_headlen(const struct sk_buff *from)$/;"	f
rpl_stt_sock_add	datapath/linux/compat/stt.c	/^EXPORT_SYMBOL_GPL(rpl_stt_sock_add);$/;"	v
rpl_stt_sock_add	datapath/linux/compat/stt.c	/^struct stt_sock *rpl_stt_sock_add(struct net *net, __be16 port,$/;"	f
rpl_stt_sock_add	datapath/linux/stt.c	/^EXPORT_SYMBOL_GPL(rpl_stt_sock_add);$/;"	v
rpl_stt_sock_add	datapath/linux/stt.c	/^struct stt_sock *rpl_stt_sock_add(struct net *net, __be16 port,$/;"	f
rpl_stt_sock_release	datapath/linux/compat/stt.c	/^EXPORT_SYMBOL_GPL(rpl_stt_sock_release);$/;"	v
rpl_stt_sock_release	datapath/linux/compat/stt.c	/^void rpl_stt_sock_release(struct stt_sock *stt_sock)$/;"	f
rpl_stt_sock_release	datapath/linux/stt.c	/^EXPORT_SYMBOL_GPL(rpl_stt_sock_release);$/;"	v
rpl_stt_sock_release	datapath/linux/stt.c	/^void rpl_stt_sock_release(struct stt_sock *stt_sock)$/;"	f
rpl_stt_xmit_skb	datapath/linux/compat/stt.c	/^EXPORT_SYMBOL_GPL(rpl_stt_xmit_skb);$/;"	v
rpl_stt_xmit_skb	datapath/linux/compat/stt.c	/^int rpl_stt_xmit_skb(struct sk_buff *skb, struct rtable *rt,$/;"	f
rpl_stt_xmit_skb	datapath/linux/stt.c	/^EXPORT_SYMBOL_GPL(rpl_stt_xmit_skb);$/;"	v
rpl_stt_xmit_skb	datapath/linux/stt.c	/^int rpl_stt_xmit_skb(struct sk_buff *skb, struct rtable *rt,$/;"	f
rpl_udp_flow_src_port	datapath/linux/compat/include/net/udp.h	/^static inline __be16 rpl_udp_flow_src_port(struct net *net, struct sk_buff *skb,$/;"	f
rpl_udp_set_csum	datapath/linux/compat/udp.c	/^EXPORT_SYMBOL_GPL(rpl_udp_set_csum);$/;"	v
rpl_udp_set_csum	datapath/linux/compat/udp.c	/^void rpl_udp_set_csum(bool nocheck, struct sk_buff *skb,$/;"	f
rpl_udp_set_csum	datapath/linux/udp.c	/^EXPORT_SYMBOL_GPL(rpl_udp_set_csum);$/;"	v
rpl_udp_set_csum	datapath/linux/udp.c	/^void rpl_udp_set_csum(bool nocheck, struct sk_buff *skb,$/;"	f
rpl_udp_sock_create	datapath/linux/compat/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_udp_sock_create);$/;"	v
rpl_udp_sock_create	datapath/linux/compat/udp_tunnel.c	/^int rpl_udp_sock_create(struct net *net, struct udp_port_cfg *cfg,$/;"	f
rpl_udp_sock_create	datapath/linux/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_udp_sock_create);$/;"	v
rpl_udp_sock_create	datapath/linux/udp_tunnel.c	/^int rpl_udp_sock_create(struct net *net, struct udp_port_cfg *cfg,$/;"	f
rpl_udp_tunnel_handle_offloads	datapath/linux/compat/include/net/udp_tunnel.h	/^rpl_udp_tunnel_handle_offloads(struct sk_buff *skb, bool udp_csum,$/;"	f
rpl_udp_tunnel_sock_release	datapath/linux/compat/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_udp_tunnel_sock_release);$/;"	v
rpl_udp_tunnel_sock_release	datapath/linux/compat/udp_tunnel.c	/^void rpl_udp_tunnel_sock_release(struct socket *sock)$/;"	f
rpl_udp_tunnel_sock_release	datapath/linux/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_udp_tunnel_sock_release);$/;"	v
rpl_udp_tunnel_sock_release	datapath/linux/udp_tunnel.c	/^void rpl_udp_tunnel_sock_release(struct socket *sock)$/;"	f
rpl_udp_tunnel_xmit_skb	datapath/linux/compat/include/net/udp_tunnel.h	/^static inline int rpl_udp_tunnel_xmit_skb(struct rtable *rt,$/;"	f
rpl_udp_tunnel_xmit_skb	datapath/linux/compat/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_udp_tunnel_xmit_skb);$/;"	v
rpl_udp_tunnel_xmit_skb	datapath/linux/compat/udp_tunnel.c	/^int rpl_udp_tunnel_xmit_skb(struct rtable *rt, struct sock *sk,$/;"	f
rpl_udp_tunnel_xmit_skb	datapath/linux/udp_tunnel.c	/^EXPORT_SYMBOL_GPL(rpl_udp_tunnel_xmit_skb);$/;"	v
rpl_udp_tunnel_xmit_skb	datapath/linux/udp_tunnel.c	/^int rpl_udp_tunnel_xmit_skb(struct rtable *rt, struct sock *sk,$/;"	f
rpl_vlan_insert_tag	datapath/linux/compat/include/linux/if_vlan.h	/^static inline int rpl_vlan_insert_tag(struct sk_buff *skb, u16 vlan_tci)$/;"	f
rpl_vlan_insert_tag_set_proto	datapath/linux/compat/include/linux/if_vlan.h	/^static inline struct sk_buff *rpl_vlan_insert_tag_set_proto(struct sk_buff *skb,$/;"	f
rpl_vxlan_sock_add	datapath/linux/compat/vxlan.c	/^EXPORT_SYMBOL_GPL(rpl_vxlan_sock_add);$/;"	v
rpl_vxlan_sock_add	datapath/linux/compat/vxlan.c	/^struct vxlan_sock *rpl_vxlan_sock_add(struct net *net, __be16 port,$/;"	f
rpl_vxlan_sock_add	datapath/linux/vxlan.c	/^EXPORT_SYMBOL_GPL(rpl_vxlan_sock_add);$/;"	v
rpl_vxlan_sock_add	datapath/linux/vxlan.c	/^struct vxlan_sock *rpl_vxlan_sock_add(struct net *net, __be16 port,$/;"	f
rpl_vxlan_sock_release	datapath/linux/compat/vxlan.c	/^EXPORT_SYMBOL_GPL(rpl_vxlan_sock_release);$/;"	v
rpl_vxlan_sock_release	datapath/linux/compat/vxlan.c	/^void rpl_vxlan_sock_release(struct vxlan_sock *vs)$/;"	f
rpl_vxlan_sock_release	datapath/linux/vxlan.c	/^EXPORT_SYMBOL_GPL(rpl_vxlan_sock_release);$/;"	v
rpl_vxlan_sock_release	datapath/linux/vxlan.c	/^void rpl_vxlan_sock_release(struct vxlan_sock *vs)$/;"	f
rpl_vxlan_xmit_skb	datapath/linux/compat/include/net/vxlan.h	/^static inline int rpl_vxlan_xmit_skb(struct rtable *rt, struct sock *sk,$/;"	f
rpl_vxlan_xmit_skb	datapath/linux/compat/vxlan.c	/^EXPORT_SYMBOL_GPL(rpl_vxlan_xmit_skb);$/;"	v
rpl_vxlan_xmit_skb	datapath/linux/compat/vxlan.c	/^int rpl_vxlan_xmit_skb(struct rtable *rt, struct sock *sk, struct sk_buff *skb,$/;"	f
rpl_vxlan_xmit_skb	datapath/linux/vxlan.c	/^EXPORT_SYMBOL_GPL(rpl_vxlan_xmit_skb);$/;"	v
rpl_vxlan_xmit_skb	datapath/linux/vxlan.c	/^int rpl_vxlan_xmit_skb(struct rtable *rt, struct sock *sk, struct sk_buff *skb,$/;"	f
rpl_write_pnet	datapath/linux/compat/include/net/net_namespace.h	/^static inline void rpl_write_pnet(possible_net_t *pnet, struct net *net)$/;"	f
rpl_write_pnet	datapath/linux/compat/include/net/net_namespace.h	78;"	d
rpm_code	include/windows/netinet/icmp6.h	/^	u_int8_t	rpm_code;$/;"	m	struct:rr_pco_match
rpm_len	include/windows/netinet/icmp6.h	/^	u_int8_t	rpm_len;$/;"	m	struct:rr_pco_match
rpm_matchlen	include/windows/netinet/icmp6.h	/^	u_int8_t	rpm_matchlen;$/;"	m	struct:rr_pco_match
rpm_maxlen	include/windows/netinet/icmp6.h	/^	u_int8_t	rpm_maxlen;$/;"	m	struct:rr_pco_match
rpm_minlen	include/windows/netinet/icmp6.h	/^	u_int8_t	rpm_minlen;$/;"	m	struct:rr_pco_match
rpm_ordinal	include/windows/netinet/icmp6.h	/^	u_int8_t	rpm_ordinal;$/;"	m	struct:rr_pco_match
rpm_prefix	include/windows/netinet/icmp6.h	/^	struct	in6_addr	rpm_prefix;$/;"	m	struct:rr_pco_match	typeref:struct:rr_pco_match::in6_addr
rpm_reserved	include/windows/netinet/icmp6.h	/^	u_int16_t	rpm_reserved;$/;"	m	struct:rr_pco_match
rpu_flags	include/windows/netinet/icmp6.h	/^	u_int32_t	rpu_flags;$/;"	m	struct:rr_pco_use
rpu_keeplen	include/windows/netinet/icmp6.h	/^	u_int8_t	rpu_keeplen;$/;"	m	struct:rr_pco_use
rpu_pltime	include/windows/netinet/icmp6.h	/^	u_int32_t	rpu_pltime;$/;"	m	struct:rr_pco_use
rpu_prefix	include/windows/netinet/icmp6.h	/^	struct	in6_addr rpu_prefix;$/;"	m	struct:rr_pco_use	typeref:struct:rr_pco_use::in6_addr
rpu_raflags	include/windows/netinet/icmp6.h	/^	u_int8_t	rpu_raflags;$/;"	m	struct:rr_pco_use
rpu_ramask	include/windows/netinet/icmp6.h	/^	u_int8_t	rpu_ramask;$/;"	m	struct:rr_pco_use
rpu_uselen	include/windows/netinet/icmp6.h	/^	u_int8_t	rpu_uselen;$/;"	m	struct:rr_pco_use
rpu_vltime	include/windows/netinet/icmp6.h	/^	u_int32_t	rpu_vltime;$/;"	m	struct:rr_pco_use
rq_forward_delay	lib/stp.c	/^    int rq_forward_delay;           \/* User-requested forward delay, in ms. *\/$/;"	m	struct:stp	file:
rq_hello_time	lib/stp.c	/^    int rq_hello_time;              \/* User-requested hello time, in ms. *\/$/;"	m	struct:stp	file:
rq_max_age	lib/stp.c	/^    int rq_max_age;                 \/* User-requested max age, in ms. *\/$/;"	m	struct:stp	file:
rr_cksum	include/windows/netinet/icmp6.h	433;"	d
rr_code	include/windows/netinet/icmp6.h	432;"	d
rr_flags	include/windows/netinet/icmp6.h	/^	u_int8_t	rr_flags;$/;"	m	struct:icmp6_router_renum
rr_hdr	include/windows/netinet/icmp6.h	/^	struct icmp6_hdr	rr_hdr;$/;"	m	struct:icmp6_router_renum	typeref:struct:icmp6_router_renum::icmp6_hdr
rr_maxdelay	include/windows/netinet/icmp6.h	/^	u_int16_t	rr_maxdelay;$/;"	m	struct:icmp6_router_renum
rr_pco_match	include/windows/netinet/icmp6.h	/^struct rr_pco_match {		\/* match prefix part *\/$/;"	s
rr_pco_use	include/windows/netinet/icmp6.h	/^struct rr_pco_use {		\/* use prefix part *\/$/;"	s
rr_reserved	include/windows/netinet/icmp6.h	/^	u_int32_t	rr_reserved;$/;"	m	struct:icmp6_router_renum
rr_result	include/windows/netinet/icmp6.h	/^struct rr_result {		\/* router renumbering result message *\/$/;"	s
rr_segnum	include/windows/netinet/icmp6.h	/^	u_int8_t	rr_segnum;$/;"	m	struct:icmp6_router_renum
rr_seqnum	include/windows/netinet/icmp6.h	434;"	d
rr_type	include/windows/netinet/icmp6.h	431;"	d
rrr_flags	include/windows/netinet/icmp6.h	/^	u_int16_t	rrr_flags;$/;"	m	struct:rr_result
rrr_ifid	include/windows/netinet/icmp6.h	/^	u_int32_t	rrr_ifid;$/;"	m	struct:rr_result
rrr_matchedlen	include/windows/netinet/icmp6.h	/^	u_int8_t	rrr_matchedlen;$/;"	m	struct:rr_result
rrr_ordinal	include/windows/netinet/icmp6.h	/^	u_int8_t	rrr_ordinal;$/;"	m	struct:rr_result
rrr_prefix	include/windows/netinet/icmp6.h	/^	struct	in6_addr rrr_prefix;$/;"	m	struct:rr_result	typeref:struct:rr_result::in6_addr
rss	vswitchd/system-stats.c	/^    unsigned long int rss;      \/* Resident set size, in kB. *\/$/;"	m	struct:process_info	file:
rss	vswitchd/system-stats.c	/^    unsigned long int rss;      \/* Resident set size, in kB. *\/$/;"	m	struct:raw_process_info	file:
rst	datapath-windows/ovsext/NetProto.h	/^             rst:1,$/;"	m	struct:TCPHdr
rstp	lib/rstp-common.h	/^struct rstp {$/;"	s
rstp	lib/rstp.c	/^VLOG_DEFINE_THIS_MODULE(rstp);$/;"	v
rstp	ofproto/ofproto-dpif-xlate.c	/^    struct rstp *rstp;            \/* RSTP or null if disabled. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::rstp	file:
rstp	ofproto/ofproto-dpif.c	/^    struct rstp *rstp;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::rstp	file:
rstp	tests/test-rstp.c	/^    struct rstp *rstp;$/;"	m	struct:bridge	typeref:struct:bridge::rstp	file:
rstp_admin_point_to_point_mac_state	lib/rstp.h	/^enum rstp_admin_point_to_point_mac_state {$/;"	g
rstp_bpdu_flag	lib/rstp-common.h	/^enum rstp_bpdu_flag {$/;"	g
rstp_bpdu_type	lib/rstp-common.h	/^enum rstp_bpdu_type {$/;"	g
rstp_convert_speed_to_cost	lib/rstp.c	/^rstp_convert_speed_to_cost(unsigned int speed)$/;"	f
rstp_enable	lib/vswitch-idl.h	/^	bool rstp_enable;$/;"	m	struct:ovsrec_bridge
rstp_force_protocol_version	lib/rstp.h	/^enum rstp_force_protocol_version {$/;"	g
rstp_forward_in_state	lib/rstp.h	/^rstp_forward_in_state(enum rstp_state state)$/;"	f
rstp_get_new_root_aux	lib/rstp.c	/^rstp_get_new_root_aux(struct rstp *rstp)$/;"	f
rstp_get_next_changed_port_aux	lib/rstp.c	/^rstp_get_next_changed_port_aux(struct rstp *rstp, struct rstp_port **portp)$/;"	f
rstp_get_old_root_aux	lib/rstp.c	/^rstp_get_old_root_aux(struct rstp *rstp)$/;"	f
rstp_identifier	lib/rstp.h	/^typedef uint64_t rstp_identifier;$/;"	t
rstp_info_is	lib/rstp-common.h	/^enum rstp_info_is {$/;"	g
rstp_last_tick	ofproto/ofproto-dpif.c	/^    long long int rstp_last_tick;$/;"	m	struct:ofproto_dpif	file:
rstp_learn_in_state	lib/rstp.h	/^rstp_learn_in_state(enum rstp_state state)$/;"	f
rstp_mutex	lib/rstp-state-machines.c	/^    OVS_REQUIRES(rstp_mutex);$/;"	v
rstp_mutex	lib/rstp-state-machines.h	/^    OVS_REQUIRES(rstp_mutex);$/;"	v
rstp_mutex	lib/rstp.c	/^    OVS_REQUIRES(rstp_mutex);$/;"	v
rstp_mutex	lib/rstp.c	/^static struct ovs_list *const all_rstps OVS_GUARDED_BY(rstp_mutex) = &all_rstps__;$/;"	v	file:
rstp_mutex	lib/rstp.c	/^struct ovs_mutex rstp_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex
rstp_mutex	lib/rstp.h	/^    OVS_EXCLUDED(rstp_mutex);$/;"	v
rstp_mutex	lib/rstp.h	/^    OVS_REQUIRES(rstp_mutex);$/;"	v
rstp_port	lib/rstp-common.h	/^struct rstp_port {$/;"	s
rstp_port	ofproto/ofproto-dpif-xlate.c	/^    struct rstp_port *rstp_port;     \/* RSTP port or null. *\/$/;"	m	struct:xport	typeref:struct:xport::rstp_port	file:
rstp_port	ofproto/ofproto-dpif.c	/^    struct rstp_port *rstp_port; \/* Rapid Spanning Tree Protocol, if any. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::rstp_port	file:
rstp_port_role	lib/rstp.h	/^enum rstp_port_role {$/;"	g
rstp_port_role_name	lib/rstp.c	/^rstp_port_role_name(enum rstp_port_role role)$/;"	f
rstp_priority_vector	lib/rstp-common.h	/^struct rstp_priority_vector {$/;"	s
rstp_process_packet	ofproto/ofproto-dpif-xlate.c	/^rstp_process_packet(const struct xport *xport, const struct dp_packet *packet)$/;"	f	file:
rstp_rcvd_info	lib/rstp-common.h	/^enum rstp_rcvd_info {$/;"	g
rstp_reset_root_changed	lib/rstp.c	/^rstp_reset_root_changed(struct rstp *rstp)$/;"	f
rstp_run	ofproto/ofproto-dpif.c	/^rstp_run(struct ofproto_dpif *ofproto)$/;"	f	file:
rstp_send_bpdu_cb	ofproto/ofproto-dpif.c	/^rstp_send_bpdu_cb(struct dp_packet *pkt, void *ofport_, void *ofproto_)$/;"	f	file:
rstp_shift_root_learned_address	lib/rstp.c	/^rstp_shift_root_learned_address(struct rstp *rstp)$/;"	f
rstp_should_manage_bpdu	lib/rstp.h	/^rstp_should_manage_bpdu(enum rstp_state state)$/;"	f
rstp_sm	lib/rstp-state-machines.c	/^VLOG_DEFINE_THIS_MODULE(rstp_sm);$/;"	v
rstp_state	lib/rstp.h	/^enum rstp_state {$/;"	g
rstp_state	ofproto/ofproto-dpif.c	/^    enum rstp_state rstp_state; \/* Always RSTP_DISABLED if RSTP not in use. *\/$/;"	m	struct:ofport_dpif	typeref:enum:ofport_dpif::rstp_state	file:
rstp_state_name	lib/rstp.c	/^rstp_state_name(enum rstp_state state)$/;"	f
rstp_status	lib/vswitch-idl.h	/^	struct smap rstp_status;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::smap
rstp_status	lib/vswitch-idl.h	/^	struct smap rstp_status;$/;"	m	struct:ovsrec_port	typeref:struct:ovsrec_port::smap
rstp_times	lib/rstp-common.h	/^struct rstp_times {$/;"	s
rstp_times_equal	lib/rstp-state-machines.c	/^rstp_times_equal(struct rstp_times *t1, struct rstp_times *t2)$/;"	f	file:
rstream	lib/netdev-dummy.c	/^    struct dummy_packet_stream *rstream;$/;"	m	struct:dummy_packet_rconn	typeref:struct:dummy_packet_rconn::dummy_packet_stream	file:
rsvd	lib/lldp/aa-structs.h	/^    uint16_t rsvd;$/;"	m	struct:lldp_aa_element_system_id
rsvd1	datapath/linux/compat/include/net/geneve.h	/^	u8 rsvd1:6;$/;"	m	struct:genevehdr
rsvd1	lib/geneve.h	/^    uint8_t rsvd1:6;$/;"	m	struct:genevehdr
rsvd2	datapath/linux/compat/include/net/geneve.h	/^	u8 rsvd2;$/;"	m	struct:genevehdr
rsvd2	lib/lldp/aa-structs.h	/^    uint8_t  rsvd2[2];$/;"	m	struct:lldp_aa_element_system_id
rsvr1	lib/packets.h	/^    uint8_t rsvr1;$/;"	m	struct:igmpv3_header
rsvr2	lib/packets.h	/^    ovs_be16 rsvr2;$/;"	m	struct:igmpv3_header
rt_change_seq	lib/route-table.c	/^static uint64_t rt_change_seq;$/;"	v	file:
rt_change_seqno	lib/netdev-vport.c	/^static uint64_t rt_change_seqno;$/;"	v	file:
rt_dst	datapath/compat.h	35;"	d
rt_dst	datapath/compat.h	37;"	d
rt_entry_delete	lib/ovs-router.c	/^rt_entry_delete(uint8_t priority, const struct in6_addr *ip6_dst, uint8_t plen)$/;"	f	file:
rt_entry_free	lib/ovs-router.c	/^rt_entry_free(struct ovs_router_entry *p)$/;"	f	file:
rt_init_match	lib/ovs-router.c	/^static void rt_init_match(struct match *match, const struct in6_addr *ip6_dst,$/;"	f	file:
rta_dst	lib/route-table.c	/^    struct in6_addr rta_dst; \/* 0 if missing. *\/$/;"	m	struct:route_data	typeref:struct:route_data::in6_addr	file:
rta_gw	lib/route-table.c	/^    struct in6_addr rta_gw;$/;"	m	struct:route_data	typeref:struct:route_data::in6_addr	file:
rtbsd	lib/rtbsd.c	/^VLOG_DEFINE_THIS_MODULE(rtbsd);$/;"	v
rtbsd_change	lib/rtbsd.h	/^struct rtbsd_change {$/;"	s
rtbsd_changed	lib/rtbsd.c	/^COVERAGE_DEFINE(rtbsd_changed);$/;"	v
rtbsd_mutex	lib/rtbsd.c	/^    OVS_REQUIRES(rtbsd_mutex);$/;"	v
rtbsd_mutex	lib/rtbsd.c	/^static struct ovs_mutex rtbsd_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
rtbsd_mutex	lib/rtbsd.c	/^static void rtbsd_report_notify_error(void) OVS_REQUIRES(rtbsd_mutex);$/;"	v
rtbsd_notifier	lib/rtbsd.h	/^struct rtbsd_notifier {$/;"	s
rtbsd_notify_func	lib/rtbsd.h	/^typedef void rtbsd_notify_func(const struct rtbsd_change *, void *aux);$/;"	t
rte_cpuset_t	include/sparse/rte_lcore.h	/^typedef int rte_cpuset_t;$/;"	t
rte_eal_init_ret	lib/netdev-dpdk.c	/^static int rte_eal_init_ret = ENODEV;$/;"	v	file:
rtm_dst_len	lib/route-table.c	/^    unsigned char rtm_dst_len;$/;"	m	struct:route_data	file:
rtmsg	lib/route-table.c	/^static struct route_table_msg rtmsg;$/;"	v	typeref:struct:route_table_msg	file:
rtn_change	lib/rtnetlink.c	/^static struct rtnetlink_change rtn_change;$/;"	v	typeref:struct:rtnetlink_change	file:
rtnetlink_change	lib/rtnetlink.h	/^struct rtnetlink_change {$/;"	s
rtnetlink_notifier_create	lib/rtnetlink.c	/^rtnetlink_notifier_create(rtnetlink_notify_func *cb, void *aux)$/;"	f
rtnetlink_notifier_destroy	lib/rtnetlink.c	/^rtnetlink_notifier_destroy(struct nln_notifier *notifier)$/;"	f
rtnetlink_notify_func	lib/rtnetlink.h	/^void rtnetlink_notify_func(const struct rtnetlink_change *change,$/;"	t
rtnetlink_parse	lib/rtnetlink.c	/^rtnetlink_parse(struct ofpbuf *buf, struct rtnetlink_change *change)$/;"	f
rtnetlink_parse_cb	lib/rtnetlink.c	/^rtnetlink_parse_cb(struct ofpbuf *buf, void *change)$/;"	f	file:
rtnetlink_run	lib/rtnetlink.c	/^rtnetlink_run(void)$/;"	f
rtnetlink_type_is_rtnlgrp_addr	lib/rtnetlink.c	/^rtnetlink_type_is_rtnlgrp_addr(uint16_t type)$/;"	f
rtnetlink_type_is_rtnlgrp_link	lib/rtnetlink.c	/^rtnetlink_type_is_rtnlgrp_link(uint16_t type)$/;"	f
rtnetlink_wait	lib/rtnetlink.c	/^rtnetlink_wait(void)$/;"	f
rtnl_dereference	datapath/linux/compat/include/linux/rtnetlink.h	37;"	d
rtnl_link_stats64	lib/netdev-linux.c	/^struct rtnl_link_stats64 {$/;"	s	file:
rtnl_link_stats64	lib/netdev-linux.c	152;"	d	file:
rtnlgrp_link_policy	utilities/nlmon.c	/^static const struct nl_policy rtnlgrp_link_policy[] = {$/;"	v	typeref:struct:nl_policy	file:
ru_idrss	include/windows/sys/resource.h	/^    long   ru_idrss;         \/* integral unshared data size *\/$/;"	m	struct:rusage
ru_inblock	include/windows/sys/resource.h	/^    long   ru_inblock;       \/* block input operations *\/$/;"	m	struct:rusage
ru_isrss	include/windows/sys/resource.h	/^    long   ru_isrss;         \/* integral unshared stack size *\/$/;"	m	struct:rusage
ru_ixrss	include/windows/sys/resource.h	/^    long   ru_ixrss;         \/* integral shared memory size *\/$/;"	m	struct:rusage
ru_majflt	include/windows/sys/resource.h	/^    long   ru_majflt;        \/* page faults (hard page faults) *\/$/;"	m	struct:rusage
ru_maxrss	include/windows/sys/resource.h	/^    long   ru_maxrss;        \/* maximum resident set size *\/$/;"	m	struct:rusage
ru_minflt	include/windows/sys/resource.h	/^    long   ru_minflt;        \/* page reclaims (soft page faults) *\/$/;"	m	struct:rusage
ru_msgrcv	include/windows/sys/resource.h	/^    long   ru_msgrcv;        \/* IPC messages received *\/$/;"	m	struct:rusage
ru_msgsnd	include/windows/sys/resource.h	/^    long   ru_msgsnd;        \/* IPC messages sent *\/$/;"	m	struct:rusage
ru_nivcsw	include/windows/sys/resource.h	/^    long   ru_nivcsw;        \/* involuntary context switches *\/$/;"	m	struct:rusage
ru_nsignals	include/windows/sys/resource.h	/^    long   ru_nsignals;      \/* signals received *\/$/;"	m	struct:rusage
ru_nswap	include/windows/sys/resource.h	/^    long   ru_nswap;         \/* swaps *\/$/;"	m	struct:rusage
ru_nvcsw	include/windows/sys/resource.h	/^    long   ru_nvcsw;         \/* voluntary context switches *\/$/;"	m	struct:rusage
ru_oublock	include/windows/sys/resource.h	/^    long   ru_oublock;       \/* block output operations *\/$/;"	m	struct:rusage
ru_stime	include/windows/sys/resource.h	/^    struct timeval ru_stime; \/* system CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval
ru_utime	include/windows/sys/resource.h	/^    struct timeval ru_utime; \/* user CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval
rule	lib/classifier.h	/^    const struct cls_rule *rule;$/;"	m	struct:cls_cursor	typeref:struct:cls_cursor::cls_rule
rule	ofproto/ofproto-dpif-xlate.c	/^            struct rule_dpif *rule;$/;"	m	struct:xc_entry::__anon188::__anon195	typeref:struct:xc_entry::__anon188::__anon195::rule_dpif	file:
rule	ofproto/ofproto-dpif-xlate.c	/^        struct rule_dpif *rule;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::rule_dpif	file:
rule	ofproto/ofproto-dpif-xlate.c	/^    struct rule_dpif *rule;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::rule_dpif	file:
rule	ofproto/ofproto-dpif-xlate.h	/^    struct rule_dpif *rule;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::rule_dpif
rule	ofproto/ofproto-provider.h	/^struct rule {$/;"	s
rule	ofproto/ofproto.c	/^    struct rule *rule;          \/* Owns a reference to the rule. *\/$/;"	m	struct:rule_execute	typeref:struct:rule_execute::rule	file:
rule	utilities/ovs-ofctl.c	/^    struct cls_rule rule;       \/* Within a "struct classifier". *\/$/;"	m	struct:fte	typeref:struct:fte::cls_rule	file:
rule_actions	ofproto/ofproto-provider.h	/^struct rule_actions {$/;"	s
rule_actions_create	ofproto/ofproto.c	/^rule_actions_create(const struct ofpact *ofpacts, size_t ofpacts_len)$/;"	f
rule_actions_destroy	ofproto/ofproto.c	/^rule_actions_destroy(const struct rule_actions *actions)$/;"	f
rule_alloc	ofproto/ofproto-dpif.c	/^rule_alloc(void)$/;"	f	file:
rule_alloc	ofproto/ofproto-provider.h	/^    struct rule *(*rule_alloc)(void);$/;"	m	struct:ofproto_class	typeref:struct:ofproto_class::rule_alloc
rule_check	ofproto/ofproto-dpif.c	/^rule_check(struct rule *rule)$/;"	f	file:
rule_choose_table	ofproto/ofproto-provider.h	/^    enum ofperr (*rule_choose_table)(const struct ofproto *ofproto,$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::rule_choose_table
rule_collection	ofproto/ofproto-provider.h	/^struct rule_collection {$/;"	s
rule_collection_add	ofproto/ofproto.c	/^rule_collection_add(struct rule_collection *rules, struct rule *rule)$/;"	f
rule_collection_destroy	ofproto/ofproto.c	/^rule_collection_destroy(struct rule_collection *rules)$/;"	f
rule_collection_detach	ofproto/ofproto.c	/^rule_collection_detach(struct rule_collection *rules)$/;"	f	file:
rule_collection_init	ofproto/ofproto.c	/^rule_collection_init(struct rule_collection *rules)$/;"	f
rule_collection_unref	ofproto/ofproto.c	/^rule_collection_unref(struct rule_collection *rules)$/;"	f
rule_construct	ofproto/ofproto-provider.h	/^    enum ofperr (*rule_construct)(struct rule *rule)$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::rule_construct
rule_cookie	lib/ofp-actions.h	/^    ovs_be64 rule_cookie;         \/* OVS_BE64_MAX if none. *\/$/;"	m	struct:ofpact_unroll_xlate
rule_cookie	ofproto/ofproto-dpif-xlate.c	/^    ovs_be64 rule_cookie;       \/* Cookie of the rule being translated. *\/$/;"	m	struct:xlate_ctx	file:
rule_criteria	ofproto/ofproto.c	/^struct rule_criteria {$/;"	s	file:
rule_criteria_destroy	ofproto/ofproto.c	/^rule_criteria_destroy(struct rule_criteria *criteria)$/;"	f	file:
rule_criteria_init	ofproto/ofproto.c	/^rule_criteria_init(struct rule_criteria *criteria, uint8_t table_id,$/;"	f	file:
rule_criteria_require_rw	ofproto/ofproto.c	/^rule_criteria_require_rw(struct rule_criteria *criteria,$/;"	f	file:
rule_dealloc	ofproto/ofproto-dpif.c	/^rule_dealloc(struct rule *rule_)$/;"	f	file:
rule_dealloc	ofproto/ofproto-provider.h	/^    void (*rule_dealloc)(struct rule *rule);$/;"	m	struct:ofproto_class
rule_delete	ofproto/ofproto-provider.h	/^    void (*rule_delete)(struct rule *rule) \/* OVS_REQUIRES(ofproto_mutex) *\/;$/;"	m	struct:ofproto_class
rule_destruct	ofproto/ofproto-provider.h	/^    void (*rule_destruct)(struct rule *rule);$/;"	m	struct:ofproto_class
rule_dpif	ofproto/ofproto-dpif.c	/^struct rule_dpif {$/;"	s	file:
rule_dpif	ofproto/ofproto-dpif.h	/^struct OVS_LOCKABLE rule_dpif;$/;"	v	typeref:struct:OVS_LOCKABLE
rule_dpif_cast	ofproto/ofproto-dpif.c	/^static struct rule_dpif *rule_dpif_cast(const struct rule *rule)$/;"	f	file:
rule_dpif_credit_stats	ofproto/ofproto-dpif.c	/^rule_dpif_credit_stats(struct rule_dpif *rule,$/;"	f
rule_dpif_execute	ofproto/ofproto-dpif.c	/^rule_dpif_execute(struct rule_dpif *rule, const struct flow *flow,$/;"	f	file:
rule_dpif_get_actions	ofproto/ofproto-dpif.c	/^rule_dpif_get_actions(const struct rule_dpif *rule)$/;"	f
rule_dpif_is_fail_open	ofproto/ofproto-dpif.h	/^static inline bool rule_dpif_is_fail_open(const struct rule_dpif *rule)$/;"	f
rule_dpif_is_internal	ofproto/ofproto-dpif.h	/^static inline bool rule_dpif_is_internal(const struct rule_dpif *rule)$/;"	f
rule_dpif_is_table_miss	ofproto/ofproto-dpif.h	/^static inline bool rule_dpif_is_table_miss(const struct rule_dpif *rule)$/;"	f
rule_dpif_lookup_from_table	ofproto/ofproto-dpif.c	/^rule_dpif_lookup_from_table(struct ofproto_dpif *ofproto,$/;"	f
rule_dpif_lookup_in_table	ofproto/ofproto-dpif.c	/^rule_dpif_lookup_in_table(struct ofproto_dpif *ofproto, cls_version_t version,$/;"	f	file:
rule_dpif_reduce_timeouts	ofproto/ofproto-dpif.c	/^rule_dpif_reduce_timeouts(struct rule_dpif *rule, uint16_t idle_timeout,$/;"	f
rule_dpif_ref	ofproto/ofproto-dpif.h	/^static inline void rule_dpif_ref(struct rule_dpif *rule)$/;"	f
rule_dpif_unref	ofproto/ofproto-dpif.h	/^static inline void rule_dpif_unref(struct rule_dpif *rule)$/;"	f
rule_execute	ofproto/ofproto-dpif.c	/^rule_execute(struct rule *rule, const struct flow *flow,$/;"	f	file:
rule_execute	ofproto/ofproto-provider.h	/^    enum ofperr (*rule_execute)(struct rule *rule, const struct flow *flow,$/;"	m	struct:ofproto_class	typeref:enum:ofproto_class::rule_execute
rule_execute	ofproto/ofproto.c	/^struct rule_execute {$/;"	s	file:
rule_execute_destroy	ofproto/ofproto.c	/^rule_execute_destroy(struct rule_execute *e)$/;"	f	file:
rule_executes	ofproto/ofproto-provider.h	/^    struct guarded_list rule_executes; \/* Contains "struct rule_execute"s. *\/$/;"	m	struct:ofproto	typeref:struct:ofproto::guarded_list
rule_from_cls_rule	ofproto/ofproto-provider.h	/^rule_from_cls_rule(const struct cls_rule *cls_rule)$/;"	f
rule_get_actions	ofproto/ofproto-provider.h	/^rule_get_actions(const struct rule *rule)$/;"	f
rule_get_stats	ofproto/ofproto-dpif.c	/^rule_get_stats(struct rule *rule_, uint64_t *packets, uint64_t *bytes,$/;"	f	file:
rule_get_stats	ofproto/ofproto-provider.h	/^    void (*rule_get_stats)(struct rule *rule, uint64_t *packet_count,$/;"	m	struct:ofproto_class
rule_insert	ofproto/ofproto-provider.h	/^    void (*rule_insert)(struct rule *rule, struct rule *old_rule,$/;"	m	struct:ofproto_class
rule_is_hidden	ofproto/ofproto-provider.h	/^rule_is_hidden(const struct rule *rule)$/;"	f
rule_is_readonly	ofproto/ofproto.c	/^rule_is_readonly(const struct rule *rule)$/;"	f	file:
rule_is_table_miss	ofproto/ofproto-provider.h	/^rule_is_table_miss(const struct rule *rule)$/;"	f
rule_matches	lib/classifier.c	/^rule_matches(const struct cls_rule *rule, const struct cls_rule *target,$/;"	f	file:
rule_set_recirc_id	ofproto/ofproto-dpif.c	/^rule_set_recirc_id(struct rule *rule_, uint32_t id)$/;"	f
rule_table_id	lib/ofp-actions.h	/^    uint8_t  rule_table_id;       \/* 0xFF if none. *\/$/;"	m	struct:ofpact_unroll_xlate
rules	lib/classifier-private.h	/^    struct cmap rules;                      \/* Contains 'cls_match'es. *\/$/;"	m	struct:cls_subtable	typeref:struct:cls_subtable::cmap
rules	lib/dpif-netdev.c	/^    struct cmap rules;           \/* Contains "struct dpcls_rule"s. *\/$/;"	m	struct:dpcls_subtable	typeref:struct:dpcls_subtable::cmap	file:
rules	ofproto/in-band.c	/^    struct hmap rules;          \/* Contains "struct in_band_rule"s. *\/$/;"	m	struct:in_band	typeref:struct:in_band::hmap	file:
rules	ofproto/ofproto-provider.h	/^    struct rule **rules;        \/* The rules. *\/$/;"	m	struct:rule_collection	typeref:struct:rule_collection::rule
rules	ofproto/ofproto.c	/^    struct heap rules;          \/* Contains "struct rule"s. *\/$/;"	m	struct:eviction_group	typeref:struct:eviction_group::heap	file:
rules	ofproto/ofproto.c	/^    struct ovs_list rules;      \/* List of "struct rule_dpif"s. *\/$/;"	m	struct:meter	typeref:struct:meter::ovs_list	file:
rules	tests/test-classifier.c	/^    struct test_rule **rules;$/;"	m	struct:tcls	typeref:struct:tcls::test_rule	file:
rules_list	lib/classifier-private.h	/^    struct rculist rules_list;              \/* Unordered. *\/$/;"	m	struct:cls_subtable	typeref:struct:cls_subtable::rculist
run	lib/db-ctl-base.h	/^    void (*run)(struct ctl_context *ctx);$/;"	m	struct:ctl_command_syntax
run	lib/dpif-provider.h	/^    bool (*run)(struct dpif *dpif);$/;"	m	struct:dpif_class
run	lib/netdev-provider.h	/^    void (*run)(void);$/;"	m	struct:netdev_class
run	lib/stream-provider.h	/^    void (*run)(struct stream *stream);$/;"	m	struct:stream_class
run	lib/vconn-provider.h	/^    void (*run)(struct vconn *vconn);$/;"	m	struct:vconn_class
run	ofproto/ofproto-dpif.c	/^run(struct ofproto *ofproto_)$/;"	f	file:
run	ofproto/ofproto-provider.h	/^    int (*run)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
run	python/ovs/db/idl.py	/^    def run(self):$/;"	m	class:Idl
run	python/ovs/jsonrpc.py	/^    def run(self):$/;"	m	class:Connection
run	python/ovs/jsonrpc.py	/^    def run(self):$/;"	m	class:Session
run	python/ovs/reconnect.py	/^        def run(fsm, now):$/;"	m	class:Reconnect.Active
run	python/ovs/reconnect.py	/^        def run(fsm, now):$/;"	m	class:Reconnect.Backoff
run	python/ovs/reconnect.py	/^        def run(fsm, now):$/;"	m	class:Reconnect.ConnectInProgress
run	python/ovs/reconnect.py	/^        def run(fsm, now):$/;"	m	class:Reconnect.Idle
run	python/ovs/reconnect.py	/^        def run(fsm, now):$/;"	m	class:Reconnect.Listening
run	python/ovs/reconnect.py	/^        def run(fsm, now):$/;"	m	class:Reconnect.Reconnect
run	python/ovs/reconnect.py	/^        def run(fsm, now):$/;"	m	class:Reconnect.Void
run	python/ovs/reconnect.py	/^    def run(self, now):$/;"	m	class:Reconnect
run	python/ovs/stream.py	/^    def run(self):$/;"	m	class:Stream
run	python/ovs/unixctl/server.py	/^    def run(self):$/;"	m	class:UnixctlConnection
run	python/ovs/unixctl/server.py	/^    def run(self):$/;"	m	class:UnixctlServer
run	tests/run-oftest	/^run () {$/;"	f
run	tests/run-ryu	/^run () {$/;"	f
run	tutorial/ovs-sandbox	/^run() {$/;"	f
run	utilities/bugtool/ovs-bugtool	/^    def run(self):$/;"	m	class:ProcOutput
run	utilities/ovs-dev.py	/^def run():$/;"	f
run	utilities/ovs-dpctl-top	/^    def run(self):$/;"	m	class:DecayThread
run	utilities/ovs-ofctl.c	/^run(int retval, const char *message, ...)$/;"	f	file:
run	utilities/ovs-vlan-test	/^    def run(self):$/;"	m	class:VlanClient
run	utilities/ovs-vlan-test	/^    def run(self):$/;"	m	class:VlanServer
run	vtep/ovs-vtep	/^    def run(self):$/;"	m	class:Logical_Switch
runCommand	windows/ovs-windows-installer/Actions/OVSActions.js	/^function runCommand(cmd, expectedReturnValue, envVars, windowStyle, waitOnReturn, workingDir) {$/;"	f
runCommandAction	windows/ovs-windows-installer/Actions/OVSActions.js	/^function runCommandAction() {$/;"	f
run_S_CLEAR_FLOWS	ovn/controller/ofctrl.c	/^run_S_CLEAR_FLOWS(void)$/;"	f	file:
run_S_GENEVE_TABLE_MOD_SENT	ovn/controller/ofctrl.c	/^run_S_GENEVE_TABLE_MOD_SENT(void)$/;"	f	file:
run_S_GENEVE_TABLE_REQUESTED	ovn/controller/ofctrl.c	/^run_S_GENEVE_TABLE_REQUESTED(void)$/;"	f	file:
run_S_NEW	ovn/controller/ofctrl.c	/^run_S_NEW(void)$/;"	f	file:
run_S_UPDATE_FLOWS	ovn/controller/ofctrl.c	/^run_S_UPDATE_FLOWS(void)$/;"	f	file:
run_app	tests/run-ryu	/^run_app() {$/;"	f
run_at_exit	lib/fatal-signal.c	/^    bool run_at_exit;$/;"	m	struct:hook	file:
run_benchmarks	tests/test-bitmap.c	/^run_benchmarks(struct ovs_cmdl_context *ctx)$/;"	f	file:
run_benchmarks	tests/test-classifier.c	/^run_benchmarks(struct ovs_cmdl_context *ctx)$/;"	f	file:
run_benchmarks	tests/test-cmap.c	/^run_benchmarks(struct ovs_cmdl_context *ctx)$/;"	f	file:
run_bfd	vtep/ovs-vtep	/^def run_bfd():$/;"	f
run_command	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def run_command(command):$/;"	f
run_connection	lib/unixctl.c	/^run_connection(struct unixctl_conn *conn)$/;"	f	file:
run_help	tests/test-lockfile.c	/^run_help(void)$/;"	f	file:
run_lock_and_unlock	tests/test-lockfile.c	/^run_lock_and_unlock(void)$/;"	f	file:
run_lock_and_unlock_allows_other_process	tests/test-lockfile.c	/^run_lock_and_unlock_allows_other_process(void)$/;"	f	file:
run_lock_and_unlock_twice	tests/test-lockfile.c	/^run_lock_and_unlock_twice(void)$/;"	f	file:
run_lock_blocks_other_process	tests/test-lockfile.c	/^run_lock_blocks_other_process(void)$/;"	f	file:
run_lock_blocks_same_process	tests/test-lockfile.c	/^run_lock_blocks_same_process(void)$/;"	f	file:
run_lock_blocks_same_process_twice	tests/test-lockfile.c	/^run_lock_blocks_same_process_twice(void)$/;"	f	file:
run_lock_multiple	tests/test-lockfile.c	/^run_lock_multiple(void)$/;"	f	file:
run_lock_symlink	tests/test-lockfile.c	/^run_lock_symlink(void)$/;"	f	file:
run_lock_symlink_to_dir	tests/test-lockfile.c	/^run_lock_symlink_to_dir(void)$/;"	f	file:
run_lock_twice_blocks_other_process	tests/test-lockfile.c	/^run_lock_twice_blocks_other_process(void)$/;"	f	file:
run_prerequisites	ovn/utilities/ovn-nbctl.c	/^run_prerequisites(struct ctl_command *commands, size_t n_commands,$/;"	f	file:
run_prerequisites	ovn/utilities/ovn-sbctl.c	/^run_prerequisites(struct ctl_command *commands, size_t n_commands,$/;"	f	file:
run_prerequisites	utilities/ovs-vsctl.c	/^run_prerequisites(struct ctl_command *commands, size_t n_commands,$/;"	f	file:
run_prerequisites	vtep/vtep-ctl.c	/^run_prerequisites(struct ctl_command *commands, size_t n_commands,$/;"	f	file:
run_procs	utilities/bugtool/ovs-bugtool	/^def run_procs(procs):$/;"	f
run_python	Makefile	/^run_python = \\$/;"	m
run_stats_update	vswitchd/bridge.c	/^run_stats_update(void)$/;"	f	file:
run_status_update	vswitchd/bridge.c	/^run_status_update(void)$/;"	f	file:
run_system_stats	vswitchd/bridge.c	/^run_system_stats(void)$/;"	f	file:
run_test	tests/test-bitmap.c	/^run_test(void (*function)(void))$/;"	f	file:
run_test	tests/test-cmap.c	/^run_test(void (*function)(hash_func *))$/;"	f	file:
run_test	tests/test-hindex.c	/^run_test(void (*function)(hash_func *))$/;"	f	file:
run_test	tests/test-hmap.c	/^run_test(void (*function)(hash_func *))$/;"	f	file:
run_test	tests/test-list.c	/^run_test(void (*function)(void))$/;"	f	file:
run_tests	tests/test-bitmap.c	/^run_tests(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
run_tests	tests/test-cmap.c	/^run_tests(struct ovs_cmdl_context *ctx)$/;"	f	file:
run_triggers	ovsdb/ovsdb.h	/^    bool run_triggers;$/;"	m	struct:ovsdb
run_wait	lib/stream-provider.h	/^    void (*run_wait)(struct stream *stream);$/;"	m	struct:stream_class
run_wait	lib/vconn-provider.h	/^    void (*run_wait)(struct vconn *vconn);$/;"	m	struct:vconn_class
run_wait	python/ovs/stream.py	/^    def run_wait(self, poller):$/;"	m	class:Stream
run_xterm	tutorial/ovs-sandbox	/^run_xterm() {$/;"	f
rungdb	tutorial/ovs-sandbox	/^rungdb() {$/;"	f
running	debian/openvswitch-ipsec.init	/^running() {$/;"	f
running	debian/openvswitch-testcontroller.init	/^running() {$/;"	f
running_pid	debian/openvswitch-ipsec.init	/^running_pid() {$/;"	f
running_pid	debian/openvswitch-testcontroller.init	/^running_pid() {$/;"	f
rusage	include/windows/sys/resource.h	/^struct rusage {$/;"	s
rwlock	lib/fat-rwlock.c	/^    struct fat_rwlock *rwlock;  \/* Owner. *\/$/;"	m	struct:fat_rwlock_slot	typeref:struct:fat_rwlock_slot::fat_rwlock	file:
rwlock	lib/fat-rwlock.h	/^void fat_rwlock_rdlock(const struct fat_rwlock *rwlock) OVS_ACQ_RDLOCK(rwlock);$/;"	v
rwlock	lib/fat-rwlock.h	/^void fat_rwlock_unlock(const struct fat_rwlock *rwlock) OVS_RELEASES(rwlock);$/;"	v
rwlock	lib/fat-rwlock.h	/^void fat_rwlock_wrlock(const struct fat_rwlock *rwlock) OVS_ACQ_WRLOCK(rwlock);$/;"	v
rwlock	lib/mac-learning.h	/^    struct ovs_rwlock rwlock;$/;"	m	struct:mac_learning	typeref:struct:mac_learning::ovs_rwlock
rwlock	lib/mcast-snooping.h	/^    struct ovs_rwlock rwlock;$/;"	m	struct:mcast_snooping	typeref:struct:mcast_snooping::ovs_rwlock
rwlock	lib/ovs-thread.h	/^    OVS_ACQ_RDLOCK(rwlock);$/;"	v
rwlock	lib/ovs-thread.h	/^    OVS_ACQ_WRLOCK(rwlock);$/;"	v
rwlock	lib/ovs-thread.h	/^void ovs_rwlock_unlock(const struct ovs_rwlock *rwlock) OVS_RELEASES(rwlock);$/;"	v
rwlock	ofproto/bond.c	/^    OVS_REQ_RDLOCK(rwlock);$/;"	v
rwlock	ofproto/bond.c	/^    OVS_REQ_WRLOCK(rwlock);$/;"	v
rwlock	ofproto/bond.c	/^static struct hmap *const all_bonds OVS_GUARDED_BY(rwlock) = &all_bonds__;$/;"	v	file:
rwlock	ofproto/bond.c	/^static struct ovs_rwlock rwlock = OVS_RWLOCK_INITIALIZER;$/;"	v	typeref:struct:ovs_rwlock	file:
rwlock	ofproto/bond.c	/^static void bond_entry_reset(struct bond *) OVS_REQ_WRLOCK(rwlock);$/;"	v
rwlock	ofproto/tunnel.c	/^    OVS_REQ_RDLOCK(rwlock);$/;"	v
rwlock	ofproto/tunnel.c	/^static char *tnl_port_fmt(const struct tnl_port *) OVS_REQ_RDLOCK(rwlock);$/;"	v
rwlock	ofproto/tunnel.c	/^static struct fat_rwlock rwlock;$/;"	v	typeref:struct:fat_rwlock	file:
rwlock	ofproto/tunnel.c	/^static struct hmap *ofport_map OVS_GUARDED_BY(rwlock) = &ofport_map__;$/;"	v	typeref:struct:OVS_GUARDED_BY	file:
rwlock	ofproto/tunnel.c	/^static struct tnl_port *tnl_find(const struct flow *) OVS_REQ_RDLOCK(rwlock);$/;"	v
rwlock	ofproto/tunnel.c	/^static void tnl_port_del__(const struct ofport_dpif *) OVS_REQ_WRLOCK(rwlock);$/;"	v
rx	lib/dpif-netdev.c	/^    struct netdev_rxq *rx;$/;"	m	struct:rxq_poll	typeref:struct:rxq_poll::netdev_rxq	file:
rx	lib/lacp.c	/^    struct timer rx;              \/* Expected message receive timer. *\/$/;"	m	struct:slave	typeref:struct:slave::timer	file:
rx	ofproto/ofproto-dpif-xlate.c	/^            struct netdev *rx;$/;"	m	struct:xc_entry::__anon188::__anon189	typeref:struct:xc_entry::__anon188::__anon189::netdev	file:
rxBytes	datapath-windows/ovsext/Vport.h	/^    UINT64 rxBytes;$/;"	m	struct:_OVS_VPORT_STATS
rxDropped	datapath-windows/ovsext/Vport.h	/^    UINT64  rxDropped;$/;"	m	struct:_OVS_VPORT_ERR_STATS
rxErrors	datapath-windows/ovsext/Vport.h	/^    UINT64  rxErrors;$/;"	m	struct:_OVS_VPORT_ERR_STATS
rxPackets	datapath-windows/ovsext/Vport.h	/^    UINT64 rxPackets;$/;"	m	struct:_OVS_VPORT_STATS
rxStt	datapath-windows/ovsext/Actions.c	/^    UINT64 rxStt;$/;"	m	struct:_OVS_ACTION_STATS	file:
rxVxlan	datapath-windows/ovsext/Actions.c	/^    UINT64 rxVxlan;$/;"	m	struct:_OVS_ACTION_STATS	file:
rx_bytes	datapath/linux/compat/include/linux/netdevice.h	/^	u64     rx_bytes;$/;"	m	struct:pcpu_sw_netstats
rx_bytes	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   rx_bytes;		\/* total bytes received         *\/$/;"	m	struct:ovs_vport_stats
rx_bytes	include/odp-netlink.h	/^	ovs_32aligned_u64   rx_bytes;		\/* total bytes received         *\/$/;"	m	struct:ovs_vport_stats
rx_bytes	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_bytes;       \/* Number of received bytes. *\/$/;"	m	struct:ofp10_port_stats
rx_bytes	include/openflow/openflow-1.1.h	/^    ovs_be64 rx_bytes;        \/* Number of received bytes. *\/$/;"	m	struct:ofp11_port_stats
rx_bytes	include/openflow/openflow-1.4.h	/^    ovs_be64 rx_bytes;       \/* Number of received bytes. *\/$/;"	m	struct:ofp14_port_stats
rx_bytes	lib/netdev-linux.c	/^    uint64_t rx_bytes;$/;"	m	struct:rtnl_link_stats64	file:
rx_bytes	lib/netdev.h	/^    uint64_t rx_bytes;          \/* Total bytes received. *\/$/;"	m	struct:netdev_stats
rx_compressed	lib/netdev-linux.c	/^    uint64_t rx_compressed;$/;"	m	struct:rtnl_link_stats64	file:
rx_count	lib/stp.c	/^    int rx_count;                   \/* Number of valid BPDUs received. *\/$/;"	m	struct:stp_port	file:
rx_count	ofproto/ofproto.h	/^    int rx_count;               \/* Number of valid BPDUs received. *\/$/;"	m	struct:ofproto_port_rstp_status
rx_count	ofproto/ofproto.h	/^    int rx_count;               \/* Number of valid BPDUs received. *\/$/;"	m	struct:ofproto_port_stp_stats
rx_crc_err	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_crc_err;   \/* Number of CRC errors. *\/$/;"	m	struct:ofp10_port_stats
rx_crc_err	include/openflow/openflow-1.1.h	/^    ovs_be64 rx_crc_err;      \/* Number of CRC errors. *\/$/;"	m	struct:ofp11_port_stats
rx_crc_err	include/openflow/openflow-1.4.h	/^    ovs_be64 rx_crc_err;     \/* Number of CRC errors. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
rx_crc_errors	lib/netdev-linux.c	/^    uint64_t rx_crc_errors;$/;"	m	struct:rtnl_link_stats64	file:
rx_crc_errors	lib/netdev.h	/^    uint64_t rx_crc_errors;     \/* Recved pkt with crc error. *\/$/;"	m	struct:netdev_stats
rx_dropped	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   rx_dropped;		\/* no space in linux buffers    *\/$/;"	m	struct:ovs_vport_stats
rx_dropped	datapath/vport.h	/^	atomic_long_t rx_dropped;$/;"	m	struct:vport_err_stats
rx_dropped	include/odp-netlink.h	/^	ovs_32aligned_u64   rx_dropped;		\/* no space in linux buffers    *\/$/;"	m	struct:ovs_vport_stats
rx_dropped	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_dropped;     \/* Number of packets dropped by RX. *\/$/;"	m	struct:ofp10_port_stats
rx_dropped	include/openflow/openflow-1.1.h	/^    ovs_be64 rx_dropped;      \/* Number of packets dropped by RX. *\/$/;"	m	struct:ofp11_port_stats
rx_dropped	include/openflow/openflow-1.4.h	/^    ovs_be64 rx_dropped;     \/* Number of packets dropped by RX. *\/$/;"	m	struct:ofp14_port_stats
rx_dropped	lib/netdev-linux.c	/^    uint64_t rx_dropped;$/;"	m	struct:rtnl_link_stats64	file:
rx_dropped	lib/netdev.h	/^    uint64_t rx_dropped;        \/* No buffer space. *\/$/;"	m	struct:netdev_stats
rx_errors	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   rx_errors;		\/* bad packets received         *\/$/;"	m	struct:ovs_vport_stats
rx_errors	datapath/vport.h	/^	atomic_long_t rx_errors;$/;"	m	struct:vport_err_stats
rx_errors	include/odp-netlink.h	/^	ovs_32aligned_u64   rx_errors;		\/* bad packets received         *\/$/;"	m	struct:ovs_vport_stats
rx_errors	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_errors; \/* Number of receive errors.  This is a$/;"	m	struct:ofp10_port_stats
rx_errors	include/openflow/openflow-1.1.h	/^    ovs_be64 rx_errors;       \/* Number of receive errors.  This is a$/;"	m	struct:ofp11_port_stats
rx_errors	include/openflow/openflow-1.4.h	/^    ovs_be64 rx_errors;      \/* Number of receive errors.  This is a super-set$/;"	m	struct:ofp14_port_stats
rx_errors	lib/netdev-linux.c	/^    uint64_t rx_errors;$/;"	m	struct:rtnl_link_stats64	file:
rx_errors	lib/netdev.h	/^    uint64_t rx_errors;         \/* Bad packets received. *\/$/;"	m	struct:netdev_stats
rx_fifo_errors	lib/netdev-linux.c	/^    uint64_t rx_fifo_errors;$/;"	m	struct:rtnl_link_stats64	file:
rx_fifo_errors	lib/netdev.h	/^    uint64_t rx_fifo_errors;    \/* Recv'r fifo overrun . *\/$/;"	m	struct:netdev_stats
rx_frame_err	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_frame_err; \/* Number of frame alignment errors. *\/$/;"	m	struct:ofp10_port_stats
rx_frame_err	include/openflow/openflow-1.1.h	/^    ovs_be64 rx_frame_err;    \/* Number of frame alignment errors. *\/$/;"	m	struct:ofp11_port_stats
rx_frame_err	include/openflow/openflow-1.4.h	/^    ovs_be64 rx_frame_err;   \/* Number of frame alignment errors. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
rx_frame_errors	lib/netdev-linux.c	/^    uint64_t rx_frame_errors;$/;"	m	struct:rtnl_link_stats64	file:
rx_frame_errors	lib/netdev.h	/^    uint64_t rx_frame_errors;   \/* Recv'd frame alignment error. *\/$/;"	m	struct:netdev_stats
rx_length_errors	lib/netdev-linux.c	/^    uint64_t rx_length_errors;$/;"	m	struct:rtnl_link_stats64	file:
rx_length_errors	lib/netdev.h	/^    uint64_t rx_length_errors;$/;"	m	struct:netdev_stats
rx_missed_errors	lib/netdev-linux.c	/^    uint64_t rx_missed_errors;$/;"	m	struct:rtnl_link_stats64	file:
rx_missed_errors	lib/netdev.h	/^    uint64_t rx_missed_errors;  \/* Receiver missed packet. *\/$/;"	m	struct:netdev_stats
rx_over_err	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_over_err;  \/* Number of packets with RX overrun. *\/$/;"	m	struct:ofp10_port_stats
rx_over_err	include/openflow/openflow-1.1.h	/^    ovs_be64 rx_over_err;     \/* Number of packets with RX overrun. *\/$/;"	m	struct:ofp11_port_stats
rx_over_err	include/openflow/openflow-1.4.h	/^    ovs_be64 rx_over_err;    \/* Number of packets with RX overrun. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
rx_over_errors	lib/netdev-linux.c	/^    uint64_t rx_over_errors;$/;"	m	struct:rtnl_link_stats64	file:
rx_over_errors	lib/netdev.h	/^    uint64_t rx_over_errors;    \/* Receiver ring buff overflow. *\/$/;"	m	struct:netdev_stats
rx_packets	datapath/linux/compat/include/linux/netdevice.h	/^	u64     rx_packets;$/;"	m	struct:pcpu_sw_netstats
rx_packets	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   rx_packets;		\/* total packets received       *\/$/;"	m	struct:ovs_vport_stats
rx_packets	include/odp-netlink.h	/^	ovs_32aligned_u64   rx_packets;		\/* total packets received       *\/$/;"	m	struct:ovs_vport_stats
rx_packets	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 rx_packets;     \/* Number of received packets. *\/$/;"	m	struct:ofp10_port_stats
rx_packets	include/openflow/openflow-1.1.h	/^    ovs_be64 rx_packets;      \/* Number of received packets. *\/$/;"	m	struct:ofp11_port_stats
rx_packets	include/openflow/openflow-1.4.h	/^    ovs_be64 rx_packets;     \/* Number of received packets. *\/$/;"	m	struct:ofp14_port_stats
rx_packets	lib/bfd.c	/^    uint64_t rx_packets;          \/* Packets received by 'netdev'. *\/$/;"	m	struct:bfd	file:
rx_packets	lib/cfm.c	/^    uint64_t rx_packets;        \/* Packets received by 'netdev'. *\/$/;"	m	struct:cfm	file:
rx_packets	lib/netdev-linux.c	/^    uint64_t rx_packets;$/;"	m	struct:rtnl_link_stats64	file:
rx_packets	lib/netdev.h	/^    uint64_t rx_packets;        \/* Total packets received. *\/$/;"	m	struct:netdev_stats
rx_rstp_bpdu_cnt	lib/rstp-common.h	/^    uint32_t rx_rstp_bpdu_cnt;$/;"	m	struct:rstp_port
rx_want	lib/stream-ssl.c	/^    int rx_want, tx_want;$/;"	m	struct:ssl_stream	file:
rxbuf	lib/netdev-dummy.c	/^    struct dp_packet rxbuf;$/;"	m	struct:dummy_packet_stream	typeref:struct:dummy_packet_stream::dp_packet	file:
rxbuf	lib/vconn-stream.c	/^    struct ofpbuf *rxbuf;$/;"	m	struct:vconn_stream	typeref:struct:vconn_stream::ofpbuf	file:
rxq	lib/dpif-netdev.c	/^    struct netdev_rxq **rxq;$/;"	m	struct:dp_netdev_port	typeref:struct:dp_netdev_port::netdev_rxq	file:
rxq	tests/test-rstp.c	/^    struct bpdu rxq[RXQ_SIZE];$/;"	m	struct:bridge	typeref:struct:bridge::bpdu	file:
rxq	tests/test-stp.c	/^    struct bpdu rxq[RXQ_SIZE];$/;"	m	struct:bridge	typeref:struct:bridge::bpdu	file:
rxq_alloc	lib/netdev-provider.h	/^    struct netdev_rxq *(*rxq_alloc)(void);$/;"	m	struct:netdev_class	typeref:struct:netdev_class::rxq_alloc
rxq_construct	lib/netdev-provider.h	/^    int (*rxq_construct)(struct netdev_rxq *);$/;"	m	struct:netdev_class
rxq_dealloc	lib/netdev-provider.h	/^    void (*rxq_dealloc)(struct netdev_rxq *);$/;"	m	struct:netdev_class
rxq_destruct	lib/netdev-provider.h	/^    void (*rxq_destruct)(struct netdev_rxq *);$/;"	m	struct:netdev_class
rxq_drain	lib/netdev-provider.h	/^    int (*rxq_drain)(struct netdev_rxq *rx);$/;"	m	struct:netdev_class
rxq_head	tests/test-rstp.c	/^    int rxq_head, rxq_tail;$/;"	m	struct:bridge	file:
rxq_head	tests/test-stp.c	/^    int rxq_head, rxq_tail;$/;"	m	struct:bridge	file:
rxq_poll	lib/dpif-netdev.c	/^struct rxq_poll {$/;"	s	file:
rxq_recv	lib/netdev-provider.h	/^    int (*rxq_recv)(struct netdev_rxq *rx, struct dp_packet **pkts,$/;"	m	struct:netdev_class
rxq_tail	tests/test-rstp.c	/^    int rxq_head, rxq_tail;$/;"	m	struct:bridge	file:
rxq_tail	tests/test-stp.c	/^    int rxq_head, rxq_tail;$/;"	m	struct:bridge	file:
rxq_wait	lib/netdev-provider.h	/^    void (*rxq_wait)(struct netdev_rxq *rx);$/;"	m	struct:netdev_class
s	datapath-windows/ovsext/NetProto.h	/^            s:1,$/;"	m	struct:IGMPV3Trailer
s	lib/hindex.h	/^    struct hindex_node *s;$/;"	m	struct:hindex_node	typeref:struct:hindex_node::hindex_node
s	ovn/lib/lex.h	/^    char *s;                    \/* LEX_T_ID, LEX_T_STRING, LEX_T_ERROR only. *\/$/;"	m	struct:lex_token
s	tests/idltest.h	/^	char *s;	\/* Always nonnull. *\/$/;"	m	struct:idltest_simple
s	tests/test-ovn.c	/^    int s[50];$/;"	m	struct:tree_shape	file:
s	utilities/ovs-check-dead-ifs	/^            s = os.stat("\/proc\/%d\/fd\/%d" % (pid, fd))$/;"	v
s6_addr	include/sparse/netinet/in.h	47;"	d
sAddr	datapath-windows/ovsext/Stt.h	/^    UINT32 sAddr;$/;"	m	struct:_OVS_STT_PKT_KEY
sFlowCpInterval	lib/sflow_api.h	/^    time_t sFlowCpInterval;$/;"	m	struct:_SFLPoller
sFlowCpReceiver	lib/sflow_api.h	/^    u_int32_t sFlowCpReceiver;$/;"	m	struct:_SFLPoller
sFlowFsMaximumHeaderSize	lib/sflow_api.h	/^    u_int32_t sFlowFsMaximumHeaderSize;$/;"	m	struct:_SFLSampler
sFlowFsPacketSamplingRate	lib/sflow_api.h	/^    u_int32_t sFlowFsPacketSamplingRate;$/;"	m	struct:_SFLSampler
sFlowFsReceiver	lib/sflow_api.h	/^    u_int32_t sFlowFsReceiver;$/;"	m	struct:_SFLSampler
sFlowRcvrAddress	lib/sflow_api.h	/^    SFLAddress sFlowRcvrAddress;$/;"	m	struct:_SFLReceiver
sFlowRcvrDatagramVersion	lib/sflow_api.h	/^    u_int32_t sFlowRcvrDatagramVersion;$/;"	m	struct:_SFLReceiver
sFlowRcvrMaximumDatagramSize	lib/sflow_api.h	/^    u_int32_t sFlowRcvrMaximumDatagramSize;$/;"	m	struct:_SFLReceiver
sFlowRcvrOwner	lib/sflow_api.h	/^    char *sFlowRcvrOwner;$/;"	m	struct:_SFLReceiver
sFlowRcvrPort	lib/sflow_api.h	/^    u_int32_t sFlowRcvrPort;$/;"	m	struct:_SFLReceiver
sFlowRcvrTimeout	lib/sflow_api.h	/^    time_t sFlowRcvrTimeout;$/;"	m	struct:_SFLReceiver
s_addr	include/sparse/netinet/in.h	/^    in_addr_t s_addr;$/;"	m	struct:in_addr
sa	tests/idltest.h	/^	char **sa;$/;"	m	struct:idltest_simple
sa_data	include/sparse/sys/socket.h	/^    char sa_data[64];$/;"	m	struct:sockaddr
sa_data	include/sparse/sys/socket.h	/^    char sa_data[64];$/;"	m	struct:sockaddr_storage
sa_family	include/sparse/sys/socket.h	/^    sa_family_t sa_family;$/;"	m	struct:sockaddr
sa_family_t	include/sparse/sys/socket.h	/^typedef unsigned short int sa_family_t;$/;"	t
sa_family_t	include/windows/sys/socket.h	/^typedef unsigned short int sa_family_t;$/;"	t
sad_del	debian/ovs-monitor-ipsec	/^    def sad_del(self, local_ip, remote_ip):$/;"	m	class:IPsec
sad_flush	debian/ovs-monitor-ipsec	/^    def sad_flush(self):$/;"	m	class:IPsec
saddr	datapath-windows/ovsext/NetProto.h	/^    struct in6_addr saddr;$/;"	m	struct:IPv6Hdr	typeref:struct:IPv6Hdr::in6_addr
saddr	datapath-windows/ovsext/NetProto.h	/^   UINT32   saddr;$/;"	m	struct:IPHdr
saddr	datapath/linux/compat/stt.c	/^	__be32 saddr;$/;"	m	struct:pkt_key	file:
saddr	datapath/linux/stt.c	/^	__be32 saddr;$/;"	m	struct:pkt_key	file:
sample	datapath/actions.c	/^static int sample(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
sample	datapath/linux/actions.c	/^static int sample(struct datapath *dp, struct sk_buff *skb,$/;"	f	file:
sampleCollector	lib/sflow_api.h	/^    SFLSampleCollector sampleCollector;$/;"	m	struct:_SFLReceiver
samplePool	lib/sflow_api.h	/^    u_int32_t samplePool;$/;"	m	struct:_SFLSampler
samplePool	tests/test-sflow.c	/^    uint32_t samplePool;$/;"	m	struct:sflow_xdr	file:
sample_action_to_attr	datapath/flow_netlink.c	/^static int sample_action_to_attr(const struct nlattr *attr, struct sk_buff *skb)$/;"	f	file:
sample_action_to_attr	datapath/linux/flow_netlink.c	/^static int sample_action_to_attr(const struct nlattr *attr, struct sk_buff *skb)$/;"	f	file:
sample_pool	lib/sflow.h	/^    u_int32_t sample_pool;          \/* Total number of packets that could have been$/;"	m	struct:_SFLFlow_sample
sample_pool	lib/sflow.h	/^    u_int32_t sample_pool;          \/* Total number of packets that could have been$/;"	m	struct:_SFLFlow_sample_expanded
samplers	lib/sflow_api.h	/^    SFLSampler *samplers;   \/* the list of samplers *\/$/;"	m	struct:_SFLAgent
samplesLastTick	lib/sflow_api.h	/^    u_int32_t samplesLastTick;$/;"	m	struct:_SFLSampler
samplesThisTick	lib/sflow_api.h	/^    u_int32_t samplesThisTick;$/;"	m	struct:_SFLSampler
sampling	lib/vswitch-idl.h	/^	int64_t *sampling;$/;"	m	struct:ovsrec_ipfix
sampling	lib/vswitch-idl.h	/^	int64_t *sampling;$/;"	m	struct:ovsrec_sflow
sampling_interval	lib/netflow.h	/^    ovs_be16 sampling_interval;    \/* Set to zero. *\/$/;"	m	struct:netflow_v5_header
sampling_rate	lib/sflow.h	/^    u_int32_t sampling_rate;        \/* fsPacketSamplingRate *\/$/;"	m	struct:_SFLFlow_sample
sampling_rate	lib/sflow.h	/^    u_int32_t sampling_rate;        \/* fsPacketSamplingRate *\/$/;"	m	struct:_SFLFlow_sample_expanded
sampling_rate	ofproto/ofproto.h	/^    uint32_t sampling_rate;$/;"	m	struct:ofproto_ipfix_bridge_exporter_options
sampling_rate	ofproto/ofproto.h	/^    uint32_t sampling_rate;$/;"	m	struct:ofproto_sflow_options
sargc	lib/daemon-windows.c	/^static int sargc;$/;"	v	file:
sargvp	lib/daemon-windows.c	/^static char ***sargvp;$/;"	v	file:
sat_add	lib/sat-math.h	/^sat_add(unsigned int x, unsigned int y)$/;"	f
sat_mul	lib/sat-math.h	/^sat_mul(unsigned int x, unsigned int y)$/;"	f
sat_sub	lib/sat-math.h	/^sat_sub(unsigned int x, unsigned int y)$/;"	f
save	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def save(self, cache_file):$/;"	m	class:DatabaseCache
save_config	ovsdb/ovsdb-server.c	/^save_config(struct server_config *config)$/;"	f	file:
save_config__	ovsdb/ovsdb-server.c	/^save_config__(FILE *config_file, const struct sset *remotes,$/;"	f	file:
save_fds	lib/daemon.c	/^static bool save_fds[3];$/;"	v	file:
save_flows	utilities/ovs-save	/^save_flows () {$/;"	f
save_flows_if_required	utilities/ovs-ctl	/^save_flows_if_required () {$/;"	f
save_flows_if_required	utilities/ovs-ctl.in	/^save_flows_if_required () {$/;"	f
save_interfaces	utilities/ovs-ctl	/^save_interfaces () {$/;"	f
save_interfaces	utilities/ovs-ctl.in	/^save_interfaces () {$/;"	f
save_interfaces	utilities/ovs-save	/^save_interfaces () {$/;"	f
save_interfaces_if_required	utilities/ovs-ctl	/^save_interfaces_if_required () {$/;"	f
save_interfaces_if_required	utilities/ovs-ctl.in	/^save_interfaces_if_required () {$/;"	f
save_ofports	utilities/ovs-save	/^save_ofports ()$/;"	f
save_ofports_if_required	utilities/ovs-ctl	/^save_ofports_if_required () {$/;"	f
save_ofports_if_required	utilities/ovs-ctl.in	/^save_ofports_if_required () {$/;"	f
saved_flags	lib/netdev.c	/^    enum netdev_flags saved_flags;$/;"	m	struct:netdev_saved_flags	typeref:enum:netdev_saved_flags::netdev_flags	file:
saved_flags_list	lib/netdev-provider.h	/^    struct ovs_list saved_flags_list; \/* Contains "struct netdev_saved_flags". *\/$/;"	m	struct:netdev	typeref:struct:netdev::ovs_list
saved_values	lib/netdev.c	/^    enum netdev_flags saved_values;$/;"	m	struct:netdev_saved_flags	typeref:enum:netdev_saved_flags::netdev_flags	file:
sax	ofproto/ipfix-gen-entities	/^import xml.sax$/;"	i
sax	ofproto/ipfix-gen-entities	/^import xml.sax.handler$/;"	i
sb	ovn/northd/ovn-northd.c	/^    const struct sbrec_datapath_binding *sb; \/* May be NULL. *\/$/;"	m	struct:ovn_datapath	typeref:struct:ovn_datapath::sbrec_datapath_binding	file:
sb	ovn/northd/ovn-northd.c	/^    const struct sbrec_port_binding *sb;         \/* May be NULL. *\/$/;"	m	struct:ovn_port	typeref:struct:ovn_port::sbrec_port_binding	file:
sbctl	ovn/utilities/ovn-sbctl.c	/^VLOG_DEFINE_THIS_MODULE(sbctl);$/;"	v
sbctl_chassis	ovn/utilities/ovn-sbctl.c	/^struct sbctl_chassis {$/;"	s	file:
sbctl_cmd_init	ovn/utilities/ovn-sbctl.c	/^sbctl_cmd_init(void)$/;"	f	file:
sbctl_commands	ovn/utilities/ovn-sbctl.c	/^static const struct ctl_command_syntax sbctl_commands[] = {$/;"	v	typeref:struct:ctl_command_syntax	file:
sbctl_context	ovn/utilities/ovn-sbctl.c	/^struct sbctl_context {$/;"	s	file:
sbctl_context_cast	ovn/utilities/ovn-sbctl.c	/^sbctl_context_cast(struct ctl_context *base)$/;"	f	file:
sbctl_context_done	ovn/utilities/ovn-sbctl.c	/^sbctl_context_done(struct sbctl_context *sbctl_ctx,$/;"	f	file:
sbctl_context_done_command	ovn/utilities/ovn-sbctl.c	/^sbctl_context_done_command(struct sbctl_context *sbctl_ctx,$/;"	f	file:
sbctl_context_init	ovn/utilities/ovn-sbctl.c	/^sbctl_context_init(struct sbctl_context *sbctl_ctx,$/;"	f	file:
sbctl_context_init_command	ovn/utilities/ovn-sbctl.c	/^sbctl_context_init_command(struct sbctl_context *sbctl_ctx,$/;"	f	file:
sbctl_context_invalidate_cache	ovn/utilities/ovn-sbctl.c	/^sbctl_context_invalidate_cache(struct ctl_context *ctx)$/;"	f	file:
sbctl_context_populate_cache	ovn/utilities/ovn-sbctl.c	/^sbctl_context_populate_cache(struct ctl_context *ctx)$/;"	f	file:
sbctl_default_db	ovn/utilities/ovn-sbctl.c	/^sbctl_default_db(void)$/;"	f	file:
sbctl_exit	ovn/utilities/ovn-sbctl.c	/^sbctl_exit(int status)$/;"	f	file:
sbctl_port_binding	ovn/utilities/ovn-sbctl.c	/^struct sbctl_port_binding {$/;"	s	file:
sbin_PROGRAMS	Makefile	/^sbin_PROGRAMS = $(am__EXEEXT_3) vswitchd\/ovs-vswitchd$(EXEEXT) \\$/;"	m
sbin_SCRIPTS	Makefile	/^sbin_SCRIPTS = $(am__append_31)$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	datapath/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbrec_chassis	ovn/lib/ovn-sb-idl.h	/^struct sbrec_chassis {$/;"	s
sbrec_chassis_cast	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_chassis_col_encaps	ovn/lib/ovn-sb-idl.h	38;"	d
sbrec_chassis_col_name	ovn/lib/ovn-sb-idl.h	39;"	d
sbrec_chassis_col_vtep_logical_switches	ovn/lib/ovn-sb-idl.h	37;"	d
sbrec_chassis_columns	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_column sbrec_chassis_columns[SBREC_CHASSIS_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
sbrec_chassis_columns_init	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_columns_init(void)$/;"	f	file:
sbrec_chassis_delete	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_delete(const struct sbrec_chassis *row)$/;"	f
sbrec_chassis_first	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_first(const struct ovsdb_idl *idl)$/;"	f
sbrec_chassis_get_encaps	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_get_encaps(const struct sbrec_chassis *row,$/;"	f
sbrec_chassis_get_for_uuid	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
sbrec_chassis_get_name	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_get_name(const struct sbrec_chassis *row,$/;"	f
sbrec_chassis_get_vtep_logical_switches	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_get_vtep_logical_switches(const struct sbrec_chassis *row,$/;"	f
sbrec_chassis_init	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_init(struct sbrec_chassis *row)$/;"	f
sbrec_chassis_init__	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_init__(struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_chassis_insert	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_insert(struct ovsdb_idl_txn *txn)$/;"	f
sbrec_chassis_next	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_next(const struct sbrec_chassis *row)$/;"	f
sbrec_chassis_parse_encaps	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_parse_encaps(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_chassis_parse_name	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_chassis_parse_vtep_logical_switches	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_parse_vtep_logical_switches(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_chassis_set_encaps	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_set_encaps(const struct sbrec_chassis *row, struct sbrec_encap **encaps, size_t n_encaps)$/;"	f
sbrec_chassis_set_name	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_set_name(const struct sbrec_chassis *row, const char *name)$/;"	f
sbrec_chassis_set_vtep_logical_switches	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_set_vtep_logical_switches(const struct sbrec_chassis *row, const char **vtep_logical_switches, size_t n_vtep_logical_switches)$/;"	f
sbrec_chassis_unparse_encaps	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_unparse_encaps(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_chassis_unparse_name	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_chassis_unparse_vtep_logical_switches	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_unparse_vtep_logical_switches(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_chassis_verify_encaps	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_verify_encaps(const struct sbrec_chassis *row)$/;"	f
sbrec_chassis_verify_name	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_verify_name(const struct sbrec_chassis *row)$/;"	f
sbrec_chassis_verify_vtep_logical_switches	ovn/lib/ovn-sb-idl.c	/^sbrec_chassis_verify_vtep_logical_switches(const struct sbrec_chassis *row)$/;"	f
sbrec_datapath_binding	ovn/lib/ovn-sb-idl.h	/^struct sbrec_datapath_binding {$/;"	s
sbrec_datapath_binding_cast	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_datapath_binding_col_external_ids	ovn/lib/ovn-sb-idl.h	90;"	d
sbrec_datapath_binding_col_tunnel_key	ovn/lib/ovn-sb-idl.h	89;"	d
sbrec_datapath_binding_columns	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_column sbrec_datapath_binding_columns[SBREC_DATAPATH_BINDING_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
sbrec_datapath_binding_columns_init	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_columns_init(void)$/;"	f	file:
sbrec_datapath_binding_delete	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_delete(const struct sbrec_datapath_binding *row)$/;"	f
sbrec_datapath_binding_first	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_first(const struct ovsdb_idl *idl)$/;"	f
sbrec_datapath_binding_get_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_get_external_ids(const struct sbrec_datapath_binding *row,$/;"	f
sbrec_datapath_binding_get_for_uuid	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
sbrec_datapath_binding_get_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_get_tunnel_key(const struct sbrec_datapath_binding *row,$/;"	f
sbrec_datapath_binding_init	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_init(struct sbrec_datapath_binding *row)$/;"	f
sbrec_datapath_binding_init__	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_init__(struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_datapath_binding_insert	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_insert(struct ovsdb_idl_txn *txn)$/;"	f
sbrec_datapath_binding_next	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_next(const struct sbrec_datapath_binding *row)$/;"	f
sbrec_datapath_binding_parse_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_datapath_binding_parse_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_parse_tunnel_key(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_datapath_binding_set_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_set_external_ids(const struct sbrec_datapath_binding *row, const struct smap *external_ids)$/;"	f
sbrec_datapath_binding_set_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_set_tunnel_key(const struct sbrec_datapath_binding *row, int64_t tunnel_key)$/;"	f
sbrec_datapath_binding_unparse_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_datapath_binding_unparse_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_unparse_tunnel_key(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_datapath_binding_verify_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_verify_external_ids(const struct sbrec_datapath_binding *row)$/;"	f
sbrec_datapath_binding_verify_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_datapath_binding_verify_tunnel_key(const struct sbrec_datapath_binding *row)$/;"	f
sbrec_encap	ovn/lib/ovn-sb-idl.h	/^struct sbrec_encap {$/;"	s
sbrec_encap_cast	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_encap_col_ip	ovn/lib/ovn-sb-idl.h	141;"	d
sbrec_encap_col_options	ovn/lib/ovn-sb-idl.h	143;"	d
sbrec_encap_col_type	ovn/lib/ovn-sb-idl.h	142;"	d
sbrec_encap_columns	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_column sbrec_encap_columns[SBREC_ENCAP_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
sbrec_encap_columns_init	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_columns_init(void)$/;"	f	file:
sbrec_encap_delete	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_delete(const struct sbrec_encap *row)$/;"	f
sbrec_encap_first	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_first(const struct ovsdb_idl *idl)$/;"	f
sbrec_encap_get_for_uuid	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
sbrec_encap_get_ip	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_get_ip(const struct sbrec_encap *row,$/;"	f
sbrec_encap_get_options	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_get_options(const struct sbrec_encap *row,$/;"	f
sbrec_encap_get_type	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_get_type(const struct sbrec_encap *row,$/;"	f
sbrec_encap_init	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_init(struct sbrec_encap *row)$/;"	f
sbrec_encap_init__	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_init__(struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_encap_insert	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_insert(struct ovsdb_idl_txn *txn)$/;"	f
sbrec_encap_next	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_next(const struct sbrec_encap *row)$/;"	f
sbrec_encap_parse_ip	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_parse_ip(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_encap_parse_options	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_parse_options(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_encap_parse_type	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_parse_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_encap_set_ip	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_set_ip(const struct sbrec_encap *row, const char *ip)$/;"	f
sbrec_encap_set_options	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_set_options(const struct sbrec_encap *row, const struct smap *options)$/;"	f
sbrec_encap_set_type	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_set_type(const struct sbrec_encap *row, const char *type)$/;"	f
sbrec_encap_unparse_ip	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_unparse_ip(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_encap_unparse_options	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_unparse_options(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_encap_unparse_type	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_unparse_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_encap_verify_ip	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_verify_ip(const struct sbrec_encap *row)$/;"	f
sbrec_encap_verify_options	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_verify_options(const struct sbrec_encap *row)$/;"	f
sbrec_encap_verify_type	ovn/lib/ovn-sb-idl.c	/^sbrec_encap_verify_type(const struct sbrec_encap *row)$/;"	f
sbrec_get_db_version	ovn/lib/ovn-sb-idl.c	/^sbrec_get_db_version(void)$/;"	f
sbrec_idl_class	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_class sbrec_idl_class = {$/;"	v	typeref:struct:ovsdb_idl_class
sbrec_init	ovn/lib/ovn-sb-idl.c	/^sbrec_init(void)$/;"	f
sbrec_logical_flow	ovn/lib/ovn-sb-idl.h	/^struct sbrec_logical_flow {$/;"	s
sbrec_logical_flow_cast	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_logical_flow_col_actions	ovn/lib/ovn-sb-idl.h	215;"	d
sbrec_logical_flow_col_external_ids	ovn/lib/ovn-sb-idl.h	218;"	d
sbrec_logical_flow_col_logical_datapath	ovn/lib/ovn-sb-idl.h	213;"	d
sbrec_logical_flow_col_match	ovn/lib/ovn-sb-idl.h	219;"	d
sbrec_logical_flow_col_pipeline	ovn/lib/ovn-sb-idl.h	214;"	d
sbrec_logical_flow_col_priority	ovn/lib/ovn-sb-idl.h	216;"	d
sbrec_logical_flow_col_table_id	ovn/lib/ovn-sb-idl.h	217;"	d
sbrec_logical_flow_columns	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_column sbrec_logical_flow_columns[SBREC_LOGICAL_FLOW_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
sbrec_logical_flow_columns_init	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_columns_init(void)$/;"	f	file:
sbrec_logical_flow_delete	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_delete(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_first	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_first(const struct ovsdb_idl *idl)$/;"	f
sbrec_logical_flow_get_actions	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_actions(const struct sbrec_logical_flow *row,$/;"	f
sbrec_logical_flow_get_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_external_ids(const struct sbrec_logical_flow *row,$/;"	f
sbrec_logical_flow_get_for_uuid	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
sbrec_logical_flow_get_logical_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_logical_datapath(const struct sbrec_logical_flow *row,$/;"	f
sbrec_logical_flow_get_match	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_match(const struct sbrec_logical_flow *row,$/;"	f
sbrec_logical_flow_get_pipeline	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_pipeline(const struct sbrec_logical_flow *row,$/;"	f
sbrec_logical_flow_get_priority	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_priority(const struct sbrec_logical_flow *row,$/;"	f
sbrec_logical_flow_get_table_id	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_get_table_id(const struct sbrec_logical_flow *row,$/;"	f
sbrec_logical_flow_init	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_init(struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_init__	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_init__(struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_logical_flow_insert	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_insert(struct ovsdb_idl_txn *txn)$/;"	f
sbrec_logical_flow_next	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_next(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_parse_actions	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_parse_actions(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_logical_flow_parse_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_parse_external_ids(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_logical_flow_parse_logical_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_parse_logical_datapath(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_logical_flow_parse_match	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_parse_match(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_logical_flow_parse_pipeline	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_parse_pipeline(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_logical_flow_parse_priority	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_parse_priority(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_logical_flow_parse_table_id	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_parse_table_id(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_logical_flow_set_actions	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_set_actions(const struct sbrec_logical_flow *row, const char *actions)$/;"	f
sbrec_logical_flow_set_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_set_external_ids(const struct sbrec_logical_flow *row, const struct smap *external_ids)$/;"	f
sbrec_logical_flow_set_logical_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_set_logical_datapath(const struct sbrec_logical_flow *row, const struct sbrec_datapath_binding *logical_datapath)$/;"	f
sbrec_logical_flow_set_match	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_set_match(const struct sbrec_logical_flow *row, const char *match)$/;"	f
sbrec_logical_flow_set_pipeline	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_set_pipeline(const struct sbrec_logical_flow *row, const char *pipeline)$/;"	f
sbrec_logical_flow_set_priority	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_set_priority(const struct sbrec_logical_flow *row, int64_t priority)$/;"	f
sbrec_logical_flow_set_table_id	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_set_table_id(const struct sbrec_logical_flow *row, int64_t table_id)$/;"	f
sbrec_logical_flow_unparse_actions	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_unparse_actions(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_logical_flow_unparse_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_unparse_external_ids(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_logical_flow_unparse_logical_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_unparse_logical_datapath(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_logical_flow_unparse_match	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_unparse_match(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_logical_flow_unparse_pipeline	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_unparse_pipeline(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_logical_flow_unparse_priority	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_unparse_priority(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_logical_flow_unparse_table_id	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_unparse_table_id(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_logical_flow_verify_actions	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_verify_actions(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_verify_external_ids	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_verify_external_ids(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_verify_logical_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_verify_logical_datapath(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_verify_match	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_verify_match(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_verify_pipeline	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_verify_pipeline(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_verify_priority	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_verify_priority(const struct sbrec_logical_flow *row)$/;"	f
sbrec_logical_flow_verify_table_id	ovn/lib/ovn-sb-idl.c	/^sbrec_logical_flow_verify_table_id(const struct sbrec_logical_flow *row)$/;"	f
sbrec_multicast_group	ovn/lib/ovn-sb-idl.h	/^struct sbrec_multicast_group {$/;"	s
sbrec_multicast_group_cast	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_multicast_group_col_datapath	ovn/lib/ovn-sb-idl.h	293;"	d
sbrec_multicast_group_col_name	ovn/lib/ovn-sb-idl.h	292;"	d
sbrec_multicast_group_col_ports	ovn/lib/ovn-sb-idl.h	291;"	d
sbrec_multicast_group_col_tunnel_key	ovn/lib/ovn-sb-idl.h	290;"	d
sbrec_multicast_group_columns	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_column sbrec_multicast_group_columns[SBREC_MULTICAST_GROUP_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
sbrec_multicast_group_columns_init	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_columns_init(void)$/;"	f	file:
sbrec_multicast_group_delete	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_delete(const struct sbrec_multicast_group *row)$/;"	f
sbrec_multicast_group_first	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_first(const struct ovsdb_idl *idl)$/;"	f
sbrec_multicast_group_get_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_get_datapath(const struct sbrec_multicast_group *row,$/;"	f
sbrec_multicast_group_get_for_uuid	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
sbrec_multicast_group_get_name	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_get_name(const struct sbrec_multicast_group *row,$/;"	f
sbrec_multicast_group_get_ports	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_get_ports(const struct sbrec_multicast_group *row,$/;"	f
sbrec_multicast_group_get_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_get_tunnel_key(const struct sbrec_multicast_group *row,$/;"	f
sbrec_multicast_group_init	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_init(struct sbrec_multicast_group *row)$/;"	f
sbrec_multicast_group_init__	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_init__(struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_multicast_group_insert	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_insert(struct ovsdb_idl_txn *txn)$/;"	f
sbrec_multicast_group_next	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_next(const struct sbrec_multicast_group *row)$/;"	f
sbrec_multicast_group_parse_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_parse_datapath(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_multicast_group_parse_name	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_multicast_group_parse_ports	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_parse_ports(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_multicast_group_parse_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_parse_tunnel_key(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_multicast_group_set_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_set_datapath(const struct sbrec_multicast_group *row, const struct sbrec_datapath_binding *datapath)$/;"	f
sbrec_multicast_group_set_name	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_set_name(const struct sbrec_multicast_group *row, const char *name)$/;"	f
sbrec_multicast_group_set_ports	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_set_ports(const struct sbrec_multicast_group *row, struct sbrec_port_binding **ports, size_t n_ports)$/;"	f
sbrec_multicast_group_set_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_set_tunnel_key(const struct sbrec_multicast_group *row, int64_t tunnel_key)$/;"	f
sbrec_multicast_group_unparse_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_unparse_datapath(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_multicast_group_unparse_name	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_multicast_group_unparse_ports	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_unparse_ports(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_multicast_group_unparse_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_unparse_tunnel_key(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_multicast_group_verify_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_verify_datapath(const struct sbrec_multicast_group *row)$/;"	f
sbrec_multicast_group_verify_name	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_verify_name(const struct sbrec_multicast_group *row)$/;"	f
sbrec_multicast_group_verify_ports	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_verify_ports(const struct sbrec_multicast_group *row)$/;"	f
sbrec_multicast_group_verify_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_multicast_group_verify_tunnel_key(const struct sbrec_multicast_group *row)$/;"	f
sbrec_port_binding	ovn/lib/ovn-sb-idl.h	/^struct sbrec_port_binding {$/;"	s
sbrec_port_binding_cast	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_port_binding_col_chassis	ovn/lib/ovn-sb-idl.h	377;"	d
sbrec_port_binding_col_datapath	ovn/lib/ovn-sb-idl.h	378;"	d
sbrec_port_binding_col_logical_port	ovn/lib/ovn-sb-idl.h	379;"	d
sbrec_port_binding_col_mac	ovn/lib/ovn-sb-idl.h	380;"	d
sbrec_port_binding_col_options	ovn/lib/ovn-sb-idl.h	384;"	d
sbrec_port_binding_col_parent_port	ovn/lib/ovn-sb-idl.h	376;"	d
sbrec_port_binding_col_tag	ovn/lib/ovn-sb-idl.h	381;"	d
sbrec_port_binding_col_tunnel_key	ovn/lib/ovn-sb-idl.h	382;"	d
sbrec_port_binding_col_type	ovn/lib/ovn-sb-idl.h	383;"	d
sbrec_port_binding_columns	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_column sbrec_port_binding_columns[SBREC_PORT_BINDING_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
sbrec_port_binding_columns_init	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_columns_init(void)$/;"	f	file:
sbrec_port_binding_delete	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_delete(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_first	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_first(const struct ovsdb_idl *idl)$/;"	f
sbrec_port_binding_get_chassis	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_chassis(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_datapath(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_for_uuid	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
sbrec_port_binding_get_logical_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_logical_port(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_mac	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_mac(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_options	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_options(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_parent_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_parent_port(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_tag	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_tag(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_tunnel_key(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_get_type	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_get_type(const struct sbrec_port_binding *row,$/;"	f
sbrec_port_binding_init	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_init(struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_init__	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_init__(struct ovsdb_idl_row *row)$/;"	f	file:
sbrec_port_binding_insert	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_insert(struct ovsdb_idl_txn *txn)$/;"	f
sbrec_port_binding_next	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_next(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_parse_chassis	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_chassis(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_datapath(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_logical_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_logical_port(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_mac	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_options	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_options(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_parent_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_parent_port(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_tag	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_tag(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_tunnel_key(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_parse_type	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_parse_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
sbrec_port_binding_set_chassis	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_chassis(const struct sbrec_port_binding *row, const struct sbrec_chassis *chassis)$/;"	f
sbrec_port_binding_set_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_datapath(const struct sbrec_port_binding *row, const struct sbrec_datapath_binding *datapath)$/;"	f
sbrec_port_binding_set_logical_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_logical_port(const struct sbrec_port_binding *row, const char *logical_port)$/;"	f
sbrec_port_binding_set_mac	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_mac(const struct sbrec_port_binding *row, const char **mac, size_t n_mac)$/;"	f
sbrec_port_binding_set_options	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_options(const struct sbrec_port_binding *row, const struct smap *options)$/;"	f
sbrec_port_binding_set_parent_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_parent_port(const struct sbrec_port_binding *row, const char *parent_port)$/;"	f
sbrec_port_binding_set_tag	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_tag(const struct sbrec_port_binding *row, const int64_t *tag, size_t n_tag)$/;"	f
sbrec_port_binding_set_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_tunnel_key(const struct sbrec_port_binding *row, int64_t tunnel_key)$/;"	f
sbrec_port_binding_set_type	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_set_type(const struct sbrec_port_binding *row, const char *type)$/;"	f
sbrec_port_binding_unparse_chassis	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_chassis(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_port_binding_unparse_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_datapath(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_port_binding_unparse_logical_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_logical_port(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_port_binding_unparse_mac	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_mac(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_port_binding_unparse_options	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_options(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_port_binding_unparse_parent_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_parent_port(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_port_binding_unparse_tag	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_tag(struct ovsdb_idl_row *row_)$/;"	f	file:
sbrec_port_binding_unparse_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_tunnel_key(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_port_binding_unparse_type	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_unparse_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
sbrec_port_binding_verify_chassis	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_chassis(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_datapath	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_datapath(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_logical_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_logical_port(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_mac	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_mac(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_options	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_options(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_parent_port	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_parent_port(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_tag	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_tag(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_tunnel_key	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_tunnel_key(const struct sbrec_port_binding *row)$/;"	f
sbrec_port_binding_verify_type	ovn/lib/ovn-sb-idl.c	/^sbrec_port_binding_verify_type(const struct sbrec_port_binding *row)$/;"	f
sbrec_table_chassis	ovn/lib/ovn-sb-idl.h	448;"	d
sbrec_table_classes	ovn/lib/ovn-sb-idl.c	/^struct ovsdb_idl_table_class sbrec_table_classes[SBREC_N_TABLES] = {$/;"	v	typeref:struct:ovsdb_idl_table_class
sbrec_table_datapath_binding	ovn/lib/ovn-sb-idl.h	445;"	d
sbrec_table_encap	ovn/lib/ovn-sb-idl.h	449;"	d
sbrec_table_logical_flow	ovn/lib/ovn-sb-idl.h	446;"	d
sbrec_table_multicast_group	ovn/lib/ovn-sb-idl.h	447;"	d
sbrec_table_port_binding	ovn/lib/ovn-sb-idl.h	450;"	d
scan_be16	lib/odp-util.c	/^scan_be16(const char *s, ovs_be16 *key, ovs_be16 *mask)$/;"	f	file:
scan_be16_bf	lib/odp-util.c	/^scan_be16_bf(const char *s, ovs_be16 *key, ovs_be16 *mask, uint8_t bits,$/;"	f	file:
scan_be32_bf	lib/odp-util.c	/^scan_be32_bf(const char *s, ovs_be32 *key, ovs_be32 *mask, uint8_t bits,$/;"	f	file:
scan_be64	lib/odp-util.c	/^scan_be64(const char *s, ovs_be64 *key, ovs_be64 *mask)$/;"	f	file:
scan_cfi	lib/odp-util.c	/^scan_cfi(const char *s, ovs_be16 *key, ovs_be16 *mask)$/;"	f	file:
scan_chars	lib/util.c	/^scan_chars(const char *s, const struct scan_spec *spec, va_list *args)$/;"	f	file:
scan_ct_state	lib/odp-util.c	/^scan_ct_state(const char *s, uint32_t *key, uint32_t *mask)$/;"	f	file:
scan_eth	lib/odp-util.c	/^scan_eth(const char *s, struct eth_addr *key, struct eth_addr *mask)$/;"	f	file:
scan_float	lib/util.c	/^scan_float(const char *s, const struct scan_spec *spec, va_list *args)$/;"	f	file:
scan_frag	lib/odp-util.c	/^scan_frag(const char *s, uint8_t *key, uint8_t *mask)$/;"	f	file:
scan_geneve	lib/odp-util.c	/^scan_geneve(const char *s, struct geneve_scan *key, struct geneve_scan *mask)$/;"	f	file:
scan_int	lib/util.c	/^scan_int(const char *s, const struct scan_spec *spec, int base, va_list *args)$/;"	f	file:
scan_ipv4	lib/odp-util.c	/^scan_ipv4(const char *s, ovs_be32 *key, ovs_be32 *mask)$/;"	f	file:
scan_ipv4_route	lib/ovs-router.c	/^scan_ipv4_route(const char *s, ovs_be32 *addr, unsigned int *plen)$/;"	f	file:
scan_ipv6	lib/odp-util.c	/^scan_ipv6(const char *s, ovs_be32 (*key)[4], ovs_be32 (*mask)[4])$/;"	f	file:
scan_ipv6_label	lib/odp-util.c	/^scan_ipv6_label(const char *s, ovs_be32 *key, ovs_be32 *mask)$/;"	f	file:
scan_ipv6_route	lib/ovs-router.c	/^scan_ipv6_route(const char *s, struct in6_addr *addr, unsigned int *plen)$/;"	f	file:
scan_mpls_bos	lib/odp-util.c	/^scan_mpls_bos(const char *s, ovs_be32 *key, ovs_be32 *mask)$/;"	f	file:
scan_mpls_label	lib/odp-util.c	/^scan_mpls_label(const char *s, ovs_be32 *key, ovs_be32 *mask)$/;"	f	file:
scan_mpls_tc	lib/odp-util.c	/^scan_mpls_tc(const char *s, ovs_be32 *key, ovs_be32 *mask)$/;"	f	file:
scan_mpls_ttl	lib/odp-util.c	/^scan_mpls_ttl(const char *s, ovs_be32 *key, ovs_be32 *mask)$/;"	f	file:
scan_output_string	lib/util.c	/^scan_output_string(const struct scan_spec *spec,$/;"	f	file:
scan_pcp	lib/odp-util.c	/^scan_pcp(const char *s, ovs_be16 *key, ovs_be16 *mask)$/;"	f	file:
scan_port	lib/odp-util.c	/^scan_port(const char *s, uint32_t *key, uint32_t *mask,$/;"	f	file:
scan_set	lib/util.c	/^scan_set(const char *s, const struct scan_spec *spec, const char **pp,$/;"	f	file:
scan_spec	lib/util.c	/^struct scan_spec {$/;"	s	file:
scan_string	lib/util.c	/^scan_string(const char *s, const struct scan_spec *spec, va_list *args)$/;"	f	file:
scan_tcp_flags	lib/odp-util.c	/^scan_tcp_flags(const char *s, ovs_be16 *key, ovs_be16 *mask)$/;"	f	file:
scan_tun_flags	lib/odp-util.c	/^scan_tun_flags(const char *s, uint16_t *key, uint16_t *mask)$/;"	f	file:
scan_u128	lib/odp-util.c	/^scan_u128(const char *s_, ovs_u128 *value, ovs_u128 *mask)$/;"	f	file:
scan_u16	lib/odp-util.c	/^scan_u16(const char *s, uint16_t *key, uint16_t *mask)$/;"	f	file:
scan_u32	lib/odp-util.c	/^scan_u32(const char *s, uint32_t *key, uint32_t *mask)$/;"	f	file:
scan_u8	lib/odp-util.c	/^scan_u8(const char *s, uint8_t *key, uint8_t *mask)$/;"	f	file:
scan_vid	lib/odp-util.c	/^scan_vid(const char *s, ovs_be16 *key, ovs_be16 *mask)$/;"	f	file:
scan_vxlan_gbp	lib/odp-util.c	/^scan_vxlan_gbp(const char *s, uint32_t *key, uint32_t *mask)$/;"	f	file:
schedule_clean_percpu	datapath/linux/compat/stt.c	/^static void schedule_clean_percpu(void)$/;"	f	file:
schedule_clean_percpu	datapath/linux/stt.c	/^static void schedule_clean_percpu(void)$/;"	f	file:
schedule_packet_in	ofproto/connmgr.c	/^schedule_packet_in(struct ofconn *ofconn, struct ofproto_packet_in pin,$/;"	f	file:
schedulers	ofproto/connmgr.c	/^    struct pinsched *schedulers[N_SCHEDULERS];$/;"	m	struct:ofconn	typeref:struct:ofconn::pinsched	file:
schema	ovsdb/ovsdb-doc	/^import ovs.db.schema$/;"	i
schema	ovsdb/ovsdb-dot	/^import ovs.db.schema$/;"	i
schema	ovsdb/ovsdb-idlc	/^import ovs.db.schema$/;"	i
schema	ovsdb/ovsdb.h	/^    struct ovsdb_schema *schema;$/;"	m	struct:ovsdb	typeref:struct:ovsdb::ovsdb_schema
schema	ovsdb/table.h	/^    struct ovsdb_table_schema *schema;$/;"	m	struct:ovsdb_table	typeref:struct:ovsdb_table::ovsdb_table_schema
schema	python/ovs/db/idl.py	/^import ovs.db.schema$/;"	i
schema	tests/test-ovsdb.py	/^import ovs.db.schema$/;"	i
schemaToDot	ovsdb/ovsdb-dot	/^def schemaToDot(schemaFile, arrows):$/;"	f
schema_columns	ovsdb/ovsdb-doc	/^    schema_columns = set(table.columns.keys())$/;"	v
schema_tables	ovsdb/ovsdb-doc	/^    schema_tables = set(schema.tables.keys())$/;"	v
score_partial_match	lib/db-ctl-base.c	/^score_partial_match(const char *name, const char *s)$/;"	f	file:
scr1	datapath-windows/ovsext/resource.h	1373;"	d
scr2	datapath-windows/ovsext/resource.h	1374;"	d
scr3	datapath-windows/ovsext/resource.h	1375;"	d
scr4	datapath-windows/ovsext/resource.h	1376;"	d
scr5	datapath-windows/ovsext/resource.h	1377;"	d
scr6	datapath-windows/ovsext/resource.h	1378;"	d
scr7	datapath-windows/ovsext/resource.h	1379;"	d
scr8	datapath-windows/ovsext/resource.h	1380;"	d
scripts_DATA	Makefile	/^scripts_DATA = utilities\/ovs-lib$/;"	m
scripts_SCRIPTS	Makefile	/^scripts_SCRIPTS = utilities\/ovs-check-dead-ifs utilities\/ovs-ctl \\$/;"	m
scriptsdir	Makefile	/^scriptsdir = $(pkgdatadir)\/scripts$/;"	m
scs_connecting	lib/stream.c	/^scs_connecting(struct stream *stream)$/;"	f	file:
sctp	lib/odp-util.c	/^    struct ovs_key_sctp sctp;$/;"	m	union:ovs_key_tp	typeref:struct:ovs_key_tp::ovs_key_sctp	file:
sctp_compute_cksum	datapath/linux/compat/include/net/sctp/checksum.h	/^static inline __le32 sctp_compute_cksum(const struct sk_buff *skb,$/;"	f
sctp_csum	lib/packets.h	/^    ovs_16aligned_be32 sctp_csum;$/;"	m	struct:sctp_header
sctp_dst	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 sctp_dst;$/;"	m	struct:ovs_key_sctp
sctp_dst	include/odp-netlink.h	/^	ovs_be16 sctp_dst;$/;"	m	struct:ovs_key_sctp
sctp_dst	lib/packets.h	/^    ovs_be16 sctp_dst;$/;"	m	struct:sctp_header
sctp_hdr	datapath/linux/compat/include/linux/sctp.h	/^static inline struct sctphdr *sctp_hdr(const struct sk_buff *skb)$/;"	f
sctp_header	lib/packets.h	/^struct sctp_header {$/;"	s
sctp_src	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 sctp_src;$/;"	m	struct:ovs_key_sctp
sctp_src	include/odp-netlink.h	/^	ovs_be16 sctp_src;$/;"	m	struct:ovs_key_sctp
sctp_src	lib/packets.h	/^    ovs_be16 sctp_src;$/;"	m	struct:sctp_header
sctp_vtag	lib/packets.h	/^    ovs_16aligned_be32 sctp_vtag;$/;"	m	struct:sctp_header
sctphdr_ok	datapath/flow.c	/^static bool sctphdr_ok(struct sk_buff *skb)$/;"	f	file:
sctphdr_ok	datapath/linux/flow.c	/^static bool sctphdr_ok(struct sk_buff *skb)$/;"	f	file:
search_cmap	tests/test-cmap.c	/^search_cmap(void *aux_)$/;"	f	file:
search_cmap_batched	tests/test-cmap.c	/^search_cmap_batched(void *aux_)$/;"	f	file:
search_hmap	tests/test-cmap.c	/^search_hmap(void *aux_)$/;"	f	file:
search_name_array	lib/vlog.c	/^search_name_array(const char *target, const char *const *names, size_t n_names)$/;"	f	file:
search_path	build-aux/dist-docs	/^search_path () {$/;"	f
search_path	utilities/ovs-docker	/^search_path () {$/;"	f
search_subtable	lib/classifier.c	/^search_subtable(const struct cls_subtable *subtable,$/;"	f	file:
sec_in_state	ofproto/ofproto.h	/^    unsigned int sec_in_state;$/;"	m	struct:ofproto_port_stp_status
sec_since_connect	ovsdb/jsonrpc-server.h	/^    unsigned int sec_since_connect;$/;"	m	struct:ovsdb_jsonrpc_remote_status
sec_since_disconnect	ovsdb/jsonrpc-server.h	/^    unsigned int sec_since_disconnect;$/;"	m	struct:ovsdb_jsonrpc_remote_status
secret	lib/mac-learning.h	/^    uint32_t secret;            \/* Secret for randomizing hash table. *\/$/;"	m	struct:mac_learning
secret	lib/mcast-snooping.h	/^    uint32_t secret;$/;"	m	struct:mcast_snooping
secs	datapath/actions.c	/^  u16 secs, flags;$/;"	m	struct:dhcphdr	file:
secs	datapath/linux/actions.c	/^  u16 secs, flags;$/;"	m	struct:dhcphdr	file:
secs	lib/dhcp.h	/^    ovs_be16 secs;              \/* Since client started address acquisition. *\/$/;"	m	struct:dhcp_header
segment_skb	datapath/linux/compat/stt.c	/^static int segment_skb(struct sk_buff **headp, bool csum_partial,$/;"	f	file:
segment_skb	datapath/linux/stt.c	/^static int segment_skb(struct sk_buff **headp, bool csum_partial,$/;"	f	file:
select	ovsdb/monitor.c	/^    enum ovsdb_monitor_selection select;$/;"	m	struct:ovsdb_monitor_column	typeref:enum:ovsdb_monitor_column::ovsdb_monitor_selection	file:
select	ovsdb/monitor.c	/^    enum ovsdb_monitor_selection select;$/;"	m	struct:ovsdb_monitor_table	typeref:enum:ovsdb_monitor_table::ovsdb_monitor_selection	file:
select	python/ovs/poller.py	/^import select$/;"	i
select	python/ovs/socket_util.py	/^import select$/;"	i
select	python/ovstest/util.py	/^import select$/;"	i
select	utilities/bugtool/ovs-bugtool	/^from select import select$/;"	i
select	utilities/ovs-test	/^import select$/;"	i
select_all	lib/vswitch-idl.h	/^	bool select_all;$/;"	m	struct:ovsrec_mirror
select_dst_port	lib/vswitch-idl.h	/^	struct ovsrec_port **select_dst_port;$/;"	m	struct:ovsrec_mirror	typeref:struct:ovsrec_mirror::ovsrec_port
select_src_port	lib/vswitch-idl.h	/^	struct ovsrec_port **select_src_port;$/;"	m	struct:ovsrec_mirror	typeref:struct:ovsrec_mirror::ovsrec_port
select_vlan	lib/vswitch-idl.h	/^	int64_t *select_vlan;$/;"	m	struct:ovsrec_mirror
selection_method	include/openflow/netronome-ext.h	/^    char selection_method[NTR_MAX_SELECTION_METHOD_LEN];$/;"	m	struct:ntr_group_prop_selection_method
selection_method	lib/ofp-util.h	/^    char selection_method[NTR_MAX_SELECTION_METHOD_LEN];$/;"	m	struct:ofputil_group_props
selection_method_param	include/openflow/netronome-ext.h	/^    ovs_be64 selection_method_param;  \/* Non-Field parameter for$/;"	m	struct:ntr_group_prop_selection_method
selection_method_param	lib/ofp-util.h	/^    uint64_t selection_method_param;$/;"	m	struct:ofputil_group_props
semantic_rl	lib/ovsdb-idl.c	/^static struct vlog_rate_limit semantic_rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
send	datapath/vport.h	/^	int (*send)(struct vport *, struct sk_buff *);$/;"	m	struct:vport_ops
send	lib/lldp/lldpd-structs.h	/^    int (*send)(struct lldpd *,$/;"	m	struct:lldpd_ops
send	lib/lldp/lldpd.h	/^    int(*send)(PROTO_SEND_SIG);    \/* How to send a frame *\/$/;"	m	struct:protocol
send	lib/netdev-provider.h	/^    int (*send)(struct netdev *netdev, int qid, struct dp_packet **buffers,$/;"	m	struct:netdev_class
send	lib/stream-provider.h	/^    ssize_t (*send)(struct stream *stream, const void *buffer, size_t n);$/;"	m	struct:stream_class
send	lib/vconn-provider.h	/^    int (*send)(struct vconn *vconn, struct ofpbuf *msg);$/;"	m	struct:vconn_class
send	python/ovs/jsonrpc.py	/^    def send(self, msg):$/;"	m	class:Connection
send	python/ovs/jsonrpc.py	/^    def send(self, msg):$/;"	m	class:Session
send	python/ovs/stream.py	/^    def send(self, buf):$/;"	m	class:Stream
send	utilities/ovs-vlan-test	/^    def send(self, size):$/;"	m	class:VlanClient
send	utilities/ovs-vlan-test	/^    def send(self, test_id, data):$/;"	m	class:VlanServer
sendCompleteFlags	datapath-windows/ovsext/PacketIO.h	/^    ULONG sendCompleteFlags;$/;"	m	struct:OvsCompletionList
sendData	python/ovstest/udp.py	/^    def sendData(self):$/;"	m	class:UdpSender
sendFlags	datapath-windows/ovsext/Actions.c	/^    ULONG sendFlags;$/;"	m	struct:OvsForwardingContext	file:
sendFn	lib/sflow_api.h	/^    sendFn_t sendFn;$/;"	m	struct:_SFLAgent
sendFn_t	lib/sflow_api.h	/^typedef void (*sendFn_t)(void *magic,                 \/* optional override fn to send packet *\/$/;"	t
sendSample	lib/sflow_receiver.c	/^static void sendSample(SFLReceiver *receiver)$/;"	f	file:
send_block	python/ovs/jsonrpc.py	/^    def send_block(self, msg):$/;"	m	class:Connection
send_bogus_packet_ins	ofproto/fail-open.c	/^send_bogus_packet_ins(struct fail_open *fo)$/;"	f	file:
send_bpdu	lib/rstp-common.h	/^    void (*send_bpdu)(struct dp_packet *bpdu, void *port_aux, void *rstp_aux);$/;"	m	struct:rstp
send_bpdu	lib/stp.c	/^    void (*send_bpdu)(struct dp_packet *bpdu, int port_no, void *aux);$/;"	m	struct:stp	file:
send_bpdu	tests/test-stp.c	/^send_bpdu(struct dp_packet *pkt, int port_no, void *b_)$/;"	f	file:
send_bpdu_cb	ofproto/ofproto-dpif.c	/^send_bpdu_cb(struct dp_packet *pkt, int port_num, void *ofproto_)$/;"	f	file:
send_features_request	lib/learning-switch.c	/^send_features_request(struct lswitch *sw)$/;"	f	file:
send_learning_packets	ofproto/bond.c	/^    bool send_learning_packets;$/;"	m	struct:bond	file:
send_len	ofproto/connmgr.h	/^    int send_len;               \/* Length that the action requested sending. *\/$/;"	m	struct:ofproto_packet_in
send_openflow_buffer	utilities/ovs-ofctl.c	/^send_openflow_buffer(struct vconn *vconn, struct ofpbuf *buffer)$/;"	f	file:
send_packet	utilities/ovs-vlan-test	/^def send_packet(key, length, dest_ip, dest_port):$/;"	f
send_pdu_cb	ofproto/ofproto-dpif.c	/^send_pdu_cb(void *port_, const void *pdu, size_t pdu_size)$/;"	f	file:
send_soon	ofproto/ofproto-dpif-monitor.c	/^static struct guarded_list send_soon = GUARDED_OVS_LIST_INITIALIZER(&send_soon);$/;"	v	typeref:struct:guarded_list	file:
send_soon_entry	ofproto/ofproto-dpif-monitor.c	/^struct send_soon_entry {$/;"	s	file:
send_thread	utilities/ovs-vlan-test	/^        def send_thread():$/;"	f	function:VlanServer.send
send_wait	lib/netdev-provider.h	/^    void (*send_wait)(struct netdev *netdev, int qid);$/;"	m	struct:netdev_class
send_wait	python/ovs/stream.py	/^    def send_wait(self, poller):$/;"	m	class:Stream
seq	datapath-windows/ovsext/NetProto.h	/^   UINT16       seq;$/;"	m	struct:ICMPEcho
seq	datapath-windows/ovsext/NetProto.h	/^   UINT32    seq;$/;"	m	struct:TCPHdr
seq	datapath/linux/compat/include/linux/u64_stats_sync.h	/^	seqcount_t	seq;$/;"	m	struct:u64_stats_sync
seq	datapath/linux/compat/include/net/ip_tunnels.h	/^	__be32 seq;$/;"	m	struct:tnl_ptk_info
seq	lib/cfm.c	/^    uint32_t seq;          \/* The sequence number of our last CCM. *\/$/;"	m	struct:cfm	file:
seq	lib/cfm.c	/^    uint32_t seq;        \/* Most recently received sequence number. *\/$/;"	m	struct:remote_mp	file:
seq	lib/netdev-dummy.c	/^    struct seq *seq;            \/* Reports newly queued packets. *\/$/;"	m	struct:netdev_rxq_dummy	typeref:struct:netdev_rxq_dummy::seq	file:
seq	lib/ovs-thread.h	/^    struct seq *seq;$/;"	m	struct:ovs_barrier	typeref:struct:ovs_barrier::seq
seq	lib/packets.h	/^            ovs_be16 seq;$/;"	m	struct:icmp_header::__anon147::__anon148
seq	lib/seq.c	/^struct seq {$/;"	s	file:
seq	lib/sflow.h	/^	u_int32_t *seq;$/;"	m	union:_SFLExtended_as_path_segment::__anon155
seq	tests/system-kmod-testsuite	/^seq () {$/;"	f
seq	tests/system-userspace-testsuite	/^seq () {$/;"	f
seq	tests/testsuite	/^seq () {$/;"	f
seq_init	lib/seq.c	/^seq_init(void)$/;"	f	file:
seq_mutex	lib/seq.c	/^static struct ovs_mutex seq_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
seq_mutex	lib/seq.c	/^static struct seq_thread *seq_thread_get(void) OVS_REQUIRES(seq_mutex);$/;"	v
seq_mutex	lib/seq.c	/^static uint64_t seq_next OVS_GUARDED_BY(seq_mutex) = 1;$/;"	v	file:
seq_mutex	lib/seq.c	/^static void seq_thread_exit(void *thread_) OVS_EXCLUDED(seq_mutex);$/;"	v
seq_mutex	lib/seq.c	/^static void seq_thread_woke(struct seq_thread *) OVS_REQUIRES(seq_mutex);$/;"	v
seq_mutex	lib/seq.c	/^static void seq_waiter_destroy(struct seq_waiter *) OVS_REQUIRES(seq_mutex);$/;"	v
seq_mutex	lib/seq.c	/^static void seq_wake_waiters(struct seq *) OVS_REQUIRES(seq_mutex);$/;"	v
seq_no	lib/pcap-file.c	/^    uint32_t seq_no;$/;"	m	struct:tcp_stream	file:
seq_number	ofproto/ofproto-dpif-ipfix.c	/^    uint32_t seq_number;$/;"	m	struct:dpif_ipfix_exporter	file:
seq_thread	lib/seq.c	/^struct seq_thread {$/;"	s	file:
seq_thread_key	lib/seq.c	/^static pthread_key_t seq_thread_key;$/;"	v	file:
seq_wait	lib/seq.h	129;"	d
seq_waiter	lib/seq.c	/^struct seq_waiter {$/;"	s	file:
seqno	lib/jsonrpc.c	/^    unsigned int seqno;$/;"	m	struct:jsonrpc_session	file:
seqno	lib/ovs-rcu.c	/^    uint64_t seqno;$/;"	m	struct:ovsrcu_perthread	file:
seqno	lib/rconn.c	/^    unsigned int seqno;$/;"	m	struct:rconn	file:
seqno	lib/reconnect.c	/^    unsigned int seqno;$/;"	m	struct:reconnect	file:
seqno	lib/reconnect.h	/^    unsigned int seqno;              \/* # of connections + # of disconnections. *\/$/;"	m	struct:reconnect_stats
seqno	ovn/controller/ofctrl.c	/^static unsigned int seqno;$/;"	v	file:
sequence	vtep/vtep-idl.h	/^	int64_t sequence;$/;"	m	struct:vteprec_acl_entry
sequence_number	lib/sflow.h	/^    u_int32_t sequence_number;       \/* Incremented with each sample datagram$/;"	m	struct:_SFLSample_datagram_hdr
sequence_number	lib/sflow.h	/^    u_int32_t sequence_number;      \/* Incremented with each flow sample$/;"	m	struct:_SFLFlow_sample
sequence_number	lib/sflow.h	/^    u_int32_t sequence_number;      \/* Incremented with each flow sample$/;"	m	struct:_SFLFlow_sample_expanded
sequence_number	lib/sflow.h	/^    u_int32_t sequence_number;    \/* Incremented with each counters sample$/;"	m	struct:_SFLCounters_sample
sequence_number	lib/sflow.h	/^    u_int32_t sequence_number;    \/* Incremented with each counters sample$/;"	m	struct:_SFLCounters_sample_expanded
serial	ovsdb/transaction.c	/^    unsigned int serial;        \/* Serial number of in-progress commit. *\/$/;"	m	struct:ovsdb_txn_row	file:
serial	ovsdb/transaction.c	/^    unsigned int serial;        \/* Serial number of in-progress iteration. *\/$/;"	m	struct:ovsdb_txn_table	file:
serial	ovsdb/transaction.c	/^static unsigned int serial;$/;"	v	file:
serial_desc	ofproto/ofproto-provider.h	/^    char *serial_desc;          \/* Serial number (NULL for default). *\/$/;"	m	struct:ofproto
serial_num	include/openflow/openflow-common.h	/^    char serial_num[SERIAL_NUM_LEN];   \/* Serial number. *\/$/;"	m	struct:ofp_desc_stats
serialize	python/ovs/json.py	/^    def serialize(self, obj):$/;"	m	class:_Serializer
server	debian/ovs-monitor-ipsec	/^import ovs.unixctl.server$/;"	i
server	ovsdb/jsonrpc-server.c	/^    struct ovsdb_jsonrpc_server *server;$/;"	m	struct:ovsdb_jsonrpc_remote	typeref:struct:ovsdb_jsonrpc_remote::ovsdb_jsonrpc_server	file:
server	ovsdb/server.h	/^    struct ovsdb_server *server; \/* The containing server. *\/$/;"	m	struct:ovsdb_lock	typeref:struct:ovsdb_lock::ovsdb_server
server	ovsdb/server.h	/^    struct ovsdb_server *server;$/;"	m	struct:ovsdb_session	typeref:struct:ovsdb_session::ovsdb_server
server	python/ovstest/rpcserver.py	/^from twisted.web import server$/;"	i
server	tests/test-unixctl.py	/^import ovs.unixctl.server$/;"	i
server	vtep/ovs-vtep	/^import ovs.unixctl.server$/;"	i
server	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.unixctl.server$/;"	i
server_config	ovsdb/ovsdb-server.c	/^struct server_config {$/;"	s	file:
server_endpoint	python/ovstest/args.py	/^def server_endpoint(string):$/;"	f
server_up	utilities/ovs-vlan-test	/^    def server_up(self):$/;"	m	class:VlanClient
service	lib/daemon-windows.c	/^static SC_HANDLE manager, service;$/;"	v	file:
service	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    service = {}$/;"	v	class:VSwitchService
service_complete	lib/daemon-windows.c	/^service_complete(void)$/;"	f	file:
service_create	lib/daemon-windows.c	/^static bool service_create;          \/* Was --service specified? *\/$/;"	v	file:
service_start	lib/daemon-unix.c	/^service_start(int *argc OVS_UNUSED, char **argv[] OVS_UNUSED)$/;"	f
service_start	lib/daemon-windows.c	/^service_start(int *argcp, char **argvp[])$/;"	f
service_started	lib/daemon-windows.c	/^static bool service_started;         \/* Have we dispatched service to start? *\/$/;"	v	file:
service_status	lib/daemon-windows.c	/^static SERVICE_STATUS service_status;$/;"	v	file:
service_stop	lib/daemon-unix.c	/^service_stop(void)$/;"	f
service_stop	lib/daemon-windows.c	/^service_stop()$/;"	f
services	ofproto/connmgr.c	/^    struct hmap services;       \/* Contains "struct ofservice"s. *\/$/;"	m	struct:connmgr	typeref:struct:connmgr::hmap	file:
session	lib/ovsdb-idl.c	/^    struct jsonrpc_session *session;$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::jsonrpc_session	file:
session	ovsdb/execution.c	/^    const struct ovsdb_session *session;$/;"	m	struct:ovsdb_execution	typeref:struct:ovsdb_execution::ovsdb_session	file:
session	ovsdb/jsonrpc-server.c	/^    struct ovsdb_jsonrpc_session *session;$/;"	m	struct:ovsdb_jsonrpc_monitor	typeref:struct:ovsdb_jsonrpc_monitor::ovsdb_jsonrpc_session	file:
session	ovsdb/server.h	/^    struct ovsdb_session *session;$/;"	m	struct:ovsdb_lock_waiter	typeref:struct:ovsdb_lock_waiter::ovsdb_session
session	ovsdb/trigger.h	/^    struct ovsdb_session *session; \/* Session that owns this trigger. *\/$/;"	m	struct:ovsdb_trigger	typeref:struct:ovsdb_trigger::ovsdb_session
session	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^session = None$/;"	v
session_node	ovsdb/server.h	/^    struct hmap_node session_node; \/* In ->session->locks's hmap. *\/$/;"	m	struct:ovsdb_lock_waiter	typeref:struct:ovsdb_lock_waiter::hmap_node
session_nr	lib/stream-ssl.c	/^    unsigned int session_nr;$/;"	m	struct:ssl_stream	file:
session_type	lib/stream-ssl.c	/^enum session_type {$/;"	g	file:
sessions	ovsdb/jsonrpc-server.c	/^    struct ovs_list sessions;   \/* List of "struct ovsdb_jsonrpc_session"s. *\/$/;"	m	struct:ovsdb_jsonrpc_remote	typeref:struct:ovsdb_jsonrpc_remote::ovs_list	file:
set	include/openflow/nicira-ext.h	/^    uint8_t set;                \/* Nonzero to enable, zero to disable. *\/$/;"	m	struct:nx_flow_mod_table_id
set	lib/sflow.h	/^	u_int32_t *set;$/;"	m	union:_SFLExtended_as_path_segment::__anon155
set	ovsdb/row.c	/^    struct ovsdb_row_set *set;$/;"	m	struct:ovsdb_row_set_sort_cbdata	typeref:struct:ovsdb_row_set_sort_cbdata::ovsdb_row_set	file:
setControllerCfg	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def setControllerCfg(controller):$/;"	f
set_aa	ofproto/ofproto-dpif.c	/^set_aa(struct ofproto *ofproto OVS_UNUSED,$/;"	f	file:
set_aa	ofproto/ofproto-provider.h	/^    int (*set_aa)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_action_to_attr	datapath/flow_netlink.c	/^static int set_action_to_attr(const struct nlattr *a, struct sk_buff *skb)$/;"	f	file:
set_action_to_attr	datapath/linux/flow_netlink.c	/^static int set_action_to_attr(const struct nlattr *a, struct sk_buff *skb)$/;"	f	file:
set_advertisements	lib/netdev-provider.h	/^    int (*set_advertisements)(struct netdev *netdev,$/;"	m	struct:netdev_class
set_all_rate_limits	lib/vlog.c	/^set_all_rate_limits(bool enable)$/;"	f	file:
set_allowed_ofp_versions	lib/ofp-version-opt.c	/^set_allowed_ofp_versions(const char *string)$/;"	f
set_and_check_poorly_specified_ofports	tests/testsuite	/^set_and_check_poorly_specified_ofports () {$/;"	f
set_and_check_specific_ofports	tests/testsuite	/^set_and_check_specific_ofports () {$/;"	f
set_arp	lib/odp-execute.c	/^set_arp(struct dp_packet *packet, const struct ovs_key_arp *key,$/;"	f	file:
set_backoff	python/ovs/reconnect.py	/^    def set_backoff(self, min_backoff, max_backoff):$/;"	m	class:Reconnect
set_base_from	build-aux/depcomp	/^set_base_from ()$/;"	f
set_be16_bf	lib/odp-util.c	/^set_be16_bf(ovs_be16 *bf, uint8_t bits, uint8_t offset, uint16_t value)$/;"	f	file:
set_be32_bf	lib/odp-util.c	/^set_be32_bf(ovs_be32 *bf, uint8_t bits, uint8_t offset, uint32_t value)$/;"	f	file:
set_bfd	ofproto/ofproto-dpif.c	/^set_bfd(struct ofport *ofport_, const struct smap *cfg)$/;"	f	file:
set_bfd	ofproto/ofproto-provider.h	/^    int (*set_bfd)(struct ofport *ofport, const struct smap *cfg);$/;"	m	struct:ofproto_class
set_bit	tests/test-hash.c	/^set_bit(uint32_t array[3], int bit)$/;"	f	file:
set_bit128	tests/test-hash.c	/^set_bit128(ovs_u128 *values, int bit, int n_bits)$/;"	f	file:
set_br_external_ids	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def set_br_external_ids(pif):$/;"	f
set_cfm	ofproto/ofproto-dpif.c	/^set_cfm(struct ofport *ofport_, const struct cfm_settings *s)$/;"	f	file:
set_cfm	ofproto/ofproto-provider.h	/^    int (*set_cfm)(struct ofport *ofport, const struct cfm_settings *s);$/;"	m	struct:ofproto_class
set_column	lib/db-ctl-base.c	/^set_column(const struct ctl_table_class *table,$/;"	f	file:
set_config	lib/netdev-provider.h	/^    int (*set_config)(struct netdev *netdev, const struct smap *args);$/;"	m	struct:netdev_class
set_config_failure_actions	lib/daemon-windows.c	/^set_config_failure_actions()$/;"	f	file:
set_defaults	ovn/utilities/ovn-ctl	/^set_defaults () {$/;"	f
set_defaults	utilities/ovs-ctl	/^set_defaults () {$/;"	f
set_defaults	utilities/ovs-ctl.in	/^set_defaults () {$/;"	f
set_destination_level	lib/vlog.c	/^set_destination_level(enum vlog_destination destination,$/;"	f	file:
set_detach	lib/daemon-unix.c	/^set_detach(void)$/;"	f
set_detach	python/ovs/daemon.py	/^def set_detach():$/;"	f
set_dir_from	build-aux/depcomp	/^set_dir_from ()$/;"	f
set_dscp	lib/socket-util.c	/^set_dscp(int fd, int family, uint8_t dscp)$/;"	f
set_dscp	python/ovs/socket_util.py	/^def set_dscp(sock, family, dscp):$/;"	f
set_ecn_ce	datapath/linux/compat/stt.c	/^	bool set_ecn_ce;$/;"	m	struct:first_frag	file:
set_ecn_ce	datapath/linux/stt.c	/^	bool set_ecn_ce;$/;"	m	struct:first_frag	file:
set_eth	lib/match.c	/^set_eth(const struct eth_addr value_src,$/;"	f	file:
set_eth_addr	datapath/actions.c	/^static int set_eth_addr(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_eth_addr	datapath/linux/actions.c	/^static int set_eth_addr(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_eth_masked	lib/match.c	/^set_eth_masked(const struct eth_addr value_src,$/;"	f	file:
set_etheraddr	lib/netdev-bsd.c	/^set_etheraddr(const char *netdev_name OVS_UNUSED, int hwaddr_family OVS_UNUSED,$/;"	f	file:
set_etheraddr	lib/netdev-linux.c	/^set_etheraddr(const char *netdev_name, const struct eth_addr mac)$/;"	f	file:
set_etheraddr	lib/netdev-provider.h	/^    int (*set_etheraddr)(struct netdev *netdev, const struct eth_addr mac);$/;"	m	struct:netdev_class
set_ethertype	lib/packets.c	/^set_ethertype(struct dp_packet *packet, ovs_be16 eth_type)$/;"	f	file:
set_external_id	utilities/ovs-vsctl.c	/^set_external_id(struct smap *old, struct smap *new,$/;"	f	file:
set_external_id	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def set_external_id(row, key, value):$/;"	f
set_field_parse__	lib/ofp-actions.c	/^set_field_parse__(char *arg, struct ofpbuf *ofpacts,$/;"	f	file:
set_field_split_str	lib/ofp-actions.c	/^set_field_split_str(char *arg, char **key, char **value, char **delim)$/;"	f	file:
set_field_to_legacy_openflow	lib/ofp-actions.c	/^set_field_to_legacy_openflow(const struct ofpact_set_field *sf,$/;"	f	file:
set_field_to_nxast	lib/ofp-actions.c	/^set_field_to_nxast(const struct ofpact_set_field *sf, struct ofpbuf *openflow)$/;"	f	file:
set_field_to_set_field	lib/ofp-actions.c	/^set_field_to_set_field(const struct ofpact_set_field *sf,$/;"	f	file:
set_fields	lib/ofp-util.h	/^            struct mf_bitmap set_fields; \/* Fields for "set-field". *\/$/;"	m	struct:ofputil_table_features::ofputil_table_instruction_features::ofputil_table_action_features	typeref:struct:ofputil_table_features::ofputil_table_instruction_features::ofputil_table_action_features::mf_bitmap
set_flags	lib/netdev-bsd.c	/^set_flags(const char *name, int flags)$/;"	f	file:
set_flags	lib/netdev-linux.c	/^set_flags(const char *name, unsigned int flags)$/;"	f	file:
set_flood_vlans	ofproto/ofproto-dpif.c	/^set_flood_vlans(struct ofproto *ofproto_, unsigned long *flood_vlans)$/;"	f	file:
set_flood_vlans	ofproto/ofproto-provider.h	/^    int (*set_flood_vlans)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_frag_handling	ofproto/ofproto-dpif.c	/^set_frag_handling(struct ofproto *ofproto_,$/;"	f	file:
set_frag_handling	ofproto/ofproto-provider.h	/^    bool (*set_frag_handling)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_icmp_identify	datapath/actions.c	/^static int set_icmp_identify(struct sk_buff *skb,$/;"	f	file:
set_icmp_identify	datapath/linux/actions.c	/^static int set_icmp_identify(struct sk_buff *skb,$/;"	f	file:
set_in4	lib/netdev-provider.h	/^    int (*set_in4)(struct netdev *netdev, struct in_addr addr,$/;"	m	struct:netdev_class
set_ip_addr	datapath/actions.c	/^static void set_ip_addr(struct sk_buff *skb, struct iphdr *nh,$/;"	f	file:
set_ip_addr	datapath/linux/actions.c	/^static void set_ip_addr(struct sk_buff *skb, struct iphdr *nh,$/;"	f	file:
set_ip_ttl	datapath/actions.c	/^static void set_ip_ttl(struct sk_buff *skb, struct iphdr *nh, u8 new_ttl,$/;"	f	file:
set_ip_ttl	datapath/linux/actions.c	/^static void set_ip_ttl(struct sk_buff *skb, struct iphdr *nh, u8 new_ttl,$/;"	f	file:
set_ipfix	ofproto/ofproto-dpif.c	/^set_ipfix($/;"	f	file:
set_ipfix	ofproto/ofproto-provider.h	/^    int (*set_ipfix)($/;"	m	struct:ofproto_class
set_ipv4	datapath/actions.c	/^static int set_ipv4(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_ipv4	datapath/linux/actions.c	/^static int set_ipv4(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_ipv6	datapath/actions.c	/^static int set_ipv6(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_ipv6	datapath/linux/actions.c	/^static int set_ipv6(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_ipv6_addr	datapath/actions.c	/^static void set_ipv6_addr(struct sk_buff *skb, u8 l4_proto,$/;"	f	file:
set_ipv6_addr	datapath/linux/actions.c	/^static void set_ipv6_addr(struct sk_buff *skb, u8 l4_proto,$/;"	f	file:
set_ipv6_fl	datapath/actions.c	/^static void set_ipv6_fl(struct ipv6hdr *nh, u32 fl, u32 mask)$/;"	f	file:
set_ipv6_fl	datapath/linux/actions.c	/^static void set_ipv6_fl(struct ipv6hdr *nh, u32 fl, u32 mask)$/;"	f	file:
set_irq_status	lib/netdev-dpdk.c	/^set_irq_status(struct virtio_net *dev)$/;"	f	file:
set_level	python/ovs/vlog.py	/^    def set_level(module, destination, level):$/;"	m	class:Vlog
set_levels_from_string	python/ovs/vlog.py	/^    def set_levels_from_string(s):$/;"	m	class:Vlog
set_lldp	ofproto/ofproto-dpif.c	/^set_lldp(struct ofport *ofport_,$/;"	f	file:
set_lldp	ofproto/ofproto-provider.h	/^    int (*set_lldp)(struct ofport *ofport, const struct smap *cfg);$/;"	m	struct:ofproto_class
set_lock	python/ovs/db/idl.py	/^    def set_lock(self, lock_name):$/;"	m	class:Idl
set_log_destination	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def set_log_destination(dest):$/;"	f
set_mac_table_config	ofproto/ofproto-dpif.c	/^set_mac_table_config(struct ofproto *ofproto_, unsigned int idle_time,$/;"	f	file:
set_mac_table_config	ofproto/ofproto-provider.h	/^    void (*set_mac_table_config)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_max_tries	python/ovs/reconnect.py	/^    def set_max_tries(self, max_tries):$/;"	m	class:Reconnect
set_mcast_snooping	ofproto/ofproto-dpif.c	/^set_mcast_snooping(struct ofproto *ofproto_,$/;"	f	file:
set_mcast_snooping	ofproto/ofproto-provider.h	/^    int (*set_mcast_snooping)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_mcast_snooping_port	ofproto/ofproto-dpif.c	/^set_mcast_snooping_port(struct ofproto *ofproto_, void *aux,$/;"	f	file:
set_mcast_snooping_port	ofproto/ofproto-provider.h	/^    int (*set_mcast_snooping_port)(struct ofproto *ofproto_, void *aux,$/;"	m	struct:ofproto_class
set_miimon_interval	lib/netdev-provider.h	/^    int (*set_miimon_interval)(struct netdev *netdev, long long int interval);$/;"	m	struct:netdev_class
set_monitor	python/ovs/daemon.py	/^def set_monitor():$/;"	f
set_mpls	datapath/actions.c	/^static int set_mpls(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_mpls	datapath/linux/actions.c	/^static int set_mpls(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_mpls_lse	lib/packets.c	/^set_mpls_lse(struct dp_packet *packet, ovs_be32 mpls_lse)$/;"	f
set_mpls_lse_bos	lib/packets.c	/^set_mpls_lse_bos(ovs_be32 *lse, uint8_t bos)$/;"	f
set_mpls_lse_label	lib/packets.c	/^set_mpls_lse_label(ovs_be32 *lse, ovs_be32 label)$/;"	f
set_mpls_lse_tc	lib/packets.c	/^set_mpls_lse_tc(ovs_be32 *lse, uint8_t tc)$/;"	f
set_mpls_lse_ttl	lib/packets.c	/^set_mpls_lse_ttl(ovs_be32 *lse, uint8_t ttl)$/;"	f
set_mpls_lse_values	lib/packets.c	/^set_mpls_lse_values(uint8_t ttl, uint8_t tc, uint8_t bos, ovs_be32 label)$/;"	f
set_mtu	lib/netdev-provider.h	/^    int (*set_mtu)(const struct netdev *netdev, int mtu);$/;"	m	struct:netdev_class
set_multiq	lib/netdev-provider.h	/^    int (*set_multiq)(struct netdev *netdev, unsigned int n_txq,$/;"	m	struct:netdev_class
set_name	python/ovs/reconnect.py	/^    def set_name(self, name):$/;"	m	class:Reconnect
set_netflow	ofproto/ofproto-dpif.c	/^set_netflow(struct ofproto *ofproto_,$/;"	f	file:
set_netflow	ofproto/ofproto-provider.h	/^    int (*set_netflow)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_no_chdir	lib/daemon-unix.c	/^set_no_chdir(void)$/;"	f
set_no_chdir	python/ovs/daemon.py	/^def set_no_chdir():$/;"	f
set_nonblocking	lib/socket-util.c	/^set_nonblocking(int fd)$/;"	f
set_nonblocking	python/ovs/socket_util.py	/^def set_nonblocking(sock):$/;"	f
set_offloads	datapath/linux/compat/stt.c	/^static bool set_offloads(struct sk_buff *skb)$/;"	f	file:
set_offloads	datapath/linux/stt.c	/^static bool set_offloads(struct sk_buff *skb)$/;"	f	file:
set_option	ovn/utilities/ovn-ctl	/^set_option () {$/;"	f
set_option	utilities/ovs-ctl	/^set_option () {$/;"	f
set_option	utilities/ovs-ctl.in	/^set_option () {$/;"	f
set_options	datapath/vport.h	/^	int (*set_options)(struct vport *, struct nlattr *);$/;"	m	struct:vport_ops
set_or_delete	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def set_or_delete(d, key, value):$/;"	f
set_packet_in_format	utilities/ovs-ofctl.c	/^set_packet_in_format(struct vconn *vconn,$/;"	f	file:
set_passive	python/ovs/reconnect.py	/^    def set_passive(self, passive, now):$/;"	m	class:Reconnect
set_patch_config	lib/netdev-vport.c	/^set_patch_config(struct netdev *dev_, const struct smap *args)$/;"	f	file:
set_path	utilities/ovs-dev.py	/^def set_path(build):$/;"	f
set_pattern	python/ovs/vlog.py	/^    def set_pattern(destination, pattern):$/;"	m	class:Vlog
set_pidfile	lib/daemon.c	/^set_pidfile(const char *name)$/;"	f
set_pidfile	python/ovs/daemon.py	/^def set_pidfile(name):$/;"	f
set_pipe_handle	lib/daemon-windows.c	/^set_pipe_handle(const char *pipe_handle)$/;"	f
set_policing	lib/netdev-provider.h	/^    int (*set_policing)(struct netdev *netdev, unsigned int kbits_rate,$/;"	m	struct:netdev_class
set_prefix_fields	tests/test-classifier.c	/^set_prefix_fields(struct classifier *cls)$/;"	f	file:
set_probe_interval	python/ovs/reconnect.py	/^    def set_probe_interval(self, probe_interval):$/;"	m	class:Reconnect
set_program_name	lib/util.h	265;"	d
set_protocol_for_flow_dump	utilities/ovs-ofctl.c	/^set_protocol_for_flow_dump(struct vconn *vconn,$/;"	f	file:
set_pvconns	ofproto/connmgr.c	/^set_pvconns(struct pvconn ***pvconnsp, size_t *n_pvconnsp,$/;"	f	file:
set_qos	lib/netdev-provider.h	/^    int (*set_qos)(struct netdev *netdev,$/;"	m	struct:netdev_class
set_queue	lib/netdev-provider.h	/^    int (*set_queue)(struct netdev *netdev,$/;"	m	struct:netdev_class
set_queues	ofproto/ofproto-dpif.c	/^set_queues(struct ofport *ofport_, const struct ofproto_port_queue *qdscp,$/;"	f	file:
set_queues	ofproto/ofproto-provider.h	/^    int (*set_queues)(struct ofport *ofport,$/;"	m	struct:ofproto_class
set_quiet	python/ovs/reconnect.py	/^    def set_quiet(self, quiet):$/;"	m	class:Reconnect
set_rate_limits	lib/vlog.c	/^set_rate_limits(struct unixctl_conn *conn, int argc,$/;"	f	file:
set_realdev	ofproto/ofproto-dpif.c	/^set_realdev(struct ofport *ofport_, ofp_port_t realdev_ofp_port, int vid)$/;"	f	file:
set_realdev	ofproto/ofproto-provider.h	/^    int (*set_realdev)(struct ofport *ofport,$/;"	m	struct:ofproto_class
set_result	utilities/ovs-vlan-test	/^    def set_result(self, key, value):$/;"	m	class:VlanServer
set_root_prefix	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^def set_root_prefix(prefix):$/;"	f
set_rstp	ofproto/ofproto-dpif.c	/^set_rstp(struct ofproto *ofproto_, const struct ofproto_rstp_settings *s)$/;"	f	file:
set_rstp	ofproto/ofproto-provider.h	/^    void (*set_rstp)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_rstp_port	ofproto/ofproto-dpif.c	/^set_rstp_port(struct ofport *ofport_,$/;"	f	file:
set_rstp_port	ofproto/ofproto-provider.h	/^    void (*set_rstp_port)(struct ofport *ofport,$/;"	m	struct:ofproto_class
set_sctp	datapath/actions.c	/^static int set_sctp(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_sctp	datapath/linux/actions.c	/^static int set_sctp(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_sflow	ofproto/ofproto-dpif.c	/^set_sflow(struct ofproto *ofproto_,$/;"	f	file:
set_sflow	ofproto/ofproto-provider.h	/^    int (*set_sflow)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_stp	ofproto/ofproto-dpif.c	/^set_stp(struct ofproto *ofproto_, const struct ofproto_stp_settings *s)$/;"	f	file:
set_stp	ofproto/ofproto-provider.h	/^    int (*set_stp)(struct ofproto *ofproto,$/;"	m	struct:ofproto_class
set_stp_port	ofproto/ofproto-dpif.c	/^set_stp_port(struct ofport *ofport_,$/;"	f	file:
set_stp_port	ofproto/ofproto-provider.h	/^    int (*set_stp_port)(struct ofport *ofport,$/;"	m	struct:ofproto_class
set_subprogram_name	lib/util.c	/^set_subprogram_name(const char *subprogram_name)$/;"	f
set_switch_config	utilities/ovs-ofctl.c	/^set_switch_config(struct vconn *vconn, const struct ofp_switch_config *config)$/;"	f	file:
set_system_ids	utilities/ovs-ctl	/^set_system_ids () {$/;"	f
set_system_ids	utilities/ovs-ctl.in	/^set_system_ids () {$/;"	f
set_tables_version	ofproto/ofproto-dpif.c	/^set_tables_version(struct ofproto *ofproto_, cls_version_t version)$/;"	f	file:
set_tables_version	ofproto/ofproto-provider.h	/^    void (*set_tables_version)(struct ofproto *ofproto, cls_version_t version);$/;"	m	struct:ofproto_class
set_tcp	datapath/actions.c	/^static int set_tcp(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_tcp	datapath/linux/actions.c	/^static int set_tcp(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_tp_port	datapath/actions.c	/^static void set_tp_port(struct sk_buff *skb, __be16 *port,$/;"	f	file:
set_tp_port	datapath/linux/actions.c	/^static void set_tp_port(struct sk_buff *skb, __be16 *port,$/;"	f	file:
set_tunnel_config	lib/netdev-vport.c	/^set_tunnel_config(struct netdev *dev_, const struct smap *args)$/;"	f	file:
set_udp	datapath/actions.c	/^static int set_udp(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_udp	datapath/linux/actions.c	/^static int set_udp(struct sk_buff *skb, struct sw_flow_key *flow_key,$/;"	f	file:
set_up_flows	utilities/ovs-testcontroller.c	/^static bool set_up_flows = true;$/;"	v	file:
set_vif_external_id	xenserver/etc_xensource_scripts_vif	/^set_vif_external_id()$/;"	f
set_vlan	utilities/ovs-docker	/^set_vlan () {$/;"	f
setsockopt	lib/socket-util.h	107;"	d
setsockopt_tcp_nodelay	lib/socket-util.c	/^setsockopt_tcp_nodelay(int fd)$/;"	f
setup	vtep/ovs-vtep	/^def setup():$/;"	f
setup_ls	vtep/ovs-vtep	/^    def setup_ls(self):$/;"	m	class:Logical_Switch
setup_udp_tunnel_sock	datapath/linux/compat/include/net/udp_tunnel.h	80;"	d
setuptools	python/setup.py	/^import setuptools$/;"	i
sf	lib/dpif-netdev.c	/^    struct netdev_saved_flags *sf;$/;"	m	struct:dp_netdev_port	typeref:struct:dp_netdev_port::netdev_saved_flags	file:
sf_acts	datapath/flow.h	/^	struct sw_flow_actions __rcu *sf_acts;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::__rcu
sflAlloc	lib/sflow_agent.c	/^static void * sflAlloc(SFLAgent *agent, size_t bytes)$/;"	f	file:
sflError	lib/sflow_receiver.c	/^static void sflError(SFLReceiver *receiver, char *msg)$/;"	f	file:
sflFree	lib/sflow_agent.c	/^static void sflFree(SFLAgent *agent, void *obj)$/;"	f	file:
sfl_agent_addPoller	lib/sflow_agent.c	/^SFLPoller *sfl_agent_addPoller(SFLAgent *agent,$/;"	f
sfl_agent_addReceiver	lib/sflow_agent.c	/^SFLReceiver *sfl_agent_addReceiver(SFLAgent *agent)$/;"	f
sfl_agent_addSampler	lib/sflow_agent.c	/^SFLSampler *sfl_agent_addSampler(SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_agent_error	lib/sflow_agent.c	/^void sfl_agent_error(SFLAgent *agent, char *modName, char *msg)$/;"	f
sfl_agent_getNextPoller	lib/sflow_agent.c	/^SFLPoller *sfl_agent_getNextPoller(SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_agent_getNextReceiver	lib/sflow_agent.c	/^SFLReceiver *sfl_agent_getNextReceiver(SFLAgent *agent, u_int32_t receiverIndex)$/;"	f
sfl_agent_getNextSampler	lib/sflow_agent.c	/^SFLSampler *sfl_agent_getNextSampler(SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_agent_getPoller	lib/sflow_agent.c	/^SFLPoller *sfl_agent_getPoller(SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_agent_getPollerByBridgePort	lib/sflow_agent.c	/^SFLPoller *sfl_agent_getPollerByBridgePort(SFLAgent *agent, uint32_t port_no)$/;"	f
sfl_agent_getReceiver	lib/sflow_agent.c	/^SFLReceiver *sfl_agent_getReceiver(SFLAgent *agent, u_int32_t receiverIndex)$/;"	f
sfl_agent_getSampler	lib/sflow_agent.c	/^SFLSampler *sfl_agent_getSampler(SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_agent_getSamplerByIfIndex	lib/sflow_agent.c	/^SFLSampler *sfl_agent_getSamplerByIfIndex(SFLAgent *agent, u_int32_t ifIndex)$/;"	f
sfl_agent_init	lib/sflow_agent.c	/^void sfl_agent_init(SFLAgent *agent,$/;"	f
sfl_agent_jumpTableAdd	lib/sflow_agent.c	/^static void sfl_agent_jumpTableAdd(SFLAgent *agent, SFLSampler *sampler)$/;"	f	file:
sfl_agent_jumpTableRemove	lib/sflow_agent.c	/^static void sfl_agent_jumpTableRemove(SFLAgent *agent, SFLSampler *sampler)$/;"	f	file:
sfl_agent_release	lib/sflow_agent.c	/^void sfl_agent_release(SFLAgent *agent)$/;"	f
sfl_agent_removePoller	lib/sflow_agent.c	/^int sfl_agent_removePoller(SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_agent_removeSampler	lib/sflow_agent.c	/^int sfl_agent_removeSampler(SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_agent_resetReceiver	lib/sflow_agent.c	/^void sfl_agent_resetReceiver(SFLAgent *agent, SFLReceiver *receiver)$/;"	f
sfl_agent_set_agentAddress	lib/sflow_agent.c	/^void sfl_agent_set_agentAddress(SFLAgent *agent, SFLAddress *addr)$/;"	f
sfl_agent_set_agentSubId	lib/sflow_agent.c	/^void sfl_agent_set_agentSubId(SFLAgent *agent, u_int32_t subId)$/;"	f
sfl_agent_sysError	lib/sflow_agent.c	/^void sfl_agent_sysError(SFLAgent *agent, char *modName, char *msg)$/;"	f
sfl_agent_tick	lib/sflow_agent.c	/^void sfl_agent_tick(SFLAgent *agent, time_t now)$/;"	f
sfl_dsi_compare	lib/sflow_agent.c	/^static inline int sfl_dsi_compare(SFLDataSource_instance *pdsi1, SFLDataSource_instance *pdsi2) {$/;"	f	file:
sfl_poller_get_bridgePort	lib/sflow_poller.c	/^u_int32_t sfl_poller_get_bridgePort(SFLPoller *poller) {$/;"	f
sfl_poller_get_sFlowCpInterval	lib/sflow_poller.c	/^u_int32_t sfl_poller_get_sFlowCpInterval(SFLPoller *poller) {$/;"	f
sfl_poller_get_sFlowCpReceiver	lib/sflow_poller.c	/^u_int32_t sfl_poller_get_sFlowCpReceiver(SFLPoller *poller) {$/;"	f
sfl_poller_init	lib/sflow_poller.c	/^void sfl_poller_init(SFLPoller *poller,$/;"	f
sfl_poller_resetCountersSeqNo	lib/sflow_poller.c	/^void sfl_poller_resetCountersSeqNo(SFLPoller *poller) {  poller->countersSampleSeqNo = 0; }$/;"	f
sfl_poller_set_bridgePort	lib/sflow_poller.c	/^void sfl_poller_set_bridgePort(SFLPoller *poller, u_int32_t port_no) {$/;"	f
sfl_poller_set_sFlowCpInterval	lib/sflow_poller.c	/^void sfl_poller_set_sFlowCpInterval(SFLPoller *poller, u_int32_t sFlowCpInterval) {$/;"	f
sfl_poller_set_sFlowCpReceiver	lib/sflow_poller.c	/^void sfl_poller_set_sFlowCpReceiver(SFLPoller *poller, u_int32_t sFlowCpReceiver) {$/;"	f
sfl_poller_tick	lib/sflow_poller.c	/^void sfl_poller_tick(SFLPoller *poller, time_t now)$/;"	f
sfl_poller_writeCountersSample	lib/sflow_poller.c	/^void sfl_poller_writeCountersSample(SFLPoller *poller, SFL_COUNTERS_SAMPLE_TYPE *cs)$/;"	f
sfl_receiver_get_sFlowRcvrAddress	lib/sflow_receiver.c	/^SFLAddress *sfl_receiver_get_sFlowRcvrAddress(SFLReceiver *receiver) {$/;"	f
sfl_receiver_get_sFlowRcvrMaximumDatagramSize	lib/sflow_receiver.c	/^u_int32_t sfl_receiver_get_sFlowRcvrMaximumDatagramSize(SFLReceiver *receiver) {$/;"	f
sfl_receiver_get_sFlowRcvrOwner	lib/sflow_receiver.c	/^char * sfl_receiver_get_sFlowRcvrOwner(SFLReceiver *receiver) {$/;"	f
sfl_receiver_get_sFlowRcvrPort	lib/sflow_receiver.c	/^u_int32_t sfl_receiver_get_sFlowRcvrPort(SFLReceiver *receiver) {$/;"	f
sfl_receiver_get_sFlowRcvrTimeout	lib/sflow_receiver.c	/^time_t sfl_receiver_get_sFlowRcvrTimeout(SFLReceiver *receiver) {$/;"	f
sfl_receiver_init	lib/sflow_receiver.c	/^void sfl_receiver_init(SFLReceiver *receiver, SFLAgent *agent)$/;"	f
sfl_receiver_samplePacketsSent	lib/sflow_receiver.c	/^u_int32_t sfl_receiver_samplePacketsSent(SFLReceiver *receiver)$/;"	f
sfl_receiver_set_sFlowRcvrAddress	lib/sflow_receiver.c	/^void sfl_receiver_set_sFlowRcvrAddress(SFLReceiver *receiver, SFLAddress *sFlowRcvrAddress) {$/;"	f
sfl_receiver_set_sFlowRcvrMaximumDatagramSize	lib/sflow_receiver.c	/^void sfl_receiver_set_sFlowRcvrMaximumDatagramSize(SFLReceiver *receiver, u_int32_t sFlowRcvrMaximumDatagramSize) {$/;"	f
sfl_receiver_set_sFlowRcvrOwner	lib/sflow_receiver.c	/^void sfl_receiver_set_sFlowRcvrOwner(SFLReceiver *receiver, char *sFlowRcvrOwner) {$/;"	f
sfl_receiver_set_sFlowRcvrPort	lib/sflow_receiver.c	/^void sfl_receiver_set_sFlowRcvrPort(SFLReceiver *receiver, u_int32_t sFlowRcvrPort) {$/;"	f
sfl_receiver_set_sFlowRcvrTimeout	lib/sflow_receiver.c	/^void sfl_receiver_set_sFlowRcvrTimeout(SFLReceiver *receiver, time_t sFlowRcvrTimeout) {$/;"	f
sfl_receiver_tick	lib/sflow_receiver.c	/^void sfl_receiver_tick(SFLReceiver *receiver, time_t now)$/;"	f
sfl_receiver_writeCountersSample	lib/sflow_receiver.c	/^int sfl_receiver_writeCountersSample(SFLReceiver *receiver, SFL_COUNTERS_SAMPLE_TYPE *cs)$/;"	f
sfl_receiver_writeFlowSample	lib/sflow_receiver.c	/^int sfl_receiver_writeFlowSample(SFLReceiver *receiver, SFL_FLOW_SAMPLE_TYPE *fs)$/;"	f
sfl_sampler_get_backoffThreshold	lib/sflow_sampler.c	/^u_int32_t sfl_sampler_get_backoffThreshold(SFLSampler *sampler) {$/;"	f
sfl_sampler_get_sFlowFsMaximumHeaderSize	lib/sflow_sampler.c	/^u_int32_t sfl_sampler_get_sFlowFsMaximumHeaderSize(SFLSampler *sampler) {$/;"	f
sfl_sampler_get_sFlowFsPacketSamplingRate	lib/sflow_sampler.c	/^u_int32_t sfl_sampler_get_sFlowFsPacketSamplingRate(SFLSampler *sampler) {$/;"	f
sfl_sampler_get_sFlowFsReceiver	lib/sflow_sampler.c	/^u_int32_t sfl_sampler_get_sFlowFsReceiver(SFLSampler *sampler) {$/;"	f
sfl_sampler_get_samplesLastTick	lib/sflow_sampler.c	/^u_int32_t sfl_sampler_get_samplesLastTick(SFLSampler *sampler) {$/;"	f
sfl_sampler_init	lib/sflow_sampler.c	/^void sfl_sampler_init(SFLSampler *sampler, SFLAgent *agent, SFLDataSource_instance *pdsi)$/;"	f
sfl_sampler_resetFlowSeqNo	lib/sflow_sampler.c	/^void sfl_sampler_resetFlowSeqNo(SFLSampler *sampler) { sampler->flowSampleSeqNo = 0; }$/;"	f
sfl_sampler_set_backoffThreshold	lib/sflow_sampler.c	/^void sfl_sampler_set_backoffThreshold(SFLSampler *sampler, u_int32_t samplesPerSecond) {$/;"	f
sfl_sampler_set_sFlowFsMaximumHeaderSize	lib/sflow_sampler.c	/^void sfl_sampler_set_sFlowFsMaximumHeaderSize(SFLSampler *sampler, u_int32_t sFlowFsMaximumHeaderSize) {$/;"	f
sfl_sampler_set_sFlowFsPacketSamplingRate	lib/sflow_sampler.c	/^void sfl_sampler_set_sFlowFsPacketSamplingRate(SFLSampler *sampler, u_int32_t sFlowFsPacketSamplingRate) {$/;"	f
sfl_sampler_set_sFlowFsReceiver	lib/sflow_sampler.c	/^void sfl_sampler_set_sFlowFsReceiver(SFLSampler *sampler, u_int32_t sFlowFsReceiver) {$/;"	f
sfl_sampler_takeSample	lib/sflow_sampler.c	/^int sfl_sampler_takeSample(SFLSampler *sampler)$/;"	f
sfl_sampler_tick	lib/sflow_sampler.c	/^void sfl_sampler_tick(SFLSampler *sampler, time_t now)$/;"	f
sfl_sampler_writeFlowSample	lib/sflow_sampler.c	/^void sfl_sampler_writeFlowSample(SFLSampler *sampler, SFL_FLOW_SAMPLE_TYPE *fs)$/;"	f
sflow	lib/odp-util.h	/^    } sflow;$/;"	m	union:user_action_cookie	typeref:struct:user_action_cookie::__anon123
sflow	lib/vswitch-idl.h	/^	struct ovsrec_sflow *sflow;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_sflow
sflow	ofproto/ofproto-dpif-sflow.c	/^VLOG_DEFINE_THIS_MODULE(sflow);$/;"	v
sflow	ofproto/ofproto-dpif-upcall.c	/^    struct dpif_sflow *sflow;      \/* SFlow pointer or NULL. *\/$/;"	m	struct:upcall	typeref:struct:upcall::dpif_sflow	file:
sflow	ofproto/ofproto-dpif-xlate.c	/^    struct dpif_sflow *sflow;     \/* SFlow handle, or null. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::dpif_sflow	file:
sflow	ofproto/ofproto-dpif.c	/^    struct dpif_sflow *sflow;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::dpif_sflow	file:
sflow_addr	tests/test-sflow.c	/^struct sflow_addr {$/;"	s	file:
sflow_agent	ofproto/ofproto-dpif-sflow.c	/^    SFLAgent *sflow_agent;$/;"	m	struct:dpif_sflow	file:
sflow_agent_alloc_cb	ofproto/ofproto-dpif-sflow.c	/^sflow_agent_alloc_cb(void *magic OVS_UNUSED, SFLAgent *agent OVS_UNUSED,$/;"	f	file:
sflow_agent_error_cb	ofproto/ofproto-dpif-sflow.c	/^sflow_agent_error_cb(void *magic OVS_UNUSED, SFLAgent *agent OVS_UNUSED,$/;"	f	file:
sflow_agent_free_cb	ofproto/ofproto-dpif-sflow.c	/^sflow_agent_free_cb(void *magic OVS_UNUSED, SFLAgent *agent OVS_UNUSED,$/;"	f	file:
sflow_agent_send_packet_cb	ofproto/ofproto-dpif-sflow.c	/^sflow_agent_send_packet_cb(void *ds_, SFLAgent *agent OVS_UNUSED,$/;"	f	file:
sflow_choose_agent_address	ofproto/ofproto-dpif-sflow.c	/^sflow_choose_agent_address(const char *agent_device,$/;"	f	file:
sflow_get_dp_stats	ofproto/ofproto-dpif-sflow.c	/^sflow_get_dp_stats(struct dpif_sflow *ds OVS_UNUSED,$/;"	f	file:
sflow_global_counters_subid	ofproto/ofproto-dpif-sflow.c	/^static uint32_t sflow_global_counters_subid = SFLOW_GC_SUBID_UNCLAIMED;$/;"	v	file:
sflow_n_outputs	ofproto/ofproto-dpif-xlate.c	/^    uint32_t sflow_n_outputs;   \/* Number of output ports. *\/$/;"	m	struct:xlate_ctx	file:
sflow_odp_port	ofproto/ofproto-dpif-xlate.c	/^    odp_port_t sflow_odp_port;  \/* Output port for composing sFlow action. *\/$/;"	m	struct:xlate_ctx	file:
sflow_read_set_action	ofproto/ofproto-dpif-sflow.c	/^sflow_read_set_action(const struct nlattr *attr,$/;"	f	file:
sflow_read_tnl_push_action	ofproto/ofproto-dpif-sflow.c	/^sflow_read_tnl_push_action(const struct nlattr *attr,$/;"	f	file:
sflow_xdr	tests/test-sflow.c	/^struct sflow_xdr {$/;"	s	file:
sflowxdr_init	tests/test-sflow.c	/^sflowxdr_init(struct sflow_xdr *x, void *buf, size_t len)$/;"	f	file:
sflowxdr_mark	tests/test-sflow.c	/^sflowxdr_mark(const struct sflow_xdr *x, uint32_t q)$/;"	f	file:
sflowxdr_mark_ok	tests/test-sflow.c	/^sflowxdr_mark_ok(const struct sflow_xdr *x, uint32_t m)$/;"	f	file:
sflowxdr_mark_unique	tests/test-sflow.c	/^sflowxdr_mark_unique(struct sflow_xdr *x, uint32_t *pi)$/;"	f	file:
sflowxdr_more	tests/test-sflow.c	/^sflowxdr_more(const struct sflow_xdr *x, uint32_t q)$/;"	f	file:
sflowxdr_next	tests/test-sflow.c	/^sflowxdr_next(struct sflow_xdr *x)$/;"	f	file:
sflowxdr_next_int64	tests/test-sflow.c	/^sflowxdr_next_int64(struct sflow_xdr *x)$/;"	f	file:
sflowxdr_next_n	tests/test-sflow.c	/^sflowxdr_next_n(struct sflow_xdr *x)$/;"	f	file:
sflowxdr_setc	tests/test-sflow.c	/^sflowxdr_setc(struct sflow_xdr *x, uint32_t j)$/;"	f	file:
sflowxdr_skip	tests/test-sflow.c	/^sflowxdr_skip(struct sflow_xdr *x, uint32_t q)$/;"	f	file:
sflowxdr_str	tests/test-sflow.c	/^sflowxdr_str(const struct sflow_xdr *x)$/;"	f	file:
sfq	lib/netdev-linux.c	/^struct sfq {$/;"	s	file:
sfq_get__	lib/netdev-linux.c	/^sfq_get__(const struct netdev *netdev_)$/;"	f	file:
sfq_install__	lib/netdev-linux.c	/^sfq_install__(struct netdev *netdev_, uint32_t quantum, uint32_t perturb)$/;"	f	file:
sfq_parse_qdisc_details__	lib/netdev-linux.c	/^sfq_parse_qdisc_details__(struct netdev *netdev,$/;"	f	file:
sfq_qdisc_get	lib/netdev-linux.c	/^sfq_qdisc_get(const struct netdev *netdev, struct smap *details)$/;"	f	file:
sfq_qdisc_set	lib/netdev-linux.c	/^sfq_qdisc_set(struct netdev *netdev, const struct smap *details)$/;"	f	file:
sfq_setup_qdisc__	lib/netdev-linux.c	/^sfq_setup_qdisc__(struct netdev *netdev, uint32_t quantum, uint32_t perturb)$/;"	f	file:
sfq_tc_destroy	lib/netdev-linux.c	/^sfq_tc_destroy(struct tc *tc)$/;"	f	file:
sfq_tc_install	lib/netdev-linux.c	/^sfq_tc_install(struct netdev *netdev, const struct smap *details)$/;"	f	file:
sfq_tc_load	lib/netdev-linux.c	/^sfq_tc_load(struct netdev *netdev, struct ofpbuf *nlmsg)$/;"	f	file:
sh	lib/ovsdb-data.h	/^    struct shash sh;            \/* Maps from name to struct ovsdb_symbol *. *\/$/;"	m	struct:ovsdb_symbol_table	typeref:struct:ovsdb_symbol_table::shash
sh1	datapath/linux/compat/include/linux/reciprocal_div.h	/^	u8 sh1, sh2;$/;"	m	struct:reciprocal_value
sh2	datapath/linux/compat/include/linux/reciprocal_div.h	/^	u8 sh1, sh2;$/;"	m	struct:reciprocal_value
sha	datapath/flow.h	/^				u8 sha[ETH_ALEN];	\/* ARP source hardware address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon34::__anon36
sha1_bytes	lib/sha1.c	/^sha1_bytes(const void *data, size_t n, uint8_t digest[SHA1_DIGEST_SIZE])$/;"	f
sha1_ctx	lib/sha1.h	/^struct sha1_ctx {$/;"	s
sha1_final	lib/sha1.c	/^sha1_final(struct sha1_ctx *ctx, uint8_t digest[SHA1_DIGEST_SIZE])$/;"	f
sha1_from_hex	lib/sha1.c	/^sha1_from_hex(uint8_t digest[SHA1_DIGEST_SIZE], const char *hex)$/;"	f
sha1_init	lib/sha1.c	/^sha1_init(struct sha1_ctx *sha_info)$/;"	f
sha1_to_hex	lib/sha1.c	/^sha1_to_hex(const uint8_t digest[SHA1_DIGEST_SIZE],$/;"	f
sha1_update	lib/sha1.c	/^sha1_update(struct sha1_ctx *ctx, const void *buffer_, size_t count)$/;"	f
sha1_update_int	lib/uuid.c	/^sha1_update_int(struct sha1_ctx *sha1_ctx, uintmax_t x)$/;"	f	file:
sha1sum	utilities/ovs-pki	/^    sha1sum()$/;"	f
sha1sum	utilities/ovs-pki.in	/^    sha1sum()$/;"	f
sha_transform	lib/sha1.c	/^sha_transform(struct sha1_ctx *sha_info)$/;"	f	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	datapath/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shash	lib/shash.h	/^struct shash {$/;"	s
shash_add	lib/shash.c	/^shash_add(struct shash *sh, const char *name, const void *data)$/;"	f
shash_add_assert	lib/shash.c	/^shash_add_assert(struct shash *sh, const char *name, const void *data)$/;"	f
shash_add_nocopy	lib/shash.c	/^shash_add_nocopy(struct shash *sh, char *name, const void *data)$/;"	f
shash_add_nocopy__	lib/shash.c	/^shash_add_nocopy__(struct shash *sh, char *name, const void *data, size_t hash)$/;"	f	file:
shash_add_once	lib/shash.c	/^shash_add_once(struct shash *sh, const char *name, const void *data)$/;"	f
shash_clear	lib/shash.c	/^shash_clear(struct shash *sh)$/;"	f
shash_clear_free_data	lib/shash.c	/^shash_clear_free_data(struct shash *sh)$/;"	f
shash_count	lib/shash.c	/^shash_count(const struct shash *shash)$/;"	f
shash_delete	lib/shash.c	/^shash_delete(struct shash *sh, struct shash_node *node)$/;"	f
shash_destroy	lib/shash.c	/^shash_destroy(struct shash *sh)$/;"	f
shash_destroy_free_data	lib/shash.c	/^shash_destroy_free_data(struct shash *sh)$/;"	f
shash_equal_keys	lib/shash.c	/^shash_equal_keys(const struct shash *a, const struct shash *b)$/;"	f
shash_find	lib/shash.c	/^shash_find(const struct shash *sh, const char *name)$/;"	f
shash_find__	lib/shash.c	/^shash_find__(const struct shash *sh, const char *name, size_t name_len,$/;"	f	file:
shash_find_and_delete	lib/shash.c	/^shash_find_and_delete(struct shash *sh, const char *name)$/;"	f
shash_find_and_delete_assert	lib/shash.c	/^shash_find_and_delete_assert(struct shash *sh, const char *name)$/;"	f
shash_find_data	lib/shash.c	/^shash_find_data(const struct shash *sh, const char *name)$/;"	f
shash_find_len	lib/shash.c	/^shash_find_len(const struct shash *sh, const char *name, size_t len)$/;"	f
shash_first	lib/shash.c	/^shash_first(const struct shash *shash)$/;"	f
shash_init	lib/shash.c	/^shash_init(struct shash *sh)$/;"	f
shash_is_empty	lib/shash.c	/^shash_is_empty(const struct shash *shash)$/;"	f
shash_moved	lib/shash.c	/^shash_moved(struct shash *sh)$/;"	f
shash_node	lib/shash.h	/^struct shash_node {$/;"	s
shash_random_node	lib/shash.c	/^shash_random_node(struct shash *sh)$/;"	f
shash_replace	lib/shash.c	/^shash_replace(struct shash *sh, const char *name, const void *data)$/;"	f
shash_sort	lib/shash.c	/^shash_sort(const struct shash *sh)$/;"	f
shash_steal	lib/shash.c	/^shash_steal(struct shash *sh, struct shash_node *node)$/;"	f
shash_swap	lib/shash.c	/^shash_swap(struct shash *a, struct shash *b)$/;"	f
shlex	vtep/ovs-vtep	/^import shlex$/;"	i
shorten_name_via_proc	lib/socket-util-unix.c	/^shorten_name_via_proc(const char *name, char short_name[MAX_UN_LEN + 1],$/;"	f	file:
shorten_name_via_symlink	lib/socket-util-unix.c	/^shorten_name_via_symlink(const char *name, char short_name[MAX_UN_LEN + 1],$/;"	f	file:
should_fill_actions	datapath/datapath.c	/^static bool should_fill_actions(uint32_t ufid_flags)$/;"	f	file:
should_fill_actions	datapath/linux/datapath.c	/^static bool should_fill_actions(uint32_t ufid_flags)$/;"	f	file:
should_fill_key	datapath/datapath.c	/^static bool should_fill_key(const struct sw_flow_id *sfid, uint32_t ufid_flags)$/;"	f	file:
should_fill_key	datapath/linux/datapath.c	/^static bool should_fill_key(const struct sw_flow_id *sfid, uint32_t ufid_flags)$/;"	f	file:
should_fill_mask	datapath/datapath.c	/^static bool should_fill_mask(uint32_t ufid_flags)$/;"	f	file:
should_fill_mask	datapath/linux/datapath.c	/^static bool should_fill_mask(uint32_t ufid_flags)$/;"	f	file:
should_log_flow_message	lib/dpif.c	/^should_log_flow_message(int error)$/;"	f	file:
should_restart	lib/daemon-unix.c	/^should_restart(int status)$/;"	f	file:
should_revalidate	ofproto/ofproto-dpif-upcall.c	/^should_revalidate(const struct udpif *udpif, uint64_t packets,$/;"	f	file:
should_send_version_bitmap	lib/ofp-util.c	/^should_send_version_bitmap(uint32_t allowed_versions)$/;"	f	file:
should_service_stop	lib/daemon-unix.c	/^should_service_stop(void)$/;"	f
should_service_stop	lib/daemon-windows.c	/^should_service_stop(void)$/;"	f
show_dpif	lib/dpctl.c	/^show_dpif(struct dpif *dpif, struct dpctl_params *dpctl_p)$/;"	f	file:
show_log_verbosity	ovsdb/ovsdb-tool.c	/^static int show_log_verbosity;$/;"	v	file:
show_version	tests/test-lib.c	/^show_version(void)$/;"	f	file:
shuffle	tests/test-classifier.c	/^shuffle(int *p, size_t n)$/;"	f	file:
shuffle	tests/test-cmap.c	/^shuffle(int *p, size_t n)$/;"	f	file:
shuffle	tests/test-heap.c	/^shuffle(uint32_t *p, size_t n)$/;"	f	file:
shuffle	tests/test-hindex.c	/^shuffle(int *p, size_t n)$/;"	f	file:
shuffle	tests/test-hmap.c	/^shuffle(int *p, size_t n)$/;"	f	file:
shuffle	tests/test-util.c	/^shuffle(uint64_t *p, size_t n)$/;"	f	file:
shuffle_u32s	tests/test-classifier.c	/^shuffle_u32s(uint32_t *p, size_t n)$/;"	f	file:
shutil	utilities/ovs-dev.py	/^import shutil$/;"	i
siaddr	datapath/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::	file:
siaddr	datapath/linux/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::	file:
siaddr	lib/dhcp.h	/^    ovs_be32 siaddr;            \/* Next server IP address. *\/$/;"	m	struct:dhcp_header
sigchld_handler	lib/process.c	/^sigchld_handler(int signr OVS_UNUSED)$/;"	f	file:
sigfigs	lib/pcap-file.c	/^    uint32_t sigfigs;        \/* accuracy of timestamps *\/$/;"	m	struct:pcap_hdr	file:
sigint_intercept	python/ovstest/util.py	/^def sigint_intercept():$/;"	f
sign_request	utilities/ovs-pki	/^sign_request() {$/;"	f
sign_request	utilities/ovs-pki.in	/^sign_request() {$/;"	f
signal	python/ovs/daemon.py	/^import signal$/;"	i
signal	python/ovs/fatal_signal.py	/^import signal$/;"	i
signal	python/ovs/process.py	/^import signal$/;"	i
signal	python/ovstest/util.py	/^import signal$/;"	i
signal	tests/appctl.py	/^import signal$/;"	i
signal	tests/test-daemon.py	/^import signal$/;"	i
signal	tests/test-ovsdb.py	/^import signal$/;"	i
signal	tests/test-unix-socket.py	/^import signal$/;"	i
signal	utilities/ovs-test	/^import signal$/;"	i
signal	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
signal	utilities/qemu-wrap.py	/^import signal$/;"	i
signal_fds	lib/fatal-signal.c	/^static int signal_fds[2];$/;"	v	file:
signal_name	lib/signals.c	/^signal_name(int signum, char *namebuf, size_t bufsize)$/;"	f
signals	lib/signals.c	/^VLOG_DEFINE_THIS_MODULE(signals);$/;"	v
sim_add	tests/system-kmod-testsuite	/^sim_add () {$/;"	f
sim_add	tests/system-userspace-testsuite	/^sim_add () {$/;"	f
sim_add	tests/testsuite	/^sim_add () {$/;"	f
sim_add	utilities/ovs-sim	/^sim_add() {$/;"	f
sim_add	utilities/ovs-sim.in	/^sim_add() {$/;"	f
sim_setvars	utilities/ovs-sim	/^sim_setvars() {$/;"	f
sim_setvars	utilities/ovs-sim.in	/^sim_setvars() {$/;"	f
simap	lib/simap.h	/^struct simap {$/;"	s
simap_add_nocopy__	lib/simap.c	/^simap_add_nocopy__(struct simap *simap, char *name, unsigned int data,$/;"	f	file:
simap_clear	lib/simap.c	/^simap_clear(struct simap *simap)$/;"	f
simap_contains	lib/simap.c	/^simap_contains(const struct simap *simap, const char *name)$/;"	f
simap_count	lib/simap.c	/^simap_count(const struct simap *simap)$/;"	f
simap_delete	lib/simap.c	/^simap_delete(struct simap *simap, struct simap_node *node)$/;"	f
simap_destroy	lib/simap.c	/^simap_destroy(struct simap *simap)$/;"	f
simap_find	lib/simap.c	/^simap_find(const struct simap *simap, const char *name)$/;"	f
simap_find__	lib/simap.c	/^simap_find__(const struct simap *simap, const char *name, size_t name_len,$/;"	f	file:
simap_find_and_delete	lib/simap.c	/^simap_find_and_delete(struct simap *simap, const char *name)$/;"	f
simap_find_len	lib/simap.c	/^simap_find_len(const struct simap *simap, const char *name, size_t len)$/;"	f
simap_get	lib/simap.c	/^simap_get(const struct simap *simap, const char *name)$/;"	f
simap_increase	lib/simap.c	/^simap_increase(struct simap *simap, const char *name, unsigned int amt)$/;"	f
simap_init	lib/simap.c	/^simap_init(struct simap *simap)$/;"	f
simap_is_empty	lib/simap.c	/^simap_is_empty(const struct simap *simap)$/;"	f
simap_moved	lib/simap.c	/^simap_moved(struct simap *simap)$/;"	f
simap_node	lib/simap.h	/^struct simap_node {$/;"	s
simap_put	lib/simap.c	/^simap_put(struct simap *simap, const char *name, unsigned int data)$/;"	f
simap_sort	lib/simap.c	/^simap_sort(const struct simap *simap)$/;"	f
simap_swap	lib/simap.c	/^simap_swap(struct simap *a, struct simap *b)$/;"	f
simple_flow_mod	ofproto/ofproto.c	/^simple_flow_mod(struct ofproto *ofproto,$/;"	f	file:
simulate	tests/test-rstp.c	/^simulate(struct test_case *tc, int granularity)$/;"	f	file:
simulate	tests/test-stp.c	/^simulate(struct test_case *tc, int granularity)$/;"	f	file:
sin6_addr	include/sparse/netinet/in.h	/^    struct in6_addr sin6_addr;  \/* IPv6 address *\/$/;"	m	struct:sockaddr_in6	typeref:struct:sockaddr_in6::in6_addr
sin6_family	include/sparse/netinet/in.h	/^    sa_family_t sin6_family;$/;"	m	struct:sockaddr_in6
sin6_flowinfo	include/sparse/netinet/in.h	/^    uint32_t sin6_flowinfo;     \/* IPv6 flow information *\/$/;"	m	struct:sockaddr_in6
sin6_port	include/sparse/netinet/in.h	/^    in_port_t sin6_port;        \/* Transport layer port # *\/$/;"	m	struct:sockaddr_in6
sin6_scope_id	include/sparse/netinet/in.h	/^    uint32_t sin6_scope_id;     \/* IPv6 scope-id *\/$/;"	m	struct:sockaddr_in6
sin_addr	include/sparse/netinet/in.h	/^    struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	include/sparse/netinet/in.h	/^    sa_family_t sin_family;$/;"	m	struct:sockaddr_in
sin_port	include/sparse/netinet/in.h	/^    in_port_t sin_port;$/;"	m	struct:sockaddr_in
single_threaded	lib/ovs-thread.c	/^single_threaded(void)$/;"	f
singleton	ovsdb/ovsdb-idlc	/^        singleton = False$/;"	v
singleton	ovsdb/ovsdb-idlc	/^        singleton = True$/;"	v
size	build-aux/check-structs	/^                size = int(token)$/;"	v
size	datapath/linux/compat/include/net/net_namespace.h	/^	size_t size;$/;"	m	struct:rpl_pernet_operations
size	lib/byteq.h	/^    unsigned int size;          \/* Number of bytes allocated for 'buffer'. *\/$/;"	m	struct:byteq
size	lib/dpif-netdev.c	/^    unsigned int size;          \/* Size of 'actions', in bytes. *\/$/;"	m	struct:dp_netdev_actions	file:
size	lib/lldp/lldpd-structs.h	/^    int size;$/;"	m	struct:lldpd_frame
size	lib/netdev-bsd.c	/^    int size;$/;"	m	struct:pcap_arg	file:
size	lib/ofpbuf.h	/^    uint32_t size;              \/* Number of bytes in use. *\/$/;"	m	struct:ofpbuf
size	lib/ovs-thread.h	/^    uint32_t size;            \/* Number of threads to wait. *\/$/;"	m	struct:ovs_barrier
size	lib/pvector.h	/^    size_t size;        \/* Number of entries in the vector. *\/$/;"	m	struct:pvector_cursor
size	lib/pvector.h	/^    size_t size;       \/* Number of entries in the vector. *\/$/;"	m	struct:pvector_impl
size	tests/test-csum.c	/^    size_t size;                \/* Test requires a multiple of 4. *\/$/;"	m	struct:test_case	file:
size	tests/test-rstp.c	/^    size_t size;$/;"	m	struct:bpdu	file:
size	tests/test-sha1.c	/^    size_t size;$/;"	m	struct:test_vector	file:
size	tests/test-stp.c	/^    size_t size;$/;"	m	struct:bpdu	file:
sizeName	ovsdb/ovsdb-idlc	/^        sizeName = "n_%s" % columnName$/;"	v
size_node	ofproto/ofproto.c	/^    struct heap_node size_node; \/* In oftable's "eviction_groups_by_size". *\/$/;"	m	struct:eviction_group	typeref:struct:eviction_group::heap_node	file:
size_of	utilities/bugtool/ovs-bugtool	/^def size_of(f, pattern, negate):$/;"	f
size_of_all	utilities/bugtool/ovs-bugtool	/^def size_of_all(files, pattern=None, negate=False):$/;"	f
size_of_dir	utilities/bugtool/ovs-bugtool	/^def size_of_dir(d, pattern=None, negate=False):$/;"	f
sizeof	lib/meta-flow.h	/^BUILD_ASSERT_DECL(sizeof(union mf_value) == sizeof (union mf_subvalue));$/;"	v
sizeof	lib/odp-util.c	/^                  sizeof(struct ovs_key_tcp) == sizeof(struct ovs_key_sctp));$/;"	v
sizeof	lib/ofp-actions.h	/^                  == sizeof(struct ofpact_conntrack));$/;"	v
sizeof	lib/ofp-actions.h	/^                  == sizeof(struct ofpact_nest));$/;"	v
sizeof	ovsdb/ovsdb-idlc	/^                        sizeof = " * sizeof_bool"$/;"	v
sizeof	ovsdb/ovsdb-idlc	/^                        sizeof = "sizeof *%s" % valueVar$/;"	v
sizeof	ovsdb/ovsdb-idlc	/^                    sizeof = "sizeof *%s" % keyVar$/;"	v
sizeof	ovsdb/ovsdb-idlc	/^                    sizeof = "sizeof_bool"$/;"	v
sizeof_bool	lib/vswitch-idl.c	/^enum { sizeof_bool = 1 };$/;"	e	enum:__anon163	file:
sizeof_bool	lib/vswitch-idl.c	/^enum { sizeof_bool = sizeof(bool) };$/;"	e	enum:__anon164	file:
sizeof_bool	ovn/lib/ovn-nb-idl.c	/^enum { sizeof_bool = 1 };$/;"	e	enum:__anon213	file:
sizeof_bool	ovn/lib/ovn-nb-idl.c	/^enum { sizeof_bool = sizeof(bool) };$/;"	e	enum:__anon214	file:
sizeof_bool	ovn/lib/ovn-sb-idl.c	/^enum { sizeof_bool = 1 };$/;"	e	enum:__anon204	file:
sizeof_bool	ovn/lib/ovn-sb-idl.c	/^enum { sizeof_bool = sizeof(bool) };$/;"	e	enum:__anon205	file:
sizeof_bool	tests/idltest.c	/^enum { sizeof_bool = 1 };$/;"	e	enum:__anon235	file:
sizeof_bool	tests/idltest.c	/^enum { sizeof_bool = sizeof(bool) };$/;"	e	enum:__anon236	file:
sizeof_bool	vtep/vtep-idl.c	/^enum { sizeof_bool = 1 };$/;"	e	enum:__anon237	file:
sizeof_bool	vtep/vtep-idl.c	/^enum { sizeof_bool = sizeof(bool) };$/;"	e	enum:__anon238	file:
sk_release_kernel	datapath/linux/compat/socket.c	27;"	d	file:
sk_release_kernel	datapath/linux/socket.c	27;"	d	file:
sk_user_data	datapath/linux/compat/include/net/udp_tunnel.h	/^	void *sk_user_data;     \/* user data used by encap_rcv call back *\/$/;"	m	struct:udp_tunnel_sock_cfg
skb	datapath/actions.c	/^	struct sk_buff *skb;$/;"	m	struct:deferred_action	typeref:struct:deferred_action::sk_buff	file:
skb	datapath/linux/actions.c	/^	struct sk_buff *skb;$/;"	m	struct:deferred_action	typeref:struct:deferred_action::sk_buff	file:
skb_checksum_start_offset	datapath/linux/compat/include/linux/skbuff.h	/^static inline int skb_checksum_start_offset(const struct sk_buff *skb)$/;"	f
skb_clear_hash	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_clear_hash(struct sk_buff *skb)$/;"	f
skb_clear_ovs_gso_cb	datapath/linux/compat/gso.h	/^static inline void skb_clear_ovs_gso_cb(struct sk_buff *skb)$/;"	f
skb_copy_from_linear_data_offset	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_copy_from_linear_data_offset(const struct sk_buff *skb,$/;"	f
skb_copy_to_linear_data	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_copy_to_linear_data(struct sk_buff *skb,$/;"	f
skb_copy_to_linear_data_offset	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_copy_to_linear_data_offset(struct sk_buff *skb,$/;"	f
skb_cow_head	datapath/linux/compat/include/linux/skbuff.h	/^static inline int skb_cow_head(struct sk_buff *skb, unsigned int headroom)$/;"	f
skb_dst	datapath/linux/compat/include/linux/skbuff.h	/^static inline struct dst_entry *skb_dst(const struct sk_buff *skb)$/;"	f
skb_dst_drop	datapath/linux/compat/include/net/dst.h	/^static inline void skb_dst_drop(struct sk_buff *skb)$/;"	f
skb_dst_set	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_dst_set(struct sk_buff *skb, struct dst_entry *dst)$/;"	f
skb_encapsulation	datapath/compat.h	/^static inline bool skb_encapsulation(struct sk_buff *skb)$/;"	f
skb_encapsulation	datapath/compat.h	86;"	d
skb_ensure_writable	datapath/linux/compat/include/linux/skbuff.h	357;"	d
skb_flow_dissect	datapath/linux/compat/flow_dissector.c	/^static bool skb_flow_dissect(const struct sk_buff *skb, struct flow_keys *flow)$/;"	f	file:
skb_flow_dissect	datapath/linux/flow_dissector.c	/^static bool skb_flow_dissect(const struct sk_buff *skb, struct flow_keys *flow)$/;"	f	file:
skb_flow_get_ports	datapath/linux/compat/flow_dissector.c	/^static __be32 skb_flow_get_ports(const struct sk_buff *skb, int thoff, u8 ip_proto)$/;"	f	file:
skb_flow_get_ports	datapath/linux/flow_dissector.c	/^static __be32 skb_flow_get_ports(const struct sk_buff *skb, int thoff, u8 ip_proto)$/;"	f	file:
skb_frag_page	datapath/linux/compat/include/linux/skbuff.h	/^static inline struct page *skb_frag_page(const skb_frag_t *frag)$/;"	f
skb_frag_ref	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_frag_ref(struct sk_buff *skb, int f)$/;"	f
skb_frag_size_set	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_frag_size_set(skb_frag_t *frag, unsigned int size)$/;"	f
skb_frag_unref	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_frag_unref(struct sk_buff *skb, int f)$/;"	f
skb_get_hash	datapath/linux/compat/include/linux/skbuff.h	/^static inline __u32 skb_get_hash(struct sk_buff *skb)$/;"	f
skb_get_hash	datapath/linux/compat/include/linux/skbuff.h	289;"	d
skb_get_hash	datapath/linux/compat/include/linux/skbuff.h	306;"	d
skb_get_l4_proto	datapath/linux/compat/stt.c	/^static u8 skb_get_l4_proto(struct sk_buff *skb, __be16 l3_proto)$/;"	f	file:
skb_get_l4_proto	datapath/linux/stt.c	/^static u8 skb_get_l4_proto(struct sk_buff *skb, __be16 l3_proto)$/;"	f	file:
skb_gso_segment	datapath/linux/compat/include/linux/netdevice.h	102;"	d
skb_has_frag_list	datapath/linux/compat/include/linux/skbuff.h	341;"	d
skb_hash	datapath/flow_table.h	/^	u32 skb_hash;$/;"	m	struct:mask_cache_entry
skb_inner_mac_header	datapath/linux/compat/gso.h	/^static inline unsigned char *skb_inner_mac_header(const struct sk_buff *skb)$/;"	f
skb_inner_mac_offset	datapath/linux/compat/gso.h	/^static inline int skb_inner_mac_offset(const struct sk_buff *skb)$/;"	f
skb_inner_network_header	datapath/linux/compat/gso.h	/^static inline unsigned char *skb_inner_network_header(const struct sk_buff *skb)$/;"	f
skb_inner_network_offset	datapath/linux/compat/gso.h	/^static inline int skb_inner_network_offset(const struct sk_buff *skb)$/;"	f
skb_is_encapsulated	datapath/linux/compat/include/net/ip_tunnels.h	83;"	d
skb_list_segment	datapath/linux/compat/stt.c	/^static int skb_list_segment(struct sk_buff *head, bool ipv4, int l4_offset)$/;"	f	file:
skb_list_segment	datapath/linux/stt.c	/^static int skb_list_segment(struct sk_buff *head, bool ipv4, int l4_offset)$/;"	f	file:
skb_list_xmit	datapath/linux/compat/stt.c	/^static int skb_list_xmit(struct rtable *rt, struct sk_buff *skb, __be32 src,$/;"	f	file:
skb_list_xmit	datapath/linux/stt.c	/^static int skb_list_xmit(struct rtable *rt, struct sk_buff *skb, __be32 src,$/;"	f	file:
skb_mac_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline unsigned char *skb_mac_header(const struct sk_buff *skb)$/;"	f
skb_mark	datapath/flow.h	/^		u32	skb_mark;	\/* SKB mark. *\/$/;"	m	struct:sw_flow_key::__anon27
skb_mpls_header	datapath/linux/compat/include/net/mpls.h	/^static inline unsigned char *skb_mpls_header(struct sk_buff *skb)$/;"	f
skb_network_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline unsigned char *skb_network_header(const struct sk_buff *skb)$/;"	f
skb_network_offset	datapath/linux/compat/include/linux/skbuff.h	/^static inline int skb_network_offset(const struct sk_buff *skb)$/;"	f
skb_orphan_frags	datapath/linux/compat/include/linux/skbuff.h	/^static inline int skb_orphan_frags(struct sk_buff *skb, gfp_t gfp_mask)$/;"	f
skb_postpull_rcsum	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_postpull_rcsum(struct sk_buff *skb,$/;"	f
skb_postpull_rcsum	datapath/linux/compat/include/linux/skbuff.h	384;"	d
skb_priorities	ofproto/ofproto-dpif-xlate.c	/^    struct hmap skb_priorities;      \/* Map of 'skb_priority_to_dscp's. *\/$/;"	m	struct:xport	typeref:struct:xport::hmap	file:
skb_priority	lib/flow.h	/^    uint32_t skb_priority;      \/* Packet priority for QoS. *\/$/;"	m	struct:flow
skb_priority	lib/packets.h	/^    uint32_t skb_priority;      \/* Packet priority for QoS. *\/$/;"	m	struct:pkt_metadata
skb_priority	ofproto/ofproto-dpif-xlate.c	/^    uint32_t skb_priority;      \/* Priority of this queue (see struct flow). *\/$/;"	m	struct:skb_priority_to_dscp	file:
skb_priority_to_dscp	ofproto/ofproto-dpif-xlate.c	/^struct skb_priority_to_dscp {$/;"	s	file:
skb_pull_rcsum	datapath/linux/compat/include/linux/skbuff.h	/^static inline unsigned char *skb_pull_rcsum(struct sk_buff *skb, unsigned int len)$/;"	f
skb_pull_rcsum	datapath/linux/compat/include/linux/skbuff.h	395;"	d
skb_reset_inner_headers	datapath/linux/compat/gso.h	/^static inline void skb_reset_inner_headers(struct sk_buff *skb)$/;"	f
skb_reset_inner_headers	datapath/linux/compat/gso.h	146;"	d
skb_reset_mac_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_reset_mac_header(struct sk_buff *skb)$/;"	f
skb_reset_mac_len	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_reset_mac_len(struct sk_buff *skb)$/;"	f
skb_reset_network_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_reset_network_header(struct sk_buff *skb)$/;"	f
skb_reset_tail_pointer	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_reset_tail_pointer(struct sk_buff *skb)$/;"	f
skb_reset_transport_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_reset_transport_header(struct sk_buff *skb)$/;"	f
skb_rtable	datapath/linux/compat/include/linux/skbuff.h	/^static inline struct rtable *skb_rtable(const struct sk_buff *skb)$/;"	f
skb_set_inner_mac_header	datapath/linux/compat/gso.h	/^static inline void skb_set_inner_mac_header(const struct sk_buff *skb,$/;"	f
skb_set_inner_network_header	datapath/linux/compat/gso.h	/^static inline void skb_set_inner_network_header(const struct sk_buff *skb,$/;"	f
skb_set_inner_transport_header	datapath/linux/compat/gso.h	/^static inline void skb_set_inner_transport_header(const struct sk_buff *skb,$/;"	f
skb_set_mac_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_set_mac_header(struct sk_buff *skb, const int offset)$/;"	f
skb_set_network_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_set_network_header(struct sk_buff *skb, const int offset)$/;"	f
skb_set_transport_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_set_transport_header(struct sk_buff *skb,$/;"	f
skb_transport_header	datapath/linux/compat/include/linux/skbuff.h	/^static inline unsigned char *skb_transport_header(const struct sk_buff *skb)$/;"	f
skb_transport_offset	datapath/linux/compat/include/linux/skbuff.h	/^static inline int skb_transport_offset(const struct sk_buff *skb)$/;"	f
skb_tx_error	datapath/linux/compat/include/linux/skbuff.h	/^static inline void skb_tx_error(struct sk_buff *skb)$/;"	f
skb_unclone	datapath/linux/compat/include/linux/skbuff.h	/^static inline int skb_unclone(struct sk_buff *skb, gfp_t pri)$/;"	f
skb_vlan_pop	datapath/linux/compat/include/linux/skbuff.h	362;"	d
skb_vlan_push	datapath/linux/compat/include/linux/skbuff.h	367;"	d
skb_vlan_tag_get	datapath/linux/compat/include/linux/if_vlan.h	177;"	d
skb_vlan_tag_present	datapath/linux/compat/include/linux/if_vlan.h	176;"	d
skb_warn_if_lro	datapath/linux/compat/include/linux/skbuff.h	/^static inline bool skb_warn_if_lro(const struct sk_buff *skb)$/;"	f
skb_zerocopy	datapath/linux/compat/include/linux/skbuff.h	323;"	d
skb_zerocopy_headlen	datapath/linux/compat/include/linux/skbuff.h	318;"	d
skbs	datapath/linux/compat/stt.c	/^	struct sk_buff *skbs;$/;"	m	struct:pkt_frag	typeref:struct:pkt_frag::sk_buff	file:
skbs	datapath/linux/stt.c	/^	struct sk_buff *skbs;$/;"	m	struct:pkt_frag	typeref:struct:pkt_frag::sk_buff	file:
skip	lib/sflow_api.h	/^    u_int32_t skip;$/;"	m	struct:_SFLSampler
skipDirective	build-aux/check-structs	/^def skipDirective():$/;"	f
skipDirective	build-aux/extract-ofp-errors	/^def skipDirective():$/;"	f
skip_digits	lib/util.c	/^skip_digits(const char *s)$/;"	f	file:
skip_seqno	lib/ovsdb-idl.h	/^    unsigned int skip_seqno;$/;"	m	struct:ovsdb_idl_loop
skip_spaces	lib/ovsdb-data.c	/^skip_spaces(const char *p)$/;"	f	file:
skip_spaces	lib/util.c	/^skip_spaces(const char *s)$/;"	f	file:
slave	lib/lacp.c	/^struct slave {$/;"	s	file:
slave	ofproto/bond.c	/^    struct bond_slave *slave;   \/* Assigned slave, NULL if unassigned. *\/$/;"	m	struct:bond_entry	typeref:struct:bond_entry::bond_slave	file:
slave	tests/test-bundle.c	/^struct slave {$/;"	s	file:
slave_async_config	ofproto/connmgr.c	/^    uint32_t slave_async_config[OAM_N_TYPES];  \/* slave *\/$/;"	m	struct:ofconn	file:
slave_enabled_cb	ofproto/ofproto-dpif-xlate.c	/^slave_enabled_cb(ofp_port_t ofp_port, void *xbridge_)$/;"	f	file:
slave_enabled_cb	tests/test-bundle.c	/^slave_enabled_cb(ofp_port_t slave_id, void *aux)$/;"	f	file:
slave_group	tests/test-bundle.c	/^struct slave_group {$/;"	s	file:
slave_id	tests/test-bundle.c	/^    ofp_port_t slave_id;$/;"	m	struct:slave	file:
slave_lookup	tests/test-bundle.c	/^slave_lookup(struct slave_group *sg, ofp_port_t slave_id)$/;"	f	file:
slave_status	lib/lacp.c	/^enum slave_status {$/;"	g	file:
slave_type	lib/ofp-actions.c	/^    ovs_be32 slave_type;        \/* NXM_OF_IN_PORT. *\/$/;"	m	struct:nx_action_bundle	file:
slaves	lib/lacp.c	/^    struct hmap slaves;      \/* Slaves this LACP object controls. *\/$/;"	m	struct:lacp	typeref:struct:lacp::hmap	file:
slaves	lib/ofp-actions.h	/^    ofp_port_t slaves[];$/;"	m	struct:ofpact_bundle
slaves	ofproto/bond.c	/^    struct hmap slaves;$/;"	m	struct:bond	typeref:struct:bond::hmap	file:
slaves	ofproto/ofproto.h	/^    ofp_port_t *slaves;         \/* OpenFlow port numbers for slaves. *\/$/;"	m	struct:ofproto_bundle_settings
slaves	tests/test-bundle.c	/^    struct slave slaves[MAX_SLAVES];$/;"	m	struct:slave_group	typeref:struct:slave_group::slave	file:
sleep	windows/ovs-windows-installer/Actions/OVSActions.js	/^function sleep(interval) {$/;"	f
slink	datapath-windows/ovsext/IpHelper.h	/^    LIST_ENTRY        slink;$/;"	m	struct:_OVS_IPNEIGH_ENTRY
sll	datapath/flow.h	/^				u8 sll[ETH_ALEN];	\/* ND source link layer address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon37::__anon39
sll_addr	include/sparse/netpacket/packet.h	/^    unsigned char sll_addr[8];$/;"	m	struct:sockaddr_ll
sll_family	include/sparse/netpacket/packet.h	/^    unsigned short int sll_family;$/;"	m	struct:sockaddr_ll
sll_halen	include/sparse/netpacket/packet.h	/^    unsigned char sll_halen;$/;"	m	struct:sockaddr_ll
sll_hatype	include/sparse/netpacket/packet.h	/^    unsigned short int sll_hatype;$/;"	m	struct:sockaddr_ll
sll_ifindex	include/sparse/netpacket/packet.h	/^    int sll_ifindex;$/;"	m	struct:sockaddr_ll
sll_pkttype	include/sparse/netpacket/packet.h	/^    unsigned char sll_pkttype;$/;"	m	struct:sockaddr_ll
sll_protocol	include/sparse/netpacket/packet.h	/^    ovs_be16 sll_protocol;$/;"	m	struct:sockaddr_ll
slot_destructor	lib/fat-rwlock.c	/^slot_destructor(void *slot_)$/;"	f	file:
slow	ofproto/ofproto-dpif-xlate.h	/^    enum slow_path_reason slow; \/* 0 if fast path may be used. *\/$/;"	m	struct:xlate_out	typeref:enum:xlate_out::slow_path_reason
slowInPkts	datapath-windows/ovsext/Stt.h	/^    UINT64 slowInPkts;$/;"	m	struct:_OVS_STT_VPORT
slowInPkts	datapath-windows/ovsext/Vxlan.h	/^    UINT64 slowInPkts;$/;"	m	struct:_OVS_VXLAN_VPORT
slowOutPkts	datapath-windows/ovsext/Stt.h	/^    UINT64 slowOutPkts;$/;"	m	struct:_OVS_STT_VPORT
slowOutPkts	datapath-windows/ovsext/Vxlan.h	/^    UINT64 slowOutPkts;$/;"	m	struct:_OVS_VXLAN_VPORT
slow_path	lib/odp-util.h	/^    } slow_path;$/;"	m	union:user_action_cookie	typeref:struct:user_action_cookie::__anon124
slow_path	lib/timeval.c	/^    atomic_bool slow_path;             \/* True if warped or stopped. *\/$/;"	m	struct:clock	file:
slow_path_reason	lib/odp-util.h	/^enum slow_path_reason {$/;"	g
slow_path_reason_to_explanation	lib/odp-util.c	/^slow_path_reason_to_explanation(enum slow_path_reason reason)$/;"	f
slow_path_reason_to_string	lib/odp-util.c	/^slow_path_reason_to_string(uint32_t reason)$/;"	f	file:
smap	lib/smap.h	/^struct smap {$/;"	s
smap_add	lib/smap.c	/^smap_add(struct smap *smap, const char *key, const char *value)$/;"	f
smap_add__	lib/smap.c	/^smap_add__(struct smap *smap, char *key, void *value, size_t hash)$/;"	f	file:
smap_add_format	lib/smap.c	/^smap_add_format(struct smap *smap, const char *key, const char *format, ...)$/;"	f
smap_add_ipv6	lib/smap.c	/^smap_add_ipv6(struct smap *smap, const char *key, struct in6_addr *addr)$/;"	f
smap_add_nocopy	lib/smap.c	/^smap_add_nocopy(struct smap *smap, char *key, char *value)$/;"	f
smap_add_once	lib/smap.c	/^smap_add_once(struct smap *smap, const char *key, const char *value)$/;"	f
smap_clear	lib/smap.c	/^smap_clear(struct smap *smap)$/;"	f
smap_clone	lib/smap.c	/^smap_clone(struct smap *dst, const struct smap *src)$/;"	f
smap_count	lib/smap.c	/^smap_count(const struct smap *smap)$/;"	f
smap_destroy	lib/smap.c	/^smap_destroy(struct smap *smap)$/;"	f
smap_equal	lib/smap.c	/^smap_equal(const struct smap *smap1, const struct smap *smap2)$/;"	f
smap_find__	lib/smap.c	/^smap_find__(const struct smap *smap, const char *key, size_t key_len,$/;"	f	file:
smap_from_json	lib/smap.c	/^smap_from_json(struct smap *smap, const struct json *json)$/;"	f
smap_get	lib/smap.c	/^smap_get(const struct smap *smap, const char *key)$/;"	f
smap_get_bool	lib/smap.c	/^smap_get_bool(const struct smap *smap, const char *key, bool def)$/;"	f
smap_get_int	lib/smap.c	/^smap_get_int(const struct smap *smap, const char *key, int def)$/;"	f
smap_get_node	lib/smap.c	/^smap_get_node(const struct smap *smap, const char *key)$/;"	f
smap_get_uuid	lib/smap.c	/^smap_get_uuid(const struct smap *smap, const char *key, struct uuid *uuid)$/;"	f
smap_init	lib/smap.c	/^smap_init(struct smap *smap)$/;"	f
smap_is_empty	lib/smap.c	/^smap_is_empty(const struct smap *smap)$/;"	f
smap_node	lib/smap.h	/^struct smap_node {$/;"	s
smap_remove	lib/smap.c	/^smap_remove(struct smap *smap, const char *key)$/;"	f
smap_remove_node	lib/smap.c	/^smap_remove_node(struct smap *smap, struct smap_node *node)$/;"	f
smap_replace	lib/smap.c	/^smap_replace(struct smap *smap, const char *key, const char *value)$/;"	f
smap_sort	lib/smap.c	/^smap_sort(const struct smap *smap)$/;"	f
smap_steal	lib/smap.c	/^smap_steal(struct smap *smap, struct smap_node *node,$/;"	f
smap_to_json	lib/smap.c	/^smap_to_json(const struct smap *smap)$/;"	f
sn	tests/test-ovn.c	/^    int sn;$/;"	m	struct:tree_shape	file:
sname	datapath/actions.c	/^  u8 chaddr[DHCP_CHADDR_MAX], sname[64], file[128];$/;"	m	struct:dhcphdr	file:
sname	datapath/linux/actions.c	/^  u8 chaddr[DHCP_CHADDR_MAX], sname[64], file[128];$/;"	m	struct:dhcphdr	file:
sname	lib/dhcp.h	/^    char sname[64];             \/* Optional server host name. *\/$/;"	m	struct:dhcp_header
snap	datapath-windows/ovsext/Ethernet.h	/^    Eth_SNAP snap;        \/\/ SNAP header$/;"	m	struct:Eth_802_3
snapOrg	datapath-windows/ovsext/Ethernet.h	/^    UINT8   snapOrg[3];$/;"	m	struct:Eth_SNAP
snapType	datapath-windows/ovsext/Ethernet.h	/^    Eth_DIX snapType;$/;"	m	struct:Eth_SNAP
snaplen	lib/pcap-file.c	/^    uint32_t snaplen;        \/* max length of captured packets *\/$/;"	m	struct:pcap_hdr	file:
snd_portid	datapath/linux/compat/include/net/genetlink.h	16;"	d
snoop_preference	ofproto/connmgr.c	/^snoop_preference(const struct ofconn *ofconn)$/;"	f	file:
snoops	ofproto/connmgr.c	/^    struct pvconn **snoops;$/;"	m	struct:connmgr	typeref:struct:connmgr::pvconn	file:
snprintf	lib/stdio.c	23;"	d	file:
snprintf	lib/stdio.h	35;"	d
snprintf	lib/stdio.h	36;"	d
sock	datapath/linux/compat/include/net/geneve.h	/^	struct socket		*sock;$/;"	m	struct:geneve_sock	typeref:struct:geneve_sock::socket
sock	datapath/linux/compat/include/net/stt.h	/^	struct socket		*sock;$/;"	m	struct:stt_sock	typeref:struct:stt_sock::socket
sock	datapath/linux/compat/include/net/vxlan.h	/^	struct socket	 *sock;$/;"	m	struct:vxlan_sock	typeref:struct:vxlan_sock::socket
sock	lib/dpif-netlink.c	/^    struct nl_sock *sock;       \/* Netlink socket. *\/$/;"	m	struct:dpif_channel	typeref:struct:dpif_channel::nl_sock	file:
sock	lib/netlink-socket.h	/^    struct nl_sock *sock;       \/* Socket being dumped. *\/$/;"	m	struct:nl_dump	typeref:struct:nl_dump::nl_sock
sock_create_kern	datapath/linux/compat/include/linux/net.h	58;"	d
sock_create_kern	datapath/linux/compat/socket.c	14;"	d	file:
sock_create_kern	datapath/linux/socket.c	14;"	d	file:
sock_errno	lib/socket-util.h	/^static inline int sock_errno(void)$/;"	f
sock_list	datapath/linux/compat/stt.c	/^	struct list_head sock_list;$/;"	m	struct:stt_net	typeref:struct:stt_net::list_head	file:
sock_list	datapath/linux/stt.c	/^	struct list_head sock_list;$/;"	m	struct:stt_net	typeref:struct:stt_net::list_head	file:
sock_release	datapath/linux/compat/include/linux/net.h	59;"	d
sock_strerror	lib/socket-util.c	/^sock_strerror(int error)$/;"	f
sockaddr	include/sparse/sys/socket.h	/^struct sockaddr {$/;"	s
sockaddr_in	include/sparse/netinet/in.h	/^struct sockaddr_in {$/;"	s
sockaddr_in6	include/sparse/netinet/in.h	/^struct sockaddr_in6 {$/;"	s
sockaddr_ll	include/sparse/netpacket/packet.h	/^struct sockaddr_ll$/;"	s
sockaddr_storage	include/sparse/sys/socket.h	/^struct sockaddr_storage {$/;"	s
socket	python/ovs/poller.py	/^import socket$/;"	i
socket	python/ovs/socket_util.py	/^import socket$/;"	i
socket	python/ovs/stream.py	/^import socket$/;"	i
socket	python/ovs/vlog.py	/^import socket$/;"	i
socket	python/ovstest/args.py	/^import socket$/;"	i
socket	python/ovstest/util.py	/^import socket$/;"	i
socket	tests/test-l7.py	/^import socket$/;"	i
socket	tests/test-unix-socket.py	/^import socket$/;"	i
socket	utilities/bugtool/ovs-bugtool	/^import socket$/;"	i
socket	utilities/ovs-dpctl-top	/^import socket$/;"	i
socket	utilities/ovs-l3ping	/^import socket$/;"	i
socket	utilities/ovs-test	/^import socket$/;"	i
socket	utilities/ovs-vlan-test	/^import socket$/;"	i
socket	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^import socket$/;"	i
socket_id	lib/netdev-dpdk.c	/^    int socket_id;$/;"	m	struct:dpdk_mp	file:
socket_id	lib/netdev-dpdk.c	/^    int socket_id;$/;"	m	struct:netdev_dpdk	file:
socket_name_from_target	python/ovs/unixctl/__init__.py	/^def socket_name_from_target(target):$/;"	f
socket_util	lib/socket-util.c	/^VLOG_DEFINE_THIS_MODULE(socket_util);$/;"	v
socket_util	python/ovs/daemon.py	/^import ovs.socket_util$/;"	i
socket_util	python/ovs/db/data.py	/^import ovs.socket_util$/;"	i
socket_util	python/ovs/stream.py	/^import ovs.socket_util$/;"	i
socket_util	tests/test-unix-socket.py	/^import ovs.socket_util$/;"	i
socket_util_unix	lib/socket-util-unix.c	/^VLOG_DEFINE_THIS_MODULE(socket_util_unix);$/;"	v
socklen_t	include/sparse/sys/socket.h	/^typedef __socklen_t socklen_t;$/;"	t
socks	lib/netlink-socket.c	/^    struct nl_sock *socks[16];$/;"	m	struct:nl_pool	typeref:struct:nl_pool::nl_sock	file:
solicit_echo_nonce	datapath/linux/vport-lisp.c	/^	__u8 solicit_echo_nonce:1;$/;"	m	struct:lisphdr	file:
solicit_echo_nonce	datapath/vport-lisp.c	/^	__u8 solicit_echo_nonce:1;$/;"	m	struct:lisphdr	file:
sort	lib/sort.c	/^sort(size_t count,$/;"	f
sort_criterion	utilities/ovs-ofctl.c	/^struct sort_criterion {$/;"	s	file:
sort_order	utilities/ovs-ofctl.c	/^enum sort_order { SORT_ASC, SORT_DESC };$/;"	g	file:
sort_output_actions	lib/dpctl.c	/^sort_output_actions(struct nlattr *actions, size_t length)$/;"	f	file:
sort_output_actions__	lib/dpctl.c	/^sort_output_actions__(struct nlattr *first, struct nlattr *end)$/;"	f	file:
sort_set	tests/uuidfilt.pl	/^sub sort_set {$/;"	s
source	datapath-windows/ovsext/NetProto.h	/^   UINT16    source;$/;"	m	struct:TCPHdr
source	datapath-windows/ovsext/NetProto.h	/^   UINT16    source;$/;"	m	struct:UDPHdr
source	lib/dp-packet.h	/^    enum dp_packet_source source;  \/* Source of memory allocated as 'base'. *\/$/;"	m	struct:dp_packet	typeref:enum:dp_packet::dp_packet_source
source	lib/ofpbuf.h	/^    enum ofpbuf_source source;  \/* Source of memory allocated as 'base'. *\/$/;"	m	struct:ofpbuf	typeref:enum:ofpbuf::ofpbuf_source
sourceIPAddr	datapath-windows/ovsext/NetProto.h	/^   UINT32   sourceIPAddr;$/;"	m	struct:PseudoHdr
sourceIPAddr	datapath-windows/ovsext/NetProto.h	/^   UINT8    sourceIPAddr[16];$/;"	m	struct:PseudoHdrIPv6
source_id	lib/sflow.h	/^    u_int32_t source_id;            \/* fsSourceId *\/$/;"	m	struct:_SFLFlow_sample
source_id	lib/sflow.h	/^    u_int32_t source_id;          \/* fsSourceId *\/$/;"	m	struct:_SFLCounters_sample
source_ip	vtep/vtep-idl.h	/^	char *source_ip;$/;"	m	struct:vteprec_acl_entry
source_mac	vtep/vtep-idl.h	/^	char *source_mac;$/;"	m	struct:vteprec_acl_entry
source_mask	vtep/vtep-idl.h	/^	char *source_mask;$/;"	m	struct:vteprec_acl_entry
source_port_max	vtep/vtep-idl.h	/^	int64_t *source_port_max;$/;"	m	struct:vteprec_acl_entry
source_port_min	vtep/vtep-idl.h	/^	int64_t *source_port_min;$/;"	m	struct:vteprec_acl_entry
spd_add	debian/ovs-monitor-ipsec	/^    def spd_add(self, local_ip, remote_ip):$/;"	m	class:IPsec
spd_del	debian/ovs-monitor-ipsec	/^    def spd_del(self, local_ip, remote_ip):$/;"	m	class:IPsec
spd_flush	debian/ovs-monitor-ipsec	/^    def spd_flush(self):$/;"	m	class:IPsec
specs	lib/ofp-actions.h	/^    struct ofpact_learn_spec specs[];$/;"	m	struct:ofpact_learn	typeref:struct:ofpact_learn::ofpact_learn_spec
spinlock	datapath-windows/ovsext/TunnelFilter.c	/^    NDIS_SPIN_LOCK spinlock;$/;"	m	struct:_OVS_TUNFLT_REQUEST_LIST	file:
srandom	include/windows/windefs.h	45;"	d
src	datapath-windows/ovsext/DpInternal.h	/^        ovs_be32 src;$/;"	m	struct:OvsIPv4TunnelKey::__anon7
src	datapath-windows/ovsext/Ethernet.h	/^    Eth_Address     src;       \/\/ and the src next (at least all the ones we'll see)$/;"	m	struct:Eth_Header
src	datapath/flow.h	/^				__be32 src;	\/* IP source address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon34::__anon35
src	datapath/flow.h	/^				struct in6_addr src;	\/* IPv6 source address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon37::__anon38	typeref:struct:sw_flow_key::__anon33::__anon37::__anon38::in6_addr
src	datapath/flow.h	/^		__be16 src;		\/* TCP\/UDP\/SCTP source port. *\/$/;"	m	struct:sw_flow_key::__anon32
src	datapath/flow.h	/^		u8     src[ETH_ALEN];	\/* Ethernet source address. *\/$/;"	m	struct:sw_flow_key::__anon28
src	datapath/linux/compat/include/net/flow_keys.h	/^	__be32 src;$/;"	m	struct:flow_keys
src	lib/ofp-actions.c	/^    ovs_be32 src;               \/* Source. *\/$/;"	m	struct:nx_action_output_reg	file:
src	lib/ofp-actions.h	/^    struct mf_subfield src;     \/* NX_LEARN_SRC_FIELD only. *\/$/;"	m	struct:ofpact_learn_spec	typeref:struct:ofpact_learn_spec::mf_subfield
src	lib/ofp-actions.h	/^    struct mf_subfield src;$/;"	m	struct:ofpact_output_reg	typeref:struct:ofpact_output_reg::mf_subfield
src	lib/ofp-actions.h	/^    struct mf_subfield src;$/;"	m	struct:ofpact_reg_move	typeref:struct:ofpact_reg_move::mf_subfield
src	lib/ovsdb-idl.c	/^    struct ovsdb_idl_row *src;  \/* Source row. *\/$/;"	m	struct:ovsdb_idl_arc	typeref:struct:ovsdb_idl_arc::ovsdb_idl_row	file:
src	lib/sflow.h	/^    SFLAddress src;    \/* Source address *\/$/;"	m	struct:_SFLExtended_nat
src	ovsdb/row.h	/^    struct ovsdb_row *src;      \/* Source row. *\/$/;"	m	struct:ovsdb_weak_ref	typeref:struct:ovsdb_weak_ref::ovsdb_row
srcIpAddr	datapath-windows/ovsext/IpHelper.h	/^        UINT32        srcIpAddr;$/;"	m	struct:_OVS_FWD_INFO::__anon19
srcMacAddr	datapath-windows/ovsext/IpHelper.h	/^        UINT8         srcMacAddr[ETH_ADDR_LEN];$/;"	m	struct:_OVS_FWD_INFO::__anon19
srcPortNo	datapath-windows/ovsext/BufferMgmt.h	/^        UINT32 srcPortNo;$/;"	m	struct:_OVS_BUFFER_CONTEXT::__anon2
srcPortNo	datapath-windows/ovsext/IpHelper.h	/^        UINT32        srcPortNo;$/;"	m	struct:_OVS_FWD_INFO::__anon19
srcVportNo	datapath-windows/ovsext/Actions.c	/^    UINT32 srcVportNo;$/;"	m	struct:OvsForwardingContext	file:
src_addr	lib/netflow.h	/^    ovs_be32 src_addr;             \/* Source IP address. *\/$/;"	m	struct:netflow_v5_record
src_arcs	lib/ovsdb-idl-provider.h	/^    struct ovs_list src_arcs;   \/* Forward arcs (ovsdb_idl_arc.src_node). *\/$/;"	m	struct:ovsdb_idl_row	typeref:struct:ovsdb_idl_row::ovs_list
src_as	lib/netflow.h	/^    ovs_be16 src_as;               \/* Source AS ID.  Set to 0. *\/$/;"	m	struct:netflow_v5_record
src_as	lib/sflow.h	/^    u_int32_t src_as;                         \/* AS number of source (origin) *\/$/;"	m	struct:_SFLExtended_gateway
src_charset	lib/sflow.h	/^    u_int32_t src_charset;  \/* MIBEnum value of character set used to encode a string - See RFC 2978$/;"	m	struct:_SFLExtended_user
src_imm	lib/ofp-actions.h	/^    union mf_subvalue src_imm;  \/* NX_LEARN_SRC_IMMEDIATE only. *\/$/;"	m	struct:ofpact_learn_spec	typeref:union:ofpact_learn_spec::mf_subvalue
src_ip	lib/sflow.h	/^    SFLIPv4   src_ip;      \/* Source IP Address *\/$/;"	m	struct:_SFLSampled_ipv4
src_ip	lib/sflow.h	/^    SFLIPv6   src_ip;       \/* Source IP Address *\/$/;"	m	struct:_SFLSampled_ipv6
src_mac	lib/sflow.h	/^    struct eth_addr src_mac;    \/* 6 bytes *\/$/;"	m	struct:_SFLSampled_ethernet	typeref:struct:_SFLSampled_ethernet::eth_addr
src_mac	vtep/vtep-idl.h	/^	char *src_mac;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_arp_sources_local
src_mac	vtep/vtep-idl.h	/^	char *src_mac;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_arp_sources_remote
src_mask	lib/netflow.h	/^    uint8_t  src_mask;             \/* Source mask bits.  Set to 0. *\/$/;"	m	struct:netflow_v5_record
src_mask	lib/sflow.h	/^    u_int32_t src_mask;               \/* Source address prefix mask bits *\/$/;"	m	struct:_SFLExtended_router
src_mirrors	ofproto/ofproto-dpif-mirror.c	/^    mirror_mask_t src_mirrors;  \/* Mirrors triggered when packet received. *\/$/;"	m	struct:mbundle	file:
src_node	lib/ovsdb-idl.c	/^    struct ovs_list src_node;   \/* In src->src_arcs list. *\/$/;"	m	struct:ovsdb_idl_arc	typeref:struct:ovsdb_idl_arc::ovs_list	file:
src_node	ovsdb/row.h	/^    struct ovs_list src_node;   \/* In src->src_refs list. *\/$/;"	m	struct:ovsdb_weak_ref	typeref:struct:ovsdb_weak_ref::ovs_list
src_offset	lib/ofp-actions.c	/^    ovs_be16 src_offset;        \/* Starting bit offset in source. *\/$/;"	m	struct:ofp15_action_copy_field	file:
src_offset	lib/ofp-actions.c	/^    ovs_be16 src_offset;        \/* Starting bit offset in source. *\/$/;"	m	struct:onf_action_copy_field	file:
src_ofs	lib/ofp-actions.c	/^    ovs_be16 src_ofs;               \/* Starting bit offset in source. *\/$/;"	m	struct:nx_action_reg_move	file:
src_peer_as	lib/sflow.h	/^    u_int32_t src_peer_as;                    \/* AS number of source peer *\/$/;"	m	struct:_SFLExtended_gateway
src_port	lib/netflow.h	/^    ovs_be16 src_port;$/;"	m	struct:netflow_v5_record
src_port	lib/sflow.h	/^    u_int32_t src_port;     \/* TCP\/UDP source port number or equivalent *\/$/;"	m	struct:_SFLSampled_ipv6
src_port	lib/sflow.h	/^    u_int32_t src_port;    \/* TCP\/UDP source port number or equivalent *\/$/;"	m	struct:_SFLSampled_ipv4
src_priority	lib/sflow.h	/^    u_int32_t src_priority;   \/* The 802.1p priority *\/$/;"	m	struct:_SFLExtended_switch
src_refs	ovsdb/row.h	/^    struct ovs_list src_refs;   \/* Weak references from this row. *\/$/;"	m	struct:ovsdb_row	typeref:struct:ovsdb_row::ovs_list
src_type	lib/ofp-actions.h	/^    int src_type;               \/* One of NX_LEARN_SRC_*. *\/$/;"	m	struct:ofpact_learn_spec
src_user	lib/sflow.h	/^    SFLString src_user;$/;"	m	struct:_SFLExtended_user
src_vlan	lib/sflow.h	/^    u_int32_t src_vlan;       \/* The 802.1Q VLAN id of incomming frame *\/$/;"	m	struct:_SFLExtended_switch
src_vlans	ofproto/ofproto.h	/^    unsigned long *src_vlans;   \/* vlan_bitmap, NULL selects all VLANs. *\/$/;"	m	struct:ofproto_mirror_settings
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	datapath/Makefile	/^srcdir = .$/;"	m
srcs	ofproto/ofproto-dpif-mirror.c	/^    struct hmapx srcs;          \/* Contains "struct mbundle*"s. *\/$/;"	m	struct:mirror	typeref:struct:mirror::hmapx	file:
srcs	ofproto/ofproto.h	/^    void **srcs;                \/* A set of registered ofbundle handles. *\/$/;"	m	struct:ofproto_mirror_settings
ss_family	include/sparse/sys/socket.h	/^    sa_family_t ss_family;$/;"	m	struct:sockaddr_storage
ss_format_address	lib/socket-util.c	/^ss_format_address(const struct sockaddr_storage *ss,$/;"	f
ss_get_port	lib/socket-util.c	/^ss_get_port(const struct sockaddr_storage *ss)$/;"	f
ss_length	lib/socket-util.c	/^ss_length(const struct sockaddr_storage *ss)$/;"	f
ssap	datapath-windows/ovsext/Ethernet.h	/^    UINT8   ssap;$/;"	m	struct:Eth_LLC16
ssap	datapath-windows/ovsext/Ethernet.h	/^    UINT8   ssap;$/;"	m	struct:Eth_LLC8
sset	lib/sset.h	/^struct sset {$/;"	s
sset_add	lib/sset.c	/^sset_add(struct sset *set, const char *name)$/;"	f
sset_add__	lib/sset.c	/^sset_add__(struct sset *set, const char *name, size_t length, size_t hash)$/;"	f	file:
sset_add_and_free	lib/sset.c	/^sset_add_and_free(struct sset *set, char *name)$/;"	f
sset_add_array	lib/sset.c	/^sset_add_array(struct sset *set, char **names, size_t n)$/;"	f
sset_add_assert	lib/sset.c	/^sset_add_assert(struct sset *set, const char *name)$/;"	f
sset_array	lib/sset.c	/^sset_array(const struct sset *set)$/;"	f
sset_at_position	lib/sset.c	/^sset_at_position(const struct sset *set, uint32_t *bucketp, uint32_t *offsetp)$/;"	f
sset_clear	lib/sset.c	/^sset_clear(struct sset *set)$/;"	f
sset_clone	lib/sset.c	/^sset_clone(struct sset *set, const struct sset *orig)$/;"	f
sset_contains	lib/sset.c	/^sset_contains(const struct sset *set, const char *name)$/;"	f
sset_count	lib/sset.c	/^sset_count(const struct sset *set)$/;"	f
sset_delete	lib/sset.c	/^sset_delete(struct sset *set, struct sset_node *node)$/;"	f
sset_destroy	lib/sset.c	/^sset_destroy(struct sset *set)$/;"	f
sset_equals	lib/sset.c	/^sset_equals(const struct sset *a, const struct sset *b)$/;"	f
sset_find	lib/sset.c	/^sset_find(const struct sset *set, const char *name)$/;"	f
sset_find__	lib/sset.c	/^sset_find__(const struct sset *set, const char *name, size_t hash)$/;"	f	file:
sset_find_and_delete	lib/sset.c	/^sset_find_and_delete(struct sset *set, const char *name)$/;"	f
sset_find_and_delete_assert	lib/sset.c	/^sset_find_and_delete_assert(struct sset *set, const char *name)$/;"	f
sset_from_json	ovsdb/ovsdb-server.c	/^sset_from_json(struct sset *sset, const struct json *array)$/;"	f	file:
sset_init	lib/sset.c	/^sset_init(struct sset *set)$/;"	f
sset_intersect	lib/sset.c	/^sset_intersect(struct sset *a, const struct sset *b)$/;"	f
sset_is_empty	lib/sset.c	/^sset_is_empty(const struct sset *set)$/;"	f
sset_moved	lib/sset.c	/^sset_moved(struct sset *set)$/;"	f
sset_node	lib/sset.h	/^struct sset_node {$/;"	s
sset_pop	lib/sset.c	/^sset_pop(struct sset *set)$/;"	f
sset_sort	lib/sset.c	/^sset_sort(const struct sset *set)$/;"	f
sset_swap	lib/sset.c	/^sset_swap(struct sset *a, struct sset *b)$/;"	f
sset_to_json	ovsdb/ovsdb-server.c	/^sset_to_json(const struct sset *sset)$/;"	f	file:
ssize_t	include/windows/windefs.h	35;"	d
ssl	lib/stream-ssl.c	/^    SSL *ssl;$/;"	m	struct:ssl_stream	file:
ssl	lib/vswitch-idl.h	/^	struct ovsrec_ssl *ssl;$/;"	m	struct:ovsrec_open_vswitch	typeref:struct:ovsrec_open_vswitch::ovsrec_ssl
ssl_alert_description_to_string	lib/stream-ssl.c	/^ssl_alert_description_to_string(uint8_t type)$/;"	f	file:
ssl_alert_level_to_string	lib/stream-ssl.c	/^ssl_alert_level_to_string(uint8_t type)$/;"	f	file:
ssl_clear_txbuf	lib/stream-ssl.c	/^ssl_clear_txbuf(struct ssl_stream *sslv)$/;"	f	file:
ssl_close	lib/stream-ssl.c	/^ssl_close(struct stream *stream)$/;"	f	file:
ssl_config_file	lib/stream-ssl.c	/^struct ssl_config_file {$/;"	s	file:
ssl_connect	lib/stream-ssl.c	/^ssl_connect(struct stream *stream)$/;"	f	file:
ssl_do_tx	lib/stream-ssl.c	/^ssl_do_tx(struct stream *stream)$/;"	f	file:
ssl_handshake_type_to_string	lib/stream-ssl.c	/^ssl_handshake_type_to_string(uint8_t type)$/;"	f	file:
ssl_init	lib/stream-ssl.c	/^ssl_init(void)$/;"	f	file:
ssl_open	lib/stream-ssl.c	/^ssl_open(const char *name, char *suffix, struct stream **streamp, uint8_t dscp)$/;"	f	file:
ssl_protocol_cb	lib/stream-ssl.c	/^ssl_protocol_cb(int write_p, int version OVS_UNUSED, int content_type,$/;"	f	file:
ssl_recv	lib/stream-ssl.c	/^ssl_recv(struct stream *stream, void *buffer, size_t n)$/;"	f	file:
ssl_run	lib/stream-ssl.c	/^ssl_run(struct stream *stream)$/;"	f	file:
ssl_run_wait	lib/stream-ssl.c	/^ssl_run_wait(struct stream *stream)$/;"	f	file:
ssl_send	lib/stream-ssl.c	/^ssl_send(struct stream *stream, const void *buffer, size_t n)$/;"	f	file:
ssl_state	lib/stream-ssl.c	/^enum ssl_state {$/;"	g	file:
ssl_stream	lib/stream-ssl.c	/^struct ssl_stream$/;"	s	file:
ssl_stream_cast	lib/stream-ssl.c	/^ssl_stream_cast(struct stream *stream)$/;"	f	file:
ssl_stream_class	lib/stream-ssl.c	/^const struct stream_class ssl_stream_class = {$/;"	v	typeref:struct:stream_class
ssl_vconn_class	lib/vconn-stream.c	/^const struct vconn_class ssl_vconn_class = STREAM_INIT("ssl");$/;"	v	typeref:struct:vconn_class
ssl_wait	lib/stream-ssl.c	/^ssl_wait(struct stream *stream, enum stream_wait_type wait)$/;"	f	file:
ssl_wants_io	lib/stream-ssl.c	/^ssl_wants_io(int ssl_error)$/;"	f	file:
stack	lib/json.c	/^    struct json_parser_node *stack;$/;"	m	struct:json_parser	typeref:struct:json_parser::json_parser_node	file:
stack	lib/sflow.h	/^    SFLVlanStack stack;  \/* List of stripped 802.1Q TPID\/TCI layers. Each$/;"	m	struct:_SFLExtended_vlan_tunnel
stack	lib/sflow.h	/^    u_int32_t *stack; \/* first entry is top of stack - see RFC 3032 for encoding *\/$/;"	m	struct:_SFLLabelStack
stack	ofproto/ofproto-dpif-rid.h	/^    struct ofpbuf *stack;         \/* Stack if any. *\/$/;"	m	struct:recirc_state	typeref:struct:recirc_state::ofpbuf
stack	ofproto/ofproto-dpif-xlate.c	/^    struct ofpbuf stack;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::ofpbuf	file:
stage	ovn/northd/ovn-northd.c	/^    enum ovn_stage stage;$/;"	m	struct:ovn_lflow	typeref:enum:ovn_lflow::ovn_stage	file:
start	datapath/flow.h	/^	unsigned short int start;$/;"	m	struct:sw_flow_key_range
start	debian/openvswitch-switch.init	/^start () {$/;"	f
start	lib/ovs-thread.c	/^    void *(*start)(void *);$/;"	m	struct:ovsthread_aux	file:
start	ovn/lib/lex.h	/^    const char *start;          \/* Start of current token in 'input'. *\/$/;"	m	struct:lexer
start	rhel/etc_init.d_openvswitch	/^start () {$/;"	f
start	utilities/ovs-vlan-test	/^    def start(self):$/;"	m	class:UDPReceiver
start	xenserver/etc_init.d_openvswitch	/^start () {$/;"	f
start	xenserver/etc_init.d_openvswitch-xapi-update	/^function start {$/;"	f
startDocument	ofproto/ipfix-gen-entities	/^    def startDocument(self):$/;"	m	class:IpfixEntityHandler
startElement	ofproto/ipfix-gen-entities	/^    def startElement(self, name, attrs):$/;"	f
startProtocol	python/ovstest/udp.py	/^    def startProtocol(self):$/;"	m	class:UdpSender
start_controller	ovn/utilities/ovn-ctl	/^start_controller () {$/;"	f
start_daemon	tests/system-kmod-testsuite	/^start_daemon () {$/;"	f
start_daemon	tests/system-userspace-testsuite	/^start_daemon () {$/;"	f
start_daemon	tests/testsuite	/^start_daemon () {$/;"	f
start_forwarding	utilities/ovs-ctl	/^start_forwarding () {$/;"	f
start_forwarding	utilities/ovs-ctl.in	/^start_forwarding () {$/;"	f
start_local_server	python/ovstest/util.py	/^def start_local_server(port):$/;"	f
start_northd	ovn/utilities/ovn-ctl	/^start_northd () {$/;"	f
start_ovs_xapi_sync	xenserver/etc_init.d_openvswitch	/^start_ovs_xapi_sync () {$/;"	f
start_ovsdb	utilities/ovs-ctl	/^start_ovsdb () {$/;"	f
start_ovsdb	utilities/ovs-ctl.in	/^start_ovsdb () {$/;"	f
start_process	python/ovstest/util.py	/^def start_process(args):$/;"	f
start_property	lib/ofp-util.c	/^start_property(struct ofpbuf *msg, uint16_t type)$/;"	f	file:
start_queue_dump	lib/netdev-linux.c	/^start_queue_dump(const struct netdev *netdev, struct queue_dump_state *state)$/;"	f	file:
start_rpc_server	python/ovstest/rpcserver.py	/^def start_rpc_server(port):$/;"	f
start_server	debian/openvswitch-ipsec.init	/^start_server() {$/;"	f
start_server	debian/openvswitch-testcontroller.init	/^start_server() {$/;"	f
start_thread	utilities/ovs-vlan-test	/^def start_thread(target, args):$/;"	f
start_vhost_loop	lib/netdev-dpdk.c	/^start_vhost_loop(void *dummy OVS_UNUSED)$/;"	f	file:
stat	lib/ofp-msgs.c	/^    uint16_t stat;              \/* From ofp10_stats_msg or ofp11_stats_msg. *\/$/;"	m	struct:ofphdrs	file:
stat	utilities/ovs-check-dead-ifs	/^import stat$/;"	i
state	include/openflow/openflow-1.0.h	/^    ovs_be32 state;         \/* Bitmap of OFPPS_* and OFPPS10_* flags. *\/$/;"	m	struct:ofp10_phy_port
state	include/openflow/openflow-1.1.h	/^    ovs_be32 state;         \/* Bitmap of OFPPS_* and OFPPS11_* flags. *\/$/;"	m	struct:ofp11_port
state	include/openflow/openflow-1.4.h	/^    ovs_be32 state;         \/* Bitmap of OFPPS_* flags. *\/$/;"	m	struct:ofp14_port
state	lib/bfd.c	/^    enum state state;             \/* bfd.SessionState. *\/$/;"	m	struct:bfd	typeref:enum:bfd::state	file:
state	lib/bfd.c	/^enum state {$/;"	g	file:
state	lib/dpif.h	/^    void *state;$/;"	m	struct:dpif_port_dump
state	lib/learning-switch.c	/^    enum lswitch_state state;$/;"	m	struct:lswitch	typeref:enum:lswitch::lswitch_state	file:
state	lib/lldp/lldpd-structs.h	/^    int               state;$/;"	m	struct:lldpd_neighbor_change
state	lib/netdev.h	/^    void *state;$/;"	m	struct:netdev_queue_dump
state	lib/ofp-util.h	/^    enum ofputil_port_state state;$/;"	m	struct:ofputil_phy_port	typeref:enum:ofputil_phy_port::ofputil_port_state
state	lib/ovsdb-idl.c	/^    enum ovsdb_idl_state state;$/;"	m	struct:ovsdb_idl	typeref:enum:ovsdb_idl::ovsdb_idl_state	file:
state	lib/rconn.c	/^    enum state state;$/;"	m	struct:rconn	typeref:enum:rconn::state	file:
state	lib/rconn.c	/^enum state {$/;"	g	file:
state	lib/reconnect.c	/^    enum state state;$/;"	m	struct:reconnect	typeref:enum:reconnect::state	file:
state	lib/reconnect.c	/^enum state {$/;"	g	file:
state	lib/reconnect.h	/^    const char *state;            \/* FSM state. *\/$/;"	m	struct:reconnect_stats
state	lib/stp.c	/^    enum stp_state state;           \/* 8.5.5.2: Current state. *\/$/;"	m	struct:stp_port	typeref:enum:stp_port::stp_state	file:
state	lib/stream-provider.h	/^    int state;$/;"	m	struct:stream
state	lib/stream-ssl.c	/^    enum ssl_state state;$/;"	m	struct:ssl_stream	typeref:enum:ssl_stream::ssl_state	file:
state	lib/vconn-provider.h	/^    int state;$/;"	m	struct:vconn
state	ofproto/bundles.h	/^    enum bundle_state state;$/;"	m	struct:ofp_bundle	typeref:enum:ofp_bundle::bundle_state
state	ofproto/ofproto-dpif-rid.h	/^    const struct recirc_state state;$/;"	m	struct:recirc_id_node	typeref:struct:recirc_id_node::recirc_state
state	ofproto/ofproto-dpif-xlate.c	/^    enum ofputil_port_state state;   \/* OpenFlow port state. *\/$/;"	m	struct:xport	typeref:enum:xport::ofputil_port_state	file:
state	ofproto/ofproto.h	/^    enum rstp_state state;$/;"	m	struct:ofproto_port_rstp_status	typeref:enum:ofproto_port_rstp_status::rstp_state
state	ofproto/ofproto.h	/^    enum stp_state state;$/;"	m	struct:ofproto_port_stp_status	typeref:enum:ofproto_port_stp_status::stp_state
state	ofproto/ofproto.h	/^    void *state;$/;"	m	struct:ofproto_port_dump
state	ovn/controller/ofctrl.c	/^static enum ofctrl_state state;$/;"	v	typeref:enum:ofctrl_state	file:
state	ovsdb/jsonrpc-server.h	/^    const char *state;$/;"	m	struct:ovsdb_jsonrpc_remote_status
state	tests/test-ovn.c	/^    unsigned int state;$/;"	m	struct:tree_shape	file:
state_changed	lib/stp.c	/^    bool state_changed;$/;"	m	struct:stp_port	file:
state_elapsed	lib/reconnect.h	/^    unsigned int state_elapsed;   \/* Time since FSM state entered. *\/$/;"	m	struct:reconnect_stats
state_entered	lib/rconn.c	/^    time_t state_entered;$/;"	m	struct:rconn	file:
state_entered	lib/reconnect.c	/^    long long int state_entered;$/;"	m	struct:reconnect	file:
state_metadata_tunnel	ofproto/ofproto-dpif-rid.h	/^    struct flow_tnl state_metadata_tunnel;$/;"	m	struct:recirc_id_node	typeref:struct:recirc_id_node::flow_tnl
state_name	lib/rconn.c	/^state_name(enum state state)$/;"	f	file:
state_seqno	lib/ovsdb-idl.c	/^    unsigned int state_seqno;$/;"	m	struct:ovsdb_idl	file:
static_routes	vtep/vtep-idl.h	/^	struct smap static_routes;$/;"	m	struct:vteprec_logical_router	typeref:struct:vteprec_logical_router::smap
statistics	lib/vswitch-idl.h	/^	struct smap statistics;$/;"	m	struct:ovsrec_open_vswitch	typeref:struct:ovsrec_open_vswitch::smap
stats	datapath-windows/ovsext/DpInternal.h	/^    struct OvsFlowStats stats;$/;"	m	struct:OvsFlowInfo	typeref:struct:OvsFlowInfo::OvsFlowStats
stats	datapath-windows/ovsext/Vport.h	/^    OVS_VPORT_STATS        stats;$/;"	m	struct:_OVS_VPORT_ENTRY
stats	datapath/flow.h	/^	struct flow_stats __rcu *stats[]; \/* One for each NUMA node.  First one$/;"	m	struct:sw_flow	typeref:struct:sw_flow::__rcu
stats	lib/dpif-netdev.c	/^    struct dp_netdev_flow_stats stats;$/;"	m	struct:dp_netdev_flow	typeref:struct:dp_netdev_flow::dp_netdev_flow_stats	file:
stats	lib/dpif-netdev.c	/^    struct dp_netdev_pmd_stats stats;$/;"	m	struct:dp_netdev_pmd_thread	typeref:struct:dp_netdev_pmd_thread::dp_netdev_pmd_stats	file:
stats	lib/dpif-netlink.c	/^    const struct ovs_dp_stats *stats;  \/* OVS_DP_ATTR_STATS. *\/$/;"	m	struct:dpif_netlink_dp	typeref:struct:dpif_netlink_dp::ovs_dp_stats	file:
stats	lib/dpif-netlink.c	/^    const struct ovs_flow_stats *stats; \/* OVS_FLOW_ATTR_STATS. *\/$/;"	m	struct:dpif_netlink_flow	typeref:struct:dpif_netlink_flow::ovs_flow_stats	file:
stats	lib/dpif-netlink.c	/^    struct dpif_flow_stats stats;$/;"	m	struct:dpif_netlink_flow_dump_thread	typeref:struct:dpif_netlink_flow_dump_thread::dpif_flow_stats	file:
stats	lib/dpif-netlink.h	/^    const struct ovs_vport_stats *stats;   \/* OVS_VPORT_ATTR_STATS. *\/$/;"	m	struct:dpif_netlink_vport	typeref:struct:dpif_netlink_vport::ovs_vport_stats
stats	lib/dpif.h	/^    struct dpif_flow_stats *stats;  \/* Optional flow statistics. *\/$/;"	m	struct:dpif_flow_del	typeref:struct:dpif_flow_del::dpif_flow_stats
stats	lib/dpif.h	/^    struct dpif_flow_stats *stats;  \/* Optional flow statistics. *\/$/;"	m	struct:dpif_flow_put	typeref:struct:dpif_flow_put::dpif_flow_stats
stats	lib/dpif.h	/^    struct dpif_flow_stats stats; \/* Flow statistics. *\/$/;"	m	struct:dpif_flow	typeref:struct:dpif_flow::dpif_flow_stats
stats	lib/netdev-dpdk.c	/^    struct netdev_stats stats;$/;"	m	struct:netdev_dpdk	typeref:struct:netdev_dpdk::netdev_stats	file:
stats	lib/netdev-vport.c	/^    struct netdev_stats stats;$/;"	m	struct:netdev_vport	typeref:struct:netdev_vport::netdev_stats	file:
stats	lib/ofp-util.h	/^    struct bucket_counter stats;$/;"	m	struct:ofputil_bucket	typeref:struct:ofputil_bucket::bucket_counter
stats	lib/ofp-util.h	/^    struct netdev_stats stats;$/;"	m	struct:ofputil_port_stats	typeref:struct:ofputil_port_stats::netdev_stats
stats	ofproto/ofproto-dpif-upcall.c	/^    struct dpif_flow_stats stats; \/* Stats for 'op'. *\/$/;"	m	struct:ukey_op	typeref:struct:ukey_op::dpif_flow_stats	file:
stats_last_writer	datapath/flow.h	/^	int stats_last_writer;		\/* NUMA-node id of the last writer on$/;"	m	struct:sw_flow
stats_lock	lib/netdev-dpdk.c	/^    rte_spinlock_t stats_lock;$/;"	m	struct:netdev_dpdk	file:
stats_mutex	ofproto/ofproto-dpif.c	/^    struct ovs_mutex stats_mutex;$/;"	m	struct:group_dpif	typeref:struct:group_dpif::ovs_mutex	file:
stats_mutex	ofproto/ofproto-dpif.c	/^    struct ovs_mutex stats_mutex;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::ovs_mutex	file:
stats_mutex	ofproto/ofproto-dpif.c	/^    struct ovs_mutex stats_mutex;$/;"	m	struct:rule_dpif	typeref:struct:rule_dpif::ovs_mutex	file:
stats_percpu	datapath/datapath.h	/^	struct dp_stats_percpu __percpu *stats_percpu;$/;"	m	struct:datapath	typeref:struct:datapath::__percpu
stats_timer	vswitchd/bridge.c	/^static long long int stats_timer = LLONG_MIN;$/;"	v	file:
stats_timer_interval	vswitchd/bridge.c	/^static int stats_timer_interval;$/;"	v	file:
stats_txn	vswitchd/bridge.c	/^static struct ovsdb_idl_txn *stats_txn;$/;"	v	typeref:struct:ovsdb_idl_txn	file:
stats_update_wait	vswitchd/bridge.c	/^stats_update_wait(void)$/;"	f	file:
stats_zero	lib/dpif-netdev.c	/^    unsigned long long stats_zero[DP_N_STATS];$/;"	m	struct:dp_netdev_pmd_thread	file:
status	datapath-windows/ovsext/DpInternal.h	/^    uint32_t status;$/;"	m	struct:_OVS_EVENT_ENTRY
status	datapath-windows/ovsext/DpInternal.h	/^    uint32_t status;$/;"	m	struct:_OVS_VPORT_EXT_INFO
status	datapath-windows/ovsext/Event.h	/^    UINT32 status;$/;"	m	struct:_OVS_EVENT_QUEUE_ELEM
status	datapath-windows/ovsext/Oid.c	/^    NDIS_STATUS status;$/;"	m	struct:_OVS_OID_CONTEXT	file:
status	lib/dpif-netdev.c	/^    int status;$/;"	m	struct:dpif_netdev_flow_dump	file:
status	lib/dpif-netlink.c	/^    atomic_int status;$/;"	m	struct:dpif_netlink_flow_dump	file:
status	lib/jsonrpc.c	/^    int status;$/;"	m	struct:jsonrpc	file:
status	lib/lacp.c	/^    enum slave_status status;     \/* Slave status. *\/$/;"	m	struct:slave	typeref:enum:slave::slave_status	file:
status	lib/lldp/aa-structs.h	/^    uint16_t status;$/;"	m	struct:lldpd_aa_isid_vlan_map_data
status	lib/ovs-lldp.c	/^    enum aa_status   status;$/;"	m	struct:aa_mapping_internal	typeref:enum:aa_mapping_internal::aa_status	file:
status	lib/ovsdb-idl.c	/^    enum ovsdb_idl_txn_status status;$/;"	m	struct:ovsdb_idl_txn	typeref:enum:ovsdb_idl_txn::ovsdb_idl_txn_status	file:
status	lib/process.c	/^    int status;$/;"	m	struct:process	file:
status	lib/vswitch-idl.h	/^	struct smap status;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::smap
status	lib/vswitch-idl.h	/^	struct smap status;$/;"	m	struct:ovsrec_controller	typeref:struct:ovsrec_controller::smap
status	lib/vswitch-idl.h	/^	struct smap status;$/;"	m	struct:ovsrec_interface	typeref:struct:ovsrec_interface::smap
status	lib/vswitch-idl.h	/^	struct smap status;$/;"	m	struct:ovsrec_manager	typeref:struct:ovsrec_manager::smap
status	lib/vswitch-idl.h	/^	struct smap status;$/;"	m	struct:ovsrec_port	typeref:struct:ovsrec_port::smap
status	vtep/vtep-idl.h	/^	struct smap status;$/;"	m	struct:vteprec_manager	typeref:struct:vteprec_manager::smap
status	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def status(self):$/;"	m	class:VSwitchService
status_changed	lib/bfd.c	/^    bool status_changed;$/;"	m	struct:bfd	file:
status_changed	lib/cfm.c	/^    bool status_changed;$/;"	m	struct:cfm	file:
status_msg	python/ovs/process.py	/^def status_msg(status):$/;"	f
status_to_string	python/ovs/db/idl.py	/^    def status_to_string(status):$/;"	m	class:Transaction
status_txn	vswitchd/bridge.c	/^static struct ovsdb_idl_txn *status_txn;$/;"	v	typeref:struct:ovsdb_idl_txn	file:
status_txn_try_again	vswitchd/bridge.c	/^static bool status_txn_try_again;$/;"	v	file:
status_update_wait	vswitchd/bridge.c	/^status_update_wait(void)$/;"	f	file:
stc1	datapath-windows/ovsext/resource.h	1293;"	d
stc10	datapath-windows/ovsext/resource.h	1302;"	d
stc11	datapath-windows/ovsext/resource.h	1303;"	d
stc12	datapath-windows/ovsext/resource.h	1304;"	d
stc13	datapath-windows/ovsext/resource.h	1305;"	d
stc14	datapath-windows/ovsext/resource.h	1306;"	d
stc15	datapath-windows/ovsext/resource.h	1307;"	d
stc16	datapath-windows/ovsext/resource.h	1308;"	d
stc17	datapath-windows/ovsext/resource.h	1309;"	d
stc18	datapath-windows/ovsext/resource.h	1310;"	d
stc19	datapath-windows/ovsext/resource.h	1311;"	d
stc2	datapath-windows/ovsext/resource.h	1294;"	d
stc20	datapath-windows/ovsext/resource.h	1312;"	d
stc21	datapath-windows/ovsext/resource.h	1313;"	d
stc22	datapath-windows/ovsext/resource.h	1314;"	d
stc23	datapath-windows/ovsext/resource.h	1315;"	d
stc24	datapath-windows/ovsext/resource.h	1316;"	d
stc25	datapath-windows/ovsext/resource.h	1317;"	d
stc26	datapath-windows/ovsext/resource.h	1318;"	d
stc27	datapath-windows/ovsext/resource.h	1319;"	d
stc28	datapath-windows/ovsext/resource.h	1320;"	d
stc29	datapath-windows/ovsext/resource.h	1321;"	d
stc3	datapath-windows/ovsext/resource.h	1295;"	d
stc30	datapath-windows/ovsext/resource.h	1322;"	d
stc31	datapath-windows/ovsext/resource.h	1323;"	d
stc32	datapath-windows/ovsext/resource.h	1324;"	d
stc4	datapath-windows/ovsext/resource.h	1296;"	d
stc5	datapath-windows/ovsext/resource.h	1297;"	d
stc6	datapath-windows/ovsext/resource.h	1298;"	d
stc7	datapath-windows/ovsext/resource.h	1299;"	d
stc8	datapath-windows/ovsext/resource.h	1300;"	d
stc9	datapath-windows/ovsext/resource.h	1301;"	d
stdin	utilities/ovs-parse-backtrace	/^    stdin = sys.stdin.read()$/;"	v
stop	debian/openvswitch-switch.init	/^stop () {$/;"	f
stop	rhel/etc_init.d_openvswitch	/^stop () {$/;"	f
stop	utilities/ovs-dpctl-top	/^    def stop(self):$/;"	m	class:DecayThread
stop	utilities/ovs-vlan-test	/^    def stop(self):$/;"	m	class:UDPReceiver
stop	xenserver/etc_init.d_openvswitch	/^stop () {$/;"	f
stopEvent	datapath-windows/ovsext/TunnelFilter.c	/^    KEVENT                  stopEvent;$/;"	m	struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
stopProducing	python/ovstest/tcp.py	/^    def stopProducing(self):$/;"	m	class:Producer
stopProtocol	python/ovstest/udp.py	/^    def stopProtocol(self):$/;"	m	class:UdpSender
stop_controller	ovn/utilities/ovn-ctl	/^stop_controller () {$/;"	f
stop_forwarding	utilities/ovs-ctl	/^stop_forwarding () {$/;"	f
stop_forwarding	utilities/ovs-ctl.in	/^stop_forwarding () {$/;"	f
stop_northd	ovn/utilities/ovn-ctl	/^stop_northd () {$/;"	f
stop_ovsdb	utilities/ovs-ctl	/^stop_ovsdb () {$/;"	f
stop_ovsdb	utilities/ovs-ctl.in	/^stop_ovsdb () {$/;"	f
stop_server	debian/openvswitch-ipsec.init	/^stop_server() {$/;"	f
stop_server	debian/openvswitch-testcontroller.init	/^stop_server() {$/;"	f
stored_sig_nr	lib/fatal-signal.c	/^static volatile sig_atomic_t stored_sig_nr = SIG_ATOMIC_MAX;$/;"	v	file:
stp	lib/stp.c	/^    struct stp *stp;$/;"	m	struct:stp_port	typeref:struct:stp_port::stp	file:
stp	lib/stp.c	/^VLOG_DEFINE_THIS_MODULE(stp);$/;"	v
stp	lib/stp.c	/^struct stp {$/;"	s	file:
stp	ofproto/ofproto-dpif-xlate.c	/^    struct stp *stp;              \/* STP or null if disabled. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::stp	file:
stp	ofproto/ofproto-dpif.c	/^    struct stp *stp;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::stp	file:
stp	tests/test-stp.c	/^    struct stp *stp;$/;"	m	struct:bridge	typeref:struct:bridge::stp	file:
stp_check_and_reset_fdb_flush	lib/stp.c	/^stp_check_and_reset_fdb_flush(struct stp *stp)$/;"	f
stp_config_bpdu_flags	lib/stp.c	/^enum stp_config_bpdu_flags {$/;"	g	file:
stp_convert_speed_to_cost	lib/stp.c	/^stp_convert_speed_to_cost(unsigned int speed)$/;"	f
stp_create	lib/stp.c	/^stp_create(const char *name, stp_identifier bridge_id,$/;"	f
stp_enable	lib/vswitch-idl.h	/^	bool stp_enable;$/;"	m	struct:ovsrec_bridge
stp_forward_in_state	lib/stp.c	/^stp_forward_in_state(enum stp_state state)$/;"	f
stp_get_bridge_id	lib/stp.c	/^stp_get_bridge_id(const struct stp *stp)$/;"	f
stp_get_changed_port	lib/stp.c	/^stp_get_changed_port(struct stp *stp, struct stp_port **portp)$/;"	f
stp_get_designated_root	lib/stp.c	/^stp_get_designated_root(const struct stp *stp)$/;"	f
stp_get_forward_delay	lib/stp.c	/^stp_get_forward_delay(const struct stp *stp)$/;"	f
stp_get_hello_time	lib/stp.c	/^stp_get_hello_time(const struct stp *stp)$/;"	f
stp_get_max_age	lib/stp.c	/^stp_get_max_age(const struct stp *stp)$/;"	f
stp_get_name	lib/stp.c	/^stp_get_name(const struct stp *stp)$/;"	f
stp_get_port	lib/stp.c	/^stp_get_port(struct stp *stp, int port_no)$/;"	f
stp_get_root_path_cost	lib/stp.c	/^stp_get_root_path_cost(const struct stp *stp)$/;"	f
stp_get_root_port	lib/stp.c	/^stp_get_root_port(struct stp *stp)$/;"	f
stp_identifier	lib/stp.h	/^typedef uint64_t stp_identifier;$/;"	t
stp_init	lib/stp.c	/^stp_init(void)$/;"	f
stp_is_root_bridge	lib/stp.c	/^stp_is_root_bridge(const struct stp *stp)$/;"	f
stp_last_tick	ofproto/ofproto-dpif.c	/^    long long int stp_last_tick;$/;"	m	struct:ofproto_dpif	file:
stp_learn_in_state	lib/stp.c	/^stp_learn_in_state(enum stp_state state)$/;"	f
stp_port	lib/stp.c	/^struct stp_port {$/;"	s	file:
stp_port	ofproto/ofproto-dpif.c	/^    struct stp_port *stp_port;  \/* Spanning Tree Protocol, if any. *\/$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::stp_port	file:
stp_port_disable	lib/stp.c	/^stp_port_disable(struct stp_port *p)$/;"	f
stp_port_disable_change_detection	lib/stp.c	/^stp_port_disable_change_detection(struct stp_port *p)$/;"	f
stp_port_enable	lib/stp.c	/^stp_port_enable(struct stp_port *p)$/;"	f
stp_port_enable_change_detection	lib/stp.c	/^stp_port_enable_change_detection(struct stp_port *p)$/;"	f
stp_port_get_aux	lib/stp.c	/^stp_port_get_aux(struct stp_port *p)$/;"	f
stp_port_get_counts	lib/stp.c	/^stp_port_get_counts(const struct stp_port *p,$/;"	f
stp_port_get_id	lib/stp.c	/^stp_port_get_id(const struct stp_port *p)$/;"	f
stp_port_get_role	lib/stp.c	/^stp_port_get_role(const struct stp_port *p)$/;"	f
stp_port_get_state	lib/stp.c	/^stp_port_get_state(const struct stp_port *p)$/;"	f
stp_port_get_stp	lib/stp.c	/^stp_port_get_stp(struct stp_port *p)$/;"	f
stp_port_no	lib/stp.c	/^stp_port_no(const struct stp_port *p)$/;"	f
stp_port_no	ofproto/ofproto-dpif-xlate.c	/^    int stp_port_no;                 \/* STP port number or -1 if not in use. *\/$/;"	m	struct:xport	file:
stp_port_set_aux	lib/stp.c	/^stp_port_set_aux(struct stp_port *p, void *aux)$/;"	f
stp_port_set_name	lib/stp.c	/^stp_port_set_name(struct stp_port *p, const char *name)$/;"	f
stp_port_set_path_cost	lib/stp.c	/^stp_port_set_path_cost(struct stp_port *p, uint16_t path_cost)$/;"	f
stp_port_set_priority	lib/stp.c	/^stp_port_set_priority(struct stp_port *p, uint8_t new_priority)$/;"	f
stp_port_set_speed	lib/stp.c	/^stp_port_set_speed(struct stp_port *p, unsigned int speed)$/;"	f
stp_process_packet	ofproto/ofproto-dpif-xlate.c	/^stp_process_packet(const struct xport *xport, const struct dp_packet *packet)$/;"	f	file:
stp_received_bpdu	lib/stp.c	/^stp_received_bpdu(struct stp_port *p, const void *bpdu, size_t bpdu_size)$/;"	f
stp_ref	lib/stp.c	/^stp_ref(const struct stp *stp_)$/;"	f
stp_rl	lib/stp.c	/^static struct vlog_rate_limit stp_rl = VLOG_RATE_LIMIT_INIT(60, 60);$/;"	v	typeref:struct:vlog_rate_limit	file:
stp_role	lib/stp.h	/^enum stp_role {$/;"	g
stp_role_name	lib/stp.c	/^stp_role_name(enum stp_role role)$/;"	f
stp_run	ofproto/ofproto-dpif.c	/^stp_run(struct ofproto_dpif *ofproto)$/;"	f	file:
stp_set_bridge_id	lib/stp.c	/^stp_set_bridge_id(struct stp *stp, stp_identifier bridge_id)$/;"	f
stp_set_bridge_priority	lib/stp.c	/^stp_set_bridge_priority(struct stp *stp, uint16_t new_priority)$/;"	f
stp_set_forward_delay	lib/stp.c	/^stp_set_forward_delay(struct stp *stp, int ms)$/;"	f
stp_set_hello_time	lib/stp.c	/^stp_set_hello_time(struct stp *stp, int ms)$/;"	f
stp_set_max_age	lib/stp.c	/^stp_set_max_age(struct stp *stp, int ms)$/;"	f
stp_should_forward_bpdu	lib/stp.c	/^stp_should_forward_bpdu(enum stp_state state)$/;"	f
stp_should_process_flow	ofproto/ofproto-dpif-xlate.c	/^stp_should_process_flow(const struct flow *flow, struct flow_wildcards *wc)$/;"	f	file:
stp_state	lib/stp.h	/^enum stp_state {$/;"	g
stp_state	ofproto/ofproto-dpif.c	/^    enum stp_state stp_state;   \/* Always STP_DISABLED if STP not in use. *\/$/;"	m	struct:ofport_dpif	typeref:enum:ofport_dpif::stp_state	file:
stp_state_entered	ofproto/ofproto-dpif.c	/^    long long int stp_state_entered;$/;"	m	struct:ofport_dpif	file:
stp_state_name	lib/stp.c	/^stp_state_name(enum stp_state state)$/;"	f
stp_tick	lib/stp.c	/^stp_tick(struct stp *stp, int ms)$/;"	f
stp_timer	lib/stp.c	/^struct stp_timer {$/;"	s	file:
stp_unixctl_tcn	lib/stp.c	/^stp_unixctl_tcn(struct unixctl_conn *conn, int argc,$/;"	f	file:
stp_unref	lib/stp.c	/^stp_unref(struct stp *stp)$/;"	f
stp_wait	ofproto/ofproto-dpif.c	/^stp_wait(struct ofproto_dpif *ofproto)$/;"	f	file:
str	lib/sflow.h	/^    char *str;$/;"	m	struct:_SFLString
str_ip	python/ovstest/util.py	/^def str_ip(ip_address):$/;"	f
str_to_be64	lib/ofp-parse.c	/^str_to_be64(const char *str, ovs_be64 *valuep)$/;"	f
str_to_connhelper	lib/ofp-parse.c	/^str_to_connhelper(const char *str, uint16_t *alg)$/;"	f
str_to_double	lib/util.c	/^str_to_double(const char *s, double *d)$/;"	f
str_to_int	lib/util.c	/^str_to_int(const char *s, int base, int *i)$/;"	f
str_to_ip	lib/ofp-parse.c	/^str_to_ip(const char *str, ovs_be32 *ip)$/;"	f
str_to_llong	lib/util.c	/^str_to_llong(const char *s, int base, long long *x)$/;"	f
str_to_long	lib/util.c	/^str_to_long(const char *s, int base, long *li)$/;"	f
str_to_mac	lib/ofp-parse.c	/^str_to_mac(const char *str, struct eth_addr *mac)$/;"	f
str_to_ofp	utilities/ovs-ofctl.c	/^str_to_ofp(const char *s, ofp_port_t *ofp_port)$/;"	f	file:
str_to_port_no	utilities/ovs-ofctl.c	/^str_to_port_no(const char *vconn_name, const char *port_name)$/;"	f	file:
str_to_u16	lib/ofp-parse.c	/^str_to_u16(const char *str, const char *name, uint16_t *valuep)$/;"	f
str_to_u32	lib/ofp-parse.c	/^str_to_u32(const char *str, uint32_t *valuep)$/;"	f
str_to_u64	lib/ofp-parse.c	/^str_to_u64(const char *str, uint64_t *valuep)$/;"	f
str_to_u8	lib/ofp-parse.c	/^str_to_u8(const char *str, const char *name, uint8_t *valuep)$/;"	f
str_to_uint	lib/util.c	/^str_to_uint(const char *s, int base, unsigned int *u)$/;"	f
straighten_frag_list	datapath/linux/compat/stt.c	/^static int straighten_frag_list(struct sk_buff **skbp)$/;"	f	file:
straighten_frag_list	datapath/linux/stt.c	/^static int straighten_frag_list(struct sk_buff **skbp)$/;"	f	file:
strcasecmp	lib/string.h	36;"	d
stream	lib/jsonrpc.c	/^    struct stream *stream;$/;"	m	struct:jsonrpc	typeref:struct:jsonrpc::stream	file:
stream	lib/jsonrpc.c	/^    struct stream *stream;$/;"	m	struct:jsonrpc_session	typeref:struct:jsonrpc_session::stream	file:
stream	lib/netdev-dummy.c	/^    struct stream *stream;$/;"	m	struct:dummy_packet_stream	typeref:struct:dummy_packet_stream::stream	file:
stream	lib/stream-fd.c	/^    struct stream stream;$/;"	m	struct:stream_fd	typeref:struct:stream_fd::stream	file:
stream	lib/stream-provider.h	/^struct stream {$/;"	s
stream	lib/stream-ssl.c	/^    struct stream stream;$/;"	m	struct:ssl_stream	typeref:struct:ssl_stream::stream	file:
stream	lib/stream.c	/^VLOG_DEFINE_THIS_MODULE(stream);$/;"	v
stream	lib/vconn-stream.c	/^    struct stream *stream;$/;"	m	struct:vconn_stream	typeref:struct:vconn_stream::stream	file:
stream	ovsdb/log.c	/^    FILE *stream;$/;"	m	struct:ovsdb_log	file:
stream	python/ovs/jsonrpc.py	/^import ovs.stream$/;"	i
stream	python/ovs/unixctl/client.py	/^import ovs.stream$/;"	i
stream	python/ovs/unixctl/server.py	/^import ovs.stream$/;"	i
stream	tests/test-jsonrpc.py	/^import ovs.stream$/;"	i
stream_assert_class	lib/stream-provider.h	/^static inline void stream_assert_class(const struct stream *stream,$/;"	f
stream_class	lib/stream-provider.h	/^struct stream_class {$/;"	s
stream_classes	lib/stream.c	/^static const struct stream_class *stream_classes[] = {$/;"	v	typeref:struct:stream_class	file:
stream_close	lib/stream.c	/^stream_close(struct stream *stream)$/;"	f
stream_connect	lib/stream.c	/^stream_connect(struct stream *stream)$/;"	f
stream_connect_wait	lib/stream.c	/^stream_connect_wait(struct stream *stream)$/;"	f
stream_content_type	lib/stream.h	/^enum stream_content_type {$/;"	g
stream_content_type_to_string	lib/stream.c	/^stream_content_type_to_string(enum stream_content_type type)$/;"	f	file:
stream_fd	lib/stream-fd.c	/^VLOG_DEFINE_THIS_MODULE(stream_fd);$/;"	v
stream_fd	lib/stream-fd.c	/^struct stream_fd$/;"	s	file:
stream_fd_cast	lib/stream-fd.c	/^stream_fd_cast(struct stream *stream)$/;"	f	file:
stream_fd_class	lib/stream-fd.c	/^static const struct stream_class stream_fd_class = {$/;"	v	typeref:struct:stream_class	file:
stream_fd_class	lib/stream-fd.c	/^static const struct stream_class stream_fd_class;$/;"	v	typeref:struct:stream_class	file:
stream_get_name	lib/stream.c	/^stream_get_name(const struct stream *stream)$/;"	f
stream_guess_content	lib/stream.c	/^stream_guess_content(const uint8_t *data, ssize_t size)$/;"	f	file:
stream_init	lib/stream.c	/^stream_init(struct stream *stream, const struct stream_class *class,$/;"	f
stream_lookup_class	lib/stream.c	/^stream_lookup_class(const char *name, const struct stream_class **classp)$/;"	f	file:
stream_nossl	lib/stream-nossl.c	/^VLOG_DEFINE_THIS_MODULE(stream_nossl);$/;"	v
stream_open	lib/stream.c	/^COVERAGE_DEFINE(stream_open);$/;"	v
stream_open	lib/stream.c	/^stream_open(const char *name, struct stream **streamp, uint8_t dscp)$/;"	f
stream_open_block	lib/stream.c	/^stream_open_block(int error, struct stream **streamp)$/;"	f
stream_open_with_default_port	lib/stream.c	/^stream_open_with_default_port(const char *name_,$/;"	f
stream_or_pstream_needs_probes	lib/stream.c	/^stream_or_pstream_needs_probes(const char *name)$/;"	f
stream_or_pstream_needs_probes	python/ovs/stream.py	/^def stream_or_pstream_needs_probes(name):$/;"	f
stream_parse_target_with_default_port	lib/stream.c	/^stream_parse_target_with_default_port(const char *target,$/;"	f
stream_recv	lib/stream.c	/^stream_recv(struct stream *stream, void *buffer, size_t n)$/;"	f
stream_recv_wait	lib/stream.c	/^stream_recv_wait(struct stream *stream)$/;"	f
stream_report_content	lib/stream.c	/^stream_report_content(const void *data, ssize_t size,$/;"	f
stream_run	lib/stream.c	/^stream_run(struct stream *stream)$/;"	f
stream_run_wait	lib/stream.c	/^stream_run_wait(struct stream *stream)$/;"	f
stream_send	lib/stream.c	/^stream_send(struct stream *stream, const void *buffer, size_t n)$/;"	f
stream_send_wait	lib/stream.c	/^stream_send_wait(struct stream *stream)$/;"	f
stream_ssl	lib/stream-ssl.c	/^VLOG_DEFINE_THIS_MODULE(stream_ssl);$/;"	v
stream_ssl_is_configured	lib/stream-nossl.c	/^stream_ssl_is_configured(void)$/;"	f
stream_ssl_is_configured	lib/stream-ssl.c	/^stream_ssl_is_configured(void)$/;"	f
stream_ssl_set_ca_cert_file	lib/stream-nossl.c	/^stream_ssl_set_ca_cert_file(const char *file_name, bool bootstrap OVS_UNUSED)$/;"	f
stream_ssl_set_ca_cert_file	lib/stream-ssl.c	/^stream_ssl_set_ca_cert_file(const char *file_name, bool bootstrap)$/;"	f
stream_ssl_set_ca_cert_file__	lib/stream-ssl.c	/^stream_ssl_set_ca_cert_file__(const char *file_name,$/;"	f	file:
stream_ssl_set_certificate_file	lib/stream-nossl.c	/^stream_ssl_set_certificate_file(const char *file_name)$/;"	f
stream_ssl_set_certificate_file	lib/stream-ssl.c	/^stream_ssl_set_certificate_file(const char *file_name)$/;"	f
stream_ssl_set_certificate_file__	lib/stream-ssl.c	/^stream_ssl_set_certificate_file__(const char *file_name)$/;"	f	file:
stream_ssl_set_key_and_cert	lib/stream-nossl.c	/^stream_ssl_set_key_and_cert(const char *private_key_file,$/;"	f
stream_ssl_set_key_and_cert	lib/stream-ssl.c	/^stream_ssl_set_key_and_cert(const char *private_key_file,$/;"	f
stream_ssl_set_peer_ca_cert_file	lib/stream-nossl.c	/^stream_ssl_set_peer_ca_cert_file(const char *file_name)$/;"	f
stream_ssl_set_peer_ca_cert_file	lib/stream-ssl.c	/^stream_ssl_set_peer_ca_cert_file(const char *file_name)$/;"	f
stream_ssl_set_private_key_file	lib/stream-nossl.c	/^stream_ssl_set_private_key_file(const char *file_name)$/;"	f
stream_ssl_set_private_key_file	lib/stream-ssl.c	/^stream_ssl_set_private_key_file(const char *file_name)$/;"	f
stream_ssl_set_private_key_file__	lib/stream-ssl.c	/^stream_ssl_set_private_key_file__(const char *file_name)$/;"	f	file:
stream_state	lib/stream.c	/^enum stream_state {$/;"	g	file:
stream_tcp	lib/stream-tcp.c	/^VLOG_DEFINE_THIS_MODULE(stream_tcp);$/;"	v
stream_unix	lib/stream-unix.c	/^VLOG_DEFINE_THIS_MODULE(stream_unix);$/;"	v
stream_usage	lib/stream.c	/^stream_usage(const char *name, bool active, bool passive,$/;"	f
stream_vconn_class	lib/vconn-stream.c	/^static const struct vconn_class stream_vconn_class = STREAM_INIT("stream");$/;"	v	typeref:struct:vconn_class	file:
stream_vconn_class	lib/vconn-stream.c	/^static const struct vconn_class stream_vconn_class;$/;"	v	typeref:struct:vconn_class	file:
stream_verify_name	lib/stream.c	/^stream_verify_name(const char *name)$/;"	f
stream_wait	lib/stream.c	/^stream_wait(struct stream *stream, enum stream_wait_type wait)$/;"	f
stream_wait_type	lib/stream.h	/^enum stream_wait_type {$/;"	g
streams	lib/netdev-dummy.c	/^    struct dummy_packet_stream *streams;$/;"	m	struct:dummy_packet_pconn	typeref:struct:dummy_packet_pconn::dummy_packet_stream	file:
streams	lib/pcap-file.c	/^    struct hmap streams;$/;"	m	struct:tcp_reader	typeref:struct:tcp_reader::hmap	file:
streq_len	lib/nx-match.c	/^streq_len(const char *a, size_t a_len, const char *b)$/;"	f	file:
strerror_r	lib/string.h	38;"	d
strftime_msec	lib/timeval.c	/^strftime_msec(char *s, size_t max, const char *format,$/;"	f
strict	utilities/ovs-ofctl.c	/^static bool strict;$/;"	v	file:
string	lib/dynamic-string.h	/^    char *string;       \/* Null-terminated string. *\/$/;"	m	struct:ds
string	lib/json.c	/^        const char *string;$/;"	m	union:json_token::__anon92	file:
string	lib/json.h	/^        char *string;$/;"	m	union:json::__anon93
string	lib/meta-flow.h	/^    enum mf_string string;$/;"	m	struct:mf_field	typeref:enum:mf_field::mf_string
string	lib/ovsdb-data.h	/^    char *string;$/;"	m	union:ovsdb_atom
string	lib/ovsdb-types.h	/^        } string;$/;"	m	union:ovsdb_base_type::__anon146	typeref:struct:ovsdb_base_type::__anon146::ovsdb_string_constraints
string	ovn/lib/expr.c	/^    char *string;$/;"	m	union:expr_constant	file:
string	ovn/lib/expr.h	/^                char *string;$/;"	m	union:expr::__anon200::__anon201::__anon202
stringEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t stringEncodingLength(SFLString *s) {$/;"	f	file:
string_needs_quotes	lib/ovsdb-data.c	/^string_needs_quotes(const char *s)$/;"	f	file:
stripped	lib/sflow.h	/^    u_int32_t stripped;                   \/* header\/trailer bytes stripped by sender *\/$/;"	m	struct:_SFLSampled_header
strncasecmp	lib/string.h	37;"	d
strnlen	lib/string.c	/^strnlen(const char *s, size_t maxlen)$/;"	f
strnlen	lib/string.h	42;"	d
strnlen	lib/string.h	43;"	d
strong_ref	lib/ovsdb-data.h	/^    bool strong_ref;            \/* Parsed a strong reference to this row? *\/$/;"	m	struct:ovsdb_symbol
strsep	lib/strsep.c	/^strsep(char **stringp, const char *delim)$/;"	f
strtok_r	lib/string.h	31;"	d
strtok_r	lib/string.h	35;"	d
strtypes	python/ovs/unixctl/__init__.py	/^strtypes = types.StringTypes$/;"	v
strtypes	python/ovs/unixctl/client.py	/^strtypes = types.StringTypes$/;"	v
strtypes	python/ovs/unixctl/server.py	/^strtypes = types.StringTypes$/;"	v
struct	python/ovstest/udp.py	/^import struct$/;"	i
struct	python/ovstest/util.py	/^import struct$/;"	i
struct	utilities/ovs-dpctl-top	/^import struct$/;"	i
struct	utilities/ovs-pcap	/^import struct$/;"	i
structName	ovsdb/ovsdb-idlc	/^        structName = "%s%s" % (prefix, tableName.lower())$/;"	v
sttDefragThreadCtx	datapath-windows/ovsext/Stt.c	/^static OVS_STT_THREAD_CTX sttDefragThreadCtx;$/;"	v	file:
sttHdr	datapath-windows/ovsext/Stt.h	/^    SttHdr              sttHdr;$/;"	m	struct:_OVS_STT_PKT_ENTRY
stt_can_offload	datapath/linux/compat/stt.c	/^static int stt_can_offload(struct sk_buff *skb, __be16 l3_proto, u8 l4_proto)$/;"	f	file:
stt_can_offload	datapath/linux/stt.c	/^static int stt_can_offload(struct sk_buff *skb, __be16 l3_proto, u8 l4_proto)$/;"	f	file:
stt_cleanup	datapath/linux/compat/stt.c	/^static void stt_cleanup(void)$/;"	f	file:
stt_cleanup	datapath/linux/stt.c	/^static void stt_cleanup(void)$/;"	f	file:
stt_cleanup_module	datapath/linux/compat/include/net/stt.h	67;"	d
stt_find_sock	datapath/linux/compat/stt.c	/^static struct stt_sock *stt_find_sock(struct net *net, __be16 port)$/;"	f	file:
stt_find_sock	datapath/linux/stt.c	/^static struct stt_sock *stt_find_sock(struct net *net, __be16 port)$/;"	f	file:
stt_get_egress_tun_info	datapath/linux/vport-stt.c	/^static int stt_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
stt_get_egress_tun_info	datapath/vport-stt.c	/^static int stt_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
stt_hdr	datapath/linux/compat/include/net/stt.h	/^static inline struct stthdr *stt_hdr(const struct sk_buff *skb)$/;"	f
stt_init_module	datapath/linux/compat/include/net/stt.h	64;"	d
stt_init_net	datapath/linux/compat/stt.c	/^static int stt_init_net(struct net *net)$/;"	f	file:
stt_init_net	datapath/linux/stt.c	/^static int stt_init_net(struct net *net)$/;"	f	file:
stt_net	datapath/linux/compat/stt.c	/^struct stt_net {$/;"	s	file:
stt_net	datapath/linux/stt.c	/^struct stt_net {$/;"	s	file:
stt_net_id	datapath/linux/compat/stt.c	/^static int stt_net_id;$/;"	v	file:
stt_net_id	datapath/linux/stt.c	/^static int stt_net_id;$/;"	v	file:
stt_net_ops	datapath/linux/compat/stt.c	/^static struct pernet_operations stt_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
stt_net_ops	datapath/linux/stt.c	/^static struct pernet_operations stt_net_ops = {$/;"	v	typeref:struct:pernet_operations	file:
stt_percpu	datapath/linux/compat/stt.c	/^struct stt_percpu {$/;"	s	file:
stt_percpu	datapath/linux/stt.c	/^struct stt_percpu {$/;"	s	file:
stt_port	datapath/linux/vport-stt.c	/^struct stt_port {$/;"	s	file:
stt_port	datapath/vport-stt.c	/^struct stt_port {$/;"	s	file:
stt_rcv	datapath/linux/compat/stt.c	/^static void stt_rcv(struct stt_sock *stt_sock, struct sk_buff *skb)$/;"	f	file:
stt_rcv	datapath/linux/stt.c	/^static void stt_rcv(struct stt_sock *stt_sock, struct sk_buff *skb)$/;"	f	file:
stt_rcv	datapath/linux/vport-stt.c	/^static void stt_rcv(struct stt_sock *stt_sock, struct sk_buff *skb)$/;"	f	file:
stt_rcv	datapath/vport-stt.c	/^static void stt_rcv(struct stt_sock *stt_sock, struct sk_buff *skb)$/;"	f	file:
stt_rcv_t	datapath/linux/compat/include/net/stt.h	/^typedef void (stt_rcv_t)(struct stt_sock *stt_sock, struct sk_buff *skb);$/;"	t
stt_sock	datapath/linux/compat/include/net/stt.h	/^struct stt_sock {$/;"	s
stt_sock	datapath/linux/vport-stt.c	/^	struct stt_sock *stt_sock;$/;"	m	struct:stt_port	typeref:struct:stt_port::stt_sock	file:
stt_sock	datapath/vport-stt.c	/^	struct stt_sock *stt_sock;$/;"	m	struct:stt_port	typeref:struct:stt_port::stt_sock	file:
stt_sock_add	datapath/linux/compat/include/net/stt.h	51;"	d
stt_sock_release	datapath/linux/compat/include/net/stt.h	55;"	d
stt_socket_create	datapath/linux/compat/stt.c	/^static struct stt_sock *stt_socket_create(struct net *net, __be16 port,$/;"	f	file:
stt_socket_create	datapath/linux/stt.c	/^static struct stt_sock *stt_socket_create(struct net *net, __be16 port,$/;"	f	file:
stt_start	datapath/linux/compat/stt.c	/^static int stt_start(void)$/;"	f	file:
stt_start	datapath/linux/stt.c	/^static int stt_start(void)$/;"	f	file:
stt_tnl_create	datapath/linux/vport-stt.c	/^static struct vport *stt_tnl_create(const struct vport_parms *parms)$/;"	f	file:
stt_tnl_create	datapath/vport-stt.c	/^static struct vport *stt_tnl_create(const struct vport_parms *parms)$/;"	f	file:
stt_tnl_destroy	datapath/linux/vport-stt.c	/^static void stt_tnl_destroy(struct vport *vport)$/;"	f	file:
stt_tnl_destroy	datapath/vport-stt.c	/^static void stt_tnl_destroy(struct vport *vport)$/;"	f	file:
stt_tnl_get_name	datapath/linux/vport-stt.c	/^static const char *stt_tnl_get_name(const struct vport *vport)$/;"	f	file:
stt_tnl_get_name	datapath/vport-stt.c	/^static const char *stt_tnl_get_name(const struct vport *vport)$/;"	f	file:
stt_tnl_get_options	datapath/linux/vport-stt.c	/^static int stt_tnl_get_options(const struct vport *vport,$/;"	f	file:
stt_tnl_get_options	datapath/vport-stt.c	/^static int stt_tnl_get_options(const struct vport *vport,$/;"	f	file:
stt_tnl_send	datapath/linux/vport-stt.c	/^static int stt_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
stt_tnl_send	datapath/vport-stt.c	/^static int stt_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
stt_vport	datapath/linux/vport-stt.c	/^static inline struct stt_port *stt_vport(const struct vport *vport)$/;"	f	file:
stt_vport	datapath/vport-stt.c	/^static inline struct stt_port *stt_vport(const struct vport *vport)$/;"	f	file:
stt_xmit_skb	datapath/linux/compat/include/net/stt.h	58;"	d
stthdr	datapath/linux/compat/include/net/stt.h	/^struct stthdr {$/;"	s
stub	ofproto/ofproto-provider.h	/^    struct rule *stub[64];      \/* Preallocated rules to avoid malloc(). *\/$/;"	m	struct:rule_collection	typeref:struct:rule_collection::rule
subAgentId	tests/test-sflow.c	/^    uint32_t subAgentId;$/;"	m	struct:sflow_xdr	file:
subId	lib/sflow_api.h	/^    u_int32_t subId;        \/* sub_agent_id *\/$/;"	m	struct:_SFLAgent
sub_agent_id	lib/sflow.h	/^    u_int32_t sub_agent_id;          \/* Used to distinguishing between datagram$/;"	m	struct:_SFLSample_datagram_hdr
sub_double	ovsdb/mutation.c	/^sub_double(double *x, double y)$/;"	f	file:
sub_id	ofproto/ofproto.h	/^    uint32_t sub_id;$/;"	m	struct:ofproto_sflow_options
sub_int	ovsdb/mutation.c	/^sub_int(int64_t *x, int64_t y)$/;"	f	file:
sub_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation sub_mutation = {$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
sub_mutation	ovsdb/mutation.c	/^static const struct ovsdb_scalar_mutation sub_mutation;$/;"	v	typeref:struct:ovsdb_scalar_mutation	file:
subcmd_find_keyword_based_on_input	utilities/ovs-appctl-bashcomp.bash	/^subcmd_find_keyword_based_on_input() {$/;"	f
subdir	Makefile	/^subdir = .$/;"	m
subdir	datapath/Makefile	/^subdir = datapath$/;"	m
subdir	utilities/bugtool/ovs-bugtool	/^    subdir = "bug-report-%s" % time.strftime("%Y%m%d%H%M%S")$/;"	v
subfield	lib/ofp-actions.h	/^    struct mf_subfield subfield;$/;"	m	struct:ofpact_stack	typeref:struct:ofpact_stack::mf_subfield
subprocess	debian/ovs-monitor-ipsec	/^import subprocess$/;"	i
subprocess	python/ovstest/util.py	/^import subprocess$/;"	i
subprocess	python/ovstest/vswitch.py	/^import subprocess$/;"	i
subprocess	utilities/ovs-dev.py	/^import subprocess$/;"	i
subprocess	utilities/ovs-dpctl-top	/^import subprocess$/;"	i
subprocess	utilities/ovs-parse-backtrace	/^import subprocess$/;"	i
subprocess	utilities/ovs-test	/^import subprocess$/;"	i
subprocess	utilities/qemu-wrap.py	/^import sys, os, subprocess$/;"	i
subprocess	vtep/ovs-vtep	/^import subprocess$/;"	i
subprocess	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^import subprocess$/;"	i
subprocess	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^import subprocess$/;"	i
subprocess	xenserver/opt_xensource_libexec_interface-reconfigure	/^        import subprocess$/;"	i
subprocess	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^import subprocess$/;"	i
subscribe	datapath-windows/ovsext/DpInternal.h	/^    uint32_t subscribe;$/;"	m	struct:_OVS_EVENT_SUBSCRIBE
substitute_uuids	lib/ovsdb-idl.c	/^substitute_uuids(struct json *json, const struct ovsdb_idl_txn *txn)$/;"	f	file:
substitute_uuids	tests/test-ovsdb.c	/^substitute_uuids(struct json *json, const struct ovsdb_symbol_table *symtab)$/;"	f	file:
substitute_uuids	tests/test-ovsdb.py	/^def substitute_uuids(json, symtab):$/;"	f
subtable	lib/classifier.h	/^    const struct cls_subtable *subtable;$/;"	m	struct:cls_cursor	typeref:struct:cls_cursor::cls_subtable
subtable_replace_head_rule	lib/classifier.c	/^subtable_replace_head_rule(struct classifier *cls OVS_UNUSED,$/;"	f	file:
subtables	lib/classifier.h	/^    struct pvector subtables;$/;"	m	struct:classifier	typeref:struct:classifier::pvector
subtables	lib/classifier.h	/^    struct pvector_cursor subtables;$/;"	m	struct:cls_cursor	typeref:struct:cls_cursor::pvector_cursor
subtables	lib/dpif-netdev.c	/^    struct pvector subtables;$/;"	m	struct:dpcls	typeref:struct:dpcls::pvector	file:
subtables_map	lib/classifier.h	/^    struct cmap subtables_map;      \/* Contains "struct cls_subtable"s.  *\/$/;"	m	struct:classifier	typeref:struct:classifier::cmap
subtables_map	lib/dpif-netdev.c	/^    struct cmap subtables_map;$/;"	m	struct:dpcls	typeref:struct:dpcls::cmap	file:
subtype	include/openflow/nicira-ext.h	/^    ovs_be32 subtype;           \/* One of NXST_* below. *\/$/;"	m	struct:nicira10_stats_msg
subtype	include/openflow/nicira-ext.h	/^    ovs_be32 subtype;           \/* One of NXST_* below. *\/$/;"	m	struct:nicira11_stats_msg
subtype	include/openflow/nicira-ext.h	/^    ovs_be32 subtype;           \/* See the NXT numbers in ofp-msgs.h. *\/$/;"	m	struct:nicira_header
subtype	lib/lacp.c	/^    uint8_t subtype;          \/* Always 1. *\/$/;"	m	struct:lacp_pdu	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_CONTROLLER. *\/$/;"	m	struct:nx_action_controller	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_NOTE. *\/$/;"	m	struct:nx_action_note	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_REG_LOAD. *\/$/;"	m	struct:nx_action_reg_load	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_REG_MOVE. *\/$/;"	m	struct:nx_action_reg_move	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_RESUBMIT. *\/$/;"	m	struct:nx_action_resubmit	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_SAMPLE. *\/$/;"	m	struct:nx_action_sample	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_SET_FIELD. *\/$/;"	m	struct:nx_action_reg_load2	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_STACK_PUSH or NXAST_STACK_POP. *\/$/;"	m	struct:nx_action_stack	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* NXAST_WRITE_METADATA. *\/$/;"	m	struct:nx_action_write_metadata	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* See enum ofp_raw_action_type. *\/$/;"	m	struct:ext_action_header	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;               \/* See enum ofp_raw_action_type. *\/$/;"	m	struct:nx_action_conjunction	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_BUNDLE or NXAST_BUNDLE_LOAD. *\/$/;"	m	struct:nx_action_bundle	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_CT. *\/$/;"	m	struct:nx_action_conntrack	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_DEC_TTL_CNT_IDS. *\/$/;"	m	struct:nx_action_cnt_ids	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_FIN_TIMEOUT. *\/$/;"	m	struct:nx_action_fin_timeout	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_LEARN. *\/$/;"	m	struct:nx_action_learn	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_MULTIPATH. *\/$/;"	m	struct:nx_action_multipath	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_OUTPUT_REG. *\/$/;"	m	struct:nx_action_output_reg	file:
subtype	lib/ofp-actions.c	/^    ovs_be16 subtype;           \/* NXAST_OUTPUT_REG2. *\/$/;"	m	struct:nx_action_output_reg2	file:
subtype	lib/ofp-msgs.c	/^    uint32_t subtype;           \/* From nicira_header, nicira10_stats_msg, or$/;"	m	struct:ofphdrs	file:
success_cb	utilities/ovs-vlan-test	/^        def success_cb():$/;"	f	function:UDPReceiver.recv_packet
success_cb	utilities/ovs-vlan-test	/^        def success_cb():$/;"	f	function:VlanClient.recv
sudo	utilities/ovs-dev.py	/^def sudo():$/;"	f
sum_of_squares	tests/test-util.c	/^sum_of_squares(int n)$/;"	f	file:
summary	ovsdb/ovsdb-doc	/^    summary = []$/;"	v
support	lib/odp-util.h	/^    struct odp_support support;$/;"	m	struct:odp_flow_key_parms	typeref:struct:odp_flow_key_parms::odp_support
support	ofproto/ofproto-dpif-xlate.c	/^    struct dpif_backer_support support;$/;"	m	struct:xbridge	typeref:struct:xbridge::dpif_backer_support	file:
support	ofproto/ofproto-dpif.c	/^    struct dpif_backer_support support;$/;"	m	struct:dpif_backer	typeref:struct:dpif_backer::dpif_backer_support	file:
supported	include/openflow/openflow-1.0.h	/^    ovs_be32 supported;     \/* Features supported by the port. *\/$/;"	m	struct:ofp10_phy_port
supported	include/openflow/openflow-1.1.h	/^    ovs_be32 supported;     \/* Features supported by the port. *\/$/;"	m	struct:ofp11_port
supported	include/openflow/openflow-1.4.h	/^    ovs_be32 supported;     \/* Features supported by the port. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
supported	lib/netdev-linux.c	/^    enum netdev_features supported;  \/* Cached from ETHTOOL_GSET. *\/$/;"	m	struct:netdev_linux	typeref:enum:netdev_linux::netdev_features	file:
supported	lib/ofp-util.h	/^    enum netdev_features supported;  \/* Features supported by the port. *\/$/;"	m	struct:ofputil_phy_port	typeref:enum:ofputil_phy_port::netdev_features
supportedDevOp	datapath-windows/ovsext/Datapath.c	/^    UINT32 supportedDevOp;      \/* Supported device operations. *\/$/;"	m	struct:_NETLINK_CMD	file:
supports_eviction	lib/ofp-util.h	/^    int supports_eviction;               \/* OF1.4+ only. *\/$/;"	m	struct:ofputil_table_features
supports_mpls_gso	datapath/linux/compat/gso.c	/^static bool supports_mpls_gso(void)$/;"	f	file:
supports_mpls_gso	datapath/linux/gso.c	/^static bool supports_mpls_gso(void)$/;"	f	file:
supports_vacancy_events	lib/ofp-util.h	/^    int supports_vacancy_events;         \/* OF1.4+ only. *\/$/;"	m	struct:ofputil_table_features
svec	lib/svec.c	/^VLOG_DEFINE_THIS_MODULE(svec);$/;"	v
svec	lib/svec.h	/^struct svec {$/;"	s
svec_add	lib/svec.c	/^svec_add(struct svec *svec, const char *name)$/;"	f
svec_add_nocopy	lib/svec.c	/^svec_add_nocopy(struct svec *svec, char *name)$/;"	f
svec_append	lib/svec.c	/^svec_append(struct svec *svec, const struct svec *other)$/;"	f
svec_back	lib/svec.c	/^svec_back(const struct svec *svec)$/;"	f
svec_clear	lib/svec.c	/^svec_clear(struct svec *svec)$/;"	f
svec_clone	lib/svec.c	/^svec_clone(struct svec *svec, const struct svec *other)$/;"	f
svec_compact	lib/svec.c	/^svec_compact(struct svec *svec)$/;"	f
svec_contains	lib/svec.c	/^svec_contains(const struct svec *svec, const char *name)$/;"	f
svec_del	lib/svec.c	/^svec_del(struct svec *svec, const char *name)$/;"	f
svec_destroy	lib/svec.c	/^svec_destroy(struct svec *svec)$/;"	f
svec_diff	lib/svec.c	/^svec_diff(const struct svec *a, const struct svec *b,$/;"	f
svec_equal	lib/svec.c	/^svec_equal(const struct svec *a, const struct svec *b)$/;"	f
svec_expand	lib/svec.c	/^svec_expand(struct svec *svec)$/;"	f	file:
svec_find	lib/svec.c	/^svec_find(const struct svec *svec, const char *name)$/;"	f
svec_get_duplicate	lib/svec.c	/^svec_get_duplicate(const struct svec *svec)$/;"	f
svec_init	lib/svec.c	/^svec_init(struct svec *svec)$/;"	f
svec_is_empty	lib/svec.c	/^svec_is_empty(const struct svec *svec)$/;"	f
svec_is_sorted	lib/svec.c	/^svec_is_sorted(const struct svec *svec)$/;"	f
svec_is_unique	lib/svec.c	/^svec_is_unique(const struct svec *svec)$/;"	f
svec_join	lib/svec.c	/^svec_join(const struct svec *svec,$/;"	f
svec_parse_words	lib/svec.c	/^svec_parse_words(struct svec *svec, const char *words)$/;"	f
svec_pop_back	lib/svec.c	/^svec_pop_back(struct svec *svec)$/;"	f
svec_print	lib/svec.c	/^svec_print(const struct svec *svec, const char *title)$/;"	f
svec_sort	lib/svec.c	/^svec_sort(struct svec *svec)$/;"	f
svec_sort_unique	lib/svec.c	/^svec_sort_unique(struct svec *svec)$/;"	f
svec_swap	lib/svec.c	/^svec_swap(struct svec *a, struct svec *b)$/;"	f
svec_terminate	lib/svec.c	/^svec_terminate(struct svec *svec)$/;"	f
svec_unique	lib/svec.c	/^svec_unique(struct svec *svec)$/;"	f
sw	lib/sflow.h	/^    SFLExtended_switch sw;$/;"	m	union:_SFLFlow_type
sw_desc	include/openflow/openflow-common.h	/^    char sw_desc[DESC_STR_LEN];        \/* Software description. *\/$/;"	m	struct:ofp_desc_stats
sw_desc	ofproto/ofproto-provider.h	/^    char *sw_desc;              \/* Software version (NULL for default). *\/$/;"	m	struct:ofproto
sw_flow	datapath/flow.h	/^struct sw_flow {$/;"	s
sw_flow_actions	datapath/flow.h	/^struct sw_flow_actions {$/;"	s
sw_flow_id	datapath/flow.h	/^struct sw_flow_id {$/;"	s
sw_flow_key	datapath/flow.h	/^struct sw_flow_key {$/;"	s
sw_flow_key_range	datapath/flow.h	/^struct sw_flow_key_range {$/;"	s
sw_flow_mask	datapath/flow.h	/^struct sw_flow_mask {$/;"	s
sw_flow_match	datapath/flow.h	/^struct sw_flow_match {$/;"	s
swap	tests/test-classifier.c	/^swap(int *a, int *b)$/;"	f	file:
swap	tests/test-heap.c	/^swap(uint32_t *a, uint32_t *b)$/;"	f	file:
swap64	datapath-windows/ovsext/Checksum.c	33;"	d	file:
swap_nodes	lib/heap.c	/^swap_nodes(struct heap *heap, size_t i, size_t j)$/;"	f	file:
swap_rows	ovsdb/ovsdb-client.c	/^swap_rows(size_t a_y, size_t b_y, void *aux_)$/;"	f	file:
swap_uint64	lib/netdev-linux.c	/^swap_uint64(uint64_t *a, uint64_t *b)$/;"	f	file:
swconn	ovn/controller/ofctrl.c	/^static struct rconn *swconn;$/;"	v	typeref:struct:rconn	file:
sweep_idx	lib/dpif-netdev.c	/^    int sweep_idx;                \/* For emc_cache_slow_sweep(). *\/$/;"	m	struct:emc_cache	file:
switchContext	datapath-windows/ovsext/Actions.c	/^    POVS_SWITCH_CONTEXT switchContext;$/;"	m	struct:OvsForwardingContext	file:
switchContext	datapath-windows/ovsext/PacketIO.h	/^    POVS_SWITCH_CONTEXT switchContext;$/;"	m	struct:OvsCompletionList
switchContext	datapath-windows/ovsext/Vport.c	/^    POVS_SWITCH_CONTEXT switchContext;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
switch_	utilities/ovs-testcontroller.c	/^struct switch_ {$/;"	s	file:
switch_fault_status	vtep/vtep-idl.h	/^	char **switch_fault_status;$/;"	m	struct:vteprec_physical_switch
switch_user	lib/daemon-unix.c	/^static bool switch_user = false;$/;"	v	file:
switches	vtep/vtep-idl.h	/^	struct vteprec_physical_switch **switches;$/;"	m	struct:vteprec_global	typeref:struct:vteprec_global::vteprec_physical_switch
symbol	ovn/lib/expr.c	/^    const struct expr_symbol *symbol; \/* The symbol. *\/$/;"	m	struct:expr_field	typeref:struct:expr_field::expr_symbol	file:
symbol	ovn/lib/expr.c	/^    const struct expr_symbol *symbol;$/;"	m	struct:annotation_nesting	typeref:struct:annotation_nesting::expr_symbol	file:
symbol	ovn/lib/expr.h	/^            const struct expr_symbol *symbol;$/;"	m	struct:expr::__anon200::__anon201	typeref:struct:expr::__anon200::__anon201::expr_symbol
symtab	lib/db-ctl-base.h	/^    struct ovsdb_symbol_table *symtab;$/;"	m	struct:ctl_context	typeref:struct:ctl_context::ovsdb_symbol_table
symtab	ovn/controller/lflow.c	/^static struct shash symtab;$/;"	v	typeref:struct:shash	file:
symtab	ovn/lib/actions.c	/^    const struct shash *symtab; \/* Symbol table. *\/$/;"	m	struct:action_context	typeref:struct:action_context::shash	file:
symtab	ovn/lib/expr.c	/^    const struct shash *symtab; \/* Symbol table. *\/$/;"	m	struct:expr_context	typeref:struct:expr_context::shash	file:
symtab	ovsdb/execution.c	/^    struct ovsdb_symbol_table *symtab;$/;"	m	struct:ovsdb_execution	typeref:struct:ovsdb_execution::ovsdb_symbol_table	file:
symtab_init	ovn/controller/lflow.c	/^symtab_init(void)$/;"	f	file:
syn	datapath-windows/ovsext/NetProto.h	/^             syn:1,$/;"	m	struct:TCPHdr
syncController	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def syncController(self):$/;"	m	class:VSwitchControllerDialogue
syncp	datapath/datapath.h	/^	struct u64_stats_sync syncp;$/;"	m	struct:dp_stats_percpu	typeref:struct:dp_stats_percpu::u64_stats_sync
syncp	datapath/linux/compat/include/linux/netdevice.h	/^	struct u64_stats_sync   syncp;$/;"	m	struct:pcpu_sw_netstats	typeref:struct:pcpu_sw_netstats::u64_stats_sync
syntax	lib/db-ctl-base.h	/^    const struct ctl_command_syntax *syntax;$/;"	m	struct:ctl_command	typeref:struct:ctl_command::ctl_command_syntax
syntax	lib/ovsdb-error.c	/^    char *syntax;               \/* String for "syntax" member. *\/$/;"	m	struct:ovsdb_error	file:
syntax_rl	lib/ovsdb-idl.c	/^static struct vlog_rate_limit syntax_rl = VLOG_RATE_LIMIT_INIT(1, 5);$/;"	v	typeref:struct:vlog_rate_limit	file:
synth_local_iface	vswitchd/bridge.c	/^    struct ovsrec_interface synth_local_iface;$/;"	m	struct:bridge	typeref:struct:bridge::ovsrec_interface	file:
synth_local_ifacep	vswitchd/bridge.c	/^    struct ovsrec_interface *synth_local_ifacep;$/;"	m	struct:bridge	typeref:struct:bridge::ovsrec_interface	file:
synth_local_port	vswitchd/bridge.c	/^    struct ovsrec_port synth_local_port;$/;"	m	struct:bridge	typeref:struct:bridge::ovsrec_port	file:
synthesize_splinter_port	vswitchd/bridge.c	/^synthesize_splinter_port(const char *real_dev_name,$/;"	f	file:
sys	build-aux/check-structs	/^import sys$/;"	i
sys	build-aux/extract-ofp-actions	/^import sys$/;"	i
sys	build-aux/extract-ofp-errors	/^import sys$/;"	i
sys	build-aux/extract-ofp-fields	/^import sys$/;"	i
sys	build-aux/extract-ofp-msgs	/^import sys$/;"	i
sys	build-aux/xml2nroff	/^import sys$/;"	i
sys	debian/ovs-monitor-ipsec	/^import sys$/;"	i
sys	ofproto/ipfix-gen-entities	/^import sys$/;"	i
sys	ovsdb/ovsdb-doc	/^import sys$/;"	i
sys	ovsdb/ovsdb-dot	/^import sys$/;"	i
sys	ovsdb/ovsdb-idlc	/^import sys$/;"	i
sys	python/ovs/daemon.py	/^import sys$/;"	i
sys	python/ovs/db/schema.py	/^import sys$/;"	i
sys	python/ovs/db/types.py	/^import sys$/;"	i
sys	python/ovs/json.py	/^import sys$/;"	i
sys	python/ovs/socket_util.py	/^import sys$/;"	i
sys	python/ovs/timeval.py	/^import sys$/;"	i
sys	python/ovs/util.py	/^import sys$/;"	i
sys	python/ovs/vlog.py	/^import sys$/;"	i
sys	python/ovstest/args.py	/^import sys$/;"	i
sys	python/ovstest/rpcserver.py	/^import sys$/;"	i
sys	python/setup.py	/^import sys$/;"	i
sys	tests/appctl.py	/^import sys$/;"	i
sys	tests/test-daemon.py	/^import sys$/;"	i
sys	tests/test-json.py	/^import sys$/;"	i
sys	tests/test-jsonrpc.py	/^import sys$/;"	i
sys	tests/test-ovsdb.py	/^import sys$/;"	i
sys	tests/test-reconnect.py	/^import sys$/;"	i
sys	tests/test-unix-socket.py	/^import sys$/;"	i
sys	tests/test-unixctl.py	/^import sys$/;"	i
sys	utilities/bugtool/ovs-bugtool	/^import sys$/;"	i
sys	utilities/ovs-check-dead-ifs	/^import sys$/;"	i
sys	utilities/ovs-dev.py	/^import sys$/;"	i
sys	utilities/ovs-dpctl-top	/^import sys$/;"	i
sys	utilities/ovs-parse-backtrace	/^import sys$/;"	i
sys	utilities/ovs-pcap	/^import sys$/;"	i
sys	utilities/ovs-pipegen.py	/^import sys$/;"	i
sys	utilities/ovs-tcpundump	/^import sys$/;"	i
sys	utilities/ovs-test	/^import sys$/;"	i
sys	utilities/ovs-vlan-test	/^import sys$/;"	i
sys	utilities/qemu-wrap.py	/^import sys, os, subprocess$/;"	i
sys	vtep/ovs-vtep	/^import sys$/;"	i
sys	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^import sys$/;"	i
sys	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^import sys$/;"	i
sys	xenserver/opt_xensource_libexec_interface-reconfigure	/^import os, sys, getopt$/;"	i
sys	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import sys$/;"	i
sysNBLCount	datapath-windows/ovsext/BufferMgmt.h	/^    LONG          sysNBLCount;$/;"	m	struct:_OVS_NBL_POOL
sys_id	lib/lacp.c	/^    struct eth_addr sys_id;       \/* System ID. *\/$/;"	m	struct:lacp	typeref:struct:lacp::eth_addr	file:
sys_priority	lib/lacp.c	/^    uint16_t sys_priority;        \/* System Priority. *\/$/;"	m	struct:lacp	file:
sysconf	include/windows/unistd.h	/^__inline long sysconf(int type)$/;"	f
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	datapath/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	python/ovs/dirs.py	/^    sysconfdir = os.environ.get("OVS_SYSCONFDIR")$/;"	v
sysfs_bonding_masters	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^sysfs_bonding_masters = root_prefix() + "\/sys\/class\/net\/bonding_masters"$/;"	v
syslog	include/windows/syslog.h	/^syslog(int priority, const char *format, ...)$/;"	f
syslog	lib/syslog-provider.h	/^    void (*syslog)(struct syslogger *this, int pri, const char *msg);$/;"	m	struct:syslog_class
syslog	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^import syslog$/;"	i
syslog	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^import syslog$/;"	i
syslog	xenserver/opt_xensource_libexec_interface-reconfigure	/^import syslog$/;"	i
syslog_class	lib/syslog-provider.h	/^struct syslog_class {$/;"	s
syslog_direct	lib/syslog-direct.c	/^struct syslog_direct {$/;"	s	file:
syslog_direct_class	lib/syslog-direct.c	/^static struct syslog_class syslog_direct_class = {$/;"	v	typeref:struct:syslog_class	file:
syslog_direct_create	lib/syslog-direct.c	/^syslog_direct_create(const char *method)$/;"	f
syslog_direct_log	lib/syslog-direct.c	/^syslog_direct_log(struct syslogger *this, int pri, const char *msg)$/;"	f	file:
syslog_direct_open	lib/syslog-direct.c	/^syslog_direct_open(struct syslogger *this, int facility)$/;"	f	file:
syslog_facility	python/ovs/vlog.py	/^syslog_facility = "daemon"$/;"	v
syslog_get_prefix	lib/syslog-provider.h	/^syslog_get_prefix(struct syslogger *this)$/;"	f
syslog_handler	python/ovs/vlog.py	/^syslog_handler = ''$/;"	v
syslog_levels	lib/vlog.c	/^static const int syslog_levels[VLL_N_LEVELS] = {$/;"	v	file:
syslog_libc	lib/syslog-libc.c	/^struct syslog_libc {$/;"	s	file:
syslog_libc_class	lib/syslog-libc.c	/^static struct syslog_class syslog_libc_class = {$/;"	v	typeref:struct:syslog_class	file:
syslog_libc_create	lib/syslog-libc.c	/^syslog_libc_create(void)$/;"	f
syslog_libc_log	lib/syslog-libc.c	/^syslog_libc_log(struct syslogger *this OVS_UNUSED, int pri, const char *msg)$/;"	f	file:
syslog_libc_open	lib/syslog-libc.c	/^syslog_libc_open(struct syslogger *this OVS_UNUSED, int facility)$/;"	f	file:
syslogger	lib/syslog-provider.h	/^struct syslogger {$/;"	s
syslogger	lib/vlog.c	/^static struct syslogger *syslogger = NULL;$/;"	v	typeref:struct:syslogger	file:
system_description	lib/ovs-lldp.h	/^    char *system_description;$/;"	m	struct:aa_settings
system_description	lib/vswitch-idl.h	/^	char *system_description;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_autoattach
system_id	lib/lldp/aa-structs.h	/^    struct lldp_aa_element_system_id system_id;$/;"	m	struct:lldpd_aa_element_tlv	typeref:struct:lldpd_aa_element_tlv::lldp_aa_element_system_id
system_id	ofproto/ofproto.h	/^    stp_identifier system_id;$/;"	m	struct:ofproto_stp_settings
system_id_null	lib/ovs-lldp.c	/^static struct lldp_aa_element_system_id system_id_null;$/;"	v	typeref:struct:lldp_aa_element_system_id	file:
system_logs	utilities/bugtool/ovs-bugtool	/^    system_logs = ([ VAR_LOG_DIR + x for x in$/;"	v
system_mac	lib/lldp/aa-structs.h	/^    struct eth_addr system_mac;$/;"	m	struct:lldp_aa_element_system_id	typeref:struct:lldp_aa_element_system_id::eth_addr
system_name	lib/ovs-lldp.h	/^    char *system_name;$/;"	m	struct:aa_settings
system_name	lib/vswitch-idl.h	/^	char *system_name;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_autoattach
system_stats	vswitchd/system-stats.c	/^VLOG_DEFINE_THIS_MODULE(system_stats);$/;"	v
system_stats_enable	vswitchd/system-stats.c	/^system_stats_enable(bool enable)$/;"	f
system_stats_run	vswitchd/system-stats.c	/^system_stats_run(void)$/;"	f
system_stats_thread_func	vswitchd/system-stats.c	/^system_stats_thread_func(void *arg OVS_UNUSED)$/;"	f	file:
system_stats_wait	vswitchd/system-stats.c	/^system_stats_wait(void)$/;"	f
system_time	lib/sflow.h	/^    uint32_t system_time; \/* in milliseconds *\/$/;"	m	struct:_SFLAPPResources_counters
system_type	lib/vswitch-idl.h	/^	char *system_type;$/;"	m	struct:ovsrec_open_vswitch
system_version	lib/vswitch-idl.h	/^	char *system_version;$/;"	m	struct:ovsrec_open_vswitch
sysuptime	lib/netflow.h	/^    ovs_be32 sysuptime;            \/* System uptime in milliseconds. *\/$/;"	m	struct:netflow_v5_header
t	lib/timer.h	/^    long long int t;$/;"	m	struct:timer
t	utilities/bugtool/ovs-bugtool	/^            t = f.readline()$/;"	v
tab	lib/tun-metadata.h	/^    struct tun_table *tab;      \/* Types & lengths for 'opts' and 'opt_map'. *\/$/;"	m	struct:tun_metadata	typeref:struct:tun_metadata::tun_table
tab_mutex	lib/tun-metadata.c	/^                                          uint8_t len) OVS_REQUIRES(tab_mutex);$/;"	v
tab_mutex	lib/tun-metadata.c	/^            OVS_REQUIRES(tab_mutex);$/;"	v
tab_mutex	lib/tun-metadata.c	/^static struct ovs_mutex tab_mutex = OVS_MUTEX_INITIALIZER;$/;"	v	typeref:struct:ovs_mutex	file:
table	datapath/datapath.h	/^	struct flow_table table;$/;"	m	struct:datapath	typeref:struct:datapath::flow_table
table	lib/db-ctl-base.h	/^    const struct ovsdb_idl_table_class *table;$/;"	m	struct:cmd_show_table	typeref:struct:cmd_show_table::ovsdb_idl_table_class
table	lib/db-ctl-base.h	/^    const struct ovsdb_idl_table_class *table;$/;"	m	struct:ctl_row_id	typeref:struct:ctl_row_id::ovsdb_idl_table_class
table	lib/db-ctl-base.h	/^    const struct ovsdb_idl_table_class *table;$/;"	m	struct:weak_ref_table	typeref:struct:weak_ref_table::ovsdb_idl_table_class
table	lib/db-ctl-base.h	/^    struct table *table;$/;"	m	struct:ctl_command	typeref:struct:ctl_command::table
table	lib/db-ctl-base.h	/^    struct table *table;$/;"	m	struct:ctl_context	typeref:struct:ctl_context::table
table	lib/mac-learning.h	/^    struct hmap table;          \/* Learning table. *\/$/;"	m	struct:mac_learning	typeref:struct:mac_learning::hmap
table	lib/mcast-snooping.h	/^    struct hmap table;$/;"	m	struct:mcast_snooping	typeref:struct:mcast_snooping::hmap
table	lib/ofp-actions.c	/^    uint8_t table;                  \/* NXAST_RESUBMIT_TABLE: table to use. *\/$/;"	m	struct:nx_action_resubmit	file:
table	lib/ovsdb-idl-provider.h	/^    struct ovsdb_idl_table *table; \/* Containing table. *\/$/;"	m	struct:ovsdb_idl_row	typeref:struct:ovsdb_idl_row::ovsdb_idl_table
table	lib/table.h	/^struct table {$/;"	s
table	lib/tnl-arp-cache.c	/^static struct cmap table;$/;"	v	typeref:struct:cmap	file:
table	ovsdb/execution.c	/^    const struct ovsdb_table *table;$/;"	m	struct:delete_row_cbdata	typeref:struct:delete_row_cbdata::ovsdb_table	file:
table	ovsdb/file.c	/^    struct ovsdb_table *table;  \/* Table described in 'table_json'.  *\/$/;"	m	struct:ovsdb_file_txn	typeref:struct:ovsdb_file_txn::ovsdb_table	file:
table	ovsdb/monitor.c	/^    const struct ovsdb_table *table;$/;"	m	struct:ovsdb_monitor_table	typeref:struct:ovsdb_monitor_table::ovsdb_table	file:
table	ovsdb/ovsdb-client.c	/^    struct ovsdb_table_schema *table;$/;"	m	struct:monitored_table	typeref:struct:monitored_table::ovsdb_table_schema	file:
table	ovsdb/row.h	/^    struct ovsdb_table *table;     \/* Table to which this belongs. *\/$/;"	m	struct:ovsdb_row	typeref:struct:ovsdb_row::ovsdb_table
table	ovsdb/transaction.c	/^    struct ovsdb_table *table;$/;"	m	struct:ovsdb_txn_row	typeref:struct:ovsdb_txn_row::ovsdb_table	file:
table	ovsdb/transaction.c	/^    struct ovsdb_table *table;$/;"	m	struct:ovsdb_txn_table	typeref:struct:ovsdb_txn_table::ovsdb_table	file:
tableNodes	ovsdb/ovsdb-doc	/^    tableNodes = []$/;"	v
tableSummaryToNroff	ovsdb/ovsdb-doc	/^def tableSummaryToNroff(summary, level=0):$/;"	f
tableToNroff	ovsdb/ovsdb-doc	/^def tableToNroff(schema, tableXml):$/;"	f
table_action_features_empty	lib/ofp-print.c	/^table_action_features_empty(const struct ofputil_table_action_features *taf)$/;"	f	file:
table_action_features_equal	lib/ofp-print.c	/^table_action_features_equal(const struct ofputil_table_action_features *a,$/;"	f	file:
table_add_cell	lib/table.c	/^table_add_cell(struct table *table)$/;"	f
table_add_column	lib/table.c	/^table_add_column(struct table *table, const char *heading, ...)$/;"	f
table_add_row	lib/table.c	/^table_add_row(struct table *table)$/;"	f
table_by_name	lib/ovsdb-idl.c	/^    struct shash table_by_name;$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::shash	file:
table_cell__	lib/table.c	/^table_cell__(const struct table *table, size_t row, size_t column)$/;"	f	file:
table_destroy	lib/table.c	/^table_destroy(struct table *table)$/;"	f
table_escape_html_text__	lib/table.c	/^table_escape_html_text__(const char *s, size_t n)$/;"	f	file:
table_features_empty	lib/ofp-print.c	/^table_features_empty(const struct ofputil_table_features *tf)$/;"	f	file:
table_features_equal	lib/ofp-print.c	/^table_features_equal(const struct ofputil_table_features *a,$/;"	f	file:
table_format	lib/table.h	/^enum table_format {$/;"	g
table_format_timestamp__	lib/table.c	/^table_format_timestamp__(void)$/;"	f	file:
table_id	include/openflow/nicira-ext.h	/^    uint8_t table_id;           \/* ID of flow's table. *\/$/;"	m	struct:nx_flow_update_full
table_id	include/openflow/nicira-ext.h	/^    uint8_t table_id;           \/* One table's ID or 0xff for all tables. *\/$/;"	m	struct:nx_flow_monitor_request
table_id	include/openflow/nicira-ext.h	/^    uint8_t table_id;         \/* Flow's former table ID, plus one. *\/$/;"	m	struct:nx_flow_removed
table_id	include/openflow/nicira-ext.h	/^    uint8_t table_id;         \/* ID of table flow came from. *\/$/;"	m	struct:nx_flow_stats
table_id	include/openflow/nicira-ext.h	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats)$/;"	m	struct:nx_aggregate_stats_request
table_id	include/openflow/nicira-ext.h	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats)$/;"	m	struct:nx_flow_stats_request
table_id	include/openflow/nicira-ext.h	/^    uint8_t table_id;         \/* ID of the table that was looked up. *\/$/;"	m	struct:nx_packet_in
table_id	include/openflow/openflow-1.0.h	/^    uint8_t table_id;         \/* ID of table flow came from. *\/$/;"	m	struct:ofp10_flow_stats
table_id	include/openflow/openflow-1.0.h	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats)$/;"	m	struct:ofp10_flow_stats_request
table_id	include/openflow/openflow-1.0.h	/^    uint8_t table_id;        \/* Identifier of table.  Lower numbered tables$/;"	m	struct:ofp10_table_stats
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;              \/* Set next table in the lookup pipeline *\/$/;"	m	struct:ofp11_instruction_goto_table
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;            \/* ID of the table to put the flow in *\/$/;"	m	struct:ofp11_flow_mod
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;          \/* ID of table flow came from. *\/$/;"	m	struct:ofp11_flow_stats
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats),$/;"	m	struct:ofp11_flow_stats_request
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;         \/* ID of the table *\/$/;"	m	struct:ofp11_flow_removed
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;        \/* Identifier of table. Lower numbered tables$/;"	m	struct:ofp11_table_stats
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;       \/* ID of the table that was looked up *\/$/;"	m	struct:ofp11_packet_in
table_id	include/openflow/openflow-1.1.h	/^    uint8_t table_id;       \/* ID of the table, 0xFF indicates all tables *\/$/;"	m	struct:ofp11_table_mod
table_id	include/openflow/openflow-1.2.h	/^    uint8_t table_id;         \/* ID of the table *\/$/;"	m	struct:ofp12_flow_removed
table_id	include/openflow/openflow-1.2.h	/^    uint8_t table_id;        \/* Identifier of table.  Lower numbered tables$/;"	m	struct:ofp12_table_stats
table_id	include/openflow/openflow-1.2.h	/^    uint8_t table_id;       \/* ID of the table that was looked up *\/$/;"	m	struct:ofp12_packet_in
table_id	include/openflow/openflow-1.3.h	/^    uint8_t  table_id;      \/* Identifier of table. Lower numbered tables are$/;"	m	struct:ofp13_table_stats
table_id	include/openflow/openflow-1.3.h	/^    uint8_t table_id;         \/* Identifier of table. Lower numbered tables$/;"	m	struct:ofp13_table_features
table_id	include/openflow/openflow-1.4.h	/^    uint8_t table_id;           \/* One table's ID or OFPTT_ALL (all tables). *\/$/;"	m	struct:ofp14_flow_monitor_request
table_id	include/openflow/openflow-1.4.h	/^    uint8_t table_id;      \/* Identifier of table. Lower numbered tables$/;"	m	struct:ofp14_table_desc
table_id	include/openflow/openflow-1.4.h	/^    uint8_t table_id;     \/* ID of the table, OFPTT_ALL indicates all tables *\/$/;"	m	struct:ofp14_table_mod
table_id	lib/ofp-actions.c	/^    uint8_t table_id;           \/* Table to insert flow entry. *\/$/;"	m	struct:nx_action_learn	file:
table_id	lib/ofp-actions.h	/^    uint8_t table_id;           \/* Table to insert flow entry. *\/$/;"	m	struct:ofpact_learn
table_id	lib/ofp-actions.h	/^    uint8_t table_id;$/;"	m	struct:ofpact_goto_table
table_id	lib/ofp-actions.h	/^    uint8_t table_id;$/;"	m	struct:ofpact_resubmit
table_id	lib/ofp-util.h	/^    uint8_t table_id;                    \/* OpenFlow table ID. *\/$/;"	m	struct:ofputil_packet_in
table_id	lib/ofp-util.h	/^    uint8_t table_id;           \/* 255 if message didn't include table ID. *\/$/;"	m	struct:ofputil_flow_removed
table_id	lib/ofp-util.h	/^    uint8_t table_id;           \/* Identifier of table. *\/$/;"	m	struct:ofputil_table_stats
table_id	lib/ofp-util.h	/^    uint8_t table_id;         \/* ID of the table, 0xff indicates all tables. *\/$/;"	m	struct:ofputil_table_mod
table_id	lib/ofp-util.h	/^    uint8_t table_id;         \/* ID of the table. *\/$/;"	m	struct:ofputil_table_desc
table_id	lib/ofp-util.h	/^    uint8_t table_id;         \/* Identifier of table. Lower numbered tables$/;"	m	struct:ofputil_table_features
table_id	lib/ofp-util.h	/^    uint8_t table_id;$/;"	m	struct:ofputil_flow_mod
table_id	lib/ofp-util.h	/^    uint8_t table_id;$/;"	m	struct:ofputil_flow_monitor_request
table_id	lib/ofp-util.h	/^    uint8_t table_id;$/;"	m	struct:ofputil_flow_stats
table_id	lib/ofp-util.h	/^    uint8_t table_id;$/;"	m	struct:ofputil_flow_stats_request
table_id	lib/ofp-util.h	/^    uint8_t table_id;$/;"	m	struct:ofputil_flow_update
table_id	ofproto/connmgr.h	/^    uint8_t table_id;$/;"	m	struct:ofmonitor
table_id	ofproto/ofproto-dpif-rid.h	/^    uint8_t table_id;$/;"	m	struct:recirc_state
table_id	ofproto/ofproto-dpif-xlate.c	/^    uint8_t table_id;           \/* OpenFlow table ID where flow was found. *\/$/;"	m	struct:xlate_ctx	file:
table_id	ofproto/ofproto-provider.h	/^    const uint8_t table_id;        \/* Index in ofproto's 'tables' array. *\/$/;"	m	struct:rule
table_id	ofproto/ofproto.c	/^    uint8_t table_id;$/;"	m	struct:rule_criteria	file:
table_id	ovn/controller/ofctrl.c	/^    uint8_t table_id;$/;"	m	struct:ovn_flow	file:
table_id	ovn/lib/ovn-sb-idl.h	/^	int64_t table_id;$/;"	m	struct:sbrec_logical_flow
table_init	lib/table.c	/^table_init(struct table *table)$/;"	f
table_instance	datapath/flow_table.h	/^struct table_instance {$/;"	s
table_instance_alloc	datapath/flow_table.c	/^static struct table_instance *table_instance_alloc(int new_size)$/;"	f	file:
table_instance_alloc	datapath/linux/flow_table.c	/^static struct table_instance *table_instance_alloc(int new_size)$/;"	f	file:
table_instance_destroy	datapath/flow_table.c	/^static void table_instance_destroy(struct table_instance *ti,$/;"	f	file:
table_instance_destroy	datapath/linux/flow_table.c	/^static void table_instance_destroy(struct table_instance *ti,$/;"	f	file:
table_instance_expand	datapath/flow_table.c	/^static struct table_instance *table_instance_expand(struct table_instance *ti,$/;"	f	file:
table_instance_expand	datapath/linux/flow_table.c	/^static struct table_instance *table_instance_expand(struct table_instance *ti,$/;"	f	file:
table_instance_insert	datapath/flow_table.c	/^static void table_instance_insert(struct table_instance *ti,$/;"	f	file:
table_instance_insert	datapath/linux/flow_table.c	/^static void table_instance_insert(struct table_instance *ti,$/;"	f	file:
table_instance_rehash	datapath/flow_table.c	/^static struct table_instance *table_instance_rehash(struct table_instance *ti,$/;"	f	file:
table_instance_rehash	datapath/linux/flow_table.c	/^static struct table_instance *table_instance_rehash(struct table_instance *ti,$/;"	f	file:
table_instruction_features_empty	lib/ofp-print.c	/^table_instruction_features_empty($/;"	f	file:
table_instruction_features_equal	lib/ofp-print.c	/^table_instruction_features_equal($/;"	f	file:
table_is_internal	ofproto/ofproto-dpif.c	/^table_is_internal(uint8_t table_id)$/;"	f
table_json	ovsdb/file.c	/^    struct json *table_json;    \/* JSON for 'table''s transaction. *\/$/;"	m	struct:ovsdb_file_txn	typeref:struct:ovsdb_file_txn::json	file:
table_mod	ofproto/ofproto.c	/^table_mod(struct ofproto *ofproto, const struct ofputil_table_mod *tm)$/;"	f	file:
table_mod__	ofproto/ofproto.c	/^table_mod__(struct oftable *oftable,$/;"	f	file:
table_parse_cell_format	lib/table.c	/^table_parse_cell_format(struct table_style *style, const char *format)$/;"	f
table_parse_format	lib/table.c	/^table_parse_format(struct table_style *style, const char *format)$/;"	f
table_print	lib/table.c	/^table_print(const struct table *table, const struct table_style *style)$/;"	f
table_print_csv__	lib/table.c	/^table_print_csv__(const struct table *table, const struct table_style *style)$/;"	f	file:
table_print_csv_cell__	lib/table.c	/^table_print_csv_cell__(const char *content)$/;"	f	file:
table_print_html__	lib/table.c	/^table_print_html__(const struct table *table, const struct table_style *style)$/;"	f	file:
table_print_html_cell__	lib/table.c	/^table_print_html_cell__(const char *element, const char *content)$/;"	f	file:
table_print_json__	lib/table.c	/^table_print_json__(const struct table *table, const struct table_style *style)$/;"	f	file:
table_print_list__	lib/table.c	/^table_print_list__(const struct table *table, const struct table_style *style)$/;"	f	file:
table_print_table__	lib/table.c	/^table_print_table__(const struct table *table, const struct table_style *style)$/;"	f	file:
table_print_table_line__	lib/table.c	/^table_print_table_line__(struct ds *line)$/;"	f	file:
table_print_timestamp__	lib/table.c	/^table_print_timestamp__(const struct table *table)$/;"	f	file:
table_set_caption	lib/table.c	/^table_set_caption(struct table *table, char *caption)$/;"	f
table_set_timestamp	lib/table.c	/^table_set_timestamp(struct table *table, bool timestamp)$/;"	f
table_stats_equal	lib/ofp-print.c	/^table_stats_equal(const struct ofputil_table_stats *a,$/;"	f	file:
table_style	lib/table.h	/^struct table_style {$/;"	s
table_style	ovn/utilities/ovn-nbctl.c	/^static struct table_style table_style = TABLE_STYLE_DEFAULT;$/;"	v	typeref:struct:table_style	file:
table_style	ovn/utilities/ovn-sbctl.c	/^static struct table_style table_style = TABLE_STYLE_DEFAULT;$/;"	v	typeref:struct:table_style	file:
table_style	ovsdb/ovsdb-client.c	/^static struct table_style table_style = TABLE_STYLE_DEFAULT;$/;"	v	typeref:struct:table_style	file:
table_style	utilities/ovs-vsctl.c	/^static struct table_style table_style = TABLE_STYLE_DEFAULT;$/;"	v	typeref:struct:table_style	file:
table_style	vtep/vtep-ctl.c	/^static struct table_style table_style = TABLE_STYLE_DEFAULT;$/;"	v	typeref:struct:table_style	file:
tables	lib/db-ctl-base.c	/^static const struct ctl_table_class *tables;$/;"	v	typeref:struct:ctl_table_class	file:
tables	lib/ovsdb-idl-provider.h	/^    const struct ovsdb_idl_table_class *tables;$/;"	m	struct:ovsdb_idl_class	typeref:struct:ovsdb_idl_class::ovsdb_idl_table_class
tables	lib/ovsdb-idl.c	/^    struct ovsdb_idl_table *tables; \/* Contains "struct ovsdb_idl_table *"s.*\/$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::ovsdb_idl_table	file:
tables	ofproto/ofproto-provider.h	/^    struct oftable *tables;$/;"	m	struct:ofproto	typeref:struct:ofproto::oftable
tables	ovn/utilities/ovn-nbctl.c	/^static const struct ctl_table_class tables[] = {$/;"	v	typeref:struct:ctl_table_class	file:
tables	ovn/utilities/ovn-sbctl.c	/^static const struct ctl_table_class tables[] = {$/;"	v	typeref:struct:ctl_table_class	file:
tables	ovsdb/monitor.c	/^    struct shash tables;     \/* Holds "struct ovsdb_monitor_table"s. *\/$/;"	m	struct:ovsdb_monitor	typeref:struct:ovsdb_monitor::shash	file:
tables	ovsdb/ovsdb-doc	/^    tables = ""$/;"	v
tables	ovsdb/ovsdb.h	/^    struct shash tables;        \/* Contains "struct ovsdb_table *"s. *\/$/;"	m	struct:ovsdb	typeref:struct:ovsdb::shash
tables	ovsdb/ovsdb.h	/^    struct shash tables;        \/* Contains "struct ovsdb_table_schema *"s. *\/$/;"	m	struct:ovsdb_schema	typeref:struct:ovsdb_schema::shash
tables	utilities/ovs-vsctl.c	/^static const struct ctl_table_class tables[] = {$/;"	v	typeref:struct:ctl_table_class	file:
tables	vtep/vtep-ctl.c	/^static const struct ctl_table_class tables[] = {$/;"	v	typeref:struct:ctl_table_class	file:
tables_version	ofproto/ofproto-dpif-xlate.c	/^    cls_version_t tables_version;$/;"	m	struct:xlate_ctx	file:
tables_version	ofproto/ofproto-provider.h	/^    cls_version_t tables_version;  \/* Controls which rules are visible to$/;"	m	struct:ofproto
tag	datapath-windows/ovsext/Ethernet.h	/^    Eth_802_1pq_Tag tag;       \/\/ VLAN\/QOS tag$/;"	m	struct:Eth_802_1pq
tag	lib/ovsdb-error.c	/^    const char *tag;            \/* String for "error" member. *\/$/;"	m	struct:ovsdb_error	file:
tag	lib/sflow.h	/^    u_int32_t tag;  \/* SFLFlow_type_tag *\/$/;"	m	struct:_SFLFlow_sample_element
tag	lib/sflow.h	/^    u_int32_t tag; \/* SFLCounters_type_tag *\/$/;"	m	struct:_SFLCounters_sample_element
tag	lib/vswitch-idl.h	/^	int64_t *tag;$/;"	m	struct:ovsrec_port
tag	ovn/lib/ovn-nb-idl.h	/^	int64_t *tag;$/;"	m	struct:nbrec_logical_port
tag	ovn/lib/ovn-sb-idl.h	/^	int64_t *tag;$/;"	m	struct:sbrec_port_binding
tag	utilities/ovs-dev.py	/^def tag():$/;"	f
tail	datapath-windows/ovsext/Netlink/NetlinkBuf.h	/^    PCHAR tail;         \/* first empty byte of the buffer *\/$/;"	m	struct:_NL_BUF
tail	datapath/actions.c	/^	int tail;$/;"	m	struct:action_fifo	file:
tail	datapath/linux/actions.c	/^	int tail;$/;"	m	struct:action_fifo	file:
tail	lib/byteq.h	/^    unsigned int tail;          \/* Chases the head. *\/$/;"	m	struct:byteq
tail_table	tests/testsuite	/^tail_table() {$/;"	f
tail_tables	tests/testsuite	/^tail_tables() {$/;"	f
tap_fd	lib/netdev-bsd.c	/^    int tap_fd;         \/* TAP character device, if any, otherwise -1. *\/$/;"	m	struct:netdev_bsd	file:
tap_fd	lib/netdev-linux.c	/^    int tap_fd;$/;"	m	struct:netdev_linux	file:
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tarfile	utilities/bugtool/ovs-bugtool	/^import tarfile$/;"	i
target	datapath/flow.h	/^				struct in6_addr target;	\/* ND target address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon37::__anon39	typeref:struct:sw_flow_key::__anon33::__anon37::__anon39::in6_addr
target	lib/classifier.h	/^    const struct cls_rule *target;$/;"	m	struct:cls_cursor	typeref:struct:cls_cursor::cls_rule
target	lib/netdev-linux.c	/^    uint32_t target;$/;"	m	struct:codel	file:
target	lib/netdev-linux.c	/^    uint32_t target;$/;"	m	struct:fqcodel	file:
target	lib/packets.h	/^    union ovs_16aligned_in6_addr target;$/;"	m	struct:ovs_nd_msg	typeref:union:ovs_nd_msg::ovs_16aligned_in6_addr
target	lib/rconn.c	/^    char *target;               \/* vconn name, passed to vconn_open(). *\/$/;"	m	struct:rconn	file:
target	lib/vswitch-idl.h	/^	char *target;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_controller
target	lib/vswitch-idl.h	/^	char *target;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_manager
target	ofproto/ofproto.h	/^    char *target;               \/* e.g. "tcp:127.0.0.1" *\/$/;"	m	struct:ofproto_controller
target	vtep/vtep-idl.h	/^	char *target;	\/* Always nonnull. *\/$/;"	m	struct:vteprec_manager
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	datapath/Makefile	/^target_alias = $/;"	m
targets	lib/vswitch-idl.h	/^	char **targets;$/;"	m	struct:ovsrec_ipfix
targets	lib/vswitch-idl.h	/^	char **targets;$/;"	m	struct:ovsrec_netflow
targets	lib/vswitch-idl.h	/^	char **targets;$/;"	m	struct:ovsrec_sflow
targets	ofproto/ofproto.h	/^    struct sset targets;$/;"	m	struct:ofproto_ipfix_bridge_exporter_options	typeref:struct:ofproto_ipfix_bridge_exporter_options::sset
targets	ofproto/ofproto.h	/^    struct sset targets;$/;"	m	struct:ofproto_ipfix_flow_exporter_options	typeref:struct:ofproto_ipfix_flow_exporter_options::sset
targets	ofproto/ofproto.h	/^    struct sset targets;$/;"	m	struct:ofproto_sflow_options	typeref:struct:ofproto_sflow_options::sset
tbl_mask_array_alloc	datapath/flow_table.c	/^static struct mask_array *tbl_mask_array_alloc(int size)$/;"	f	file:
tbl_mask_array_alloc	datapath/linux/flow_table.c	/^static struct mask_array *tbl_mask_array_alloc(int size)$/;"	f	file:
tbl_mask_array_delete_mask	datapath/flow_table.c	/^static void tbl_mask_array_delete_mask(struct mask_array *ma,$/;"	f	file:
tbl_mask_array_delete_mask	datapath/linux/flow_table.c	/^static void tbl_mask_array_delete_mask(struct mask_array *ma,$/;"	f	file:
tbl_mask_array_realloc	datapath/flow_table.c	/^static int tbl_mask_array_realloc(struct flow_table *tbl, int size)$/;"	f	file:
tbl_mask_array_realloc	datapath/linux/flow_table.c	/^static int tbl_mask_array_realloc(struct flow_table *tbl, int size)$/;"	f	file:
tc	lib/netdev-linux.c	/^    struct tc *tc;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::tc	file:
tc	lib/netdev-linux.c	/^    struct tc tc;$/;"	m	struct:codel	typeref:struct:codel::tc	file:
tc	lib/netdev-linux.c	/^    struct tc tc;$/;"	m	struct:fqcodel	typeref:struct:fqcodel::tc	file:
tc	lib/netdev-linux.c	/^    struct tc tc;$/;"	m	struct:hfsc	typeref:struct:hfsc::tc	file:
tc	lib/netdev-linux.c	/^    struct tc tc;$/;"	m	struct:htb	typeref:struct:htb::tc	file:
tc	lib/netdev-linux.c	/^    struct tc tc;$/;"	m	struct:sfq	typeref:struct:sfq::tc	file:
tc	lib/netdev-linux.c	/^struct tc {$/;"	s	file:
tc	lib/ofp-actions.h	/^    uint8_t tc;$/;"	m	struct:ofpact_mpls_tc
tc	tests/test-rstp.c	/^    struct test_case *tc;$/;"	m	struct:bridge	typeref:struct:bridge::test_case	file:
tc	tests/test-rstp.c	/^    struct test_case *tc;$/;"	m	struct:lan	typeref:struct:lan::test_case	file:
tc	tests/test-stp.c	/^    struct test_case *tc;$/;"	m	struct:bridge	typeref:struct:bridge::test_case	file:
tc	tests/test-stp.c	/^    struct test_case *tc;$/;"	m	struct:lan	typeref:struct:lan::test_case	file:
tc_add_del_ingress_qdisc	lib/netdev-linux.c	/^tc_add_del_ingress_qdisc(struct netdev *netdev, bool add)$/;"	f	file:
tc_add_policer	lib/netdev-linux.c	/^tc_add_policer(struct netdev *netdev,$/;"	f	file:
tc_buffer_per_jiffy	lib/netdev-linux.c	/^tc_buffer_per_jiffy(unsigned int rate)$/;"	f	file:
tc_bytes_to_ticks	lib/netdev-linux.c	/^tc_bytes_to_ticks(unsigned int rate, unsigned int size)$/;"	f	file:
tc_calc_buffer	lib/netdev-linux.c	/^tc_calc_buffer(unsigned int Bps, int mtu, uint64_t burst_bytes)$/;"	f	file:
tc_calc_cell_log	lib/netdev-linux.c	/^tc_calc_cell_log(unsigned int mtu)$/;"	f	file:
tc_del_qdisc	lib/netdev-linux.c	/^tc_del_qdisc(struct netdev *netdev_)$/;"	f	file:
tc_delete_class	lib/netdev-linux.c	/^tc_delete_class(const struct netdev *netdev, unsigned int handle)$/;"	f	file:
tc_destroy	lib/netdev-linux.c	/^    void (*tc_destroy)(struct tc *tc);$/;"	m	struct:tc_ops	file:
tc_destroy	lib/netdev-linux.c	/^tc_destroy(struct tc *tc)$/;"	f	file:
tc_fill_rate	lib/netdev-linux.c	/^tc_fill_rate(struct tc_ratespec *rate, uint64_t Bps, int mtu)$/;"	f	file:
tc_find_queue	lib/netdev-linux.c	/^tc_find_queue(const struct netdev *netdev, unsigned int queue_id)$/;"	f	file:
tc_find_queue__	lib/netdev-linux.c	/^tc_find_queue__(const struct netdev *netdev_, unsigned int queue_id,$/;"	f	file:
tc_get_major	lib/netdev-linux.c	/^tc_get_major(unsigned int handle)$/;"	f	file:
tc_get_minor	lib/netdev-linux.c	/^tc_get_minor(unsigned int handle)$/;"	f	file:
tc_init	lib/netdev-linux.c	/^tc_init(struct tc *tc, const struct tc_ops *ops)$/;"	f	file:
tc_install	lib/netdev-linux.c	/^    int (*tc_install)(struct netdev *netdev, const struct smap *details);$/;"	m	struct:tc_ops	file:
tc_load	lib/netdev-linux.c	/^    int (*tc_load)(struct netdev *netdev, struct ofpbuf *nlmsg);$/;"	m	struct:tc_ops	file:
tc_lookup_linux_name	lib/netdev-linux.c	/^tc_lookup_linux_name(const char *name)$/;"	f	file:
tc_lookup_ovs_name	lib/netdev-linux.c	/^tc_lookup_ovs_name(const char *name)$/;"	f	file:
tc_make_handle	lib/netdev-linux.c	/^tc_make_handle(unsigned int major, unsigned int minor)$/;"	f	file:
tc_make_request	lib/netdev-linux.c	/^tc_make_request(const struct netdev *netdev, int type, unsigned int flags,$/;"	f	file:
tc_ops	lib/netdev-linux.c	/^struct tc_ops {$/;"	s	file:
tc_ops_codel	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_codel = {$/;"	v	typeref:struct:tc_ops	file:
tc_ops_codel	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_codel;$/;"	v	typeref:struct:tc_ops	file:
tc_ops_default	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_default = {$/;"	v	typeref:struct:tc_ops	file:
tc_ops_default	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_default;$/;"	v	typeref:struct:tc_ops	file:
tc_ops_fqcodel	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_fqcodel = {$/;"	v	typeref:struct:tc_ops	file:
tc_ops_fqcodel	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_fqcodel;$/;"	v	typeref:struct:tc_ops	file:
tc_ops_hfsc	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_hfsc = {$/;"	v	typeref:struct:tc_ops	file:
tc_ops_hfsc	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_hfsc;$/;"	v	typeref:struct:tc_ops	file:
tc_ops_htb	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_htb = {$/;"	v	typeref:struct:tc_ops	file:
tc_ops_htb	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_htb;$/;"	v	typeref:struct:tc_ops	file:
tc_ops_other	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_other = {$/;"	v	typeref:struct:tc_ops	file:
tc_ops_other	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_other;$/;"	v	typeref:struct:tc_ops	file:
tc_ops_sfq	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_sfq = {$/;"	v	typeref:struct:tc_ops	file:
tc_ops_sfq	lib/netdev-linux.c	/^static const struct tc_ops tc_ops_sfq;$/;"	v	typeref:struct:tc_ops	file:
tc_parse_class	lib/netdev-linux.c	/^tc_parse_class(const struct ofpbuf *msg, unsigned int *handlep,$/;"	f	file:
tc_parse_qdisc	lib/netdev-linux.c	/^tc_parse_qdisc(const struct ofpbuf *msg, const char **kind,$/;"	f	file:
tc_put_rtab	lib/netdev-linux.c	/^tc_put_rtab(struct ofpbuf *msg, uint16_t type, const struct tc_ratespec *rate)$/;"	f	file:
tc_query_class	lib/netdev-linux.c	/^tc_query_class(const struct netdev *netdev,$/;"	f	file:
tc_query_qdisc	lib/netdev-linux.c	/^tc_query_qdisc(const struct netdev *netdev_)$/;"	f	file:
tc_queue	lib/netdev-linux.c	/^    struct tc_queue tc_queue;$/;"	m	struct:hfsc_class	typeref:struct:hfsc_class::tc_queue	file:
tc_queue	lib/netdev-linux.c	/^    struct tc_queue tc_queue;$/;"	m	struct:htb_class	typeref:struct:htb_class::tc_queue	file:
tc_queue	lib/netdev-linux.c	/^struct tc_queue {$/;"	s	file:
tc_ticks_to_bytes	lib/netdev-linux.c	/^tc_ticks_to_bytes(unsigned int rate, unsigned int ticks)$/;"	f	file:
tc_transact	lib/netdev-linux.c	/^tc_transact(struct ofpbuf *request, struct ofpbuf **replyp)$/;"	f	file:
tci	datapath/flow.h	/^		__be16 tci;		\/* 0 if no VLAN, VLAN_TAG_PRESENT set otherwise. *\/$/;"	m	struct:sw_flow_key::__anon28
tci	lib/odp-util.c	/^    ovs_be16 tci;$/;"	m	struct:ovs_key_vlan__	file:
tcls	tests/test-classifier.c	/^struct tcls {$/;"	s	file:
tcls_delete_matches	tests/test-classifier.c	/^tcls_delete_matches(struct tcls *cls, const struct cls_rule *target)$/;"	f	file:
tcls_destroy	tests/test-classifier.c	/^tcls_destroy(struct tcls *tcls)$/;"	f	file:
tcls_init	tests/test-classifier.c	/^tcls_init(struct tcls *tcls)$/;"	f	file:
tcls_insert	tests/test-classifier.c	/^tcls_insert(struct tcls *tcls, const struct test_rule *rule)$/;"	f	file:
tcls_is_empty	tests/test-classifier.c	/^tcls_is_empty(const struct tcls *tcls)$/;"	f	file:
tcls_lookup	tests/test-classifier.c	/^tcls_lookup(const struct tcls *cls, const struct flow *flow)$/;"	f	file:
tcls_remove	tests/test-classifier.c	/^tcls_remove(struct tcls *cls, const struct test_rule *rule)$/;"	f	file:
tcn_timer	lib/stp.c	/^    struct stp_timer tcn_timer;     \/* 8.5.4.2: Topology change timer. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_timer	file:
tcp	lib/odp-util.c	/^    struct ovs_key_tcp tcp;$/;"	m	union:ovs_key_tp	typeref:struct:ovs_key_tp::ovs_key_tcp	file:
tcp	python/ovstest/rpcserver.py	/^import tcp$/;"	i
tcpCsumNeeded	datapath-windows/ovsext/NetProto.h	/^        UINT16 tcpCsumNeeded:1;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
tcpFlags	datapath-windows/ovsext/DpInternal.h	/^    uint8_t tcpFlags;$/;"	m	struct:OvsFlowStats
tcpFlags	datapath-windows/ovsext/Flow.h	/^    UINT8 tcpFlags;$/;"	m	struct:_OvsFlow
tcp_ack	lib/packets.h	/^    ovs_16aligned_be32 tcp_ack;$/;"	m	struct:tcp_header
tcp_csum	lib/packets.h	/^    ovs_be16 tcp_csum;$/;"	m	struct:tcp_header
tcp_ctl	lib/packets.h	/^    ovs_be16 tcp_ctl;$/;"	m	struct:tcp_header
tcp_dst	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 tcp_dst;$/;"	m	struct:ovs_key_tcp
tcp_dst	include/odp-netlink.h	/^	ovs_be16 tcp_dst;$/;"	m	struct:ovs_key_tcp
tcp_dst	lib/packets.h	/^    ovs_be16 tcp_dst;$/;"	m	struct:tcp_header
tcp_flags	datapath/flow.h	/^	__be16 tcp_flags;		\/* Union of seen TCP flags. *\/$/;"	m	struct:flow_stats
tcp_flags	lib/dpif-netdev.c	/^    atomic_uint16_t tcp_flags;     \/* Bitwise-OR of seen tcp_flags values. *\/$/;"	m	struct:dp_netdev_flow_stats	file:
tcp_flags	lib/dpif-netdev.c	/^    uint16_t tcp_flags;$/;"	m	struct:packet_batch	file:
tcp_flags	lib/dpif-netlink.c	/^    const uint8_t *tcp_flags;           \/* OVS_FLOW_ATTR_TCP_FLAGS. *\/$/;"	m	struct:dpif_netlink_flow	file:
tcp_flags	lib/dpif.h	/^    uint16_t tcp_flags;$/;"	m	struct:dpif_flow_stats
tcp_flags	lib/flow.h	/^    ovs_be16 tcp_flags;         \/* TCP flags. With L3 to avoid matching L4. *\/$/;"	m	struct:flow
tcp_flags	lib/netflow.h	/^    uint8_t  tcp_flags;            \/* Union of seen TCP flags. *\/$/;"	m	struct:netflow_v5_record
tcp_flags	lib/sflow.h	/^    u_int32_t tcp_flags;    \/* TCP flags *\/$/;"	m	struct:_SFLSampled_ipv6
tcp_flags	lib/sflow.h	/^    u_int32_t tcp_flags;   \/* TCP flags *\/$/;"	m	struct:_SFLSampled_ipv4
tcp_flags	ofproto/netflow.c	/^    uint16_t tcp_flags;           \/* Bitwise-OR of all TCP flags seen. *\/$/;"	m	struct:netflow_flow	file:
tcp_flags	ofproto/ofproto-dpif-xlate.h	/^    uint16_t tcp_flags;$/;"	m	struct:xlate_in
tcp_flags	vtep/vtep-idl.h	/^	int64_t *tcp_flags;$/;"	m	struct:vteprec_acl_entry
tcp_flags_mask	vtep/vtep-idl.h	/^	int64_t *tcp_flags_mask;$/;"	m	struct:vteprec_acl_entry
tcp_hdr	datapath/linux/compat/include/linux/tcp.h	/^static inline struct tcphdr *tcp_hdr(const struct sk_buff *skb)$/;"	f
tcp_hdrlen	datapath/linux/compat/include/linux/tcp.h	/^static inline unsigned int tcp_hdrlen(const struct sk_buff *skb)$/;"	f
tcp_header	lib/packets.h	/^struct tcp_header {$/;"	s
tcp_key	lib/pcap-file.c	/^struct tcp_key {$/;"	s	file:
tcp_open	lib/stream-tcp.c	/^tcp_open(const char *name, char *suffix, struct stream **streamp, uint8_t dscp)$/;"	f	file:
tcp_reader	lib/pcap-file.c	/^struct tcp_reader {$/;"	s	file:
tcp_reader_close	lib/pcap-file.c	/^tcp_reader_close(struct tcp_reader *r)$/;"	f
tcp_reader_open	lib/pcap-file.c	/^tcp_reader_open(void)$/;"	f
tcp_reader_run	lib/pcap-file.c	/^tcp_reader_run(struct tcp_reader *r, const struct flow *flow,$/;"	f
tcp_seq	lib/packets.h	/^    ovs_16aligned_be32 tcp_seq;$/;"	m	struct:tcp_header
tcp_sock_create4	datapath/linux/compat/stt.c	/^static int tcp_sock_create4(struct net *net, __be16 port,$/;"	f	file:
tcp_sock_create4	datapath/linux/stt.c	/^static int tcp_sock_create4(struct net *net, __be16 port,$/;"	f	file:
tcp_sock_release	datapath/linux/compat/stt.c	/^static void tcp_sock_release(struct socket *sock)$/;"	f	file:
tcp_sock_release	datapath/linux/stt.c	/^static void tcp_sock_release(struct socket *sock)$/;"	f	file:
tcp_src	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 tcp_src;$/;"	m	struct:ovs_key_tcp
tcp_src	include/odp-netlink.h	/^	ovs_be16 tcp_src;$/;"	m	struct:ovs_key_tcp
tcp_src	lib/packets.h	/^    ovs_be16 tcp_src;$/;"	m	struct:tcp_header
tcp_stream	lib/pcap-file.c	/^struct tcp_stream {$/;"	s	file:
tcp_stream_class	lib/stream-tcp.c	/^const struct stream_class tcp_stream_class = {$/;"	v	typeref:struct:stream_class
tcp_stream_destroy	lib/pcap-file.c	/^tcp_stream_destroy(struct tcp_reader *r, struct tcp_stream *stream)$/;"	f	file:
tcp_stream_lookup	lib/pcap-file.c	/^tcp_stream_lookup(struct tcp_reader *r,$/;"	f	file:
tcp_stream_new	lib/pcap-file.c	/^tcp_stream_new(struct tcp_reader *r, const struct tcp_key *key, uint32_t hash)$/;"	f	file:
tcp_urg	lib/packets.h	/^    ovs_be16 tcp_urg;$/;"	m	struct:tcp_header
tcp_vconn_class	lib/vconn-stream.c	/^const struct vconn_class tcp_vconn_class = STREAM_INIT("tcp");$/;"	v	typeref:struct:vconn_class
tcp_winsz	lib/packets.h	/^    ovs_be16 tcp_winsz;$/;"	m	struct:tcp_header
tcphdr_ok	datapath/flow.c	/^static bool tcphdr_ok(struct sk_buff *skb)$/;"	f	file:
tcphdr_ok	datapath/linux/flow.c	/^static bool tcphdr_ok(struct sk_buff *skb)$/;"	f	file:
tcs	lib/netdev-linux.c	/^static const struct tc_ops *const tcs[] = {$/;"	v	file:
temp	lib/pvector.h	/^    struct pvector_impl *temp;$/;"	m	struct:pvector	typeref:struct:pvector::pvector_impl
tempfile	utilities/ovs-dev.py	/^import tempfile$/;"	i
template_id	ofproto/ofproto-dpif-ipfix.c	/^    uint16_t template_id;$/;"	m	struct:ipfix_flow_key	file:
terminate	utilities/bugtool/ovs-bugtool	/^    def terminate(self):$/;"	m	class:ProcOutput
termios	utilities/ovs-dpctl-top	/^import termios$/;"	i
terse	lib/dpif-provider.h	/^    bool terse;         \/* If true, key\/mask\/actions may be omitted. *\/$/;"	m	struct:dpif_flow_dump
terse	lib/dpif.h	/^    bool terse;                     \/* OK to skip sending\/receiving full flow$/;"	m	struct:dpif_flow_del
test	tests/test-lockfile.c	/^struct test {$/;"	s	file:
test_aa_main	tests/test-aa.c	/^test_aa_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_aa_send	tests/test-aa.c	/^test_aa_send(void)$/;"	f	file:
test_accept_then_close	tests/test-vconn.c	/^test_accept_then_close(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_accumulate	utilities/ovs-dpctl-top	/^        def test_accumulate(self):$/;"	m	class:.TestsuiteFlowParse
test_accumulate_decay	utilities/ovs-dpctl-top	/^        def test_accumulate_decay(self):$/;"	m	class:.TestsuiteFlowParse
test_acq_rel	tests/test-atomic.c	/^test_acq_rel(void)$/;"	f	file:
test_aes128_main	tests/test-aes128.c	/^test_aes128_main(int argc, char *argv[])$/;"	f	file:
test_annotate_expr	tests/test-ovn.c	/^test_annotate_expr(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_arp	tests/testsuite	/^test_arp() {$/;"	f
test_assert	tests/test-util.c	/^test_assert(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_assoc_list	utilities/ovs-dpctl-top	/^        def test_assoc_list(self):$/;"	m	class:.TestsuiteFlowParse
test_atomic	tests/test-atomic.c	/^VLOG_DEFINE_THIS_MODULE(test_atomic);$/;"	v
test_atomic_acq_rel	tests/test-atomic.c	/^test_atomic_acq_rel(void)$/;"	f	file:
test_atomic_acquire	tests/test-atomic.c	/^test_atomic_acquire(void)$/;"	f	file:
test_atomic_consume	tests/test-atomic.c	/^test_atomic_consume(void)$/;"	f	file:
test_atomic_flag	tests/test-atomic.c	/^test_atomic_flag(void)$/;"	f	file:
test_atomic_main	tests/test-atomic.c	/^test_atomic_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_atomic_plain	tests/test-atomic.c	/^test_atomic_plain(void)$/;"	f	file:
test_atomic_relaxed	tests/test-atomic.c	/^test_atomic_relaxed(void)$/;"	f	file:
test_atomic_seq_cst	tests/test-atomic.c	/^test_atomic_seq_cst(void)$/;"	f	file:
test_big_vector	tests/test-sha1.c	/^test_big_vector(void)$/;"	f	file:
test_bitmap_equal	tests/test-bitmap.c	/^test_bitmap_equal(void)$/;"	f	file:
test_bitmap_main	tests/test-bitmap.c	/^test_bitmap_main(int argc, char *argv[])$/;"	f	file:
test_bitmap_scan	tests/test-bitmap.c	/^test_bitmap_scan(void)$/;"	f	file:
test_bits	tests/test-ovn.c	/^static int test_bits = 3;$/;"	v	file:
test_bitwise_copy	tests/test-util.c	/^test_bitwise_copy(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_bitwise_is_all_zeros	tests/test-util.c	/^test_bitwise_is_all_zeros(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_bitwise_one	tests/test-util.c	/^test_bitwise_one(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_bitwise_zero	tests/test-util.c	/^test_bitwise_zero(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_bundle_main	tests/test-bundle.c	/^test_bundle_main(int argc, char *argv[])$/;"	f	file:
test_byte_order_main	tests/test-byte-order.c	/^test_byte_order_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_case	tests/test-csum.c	/^struct test_case {$/;"	s	file:
test_case	tests/test-rstp.c	/^struct test_case {$/;"	s	file:
test_case	tests/test-stp.c	/^struct test_case {$/;"	s	file:
test_cases	tests/test-csum.c	/^static const struct test_case test_cases[] = {$/;"	v	typeref:struct:test_case	file:
test_classifier_main	tests/test-classifier.c	/^test_classifier_main(int argc, char *argv[])$/;"	f	file:
test_clz	tests/test-util.c	/^test_clz(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_cmap_insert_replace_delete	tests/test-cmap.c	/^test_cmap_insert_replace_delete(hash_func *hash)$/;"	f	file:
test_cmap_main	tests/test-cmap.c	/^test_cmap_main(int argc, char *argv[])$/;"	f	file:
test_composition	tests/test-ovn.c	/^test_composition(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_cons_rel	tests/test-atomic.c	/^test_cons_rel(void)$/;"	f	file:
test_count_1bits	tests/test-util.c	/^test_count_1bits(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_crc32c	tests/test-csum.c	/^test_crc32c(void)$/;"	f	file:
test_csum_main	tests/test-csum.c	/^test_csum_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_ctz	tests/test-util.c	/^test_ctz(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_destroy_null	tests/test-classifier.c	/^test_destroy_null(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_empty	tests/test-classifier.c	/^test_empty(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_evaluate_expr	tests/test-ovn.c	/^test_evaluate_expr(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_exhaustive	tests/test-ovn.c	/^test_exhaustive(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_expr_to_flows	tests/test-ovn.c	/^test_expr_to_flows(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_file_name	tests/test-util.c	/^test_file_name(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_flow_line_split	utilities/ovs-dpctl-top	/^        def test_flow_line_split(self):$/;"	m	class:.TestsuiteFlowParse
test_flow_multiple_paren	utilities/ovs-dpctl-top	/^        def test_flow_multiple_paren(self):$/;"	m	class:.TestsuiteFlowParse
test_flow_parse	utilities/ovs-dpctl-top	/^        def test_flow_parse(self):$/;"	m	class:.TestsuiteFlowParse
test_flow_sum	utilities/ovs-dpctl-top	/^        def test_flow_sum(self):$/;"	m	class:.TestsuiteFlowParse
test_flows_main	tests/test-flows.c	/^test_flows_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_follow_symlinks	tests/test-util.c	/^test_follow_symlinks(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_hash_main	tests/test-hash.c	/^test_hash_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_heap_insert_delete_every_order	tests/test-heap.c	/^test_heap_insert_delete_every_order(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_heap_insert_delete_reverse_order	tests/test-heap.c	/^test_heap_insert_delete_reverse_order(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_heap_insert_delete_same_order	tests/test-heap.c	/^test_heap_insert_delete_same_order(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_heap_insert_delete_same_order_with_dups	tests/test-heap.c	/^test_heap_insert_delete_same_order_with_dups(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_heap_main	tests/test-heap.c	/^test_heap_main(int argc, char *argv[])$/;"	f	file:
test_heap_raw_delete	tests/test-heap.c	/^test_heap_raw_delete(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_heap_raw_insert	tests/test-heap.c	/^test_heap_raw_insert(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_hindex_for_each_safe	tests/test-hindex.c	/^test_hindex_for_each_safe(hash_func *hash)$/;"	f	file:
test_hindex_insert_delete	tests/test-hindex.c	/^test_hindex_insert_delete(hash_func *hash)$/;"	f	file:
test_hindex_main	tests/test-hindex.c	/^test_hindex_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_hindex_reserve_shrink	tests/test-hindex.c	/^test_hindex_reserve_shrink(hash_func *hash)$/;"	f	file:
test_hmap_for_each_safe	tests/test-hmap.c	/^test_hmap_for_each_safe(hash_func *hash)$/;"	f	file:
test_hmap_insert_delete	tests/test-hmap.c	/^test_hmap_insert_delete(hash_func *hash)$/;"	f	file:
test_hmap_main	tests/test-hmap.c	/^test_hmap_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_hmap_reserve_shrink	tests/test-hmap.c	/^test_hmap_reserve_shrink(hash_func *hash)$/;"	f	file:
test_human_format	utilities/ovs-dpctl-top	/^        def test_human_format(self):$/;"	m	class:.TestsuiteFlowParse
test_insert_delete__	tests/test-heap.c	/^test_insert_delete__(struct element *elements,$/;"	f	file:
test_insert_delete_raw__	tests/test-heap.c	/^test_insert_delete_raw__(struct element *elements,$/;"	f	file:
test_ip	tests/testsuite	/^test_ip() {$/;"	f
test_ipv4_cidr	tests/test-packets.c	/^test_ipv4_cidr(void)$/;"	f	file:
test_ipv6_cidr	tests/test-packets.c	/^test_ipv6_cidr(void)$/;"	f	file:
test_ipv6_masking	tests/test-packets.c	/^test_ipv6_masking(void)$/;"	f	file:
test_ipv6_static_masks	tests/test-packets.c	/^test_ipv6_static_masks(void)$/;"	f	file:
test_json_main	tests/test-json.c	/^test_json_main(int argc, char *argv[])$/;"	f	file:
test_jsonrpc_main	tests/test-jsonrpc.c	/^test_jsonrpc_main(int argc, char *argv[])$/;"	f	file:
test_lex	tests/test-ovn.c	/^test_lex(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_list_construction	tests/test-list.c	/^test_list_construction(void)$/;"	f	file:
test_list_for_each_pop	tests/test-list.c	/^test_list_for_each_pop(void)$/;"	f	file:
test_list_for_each_safe	tests/test-list.c	/^test_list_for_each_safe(void)$/;"	f	file:
test_list_main	tests/test-list.c	/^test_list_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_lockfile_main	tests/test-lockfile.c	/^test_lockfile_main(int argc, char *argv[])$/;"	f	file:
test_log_2_floor	tests/test-util.c	/^test_log_2_floor(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_many_rules_in_five_tables	tests/test-classifier.c	/^test_many_rules_in_five_tables(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_many_rules_in_n_tables	tests/test-classifier.c	/^test_many_rules_in_n_tables(int n_tables)$/;"	f	file:
test_many_rules_in_one_list	tests/test-classifier.c	/^test_many_rules_in_one_list (struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_many_rules_in_one_table	tests/test-classifier.c	/^test_many_rules_in_one_table(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_many_rules_in_two_tables	tests/test-classifier.c	/^test_many_rules_in_two_tables(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_miniflow	tests/test-classifier.c	/^test_miniflow(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_minimask_combine	tests/test-classifier.c	/^test_minimask_combine(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_minimask_has_extra	tests/test-classifier.c	/^test_minimask_has_extra(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_multipath_main	tests/test-multipath.c	/^test_multipath_main(int argc, char *argv[])$/;"	f	file:
test_netflow_exit	tests/test-netflow.c	/^static unixctl_cb_func test_netflow_exit;$/;"	v	file:
test_netflow_exit	tests/test-netflow.c	/^test_netflow_exit(struct unixctl_conn *conn,$/;"	f	file:
test_netflow_main	tests/test-netflow.c	/^test_netflow_main(int argc, char *argv[])$/;"	f	file:
test_normalize_expr	tests/test-ovn.c	/^test_normalize_expr(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_nvars	tests/test-ovn.c	/^static int test_nvars = 2;$/;"	v	file:
test_odp_main	tests/test-odp.c	/^test_odp_main(int argc, char *argv[])$/;"	f	file:
test_ofpbuf_main	tests/test-ofpbuf.c	/^test_ofpbuf_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_one	tests/test-sha1.c	/^test_one(const struct test_vector *vec)$/;"	f	file:
test_ovn_main	tests/test-ovn.c	/^test_ovn_main(int argc, char *argv[])$/;"	f	file:
test_ovs_scan	tests/test-util.c	/^test_ovs_scan(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_packet	tests/testsuite	/^test_packet() {$/;"	f
test_packets_main	tests/test-packets.c	/^test_packets_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_parallel	tests/test-ovn.c	/^static int test_parallel = 1;$/;"	v	file:
test_parse_actions	tests/test-ovn.c	/^test_parse_actions(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_parse_character_errors	utilities/ovs-dpctl-top	/^        def test_parse_character_errors(self):$/;"	m	class:.TestsuiteFlowParse
test_parse_expr	tests/test-ovn.c	/^test_parse_expr(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_parse_expr__	tests/test-ovn.c	/^test_parse_expr__(int steps)$/;"	f	file:
test_pseudo	tests/test-csum.c	/^test_pseudo(void)$/;"	f	file:
test_random_main	tests/test-random.c	/^test_random_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_read_hello	tests/test-vconn.c	/^test_read_hello(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_reconnect_main	tests/test-reconnect.c	/^test_reconnect_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_refuse_connection	tests/test-vconn.c	/^test_refuse_connection(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_relops	tests/test-ovn.c	/^static unsigned int test_relops;$/;"	v	file:
test_rfc1624	tests/test-csum.c	/^test_rfc1624(void)$/;"	f	file:
test_round_down_pow2	tests/test-util.c	/^test_round_down_pow2(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_round_up_pow2	tests/test-util.c	/^test_round_up_pow2(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_rstp_main	tests/test-rstp.c	/^test_rstp_main(int argc, char *argv[])$/;"	f	file:
test_rule	tests/test-classifier.c	/^struct test_rule {$/;"	s	file:
test_rule	tests/test-ovn.c	/^struct test_rule {$/;"	s	file:
test_rule_destroy	tests/test-classifier.c	/^test_rule_destroy(struct test_rule *rule)$/;"	f	file:
test_rule_from_cls_rule	tests/test-classifier.c	/^test_rule_from_cls_rule(const struct cls_rule *rule)$/;"	f	file:
test_rule_replacement	tests/test-classifier.c	/^test_rule_replacement(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_send_echo_hello	tests/test-vconn.c	/^test_send_echo_hello(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_send_hello	tests/test-vconn.c	/^test_send_hello(const char *type, const void *out, size_t out_size,$/;"	f	file:
test_send_invalid_version_hello	tests/test-vconn.c	/^test_send_invalid_version_hello(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_send_long_hello	tests/test-vconn.c	/^test_send_long_hello(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_send_plain_hello	tests/test-vconn.c	/^test_send_plain_hello(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_send_short_hello	tests/test-vconn.c	/^test_send_short_hello(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_sflow_exit	tests/test-sflow.c	/^static unixctl_cb_func test_sflow_exit;$/;"	v	file:
test_sflow_exit	tests/test-sflow.c	/^test_sflow_exit(struct unixctl_conn *conn,$/;"	f	file:
test_sflow_main	tests/test-sflow.c	/^test_sflow_main(int argc, char *argv[])$/;"	f	file:
test_shar1_main	tests/test-sha1.c	/^test_shar1_main(int argc OVS_UNUSED, char *argv[] OVS_UNUSED)$/;"	f	file:
test_simplify_expr	tests/test-ovn.c	/^test_simplify_expr(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_single_rule	tests/test-classifier.c	/^test_single_rule(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_snprintf	tests/test-util.c	/^test_snprintf(struct ovs_cmdl_context *ctx OVS_UNUSED)$/;"	f	file:
test_stp_main	tests/test-stp.c	/^test_stp_main(int argc, char *argv[])$/;"	f	file:
test_svars	tests/test-ovn.c	/^static int test_svars = 2;$/;"	v	file:
test_to_network	utilities/ovs-dpctl-top	/^        def test_to_network(self):$/;"	m	class:.TestsuiteFlowParse
test_tree_shape	tests/test-ovn.c	/^test_tree_shape(struct ovs_cmdl_context *ctx)$/;"	f	file:
test_tree_shape_exhaustively	tests/test-ovn.c	/^test_tree_shape_exhaustively(struct expr *expr, struct shash *symtab,$/;"	f	file:
test_trigger	tests/test-ovsdb.c	/^struct test_trigger {$/;"	s	file:
test_tunnel_parsing	utilities/ovs-dpctl-top	/^        def test_tunnel_parsing(self):$/;"	m	class:.TestsuiteFlowParse
test_ui	utilities/ovs-dpctl-top	/^        def test_ui(self):$/;"	m	class:.TestsuiteFlowParse
test_unix_socket_main	tests/test-unix-socket.c	/^test_unix_socket_main(int argc, char *argv[])$/;"	f	file:
test_util_main	tests/test-util.c	/^test_util_main(int argc, char *argv[])$/;"	f	file:
test_uuid_main	tests/test-uuid.c	/^test_uuid_main(int argc, char *argv[])$/;"	f	file:
test_varargs_macros	configure	/^  test_varargs_macros ();$/;"	f
test_vconn_main	tests/test-vconn.c	/^test_vconn_main(int argc, char *argv[])$/;"	f	file:
test_vector	tests/test-sha1.c	/^struct test_vector {$/;"	s	file:
tests	tests/test-lockfile.c	/^static const struct test tests[] = {$/;"	v	typeref:struct:test	file:
tests	utilities/ovs-l3ping	/^import ovstest.tests as tests$/;"	i
tests	utilities/ovs-test	/^import ovstest.tests as tests$/;"	i
tests_ovstest_DEPENDENCIES	Makefile	/^tests_ovstest_DEPENDENCIES = lib\/libopenvswitch.la ovn\/lib\/libovn.la$/;"	m
tests_ovstest_LDADD	Makefile	/^tests_ovstest_LDADD = lib\/libopenvswitch.la ovn\/lib\/libovn.la$/;"	m
tests_ovstest_LDADD	tests/automake.mk	/^tests_ovstest_LDADD = lib\/libopenvswitch.la ovn\/lib\/libovn.la$/;"	m
tests_ovstest_OBJECTS	Makefile	/^tests_ovstest_OBJECTS = $(am_tests_ovstest_OBJECTS)$/;"	m
tests_ovstest_SOURCES	Makefile	/^tests_ovstest_SOURCES = tests\/ovstest.c tests\/ovstest.h \\$/;"	m
tests_ovstest_SOURCES	tests/automake.mk	/^tests_ovstest_SOURCES = \\$/;"	m
tests_test_dpdkr_LDADD	tests/automake.mk	/^tests_test_dpdkr_LDADD = lib\/libopenvswitch.la $(LIBS)$/;"	m
tests_test_dpdkr_OBJECTS	Makefile	/^tests_test_dpdkr_OBJECTS = $(am_tests_test_dpdkr_OBJECTS)$/;"	m
tests_test_dpdkr_SOURCES	tests/automake.mk	/^tests_test_dpdkr_SOURCES = \\$/;"	m
tests_test_lib_DEPENDENCIES	Makefile	/^tests_test_lib_DEPENDENCIES = lib\/libopenvswitch.la$/;"	m
tests_test_lib_LDADD	Makefile	/^tests_test_lib_LDADD = lib\/libopenvswitch.la$/;"	m
tests_test_lib_LDADD	tests/automake.mk	/^tests_test_lib_LDADD = lib\/libopenvswitch.la$/;"	m
tests_test_lib_OBJECTS	Makefile	/^tests_test_lib_OBJECTS = $(am_tests_test_lib_OBJECTS)$/;"	m
tests_test_lib_SOURCES	Makefile	/^tests_test_lib_SOURCES = \\$/;"	m
tests_test_lib_SOURCES	tests/automake.mk	/^tests_test_lib_SOURCES = \\$/;"	m
tests_test_ovsdb_DEPENDENCIES	Makefile	/^tests_test_ovsdb_DEPENDENCIES = ovsdb\/libovsdb.la \\$/;"	m
tests_test_ovsdb_LDADD	Makefile	/^tests_test_ovsdb_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
tests_test_ovsdb_LDADD	tests/automake.mk	/^tests_test_ovsdb_LDADD = ovsdb\/libovsdb.la lib\/libopenvswitch.la$/;"	m
tests_test_ovsdb_OBJECTS	Makefile	/^tests_test_ovsdb_OBJECTS = $(am_tests_test_ovsdb_OBJECTS) \\$/;"	m
tests_test_ovsdb_SOURCES	Makefile	/^tests_test_ovsdb_SOURCES = tests\/test-ovsdb.c$/;"	m
tests_test_ovsdb_SOURCES	tests/automake.mk	/^tests_test_ovsdb_SOURCES = tests\/test-ovsdb.c$/;"	m
tests_test_strtok_r_LDADD	Makefile	/^tests_test_strtok_r_LDADD = $(LDADD)$/;"	m
tests_test_strtok_r_OBJECTS	Makefile	/^tests_test_strtok_r_OBJECTS = $(am_tests_test_strtok_r_OBJECTS)$/;"	m
tests_test_strtok_r_SOURCES	Makefile	/^tests_test_strtok_r_SOURCES = tests\/test-strtok_r.c$/;"	m
tests_test_strtok_r_SOURCES	tests/automake.mk	/^tests_test_strtok_r_SOURCES = tests\/test-strtok_r.c$/;"	m
tests_test_type_props_LDADD	Makefile	/^tests_test_type_props_LDADD = $(LDADD)$/;"	m
tests_test_type_props_OBJECTS	Makefile	/^tests_test_type_props_OBJECTS = $(am_tests_test_type_props_OBJECTS)$/;"	m
tests_test_type_props_SOURCES	Makefile	/^tests_test_type_props_SOURCES = tests\/test-type-props.c$/;"	m
tests_test_type_props_SOURCES	tests/automake.mk	/^tests_test_type_props_SOURCES = tests\/test-type-props.c$/;"	m
text	lib/table.h	/^    char *text;$/;"	m	struct:cell
text_to_nroff	python/build/nroff.py	/^def text_to_nroff(s, font=r'\\fR'):$/;"	f
textwrap	utilities/ovs-pipegen.py	/^import textwrap$/;"	i
tha	datapath/flow.h	/^				u8 tha[ETH_ALEN];	\/* ARP target hardware address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon34::__anon36
the	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
the_idl	ovn/utilities/ovn-nbctl.c	/^static struct ovsdb_idl *the_idl;$/;"	v	typeref:struct:ovsdb_idl	file:
the_idl	ovn/utilities/ovn-sbctl.c	/^static struct ovsdb_idl *the_idl;$/;"	v	typeref:struct:ovsdb_idl	file:
the_idl	utilities/ovs-vsctl.c	/^static struct ovsdb_idl *the_idl;$/;"	v	typeref:struct:ovsdb_idl	file:
the_idl	vtep/vtep-ctl.c	/^static struct ovsdb_idl *the_idl;$/;"	v	typeref:struct:ovsdb_idl	file:
the_idl_txn	ovn/utilities/ovn-nbctl.c	/^static struct ovsdb_idl_txn *the_idl_txn;$/;"	v	typeref:struct:ovsdb_idl_txn	file:
the_idl_txn	ovn/utilities/ovn-sbctl.c	/^static struct ovsdb_idl_txn *the_idl_txn;$/;"	v	typeref:struct:ovsdb_idl_txn	file:
the_idl_txn	utilities/ovs-vsctl.c	/^static struct ovsdb_idl_txn *the_idl_txn;$/;"	v	typeref:struct:ovsdb_idl_txn	file:
the_idl_txn	vtep/vtep-ctl.c	/^static struct ovsdb_idl_txn *the_idl_txn;$/;"	v	typeref:struct:ovsdb_idl_txn	file:
the_root_prefix	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^the_root_prefix = ""$/;"	v
this_cpu_dec	datapath/linux/compat/include/linux/percpu.h	13;"	d
this_cpu_dec	datapath/linux/compat/include/linux/percpu.h	25;"	d
this_cpu_inc	datapath/linux/compat/include/linux/percpu.h	12;"	d
this_cpu_inc	datapath/linux/compat/include/linux/percpu.h	21;"	d
this_cpu_ptr	datapath/linux/compat/include/linux/percpu.h	7;"	d
this_cpu_read	datapath/linux/compat/include/linux/percpu.h	11;"	d
this_cpu_read	datapath/linux/compat/include/linux/percpu.h	17;"	d
thiszone	lib/pcap-file.c	/^    int32_t thiszone;        \/* GMT to local correction *\/$/;"	m	struct:pcap_hdr	file:
thoff	datapath/linux/compat/include/net/flow_keys.h	/^	u16 thoff;$/;"	m	struct:flow_keys
thread	lib/dpif-netdev.c	/^    pthread_t thread;$/;"	m	struct:dp_netdev_pmd_thread	file:
thread	ofproto/ofproto-dpif-upcall.c	/^    pthread_t thread;                  \/* Thread ID. *\/$/;"	m	struct:handler	file:
thread	ofproto/ofproto-dpif-upcall.c	/^    pthread_t thread;                  \/* Thread ID. *\/$/;"	m	struct:revalidator	file:
thread	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
threadID	datapath-windows/ovsext/TunnelFilter.c	/^    UINT                    threadID;$/;"	m	struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
threadObject	datapath-windows/ovsext/IpHelper.h	/^    PVOID             threadObject;$/;"	m	struct:_OVS_IP_HELPER_THREAD_CONTEXT
threadObject	datapath-windows/ovsext/Stt.h	/^    PVOID       threadObject;$/;"	m	struct:_OVS_STT_THREAD_CTX
threadObject	datapath-windows/ovsext/TunnelFilter.c	/^    PVOID                   threadObject;$/;"	m	struct:_OVS_TUNFLT_THREAD_CONTEXT	file:
thread_is_pmd	lib/netdev-dpdk.c	/^thread_is_pmd(void)$/;"	f	file:
thread_local	lib/ovs-thread.h	236;"	d
threading	python/ovs/vlog.py	/^import threading$/;"	i
threading	utilities/ovs-dpctl-top	/^import threading$/;"	i
threading	utilities/ovs-vlan-test	/^import threading$/;"	i
throwException	windows/ovs-windows-installer/Actions/OVSActions.js	/^function throwException(num, msg) {$/;"	f
ti	datapath/flow_table.h	/^	struct table_instance __rcu *ti;$/;"	m	struct:flow_table	typeref:struct:flow_table::__rcu
ticks_per_s	lib/netdev-linux.c	/^static double ticks_per_s;$/;"	v	file:
ticks_to_ms	vswitchd/system-stats.c	/^ticks_to_ms(unsigned long long int ticks)$/;"	f	file:
time	python/ovs/daemon.py	/^import time$/;"	i
time	python/ovs/timeval.py	/^import time$/;"	i
time	python/ovstest/tcp.py	/^import time$/;"	i
time	python/ovstest/tests.py	/^import time$/;"	i
time	python/ovstest/udp.py	/^import time$/;"	i
time	tests/test-daemon.py	/^import time$/;"	i
time	utilities/bugtool/ovs-bugtool	/^import time$/;"	i
time	utilities/ovs-dpctl-top	/^import time$/;"	i
time	utilities/ovs-test	/^import time$/;"	i
time	utilities/ovs-vlan-test	/^import time$/;"	i
time	utilities/qemu-wrap.py	/^import time$/;"	i
time	vtep/ovs-vtep	/^import time$/;"	i
time	xenserver/opt_xensource_libexec_InterfaceReconfigureBridge.py	/^import time$/;"	i
time	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import time$/;"	i
time_after64	datapath/linux/compat/include/linux/jiffies.h	13;"	d
time_after_eq64	datapath/linux/compat/include/linux/jiffies.h	24;"	d
time_alarm	lib/timeval.c	/^time_alarm(unsigned int secs)$/;"	f
time_before64	datapath/linux/compat/include/linux/jiffies.h	20;"	d
time_before_eq64	datapath/linux/compat/include/linux/jiffies.h	31;"	d
time_boot_msec	lib/timeval.c	/^time_boot_msec(void)$/;"	f
time_decode	lib/rstp-state-machines.c	/^time_decode(ovs_be16 encoded)$/;"	f	file:
time_encode	lib/rstp-state-machines.c	/^time_encode(uint8_t value)$/;"	f	file:
time_in_msec	utilities/ovs-benchmark.c	/^time_in_msec(void)$/;"	f	file:
time_init	lib/timeval.c	/^time_init(void)$/;"	f	file:
time_msec	lib/timeval.c	/^time_msec(void)$/;"	f
time_msec__	lib/timeval.c	/^time_msec__(struct clock *c)$/;"	f	file:
time_now	lib/timeval.c	/^time_now(void)$/;"	f
time_poll	lib/timeval.c	/^time_poll(struct pollfd *pollfds, int n_pollfds, HANDLE *handles OVS_UNUSED,$/;"	f
time_sec__	lib/timeval.c	/^time_sec__(struct clock *c)$/;"	f	file:
time_t	python/ovs/timeval.py	/^        time_t = ctypes.c_int64$/;"	v
time_t	python/ovs/timeval.py	/^        time_t = ctypes.c_long$/;"	v
time_timespec	lib/timeval.c	/^time_timespec(struct timespec *ts)$/;"	f
time_timespec__	lib/timeval.c	/^time_timespec__(struct clock *c, struct timespec *ts)$/;"	f	file:
time_wall	lib/timeval.c	/^time_wall(void)$/;"	f
time_wall_msec	lib/timeval.c	/^time_wall_msec(void)$/;"	f
time_wall_timespec	lib/timeval.c	/^time_wall_timespec(struct timespec *ts)$/;"	f
timeout	datapath-windows/ovsext/IpHelper.h	/^    UINT64            timeout;$/;"	m	struct:_OVS_IPNEIGH_ENTRY
timeout	datapath-windows/ovsext/Stt.h	/^    UINT64              timeout;$/;"	m	struct:_OVS_STT_PKT_ENTRY
timeout	ofproto/pktbuf.c	/^    long long int timeout;$/;"	m	struct:packet	file:
timeout	ovn/utilities/ovn-nbctl.c	/^static int timeout;$/;"	v	file:
timeout	ovn/utilities/ovn-sbctl.c	/^static int timeout;$/;"	v	file:
timeout	python/ovs/reconnect.py	/^    def timeout(self, now):$/;"	m	class:Reconnect
timeout	utilities/ovs-benchmark.c	/^static double timeout;$/;"	v	file:
timeout	utilities/ovs-vsctl.c	/^static int timeout;$/;"	v	file:
timeout	vtep/vtep-ctl.c	/^static int timeout;$/;"	v	file:
timeout_cb	utilities/ovs-vlan-test	/^        def timeout_cb():$/;"	f	function:UDPReceiver.recv_packet
timeout_msec	ovsdb/execution.c	/^    long long int timeout_msec;$/;"	m	struct:ovsdb_execution	file:
timeout_msec	ovsdb/trigger.h	/^    long long int timeout_msec; \/* Max wait duration. *\/$/;"	m	struct:ovsdb_trigger
timeout_when	lib/poll-loop.c	/^    long long int timeout_when; \/* In msecs as returned by time_msec(). *\/$/;"	m	struct:poll_loop	file:
timeout_where	lib/poll-loop.c	/^    const char *timeout_where;  \/* Where 'timeout_when' was set. *\/$/;"	m	struct:poll_loop	file:
timer	lib/timer.h	/^struct timer {$/;"	s
timer_end	utilities/ovs-benchmark.c	/^timer_end(long long int start, bool error,$/;"	f	file:
timer_expired	lib/timer.h	/^timer_expired(const struct timer *timer)$/;"	f
timer_is_infinite	lib/timer.h	/^timer_is_infinite(const struct timer *timer)$/;"	f
timer_msecs_until_expired	lib/timer.c	/^timer_msecs_until_expired(const struct timer *timer)$/;"	f
timer_set_duration	lib/timer.h	/^timer_set_duration(struct timer *timer, long long int duration)$/;"	f
timer_set_expired	lib/timer.h	/^timer_set_expired(struct timer *timer)$/;"	f
timer_set_infinite	lib/timer.h	/^timer_set_infinite(struct timer *timer)$/;"	f
timer_to_ms	lib/stp.c	/^timer_to_ms(int timer)$/;"	f	file:
timer_wait	lib/timer.h	31;"	d
timer_wait	python/ovs/poller.py	/^    def timer_wait(self, msec):$/;"	m	class:Poller
timer_wait_at	lib/timer.c	/^timer_wait_at(const struct timer *timer, const char *where)$/;"	f
timer_wait_until	python/ovs/poller.py	/^    def timer_wait_until(self, msec):$/;"	m	class:Poller
timespec	python/ovs/timeval.py	/^    class timespec(ctypes.Structure):$/;"	c
timespec_add	lib/timeval.c	/^timespec_add(struct timespec *sum,$/;"	f	file:
timespec_to_msec	lib/timeval.c	/^timespec_to_msec(const struct timespec *ts)$/;"	f
timestamp	datapath/linux/compat/stt.c	/^	unsigned long timestamp;$/;"	m	struct:pkt_frag	file:
timestamp	datapath/linux/stt.c	/^	unsigned long timestamp;$/;"	m	struct:pkt_frag	file:
timestamp	lib/table.h	/^    bool timestamp;$/;"	m	struct:table
timestamp	ovsdb/ovsdb-client.c	/^static bool timestamp;$/;"	v	file:
timestamp	utilities/ovs-ofctl.c	/^static bool timestamp;$/;"	v	file:
timeval	lib/timeval.c	/^VLOG_DEFINE_THIS_MODULE(timeval);$/;"	v
timeval	python/ovs/daemon.py	/^import ovs.timeval$/;"	i
timeval	python/ovs/jsonrpc.py	/^import ovs.timeval$/;"	i
timeval	python/ovs/poller.py	/^import ovs.timeval$/;"	i
timeval_diff_msec	lib/timeval.c	/^timeval_diff_msec(const struct timeval *a, const struct timeval *b)$/;"	f	file:
timeval_dummy_register	lib/timeval.c	/^timeval_dummy_register(void)$/;"	f
timeval_stop_cb	lib/timeval.c	/^timeval_stop_cb(struct unixctl_conn *conn,$/;"	f	file:
timeval_to_msec	lib/timeval.c	/^timeval_to_msec(const struct timeval *tv)$/;"	f
timeval_warp_cb	lib/timeval.c	/^timeval_warp_cb(struct unixctl_conn *conn,$/;"	f	file:
timewarp_enabled	lib/timeval.c	/^static bool timewarp_enabled;$/;"	v	file:
timewarp_run	lib/timeval.c	/^timewarp_run(void)$/;"	f
timewarp_seq	lib/timeval.c	/^static struct seq *timewarp_seq;$/;"	v	typeref:struct:seq	file:
timewarp_work	lib/timeval.c	/^timewarp_work(void)$/;"	f	file:
title	ovsdb/ovsdb-doc	/^                title = dbNode.attributes['title'].nodeValue$/;"	v
title	ovsdb/ovsdb-doc	/^                title = name + " configuration."$/;"	v
title_center	utilities/ovs-dpctl-top	/^def title_center(value, width):$/;"	f
title_rjust	utilities/ovs-dpctl-top	/^def title_rjust(value, width):$/;"	f
tll	datapath/flow.h	/^				u8 tll[ETH_ALEN];	\/* ND target link layer address. *\/$/;"	m	struct:sw_flow_key::__anon33::__anon37::__anon39
tm	lib/timeval.h	/^  struct tm tm;$/;"	m	struct:tm_msec	typeref:struct:tm_msec::tm
tm_msec	lib/timeval.h	/^struct tm_msec {$/;"	s
tmp_dh_callback	lib/stream-ssl.c	/^tmp_dh_callback(SSL *ssl OVS_UNUSED, int is_export OVS_UNUSED, int keylength)$/;"	f	file:
tnl_arp_cache	ofproto/ofproto-dpif-xlate.c	/^        } tnl_arp_cache;$/;"	m	union:xc_entry::__anon188	typeref:struct:xc_entry::__anon188::__anon197	file:
tnl_arp_cache_add	lib/tnl-arp-cache.c	/^tnl_arp_cache_add(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
tnl_arp_cache_flush	lib/tnl-arp-cache.c	/^tnl_arp_cache_flush(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
tnl_arp_cache_init	lib/tnl-arp-cache.c	/^tnl_arp_cache_init(void)$/;"	f
tnl_arp_cache_run	lib/tnl-arp-cache.c	/^tnl_arp_cache_run(void)$/;"	f
tnl_arp_cache_show	lib/tnl-arp-cache.c	/^tnl_arp_cache_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
tnl_arp_delete	lib/tnl-arp-cache.c	/^tnl_arp_delete(struct tnl_arp_entry *arp)$/;"	f	file:
tnl_arp_entry	lib/tnl-arp-cache.c	/^struct tnl_arp_entry {$/;"	s	file:
tnl_arp_hash	lib/tnl-arp-cache.c	/^tnl_arp_hash(const struct in6_addr *ip)$/;"	f	file:
tnl_arp_lookup	lib/tnl-arp-cache.c	/^tnl_arp_lookup(const char br_name[IFNAMSIZ], ovs_be32 dst,$/;"	f
tnl_arp_lookup__	lib/tnl-arp-cache.c	/^tnl_arp_lookup__(const char br_name[IFNAMSIZ], const struct in6_addr *dst)$/;"	f	file:
tnl_arp_set	lib/tnl-arp-cache.c	/^tnl_arp_set(const char name[IFNAMSIZ], ovs_be32 dst,$/;"	f	file:
tnl_arp_set__	lib/tnl-arp-cache.c	/^tnl_arp_set__(const char name[IFNAMSIZ], const struct in6_addr *dst,$/;"	f	file:
tnl_arp_snoop	lib/tnl-arp-cache.c	/^tnl_arp_snoop(const struct flow *flow, struct flow_wildcards *wc,$/;"	f
tnl_backers	ofproto/ofproto-dpif.c	/^    struct simap tnl_backers;      \/* Set of dpif ports backing tunnels. *\/$/;"	m	struct:dpif_backer	typeref:struct:dpif_backer::simap	file:
tnl_cfg	lib/netdev-vport.c	/^    struct netdev_tunnel_config tnl_cfg;$/;"	m	struct:netdev_vport	typeref:struct:netdev_vport::netdev_tunnel_config	file:
tnl_conf_seq	lib/dpif.c	/^struct seq *tnl_conf_seq;$/;"	v	typeref:struct:seq
tnl_count	ofproto/ofproto-dpif.c	/^    struct atomic_count tnl_count;$/;"	m	struct:dpif_backer	typeref:struct:dpif_backer::atomic_count	file:
tnl_flags_to_gre_flags	datapath/linux/compat/include/net/gre.h	/^static inline __be16 tnl_flags_to_gre_flags(__be16 tflags)$/;"	f
tnl_hash	ofproto/tunnel.c	/^tnl_hash(struct tnl_match *match)$/;"	f	file:
tnl_match	ofproto/tunnel.c	/^struct tnl_match {$/;"	s	file:
tnl_match_map	ofproto/tunnel.c	/^tnl_match_map(const struct tnl_match *m)$/;"	f	file:
tnl_nd_lookup	lib/tnl-arp-cache.c	/^tnl_nd_lookup(const char br_name[IFNAMSIZ], const struct in6_addr *dst,$/;"	f
tnl_nd_snoop	lib/tnl-arp-cache.c	/^tnl_nd_snoop(const struct flow *flow, struct flow_wildcards *wc,$/;"	f
tnl_port	datapath/linux/compat/include/linux/openvswitch.h	/^	uint32_t tnl_port;$/;"	m	struct:ovs_action_push_tnl
tnl_port	include/odp-netlink.h	/^	uint32_t tnl_port;$/;"	m	struct:ovs_action_push_tnl
tnl_port	lib/tnl-ports.c	/^struct tnl_port {$/;"	s	file:
tnl_port	ofproto/tunnel.c	/^struct tnl_port {$/;"	s	file:
tnl_port_build_header	ofproto/tunnel.c	/^tnl_port_build_header(const struct ofport_dpif *ofport,$/;"	f
tnl_port_cast	lib/tnl-ports.c	/^tnl_port_cast(const struct cls_rule *cr)$/;"	f	file:
tnl_port_free	lib/tnl-ports.c	/^tnl_port_free(struct tnl_port_in *p)$/;"	f	file:
tnl_port_in	lib/tnl-ports.c	/^struct tnl_port_in {$/;"	s	file:
tnl_port_init_flow	lib/tnl-ports.c	/^tnl_port_init_flow(struct flow *flow, struct eth_addr mac,$/;"	f	file:
tnl_port_map_delete	lib/tnl-ports.c	/^tnl_port_map_delete(ovs_be16 udp_port)$/;"	f
tnl_port_map_delete_ipdev	lib/tnl-ports.c	/^tnl_port_map_delete_ipdev(const char dev_name[])$/;"	f
tnl_port_map_init	lib/tnl-ports.c	/^tnl_port_map_init(void)$/;"	f
tnl_port_map_insert	lib/tnl-ports.c	/^tnl_port_map_insert(odp_port_t port,$/;"	f
tnl_port_map_insert_ipdev	lib/tnl-ports.c	/^tnl_port_map_insert_ipdev(const char dev_name[])$/;"	f
tnl_port_map_lookup	lib/tnl-ports.c	/^tnl_port_map_lookup(struct flow *flow, struct flow_wildcards *wc)$/;"	f
tnl_port_map_run	lib/tnl-ports.c	/^tnl_port_map_run(void)$/;"	f
tnl_port_should_receive	ofproto/tunnel.h	/^tnl_port_should_receive(const struct flow *flow)$/;"	f
tnl_port_show	lib/tnl-ports.c	/^tnl_port_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
tnl_port_show_v	lib/tnl-ports.c	/^tnl_port_show_v(struct ds *ds)$/;"	f	file:
tnl_port_unref	lib/tnl-ports.c	/^tnl_port_unref(const struct cls_rule *cr)$/;"	f	file:
tnl_process_ecn	ofproto/tunnel.c	/^tnl_process_ecn(struct flow *flow)$/;"	f
tnl_ptk_info	datapath/linux/compat/include/net/ip_tunnels.h	/^struct tnl_ptk_info {$/;"	s
tnl_push_pop	ofproto/ofproto-dpif.h	/^    bool tnl_push_pop;$/;"	m	struct:dpif_backer_support
tnl_route_lookup_flow	ofproto/ofproto-dpif-xlate.c	/^tnl_route_lookup_flow(const struct flow *oflow,$/;"	f	file:
tnl_send_arp_request	ofproto/ofproto-dpif-xlate.c	/^tnl_send_arp_request(struct xlate_ctx *ctx, const struct xport *out_dev,$/;"	f	file:
tnl_skb_gso_segment	datapath/linux/compat/gso.c	/^static struct sk_buff *tnl_skb_gso_segment(struct sk_buff *skb,$/;"	f	file:
tnl_skb_gso_segment	datapath/linux/gso.c	/^static struct sk_buff *tnl_skb_gso_segment(struct sk_buff *skb,$/;"	f	file:
tnl_type	datapath/linux/compat/include/linux/openvswitch.h	/^	uint32_t tnl_type;     \/* For logging. *\/$/;"	m	struct:ovs_action_push_tnl
tnl_type	include/odp-netlink.h	/^	uint32_t tnl_type;     \/* For logging. *\/$/;"	m	struct:ovs_action_push_tnl
tnl_udp_port_max	lib/netdev-vport.c	/^static uint16_t tnl_udp_port_max = 61000;$/;"	v	file:
tnl_udp_port_min	lib/netdev-vport.c	/^static uint16_t tnl_udp_port_min = 32768;$/;"	v	file:
tnl_wc_init	ofproto/tunnel.c	/^tnl_wc_init(struct flow *flow, struct flow_wildcards *wc)$/;"	f
tnlid	ovn/northd/ovn-northd.c	/^    uint32_t tnlid;$/;"	m	struct:tnlid_node	file:
tnlid_in_use	ovn/northd/ovn-northd.c	/^tnlid_in_use(const struct hmap *set, uint32_t tnlid)$/;"	f	file:
tnlid_node	ovn/northd/ovn-northd.c	/^struct tnlid_node {$/;"	s	file:
to	utilities/ovs-vlan-test	/^import signal #Causes keyboard interrupts to go to the main thread.$/;"	i
toAtomicType	python/ovs/db/types.py	/^    def toAtomicType(self):$/;"	m	class:BaseType
toCType	python/ovs/db/types.py	/^    def toCType(self, prefix):$/;"	m	class:BaseType
toEnglish	python/ovs/db/data.py	/^    def toEnglish(self, escapeLiteral=returnUnchanged):$/;"	m	class:Atom
toEnglish	python/ovs/db/types.py	/^    def toEnglish(self, escapeLiteral=returnUnchanged):$/;"	m	class:BaseType
toEnglish	python/ovs/db/types.py	/^    def toEnglish(self, escapeLiteral=returnUnchanged):$/;"	m	class:Type
to_c_assignment	python/ovs/ovsuuid.py	/^def to_c_assignment(uuid_, var):$/;"	f
to_file	python/ovs/json.py	/^def to_file(obj, name, pretty=False, sort_keys=True):$/;"	f
to_json	python/ovs/db/data.py	/^    def to_json(self):$/;"	m	class:Atom
to_json	python/ovs/db/data.py	/^    def to_json(self):$/;"	m	class:Datum
to_json	python/ovs/db/schema.py	/^    def to_json(self):$/;"	m	class:ColumnSchema
to_json	python/ovs/db/schema.py	/^    def to_json(self):$/;"	m	class:DbSchema
to_json	python/ovs/db/schema.py	/^    def to_json(self, default_is_root=False):$/;"	m	class:TableSchema
to_json	python/ovs/db/types.py	/^    def to_json(self):$/;"	m	class:AtomicType
to_json	python/ovs/db/types.py	/^    def to_json(self):$/;"	m	class:BaseType
to_json	python/ovs/db/types.py	/^    def to_json(self):$/;"	m	class:Type
to_json	python/ovs/jsonrpc.py	/^    def to_json(self):$/;"	m	class:Message
to_json	python/ovs/ovsuuid.py	/^def to_json(uuid_):$/;"	f
to_lower_and_underscores	lib/db-ctl-base.c	/^to_lower_and_underscores(unsigned c)$/;"	f	file:
to_net_dev	datapath/linux/compat/include/linux/netdevice.h	26;"	d
to_python	python/ovs/db/data.py	/^    def to_python(self, uuid_to_row):$/;"	m	class:Datum
to_stream	python/ovs/json.py	/^def to_stream(obj, stream, pretty=False, sort_keys=True):$/;"	f
to_string	python/ovs/db/data.py	/^    def to_string(self):$/;"	m	class:Atom
to_string	python/ovs/db/data.py	/^    def to_string(self):$/;"	m	class:Datum
to_string	python/ovs/db/types.py	/^    def to_string(self):$/;"	m	class:AtomicType
to_string	python/ovs/json.py	/^def to_string(obj, pretty=False, sort_keys=True):$/;"	f
toggle_masked_flow_bits	tests/test-classifier.c	/^toggle_masked_flow_bits(struct flow *flow, const struct flow_wildcards *mask)$/;"	f	file:
token	build-aux/check-structs	/^token = None$/;"	v
token	build-aux/extract-ofp-errors	/^token = None$/;"	v
token	ovn/lib/lex.h	/^    struct lex_token token;     \/* Current token (owned by lexer). *\/$/;"	m	struct:lexer	typeref:struct:lexer::lex_token
token	tests/test-rstp.c	/^static char *pos, *token;$/;"	v	file:
token	tests/test-stp.c	/^static char *pos, *token;$/;"	v	file:
tokenRe	build-aux/check-structs	/^tokenRe = "#?" + idRe + "|[0-9]+|."$/;"	v
tokenRe	build-aux/extract-ofp-errors	/^tokenRe = "#?" + idRe + "|[0-9]+|."$/;"	v
token_bucket	include/openvswitch/token-bucket.h	/^struct token_bucket {$/;"	s
token_bucket	include/openvswitch/vlog.h	/^    struct token_bucket token_bucket;$/;"	m	struct:vlog_rate_limit	typeref:struct:vlog_rate_limit::token_bucket
token_bucket	ofproto/pinsched.c	/^    struct token_bucket token_bucket;$/;"	m	struct:pinsched	typeref:struct:pinsched::token_bucket	file:
token_bucket_init	lib/token-bucket.c	/^token_bucket_init(struct token_bucket *tb,$/;"	f
token_bucket_set	lib/token-bucket.c	/^token_bucket_set(struct token_bucket *tb,$/;"	f
token_bucket_wait	lib/token-bucket.c	/^token_bucket_wait(struct token_bucket *tb, unsigned int n)$/;"	f
token_bucket_withdraw	lib/token-bucket.c	/^token_bucket_withdraw(struct token_bucket *tb, unsigned int n)$/;"	f
tokenring	lib/sflow.h	/^    SFLTokenring_counters tokenring;$/;"	m	union:_SFLCounters_type
tokens	include/openvswitch/token-bucket.h	/^    unsigned int tokens;        \/* Current number of tokens. *\/$/;"	m	struct:token_bucket
too_many_output_actions	ofproto/ofproto-dpif-xlate.c	/^too_many_output_actions(const struct ofpbuf *odp_actions OVS_UNUSED)$/;"	f	file:
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	datapath/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	datapath/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_input_get	utilities/ovs-dpctl-top	/^def top_input_get(args):$/;"	f
top_lse	datapath/flow.h	/^			__be32 top_lse;	\/* top label stack entry *\/$/;"	m	struct:sw_flow_key::__anon29::__anon30
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	datapath/Makefile	/^top_srcdir = ..$/;"	m
topology_change	lib/stp.c	/^    bool topology_change;           \/* 8.5.3.12: Received topology change? *\/$/;"	m	struct:stp	file:
topology_change_ack	lib/stp.c	/^    bool topology_change_ack;       \/* 8.5.5.8: Flag for next config BPDU. *\/$/;"	m	struct:stp_port	file:
topology_change_detected	lib/stp.c	/^    bool topology_change_detected;  \/* 8.5.3.11: Detected a topology change? *\/$/;"	m	struct:stp	file:
topology_change_state_machine	lib/rstp-common.h	/^enum topology_change_state_machine {$/;"	g
topology_change_timer	lib/stp.c	/^    struct stp_timer topology_change_timer; \/* 8.5.4.3. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_timer	file:
tos	datapath-windows/ovsext/DpInternal.h	/^        uint8_t  tos;$/;"	m	struct:OvsIPv4TunnelKey::__anon7
tos	datapath-windows/ovsext/NetProto.h	/^   UINT8    tos;$/;"	m	struct:IPHdr
tos	datapath/flow.h	/^			u8     tos;	    \/* IP ToS. *\/$/;"	m	struct:sw_flow_key::__anon29::__anon31
tos	lib/netdev.h	/^    uint8_t tos;$/;"	m	struct:netdev_tunnel_config
tos	lib/sflow.h	/^    u_int32_t tos;         \/* IP type of service *\/$/;"	m	struct:_SFLSampled_ipv4
tos_inherit	lib/netdev.h	/^    bool tos_inherit;$/;"	m	struct:netdev_tunnel_config
tot_len	datapath-windows/ovsext/NetProto.h	/^   UINT16   tot_len;$/;"	m	struct:IPHdr
tot_len	datapath/linux/compat/stt.c	/^	u16 tot_len;$/;"	m	struct:first_frag	file:
tot_len	datapath/linux/stt.c	/^	u16 tot_len;$/;"	m	struct:first_frag	file:
total	lib/coverage.h	/^    unsigned long long int total;      \/* Total count. *\/$/;"	m	struct:coverage_counter
totalLen	datapath-windows/ovsext/DpInternal.h	/^    uint32_t totalLen;$/;"	m	struct:_OVS_PACKET_INFO
total_connected_duration	lib/reconnect.c	/^    unsigned int total_connected_duration;$/;"	m	struct:reconnect	file:
total_connected_duration	lib/reconnect.h	/^    unsigned int total_connected_duration; \/* Sum of all connections. *\/$/;"	m	struct:reconnect_stats
total_count	lib/perf-counter.h	/^    uint64_t total_count;$/;"	m	struct:perf_counter
total_len	include/openflow/nicira-ext.h	/^    ovs_be16 total_len;       \/* Full length of frame. *\/$/;"	m	struct:nx_packet_in
total_len	include/openflow/openflow-1.0.h	/^    ovs_be16 total_len;     \/* Full length of frame. *\/$/;"	m	struct:ofp10_packet_in
total_len	include/openflow/openflow-1.1.h	/^    ovs_be16 total_len;     \/* Full length of frame. *\/$/;"	m	struct:ofp11_packet_in
total_len	include/openflow/openflow-1.2.h	/^    ovs_be16 total_len;     \/* Full length of frame. *\/$/;"	m	struct:ofp12_packet_in
total_len	lib/ofp-util.h	/^    size_t total_len;           \/* Size of packet, pre-truncation. *\/$/;"	m	struct:ofputil_packet_in
total_nr_elements	datapath/linux/compat/include/linux/flex_array.h	/^			int total_nr_elements;$/;"	m	struct:flex_array::__anon42::__anon43
total_time_connected	lib/rconn.c	/^    unsigned long int total_time_connected;$/;"	m	struct:rconn	file:
total_warp	lib/timeval.c	/^    long long int total_warp; \/* Total offset to be added to monotonic time. *\/$/;"	m	struct:large_warp	file:
tp	datapath/flow.h	/^	} tp;$/;"	m	struct:sw_flow_key	typeref:struct:sw_flow_key::__anon32
tpDst	datapath-windows/ovsext/DpInternal.h	/^    ovs_be16 tpDst;              \/* TCP\/UDP\/SCTP destination port. *\/$/;"	m	struct:L4Key
tpSrc	datapath-windows/ovsext/DpInternal.h	/^    ovs_be16 tpSrc;              \/* TCP\/UDP\/SCTP source port. *\/$/;"	m	struct:L4Key
tp_dst	datapath/flow.h	/^	__be16 tp_dst;$/;"	m	struct:ovs_key_ipv4_tunnel
tp_dst	include/openflow/openflow-1.0.h	/^    ovs_be16 tp_dst;           \/* TCP\/UDP destination port. *\/$/;"	m	struct:ofp10_match
tp_dst	include/openflow/openflow-1.1.h	/^    ovs_be16 tp_dst;           \/* TCP\/UDP\/SCTP destination port. *\/$/;"	m	struct:ofp11_match
tp_dst	lib/flow.h	/^    ovs_be16 tp_dst;            \/* TCP\/UDP\/SCTP destination port\/ICMP code. *\/$/;"	m	struct:flow
tp_dst	lib/packets.h	/^    ovs_be16 tp_dst;$/;"	m	struct:flow_tnl
tp_dst	lib/pcap-file.c	/^    ovs_be16 tp_src, tp_dst;$/;"	m	struct:tcp_key	file:
tp_dst	ofproto/netflow.c	/^    ovs_be16 tp_dst;              \/* TCP\/UDP\/SCTP destination port. *\/$/;"	m	struct:netflow_flow	file:
tp_dst_values	tests/test-classifier.c	/^static ovs_be16 tp_dst_values[] = { CONSTANT_HTONS(6667), CONSTANT_HTONS(22) };$/;"	v	file:
tp_len	lib/netdev-linux.c	/^    uint32_t tp_len;$/;"	m	struct:tpacket_auxdata	file:
tp_mac	lib/netdev-linux.c	/^    uint16_t tp_mac;$/;"	m	struct:tpacket_auxdata	file:
tp_net	lib/netdev-linux.c	/^    uint16_t tp_net;$/;"	m	struct:tpacket_auxdata	file:
tp_snaplen	lib/netdev-linux.c	/^    uint32_t tp_snaplen;$/;"	m	struct:tpacket_auxdata	file:
tp_src	datapath/flow.h	/^	__be16 tp_src;$/;"	m	struct:ovs_key_ipv4_tunnel
tp_src	include/openflow/openflow-1.0.h	/^    ovs_be16 tp_src;           \/* TCP\/UDP source port. *\/$/;"	m	struct:ofp10_match
tp_src	include/openflow/openflow-1.1.h	/^    ovs_be16 tp_src;           \/* TCP\/UDP\/SCTP source port. *\/$/;"	m	struct:ofp11_match
tp_src	lib/flow.h	/^    ovs_be16 tp_src;            \/* TCP\/UDP\/SCTP source port\/ICMP type. *\/$/;"	m	struct:flow
tp_src	lib/packets.h	/^    ovs_be16 tp_src;$/;"	m	struct:flow_tnl
tp_src	lib/pcap-file.c	/^    ovs_be16 tp_src, tp_dst;$/;"	m	struct:tcp_key	file:
tp_src	ofproto/netflow.c	/^    ovs_be16 tp_src;              \/* TCP\/UDP\/SCTP source port. *\/$/;"	m	struct:netflow_flow	file:
tp_src_values	tests/test-classifier.c	/^static ovs_be16 tp_src_values[] = { CONSTANT_HTONS(49362),$/;"	v	file:
tp_status	lib/netdev-linux.c	/^    uint32_t tp_status;$/;"	m	struct:tpacket_auxdata	file:
tp_vlan_tci	lib/netdev-linux.c	/^    uint16_t tp_vlan_tci;$/;"	m	struct:tpacket_auxdata	file:
tp_vlan_tpid	lib/netdev-linux.c	/^    uint16_t tp_vlan_tpid;$/;"	m	struct:tpacket_auxdata	file:
tpacket_auxdata	lib/netdev-linux.c	/^struct tpacket_auxdata {$/;"	s	file:
tpacket_auxdata	lib/netdev-linux.c	130;"	d	file:
tpacket_auxdata	lib/netdev-linux.c	131;"	d	file:
trace_ctx	ofproto/ofproto-dpif.c	/^struct trace_ctx {$/;"	s	file:
trace_format_flow	ofproto/ofproto-dpif.c	/^trace_format_flow(struct ds *result, int level, const char *title,$/;"	f	file:
trace_format_megaflow	ofproto/ofproto-dpif.c	/^trace_format_megaflow(struct ds *result, int level, const char *title,$/;"	f	file:
trace_format_odp	ofproto/ofproto-dpif.c	/^trace_format_odp(struct ds *result, int level, const char *title,$/;"	f	file:
trace_format_regs	ofproto/ofproto-dpif.c	/^trace_format_regs(struct ds *result, int level, const char *title,$/;"	f	file:
trace_format_rule	ofproto/ofproto-dpif.c	/^trace_format_rule(struct ds *result, int level, const struct rule_dpif *rule)$/;"	f	file:
trace_report	ofproto/ofproto-dpif.c	/^trace_report(struct xlate_in *xin, int recurse, const char *format, ...)$/;"	f	file:
trace_report_valist	ofproto/ofproto-dpif.c	/^trace_report_valist(struct xlate_in *xin, int recurse,$/;"	f	file:
trace_resubmit	ofproto/ofproto-dpif.c	/^trace_resubmit(struct xlate_in *xin, struct rule_dpif *rule, int recurse)$/;"	f	file:
traceback	xenserver/opt_xensource_libexec_interface-reconfigure	/^import traceback$/;"	i
traces	utilities/ovs-parse-backtrace	/^    traces = []$/;"	v
traces	utilities/ovs-parse-backtrace	/^    traces = sorted(traces, key=(lambda x: x[1]), reverse=True)$/;"	v
transact	ovsdb/ovsdb-tool.c	/^transact(bool read_only, int argc, char *argv[])$/;"	f	file:
transact	python/ovs/unixctl/client.py	/^    def transact(self, command, argv):$/;"	m	class:UnixctlClient
transact	python/ovs/unixctl/server.py	/^    def transact(self, command, argv):$/;"	m	class:UnixctlClient
transact_block	python/ovs/jsonrpc.py	/^    def transact_block(self, request):$/;"	m	class:Connection
transact_multiple_noreply	utilities/ovs-ofctl.c	/^transact_multiple_noreply(struct vconn *vconn, struct ovs_list *requests)$/;"	f	file:
transact_noreply	utilities/ovs-ofctl.c	/^transact_noreply(struct vconn *vconn, struct ofpbuf *request)$/;"	f	file:
transaction	ovsdb/monitor.c	/^    uint64_t transaction;$/;"	m	struct:ovsdb_monitor_changes	file:
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	datapath/Makefile	/^transform = $(program_transform_name)$/;"	m
transmit_hold_count	ofproto/ofproto.h	/^    uint16_t transmit_hold_count;$/;"	m	struct:ofproto_rstp_settings
transportHeaderSize	datapath-windows/ovsext/Tunnel.h	/^   UINT32 transportHeaderSize;$/;"	m	struct:OVS_TUNNEL_PENDED_PACKET_
trap_signals	utilities/ovs-sim	/^trap_signals() {$/;"	f
trap_signals	utilities/ovs-sim.in	/^trap_signals() {$/;"	f
tree	tests/test-rstp.c	/^tree(struct test_case *tc)$/;"	f	file:
tree	tests/test-stp.c	/^tree(struct test_case *tc)$/;"	f	file:
tree_output	utilities/bugtool/ovs-bugtool	/^def tree_output(cap, path, pattern=None, negate=False, newest_first=False,$/;"	f
tree_shape	tests/test-ovn.c	/^struct tree_shape {$/;"	s	file:
trie	lib/classifier.c	/^    const struct cls_trie *trie;$/;"	m	struct:trie_ctx	typeref:struct:trie_ctx::cls_trie	file:
trie_branch_create	lib/classifier.c	/^trie_branch_create(const ovs_be32 *prefix, unsigned int ofs, unsigned int plen,$/;"	f	file:
trie_ctx	lib/classifier.c	/^struct trie_ctx {$/;"	s	file:
trie_ctx_init	lib/classifier.c	/^trie_ctx_init(struct trie_ctx *ctx, const struct cls_trie *trie)$/;"	f	file:
trie_destroy	lib/classifier.c	/^trie_destroy(rcu_trie_ptr *trie)$/;"	f	file:
trie_fields	tests/test-classifier.c	/^static enum mf_field_id trie_fields[2] = {$/;"	v	typeref:enum:mf_field_id	file:
trie_get_prefix	lib/classifier.c	/^trie_get_prefix(const ovs_be32 pr[], unsigned int ofs, unsigned int plen)$/;"	f	file:
trie_init	lib/classifier.c	/^trie_init(struct classifier *cls, int trie_idx, const struct mf_field *field)$/;"	f	file:
trie_insert	lib/classifier.c	/^trie_insert(struct cls_trie *trie, const struct cls_rule *rule, int mlen)$/;"	f	file:
trie_insert_prefix	lib/classifier.c	/^trie_insert_prefix(rcu_trie_ptr *edge, const ovs_be32 *prefix, int mlen)$/;"	f	file:
trie_is_leaf	lib/classifier.c	/^trie_is_leaf(const struct trie_node *trie)$/;"	f	file:
trie_lookup	lib/classifier.c	/^trie_lookup(const struct cls_trie *trie, const struct flow *flow,$/;"	f	file:
trie_lookup_value	lib/classifier.c	/^trie_lookup_value(const rcu_trie_ptr *trie, const ovs_be32 value[],$/;"	f	file:
trie_next_edge	lib/classifier.c	/^trie_next_edge(struct trie_node *node, const ovs_be32 value[],$/;"	f	file:
trie_next_node	lib/classifier.c	/^trie_next_node(const struct trie_node *node, const ovs_be32 value[],$/;"	f	file:
trie_node	lib/classifier-private.h	/^struct trie_node {$/;"	s
trie_node_destroy	lib/classifier.c	/^trie_node_destroy(const struct trie_node *node)$/;"	f	file:
trie_node_rcu_realloc	lib/classifier.c	/^trie_node_rcu_realloc(const struct trie_node *node)$/;"	f	file:
trie_plen	lib/classifier-private.h	/^    unsigned int trie_plen[CLS_MAX_TRIES];  \/* Trie prefix length in 'mask'$/;"	m	struct:cls_subtable
trie_prefix	lib/classifier.c	/^union trie_prefix {$/;"	u	file:
trie_prefix_equal_bits	lib/classifier.c	/^trie_prefix_equal_bits(const struct trie_node *node, const ovs_be32 prefix[],$/;"	f	file:
trie_remove	lib/classifier.c	/^trie_remove(struct cls_trie *trie, const struct cls_rule *rule, int mlen)$/;"	f	file:
trie_remove_prefix	lib/classifier.c	/^trie_remove_prefix(rcu_trie_ptr *root, const ovs_be32 *prefix, int mlen)$/;"	f	file:
trie_verify	tests/test-classifier.c	/^trie_verify(const rcu_trie_ptr *trie, unsigned int ofs, unsigned int n_bits)$/;"	f	file:
tries	lib/classifier.h	/^    struct cls_trie tries[CLS_MAX_TRIES]; \/* Prefix tries. *\/$/;"	m	struct:classifier	typeref:struct:classifier::cls_trie
trigger	ovsdb/jsonrpc-server.c	/^    struct ovsdb_trigger trigger;$/;"	m	struct:ovsdb_jsonrpc_trigger	typeref:struct:ovsdb_jsonrpc_trigger::ovsdb_trigger	file:
trigger	tests/test-ovsdb.c	/^    struct ovsdb_trigger trigger;$/;"	m	struct:test_trigger	typeref:struct:test_trigger::ovsdb_trigger	file:
trigger_big_update	tests/testsuite	/^trigger_big_update () {$/;"	f
trigger_duration	ofproto/fail-open.c	/^trigger_duration(const struct fail_open *fo)$/;"	f	file:
triggers	ovsdb/jsonrpc-server.c	/^    struct hmap triggers;       \/* Hmap of "struct ovsdb_jsonrpc_trigger"s. *\/$/;"	m	struct:ovsdb_jsonrpc_session	typeref:struct:ovsdb_jsonrpc_session::hmap	file:
triggers	ovsdb/ovsdb.h	/^    struct ovs_list triggers;   \/* Contains "struct ovsdb_trigger"s. *\/$/;"	m	struct:ovsdb	typeref:struct:ovsdb::ovs_list
trim	tests/testsuite	/^trim () {  # Removes blank lines and lines starting with # from input.$/;"	f
trim_zeros	tests/testsuite	/^trim_zeros() {$/;"	f
triplet	lib/ofp-errors.c	/^struct triplet {$/;"	s	file:
true	datapath/linux/compat/include/linux/stddef.h	/^	true    = 1$/;"	e	enum:__anon44
trunks	lib/vswitch-idl.h	/^	int64_t *trunks;$/;"	m	struct:ovsrec_port
trunks	ofproto/ofproto-dpif-xlate.c	/^    unsigned long *trunks;         \/* Bitmap of trunked VLANs, if 'vlan' == -1.$/;"	m	struct:xbundle	file:
trunks	ofproto/ofproto-dpif.c	/^    unsigned long *trunks;      \/* Bitmap of trunked VLANs, if 'vlan' == -1.$/;"	m	struct:ofbundle	file:
trunks	ofproto/ofproto.h	/^    unsigned long *trunks;      \/* vlan_bitmap, except for PORT_VLAN_ACCESS. *\/$/;"	m	struct:ofproto_bundle_settings
tryGetLine	build-aux/extract-ofp-errors	/^def tryGetLine():$/;"	f
try_again	lib/db-ctl-base.h	/^    bool try_again;$/;"	m	struct:ctl_context
try_set_protocol	utilities/ovs-ofctl.c	/^try_set_protocol(struct vconn *vconn, enum ofputil_protocol want,$/;"	f	file:
try_to_segment	datapath/linux/compat/stt.c	/^static int try_to_segment(struct sk_buff *skb)$/;"	f	file:
try_to_segment	datapath/linux/stt.c	/^static int try_to_segment(struct sk_buff *skb)$/;"	f	file:
ts_sec	lib/pcap-file.c	/^    uint32_t ts_sec;         \/* timestamp seconds *\/$/;"	m	struct:pcaprec_hdr	file:
ts_usec	lib/pcap-file.c	/^    uint32_t ts_usec;        \/* timestamp microseconds *\/$/;"	m	struct:pcaprec_hdr	file:
tsc	lib/netdev-dpdk.c	/^    uint64_t tsc;$/;"	m	struct:dpdk_tx_queue	file:
tsd_key	lib/ovs-thread.c	/^static pthread_key_t tsd_key;$/;"	v	file:
tskill	tests/system-kmod-testsuite	/^        tskill () { taskkill \/\/F \/\/PID $1 >\/dev\/null; }$/;"	f
tskill	tests/system-userspace-testsuite	/^        tskill () { taskkill \/\/F \/\/PID $1 >\/dev\/null; }$/;"	f
tskill	tests/testsuite	/^        tskill () { taskkill \/\/F \/\/PID $1 >\/dev\/null; }$/;"	f
ttl	datapath-windows/ovsext/DpInternal.h	/^        uint8_t  ttl;$/;"	m	struct:OvsIPv4TunnelKey::__anon7
ttl	datapath-windows/ovsext/NetProto.h	/^   UINT8    ttl;$/;"	m	struct:IPHdr
ttl	datapath/flow.h	/^			u8     ttl;	    \/* IP TTL\/hop limit. *\/$/;"	m	struct:sw_flow_key::__anon29::__anon31
ttl	lib/netdev.h	/^    uint8_t ttl;$/;"	m	struct:netdev_tunnel_config
ttl	lib/ofp-actions.h	/^    uint8_t ttl;$/;"	m	struct:ofpact_ip_ttl
ttl	lib/ofp-actions.h	/^    uint8_t ttl;$/;"	m	struct:ofpact_mpls_ttl
ttl_inherit	lib/netdev.h	/^    bool ttl_inherit;$/;"	m	struct:netdev_tunnel_config
tunKey	datapath-windows/ovsext/Actions.c	/^    OvsIPv4TunnelKey tunKey;$/;"	m	struct:OvsForwardingContext	file:
tunKey	datapath-windows/ovsext/DpInternal.h	/^    OvsIPv4TunnelKey tunKey;     \/* 24 bytes *\/$/;"	m	struct:OvsFlowKey
tun_flags	datapath/flow.h	/^	__be16 tun_flags;$/;"	m	struct:ovs_key_ipv4_tunnel
tun_flags_to_attr	lib/odp-util.c	/^tun_flags_to_attr(struct ofpbuf *a, const void *data_)$/;"	f	file:
tun_id	datapath/flow.h	/^	__be64 tun_id;$/;"	m	struct:ovs_key_ipv4_tunnel
tun_id	lib/ofp-actions.h	/^    uint64_t tun_id;$/;"	m	struct:ofpact_tunnel
tun_id	lib/packets.h	/^    ovs_be64 tun_id;$/;"	m	struct:flow_tnl
tun_id	vtep/ovs-vtep	/^tun_id = 0$/;"	v
tun_id_values	tests/test-classifier.c	/^static ovs_be64 tun_id_values[] = {$/;"	v	file:
tun_key	datapath/flow.h	/^	struct ovs_key_ipv4_tunnel tun_key;  \/* Encapsulating tunnel key. *\/$/;"	m	struct:sw_flow_key	typeref:struct:sw_flow_key::ovs_key_ipv4_tunnel
tun_key_class	lib/tun-metadata.c	/^tun_key_class(uint32_t key)$/;"	f	file:
tun_key_to_attr	lib/odp-util.c	/^tun_key_to_attr(struct ofpbuf *a, const struct flow_tnl *tun_key,$/;"	f	file:
tun_key_type	lib/tun-metadata.c	/^tun_key_type(uint32_t key)$/;"	f	file:
tun_md	lib/match.h	/^    struct tun_metadata_allocation tun_md;$/;"	m	struct:match	typeref:struct:match::tun_metadata_allocation
tun_meta_entry	lib/tun-metadata.c	/^struct tun_meta_entry {$/;"	s	file:
tun_meta_find_key	lib/tun-metadata.c	/^tun_meta_find_key(const struct hmap *hmap, uint32_t key)$/;"	f	file:
tun_meta_hash	lib/tun-metadata.c	/^tun_meta_hash(uint32_t key)$/;"	f	file:
tun_meta_key	lib/tun-metadata.c	/^tun_meta_key(ovs_be16 class, uint8_t type)$/;"	f	file:
tun_metadata	lib/meta-flow.h	/^    uint8_t tun_metadata[128];$/;"	m	union:mf_value
tun_metadata	lib/tun-metadata.h	/^struct tun_metadata {$/;"	s
tun_metadata_allocation	lib/tun-metadata.h	/^struct tun_metadata_allocation {$/;"	s
tun_metadata_find_geneve_key	lib/tun-metadata.c	/^tun_metadata_find_geneve_key(const struct nlattr *key, uint32_t key_len)$/;"	f	file:
tun_metadata_from_geneve__	lib/tun-metadata.c	/^tun_metadata_from_geneve__(const struct tun_metadata *flow_metadata,$/;"	f	file:
tun_metadata_from_geneve_nlattr	lib/tun-metadata.c	/^tun_metadata_from_geneve_nlattr(const struct nlattr *attr,$/;"	f
tun_metadata_from_geneve_udpif	lib/tun-metadata.c	/^tun_metadata_from_geneve_udpif(const struct flow_tnl *flow,$/;"	f
tun_metadata_get_fmd	lib/tun-metadata.c	/^tun_metadata_get_fmd(const struct flow_tnl *tnl, struct match *flow_metadata)$/;"	f
tun_metadata_init	lib/tun-metadata.c	/^tun_metadata_init(void)$/;"	f
tun_metadata_loc	lib/tun-metadata.h	/^struct tun_metadata_loc {$/;"	s
tun_metadata_loc_chain	lib/tun-metadata.h	/^struct tun_metadata_loc_chain {$/;"	s
tun_metadata_match_entry	lib/tun-metadata.h	/^struct tun_metadata_match_entry {$/;"	s
tun_metadata_match_format	lib/tun-metadata.c	/^tun_metadata_match_format(struct ds *s, const struct match *match)$/;"	f
tun_metadata_read	lib/tun-metadata.c	/^tun_metadata_read(const struct flow_tnl *tnl,$/;"	f
tun_metadata_set_match	lib/tun-metadata.c	/^tun_metadata_set_match(const struct mf_field *mf, const union mf_value *value,$/;"	f
tun_metadata_table_mod	lib/tun-metadata.c	/^tun_metadata_table_mod(struct ofputil_geneve_table_mod *gtm)$/;"	f
tun_metadata_table_request	lib/tun-metadata.c	/^tun_metadata_table_request(struct ofputil_geneve_table_reply *gtr)$/;"	f
tun_metadata_to_geneve__	lib/tun-metadata.c	/^tun_metadata_to_geneve__(const struct tun_metadata *flow, struct ofpbuf *b,$/;"	f	file:
tun_metadata_to_geneve_header	lib/tun-metadata.c	/^tun_metadata_to_geneve_header(const struct flow_tnl *flow,$/;"	f
tun_metadata_to_geneve_mask__	lib/tun-metadata.c	/^tun_metadata_to_geneve_mask__(const struct tun_metadata *flow,$/;"	f	file:
tun_metadata_to_geneve_nlattr	lib/tun-metadata.c	/^tun_metadata_to_geneve_nlattr(const struct flow_tnl *tun,$/;"	f
tun_metadata_to_geneve_nlattr_flow	lib/tun-metadata.c	/^tun_metadata_to_geneve_nlattr_flow(const struct flow_tnl *flow,$/;"	f	file:
tun_metadata_to_geneve_nlattr_mask	lib/tun-metadata.c	/^tun_metadata_to_geneve_nlattr_mask(const struct ofpbuf *key,$/;"	f	file:
tun_metadata_to_geneve_udpif_mask	lib/tun-metadata.c	/^tun_metadata_to_geneve_udpif_mask(const struct flow_tnl *flow_src,$/;"	f
tun_metadata_to_nx_match	lib/tun-metadata.c	/^tun_metadata_to_nx_match(struct ofpbuf *b, enum ofp_version oxm,$/;"	f
tun_metadata_write	lib/tun-metadata.c	/^tun_metadata_write(struct flow_tnl *tnl,$/;"	f
tun_opts	datapath/flow.h	/^	u8 tun_opts[255];$/;"	m	struct:sw_flow_key
tun_opts_len	datapath/flow.h	/^	u8 tun_opts_len;$/;"	m	struct:sw_flow_key
tun_table	lib/tun-metadata.c	/^struct tun_table {$/;"	s	file:
tunnel	datapath/flow.h	/^	struct ovs_key_ipv4_tunnel tunnel;$/;"	m	struct:ovs_tunnel_info	typeref:struct:ovs_tunnel_info::ovs_key_ipv4_tunnel
tunnel	lib/flow.h	/^    struct flow_tnl tunnel;     \/* Encapsulating tunnel parameters. *\/$/;"	m	struct:flow	typeref:struct:flow::flow_tnl
tunnel	lib/packets.h	/^    struct flow_tnl tunnel;     \/* Encapsulating tunnel parameters. Note that$/;"	m	struct:pkt_metadata	typeref:struct:pkt_metadata::flow_tnl
tunnel	ofproto/ofproto-dpif-rid.h	/^    const struct flow_tnl *tunnel; \/* Encapsulating tunnel parameters. *\/$/;"	m	struct:recirc_metadata	typeref:struct:recirc_metadata::flow_tnl
tunnel	ofproto/ofproto-dpif-sflow.h	/^    struct flow_tnl tunnel;  \/* Egress tunnel push\/set. *\/$/;"	m	struct:dpif_sflow_actions	typeref:struct:dpif_sflow_actions::flow_tnl
tunnel	ofproto/tunnel.c	/^VLOG_DEFINE_THIS_MODULE(tunnel);$/;"	v
tunnelId	datapath-windows/ovsext/DpInternal.h	/^        ovs_be64 tunnelId;$/;"	m	struct:OvsIPv4TunnelKey::__anon7
tunnelKey	datapath-windows/ovsext/DpInternal.h	/^    OvsIPv4TunnelKey tunnelKey;$/;"	m	struct:_OVS_PACKET_INFO
tunnelKey	datapath-windows/ovsext/IpHelper.h	/^    OvsIPv4TunnelKey  tunnelKey;$/;"	m	struct:_OVS_FWD_REQUEST_INFO
tunnelRxNic	datapath-windows/ovsext/Actions.c	/^    POVS_VPORT_ENTRY tunnelRxNic;$/;"	m	struct:OvsForwardingContext	file:
tunnelTxNic	datapath-windows/ovsext/Actions.c	/^    POVS_VPORT_ENTRY tunnelTxNic;$/;"	m	struct:OvsForwardingContext	file:
tunnelVportLink	datapath-windows/ovsext/Vport.h	/^    LIST_ENTRY             tunnelVportLink;$/;"	m	struct:_OVS_VPORT_ENTRY
tunnelVportsArray	datapath-windows/ovsext/Switch.h	/^    PLIST_ENTRY             tunnelVportsArray;      \/\/ based on ovs dst port number$/;"	m	struct:_OVS_SWITCH_CONTEXT
tunnel_add	ovn/controller/encaps.c	/^tunnel_add(struct tunnel_ctx *tc, const char *new_chassis_id,$/;"	f	file:
tunnel_cos	lib/sflow.h	/^    u_int32_t tunnel_cos;       \/* Tunnel COS value *\/$/;"	m	struct:_SFLExtended_mpls_tunnel
tunnel_create_name	ovn/controller/encaps.c	/^tunnel_create_name(struct tunnel_ctx *tc, const char *chassis_id)$/;"	f	file:
tunnel_ctx	ovn/controller/encaps.c	/^struct tunnel_ctx {$/;"	s	file:
tunnel_err	ofproto/ofproto-dpif-sflow.h	/^    bool tunnel_err;         \/* Tunnel actions parse failure. *\/$/;"	m	struct:dpif_sflow_actions
tunnel_get_status	lib/netdev-vport.c	/^tunnel_get_status(const struct netdev *netdev_, struct smap *smap)$/;"	f	file:
tunnel_hmap	ovn/controller/encaps.c	/^    struct hmap tunnel_hmap;$/;"	m	struct:tunnel_ctx	typeref:struct:tunnel_ctx::hmap	file:
tunnel_id	lib/sflow.h	/^    u_int32_t tunnel_id;        \/* Tunnel ID *\/$/;"	m	struct:_SFLExtended_mpls_tunnel
tunnel_id_to_instance_id	datapath/linux/vport-lisp.c	/^static void tunnel_id_to_instance_id(__be64 tun_id, __u8 *iid)$/;"	f	file:
tunnel_id_to_instance_id	datapath/vport-lisp.c	/^static void tunnel_id_to_instance_id(__be64 tun_id, __u8 *iid)$/;"	f	file:
tunnel_id_to_vni	datapath/linux/vport-geneve.c	/^static void tunnel_id_to_vni(__be64 tun_id, __u8 *vni)$/;"	f	file:
tunnel_id_to_vni	datapath/vport-geneve.c	/^static void tunnel_id_to_vni(__be64 tun_id, __u8 *vni)$/;"	f	file:
tunnel_ipproto	ofproto/ofproto-dpif-sflow.h	/^    uint8_t tunnel_ipproto;  \/* Tunnel push action can set ipproto. *\/$/;"	m	struct:dpif_sflow_actions
tunnel_ips	vtep/vtep-idl.h	/^	char **tunnel_ips;$/;"	m	struct:vteprec_physical_switch
tunnel_key	ovn/controller/lflow.c	/^    uint32_t tunnel_key;        \/* 'tunnel_key' from Datapath_Binding row. *\/$/;"	m	struct:logical_datapath	file:
tunnel_key	ovn/lib/ovn-sb-idl.h	/^	int64_t tunnel_key;$/;"	m	struct:sbrec_datapath_binding
tunnel_key	ovn/lib/ovn-sb-idl.h	/^	int64_t tunnel_key;$/;"	m	struct:sbrec_multicast_group
tunnel_key	ovn/lib/ovn-sb-idl.h	/^	int64_t tunnel_key;$/;"	m	struct:sbrec_port_binding
tunnel_key	vtep/vtep-idl.h	/^	int64_t *tunnel_key;$/;"	m	struct:vteprec_logical_switch
tunnel_key_length	ofproto/ofproto-dpif-ipfix.c	/^    uint8_t tunnel_key_length;$/;"	m	struct:dpif_ipfix_port	file:
tunnel_lsp_name	lib/sflow.h	/^    SFLString tunnel_lsp_name;  \/* Tunnel name *\/$/;"	m	struct:_SFLExtended_mpls_tunnel
tunnel_mode	utilities/ovs-l3ping	/^        tunnel_mode = args.tunnelMode$/;"	v
tunnel_modes	utilities/ovs-test	/^            tunnel_modes = ovs_args.tunnelModes$/;"	v
tunnel_ports	ofproto/ofproto-dpif-ipfix.c	/^    struct hmap tunnel_ports;       \/* Contains "struct dpif_ipfix_port"s.$/;"	m	struct:dpif_ipfix	typeref:struct:dpif_ipfix::hmap	file:
tunnel_protocol	ofproto/ofproto-dpif-ipfix.c	/^static uint8_t tunnel_protocol[NUM_DPIF_IPFIX_TUNNEL] = {$/;"	v	file:
tunnel_type	ofproto/ofproto-dpif-ipfix.c	/^    enum dpif_ipfix_tunnel_type tunnel_type;$/;"	m	struct:dpif_ipfix_port	typeref:enum:dpif_ipfix_port::dpif_ipfix_tunnel_type	file:
tunnel_type	ofproto/ofproto-dpif-sflow.c	/^    enum dpif_sflow_tunnel_type tunnel_type;$/;"	m	struct:dpif_sflow_port	typeref:enum:dpif_sflow_port::dpif_sflow_tunnel_type	file:
tunnel_types	python/ovstest/args.py	/^def tunnel_types(string):$/;"	f
tunnel_vni	lib/sflow.h	/^    SFLExtended_vni tunnel_vni;$/;"	m	union:_SFLFlow_type
tunnels	vtep/vtep-idl.h	/^	struct vteprec_tunnel **tunnels;$/;"	m	struct:vteprec_physical_switch	typeref:struct:vteprec_physical_switch::vteprec_tunnel
turn_off_rightmost_1s	tests/test-ovn.c	/^turn_off_rightmost_1s(unsigned int x)$/;"	f	file:
twisted	utilities/ovs-test	/^import twisted$/;"	i
tx	lib/lacp.c	/^    struct timer tx;              \/* Next message transmission timer. *\/$/;"	m	struct:slave	typeref:struct:slave::timer	file:
tx	ofproto/ofproto-dpif-xlate.c	/^            struct netdev *tx;$/;"	m	struct:xc_entry::__anon188::__anon189	typeref:struct:xc_entry::__anon188::__anon189::netdev	file:
txBytes	datapath-windows/ovsext/Vport.h	/^    UINT64 txBytes;$/;"	m	struct:_OVS_VPORT_STATS
txDropped	datapath-windows/ovsext/Vport.h	/^    UINT64  txDropped;$/;"	m	struct:_OVS_VPORT_ERR_STATS
txErrors	datapath-windows/ovsext/Vport.h	/^    UINT64  txErrors;$/;"	m	struct:_OVS_VPORT_ERR_STATS
txPackets	datapath-windows/ovsext/Vport.h	/^    UINT64 txPackets;$/;"	m	struct:_OVS_VPORT_STATS
txStt	datapath-windows/ovsext/Actions.c	/^    UINT64 txStt;$/;"	m	struct:_OVS_ACTION_STATS	file:
txTcp	datapath-windows/ovsext/Actions.c	/^    UINT64 txTcp;$/;"	m	struct:_OVS_ACTION_STATS	file:
txVxlan	datapath-windows/ovsext/Actions.c	/^    UINT64 txVxlan;$/;"	m	struct:_OVS_ACTION_STATS	file:
tx_aborted_errors	lib/netdev-linux.c	/^    uint64_t tx_aborted_errors;$/;"	m	struct:rtnl_link_stats64	file:
tx_aborted_errors	lib/netdev.h	/^    uint64_t tx_aborted_errors;$/;"	m	struct:netdev_stats
tx_bytes	datapath/linux/compat/include/linux/netdevice.h	/^	u64     tx_bytes;$/;"	m	struct:pcpu_sw_netstats
tx_bytes	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   tx_bytes;		\/* total bytes transmitted      *\/$/;"	m	struct:ovs_vport_stats
tx_bytes	include/odp-netlink.h	/^	ovs_32aligned_u64   tx_bytes;		\/* total bytes transmitted      *\/$/;"	m	struct:ovs_vport_stats
tx_bytes	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_bytes;       \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp10_port_stats
tx_bytes	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_bytes;   \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp10_queue_stats
tx_bytes	include/openflow/openflow-1.1.h	/^    ovs_be64 tx_bytes;         \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp11_queue_stats
tx_bytes	include/openflow/openflow-1.1.h	/^    ovs_be64 tx_bytes;        \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp11_port_stats
tx_bytes	include/openflow/openflow-1.4.h	/^    ovs_be64 tx_bytes;       \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp14_port_stats
tx_bytes	lib/netdev-linux.c	/^    uint64_t tx_bytes;$/;"	m	struct:rtnl_link_stats64	file:
tx_bytes	lib/netdev.h	/^    uint64_t tx_bytes;          \/* Total bytes transmitted. *\/$/;"	m	struct:netdev_stats
tx_bytes	lib/netdev.h	/^    uint64_t tx_bytes;$/;"	m	struct:netdev_queue_stats
tx_bytes	lib/ofp-util.h	/^    uint64_t tx_bytes;$/;"	m	struct:ofputil_queue_stats
tx_bytes	ofproto/bond.c	/^    uint64_t tx_bytes;          \/* Sum across 'tx_bytes' of entries. *\/$/;"	m	struct:bond_slave	file:
tx_carrier_errors	lib/netdev-linux.c	/^    uint64_t tx_carrier_errors;$/;"	m	struct:rtnl_link_stats64	file:
tx_carrier_errors	lib/netdev.h	/^    uint64_t tx_carrier_errors;$/;"	m	struct:netdev_stats
tx_compressed	lib/netdev-linux.c	/^    uint64_t tx_compressed;$/;"	m	struct:rtnl_link_stats64	file:
tx_count	lib/stp.c	/^    int tx_count;                   \/* Number of BPDUs transmitted. *\/$/;"	m	struct:stp_port	file:
tx_count	ofproto/ofproto.h	/^    int tx_count;               \/* Number of BPDUs transmitted. *\/$/;"	m	struct:ofproto_port_rstp_status
tx_count	ofproto/ofproto.h	/^    int tx_count;               \/* Number of BPDUs transmitted. *\/$/;"	m	struct:ofproto_port_stp_stats
tx_counter	ovn/controller/ofctrl.c	/^static struct rconn_packet_counter *tx_counter;$/;"	v	typeref:struct:rconn_packet_counter	file:
tx_dropped	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   tx_dropped;		\/* no space available in linux  *\/$/;"	m	struct:ovs_vport_stats
tx_dropped	datapath/vport.h	/^	atomic_long_t tx_dropped;$/;"	m	struct:vport_err_stats
tx_dropped	include/odp-netlink.h	/^	ovs_32aligned_u64   tx_dropped;		\/* no space available in linux  *\/$/;"	m	struct:ovs_vport_stats
tx_dropped	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_dropped;     \/* Number of packets dropped by TX. *\/$/;"	m	struct:ofp10_port_stats
tx_dropped	include/openflow/openflow-1.1.h	/^    ovs_be64 tx_dropped;      \/* Number of packets dropped by TX. *\/$/;"	m	struct:ofp11_port_stats
tx_dropped	include/openflow/openflow-1.4.h	/^    ovs_be64 tx_dropped;     \/* Number of packets dropped by TX. *\/$/;"	m	struct:ofp14_port_stats
tx_dropped	lib/netdev-linux.c	/^    uint64_t tx_dropped;$/;"	m	struct:rtnl_link_stats64	file:
tx_dropped	lib/netdev.h	/^    uint64_t tx_dropped;        \/* No buffer space. *\/$/;"	m	struct:netdev_stats
tx_errors	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   tx_errors;		\/* packet transmit problems     *\/$/;"	m	struct:ovs_vport_stats
tx_errors	datapath/vport.h	/^	atomic_long_t tx_errors;$/;"	m	struct:vport_err_stats
tx_errors	include/odp-netlink.h	/^	ovs_32aligned_u64   tx_errors;		\/* packet transmit problems     *\/$/;"	m	struct:ovs_vport_stats
tx_errors	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_errors;  \/* # of packets dropped due to overrun. *\/$/;"	m	struct:ofp10_queue_stats
tx_errors	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_errors; \/* Number of transmit errors.  This is a$/;"	m	struct:ofp10_port_stats
tx_errors	include/openflow/openflow-1.1.h	/^    ovs_be64 tx_errors;        \/* # of packets dropped due to overrun. *\/$/;"	m	struct:ofp11_queue_stats
tx_errors	include/openflow/openflow-1.1.h	/^    ovs_be64 tx_errors;       \/* Number of transmit errors.  This is a$/;"	m	struct:ofp11_port_stats
tx_errors	include/openflow/openflow-1.4.h	/^    ovs_be64 tx_errors;      \/* Number of transmit errors.  This is a super-set$/;"	m	struct:ofp14_port_stats
tx_errors	lib/netdev-linux.c	/^    uint64_t tx_errors;$/;"	m	struct:rtnl_link_stats64	file:
tx_errors	lib/netdev.h	/^    uint64_t tx_errors;         \/* Packet transmit problems. *\/$/;"	m	struct:netdev_stats
tx_errors	lib/netdev.h	/^    uint64_t tx_errors;$/;"	m	struct:netdev_queue_stats
tx_errors	lib/ofp-util.h	/^    uint64_t tx_errors;$/;"	m	struct:ofputil_queue_stats
tx_fifo_errors	lib/netdev-linux.c	/^    uint64_t tx_fifo_errors;$/;"	m	struct:rtnl_link_stats64	file:
tx_fifo_errors	lib/netdev.h	/^    uint64_t tx_fifo_errors;$/;"	m	struct:netdev_stats
tx_heartbeat_errors	lib/netdev-linux.c	/^    uint64_t tx_heartbeat_errors;$/;"	m	struct:rtnl_link_stats64	file:
tx_heartbeat_errors	lib/netdev.h	/^    uint64_t tx_heartbeat_errors;$/;"	m	struct:netdev_stats
tx_lock	lib/netdev-dpdk.c	/^    rte_spinlock_t tx_lock;        \/* Protects the members and the NIC queue$/;"	m	struct:dpdk_tx_queue	file:
tx_packets	datapath/linux/compat/include/linux/netdevice.h	/^	u64     tx_packets;$/;"	m	struct:pcpu_sw_netstats
tx_packets	datapath/linux/compat/include/linux/openvswitch.h	/^	__u64   tx_packets;		\/* total packets transmitted    *\/$/;"	m	struct:ovs_vport_stats
tx_packets	include/odp-netlink.h	/^	ovs_32aligned_u64   tx_packets;		\/* total packets transmitted    *\/$/;"	m	struct:ovs_vport_stats
tx_packets	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_packets;     \/* Number of transmitted packets. *\/$/;"	m	struct:ofp10_port_stats
tx_packets	include/openflow/openflow-1.0.h	/^    ovs_32aligned_be64 tx_packets; \/* Number of transmitted packets. *\/$/;"	m	struct:ofp10_queue_stats
tx_packets	include/openflow/openflow-1.1.h	/^    ovs_be64 tx_packets;       \/* Number of transmitted packets. *\/$/;"	m	struct:ofp11_queue_stats
tx_packets	include/openflow/openflow-1.1.h	/^    ovs_be64 tx_packets;      \/* Number of transmitted packets. *\/$/;"	m	struct:ofp11_port_stats
tx_packets	include/openflow/openflow-1.4.h	/^    ovs_be64 tx_packets;     \/* Number of transmitted packets. *\/$/;"	m	struct:ofp14_port_stats
tx_packets	lib/netdev-linux.c	/^    uint64_t tx_packets;$/;"	m	struct:rtnl_link_stats64	file:
tx_packets	lib/netdev.h	/^    uint64_t tx_packets;        \/* Total packets transmitted. *\/$/;"	m	struct:netdev_stats
tx_packets	lib/netdev.h	/^    uint64_t tx_packets;$/;"	m	struct:netdev_queue_stats
tx_packets	lib/ofp-util.h	/^    uint64_t tx_packets;$/;"	m	struct:ofputil_queue_stats
tx_pcap	lib/netdev-dummy.c	/^    FILE *tx_pcap, *rxq_pcap OVS_GUARDED;$/;"	m	struct:netdev_dummy	file:
tx_q	lib/netdev-dpdk.c	/^    struct dpdk_tx_queue *tx_q;$/;"	m	struct:netdev_dpdk	typeref:struct:netdev_dpdk::dpdk_tx_queue	file:
tx_qid	lib/dpif-netdev.c	/^    int tx_qid;                     \/* Queue id used by this pmd thread to$/;"	m	struct:dp_netdev_pmd_thread	file:
tx_timer	lib/cfm.c	/^    struct timer tx_timer;    \/* Send CCM when expired. *\/$/;"	m	struct:cfm	typeref:struct:cfm::timer	file:
tx_timer	lib/ovs-lldp.h	/^    struct timer        tx_timer;         \/* Send LLDP when expired. *\/$/;"	m	struct:lldp	typeref:struct:lldp::timer
tx_want	lib/stream-ssl.c	/^    int rx_want, tx_want;$/;"	m	struct:ssl_stream	file:
tx_window_errors	lib/netdev-linux.c	/^    uint64_t tx_window_errors;$/;"	m	struct:rtnl_link_stats64	file:
tx_window_errors	lib/netdev.h	/^    uint64_t tx_window_errors;$/;"	m	struct:netdev_stats
txbuf	lib/stream-ssl.c	/^    struct ofpbuf *txbuf;$/;"	m	struct:ssl_stream	typeref:struct:ssl_stream::ofpbuf	file:
txbuf	lib/vconn-stream.c	/^    struct ofpbuf *txbuf;$/;"	m	struct:vconn_stream	typeref:struct:vconn_stream::ofpbuf	file:
txn	lib/db-ctl-base.h	/^    struct ovsdb_idl_txn *txn;$/;"	m	struct:ctl_context	typeref:struct:ctl_context::ovsdb_idl_txn
txn	lib/ovsdb-idl.c	/^    struct ovsdb_idl_txn *txn;$/;"	m	struct:ovsdb_idl	typeref:struct:ovsdb_idl::ovsdb_idl_txn	file:
txn	ovsdb/execution.c	/^    struct ovsdb_txn *txn;$/;"	m	struct:delete_row_cbdata	typeref:struct:delete_row_cbdata::ovsdb_txn	file:
txn	ovsdb/execution.c	/^    struct ovsdb_txn *txn;$/;"	m	struct:mutate_row_cbdata	typeref:struct:mutate_row_cbdata::ovsdb_txn	file:
txn	ovsdb/execution.c	/^    struct ovsdb_txn *txn;$/;"	m	struct:ovsdb_execution	typeref:struct:ovsdb_execution::ovsdb_txn	file:
txn	ovsdb/execution.c	/^    struct ovsdb_txn *txn;$/;"	m	struct:update_row_cbdata	typeref:struct:update_row_cbdata::ovsdb_txn	file:
txn	ovsdb/ovsdb-server.c	/^    struct ovsdb_txn *txn;$/;"	m	struct:db	typeref:struct:db::ovsdb_txn	file:
txn_aborted	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_aborted);$/;"	v
txn_error	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_error);$/;"	v
txn_incomplete	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_incomplete);$/;"	v
txn_indexes	ovsdb/transaction.c	/^    struct hmap *txn_indexes;$/;"	m	struct:ovsdb_txn_table	typeref:struct:ovsdb_txn_table::hmap	file:
txn_node	lib/ovsdb-idl-provider.h	/^    struct hmap_node txn_node;  \/* Node in ovsdb_idl_txn's list. *\/$/;"	m	struct:ovsdb_idl_row	typeref:struct:ovsdb_idl_row::hmap_node
txn_not_locked	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_not_locked);$/;"	v
txn_row	ovsdb/row.h	/^    struct ovsdb_txn_row *txn_row; \/* Transaction that row is in, if any. *\/$/;"	m	struct:ovsdb_row	typeref:struct:ovsdb_row::ovsdb_txn_row
txn_rows	lib/ovsdb-idl.c	/^    struct hmap txn_rows;$/;"	m	struct:ovsdb_idl_txn	typeref:struct:ovsdb_idl_txn::hmap	file:
txn_rows	ovsdb/transaction.c	/^    struct hmap txn_rows;       \/* Contains "struct ovsdb_txn_row"s. *\/$/;"	m	struct:ovsdb_txn_table	typeref:struct:ovsdb_txn_table::hmap	file:
txn_success	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_success);$/;"	v
txn_table	ovsdb/table.h	/^    struct ovsdb_txn_table *txn_table; \/* Only if table is in a transaction. *\/$/;"	m	struct:ovsdb_table	typeref:struct:ovsdb_table::ovsdb_txn_table
txn_tables	ovsdb/transaction.c	/^    struct ovs_list txn_tables; \/* Contains "struct ovsdb_txn_table"s. *\/$/;"	m	struct:ovsdb_txn	typeref:struct:ovsdb_txn::ovs_list	file:
txn_try_again	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_try_again);$/;"	v
txn_unchanged	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_unchanged);$/;"	v
txn_uncommitted	lib/ovsdb-idl.c	/^COVERAGE_DEFINE(txn_uncommitted);$/;"	v
txn_write_func	ovsdb/ovsdb-idlc	/^                txn_write_func = "ovsdb_idl_txn_write"$/;"	v
txn_write_func	ovsdb/ovsdb-idlc	/^                txn_write_func = "ovsdb_idl_txn_write_clone"$/;"	v
txq	lib/netdev-dummy.c	/^    struct ovs_list txq;$/;"	m	struct:dummy_packet_stream	typeref:struct:dummy_packet_stream::ovs_list	file:
txq	lib/rconn.c	/^    struct ovs_list txq;        \/* Contains "struct ofpbuf"s. *\/$/;"	m	struct:rconn	typeref:struct:rconn::ovs_list	file:
txq_needs_locking	lib/netdev-dpdk.c	/^    bool txq_needs_locking;$/;"	m	struct:netdev_dpdk	file:
type	datapath-windows/ovsext/DpInternal.h	/^    uint32_t type;$/;"	m	struct:_OVS_VPORT_EXT_INFO
type	datapath-windows/ovsext/NetProto.h	/^    UINT8 type;$/;"	m	struct:IPv6NdOptHdr
type	datapath-windows/ovsext/NetProto.h	/^   UINT8    type;$/;"	m	struct:ICMPHdr
type	datapath-windows/ovsext/NetProto.h	/^   UINT8    type;$/;"	m	struct:IGMPHdr
type	datapath-windows/ovsext/NetProto.h	/^   UINT8 type;$/;"	m	struct:IPOpt
type	datapath-windows/ovsext/Netlink/Netlink.h	/^    NL_ATTR_TYPE type;$/;"	m	struct:_NL_POLICY
type	datapath/flow.h	/^		__be16 type;		\/* Ethernet frame type. *\/$/;"	m	struct:sw_flow_key::__anon28
type	datapath/linux/compat/include/net/geneve.h	/^	u8	type;$/;"	m	struct:geneve_opt
type	datapath/vport.h	/^	enum ovs_vport_type type;$/;"	m	struct:vport_ops	typeref:enum:vport_ops::ovs_vport_type
type	datapath/vport.h	/^	enum ovs_vport_type type;$/;"	m	struct:vport_parms	typeref:enum:vport_parms::ovs_vport_type
type	include/openflow/netronome-ext.h	/^    ovs_be16 type;                  \/* OFPGPT15_EXPERIMENTER. *\/$/;"	m	struct:ntr_group_prop_selection_method
type	include/openflow/nicira-ext.h	/^    ovs_be16 type;              \/* Vendor-defined type. *\/$/;"	m	struct:nx_vendor_error
type	include/openflow/openflow-1.0.h	/^    ovs_be16 type;              \/* One of the OFPST_* constants. *\/$/;"	m	struct:ofp10_stats_msg
type	include/openflow/openflow-1.1.h	/^    ovs_be16 type;                 \/* OFPIT_GOTO_TABLE *\/$/;"	m	struct:ofp11_instruction_goto_table
type	include/openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* Instruction type *\/$/;"	m	struct:ofp11_instruction
type	include/openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* OFPIT11_EXPERIMENTER *\/$/;"	m	struct:ofp11_instruction_experimenter
type	include/openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* OFPIT_WRITE_METADATA *\/$/;"	m	struct:ofp11_instruction_write_metadata
type	include/openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* One of OFPIT_*_ACTIONS *\/$/;"	m	struct:ofp11_instruction_actions
type	include/openflow/openflow-1.1.h	/^    ovs_be16 type;              \/* One of the OFPST_* constants. *\/$/;"	m	struct:ofp11_stats_msg
type	include/openflow/openflow-1.1.h	/^    ovs_be16 type;             \/* One of OFPMT_* *\/$/;"	m	struct:ofp11_match_header
type	include/openflow/openflow-1.1.h	/^    uint8_t type;                 \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp11_group_mod
type	include/openflow/openflow-1.1.h	/^    uint8_t type;               \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp11_group_desc_stats
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;        \/* OFPMBT_DROP. *\/$/;"	m	struct:ofp13_meter_band_drop
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;        \/* OFPMBT_DSCP_REMARK. *\/$/;"	m	struct:ofp13_meter_band_dscp_remark
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;        \/* OFPMBT_EXPERIMENTER. *\/$/;"	m	struct:ofp13_meter_band_experimenter
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;     \/* One of OFPTFPT13_EXPERIMENTER,$/;"	m	struct:ofp13_table_feature_prop_experimenter
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;    \/* One of OFPTFPT13_INSTRUCTIONS,$/;"	m	struct:ofp13_table_feature_prop_instructions
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT13_MATCH, OFPTFPT13_WILDCARDS,$/;"	m	struct:ofp13_table_feature_prop_oxm
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT13_NEXT_TABLES,$/;"	m	struct:ofp13_table_feature_prop_next_tables
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT13_WRITE_ACTIONS,$/;"	m	struct:ofp13_table_feature_prop_actions
type	include/openflow/openflow-1.3.h	/^    ovs_be16    type;   \/* One of OFPTFPT_*. *\/$/;"	m	struct:ofp13_table_feature_prop_header
type	include/openflow/openflow-1.3.h	/^    ovs_be16 type;              \/* OFPIT13_METER *\/$/;"	m	struct:ofp13_instruction_meter
type	include/openflow/openflow-1.3.h	/^    ovs_be16 type;       \/* One of OFPMBT_*. *\/$/;"	m	struct:ofp13_meter_band_header
type	include/openflow/openflow-1.4.h	/^    ovs_be16         type;    \/* OFPPDPT14_ETHERNET. *\/$/;"	m	struct:ofp14_port_desc_prop_ethernet
type	include/openflow/openflow-1.4.h	/^    ovs_be16         type;    \/* OFPPSPT14_ETHERNET. *\/$/;"	m	struct:ofp14_port_stats_prop_ethernet
type	include/openflow/openflow-1.4.h	/^    ovs_be16         type;    \/* OFPTMPT14_EVICTION. *\/$/;"	m	struct:ofp14_table_mod_prop_eviction
type	include/openflow/openflow-1.4.h	/^    ovs_be16         type;   \/* OFPTMPT14_VACANCY. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
type	include/openflow/openflow-1.4.h	/^    ovs_be16        type;       \/* One of OFPRPT_EXPERIMENTER. *\/$/;"	m	struct:ofp14_role_prop_experimenter
type	include/openflow/openflow-1.4.h	/^    ovs_be16        type;       \/* One of OFPTFPT_EXPERIMENTER_SLAVE,$/;"	m	struct:ofp14_async_config_prop_experimenter
type	include/openflow/openflow-1.4.h	/^    ovs_be16      type;       \/* OFPPMPT14_ETHERNET. *\/$/;"	m	struct:ofp14_port_mod_prop_ethernet
type	include/openflow/openflow-1.4.h	/^    ovs_be16    type;       \/* One of OFPACPT_*. *\/$/;"	m	struct:ofp14_async_config_prop_header
type	include/openflow/openflow-1.4.h	/^    ovs_be16    type;$/;"	m	struct:ofp14_async_config_prop_reasons
type	include/openflow/openflow-1.4.h	/^    ovs_be16 type;          \/* OFPT_BUNDLE_CONTROL: one of OFPBCT_*.$/;"	m	struct:ofp14_bundle_ctrl_msg
type	include/openflow/openflow-1.4.h	/^    ovs_be16 type;   \/* One of OFPRPT_*. *\/$/;"	m	struct:ofp14_role_prop_header
type	include/openflow/openflow-1.5.h	/^    ovs_be16         type;    \/* OFPGBPT15_WATCH_PORT or OFPGBPT15_WATCH_GROUP. *\/$/;"	m	struct:ofp15_group_bucket_prop_watch
type	include/openflow/openflow-1.5.h	/^    ovs_be16         type;    \/* OFPGBPT15_WEIGHT. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
type	include/openflow/openflow-1.5.h	/^    uint8_t type;                 \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp15_group_desc_stats
type	include/openflow/openflow-1.5.h	/^    uint8_t type;                 \/* One of OFPGT11_*. *\/$/;"	m	struct:ofp15_group_mod
type	include/openflow/openflow-common.h	/^    ovs_be16    type;        \/* One of OFPHET_*. *\/$/;"	m	struct:ofp_hello_elem_header
type	include/openflow/openflow-common.h	/^    ovs_be16 type;$/;"	m	struct:ofp_error_msg
type	include/openflow/openflow-common.h	/^    uint8_t type;       \/* One of the OFPT_ constants. *\/$/;"	m	struct:ofp_header
type	lib/dpif-netdev.c	/^    char *type;                 \/* Port type as requested by user. *\/$/;"	m	struct:dp_netdev_port	file:
type	lib/dpif-netlink.h	/^    enum ovs_vport_type type;$/;"	m	struct:dpif_netlink_vport	typeref:enum:dpif_netlink_vport::ovs_vport_type
type	lib/dpif-provider.h	/^    const char *type;$/;"	m	struct:dpif_class
type	lib/dpif.h	/^    char *type;                 \/* Network device type, e.g. "system". *\/$/;"	m	struct:dpif_port
type	lib/dpif.h	/^    enum dpif_op_type type;$/;"	m	struct:dpif_op	typeref:enum:dpif_op::dpif_op_type
type	lib/dpif.h	/^    enum dpif_upcall_type type;$/;"	m	struct:dpif_upcall	typeref:enum:dpif_upcall::dpif_upcall_type
type	lib/geneve.h	/^    uint8_t   type;$/;"	m	struct:geneve_opt
type	lib/json.c	/^    enum json_token_type type;$/;"	m	struct:json_token	typeref:enum:json_token::json_token_type	file:
type	lib/json.h	/^    enum json_type type;$/;"	m	struct:json	typeref:enum:json::json_type
type	lib/jsonrpc.h	/^    enum jsonrpc_msg_type type;$/;"	m	struct:jsonrpc_msg	typeref:enum:jsonrpc_msg::jsonrpc_msg_type
type	lib/lldp/aa-structs.h	/^    uint16_t                         type;$/;"	m	struct:lldpd_aa_element_tlv
type	lib/netdev-dpdk.c	/^    enum dpdk_dev_type type;$/;"	m	struct:netdev_dpdk	typeref:enum:netdev_dpdk::dpdk_dev_type	file:
type	lib/netdev-dummy.c	/^    enum dummy_packet_conn_type type;$/;"	m	struct:dummy_packet_conn	typeref:enum:dummy_packet_conn::dummy_packet_conn_type	file:
type	lib/netdev-provider.h	/^    const char *type;$/;"	m	struct:netdev_class
type	lib/netlink.h	/^    enum nl_attr_type type;$/;"	m	struct:nl_policy	typeref:enum:nl_policy::nl_attr_type
type	lib/odp-util.h	/^        uint16_t   type;            \/* USER_ACTION_COOKIE_IPFIX. *\/$/;"	m	struct:user_action_cookie::__anon126
type	lib/odp-util.h	/^        uint16_t type;          \/* USER_ACTION_COOKIE_FLOW_SAMPLE. *\/$/;"	m	struct:user_action_cookie::__anon125
type	lib/odp-util.h	/^        uint16_t type;          \/* USER_ACTION_COOKIE_SFLOW. *\/$/;"	m	struct:user_action_cookie::__anon123
type	lib/odp-util.h	/^        uint16_t type;          \/* USER_ACTION_COOKIE_SLOW_PATH. *\/$/;"	m	struct:user_action_cookie::__anon124
type	lib/odp-util.h	/^    uint16_t type;              \/* enum user_action_cookie_type. *\/$/;"	m	union:user_action_cookie
type	lib/ofp-actions.c	/^    enum ovs_instruction_type type;$/;"	m	struct:instruction_type_info	typeref:enum:instruction_type_info::ovs_instruction_type	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                    \/* OFPAT11_OUTPUT. *\/$/;"	m	struct:ofp11_action_output	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT10_OUTPUT. *\/$/;"	m	struct:ofp10_action_output	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT12_SET_FIELD. *\/$/;"	m	struct:ofp12_action_set_field	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:ext_action_header	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_conjunction	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_controller	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_note	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_reg_load	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_reg_load2	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_reg_move	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_resubmit	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_sample	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_stack	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_write_metadata	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;                  \/* Type. *\/$/;"	m	struct:ofp_action_dl_addr	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_COPY_FIELD. *\/$/;"	m	struct:ofp15_action_copy_field	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_EXPERIMENTER. *\/$/;"	m	struct:onf_action_copy_field	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_bundle	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_cnt_ids	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_conntrack	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_fin_timeout	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_learn	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_multipath	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_output_reg	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;              \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_output_reg2	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;            \/* OFPAT10_ENQUEUE. *\/$/;"	m	struct:ofp10_action_enqueue	file:
type	lib/ofp-actions.c	/^    ovs_be16 type;$/;"	m	struct:ofp_action_header	file:
type	lib/ofp-actions.c	/^    uint16_t type;                \/* Type if standard, otherwise subtype. *\/$/;"	m	struct:ofpact_hdrs	file:
type	lib/ofp-actions.h	/^    enum ofpact_type type;      \/* OFPACT_*. *\/$/;"	m	struct:ofpact	typeref:enum:ofpact::ofpact_type
type	lib/ofp-errors.c	/^    int type, code;$/;"	m	struct:triplet	file:
type	lib/ofp-msgs.c	/^    enum ofptype type;$/;"	m	struct:raw_info	typeref:enum:raw_info::ofptype	file:
type	lib/ofp-msgs.c	/^    uint8_t type;               \/* From ofp_header. *\/$/;"	m	struct:ofphdrs	file:
type	lib/ofp-util.c	/^    ovs_be16 type;          \/* OFP*_EXPERIMENTER. *\/$/;"	m	struct:ofp_prop_experimenter	file:
type	lib/ofp-util.c	/^    ovs_be16 type;$/;"	m	struct:ofp_prop_header	file:
type	lib/ofp-util.h	/^    uint16_t    type;$/;"	m	struct:ofputil_bundle_ctrl_msg
type	lib/ofp-util.h	/^    uint16_t type;$/;"	m	struct:ofputil_meter_band
type	lib/ofp-util.h	/^    uint8_t type;                 \/* One of OFPGT11_*. *\/$/;"	m	struct:ofputil_group_mod
type	lib/ofp-util.h	/^    uint8_t type;               \/* One of OFPGT_*. *\/$/;"	m	struct:ofputil_group_desc
type	lib/ovsdb-idl-provider.h	/^    struct ovsdb_type type;$/;"	m	struct:ovsdb_idl_column	typeref:struct:ovsdb_idl_column::ovsdb_type
type	lib/ovsdb-types.h	/^    enum ovsdb_atomic_type type;$/;"	m	struct:ovsdb_base_type	typeref:enum:ovsdb_base_type::ovsdb_atomic_type
type	lib/packets.h	/^    uint8_t type;$/;"	m	struct:igmpv3_header
type	lib/packets.h	/^    uint8_t type;$/;"	m	struct:igmpv3_record
type	lib/packets.h	/^    uint8_t type;$/;"	m	struct:mld2_record
type	lib/packets.h	/^    uint8_t type;$/;"	m	struct:mld_header
type	lib/sflow.h	/^    u_int32_t type;           \/* enum SFLAddress_type *\/$/;"	m	struct:_SFLAddress
type	lib/sflow.h	/^    u_int32_t type;   \/* enum SFLExtended_as_path_segment_type *\/$/;"	m	struct:_SFLExtended_as_path_segment
type	lib/stream-ssl.c	/^    enum session_type type;$/;"	m	struct:ssl_stream	typeref:enum:ssl_stream::session_type	file:
type	lib/table.h	/^    const struct ovsdb_type *type;$/;"	m	struct:cell	typeref:struct:cell::ovsdb_type
type	lib/util.c	/^    } type;$/;"	m	struct:scan_spec	typeref:enum:scan_spec::__anon162	file:
type	lib/vswitch-idl.h	/^	char *type;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_interface
type	lib/vswitch-idl.h	/^	char *type;	\/* Always nonnull. *\/$/;"	m	struct:ovsrec_qos
type	ofproto/bundles.h	/^    enum ofptype      type;  \/* OFPTYPE_FLOW_MOD or OFPTYPE_PORT_MOD. *\/$/;"	m	struct:ofp_bundle_entry	typeref:enum:ofp_bundle_entry::ofptype
type	ofproto/connmgr.c	/^    enum ofconn_type type;      \/* Type. *\/$/;"	m	struct:ofconn	typeref:enum:ofconn::ofconn_type	file:
type	ofproto/ofproto-dpif-upcall.c	/^    enum dpif_upcall_type type;    \/* Datapath type of the upcall. *\/$/;"	m	struct:upcall	typeref:enum:upcall::dpif_upcall_type	file:
type	ofproto/ofproto-dpif-xlate.c	/^    enum xc_type type;$/;"	m	struct:xc_entry	typeref:enum:xc_entry::xc_type	file:
type	ofproto/ofproto-dpif.c	/^    char *type;$/;"	m	struct:dpif_backer	file:
type	ofproto/ofproto-provider.h	/^    char *type;                 \/* Datapath type. *\/$/;"	m	struct:ofproto
type	ofproto/ofproto-provider.h	/^    const enum ofp11_group_type type; \/* One of OFPGT_*. *\/$/;"	m	struct:ofgroup	typeref:enum:ofgroup::ofp11_group_type
type	ofproto/ofproto.h	/^    char *type;                 \/* Network device type, e.g. "system". *\/$/;"	m	struct:ofproto_port
type	ovn/controller/physical.c	/^    enum chassis_tunnel_type type;$/;"	m	struct:chassis_tunnel	typeref:enum:chassis_tunnel::chassis_tunnel_type	file:
type	ovn/lib/expr.c	/^    enum expr_constant_type type; \/* Type of the constants. *\/$/;"	m	struct:expr_constant_set	typeref:enum:expr_constant_set::expr_constant_type	file:
type	ovn/lib/expr.c	/^    enum expr_type type;$/;"	m	struct:expr_sort	typeref:enum:expr_sort::expr_type	file:
type	ovn/lib/expr.h	/^    enum expr_type type;        \/* Expression type. *\/$/;"	m	struct:expr	typeref:enum:expr::expr_type
type	ovn/lib/lex.h	/^    enum lex_type type;         \/* One of LEX_*. *\/$/;"	m	struct:lex_token	typeref:enum:lex_token::lex_type
type	ovn/lib/ovn-nb-idl.h	/^	char *type;	\/* Always nonnull. *\/$/;"	m	struct:nbrec_logical_port
type	ovn/lib/ovn-sb-idl.h	/^	char *type;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_encap
type	ovn/lib/ovn-sb-idl.h	/^	char *type;	\/* Always nonnull. *\/$/;"	m	struct:sbrec_port_binding
type	ovsdb/column.h	/^    struct ovsdb_type type;$/;"	m	struct:ovsdb_column	typeref:struct:ovsdb_column::ovsdb_type
type	ovsdb/mutation.h	/^    struct ovsdb_type type;$/;"	m	struct:ovsdb_mutation	typeref:struct:ovsdb_mutation::ovsdb_type
type	ovsdb/ovsdb-idlc	/^            type = column.type$/;"	v
type	tests/test-sflow.c	/^    } type;$/;"	m	struct:sflow_addr	typeref:enum:sflow_addr::__anon228	file:
type	tests/test-vconn.c	/^    const char *type;$/;"	m	struct:fake_pvconn	file:
type	vswitchd/bridge.c	/^    char *type;                 \/* Datapath type. *\/$/;"	m	struct:bridge	file:
type	vswitchd/bridge.c	/^    const char *type;           \/* Usually same as cfg->type. *\/$/;"	m	struct:iface	file:
typeAndConstraintsToNroff	ovsdb/ovsdb-doc	/^def typeAndConstraintsToNroff(column):$/;"	f
typeNBO	datapath-windows/ovsext/Ethernet.h	/^    UINT16  typeNBO;     \/\/ indicates the higher level protocol$/;"	m	struct:Eth_DIX
typeNBO	datapath-windows/ovsext/Ethernet.h	/^    UINT16 typeNBO;            \/\/ always ETH_TYPE_802_1PQ$/;"	m	struct:Eth_802_1pq_Tag
typeName	build-aux/check-structs	/^                typeName = parseTypeName()$/;"	v
type_check	ovn/lib/expr.c	/^type_check(struct expr_context *ctx, const struct expr_field *f,$/;"	f	file:
type_get_memory_usage	ofproto/ofproto-dpif.c	/^type_get_memory_usage(const char *type, struct simap *usage)$/;"	f	file:
type_get_memory_usage	ofproto/ofproto-provider.h	/^    void (*type_get_memory_usage)(const char *type, struct simap *usage);$/;"	m	struct:ofproto_class
type_mismatch	ovsdb/mutation.c	/^type_mismatch(const struct ovsdb_mutation *m, const struct json *json)$/;"	f	file:
type_run	ofproto/ofproto-dpif.c	/^type_run(const char *type)$/;"	f	file:
type_run	ofproto/ofproto-provider.h	/^    int (*type_run)(const char *type);$/;"	m	struct:ofproto_class
type_to_string	python/ovs/jsonrpc.py	/^    def type_to_string(type_):$/;"	m	class:Message
type_wait	ofproto/ofproto-dpif.c	/^type_wait(const char *type)$/;"	f	file:
type_wait	ofproto/ofproto-provider.h	/^    void (*type_wait)(const char *type);$/;"	m	struct:ofproto_class
types	build-aux/check-structs	/^types = {}$/;"	v
types	build-aux/extract-ofp-actions	/^types = {}$/;"	v
types	debian/ovs-monitor-ipsec	/^from ovs.db import types$/;"	i
types	include/openflow/openflow-1.2.h	/^    ovs_be32  types;           \/* Bitmap of OFPGT11_* values supported. *\/$/;"	m	struct:ofp12_group_features_stats
types	lib/lldp/lldp.c	/^} types;$/;"	v	typeref:union:__anon96	file:
types	lib/ofp-util.h	/^    uint32_t  types;           \/* Bitmap of OFPGT_* values supported. *\/$/;"	m	struct:ofputil_group_features
types	python/ovs/db/data.py	/^import ovs.db.types$/;"	i
types	python/ovs/db/schema.py	/^from ovs.db import types$/;"	i
types	python/ovs/unixctl/__init__.py	/^import types$/;"	i
types	python/ovs/unixctl/client.py	/^import types$/;"	i
types	python/ovs/unixctl/server.py	/^import types$/;"	i
types	tests/test-ovsdb.py	/^from ovs.db import types$/;"	i
types	vtep/ovs-vtep	/^import types$/;"	i
types	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^from ovs.db import types$/;"	i
u	include/sparse/netinet/in.h	/^    } u;$/;"	m	struct:in6_addr	typeref:union:in6_addr::__anon67
u	lib/dpif.h	/^    } u;$/;"	m	struct:dpif_op	typeref:union:dpif_op::__anon90
u	lib/json.c	/^    } u;$/;"	m	struct:json_token	typeref:union:json_token::__anon92	file:
u	lib/json.h	/^    } u;$/;"	m	struct:json	typeref:union:json::__anon93
u	lib/netdev-dummy.c	/^    } u;$/;"	m	struct:dummy_packet_conn	typeref:union:dummy_packet_conn::__anon109	file:
u	lib/ovsdb-types.h	/^    } u;$/;"	m	struct:ovsdb_base_type	typeref:union:ovsdb_base_type::__anon146
u	ofproto/ofproto-dpif-xlate.c	/^    } u;$/;"	m	struct:xc_entry	typeref:union:xc_entry::__anon188	file:
u	ofproto/ofproto.c	/^    } u;$/;"	m	struct:learned_cookie	typeref:union:learned_cookie::__anon187	file:
u	tests/idltest.h	/^	struct uuid u;$/;"	m	struct:idltest_simple	typeref:struct:idltest_simple::uuid
u1	datapath/linux/vport-lisp.c	/^	} u1;$/;"	m	struct:lisphdr	typeref:union:lisphdr::__anon52	file:
u1	datapath/vport-lisp.c	/^	} u1;$/;"	m	struct:lisphdr	typeref:union:lisphdr::__anon55	file:
u16	datapath-windows/ovsext/Types.h	/^typedef unsigned short uint16, uint16_t, ovs_be16, u16;$/;"	t
u2	datapath/linux/vport-lisp.c	/^	} u2;$/;"	m	struct:lisphdr	typeref:union:lisphdr::__anon53	file:
u2	datapath/vport-lisp.c	/^	} u2;$/;"	m	struct:lisphdr	typeref:union:lisphdr::__anon56	file:
u32	datapath-windows/ovsext/Types.h	/^typedef unsigned int uint32, uint32_t, ovs_be32, u32;$/;"	t
u32	include/openvswitch/types.h	/^    uint32_t u32[4];$/;"	m	union:__anon61
u32	include/windows/sys/epoll.h	/^    uint32_t u32;$/;"	m	union:data
u64	datapath-windows/ovsext/Types.h	/^typedef unsigned long long uint64, uint64_t, ovs_be64, u64;$/;"	t
u64	include/openvswitch/types.h	/^    } u64;$/;"	m	union:__anon61	typeref:struct:__anon61::__anon62
u64_stats_fetch_begin	datapath/linux/compat/include/linux/u64_stats_sync.h	/^static inline unsigned int u64_stats_fetch_begin(const struct u64_stats_sync *syncp)$/;"	f
u64_stats_fetch_begin_irq	datapath/linux/compat/include/linux/u64_stats_sync.h	/^static inline unsigned int u64_stats_fetch_begin_irq(const struct u64_stats_sync *syncp)$/;"	f
u64_stats_fetch_retry	datapath/linux/compat/include/linux/u64_stats_sync.h	/^static inline bool u64_stats_fetch_retry(const struct u64_stats_sync *syncp,$/;"	f
u64_stats_fetch_retry_irq	datapath/linux/compat/include/linux/u64_stats_sync.h	/^static inline bool u64_stats_fetch_retry_irq(const struct u64_stats_sync *syncp,$/;"	f
u64_stats_init	datapath/linux/compat/include/linux/u64_stats_sync.h	78;"	d
u64_stats_init	datapath/linux/compat/include/linux/u64_stats_sync.h	80;"	d
u64_stats_sync	datapath/linux/compat/include/linux/u64_stats_sync.h	/^struct u64_stats_sync {$/;"	s
u64_stats_update_begin	datapath/linux/compat/include/linux/u64_stats_sync.h	/^static inline void u64_stats_update_begin(struct u64_stats_sync *syncp)$/;"	f
u64_stats_update_end	datapath/linux/compat/include/linux/u64_stats_sync.h	/^static inline void u64_stats_update_end(struct u64_stats_sync *syncp)$/;"	f
u8	datapath-windows/ovsext/Types.h	/^typedef unsigned char uint8, uint8_t, u8;$/;"	t
u8	lib/meta-flow.h	/^    uint8_t u8;$/;"	m	union:mf_value
u8	lib/meta-flow.h	/^    uint8_t u8[128];$/;"	m	union:mf_subvalue
u8	lib/tun-metadata.h	/^        uint8_t u8[TUN_METADATA_TOT_OPT_SIZE]; \/* Values from tunnel TLVs. *\/$/;"	m	union:tun_metadata::__anon161
u_int16_t	include/windows/windefs.h	37;"	d
u_int32_t	include/windows/windefs.h	38;"	d
u_int64_t	include/windows/windefs.h	39;"	d
u_int8_t	include/windows/windefs.h	36;"	d
u_s6_addr	include/sparse/netinet/in.h	/^        uint8_t u_s6_addr[16];$/;"	m	union:in6_addr::__anon67
ua	tests/idltest.h	/^	struct uuid *ua;$/;"	m	struct:idltest_simple	typeref:struct:idltest_simple::uuid
uc_array_size	lib/dpif-netlink.c	/^    int uc_array_size;             \/* Size of 'handler->channels' and *\/$/;"	m	struct:dpif_netlink	file:
uc_is_code_point	lib/unicode.h	/^uc_is_code_point(int c)$/;"	f
uc_is_leading_surrogate	lib/unicode.h	/^uc_is_leading_surrogate(int c)$/;"	f
uc_is_surrogate	lib/unicode.h	/^uc_is_surrogate(int c)$/;"	f
uc_is_trailing_surrogate	lib/unicode.h	/^uc_is_trailing_surrogate(int c)$/;"	f
ucastPkts	lib/sflow.h	/^    u_int32_t ucastPkts;$/;"	m	struct:_SFLVlan_counters
ucast_local	vtep/vtep-ctl.c	/^    struct shash ucast_local;   \/* Maps from mac to vteprec_ucast_macs_local. *\/$/;"	m	struct:vtep_ctl_lswitch	typeref:struct:vtep_ctl_lswitch::shash	file:
ucast_remote	vtep/vtep-ctl.c	/^    struct shash ucast_remote;  \/* Maps from mac to vteprec_ucast_macs_remote.*\/$/;"	m	struct:vtep_ctl_lswitch	typeref:struct:vtep_ctl_lswitch::shash	file:
udp	lib/odp-util.c	/^    struct ovs_key_udp udp;$/;"	m	union:ovs_key_tp	typeref:struct:ovs_key_tp::ovs_key_udp	file:
udp	python/ovstest/rpcserver.py	/^import udp$/;"	i
udpCsumNeeded	datapath-windows/ovsext/NetProto.h	/^        UINT16 udpCsumNeeded:1;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
udpCsumZero	datapath-windows/ovsext/NetProto.h	/^        UINT16 udpCsumZero:1;$/;"	m	struct:_OVS_PACKET_HDR_INFO::__anon22
udp_build_header	lib/netdev-vport.c	/^udp_build_header(struct netdev_tunnel_config *tnl_cfg,$/;"	f	file:
udp_csum	lib/packets.h	/^    ovs_be16 udp_csum;$/;"	m	struct:udp_header
udp_dst	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 udp_dst;$/;"	m	struct:ovs_key_udp
udp_dst	include/odp-netlink.h	/^	ovs_be16 udp_dst;$/;"	m	struct:ovs_key_udp
udp_dst	lib/packets.h	/^    ovs_be16 udp_dst;$/;"	m	struct:udp_header
udp_encap_enable	datapath/linux/compat/include/linux/udp.h	/^static inline void udp_encap_enable(void)$/;"	f
udp_extract_tnl_md	lib/netdev-vport.c	/^udp_extract_tnl_md(struct dp_packet *packet, struct flow_tnl *tnl)$/;"	f	file:
udp_flow_src_port	datapath/linux/compat/include/net/udp.h	46;"	d
udp_hdr	datapath/linux/compat/include/linux/udp.h	/^static inline struct udphdr *udp_hdr(const struct sk_buff *skb)$/;"	f
udp_header	lib/packets.h	/^struct udp_header {$/;"	s
udp_len	lib/packets.h	/^    ovs_be16 udp_len;$/;"	m	struct:udp_header
udp_port	lib/tnl-ports.c	/^    ovs_be16 udp_port;$/;"	m	struct:tnl_port	file:
udp_port_cfg	datapath/linux/compat/include/net/udp_tunnel.h	/^struct udp_port_cfg {$/;"	s
udp_receiver	utilities/ovs-vlan-test	/^    def udp_receiver(self):$/;"	m	class:UDPReceiver
udp_set_csum	datapath/linux/compat/include/net/udp.h	58;"	d
udp_sock_create	datapath/linux/compat/include/net/udp_tunnel.h	64;"	d
udp_src	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 udp_src;$/;"	m	struct:ovs_key_udp
udp_src	include/odp-netlink.h	/^	ovs_be16 udp_src;$/;"	m	struct:ovs_key_udp
udp_src	lib/bfd.c	/^    uint16_t udp_src;             \/* UDP source port. *\/$/;"	m	struct:bfd	file:
udp_src	lib/packets.h	/^    ovs_be16 udp_src;$/;"	m	struct:udp_header
udp_tunnel_encap_destroy_t	datapath/linux/compat/include/net/udp_tunnel.h	/^typedef void (*udp_tunnel_encap_destroy_t)(struct sock *sk);$/;"	t
udp_tunnel_encap_enable	datapath/linux/compat/include/net/udp_tunnel.h	119;"	d
udp_tunnel_encap_rcv_t	datapath/linux/compat/include/net/udp_tunnel.h	/^typedef int (*udp_tunnel_encap_rcv_t)(struct sock *sk, struct sk_buff *skb);$/;"	t
udp_tunnel_handle_offloads	datapath/linux/compat/include/net/udp_tunnel.h	/^static inline struct sk_buff *udp_tunnel_handle_offloads(struct sk_buff *skb,$/;"	f
udp_tunnel_handle_offloads	datapath/linux/compat/include/net/udp_tunnel.h	20;"	d
udp_tunnel_sock_cfg	datapath/linux/compat/include/net/udp_tunnel.h	/^struct udp_tunnel_sock_cfg {$/;"	s
udp_tunnel_sock_release	datapath/linux/compat/include/net/udp_tunnel.h	93;"	d
udp_tunnel_xmit_skb	datapath/linux/compat/include/net/udp_tunnel.h	32;"	d
udp_tunnel_xmit_skb	datapath/linux/compat/include/net/udp_tunnel.h	85;"	d
udp_v4_check	datapath/linux/compat/include/net/udp.h	/^static inline __sum16 udp_v4_check(int len, __be32 saddr,$/;"	f
udphdr_ok	datapath/flow.c	/^static bool udphdr_ok(struct sk_buff *skb)$/;"	f	file:
udphdr_ok	datapath/linux/flow.c	/^static bool udphdr_ok(struct sk_buff *skb)$/;"	f	file:
udpif	ofproto/ofproto-dpif-upcall.c	/^    struct udpif *udpif;               \/* Parent udpif. *\/$/;"	m	struct:handler	typeref:struct:handler::udpif	file:
udpif	ofproto/ofproto-dpif-upcall.c	/^    struct udpif *udpif;               \/* Parent udpif. *\/$/;"	m	struct:revalidator	typeref:struct:revalidator::udpif	file:
udpif	ofproto/ofproto-dpif-upcall.c	/^struct udpif {$/;"	s	file:
udpif	ofproto/ofproto-dpif.c	/^    struct udpif *udpif;$/;"	m	struct:dpif_backer	typeref:struct:dpif_backer::udpif	file:
udpif_create	ofproto/ofproto-dpif-upcall.c	/^udpif_create(struct dpif_backer *backer, struct dpif *dpif)$/;"	f
udpif_destroy	ofproto/ofproto-dpif-upcall.c	/^udpif_destroy(struct udpif *udpif)$/;"	f
udpif_dump_seq	ofproto/ofproto-dpif-upcall.c	/^udpif_dump_seq(struct udpif *udpif)$/;"	f
udpif_flush	ofproto/ofproto-dpif-upcall.c	/^udpif_flush(struct udpif *udpif)$/;"	f
udpif_flush_all_datapaths	ofproto/ofproto-dpif-upcall.c	/^udpif_flush_all_datapaths(void)$/;"	f	file:
udpif_get_memory_usage	ofproto/ofproto-dpif-upcall.c	/^udpif_get_memory_usage(struct udpif *udpif, struct simap *usage)$/;"	f
udpif_get_n_flows	ofproto/ofproto-dpif-upcall.c	/^udpif_get_n_flows(struct udpif *udpif)$/;"	f	file:
udpif_init	ofproto/ofproto-dpif-upcall.c	/^udpif_init(void)$/;"	f
udpif_key	ofproto/ofproto-dpif-upcall.c	/^struct udpif_key {$/;"	s	file:
udpif_pause_revalidators	ofproto/ofproto-dpif-upcall.c	/^udpif_pause_revalidators(struct udpif *udpif)$/;"	f	file:
udpif_resume_revalidators	ofproto/ofproto-dpif-upcall.c	/^udpif_resume_revalidators(struct udpif *udpif)$/;"	f	file:
udpif_revalidate	ofproto/ofproto-dpif-upcall.c	/^udpif_revalidate(struct udpif *udpif)$/;"	f
udpif_revalidator	ofproto/ofproto-dpif-upcall.c	/^udpif_revalidator(void *arg)$/;"	f	file:
udpif_run	ofproto/ofproto-dpif-upcall.c	/^udpif_run(struct udpif *udpif)$/;"	f
udpif_set_threads	ofproto/ofproto-dpif-upcall.c	/^udpif_set_threads(struct udpif *udpif, size_t n_handlers,$/;"	f
udpif_start_threads	ofproto/ofproto-dpif-upcall.c	/^udpif_start_threads(struct udpif *udpif, size_t n_handlers,$/;"	f	file:
udpif_stop_threads	ofproto/ofproto-dpif-upcall.c	/^udpif_stop_threads(struct udpif *udpif)$/;"	f	file:
udpif_synchronize	ofproto/ofproto-dpif-upcall.c	/^udpif_synchronize(struct udpif *udpif)$/;"	f
udpif_to_parsed	lib/tun-metadata.c	/^udpif_to_parsed(const struct flow_tnl *flow, const struct flow_tnl *mask,$/;"	f	file:
udpif_upcall_handler	ofproto/ofproto-dpif-upcall.c	/^udpif_upcall_handler(void *arg)$/;"	f	file:
udpif_use_ufid	ofproto/ofproto-dpif-upcall.c	/^udpif_use_ufid(struct udpif *udpif)$/;"	f	file:
ufid	datapath/flow.h	/^		u32 ufid[MAX_UFID_LENGTH \/ 4];$/;"	m	union:sw_flow_id::__anon40
ufid	lib/dpif-netdev.c	/^    const ovs_u128 ufid;         \/* Unique flow identifier. *\/$/;"	m	struct:dp_netdev_flow	file:
ufid	lib/dpif-netlink.c	/^    ovs_u128 ufid;                      \/* OVS_FLOW_ATTR_FLOW_ID. *\/$/;"	m	struct:dpif_netlink_flow	file:
ufid	lib/dpif.h	/^    const ovs_u128 *ufid;           \/* Optional unique flow identifier. *\/$/;"	m	struct:dpif_flow_put
ufid	lib/dpif.h	/^    const ovs_u128 *ufid;           \/* Unique identifier of flow to delete. *\/$/;"	m	struct:dpif_flow_del
ufid	lib/dpif.h	/^    const ovs_u128 *ufid;           \/* Unique identifier of flow to get. *\/$/;"	m	struct:dpif_flow_get
ufid	lib/dpif.h	/^    ovs_u128 ufid;                \/* Unique flow identifier. *\/$/;"	m	struct:dpif_flow
ufid	lib/dpif.h	/^    ovs_u128 ufid;              \/* Unique flow identifier for 'key'. *\/$/;"	m	struct:dpif_upcall
ufid	ofproto/ofproto-dpif-upcall.c	/^    const ovs_u128 *ufid;          \/* Unique identifier for 'flow'. *\/$/;"	m	struct:upcall	file:
ufid	ofproto/ofproto-dpif-upcall.c	/^    ovs_u128 ufid;                 \/* Unique flow identifier. *\/$/;"	m	struct:udpif_key	file:
ufid	ofproto/ofproto-dpif.h	/^    bool ufid;$/;"	m	struct:dpif_backer_support
ufid_count	datapath/flow_table.h	/^	unsigned int ufid_count;$/;"	m	struct:flow_table
ufid_hash	datapath/flow_table.c	/^static u32 ufid_hash(const struct sw_flow_id *sfid)$/;"	f	file:
ufid_hash	datapath/linux/flow_table.c	/^static u32 ufid_hash(const struct sw_flow_id *sfid)$/;"	f	file:
ufid_len	datapath/flow.h	/^	u32 ufid_len;$/;"	m	struct:sw_flow_id
ufid_present	lib/dpif-netlink.c	/^    bool ufid_present;                  \/* Is there a UFID? *\/$/;"	m	struct:dpif_netlink_flow	file:
ufid_present	lib/dpif.h	/^    bool ufid_present;            \/* True if 'ufid' was provided by datapath.*\/$/;"	m	struct:dpif_flow
ufid_present	ofproto/ofproto-dpif-upcall.c	/^    bool ufid_present;             \/* True if 'ufid' is in datapath. *\/$/;"	m	struct:udpif_key	file:
ufid_table	datapath/flow.h	/^	} flow_table, ufid_table;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::__anon41
ufid_table_instance_insert	datapath/flow_table.c	/^static void ufid_table_instance_insert(struct table_instance *ti,$/;"	f	file:
ufid_table_instance_insert	datapath/linux/flow_table.c	/^static void ufid_table_instance_insert(struct table_instance *ti,$/;"	f	file:
ufid_terse	lib/dpif-netlink.c	/^    bool ufid_terse;                    \/* Skip serializing key\/mask\/acts? *\/$/;"	m	struct:dpif_netlink_flow	file:
ufid_ti	datapath/flow_table.h	/^	struct table_instance __rcu *ufid_ti;$/;"	m	struct:flow_table	typeref:struct:flow_table::__rcu
uid	lib/daemon-unix.c	/^static uid_t uid;$/;"	v	file:
uid_matches	lib/daemon-unix.c	/^uid_matches(uid_t expected, uid_t value)$/;"	f	file:
uid_verify	lib/daemon-unix.c	/^uid_verify(const uid_t real, const uid_t effective, const uid_t saved)$/;"	f	file:
uint16	datapath-windows/ovsext/Types.h	/^typedef unsigned short uint16, uint16_t, ovs_be16, u16;$/;"	t
uint16_t	datapath-windows/ovsext/Types.h	/^typedef unsigned short uint16, uint16_t, ovs_be16, u16;$/;"	t
uint32	datapath-windows/ovsext/Types.h	/^typedef unsigned int uint32, uint32_t, ovs_be32, u32;$/;"	t
uint32	lib/ofp-util.h	/^typedef struct { uint32_t uint32; } ofproto_meter_id;$/;"	m	struct:__anon133
uint32_byteswap	lib/byte-order.h	/^uint32_byteswap(uint32_t crc) {$/;"	f
uint32_t	datapath-windows/ovsext/Types.h	/^typedef unsigned int uint32, uint32_t, ovs_be32, u32;$/;"	t
uint64	datapath-windows/ovsext/Types.h	/^typedef unsigned long long uint64, uint64_t, ovs_be64, u64;$/;"	t
uint64_t	datapath-windows/ovsext/Types.h	/^typedef unsigned long long uint64, uint64_t, ovs_be64, u64;$/;"	t
uint64_t	lib/flow.h	/^BUILD_ASSERT_DECL(sizeof(struct flow) % sizeof(uint64_t) == 0);$/;"	v
uint64_t	lib/flow.h	/^BUILD_ASSERT_DECL(sizeof(struct flow_tnl) % sizeof(uint64_t) == 0);$/;"	v
uint8	datapath-windows/ovsext/Types.h	/^typedef unsigned char uint8, uint8_t, u8;$/;"	t
uint8_t	datapath-windows/ovsext/Types.h	/^typedef unsigned char uint8, uint8_t, u8;$/;"	t
ukey	ofproto/ofproto-dpif-upcall.c	/^    struct udpif_key *ukey;        \/* Revalidator flow cache. *\/$/;"	m	struct:upcall	typeref:struct:upcall::udpif_key	file:
ukey	ofproto/ofproto-dpif-upcall.c	/^    struct udpif_key *ukey;$/;"	m	struct:ukey_op	typeref:struct:ukey_op::udpif_key	file:
ukey_create_from_dpif_flow	ofproto/ofproto-dpif-upcall.c	/^ukey_create_from_dpif_flow(const struct udpif *udpif,$/;"	f	file:
ukey_create_from_upcall	ofproto/ofproto-dpif-upcall.c	/^ukey_create_from_upcall(struct upcall *upcall, struct flow_wildcards *wc)$/;"	f	file:
ukey_get_actions	ofproto/ofproto-dpif-upcall.c	/^ukey_get_actions(struct udpif_key *ukey, const struct nlattr **actions, size_t *size)$/;"	f	file:
ukey_install	ofproto/ofproto-dpif-upcall.c	/^ukey_install(struct udpif *udpif, struct udpif_key *ukey)$/;"	f	file:
ukey_lookup	ofproto/ofproto-dpif-upcall.c	/^ukey_lookup(struct udpif *udpif, const ovs_u128 *ufid)$/;"	f	file:
ukey_op	ofproto/ofproto-dpif-upcall.c	/^struct ukey_op {$/;"	s	file:
ukey_persists	ofproto/ofproto-dpif-upcall.c	/^    bool ukey_persists;            \/* Set true to keep 'ukey' beyond the$/;"	m	struct:upcall	file:
ukey_set_actions	ofproto/ofproto-dpif-upcall.c	/^ukey_set_actions(struct udpif_key *ukey, const struct ofpbuf *actions)$/;"	f	file:
ukeys	ofproto/ofproto-dpif-upcall.c	/^    struct umap *ukeys;$/;"	m	struct:udpif	typeref:struct:udpif::umap	file:
umap	ofproto/ofproto-dpif-upcall.c	/^struct umap {$/;"	s	file:
uname	python/ovstest/util.py	/^def uname():$/;"	f
uname	utilities/ovs-dev.py	/^def uname():$/;"	f
unbox_json	tests/test-ovsdb.c	/^unbox_json(struct json *json)$/;"	f	file:
unbox_json	tests/test-ovsdb.py	/^def unbox_json(json):$/;"	f
undocumented_columns	ovsdb/ovsdb-doc	/^    undocumented_columns = schema_columns - documented_columns$/;"	v
undocumented_tables	ovsdb/ovsdb-doc	/^    undocumented_tables = schema_tables - documented_tables$/;"	v
unflushed	ovsdb/jsonrpc-server.c	/^    uint64_t unflushed;         \/* The first transaction that has not been$/;"	m	struct:ovsdb_jsonrpc_monitor	file:
unicastIPNotificationHandle	datapath-windows/ovsext/IpHelper.c	/^static HANDLE               unicastIPNotificationHandle;$/;"	v	file:
uninstall_mark_rule	debian/openvswitch-ipsec.init	/^uninstall_mark_rule() {$/;"	f
unique_hash	tests/test-hindex.c	/^unique_hash(int value)$/;"	f	file:
unittest	utilities/ovs-dpctl-top	/^import unittest$/;"	i
unix_epoch	lib/timeval.c	/^const static unsigned long long unix_epoch = 116444736000000000;$/;"	v	file:
unix_nsecs	lib/netflow.h	/^    ovs_be32 unix_nsecs;           \/* Number of residual nanoseconds$/;"	m	struct:netflow_v5_header
unix_open	lib/stream-unix.c	/^unix_open(const char *name, char *suffix, struct stream **streamp,$/;"	f	file:
unix_secs	lib/netflow.h	/^    ovs_be32 unix_secs;            \/* Number of seconds since Unix epoch. *\/$/;"	m	struct:netflow_v5_header
unix_stream_class	lib/stream-unix.c	/^const struct stream_class unix_stream_class = {$/;"	v	typeref:struct:stream_class
unix_vconn_class	lib/vconn-stream.c	/^const struct vconn_class unix_vconn_class = STREAM_INIT("unix");$/;"	v	typeref:struct:vconn_class
unixctl	debian/ovs-monitor-ipsec	/^import ovs.unixctl$/;"	i
unixctl	debian/ovs-monitor-ipsec	/^import ovs.unixctl.server$/;"	i
unixctl	lib/unixctl.c	/^VLOG_DEFINE_THIS_MODULE(unixctl);$/;"	v
unixctl	python/ovs/unixctl/server.py	/^import ovs.unixctl$/;"	i
unixctl	python/ovs/vlog.py	/^import ovs.unixctl$/;"	i
unixctl	tests/appctl.py	/^import ovs.unixctl$/;"	i
unixctl	tests/appctl.py	/^import ovs.unixctl.client$/;"	i
unixctl	tests/test-unixctl.py	/^import ovs.unixctl$/;"	i
unixctl	tests/test-unixctl.py	/^import ovs.unixctl.server$/;"	i
unixctl	vtep/ovs-vtep	/^import ovs.unixctl.server$/;"	i
unixctl	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.unixctl$/;"	i
unixctl	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^import ovs.unixctl.server$/;"	i
unixctl_block	tests/test-unixctl.py	/^def unixctl_block(conn, unused_argv, unused_aux):$/;"	f
unixctl_cb_func	lib/unixctl.h	/^typedef void unixctl_cb_func(struct unixctl_conn *,$/;"	t
unixctl_client_create	lib/unixctl.c	/^unixctl_client_create(const char *path, struct jsonrpc **client)$/;"	f
unixctl_client_transact	lib/unixctl.c	/^unixctl_client_transact(struct jsonrpc *client, const char *command, int argc,$/;"	f
unixctl_command	lib/unixctl.c	/^struct unixctl_command {$/;"	s	file:
unixctl_command_register	lib/unixctl.c	/^unixctl_command_register(const char *name, const char *usage,$/;"	f
unixctl_command_reply	lib/unixctl.c	/^unixctl_command_reply(struct unixctl_conn *conn, const char *result)$/;"	f
unixctl_command_reply__	lib/unixctl.c	/^unixctl_command_reply__(struct unixctl_conn *conn,$/;"	f	file:
unixctl_command_reply_error	lib/unixctl.c	/^unixctl_command_reply_error(struct unixctl_conn *conn, const char *error)$/;"	f
unixctl_conn	lib/unixctl.c	/^struct unixctl_conn {$/;"	s	file:
unixctl_echo	tests/test-unixctl.py	/^def unixctl_echo(conn, argv, aux):$/;"	f
unixctl_echo_error	tests/test-unixctl.py	/^def unixctl_echo_error(conn, argv, aux):$/;"	f
unixctl_exit	debian/ovs-monitor-ipsec	/^def unixctl_exit(conn, unused_argv, unused_aux):$/;"	f
unixctl_exit	tests/test-unixctl.py	/^def unixctl_exit(conn, unused_argv, aux):$/;"	f
unixctl_exit	vtep/ovs-vtep	/^def unixctl_exit(conn, unused_argv, unused_aux):$/;"	f
unixctl_exit	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def unixctl_exit(conn, unused_argv, unused_aux):$/;"	f
unixctl_flush_cache	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def unixctl_flush_cache(conn, unused_argv, unused_aux):$/;"	f
unixctl_list_commands	lib/unixctl.c	/^unixctl_list_commands(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
unixctl_log	tests/test-unixctl.py	/^def unixctl_log(conn, argv, unused_aux):$/;"	f
unixctl_path	utilities/ovs-ofctl.c	/^static char *unixctl_path;$/;"	v	file:
unixctl_path	utilities/ovs-testcontroller.c	/^static char *unixctl_path = NULL;$/;"	v	file:
unixctl_received	lib/unixctl.c	/^COVERAGE_DEFINE(unixctl_received);$/;"	v
unixctl_replied	lib/unixctl.c	/^COVERAGE_DEFINE(unixctl_replied);$/;"	v
unixctl_server	lib/unixctl.c	/^struct unixctl_server {$/;"	s	file:
unixctl_server_create	lib/unixctl.c	/^unixctl_server_create(const char *path, struct unixctl_server **serverp)$/;"	f
unixctl_server_destroy	lib/unixctl.c	/^unixctl_server_destroy(struct unixctl_server *server)$/;"	f
unixctl_server_run	lib/unixctl.c	/^unixctl_server_run(struct unixctl_server *server)$/;"	f
unixctl_server_wait	lib/unixctl.c	/^unixctl_server_wait(struct unixctl_server *server)$/;"	f
unixctl_version	lib/unixctl.c	/^unixctl_version(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
unknownRx	lib/sflow.h	/^    uint32_t unknownRx;$/;"	m	struct:_SFLLACP_counters
unknown_to_zero	lib/ofp-util.c	/^unknown_to_zero(uint64_t count)$/;"	f	file:
unlimited_data	utilities/bugtool/ovs-bugtool	/^            unlimited_data = True$/;"	v
unlimited_data	utilities/bugtool/ovs-bugtool	/^unlimited_data = False$/;"	v
unlink_file_now	python/ovs/fatal_signal.py	/^def unlink_file_now(file):$/;"	f
unlink_files	lib/fatal-signal.c	/^unlink_files(void *aux OVS_UNUSED)$/;"	f	file:
unlink_path	lib/stream-fd.c	/^    char *unlink_path;$/;"	m	struct:fd_pstream	file:
unlink_pidfile	lib/daemon-windows.c	/^unlink_pidfile(void)$/;"	f	file:
unmasked_key	datapath/flow.h	/^		struct sw_flow_key *unmasked_key;$/;"	m	union:sw_flow_id::__anon40	typeref:struct:sw_flow_id::__anon40::sw_flow_key
unparse	lib/ovsdb-idl-provider.h	/^    void (*unparse)(struct ovsdb_idl_row *);$/;"	m	struct:ovsdb_idl_column
unregister_pernet_device	datapath/linux/compat/include/net/net_namespace.h	18;"	d
unsupported_nesting	lib/ofp-actions.c	/^unsupported_nesting(enum ofpact_type action, enum ofpact_type outer_action)$/;"	f	file:
unused	lib/odp-util.h	/^        uint16_t unused;$/;"	m	struct:user_action_cookie::__anon124
unwrap_json	lib/ovsdb-data.c	/^unwrap_json(const struct json *json, const char *name,$/;"	f	file:
unwrap_json	python/ovs/db/parser.py	/^def unwrap_json(json, name, types, desc):$/;"	f
up	lib/dpif-netdev.c	/^    struct dpif_flow_dump up;$/;"	m	struct:dpif_netdev_flow_dump	typeref:struct:dpif_netdev_flow_dump::dpif_flow_dump	file:
up	lib/dpif-netdev.c	/^    struct dpif_flow_dump_thread up;$/;"	m	struct:dpif_netdev_flow_dump_thread	typeref:struct:dpif_netdev_flow_dump_thread::dpif_flow_dump_thread	file:
up	lib/dpif-netlink.c	/^    struct dpif_flow_dump up;$/;"	m	struct:dpif_netlink_flow_dump	typeref:struct:dpif_netlink_flow_dump::dpif_flow_dump	file:
up	lib/dpif-netlink.c	/^    struct dpif_flow_dump_thread up;$/;"	m	struct:dpif_netlink_flow_dump_thread	typeref:struct:dpif_netlink_flow_dump_thread::dpif_flow_dump_thread	file:
up	lib/netdev-bsd.c	/^    struct netdev up;$/;"	m	struct:netdev_bsd	typeref:struct:netdev_bsd::netdev	file:
up	lib/netdev-bsd.c	/^    struct netdev_rxq up;$/;"	m	struct:netdev_rxq_bsd	typeref:struct:netdev_rxq_bsd::netdev_rxq	file:
up	lib/netdev-dpdk.c	/^    struct netdev up;$/;"	m	struct:netdev_dpdk	typeref:struct:netdev_dpdk::netdev	file:
up	lib/netdev-dpdk.c	/^    struct netdev_rxq up;$/;"	m	struct:netdev_rxq_dpdk	typeref:struct:netdev_rxq_dpdk::netdev_rxq	file:
up	lib/netdev-dummy.c	/^    struct netdev up;$/;"	m	struct:netdev_dummy	typeref:struct:netdev_dummy::netdev	file:
up	lib/netdev-dummy.c	/^    struct netdev_rxq up;$/;"	m	struct:netdev_rxq_dummy	typeref:struct:netdev_rxq_dummy::netdev_rxq	file:
up	lib/netdev-linux.c	/^    struct netdev up;$/;"	m	struct:netdev_linux	typeref:struct:netdev_linux::netdev	file:
up	lib/netdev-linux.c	/^    struct netdev_rxq up;$/;"	m	struct:netdev_rxq_linux	typeref:struct:netdev_rxq_linux::netdev_rxq	file:
up	lib/netdev-vport.c	/^    struct netdev up;$/;"	m	struct:netdev_vport	typeref:struct:netdev_vport::netdev	file:
up	lib/netdev-windows.c	/^    struct netdev up;$/;"	m	struct:netdev_windows	typeref:struct:netdev_windows::netdev	file:
up	ofproto/connmgr.h	/^    struct ofputil_packet_in up;$/;"	m	struct:ofproto_packet_in	typeref:struct:ofproto_packet_in::ofputil_packet_in
up	ofproto/ofproto-dpif.c	/^    struct ofgroup up;$/;"	m	struct:group_dpif	typeref:struct:group_dpif::ofgroup	file:
up	ofproto/ofproto-dpif.c	/^    struct ofport up;$/;"	m	struct:ofport_dpif	typeref:struct:ofport_dpif::ofport	file:
up	ofproto/ofproto-dpif.c	/^    struct ofproto up;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::ofproto	file:
up	ofproto/ofproto-dpif.c	/^    struct rule up;$/;"	m	struct:rule_dpif	typeref:struct:rule_dpif::rule	file:
up	ovn/lib/ovn-nb-idl.h	/^	bool *up;$/;"	m	struct:nbrec_logical_port
up	ovsdb/jsonrpc-server.c	/^    struct ovsdb_server up;$/;"	m	struct:ovsdb_jsonrpc_server	typeref:struct:ovsdb_jsonrpc_server::ovsdb_server	file:
up	ovsdb/jsonrpc-server.c	/^    struct ovsdb_session up;$/;"	m	struct:ovsdb_jsonrpc_session	typeref:struct:ovsdb_jsonrpc_session::ovsdb_session	file:
up_delay	ofproto/bond.h	/^    int up_delay;               \/* ms before enabling an up slave. *\/$/;"	m	struct:bond_settings
upcall	ofproto/ofproto-dpif-upcall.c	/^struct upcall {$/;"	s	file:
upcallPid	datapath-windows/ovsext/User.h	/^    UINT32  upcallPid;$/;"	m	struct:_OVS_PACKET_QUEUE_ELEM
upcallPid	datapath-windows/ovsext/Vport.h	/^    UINT32                 upcallPid; \/* netlink upcall port id *\/$/;"	m	struct:_OVS_VPORT_ENTRY
upcall_aux	lib/dpif-netdev.c	/^    void *upcall_aux;$/;"	m	struct:dp_netdev	file:
upcall_callback	lib/dpif.h	/^typedef int upcall_callback(const struct dp_packet *packet,$/;"	t
upcall_cb	lib/dpif-netdev.c	/^    upcall_callback *upcall_cb;  \/* Callback function for executing upcalls. *\/$/;"	m	struct:dp_netdev	file:
upcall_cb	ofproto/ofproto-dpif-upcall.c	/^static upcall_callback upcall_cb;$/;"	v	file:
upcall_cb	ofproto/ofproto-dpif-upcall.c	/^upcall_cb(const struct dp_packet *packet, const struct flow *flow, ovs_u128 *ufid,$/;"	f	file:
upcall_lock	lib/dpif-netlink.c	/^    struct fat_rwlock upcall_lock;$/;"	m	struct:dpif_netlink	typeref:struct:dpif_netlink::fat_rwlock	file:
upcall_msg_size	datapath/datapath.c	/^static size_t upcall_msg_size(const struct dp_upcall_info *upcall_info,$/;"	f	file:
upcall_msg_size	datapath/linux/datapath.c	/^static size_t upcall_msg_size(const struct dp_upcall_info *upcall_info,$/;"	f	file:
upcall_pid	lib/dpif-netlink.c	/^    const uint32_t *upcall_pid;        \/* OVS_DP_ATTR_UPCALL_PID. *\/$/;"	m	struct:dpif_netlink_dp	file:
upcall_pids	lib/dpif-netlink.h	/^    const uint32_t *upcall_pids;           \/* OVS_VPORT_ATTR_UPCALL_PID. *\/$/;"	m	struct:dpif_netlink_vport
upcall_portids	datapath/vport.h	/^	struct nlattr *upcall_portids;$/;"	m	struct:vport_parms	typeref:struct:vport_parms::nlattr
upcall_portids	datapath/vport.h	/^	struct vport_portids __rcu *upcall_portids;$/;"	m	struct:vport	typeref:struct:vport::__rcu
upcall_receive	ofproto/ofproto-dpif-upcall.c	/^upcall_receive(struct upcall *upcall, const struct dpif_backer *backer,$/;"	f	file:
upcall_rl	lib/dpif-netdev.c	/^static struct vlog_rate_limit upcall_rl = VLOG_RATE_LIMIT_INIT(600, 600);$/;"	v	typeref:struct:vlog_rate_limit	file:
upcall_rwlock	lib/dpif-netdev.c	/^    struct fat_rwlock upcall_rwlock;$/;"	m	struct:dp_netdev	typeref:struct:dp_netdev::fat_rwlock	file:
upcall_type	ofproto/ofproto-dpif-upcall.c	/^enum upcall_type {$/;"	g	file:
upcall_ukey_contention	ofproto/ofproto-dpif-upcall.c	/^COVERAGE_DEFINE(upcall_ukey_contention);$/;"	v
upcall_uninit	ofproto/ofproto-dpif-upcall.c	/^upcall_uninit(struct upcall *upcall)$/;"	f	file:
upcall_unixctl_disable_megaflows	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_disable_megaflows(struct unixctl_conn *conn,$/;"	f	file:
upcall_unixctl_disable_ufid	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_disable_ufid(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
upcall_unixctl_dump_wait	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_dump_wait(struct unixctl_conn *conn,$/;"	f	file:
upcall_unixctl_enable_megaflows	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_enable_megaflows(struct unixctl_conn *conn,$/;"	f	file:
upcall_unixctl_enable_ufid	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_enable_ufid(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
upcall_unixctl_purge	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_purge(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
upcall_unixctl_set_flow_limit	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_set_flow_limit(struct unixctl_conn *conn,$/;"	f	file:
upcall_unixctl_show	ofproto/ofproto-dpif-upcall.c	/^upcall_unixctl_show(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
upcall_xlate	ofproto/ofproto-dpif-upcall.c	/^upcall_xlate(struct udpif *udpif, struct upcall *upcall,$/;"	f	file:
update	lib/lacp.c	/^    bool update;             \/* True if lacp_update() needs to be called. *\/$/;"	m	struct:lacp	file:
update	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def update(session, args):$/;"	f
update_cap	utilities/bugtool/ovs-bugtool	/^def update_cap(cap, k, v):$/;"	f
update_cap_size	utilities/bugtool/ovs-bugtool	/^def update_cap_size(cap, size):$/;"	f
update_capabilities	utilities/bugtool/ovs-bugtool	/^def update_capabilities():$/;"	f
update_ct_zones	ovn/controller/binding.c	/^update_ct_zones(struct sset *lports, struct simap *ct_zones,$/;"	f	file:
update_fail_mode	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def update_fail_mode(row):$/;"	f
update_flags	lib/netdev-provider.h	/^    int (*update_flags)(struct netdev *netdev, enum netdev_flags off,$/;"	m	struct:netdev_class
update_flood	vtep/ovs-vtep	/^    def update_flood(self):$/;"	m	class:Logical_Switch
update_headers	datapath/linux/compat/stt.c	/^static void update_headers(struct sk_buff *skb, bool head,$/;"	f	file:
update_headers	datapath/linux/stt.c	/^static void update_headers(struct sk_buff *skb, bool head,$/;"	f	file:
update_in_band_mgmt	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^def update_in_band_mgmt(row):$/;"	f
update_in_band_remotes	ofproto/connmgr.c	/^update_in_band_remotes(struct connmgr *mgr)$/;"	f	file:
update_ip_l4_checksum	datapath/actions.c	/^static void update_ip_l4_checksum(struct sk_buff *skb, struct iphdr *nh,$/;"	f	file:
update_ip_l4_checksum	datapath/linux/actions.c	/^static void update_ip_l4_checksum(struct sk_buff *skb, struct iphdr *nh,$/;"	f	file:
update_ipsec	debian/ovs-monitor-ipsec	/^def update_ipsec(ipsec, interfaces, new_interfaces):$/;"	f
update_ipv6_checksum	datapath/actions.c	/^static void update_ipv6_checksum(struct sk_buff *skb, u8 l4_proto,$/;"	f	file:
update_ipv6_checksum	datapath/linux/actions.c	/^static void update_ipv6_checksum(struct sk_buff *skb, u8 l4_proto,$/;"	f	file:
update_learning_table	ofproto/ofproto-dpif-xlate.c	/^update_learning_table(const struct xbridge *xbridge,$/;"	f	file:
update_local_macs	vtep/ovs-vtep	/^    def update_local_macs(self):$/;"	m	class:Logical_Switch
update_mapping_on_lldp	lib/ovs-lldp.c	/^update_mapping_on_lldp(struct lldp *lldp, struct lldpd_hardware *hardware,$/;"	f	file:
update_mcast_snooping_table	ofproto/ofproto-dpif-xlate.c	/^update_mcast_snooping_table(const struct xbridge *xbridge,$/;"	f	file:
update_monitor_row_data	ovsdb/monitor.c	/^update_monitor_row_data(const struct ovsdb_monitor_table *mt,$/;"	f	file:
update_mtu	ofproto/ofproto.c	/^update_mtu(struct ofproto *p, struct ofport *port)$/;"	f	file:
update_pb_chassis	ovn/controller-vtep/binding.c	/^update_pb_chassis(const struct sbrec_port_binding *port_binding_rec,$/;"	f	file:
update_port	ofproto/ofproto.c	/^update_port(struct ofproto *ofproto, const char *name)$/;"	f	file:
update_port_config	ofproto/ofproto.c	/^update_port_config(struct ofconn *ofconn, struct ofport *port,$/;"	f	file:
update_range	datapath/flow_netlink.c	/^static void update_range(struct sw_flow_match *match,$/;"	f	file:
update_range	datapath/linux/flow_netlink.c	/^static void update_range(struct sw_flow_match *match,$/;"	f	file:
update_ref_counts	ovsdb/transaction.c	/^update_ref_counts(struct ovsdb_txn *txn)$/;"	f	file:
update_remote_macs	vtep/ovs-vtep	/^    def update_remote_macs(self):$/;"	m	class:Logical_Switch
update_remote_row	ovsdb/ovsdb-server.c	/^update_remote_row(const struct ovsdb_row *row, struct ovsdb_txn *txn,$/;"	f	file:
update_remote_rows	ovsdb/ovsdb-server.c	/^update_remote_rows(const struct shash *all_dbs,$/;"	f	file:
update_remote_status	ovsdb/ovsdb-server.c	/^update_remote_status(const struct ovsdb_jsonrpc_server *jsonrpc,$/;"	f	file:
update_rhel_spec	Makefile	/^update_rhel_spec = \\$/;"	m
update_rhel_spec	rhel/automake.mk	/^update_rhel_spec = \\$/;"	m
update_row_cb	ovsdb/execution.c	/^update_row_cb(const struct ovsdb_row *row, void *ur_)$/;"	f	file:
update_row_cbdata	ovsdb/execution.c	/^struct update_row_cbdata {$/;"	s	file:
update_row_ref_count	ovsdb/transaction.c	/^update_row_ref_count(struct ovsdb_txn *txn, struct ovsdb_txn_row *r)$/;"	f	file:
update_rstp_port_state	ofproto/ofproto-dpif.c	/^update_rstp_port_state(struct ofport_dpif *ofport)$/;"	f	file:
update_rules	ofproto/in-band.c	/^update_rules(struct in_band *ib)$/;"	f	file:
update_ssl_config	lib/stream-ssl.c	/^update_ssl_config(struct ssl_config_file *config, const char *file_name)$/;"	f	file:
update_stats	vtep/ovs-vtep	/^    def update_stats(self):$/;"	m	class:Logical_Switch
update_stp_port_state	ofproto/ofproto-dpif.c	/^update_stp_port_state(struct ofport_dpif *ofport)$/;"	f	file:
update_version	ovsdb/transaction.c	/^update_version(struct ovsdb_txn *txn OVS_UNUSED, struct ovsdb_txn_row *txn_row)$/;"	f	file:
update_vtep_logical_switches	ovn/controller-vtep/gateway.c	/^update_vtep_logical_switches(struct controller_vtep_ctx *ctx)$/;"	f	file:
updelay	ofproto/bond.c	/^    int updelay, downdelay;     \/* Delay before slave goes up\/down, in ms. *\/$/;"	m	struct:bond	file:
upgrade_ovn_dbs	ovn/utilities/ovn-ctl	/^upgrade_ovn_dbs () {$/;"	f
uptime	lib/sflow.h	/^    u_int32_t uptime;                \/* Current time (in milliseconds since device$/;"	m	struct:_SFLSample_datagram_hdr
uptime	ofproto/ofproto.h	/^    int uptime;$/;"	m	struct:ofproto_port_rstp_status
uptime	vswitchd/system-stats.c	/^    long long int uptime;       \/* ms since last (re)started by monitor. *\/$/;"	m	struct:process_info	file:
uptime	vswitchd/system-stats.c	/^    long long int uptime;       \/* ms since started. *\/$/;"	m	struct:raw_process_info	file:
uptime_mS	tests/test-sflow.c	/^    uint32_t uptime_mS;$/;"	m	struct:sflow_xdr	file:
urandom	lib/entropy.c	/^static const char urandom[] = "\/dev\/urandom";$/;"	v	file:
urg	datapath-windows/ovsext/NetProto.h	/^             urg:1,$/;"	m	struct:TCPHdr
urg_ptr	datapath-windows/ovsext/NetProto.h	/^   UINT16    urg_ptr;$/;"	m	struct:TCPHdr
url	lib/sflow.h	/^    SFLExtended_url url;$/;"	m	union:_SFLFlow_type
url	lib/sflow.h	/^    SFLString url;         \/* URL associated with the packet flow.$/;"	m	struct:_SFLExtended_url
url	python/setup.py	/^    url='http:\/\/www.openvswitch.org\/',$/;"	v
urlEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t urlEncodingLength(SFLExtended_url *url) {$/;"	f	file:
urllib	utilities/bugtool/ovs-bugtool	/^import urllib$/;"	i
us_vhost_path	utilities/qemu-wrap.py	/^us_vhost_path = "\/dev\/usvhost-1"$/;"	v
usable_protocols	lib/learning-switch.c	/^    enum ofputil_protocol usable_protocols;$/;"	m	struct:lswitch	typeref:enum:lswitch::ofputil_protocol	file:
usable_protocols	lib/learning-switch.h	/^    enum ofputil_protocol usable_protocols;$/;"	m	struct:lswitch_config	typeref:enum:lswitch_config::ofputil_protocol
usable_protocols	utilities/ovs-testcontroller.c	/^static enum ofputil_protocol usable_protocols;$/;"	v	typeref:enum:ofputil_protocol	file:
usable_protocols_bitwise	lib/meta-flow.h	/^    uint32_t usable_protocols_bitwise; \/* Matching arbitrary bits in field. *\/$/;"	m	struct:mf_field
usable_protocols_cidr	lib/meta-flow.h	/^    uint32_t usable_protocols_cidr;    \/* Matching a CIDR mask in field. *\/$/;"	m	struct:mf_field
usable_protocols_exact	lib/meta-flow.h	/^    uint32_t usable_protocols_exact;   \/* Matching or setting whole field. *\/$/;"	m	struct:mf_field
usage	build-aux/extract-ofp-actions	/^def usage():$/;"	f
usage	build-aux/extract-ofp-errors	/^def usage():$/;"	f
usage	build-aux/extract-ofp-fields	/^def usage():$/;"	f
usage	build-aux/extract-ofp-msgs	/^def usage():$/;"	f
usage	build-aux/xml2nroff	/^def usage():$/;"	f
usage	lib/command-line.h	/^    const char *usage;$/;"	m	struct:ovs_cmdl_command
usage	lib/dpctl.c	/^    const char *usage;$/;"	m	struct:dpctl_command	file:
usage	lib/dpctl.h	/^    void (*usage)(void *aux);$/;"	m	struct:dpctl_params
usage	lib/unixctl.c	/^    const char *usage;$/;"	m	struct:unixctl_command	file:
usage	ofproto/ipfix-gen-entities	/^def usage(name):$/;"	f
usage	ovn/controller-vtep/ovn-controller-vtep.c	/^usage(void)$/;"	f	file:
usage	ovn/controller/ovn-controller.c	/^usage(void)$/;"	f	file:
usage	ovn/northd/ovn-northd.c	/^usage(void)$/;"	f	file:
usage	ovn/utilities/ovn-ctl	/^usage () {$/;"	f
usage	ovn/utilities/ovn-nbctl.c	/^usage(void)$/;"	f	file:
usage	ovn/utilities/ovn-sbctl.c	/^usage(void)$/;"	f	file:
usage	ovsdb/ovsdb-client.c	/^usage(void)$/;"	f	file:
usage	ovsdb/ovsdb-doc	/^def usage():$/;"	f
usage	ovsdb/ovsdb-dot	/^def usage():$/;"	f
usage	ovsdb/ovsdb-idlc	/^def usage():$/;"	f
usage	ovsdb/ovsdb-server.c	/^usage(void)$/;"	f	file:
usage	ovsdb/ovsdb-tool.c	/^usage(void)$/;"	f	file:
usage	python/ovs/daemon.py	/^def usage():$/;"	f
usage	python/ovs/stream.py	/^def usage(name):$/;"	f
usage	tests/dpdk/ring_client.c	/^usage(const char *progname)$/;"	f	file:
usage	tests/test-jsonrpc.c	/^usage(void)$/;"	f	file:
usage	tests/test-lib.c	/^usage(void)$/;"	f	file:
usage	tests/test-netflow.c	/^usage(void)$/;"	f	file:
usage	tests/test-ovn.c	/^usage(void)$/;"	f	file:
usage	tests/test-ovsdb.c	/^usage(void)$/;"	f	file:
usage	tests/test-ovsdb.py	/^def usage():$/;"	f
usage	tests/test-sflow.c	/^usage(void)$/;"	f	file:
usage	utilities/ovs-appctl.c	/^usage(void)$/;"	f	file:
usage	utilities/ovs-benchmark.c	/^usage(void)$/;"	f	file:
usage	utilities/ovs-ctl	/^usage () {$/;"	f
usage	utilities/ovs-ctl.in	/^usage () {$/;"	f
usage	utilities/ovs-docker	/^usage() {$/;"	f
usage	utilities/ovs-dpctl.c	/^usage(void *userdata OVS_UNUSED)$/;"	f	file:
usage	utilities/ovs-ofctl.c	/^usage(void)$/;"	f	file:
usage	utilities/ovs-pcap	/^def usage():$/;"	f
usage	utilities/ovs-save	/^usage() {$/;"	f
usage	utilities/ovs-tcpundump	/^def usage():$/;"	f
usage	utilities/ovs-testcontroller.c	/^usage(void)$/;"	f	file:
usage	utilities/ovs-vlan-bug-workaround.c	/^usage(void)$/;"	f	file:
usage	utilities/ovs-vlan-test	/^def usage():$/;"	f
usage	utilities/ovs-vsctl.c	/^usage(void)$/;"	f	file:
usage	vswitchd/ovs-vswitchd.c	/^usage(void)$/;"	f	file:
usage	vtep/vtep-ctl.c	/^usage(void)$/;"	f	file:
usage_to_timeval	lib/getrusage-windows.c	/^usage_to_timeval(FILETIME *ft, struct timeval *tv)$/;"	f	file:
use_huge_all	utilities/qemu-wrap.py	/^use_huge_all = 0$/;"	v
use_priority_tags	ofproto/ofproto-dpif-xlate.c	/^    bool use_priority_tags;        \/* Use 802.1p tag for frames in VLAN 0? *\/$/;"	m	struct:xbundle	file:
use_priority_tags	ofproto/ofproto-dpif.c	/^    bool use_priority_tags;     \/* Use 802.1p tag for frames in VLAN 0? *\/$/;"	m	struct:ofbundle	file:
use_priority_tags	ofproto/ofproto.h	/^    bool use_priority_tags;     \/* Use 802.1p tag for frames in VLAN 0? *\/$/;"	m	struct:ofproto_bundle_settings
use_udp6_rx_checksums	datapath/linux/compat/include/net/udp_tunnel.h	/^				use_udp6_rx_checksums:1;$/;"	m	struct:udp_port_cfg
use_udp6_tx_checksums	datapath/linux/compat/include/net/udp_tunnel.h	/^				use_udp6_tx_checksums:1,$/;"	m	struct:udp_port_cfg
use_udp_checksums	datapath/linux/compat/include/net/udp_tunnel.h	/^	unsigned int		use_udp_checksums:1,$/;"	m	struct:udp_port_cfg
use_wc	tests/test-classifier.c	/^    bool use_wc;$/;"	m	struct:cls_aux	file:
used	datapath-windows/ovsext/DpInternal.h	/^    uint32_t used;$/;"	m	struct:OvsFlowStats
used	datapath-windows/ovsext/Flow.h	/^    UINT64 used;$/;"	m	struct:_OvsFlow
used	datapath/flow.h	/^	unsigned long used;		\/* Last used time (in jiffies). *\/$/;"	m	struct:flow_stats
used	lib/dpif-netdev.c	/^    atomic_llong used;             \/* Last used time, in monotonic msecs. *\/$/;"	m	struct:dp_netdev_flow_stats	file:
used	lib/dpif-netlink.c	/^    const ovs_32aligned_u64 *used;      \/* OVS_FLOW_ATTR_USED. *\/$/;"	m	struct:dpif_netlink_flow	file:
used	lib/dpif.h	/^    long long int used;$/;"	m	struct:dpif_flow_stats
used	lib/meta-flow.h	/^    struct mf_bitmap used;$/;"	m	struct:field_array	typeref:struct:field_array::mf_bitmap
used	lib/ovsdb-parser.h	/^    struct sset used;           \/* Already-parsed names from 'object'. *\/$/;"	m	struct:ovsdb_parser	typeref:struct:ovsdb_parser::sset
used	ofproto/netflow.c	/^    long long int used;           \/* Last-used time (0 if never used). *\/$/;"	m	struct:netflow_flow	file:
used_time	lib/netflow.h	/^    ovs_be32 used_time;            \/* Value of sysuptime on last packet. *\/$/;"	m	struct:netflow_v5_record
user	lib/daemon-unix.c	/^static char *user = NULL;$/;"	v	file:
user	lib/sflow.h	/^    SFLExtended_user user;$/;"	m	union:_SFLFlow_type
userActionsLen	datapath-windows/ovsext/Flow.h	/^    UINT32 userActionsLen;   \/\/ used for flow query$/;"	m	struct:_OvsFlow
userDataLen	datapath-windows/ovsext/DpInternal.h	/^    uint32_t userDataLen;$/;"	m	struct:_OVS_PACKET_INFO
userEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t userEncodingLength(SFLExtended_user *user) {$/;"	f	file:
user_action_cookie	lib/odp-util.h	/^union user_action_cookie {$/;"	u
user_action_cookie_type	lib/odp-util.h	/^enum user_action_cookie_type {$/;"	g
user_features	datapath/datapath.h	/^	u32 user_features;$/;"	m	struct:datapath
user_features	lib/dpif-netlink.c	/^    uint32_t user_features;            \/* OVS_DP_ATTR_USER_FEATURES *\/$/;"	m	struct:dpif_netlink_dp	file:
user_port_id	lib/netdev-dpdk.c	/^    int user_port_id; \/* User given port no, parsed from port name *\/$/;"	m	struct:dpdk_ring	file:
user_time	lib/sflow.h	/^    uint32_t user_time;   \/* in milliseconds *\/$/;"	m	struct:_SFLAPPResources_counters
userdata	datapath/datapath.h	/^	const struct nlattr *userdata;$/;"	m	struct:dp_upcall_info	typeref:struct:dp_upcall_info::nlattr
userdata	lib/dpif.h	/^    struct nlattr *userdata;    \/* Argument to OVS_ACTION_ATTR_USERSPACE. *\/$/;"	m	struct:dpif_upcall	typeref:struct:dpif_upcall::nlattr
userdata	ofproto/ofproto-dpif-upcall.c	/^    const struct nlattr *userdata; \/* Userdata for DPIF_UC_ACTION Upcalls. *\/$/;"	m	struct:upcall	typeref:struct:upcall::nlattr	file:
utf16_decode_surrogate_pair	lib/unicode.c	/^utf16_decode_surrogate_pair(int leading, int trailing)$/;"	f
utf8_length	lib/unicode.c	/^utf8_length(const char *s_)$/;"	f
utf8_sequence	lib/unicode.c	/^struct utf8_sequence {$/;"	s	file:
utf8_validate	lib/unicode.c	/^utf8_validate(const char *s_, size_t *lengthp)$/;"	f
util	debian/ovs-monitor-ipsec	/^import ovs.util$/;"	i
util	lib/util.c	/^VLOG_DEFINE_THIS_MODULE(util);$/;"	v
util	python/ovs/daemon.py	/^import ovs.util$/;"	i
util	python/ovs/jsonrpc.py	/^import ovs.util$/;"	i
util	python/ovs/reconnect.py	/^import ovs.util$/;"	i
util	python/ovs/unixctl/__init__.py	/^import ovs.util$/;"	i
util	python/ovs/unixctl/client.py	/^import ovs.util$/;"	i
util	python/ovs/unixctl/server.py	/^import ovs.util$/;"	i
util	python/ovs/vlog.py	/^import ovs.util$/;"	i
util	python/ovstest/rpcserver.py	/^import util$/;"	i
util	python/ovstest/tests.py	/^import ovstest.util as util$/;"	i
util	python/ovstest/vswitch.py	/^import util$/;"	i
util	tests/appctl.py	/^import ovs.util$/;"	i
util	tests/test-daemon.py	/^import ovs.util$/;"	i
util	tests/test-ovsdb.py	/^import ovs.util$/;"	i
util	utilities/ovs-l3ping	/^import ovstest.util as util$/;"	i
util	utilities/ovs-test	/^import ovstest.util as util$/;"	i
util	vtep/ovs-vtep	/^import ovs.util$/;"	i
util_xalloc	lib/util.c	/^COVERAGE_DEFINE(util_xalloc);$/;"	v
utilities_nlmon_DEPENDENCIES	Makefile	/^utilities_nlmon_DEPENDENCIES = lib\/libopenvswitch.la$/;"	m
utilities_nlmon_LDADD	Makefile	/^utilities_nlmon_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_nlmon_LDADD	utilities/automake.mk	/^utilities_nlmon_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_nlmon_OBJECTS	Makefile	/^utilities_nlmon_OBJECTS = $(am_utilities_nlmon_OBJECTS)$/;"	m
utilities_nlmon_SOURCES	Makefile	/^utilities_nlmon_SOURCES = utilities\/nlmon.c$/;"	m
utilities_nlmon_SOURCES	utilities/automake.mk	/^utilities_nlmon_SOURCES = utilities\/nlmon.c$/;"	m
utilities_ovs_appctl_DEPENDENCIES	Makefile	/^utilities_ovs_appctl_DEPENDENCIES = lib\/libopenvswitch.la$/;"	m
utilities_ovs_appctl_LDADD	Makefile	/^utilities_ovs_appctl_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_appctl_LDADD	utilities/automake.mk	/^utilities_ovs_appctl_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_appctl_OBJECTS	Makefile	/^utilities_ovs_appctl_OBJECTS = $(am_utilities_ovs_appctl_OBJECTS)$/;"	m
utilities_ovs_appctl_SOURCES	Makefile	/^utilities_ovs_appctl_SOURCES = utilities\/ovs-appctl.c$/;"	m
utilities_ovs_appctl_SOURCES	utilities/automake.mk	/^utilities_ovs_appctl_SOURCES = utilities\/ovs-appctl.c$/;"	m
utilities_ovs_benchmark_DEPENDENCIES	Makefile	/^utilities_ovs_benchmark_DEPENDENCIES = lib\/libopenvswitch.la$/;"	m
utilities_ovs_benchmark_LDADD	Makefile	/^utilities_ovs_benchmark_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_benchmark_LDADD	utilities/automake.mk	/^utilities_ovs_benchmark_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_benchmark_OBJECTS	Makefile	/^utilities_ovs_benchmark_OBJECTS =  \\$/;"	m
utilities_ovs_benchmark_SOURCES	Makefile	/^utilities_ovs_benchmark_SOURCES = utilities\/ovs-benchmark.c$/;"	m
utilities_ovs_benchmark_SOURCES	utilities/automake.mk	/^utilities_ovs_benchmark_SOURCES = utilities\/ovs-benchmark.c$/;"	m
utilities_ovs_dpctl_DEPENDENCIES	Makefile	/^utilities_ovs_dpctl_DEPENDENCIES = lib\/libopenvswitch.la$/;"	m
utilities_ovs_dpctl_LDADD	Makefile	/^utilities_ovs_dpctl_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_dpctl_LDADD	utilities/automake.mk	/^utilities_ovs_dpctl_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_dpctl_OBJECTS	Makefile	/^utilities_ovs_dpctl_OBJECTS = $(am_utilities_ovs_dpctl_OBJECTS)$/;"	m
utilities_ovs_dpctl_SOURCES	Makefile	/^utilities_ovs_dpctl_SOURCES = utilities\/ovs-dpctl.c$/;"	m
utilities_ovs_dpctl_SOURCES	utilities/automake.mk	/^utilities_ovs_dpctl_SOURCES = utilities\/ovs-dpctl.c$/;"	m
utilities_ovs_ofctl_DEPENDENCIES	Makefile	/^utilities_ovs_ofctl_DEPENDENCIES = ofproto\/libofproto.la \\$/;"	m
utilities_ovs_ofctl_LDADD	Makefile	/^utilities_ovs_ofctl_LDADD = \\$/;"	m
utilities_ovs_ofctl_LDADD	utilities/automake.mk	/^utilities_ovs_ofctl_LDADD = \\$/;"	m
utilities_ovs_ofctl_OBJECTS	Makefile	/^utilities_ovs_ofctl_OBJECTS = $(am_utilities_ovs_ofctl_OBJECTS)$/;"	m
utilities_ovs_ofctl_SOURCES	Makefile	/^utilities_ovs_ofctl_SOURCES = utilities\/ovs-ofctl.c$/;"	m
utilities_ovs_ofctl_SOURCES	utilities/automake.mk	/^utilities_ovs_ofctl_SOURCES = utilities\/ovs-ofctl.c$/;"	m
utilities_ovs_testcontroller_DEPENDENCIES	Makefile	/^utilities_ovs_testcontroller_DEPENDENCIES = lib\/libopenvswitch.la \\$/;"	m
utilities_ovs_testcontroller_LDADD	Makefile	/^utilities_ovs_testcontroller_LDADD = lib\/libopenvswitch.la $(SSL_LIBS)$/;"	m
utilities_ovs_testcontroller_LDADD	utilities/automake.mk	/^utilities_ovs_testcontroller_LDADD = lib\/libopenvswitch.la $(SSL_LIBS)$/;"	m
utilities_ovs_testcontroller_OBJECTS	Makefile	/^utilities_ovs_testcontroller_OBJECTS =  \\$/;"	m
utilities_ovs_testcontroller_SOURCES	Makefile	/^utilities_ovs_testcontroller_SOURCES = utilities\/ovs-testcontroller.c$/;"	m
utilities_ovs_testcontroller_SOURCES	utilities/automake.mk	/^utilities_ovs_testcontroller_SOURCES = utilities\/ovs-testcontroller.c$/;"	m
utilities_ovs_vlan_bug_workaround_DEPENDENCIES	Makefile	/^utilities_ovs_vlan_bug_workaround_DEPENDENCIES =  \\$/;"	m
utilities_ovs_vlan_bug_workaround_LDADD	Makefile	/^utilities_ovs_vlan_bug_workaround_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_vlan_bug_workaround_LDADD	utilities/automake.mk	/^utilities_ovs_vlan_bug_workaround_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_vlan_bug_workaround_OBJECTS	Makefile	/^utilities_ovs_vlan_bug_workaround_OBJECTS =  \\$/;"	m
utilities_ovs_vlan_bug_workaround_SOURCES	Makefile	/^utilities_ovs_vlan_bug_workaround_SOURCES = utilities\/ovs-vlan-bug-workaround.c$/;"	m
utilities_ovs_vlan_bug_workaround_SOURCES	utilities/automake.mk	/^utilities_ovs_vlan_bug_workaround_SOURCES = utilities\/ovs-vlan-bug-workaround.c$/;"	m
utilities_ovs_vsctl_DEPENDENCIES	Makefile	/^utilities_ovs_vsctl_DEPENDENCIES = lib\/libopenvswitch.la$/;"	m
utilities_ovs_vsctl_LDADD	Makefile	/^utilities_ovs_vsctl_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_vsctl_LDADD	utilities/automake.mk	/^utilities_ovs_vsctl_LDADD = lib\/libopenvswitch.la$/;"	m
utilities_ovs_vsctl_OBJECTS	Makefile	/^utilities_ovs_vsctl_OBJECTS = $(am_utilities_ovs_vsctl_OBJECTS)$/;"	m
utilities_ovs_vsctl_SOURCES	Makefile	/^utilities_ovs_vsctl_SOURCES = utilities\/ovs-vsctl.c$/;"	m
utilities_ovs_vsctl_SOURCES	utilities/automake.mk	/^utilities_ovs_vsctl_SOURCES = utilities\/ovs-vsctl.c$/;"	m
uuid	lib/ovsdb-data.h	/^    struct uuid uuid;           \/* The UUID that the symbol represents. *\/$/;"	m	struct:ovsdb_symbol	typeref:struct:ovsdb_symbol::uuid
uuid	lib/ovsdb-data.h	/^    struct uuid uuid;$/;"	m	union:ovsdb_atom	typeref:struct:ovsdb_atom::uuid
uuid	lib/ovsdb-idl-provider.h	/^    struct uuid uuid;           \/* Row "_uuid" field. *\/$/;"	m	struct:ovsdb_idl_row	typeref:struct:ovsdb_idl_row::uuid
uuid	lib/ovsdb-types.h	/^        } uuid;$/;"	m	union:ovsdb_base_type::__anon146	typeref:struct:ovsdb_base_type::__anon146::ovsdb_uuid_constraints
uuid	lib/uuid.h	/^struct uuid {$/;"	s
uuid	ovn/controller/lflow.c	/^    struct uuid uuid;           \/* UUID from Datapath_Binding row. *\/$/;"	m	struct:logical_datapath	typeref:struct:logical_datapath::uuid	file:
uuid	ovsdb/monitor.c	/^    struct uuid uuid;           \/* UUID of row that changed. *\/$/;"	m	struct:ovsdb_monitor_row	typeref:struct:ovsdb_monitor_row::uuid	file:
uuid	ovsdb/transaction.c	/^    struct uuid uuid;$/;"	m	struct:ovsdb_txn_row	typeref:struct:ovsdb_txn_row::uuid	file:
uuid	python/ovs/db/data.py	/^import uuid$/;"	i
uuid	python/ovs/db/idl.py	/^import uuid$/;"	i
uuid	python/ovs/db/types.py	/^import uuid$/;"	i
uuid	python/ovs/ovsuuid.py	/^import uuid$/;"	i
uuid	tests/test-ovsdb.c	/^    struct uuid uuid;$/;"	m	struct:do_query_distinct_row	typeref:struct:do_query_distinct_row::uuid	file:
uuid	tests/test-ovsdb.py	/^import uuid$/;"	i
uuid	vswitchd/bridge.c	/^    struct uuid uuid;           \/* UUID of this "mirror" record in database. *\/$/;"	m	struct:mirror	typeref:struct:mirror::uuid	file:
uuidRE	python/ovs/ovsuuid.py	/^uuidRE = re.compile("^xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx$"$/;"	v
uuid_column	lib/db-ctl-base.h	/^    const struct ovsdb_idl_column *uuid_column;$/;"	m	struct:ctl_row_id	typeref:struct:ctl_row_id::ovsdb_idl_column
uuid_compare_3way	lib/uuid.c	/^uuid_compare_3way(const struct uuid *a, const struct uuid *b)$/;"	f
uuid_equals	lib/uuid.h	/^uuid_equals(const struct uuid *a, const struct uuid *b)$/;"	f
uuid_from_integer	tests/test-ovsdb.c	/^uuid_from_integer(int integer, struct uuid *uuid)$/;"	f	file:
uuid_from_string	lib/uuid.c	/^uuid_from_string(struct uuid *uuid, const char *s)$/;"	f
uuid_from_string_prefix	lib/uuid.c	/^uuid_from_string_prefix(struct uuid *uuid, const char *s)$/;"	f
uuid_generate	lib/uuid.c	/^uuid_generate(struct uuid *uuid)$/;"	f
uuid_hash	lib/uuid.h	/^uuid_hash(const struct uuid *uuid)$/;"	f
uuid_init	lib/uuid.c	/^uuid_init(void)$/;"	f
uuid_is_zero	lib/uuid.c	/^uuid_is_zero(const struct uuid *uuid)$/;"	f
uuid_name_from_uuid	lib/ovsdb-idl.c	/^uuid_name_from_uuid(const struct uuid *uuid)$/;"	f	file:
uuid_set_bits_v4	lib/uuid.c	/^uuid_set_bits_v4(struct uuid *uuid)$/;"	f
uuid_zero	lib/uuid.c	/^uuid_zero(struct uuid *uuid)$/;"	f
v	lib/sflow.h	/^    } v;$/;"	m	union:_SFLLACP_portState	typeref:struct:_SFLLACP_portState::__anon158
va_copy	lib/util.h	36;"	d
va_copy	lib/util.h	38;"	d
vacancy	include/openflow/openflow-1.4.h	/^    uint8_t vacancy;      \/* Current vacancy (%) - only in ofp14_table_desc. *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
vacancy_down	include/openflow/openflow-1.4.h	/^    uint8_t vacancy_down;    \/* Vacancy threshold when space decreases (%). *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
vacancy_up	include/openflow/openflow-1.4.h	/^    uint8_t vacancy_up;      \/* Vacancy threshold when space increases (%). *\/$/;"	m	struct:ofp14_table_mod_prop_vacancy
val	datapath-windows/ovsext/DpInternal.h	/^        uint32_t val;$/;"	m	union:L2Key::__anon5
val	include/windows/getopt.h	/^	int val;$/;"	m	struct:option
valgrind_wrappers	Makefile	/^valgrind_wrappers = \\$/;"	m
valgrind_wrappers	tests/automake.mk	/^valgrind_wrappers = \\$/;"	m
valid	lib/tun-metadata.c	/^    bool valid;                 \/* True if allocated to a class and type. *\/$/;"	m	struct:tun_meta_entry	file:
valid	lib/tun-metadata.h	/^    bool valid;                 \/* Set to true after any allocation occurs. *\/$/;"	m	struct:tun_metadata_allocation
valid_ifindexes	utilities/ovs-check-dead-ifs	/^valid_ifindexes = set([])$/;"	v
validateDpIndex	datapath-windows/ovsext/Datapath.c	/^    BOOLEAN validateDpIndex;    \/* Does command require a valid DP argument. *\/$/;"	m	struct:_NETLINK_CMD	file:
validate_and_copy_sample	datapath/flow_netlink.c	/^static int validate_and_copy_sample(const struct nlattr *attr,$/;"	f	file:
validate_and_copy_sample	datapath/linux/flow_netlink.c	/^static int validate_and_copy_sample(const struct nlattr *attr,$/;"	f	file:
validate_and_copy_set_tun	datapath/flow_netlink.c	/^static int validate_and_copy_set_tun(const struct nlattr *attr,$/;"	f	file:
validate_and_copy_set_tun	datapath/linux/flow_netlink.c	/^static int validate_and_copy_set_tun(const struct nlattr *attr,$/;"	f	file:
validate_checksum	datapath/linux/compat/stt.c	/^static bool validate_checksum(struct sk_buff *skb)$/;"	f	file:
validate_checksum	datapath/linux/stt.c	/^static bool validate_checksum(struct sk_buff *skb)$/;"	f	file:
validate_geneve_opts	datapath/flow_netlink.c	/^static int validate_geneve_opts(struct sw_flow_key *key)$/;"	f	file:
validate_geneve_opts	datapath/linux/flow_netlink.c	/^static int validate_geneve_opts(struct sw_flow_key *key)$/;"	f	file:
validate_masked	datapath/flow_netlink.c	/^static bool validate_masked(u8 *data, int len)$/;"	f	file:
validate_masked	datapath/linux/flow_netlink.c	/^static bool validate_masked(u8 *data, int len)$/;"	f	file:
validate_set	datapath/flow_netlink.c	/^static int validate_set(const struct nlattr *a,$/;"	f	file:
validate_set	datapath/linux/flow_netlink.c	/^static int validate_set(const struct nlattr *a,$/;"	f	file:
validate_userspace	datapath/flow_netlink.c	/^static int validate_userspace(const struct nlattr *attr)$/;"	f	file:
validate_userspace	datapath/linux/flow_netlink.c	/^static int validate_userspace(const struct nlattr *attr)$/;"	f	file:
value	datapath-windows/ovsext/BufferMgmt.h	/^    UINT64 value[MEM_ALIGN_SIZE(16) >> 3];$/;"	m	union:_OVS_BUFFER_CONTEXT
value	datapath-windows/ovsext/IpHelper.h	/^    UINT64            value[3];$/;"	m	union:_OVS_FWD_INFO
value	datapath-windows/ovsext/NetProto.h	/^    UINT64 value;$/;"	m	union:_OVS_PACKET_HDR_INFO
value	datapath-windows/ovsext/NetProto.h	/^   UINT16 value;$/;"	m	struct:IPOpt
value	lib/dirs.c	/^    const char *value;          \/* Actual value; NULL if not yet determined. *\/$/;"	m	struct:directory	file:
value	lib/meta-flow.c	/^    uint8_t value;$/;"	m	struct:frag_handling	file:
value	lib/meta-flow.h	/^    union mf_value value[MFF_N_IDS];$/;"	m	struct:field_array	typeref:union:field_array::mf_value
value	lib/ofp-actions.c	/^    ovs_be64 value;                 \/* Immediate value. *\/$/;"	m	struct:nx_action_reg_load	file:
value	lib/ofp-actions.h	/^    union mf_value value;$/;"	m	struct:ofpact_set_field	typeref:union:ofpact_set_field::mf_value
value	lib/ovsdb-types.h	/^    struct ovsdb_base_type value;$/;"	m	struct:ovsdb_type	typeref:struct:ovsdb_type::ovsdb_base_type
value	lib/smap.h	/^    char *value;$/;"	m	struct:smap_node
value	lib/stp.c	/^    int value;                   \/* Current value of timer, counting up. *\/$/;"	m	struct:stp_timer	file:
value	lib/vlog.c	/^    unsigned int value;   \/* Facility associated with 'name'. *\/$/;"	m	struct:vlog_facility	file:
value	ovn/lib/expr.c	/^        union mf_subvalue value;$/;"	m	struct:expr_constant::__anon199	typeref:union:expr_constant::__anon199::mf_subvalue	file:
value	ovn/lib/expr.h	/^                    union mf_subvalue value;$/;"	m	struct:expr::__anon200::__anon201::__anon202::__anon203	typeref:union:expr::__anon200::__anon201::__anon202::__anon203::mf_subvalue
value	ovn/lib/lex.h	/^    union mf_subvalue value;    \/* LEX_T_INTEGER, LEX_T_MASKED_INTEGER only. *\/$/;"	m	struct:lex_token	typeref:union:lex_token::mf_subvalue
value	ovsdb/ovsdb-idlc	/^        value = {'name': valueName,$/;"	v
value	tests/test-cmap.c	/^    int value;$/;"	m	struct:element	file:
value	tests/test-cmap.c	/^    int value;$/;"	m	struct:helement	file:
value	tests/test-hindex.c	/^    int value;$/;"	m	struct:element	file:
value	tests/test-hmap.c	/^    int value;$/;"	m	struct:element	file:
value	tests/test-list.c	/^    int value;$/;"	m	struct:element	file:
valueComment	ovsdb/ovsdb-idlc	/^                valueComment = "\\n * 'value_type' must be %s." % column.type.value.toAtomicType()$/;"	v
valueComment	ovsdb/ovsdb-idlc	/^                valueComment = ''$/;"	v
valueName	ovsdb/ovsdb-idlc	/^        valueName = "value_%s" % columnName$/;"	v
valueParam	ovsdb/ovsdb-idlc	/^                valueParam = ''$/;"	v
valueParam	ovsdb/ovsdb-idlc	/^                valueParam = ', enum ovsdb_atomic_type value_type'$/;"	v
valueParam	ovsdb/ovsdb-idlc	/^                valueParam = ',\\n\\tenum ovsdb_atomic_type value_type OVS_UNUSED'$/;"	v
valueSrc	ovsdb/ovsdb-idlc	/^                    valueSrc = "datum->values[i].%s" % type.value.type.to_string()$/;"	v
valueSrc	ovsdb/ovsdb-idlc	/^                    valueSrc = "valueRow"$/;"	v
valueType	ovsdb/ovsdb-idlc	/^                    valueType = "OVSDB_TYPE_VOID"$/;"	v
valueType	ovsdb/ovsdb-idlc	/^                    valueType = type.value.toAtomicType()$/;"	v
valueType	ovsdb/ovsdb-idlc	/^                valueType = ''$/;"	v
valueType	ovsdb/ovsdb-idlc	/^                valueType = '\\n    ovs_assert(value_type == %s);' % column.type.value.toAtomicType()$/;"	v
valueVar	ovsdb/ovsdb-idlc	/^                        valueVar = "row->value_%s" % columnName$/;"	v
valueVar	ovsdb/ovsdb-idlc	/^                        valueVar = None$/;"	v
valueVar	ovsdb/ovsdb-idlc	/^                valueVar = "row->value_%s" % columnName$/;"	v
valueVar	ovsdb/ovsdb-idlc	/^                valueVar = None$/;"	v
valueVar	ovsdb/ovsdb-idlc	/^                valueVar = members[1]['name']$/;"	v
valueVar	ovsdb/ovsdb-idlc	/^            valueVar = None$/;"	v
value_acl_binding	vtep/vtep-idl.h	/^	struct vteprec_acl **value_acl_binding;$/;"	m	struct:vteprec_logical_router	typeref:struct:vteprec_logical_router::vteprec_acl
value_acl_bindings	vtep/vtep-idl.h	/^	struct vteprec_acl **value_acl_bindings;$/;"	m	struct:vteprec_physical_port	typeref:struct:vteprec_physical_port::vteprec_acl
value_flow_tables	lib/vswitch-idl.h	/^	struct ovsrec_flow_table **value_flow_tables;$/;"	m	struct:ovsrec_bridge	typeref:struct:ovsrec_bridge::ovsrec_flow_table
value_mappings	lib/vswitch-idl.h	/^	int64_t *value_mappings;$/;"	m	struct:ovsrec_autoattach
value_queues	lib/vswitch-idl.h	/^	struct ovsrec_queue **value_queues;$/;"	m	struct:ovsrec_qos	typeref:struct:ovsrec_qos::ovsrec_queue
value_rstp_statistics	lib/vswitch-idl.h	/^	int64_t *value_rstp_statistics;$/;"	m	struct:ovsrec_port
value_statistics	lib/vswitch-idl.h	/^	int64_t *value_statistics;$/;"	m	struct:ovsrec_interface
value_statistics	lib/vswitch-idl.h	/^	int64_t *value_statistics;$/;"	m	struct:ovsrec_mirror
value_statistics	lib/vswitch-idl.h	/^	int64_t *value_statistics;$/;"	m	struct:ovsrec_port
value_switch_binding	vtep/vtep-idl.h	/^	struct vteprec_logical_switch **value_switch_binding;$/;"	m	struct:vteprec_logical_router	typeref:struct:vteprec_logical_router::vteprec_logical_switch
value_type	lib/ovsdb-data.c	/^    enum ovsdb_atomic_type value_type;$/;"	m	struct:ovsdb_datum_sort_cbdata	typeref:enum:ovsdb_datum_sort_cbdata::ovsdb_atomic_type	file:
value_vlan_bindings	vtep/vtep-idl.h	/^	struct vteprec_logical_switch **value_vlan_bindings;$/;"	m	struct:vteprec_physical_port	typeref:struct:vteprec_physical_port::vteprec_logical_switch
value_vlan_stats	vtep/vtep-idl.h	/^	struct vteprec_logical_binding_stats **value_vlan_stats;$/;"	m	struct:vteprec_physical_port	typeref:struct:vteprec_physical_port::vteprec_logical_binding_stats
values	lib/ovsdb-data.h	/^    union ovsdb_atom *values;   \/* Each of the ovsdb_type's 'value_type'. *\/$/;"	m	struct:ovsdb_datum	typeref:union:ovsdb_datum::ovsdb_atom
values	ovn/lib/expr.c	/^    union expr_constant *values;  \/* Constants. *\/$/;"	m	struct:expr_constant_set	typeref:union:expr_constant_set::expr_constant	file:
values	tests/test-classifier.c	/^static void *values[CLS_N_FIELDS][2];$/;"	v	file:
var_name	lib/dirs.c	/^    const char *var_name;       \/* Environment variable to override default. *\/$/;"	m	struct:directory	file:
variable_len	lib/meta-flow.h	/^    bool variable_len;          \/* Length is variable, if so width is max. *\/$/;"	m	struct:mf_field
variable_length_userdata	ofproto/ofproto-dpif.h	/^    bool variable_length_userdata;$/;"	m	struct:dpif_backer_support
vc_instance_name	lib/sflow.h	/^    SFLString vc_instance_name; \/* VC instance name *\/$/;"	m	struct:_SFLExtended_mpls_vc
vc_label_cos	lib/sflow.h	/^    u_int32_t vc_label_cos;     \/* VC Label COS value *\/$/;"	m	struct:_SFLExtended_mpls_vc
vclass	lib/vconn-provider.h	/^    const struct vconn_class *vclass;$/;"	m	struct:vconn	typeref:struct:vconn::vconn_class
vconn	lib/rconn.c	/^    struct vconn *vconn;$/;"	m	struct:rconn	typeref:struct:rconn::vconn	file:
vconn	lib/vconn-provider.h	/^struct vconn {$/;"	s
vconn	lib/vconn-stream.c	/^    struct vconn vconn;$/;"	m	struct:vconn_stream	typeref:struct:vconn_stream::vconn	file:
vconn	lib/vconn.c	/^VLOG_DEFINE_THIS_MODULE(vconn);$/;"	v
vconn	utilities/ovs-ofctl.c	/^    struct vconn *vconn;        \/* OpenFlow connection for sending barrier. *\/$/;"	m	struct:barrier_aux	typeref:struct:barrier_aux::vconn	file:
vconn_assert_class	lib/vconn-provider.h	/^static inline void vconn_assert_class(const struct vconn *vconn,$/;"	f
vconn_bundle_add_msg	lib/vconn.c	/^vconn_bundle_add_msg(struct vconn *vconn, struct ofputil_bundle_ctrl_msg *bc,$/;"	f	file:
vconn_bundle_control_transact	lib/vconn.c	/^vconn_bundle_control_transact(struct vconn *vconn,$/;"	f	file:
vconn_bundle_reply_validate	lib/vconn.c	/^vconn_bundle_reply_validate(struct ofpbuf *reply,$/;"	f	file:
vconn_bundle_transact	lib/vconn.c	/^vconn_bundle_transact(struct vconn *vconn, struct ovs_list *requests,$/;"	f
vconn_class	lib/vconn-provider.h	/^struct vconn_class {$/;"	s
vconn_classes	lib/vconn.c	/^static const struct vconn_class *vconn_classes[] = {$/;"	v	typeref:struct:vconn_class	file:
vconn_close	lib/vconn.c	/^vconn_close(struct vconn *vconn)$/;"	f
vconn_connect	lib/vconn.c	/^vconn_connect(struct vconn *vconn)$/;"	f
vconn_connect_block	lib/vconn.c	/^vconn_connect_block(struct vconn *vconn)$/;"	f
vconn_connect_wait	lib/vconn.c	/^vconn_connect_wait(struct vconn *vconn)$/;"	f
vconn_get_allowed_versions	lib/vconn.c	/^vconn_get_allowed_versions(const struct vconn *vconn)$/;"	f
vconn_get_name	lib/vconn.c	/^vconn_get_name(const struct vconn *vconn)$/;"	f
vconn_get_status	lib/vconn.c	/^vconn_get_status(const struct vconn *vconn)$/;"	f
vconn_get_version	lib/vconn.c	/^vconn_get_version(const struct vconn *vconn)$/;"	f
vconn_init	lib/vconn.c	/^vconn_init(struct vconn *vconn, const struct vconn_class *class,$/;"	f
vconn_lookup_class	lib/vconn.c	/^vconn_lookup_class(const char *name, const struct vconn_class **classp)$/;"	f	file:
vconn_name	tests/test-vconn.c	/^    char *vconn_name;$/;"	m	struct:fake_pvconn	file:
vconn_open	lib/vconn.c	/^COVERAGE_DEFINE(vconn_open);$/;"	v
vconn_open	lib/vconn.c	/^vconn_open(const char *name, uint32_t allowed_versions, uint8_t dscp,$/;"	f
vconn_open_block	lib/vconn.c	/^vconn_open_block(const char *name, uint32_t allowed_versions, uint8_t dscp,$/;"	f
vconn_received	lib/vconn.c	/^COVERAGE_DEFINE(vconn_received);$/;"	v
vconn_recv	lib/vconn.c	/^vconn_recv(struct vconn *vconn, struct ofpbuf **msgp)$/;"	f
vconn_recv_block	lib/vconn.c	/^vconn_recv_block(struct vconn *vconn, struct ofpbuf **msgp)$/;"	f
vconn_recv_error	lib/vconn.c	/^vconn_recv_error(struct vconn *vconn,$/;"	f	file:
vconn_recv_wait	lib/vconn.c	/^vconn_recv_wait(struct vconn *vconn)$/;"	f
vconn_recv_xid	lib/vconn.c	/^vconn_recv_xid(struct vconn *vconn, ovs_be32 xid, struct ofpbuf **replyp)$/;"	f
vconn_recv_xid__	lib/vconn.c	/^vconn_recv_xid__(struct vconn *vconn, ovs_be32 xid, struct ofpbuf **replyp,$/;"	f	file:
vconn_run	lib/vconn.c	/^vconn_run(struct vconn *vconn)$/;"	f
vconn_run_wait	lib/vconn.c	/^vconn_run_wait(struct vconn *vconn)$/;"	f
vconn_send	lib/vconn.c	/^vconn_send(struct vconn *vconn, struct ofpbuf *msg)$/;"	f
vconn_send_block	lib/vconn.c	/^vconn_send_block(struct vconn *vconn, struct ofpbuf *msg)$/;"	f
vconn_send_wait	lib/vconn.c	/^vconn_send_wait(struct vconn *vconn)$/;"	f
vconn_sent	lib/vconn.c	/^COVERAGE_DEFINE(vconn_sent);$/;"	v
vconn_set_allowed_versions	lib/vconn.c	/^vconn_set_allowed_versions(struct vconn *vconn, uint32_t allowed_versions)$/;"	f
vconn_set_recv_any_version	lib/vconn.c	/^vconn_set_recv_any_version(struct vconn *vconn)$/;"	f
vconn_state	lib/vconn.c	/^enum vconn_state {$/;"	g	file:
vconn_stream	lib/vconn-stream.c	/^VLOG_DEFINE_THIS_MODULE(vconn_stream);$/;"	v
vconn_stream	lib/vconn-stream.c	/^struct vconn_stream$/;"	s	file:
vconn_stream_cast	lib/vconn-stream.c	/^vconn_stream_cast(struct vconn *vconn)$/;"	f	file:
vconn_stream_clear_txbuf	lib/vconn-stream.c	/^vconn_stream_clear_txbuf(struct vconn_stream *s)$/;"	f	file:
vconn_stream_close	lib/vconn-stream.c	/^vconn_stream_close(struct vconn *vconn)$/;"	f	file:
vconn_stream_connect	lib/vconn-stream.c	/^vconn_stream_connect(struct vconn *vconn)$/;"	f	file:
vconn_stream_new	lib/vconn-stream.c	/^vconn_stream_new(struct stream *stream, int connect_status,$/;"	f	file:
vconn_stream_open	lib/vconn-stream.c	/^vconn_stream_open(const char *name, uint32_t allowed_versions,$/;"	f	file:
vconn_stream_recv	lib/vconn-stream.c	/^vconn_stream_recv(struct vconn *vconn, struct ofpbuf **bufferp)$/;"	f	file:
vconn_stream_recv__	lib/vconn-stream.c	/^vconn_stream_recv__(struct vconn_stream *s, int rx_len)$/;"	f	file:
vconn_stream_run	lib/vconn-stream.c	/^vconn_stream_run(struct vconn *vconn)$/;"	f	file:
vconn_stream_run_wait	lib/vconn-stream.c	/^vconn_stream_run_wait(struct vconn *vconn)$/;"	f	file:
vconn_stream_send	lib/vconn-stream.c	/^vconn_stream_send(struct vconn *vconn, struct ofpbuf *buffer)$/;"	f	file:
vconn_stream_wait	lib/vconn-stream.c	/^vconn_stream_wait(struct vconn *vconn, enum vconn_wait_type wait)$/;"	f	file:
vconn_transact	lib/vconn.c	/^vconn_transact(struct vconn *vconn, struct ofpbuf *request,$/;"	f
vconn_transact__	lib/vconn.c	/^vconn_transact__(struct vconn *vconn, struct ofpbuf *request,$/;"	f	file:
vconn_transact_multiple_noreply	lib/vconn.c	/^vconn_transact_multiple_noreply(struct vconn *vconn, struct ovs_list *requests,$/;"	f
vconn_transact_noreply	lib/vconn.c	/^vconn_transact_noreply(struct vconn *vconn, struct ofpbuf *request,$/;"	f
vconn_usage	lib/vconn.c	/^vconn_usage(bool active, bool passive, bool bootstrap OVS_UNUSED)$/;"	f
vconn_verify_name	lib/vconn.c	/^vconn_verify_name(const char *name)$/;"	f
vconn_wait	lib/vconn.c	/^vconn_wait(struct vconn *vconn, enum vconn_wait_type wait)$/;"	f
vconn_wait_type	include/openvswitch/vconn.h	/^enum vconn_wait_type {$/;"	g
vconn_windows_sub	tests/system-kmod-testsuite	/^vconn_windows_sub() {$/;"	f
vconn_windows_sub	tests/system-userspace-testsuite	/^vconn_windows_sub() {$/;"	f
vconn_windows_sub	tests/testsuite	/^vconn_windows_sub() {$/;"	f
vcs_connecting	lib/vconn.c	/^vcs_connecting(struct vconn *vconn)$/;"	f	file:
vcs_recv_hello	lib/vconn.c	/^vcs_recv_hello(struct vconn *vconn)$/;"	f	file:
vcs_send_error	lib/vconn.c	/^vcs_send_error(struct vconn *vconn)$/;"	f	file:
vcs_send_hello	lib/vconn.c	/^vcs_send_hello(struct vconn *vconn)$/;"	f	file:
vd_add	lib/vlandev.c	/^    int (*vd_add)(const char *real_dev, int vid);$/;"	m	struct:vlandev_class	file:
vd_class	lib/vlandev.c	/^static const struct vlandev_class *vd_class;$/;"	v	typeref:struct:vlandev_class	file:
vd_del	lib/vlandev.c	/^    int (*vd_del)(const char *vlan_dev);$/;"	m	struct:vlandev_class	file:
vd_refresh	lib/vlandev.c	/^    int (*vd_refresh)(void);$/;"	m	struct:vlandev_class	file:
vector	lib/pvector.h	/^    const struct pvector_entry *vector;$/;"	m	struct:pvector_cursor	typeref:struct:pvector_cursor::pvector_entry
vector	lib/pvector.h	/^    struct pvector_entry vector[];$/;"	m	struct:pvector_impl	typeref:struct:pvector_impl::pvector_entry
vector_comparison	lib/rstp-state-machines.c	/^enum vector_comparison {$/;"	g	file:
vectors	tests/test-sha1.c	/^static const struct test_vector vectors[] = {$/;"	v	typeref:struct:test_vector	file:
vendor	include/openflow/nicira-ext.h	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nicira_header
vendor	include/openflow/nicira-ext.h	/^    ovs_be32 vendor;            \/* Vendor ID as in struct ofp_vendor_header. *\/$/;"	m	struct:nx_vendor_error
vendor	include/openflow/openflow-1.0.h	/^    ovs_be32 vendor;            \/* Vendor ID:$/;"	m	struct:ofp10_vendor_stats_msg
vendor	include/openflow/openflow-1.1.h	/^    ovs_be32 vendor;            \/* Vendor ID:$/;"	m	struct:ofp11_vendor_stats_msg
vendor	include/openflow/openflow-common.h	/^    ovs_be32 vendor;            \/* Vendor ID:$/;"	m	struct:ofp_vendor_header
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID or ONF_VENDOR_ID. *\/$/;"	m	struct:ext_action_header	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_conjunction	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_controller	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_note	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_reg_load	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_reg_load2	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_reg_move	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_resubmit	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_sample	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_stack	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_write_metadata	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_bundle	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_cnt_ids	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_conntrack	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_fin_timeout	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_learn	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_multipath	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_output_reg	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_output_reg2	file:
vendor	lib/ofp-actions.c	/^    ovs_be32 vendor;$/;"	m	struct:ofp_action_header	file:
vendor	lib/ofp-actions.c	/^    uint32_t vendor;              \/* 0 if standard, otherwise a vendor code. *\/$/;"	m	struct:ofpact_hdrs	file:
vendor	lib/ofp-errors.c	/^    uint32_t vendor;$/;"	m	struct:triplet	file:
vendor	lib/ofp-msgs.c	/^    uint32_t vendor;            \/* From ofp_vendor_header,$/;"	m	struct:ofphdrs	file:
vendor_map	build-aux/extract-ofp-actions	/^vendor_map = {"OF": (0x00000000,  4),$/;"	v
ver	datapath/linux/compat/include/net/geneve.h	/^	u8 ver:2;$/;"	m	struct:genevehdr
ver	lib/geneve.h	/^    uint8_t ver:2;$/;"	m	struct:genevehdr
verbosity	lib/dpctl.h	/^    int verbosity;$/;"	m	struct:dpctl_params
verbosity	tests/test-ovn.c	/^static int verbosity;$/;"	v	file:
verbosity	utilities/ovs-ofctl.c	/^static int verbosity;$/;"	v	file:
verified_ports	utilities/ovs-vsctl.c	/^    bool verified_ports;$/;"	m	struct:vsctl_context	file:
verified_ports	vtep/vtep-ctl.c	/^    bool verified_ports;$/;"	m	struct:vtep_ctl_context	file:
verify	python/ovs/db/idl.py	/^    def verify(self, column_name):$/;"	m	class:Row
verify_auto_attach	utilities/ovs-vsctl.c	/^verify_auto_attach(struct ovsrec_bridge *bridge)$/;"	f	file:
verify_controllers	utilities/ovs-vsctl.c	/^verify_controllers(struct ovsrec_bridge *bridge)$/;"	f	file:
verify_fingerprint	utilities/ovs-pki	/^verify_fingerprint() {$/;"	f
verify_fingerprint	utilities/ovs-pki.in	/^verify_fingerprint() {$/;"	f
verify_managers	utilities/ovs-vsctl.c	/^verify_managers(const struct ovsrec_open_vswitch *ovs)$/;"	f	file:
verify_managers	vtep/vtep-ctl.c	/^verify_managers(const struct vteprec_global *vtep_global)$/;"	f	file:
verify_peer_cert	lib/stream-ssl.c	/^static bool verify_peer_cert = true;$/;"	v	file:
verify_ports	utilities/ovs-vsctl.c	/^verify_ports(struct vsctl_context *vsctl_ctx)$/;"	f	file:
verify_ports	vtep/vtep-ctl.c	/^verify_ports(struct vtep_ctl_context *vtepctl_ctx)$/;"	f	file:
verify_write_only	lib/ovsdb-idl.c	/^    bool verify_write_only;$/;"	m	struct:ovsdb_idl	file:
vers_diag	lib/bfd.c	/^    uint8_t vers_diag;    \/* Version and diagnostic. *\/$/;"	m	struct:msg	file:
version	datapath-windows/ovsext/Datapath.c	/^    UINT8 version;$/;"	m	struct:_NETLINK_FAMILY	file:
version	datapath-windows/ovsext/NetProto.h	/^             version:4;$/;"	m	struct:IPv6Hdr
version	datapath-windows/ovsext/NetProto.h	/^            version:4;$/;"	m	struct:IPHdr
version	datapath-windows/ovsext/Netlink/NetlinkProto.h	/^    UINT8 version;$/;"	m	struct:_GENL_MSG_HDR
version	datapath-windows/ovsext/Stt.h	/^    UINT8    version;$/;"	m	struct:SttHdr
version	datapath/linux/compat/include/net/genetlink.h	/^	unsigned int            version;$/;"	m	struct:rpl_genl_family
version	datapath/linux/compat/include/net/stt.h	/^	__u8		version;$/;"	m	struct:stthdr
version	include/openflow/openflow-common.h	/^    uint8_t version;    \/* An OpenFlow version number, e.g. OFP10_VERSION. *\/$/;"	m	struct:ofp_header
version	lib/classifier.h	/^    cls_version_t version;   \/* Version to iterate. *\/$/;"	m	struct:cls_cursor
version	lib/lacp.c	/^    uint8_t version;          \/* Always 1. *\/$/;"	m	struct:lacp_pdu	file:
version	lib/netflow.h	/^    ovs_be16 version;              \/* NetFlow version is 5. *\/$/;"	m	struct:netflow_v5_header
version	lib/netlink-protocol.h	/^    uint8_t version;$/;"	m	struct:genlmsghdr
version	lib/nx-match.c	/^    enum ofp_version version;$/;"	m	struct:nxm_field	typeref:enum:nxm_field::ofp_version	file:
version	lib/ofp-msgs.c	/^    uint8_t version;            \/* From ofp_header. *\/$/;"	m	struct:ofphdrs	file:
version	lib/vconn-provider.h	/^    enum ofp_version version;   \/* Negotiated version (or 0). *\/$/;"	m	struct:vconn	typeref:enum:vconn::ofp_version
version	ofproto/ofproto-provider.h	/^    cls_version_t version;              \/* Version in which changes take$/;"	m	struct:ofproto_flow_mod
version	ofproto/ofproto.c	/^    cls_version_t version;$/;"	m	struct:rule_criteria	file:
version	ovsdb/ovsdb.h	/^    char *version;$/;"	m	struct:ovsdb_schema
version	python/ovs/unixctl/server.py	/^import ovs.version$/;"	i
version	python/setup.py	/^    version=VERSION,$/;"	v
version	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^    def version(self):$/;"	m	class:VSwitchService
version_bitmap_from_version	lib/ofp-util.c	/^version_bitmap_from_version(uint8_t ofp_version)$/;"	f	file:
version_bitmap_to_string	lib/vconn.c	/^version_bitmap_to_string(uint32_t bitmap)$/;"	f	file:
version_major	lib/pcap-file.c	/^    uint16_t version_major;  \/* major version number *\/$/;"	m	struct:pcap_hdr	file:
version_map	build-aux/extract-ofp-actions	/^version_map = {"1.0": 0x01,$/;"	v
version_map	build-aux/extract-ofp-errors	/^version_map = {"1.0": 0x01,$/;"	v
version_minor	lib/pcap-file.c	/^    uint16_t version_minor;  \/* minor version number *\/$/;"	m	struct:pcap_hdr	file:
version_reverse_map	build-aux/extract-ofp-actions	/^version_reverse_map = dict((v, k) for (k, v) in version_map.iteritems())$/;"	v
version_reverse_map	build-aux/extract-ofp-errors	/^version_reverse_map = dict((v, k) for (k, v) in version_map.iteritems())$/;"	v
versioned	tests/test-classifier.c	/^static bool versioned = false;$/;"	v	file:
versions	utilities/ovs-ofctl.c	/^    struct fte_version *versions[2];$/;"	m	struct:fte	typeref:struct:fte::fte_version	file:
vg	lib/sflow.h	/^    SFLVg_counters vg;$/;"	m	union:_SFLCounters_type
vhost_id	lib/netdev-dpdk.c	/^    char vhost_id[PATH_MAX];$/;"	m	struct:netdev_dpdk	file:
vhost_sock_dir	lib/netdev-dpdk.c	/^static char *vhost_sock_dir = NULL;   \/* Location of vhost-user sockets *\/$/;"	v	file:
vhost_tx_lock	lib/netdev-dpdk.c	/^    rte_spinlock_t vhost_tx_lock;$/;"	m	struct:netdev_dpdk	file:
vid	lib/vlandev.h	/^    int vid;                        \/* VLAN ID, e.g. 10. *\/$/;"	m	struct:vlan_dev
vid	ofproto/ofproto-dpif-xlate.c	/^            uint16_t vid;$/;"	m	struct:xc_entry::__anon188::__anon192	file:
vid	ofproto/ofproto-dpif.c	/^    int vid;$/;"	m	struct:vlan_splinter	file:
vidHi	datapath-windows/ovsext/Ethernet.h	/^    UINT16 vidHi:4,            \/\/ 802.1q vlan ID high nibble$/;"	m	struct:Eth_802_1pq_Tag
vidLo	datapath-windows/ovsext/Ethernet.h	/^           vidLo:8;            \/\/ 802.1q vlan ID low byte$/;"	m	struct:Eth_802_1pq_Tag
vifUUID	datapath-windows/ovsext/DpInternal.h	/^    char vifUUID[OVS_MAX_VIF_UUID_LEN];$/;"	m	struct:_OVS_VPORT_EXT_INFO
vif_to_hv	tests/testsuite	/^vif_to_hv() {$/;"	f
vif_to_lrp	tests/testsuite	/^vif_to_lrp() {$/;"	f
vif_to_ls	tests/testsuite	/^vif_to_ls() {$/;"	f
virtio_dev	lib/netdev-dpdk.c	/^    OVSRCU_TYPE(struct virtio_net *) virtio_dev;$/;"	m	struct:netdev_dpdk	file:
virtio_net_device_ops	lib/netdev-dpdk.c	/^static const struct virtio_net_device_ops virtio_net_device_ops =$/;"	v	typeref:struct:virtio_net_device_ops	file:
virtualExternalPortId	datapath-windows/ovsext/Switch.h	/^    NDIS_SWITCH_PORT_ID     virtualExternalPortId;$/;"	m	struct:_OVS_SWITCH_CONTEXT
virtualExternalVport	datapath-windows/ovsext/Switch.h	/^    POVS_VPORT_ENTRY        virtualExternalVport;   \/\/ the virtual adapter vport$/;"	m	struct:_OVS_SWITCH_CONTEXT
vlan	lib/lldp/aa-structs.h	/^    uint16_t vlan;$/;"	m	struct:lldpd_aa_isid_vlan_map_data
vlan	lib/mac-learning.h	/^    uint16_t vlan;              \/* VLAN tag. *\/$/;"	m	struct:mac_entry
vlan	lib/mcast-snooping.h	/^    uint16_t vlan;$/;"	m	struct:mcast_group
vlan	lib/mcast-snooping.h	/^    uint16_t vlan;$/;"	m	struct:mcast_mrouter_bundle
vlan	lib/mcast-snooping.h	/^    uint16_t vlan;$/;"	m	struct:mcast_port_bundle
vlan	lib/ovs-lldp.c	/^    uint16_t         vlan;$/;"	m	struct:aa_mapping_internal	file:
vlan	lib/ovs-lldp.h	/^    uint16_t vlan;$/;"	m	struct:aa_mapping_settings
vlan	lib/ovs-lldp.h	/^    uint16_t vlan;$/;"	m	struct:bridge_aa_vlan
vlan	lib/sflow.h	/^    SFLVlan_counters vlan;$/;"	m	union:_SFLCounters_type
vlan	ofproto/ofproto-dpif-xlate.c	/^            int vlan;$/;"	m	struct:xc_entry::__anon188::__anon194	file:
vlan	ofproto/ofproto-dpif-xlate.c	/^    int vlan;                      \/* -1=trunk port, else a 12-bit VLAN ID. *\/$/;"	m	struct:xbundle	file:
vlan	ofproto/ofproto-dpif.c	/^    int vlan;                   \/* -1=trunk port, else a 12-bit VLAN ID. *\/$/;"	m	struct:ofbundle	file:
vlan	ofproto/ofproto.h	/^    int vlan;                   \/* VLAN VID, except for PORT_VLAN_TRUNK. *\/$/;"	m	struct:ofproto_bundle_settings
vlan	utilities/ovs-vsctl.c	/^    int vlan;                    \/* VLAN VID (0...4095), or 0. *\/$/;"	m	struct:vsctl_bridge	file:
vlan	vswitchd/bridge.c	/^    uint16_t vlan;$/;"	m	struct:aa_mapping	file:
vlanInsert	datapath-windows/ovsext/User.h	/^    UINT32 vlanInsert;$/;"	m	struct:_OVS_USER_STATS
vlanTCI	datapath-windows/ovsext/Stt.h	/^    UINT16   vlanTCI;$/;"	m	struct:SttHdr
vlanTci	datapath-windows/ovsext/DpInternal.h	/^    ovs_be16 vlanTci;            \/* If 802.1Q, TCI | VLAN_CFI; otherwise 0. *\/$/;"	m	struct:L2Key
vlanTunnelEncodingLength	lib/sflow_receiver.c	/^inline static u_int32_t vlanTunnelEncodingLength(SFLExtended_vlan_tunnel *vlanTunnel) {$/;"	f	file:
vlan_bitmap	ofproto/ofproto-provider.h	/^    unsigned long int *vlan_bitmap; \/* 4096-bit bitmap of in-use VLANs. *\/$/;"	m	struct:ofproto
vlan_bitmap_clone	lib/vlan-bitmap.h	/^vlan_bitmap_clone(const unsigned long *vlans)$/;"	f
vlan_bitmap_equal	lib/vlan-bitmap.c	/^vlan_bitmap_equal(const unsigned long *a, const unsigned long *b)$/;"	f
vlan_bitmap_from_array	lib/vlan-bitmap.c	/^vlan_bitmap_from_array(const int64_t *vlans, size_t n_vlans)$/;"	f
vlan_bitmap_from_array__	lib/vlan-bitmap.c	/^vlan_bitmap_from_array__(const int64_t *vlans, size_t n_vlans,$/;"	f
vlan_cache_cb	lib/vlandev.c	/^vlan_cache_cb(const struct rtnetlink_change *change OVS_UNUSED,$/;"	f	file:
vlan_cache_notifier	lib/vlandev.c	/^static struct nln_notifier *vlan_cache_notifier;$/;"	v	typeref:struct:nln_notifier	file:
vlan_dev	lib/vlandev.h	/^struct vlan_dev {$/;"	s
vlan_devs	lib/vlandev.c	/^static struct shash vlan_devs = SHASH_INITIALIZER(&vlan_devs);$/;"	v	typeref:struct:shash	file:
vlan_devs	lib/vlandev.h	/^    struct hmap vlan_devs;      \/* All child VLAN devices, hashed by VID. *\/$/;"	m	struct:vlan_real_dev	typeref:struct:vlan_real_dev::hmap
vlan_get_tci	datapath/vlan.h	/^static inline u16 vlan_get_tci(struct sk_buff *skb)$/;"	f
vlan_header	lib/packets.h	/^struct vlan_header {$/;"	s
vlan_hwaccel_push_inside	datapath/linux/compat/include/linux/if_vlan.h	/^static inline struct sk_buff *vlan_hwaccel_push_inside(struct sk_buff *skb)$/;"	f
vlan_id	lib/sflow.h	/^    u_int32_t vlan_id;$/;"	m	struct:_SFLVlan_counters
vlan_insert_tag_set_proto	datapath/linux/compat/include/linux/if_vlan.h	26;"	d
vlan_mode	lib/vswitch-idl.h	/^	char *vlan_mode;$/;"	m	struct:ovsrec_port
vlan_mode	ofproto/ofproto-dpif-xlate.c	/^    enum port_vlan_mode vlan_mode; \/* VLAN mode. *\/$/;"	m	struct:xbundle	typeref:enum:xbundle::port_vlan_mode	file:
vlan_mode	ofproto/ofproto-dpif.c	/^    enum port_vlan_mode vlan_mode; \/* VLAN mode *\/$/;"	m	struct:ofbundle	typeref:enum:ofbundle::port_vlan_mode	file:
vlan_mode	ofproto/ofproto.h	/^    enum port_vlan_mode vlan_mode; \/* Selects mode for vlan and trunks *\/$/;"	m	struct:ofproto_bundle_settings	typeref:enum:ofproto_bundle_settings::port_vlan_mode
vlan_next_type	lib/packets.h	/^    ovs_be16 vlan_next_type;$/;"	m	struct:vlan_header
vlan_pcp	lib/ofp-actions.h	/^    uint8_t vlan_pcp;           \/* VLAN PCP in low 3 bits, 0 in other bits. *\/$/;"	m	struct:ofpact_vlan_pcp
vlan_real_dev	lib/vlandev.h	/^struct vlan_real_dev {$/;"	s
vlan_real_devs	lib/vlandev.c	/^static struct shash vlan_real_devs = SHASH_INITIALIZER(&vlan_real_devs);$/;"	v	typeref:struct:shash	file:
vlan_server	utilities/ovs-vlan-test	/^vlan_server = None$/;"	v
vlan_set_encap_proto	datapath/linux/compat/include/linux/if_vlan.h	/^static inline void vlan_set_encap_proto(struct sk_buff *skb, struct vlan_hdr *vhdr)$/;"	f
vlan_set_tci	datapath/vlan.h	/^static inline void vlan_set_tci(struct sk_buff *skb, u16 vlan_tci)$/;"	f
vlan_splinter	ofproto/ofproto-dpif.c	/^struct vlan_splinter {$/;"	s	file:
vlan_splinters_enabled_anywhere	vswitchd/bridge.c	/^static bool vlan_splinters_enabled_anywhere;$/;"	v	file:
vlan_splinters_is_enabled	vswitchd/bridge.c	/^vlan_splinters_is_enabled(const struct ovsrec_interface *iface_cfg)$/;"	f	file:
vlan_tag	python/ovstest/args.py	/^def vlan_tag(string):$/;"	f
vlan_tag	utilities/ovs-test	/^            vlan_tag = ovs_args.vlanTag$/;"	v
vlan_tagging	lib/lldp/aa-structs.h	/^    uint16_t                         vlan_tagging;$/;"	m	struct:lldpd_aa_element_tlv
vlan_tci	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 vlan_tci;	\/* 802.1Q TCI (VLAN ID and priority). *\/$/;"	m	struct:ovs_action_push_vlan
vlan_tci	datapath/linux/compat/include/net/stt.h	/^	__be16		vlan_tci;$/;"	m	struct:stthdr
vlan_tci	include/odp-netlink.h	/^	ovs_be16 vlan_tci;	\/* 802.1Q TCI (VLAN ID and priority). *\/$/;"	m	struct:ovs_action_push_vlan
vlan_tci	lib/flow.h	/^    ovs_be16 vlan_tci;          \/* If 802.1Q, TCI | VLAN_CFI; otherwise 0. *\/$/;"	m	struct:flow
vlan_tci	lib/odp-util.h	/^        ovs_be16 vlan_tci;      \/* Destination VLAN TCI. *\/$/;"	m	struct:user_action_cookie::__anon123
vlan_tci	lib/packets.h	/^    ovs_be16 vlan_tci;          \/* Lowest 12 bits are VLAN ID. *\/$/;"	m	struct:vlan_header
vlan_tci_to_cfi	lib/packets.h	/^vlan_tci_to_cfi(ovs_be16 vlan_tci)$/;"	f
vlan_tci_to_pcp	lib/packets.h	/^vlan_tci_to_pcp(ovs_be16 vlan_tci)$/;"	f
vlan_tci_to_vid	lib/packets.h	/^vlan_tci_to_vid(ovs_be16 vlan_tci)$/;"	f
vlan_tci_values	tests/test-classifier.c	/^static ovs_be16 vlan_tci_values[] = { CONSTANT_HTONS(101), CONSTANT_HTONS(0) };$/;"	v	file:
vlan_tpid	datapath/linux/compat/include/linux/openvswitch.h	/^	__be16 vlan_tpid;	\/* 802.1Q TPID. *\/$/;"	m	struct:ovs_action_push_vlan
vlan_tpid	include/odp-netlink.h	/^	ovs_be16 vlan_tpid;	\/* 802.1Q TPID. *\/$/;"	m	struct:ovs_action_push_vlan
vlan_tso	datapath/linux/compat/gso.c	52;"	d	file:
vlan_tso	datapath/linux/gso.c	52;"	d	file:
vlan_tunnel	lib/sflow.h	/^    SFLExtended_vlan_tunnel vlan_tunnel;$/;"	m	union:_SFLFlow_type
vlan_vid	lib/ofp-actions.h	/^    uint16_t vlan_vid;          \/* VLAN VID in low 12 bits, 0 in other bits. *\/$/;"	m	struct:ofpact_vlan_vid
vlandev	lib/vlandev.c	/^VLOG_DEFINE_THIS_MODULE(vlandev);$/;"	v
vlandev_add	lib/vlandev.c	/^vlandev_add(const char *real_dev, int vid)$/;"	f
vlandev_add__	lib/vlandev.c	/^vlandev_add__(const char *vlan_dev, const char *real_dev, int vid)$/;"	f	file:
vlandev_class	lib/vlandev.c	/^struct vlandev_class {$/;"	s	file:
vlandev_clear__	lib/vlandev.c	/^vlandev_clear__(void)$/;"	f	file:
vlandev_del	lib/vlandev.c	/^vlandev_del(const char *vlan_dev)$/;"	f
vlandev_del__	lib/vlandev.c	/^vlandev_del__(const char *vlan_dev)$/;"	f	file:
vlandev_dummy_add	lib/vlandev.c	/^vlandev_dummy_add(const char *real_dev, int vid)$/;"	f	file:
vlandev_dummy_class	lib/vlandev.c	/^static const struct vlandev_class vlandev_dummy_class = {$/;"	v	typeref:struct:vlandev_class	file:
vlandev_dummy_class	lib/vlandev.c	/^static const struct vlandev_class vlandev_dummy_class;$/;"	v	typeref:struct:vlandev_class	file:
vlandev_dummy_del	lib/vlandev.c	/^vlandev_dummy_del(const char *vlan_dev)$/;"	f	file:
vlandev_dummy_enable	lib/vlandev.c	/^vlandev_dummy_enable(void)$/;"	f
vlandev_find	ofproto/ofproto-dpif.c	/^vlandev_find(const struct ofproto_dpif *ofproto, ofp_port_t vlandev_ofp_port)$/;"	f	file:
vlandev_get_class	lib/vlandev.c	/^vlandev_get_class(void)$/;"	f	file:
vlandev_get_name	lib/vlandev.c	/^vlandev_get_name(const char *real_dev_name, int vid)$/;"	f
vlandev_get_real_devs	lib/vlandev.c	/^vlandev_get_real_devs(void)$/;"	f
vlandev_linux_add	lib/vlandev.c	/^vlandev_linux_add(const char *real_dev, int vid)$/;"	f	file:
vlandev_linux_class	lib/vlandev.c	/^static const struct vlandev_class vlandev_linux_class = {$/;"	v	typeref:struct:vlandev_class	file:
vlandev_linux_class	lib/vlandev.c	/^static const struct vlandev_class vlandev_linux_class;$/;"	v	typeref:struct:vlandev_class	file:
vlandev_linux_del	lib/vlandev.c	/^vlandev_linux_del(const char *vlan_dev)$/;"	f	file:
vlandev_linux_refresh	lib/vlandev.c	/^vlandev_linux_refresh(void)$/;"	f	file:
vlandev_node	ofproto/ofproto-dpif.c	/^    struct hmap_node vlandev_node;$/;"	m	struct:vlan_splinter	typeref:struct:vlan_splinter::hmap_node	file:
vlandev_ofp_port	ofproto/ofproto-dpif.c	/^    ofp_port_t vlandev_ofp_port;$/;"	m	struct:vlan_splinter	file:
vlandev_refresh	lib/vlandev.c	/^vlandev_refresh(void)$/;"	f
vlandev_stub_add	lib/vlandev.c	/^vlandev_stub_add(const char *real_dev OVS_UNUSED, int vid OVS_UNUSED)$/;"	f	file:
vlandev_stub_class	lib/vlandev.c	/^static const struct vlandev_class OVS_UNUSED vlandev_stub_class = {$/;"	v	typeref:struct:OVS_UNUSED	file:
vlandev_stub_class	lib/vlandev.c	/^static const struct vlandev_class vlandev_stub_class;$/;"	v	typeref:struct:vlandev_class	file:
vlandev_stub_del	lib/vlandev.c	/^vlandev_stub_del(const char *vlan_dev OVS_UNUSED)$/;"	f	file:
vlandev_vid	ofproto/ofproto-dpif.c	/^    int vlandev_vid;$/;"	m	struct:ofport_dpif	file:
vlans	ofproto/ofproto-dpif-mirror.c	/^    unsigned long *vlans;       \/* Bitmap of chosen VLANs, NULL selects all. *\/$/;"	m	struct:mirror	file:
vlans_changed	ofproto/ofproto-provider.h	/^    bool vlans_changed;             \/* True if new VLANs are in use. *\/$/;"	m	struct:ofproto
vll_vc_id	lib/sflow.h	/^    u_int32_t vll_vc_id;        \/* VLL\/VC instance ID *\/$/;"	m	struct:_SFLExtended_mpls_vc
vlog	debian/ovs-monitor-ipsec	/^import ovs.vlog$/;"	i
vlog	debian/ovs-monitor-ipsec	/^vlog = ovs.vlog.Vlog("ovs-monitor-ipsec")$/;"	v
vlog	lib/vlog.c	/^VLOG_DEFINE_THIS_MODULE(vlog);$/;"	v
vlog	lib/vlog.c	/^vlog(const struct vlog_module *module, enum vlog_level level,$/;"	f
vlog	python/ovs/daemon.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/daemon.py	/^vlog = ovs.vlog.Vlog("daemon")$/;"	v
vlog	python/ovs/db/idl.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/db/idl.py	/^vlog = ovs.vlog.Vlog("idl")$/;"	v
vlog	python/ovs/fatal_signal.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/fatal_signal.py	/^vlog = ovs.vlog.Vlog("fatal-signal")$/;"	v
vlog	python/ovs/jsonrpc.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/jsonrpc.py	/^vlog = ovs.vlog.Vlog("jsonrpc")$/;"	v
vlog	python/ovs/poller.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/poller.py	/^vlog = ovs.vlog.Vlog("poller")$/;"	v
vlog	python/ovs/reconnect.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/reconnect.py	/^vlog = ovs.vlog.Vlog("reconnect")$/;"	v
vlog	python/ovs/socket_util.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/socket_util.py	/^vlog = ovs.vlog.Vlog("socket_util")$/;"	v
vlog	python/ovs/stream.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/stream.py	/^vlog = ovs.vlog.Vlog("stream")$/;"	v
vlog	python/ovs/unixctl/client.py	/^vlog = ovs.vlog.Vlog("unixctl_client")$/;"	v
vlog	python/ovs/unixctl/server.py	/^import ovs.vlog$/;"	i
vlog	python/ovs/unixctl/server.py	/^vlog = ovs.vlog.Vlog("unixctl_server")$/;"	v
vlog	tests/appctl.py	/^import ovs.vlog$/;"	i
vlog	tests/test-unixctl.py	/^vlog = ovs.vlog.Vlog("test-unixctl")$/;"	v
vlog	tests/test-vlog.py	/^import ovs.vlog$/;"	i
vlog	vtep/ovs-vtep	/^import ovs.vlog$/;"	i
vlog	vtep/ovs-vtep	/^vlog = ovs.vlog.Vlog("ovs-vtep")$/;"	v
vlog	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^vlog = ovs.vlog.Vlog("ovs-xapi-sync")$/;"	v
vlog_abort	lib/vlog.c	/^vlog_abort(const struct vlog_module *module, const char *message, ...)$/;"	f
vlog_abort_valist	lib/vlog.c	/^vlog_abort_valist(const struct vlog_module *module_,$/;"	f
vlog_destination	include/openvswitch/vlog.h	/^enum vlog_destination {$/;"	g
vlog_disable_rate_limit	lib/vlog.c	/^vlog_disable_rate_limit(struct unixctl_conn *conn, int argc,$/;"	f	file:
vlog_enable_async	lib/vlog.c	/^vlog_enable_async(void)$/;"	f
vlog_enable_rate_limit	lib/vlog.c	/^vlog_enable_rate_limit(struct unixctl_conn *conn, int argc,$/;"	f	file:
vlog_facilities	lib/vlog.c	/^static struct vlog_facility vlog_facilities[] = {$/;"	v	typeref:struct:vlog_facility	file:
vlog_facility	lib/vlog.c	/^struct vlog_facility {$/;"	s	file:
vlog_facility_exists	lib/vlog.c	/^vlog_facility_exists(const char* facility, int *value)$/;"	f	file:
vlog_fatal	lib/vlog.c	/^vlog_fatal(const struct vlog_module *module, const char *message, ...)$/;"	f
vlog_fatal_valist	lib/vlog.c	/^vlog_fatal_valist(const struct vlog_module *module_,$/;"	f
vlog_get_destination_name	lib/vlog.c	/^vlog_get_destination_name(enum vlog_destination destination)$/;"	f
vlog_get_destination_val	lib/vlog.c	/^vlog_get_destination_val(const char *name)$/;"	f
vlog_get_level	lib/vlog.c	/^vlog_get_level(const struct vlog_module *module,$/;"	f
vlog_get_level_name	lib/vlog.c	/^vlog_get_level_name(enum vlog_level level)$/;"	f
vlog_get_level_val	lib/vlog.c	/^vlog_get_level_val(const char *name)$/;"	f
vlog_get_levels	lib/vlog.c	/^vlog_get_levels(void)$/;"	f
vlog_get_module_name	lib/vlog.c	/^vlog_get_module_name(const struct vlog_module *module)$/;"	f
vlog_get_patterns	lib/vlog.c	/^vlog_get_patterns(void)$/;"	f
vlog_init	lib/vlog.c	/^vlog_init(void)$/;"	f
vlog_insert_module	lib/vlog.c	/^void vlog_insert_module(struct ovs_list *vlog)$/;"	f
vlog_is_enabled	lib/vlog.c	/^vlog_is_enabled(const struct vlog_module *module, enum vlog_level level)$/;"	f
vlog_level	include/openvswitch/vlog.h	/^enum vlog_level {$/;"	g
vlog_module	include/openvswitch/vlog.h	/^struct vlog_module {$/;"	s
vlog_module_from_name	lib/vlog.c	/^vlog_module_from_name(const char *name)$/;"	f
vlog_modules	lib/vlog.c	/^struct ovs_list vlog_modules = OVS_LIST_INITIALIZER(&vlog_modules);$/;"	v	typeref:struct:ovs_list
vlog_rate_limit	include/openvswitch/vlog.h	/^struct vlog_rate_limit {$/;"	s
vlog_rate_limit	lib/vlog.c	/^vlog_rate_limit(const struct vlog_module *module, enum vlog_level level,$/;"	f
vlog_reopen_log_file	lib/vlog.c	/^vlog_reopen_log_file(void)$/;"	f
vlog_set_levels	lib/vlog.c	/^vlog_set_levels(struct vlog_module *module, enum vlog_destination destination,$/;"	f
vlog_set_levels_from_string	lib/vlog.c	/^vlog_set_levels_from_string(const char *s_)$/;"	f
vlog_set_levels_from_string_assert	lib/vlog.c	/^vlog_set_levels_from_string_assert(const char *s)$/;"	f
vlog_set_log_file	lib/vlog.c	/^vlog_set_log_file(const char *file_name)$/;"	f
vlog_set_pattern	lib/vlog.c	/^vlog_set_pattern(enum vlog_destination destination, const char *pattern)$/;"	f
vlog_set_syslog_method	lib/vlog.c	/^vlog_set_syslog_method(const char *method)$/;"	f
vlog_set_syslog_target	lib/vlog.c	/^vlog_set_syslog_target(const char *target)$/;"	f
vlog_set_verbosity	lib/vlog.c	/^vlog_set_verbosity(const char *arg)$/;"	f
vlog_should_drop	lib/vlog.c	/^vlog_should_drop(const struct vlog_module *module, enum vlog_level level,$/;"	f
vlog_unixctl_list	lib/vlog.c	/^vlog_unixctl_list(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
vlog_unixctl_list_pattern	lib/vlog.c	/^vlog_unixctl_list_pattern(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
vlog_unixctl_reopen	lib/vlog.c	/^vlog_unixctl_reopen(struct unixctl_conn *conn, int argc OVS_UNUSED,$/;"	f	file:
vlog_unixctl_set	lib/vlog.c	/^vlog_unixctl_set(struct unixctl_conn *conn, int argc, const char *argv[],$/;"	f	file:
vlog_usage	lib/vlog.c	/^vlog_usage(void)$/;"	f
vlog_valist	lib/vlog.c	/^vlog_valist(const struct vlog_module *module, enum vlog_level level,$/;"	f
vmMACAddress	datapath-windows/ovsext/DpInternal.h	/^    uint8_t vmMACAddress[ETH_ADDR_LEN];$/;"	m	struct:_OVS_VPORT_EXT_INFO
vmMacAddress	datapath-windows/ovsext/Vport.h	/^    UINT8                  vmMacAddress[ETH_ADDR_LEN];$/;"	m	struct:_OVS_VPORT_ENTRY
vmName	datapath-windows/ovsext/Vport.h	/^    NDIS_VM_NAME           vmName;$/;"	m	struct:_OVS_VPORT_ENTRY
vmUUID	datapath-windows/ovsext/DpInternal.h	/^    char vmUUID[OVS_MAX_VM_UUID_LEN];$/;"	m	struct:_OVS_VPORT_EXT_INFO
vni	datapath/linux/compat/include/net/geneve.h	/^	u8 vni[3];$/;"	m	struct:genevehdr
vni	datapath/linux/compat/include/net/vxlan.h	/^	__be32		vni;$/;"	m	struct:vxlan_metadata
vni	lib/geneve.h	/^    ovs_16aligned_be32 vni;$/;"	m	struct:genevehdr
vni	lib/sflow.h	/^    uint32_t vni;            \/* virtual network identifier *\/$/;"	m	struct:_SFLExtended_vni
vni_to_tunnel_id	datapath/linux/vport-geneve.c	/^static __be64 vni_to_tunnel_id(const __u8 *vni)$/;"	f	file:
vni_to_tunnel_id	datapath/vport-geneve.c	/^static __be64 vni_to_tunnel_id(const __u8 *vni)$/;"	f	file:
vport	datapath-windows/ovsext/Vport.c	/^    POVS_VPORT_ENTRY vport;$/;"	m	struct:_OVS_TUNFLT_INIT_CONTEXT	file:
vport	datapath/linux/vport-internal_dev.c	/^	struct vport *vport;$/;"	m	struct:internal_dev	typeref:struct:internal_dev::vport	file:
vport	datapath/vport-internal_dev.c	/^	struct vport *vport;$/;"	m	struct:internal_dev	typeref:struct:internal_dev::vport	file:
vport	datapath/vport.h	/^struct vport {$/;"	s
vport_add_channels	lib/dpif-netlink.c	/^vport_add_channels(struct dpif_netlink *dpif, odp_port_t port_no,$/;"	f	file:
vport_class	lib/netdev-vport.c	/^struct vport_class {$/;"	s	file:
vport_class_cast	lib/netdev-vport.c	/^vport_class_cast(const struct netdev_class *class)$/;"	f	file:
vport_create_socksp	lib/dpif-netlink.c	/^vport_create_socksp(struct dpif_netlink *dpif, int *error)$/;"	f	file:
vport_create_socksp__	lib/dpif-netlink.c	/^vport_create_socksp__(uint32_t n_socks, int *error)$/;"	f	file:
vport_del_channels	lib/dpif-netlink.c	/^vport_del_channels(struct dpif_netlink *dpif, odp_port_t port_no)$/;"	f	file:
vport_del_socksp	lib/dpif-netlink.c	/^vport_del_socksp(struct dpif_netlink *dpif, struct nl_sock **socksp)$/;"	f	file:
vport_del_socksp__	lib/dpif-netlink.c	/^vport_del_socksp__(struct nl_sock **socksp, uint32_t n_socks)$/;"	f	file:
vport_del_socksp_windows	lib/dpif-netlink.c	/^vport_del_socksp_windows(struct dpif_netlink *dpif, struct nl_sock **socksp)$/;"	f	file:
vport_err_stats	datapath/vport.h	/^struct vport_err_stats {$/;"	s
vport_err_type	datapath/vport.h	/^enum vport_err_type {$/;"	g
vport_from_priv	datapath/vport.h	/^static inline struct vport *vport_from_priv(void *priv)$/;"	f
vport_geneve_sources	datapath/Makefile	/^vport_geneve_sources = vport-geneve.c$/;"	m
vport_geneve_sources	datapath/Modules.mk	/^vport_geneve_sources = vport-geneve.c$/;"	m
vport_get_pids	lib/dpif-netlink.c	/^vport_get_pids(struct dpif_netlink *dpif, uint32_t port_idx,$/;"	f	file:
vport_gre_sources	datapath/Makefile	/^vport_gre_sources = vport-gre.c$/;"	m
vport_gre_sources	datapath/Modules.mk	/^vport_gre_sources = vport-gre.c$/;"	m
vport_hash_bucket	datapath/datapath.c	/^static struct hlist_head *vport_hash_bucket(const struct datapath *dp,$/;"	f	file:
vport_hash_bucket	datapath/linux/datapath.c	/^static struct hlist_head *vport_hash_bucket(const struct datapath *dp,$/;"	f	file:
vport_lisp_sources	datapath/Makefile	/^vport_lisp_sources = vport-lisp.c$/;"	m
vport_lisp_sources	datapath/Modules.mk	/^vport_lisp_sources = vport-lisp.c$/;"	m
vport_net	datapath/datapath.h	/^	struct vport_net vport_net;$/;"	m	struct:ovs_net	typeref:struct:ovs_net::vport_net
vport_net	datapath/vport.h	/^struct vport_net {$/;"	s
vport_ops	datapath/vport.h	/^struct vport_ops {$/;"	s
vport_parms	datapath/vport.h	/^struct vport_parms {$/;"	s
vport_policy	datapath/datapath.c	/^static const struct nla_policy vport_policy[OVS_VPORT_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
vport_policy	datapath/linux/datapath.c	/^static const struct nla_policy vport_policy[OVS_VPORT_ATTR_MAX + 1] = {$/;"	v	typeref:struct:nla_policy	file:
vport_portids	datapath/vport.h	/^struct vport_portids {$/;"	s
vport_portids_destroy_rcu_cb	datapath/linux/vport.c	/^static void vport_portids_destroy_rcu_cb(struct rcu_head *rcu)$/;"	f	file:
vport_portids_destroy_rcu_cb	datapath/vport.c	/^static void vport_portids_destroy_rcu_cb(struct rcu_head *rcu)$/;"	f	file:
vport_priv	datapath/vport.h	/^static inline void *vport_priv(const struct vport *vport)$/;"	f
vport_sock_pool	lib/dpif-netlink.c	/^    struct dpif_windows_vport_sock *vport_sock_pool;$/;"	m	struct:dpif_handler	typeref:struct:dpif_handler::dpif_windows_vport_sock	file:
vport_socksp_to_pids	lib/dpif-netlink.c	/^vport_socksp_to_pids(struct nl_sock **socksp, uint32_t n_socks)$/;"	f	file:
vport_stats_error	lib/netdev-linux.c	/^    int vport_stats_error;      \/* Cached error code from vport_get_stats().$/;"	m	struct:netdev_linux	file:
vport_stt_sources	datapath/Makefile	/^vport_stt_sources = vport-stt.c$/;"	m
vport_stt_sources	datapath/Modules.mk	/^vport_stt_sources = vport-stt.c$/;"	m
vport_vxlan_sources	datapath/Makefile	/^vport_vxlan_sources = vport-vxlan.c$/;"	m
vport_vxlan_sources	datapath/Modules.mk	/^vport_vxlan_sources = vport-vxlan.c$/;"	m
vs	datapath/linux/vport-vxlan.c	/^	struct vxlan_sock *vs;$/;"	m	struct:vxlan_port	typeref:struct:vxlan_port::vxlan_sock	file:
vs	datapath/vport-vxlan.c	/^	struct vxlan_sock *vs;$/;"	m	struct:vxlan_port	typeref:struct:vxlan_port::vxlan_sock	file:
vsctl	utilities/ovs-vsctl.c	/^VLOG_DEFINE_THIS_MODULE(vsctl);$/;"	v
vsctl	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^vsctl = '\/usr\/bin\/ovs-vsctl'$/;"	v
vsctl	xenserver/usr_lib_xsconsole_plugins-base_XSFeatureVSwitch.py	/^vsctl="\/usr\/bin\/ovs-vsctl"$/;"	v
vsctl_bridge	utilities/ovs-vsctl.c	/^struct vsctl_bridge {$/;"	s	file:
vsctl_cmd_init	utilities/ovs-vsctl.c	/^vsctl_cmd_init(void)$/;"	f	file:
vsctl_commands	utilities/ovs-vsctl.c	/^static const struct ctl_command_syntax vsctl_commands[] = {$/;"	v	typeref:struct:ctl_command_syntax	file:
vsctl_context	utilities/ovs-vsctl.c	/^struct vsctl_context {$/;"	s	file:
vsctl_context_cast	utilities/ovs-vsctl.c	/^vsctl_context_cast(struct ctl_context *base)$/;"	f	file:
vsctl_context_done	utilities/ovs-vsctl.c	/^vsctl_context_done(struct vsctl_context *vsctl_ctx,$/;"	f	file:
vsctl_context_done_command	utilities/ovs-vsctl.c	/^vsctl_context_done_command(struct vsctl_context *vsctl_ctx,$/;"	f	file:
vsctl_context_init	utilities/ovs-vsctl.c	/^vsctl_context_init(struct vsctl_context *vsctl_ctx,$/;"	f	file:
vsctl_context_init_command	utilities/ovs-vsctl.c	/^vsctl_context_init_command(struct vsctl_context *vsctl_ctx,$/;"	f	file:
vsctl_context_invalidate_cache	utilities/ovs-vsctl.c	/^vsctl_context_invalidate_cache(struct ctl_context *ctx)$/;"	f	file:
vsctl_context_populate_cache	utilities/ovs-vsctl.c	/^vsctl_context_populate_cache(struct ctl_context *ctx)$/;"	f	file:
vsctl_context_to_string	utilities/ovs-vsctl.c	/^vsctl_context_to_string(const struct ctl_context *ctx)$/;"	f	file:
vsctl_escape	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def vsctl_escape(s):$/;"	f
vsctl_exit	utilities/ovs-vsctl.c	/^vsctl_exit(int status)$/;"	f	file:
vsctl_iface	utilities/ovs-vsctl.c	/^struct vsctl_iface {$/;"	s	file:
vsctl_port	utilities/ovs-vsctl.c	/^struct vsctl_port {$/;"	s	file:
vsm	include/openflow/nicira-ext.h	/^    struct ofp10_vendor_stats_msg vsm; \/* Vendor NX_VENDOR_ID. *\/$/;"	m	struct:nicira10_stats_msg	typeref:struct:nicira10_stats_msg::ofp10_vendor_stats_msg
vsm	include/openflow/nicira-ext.h	/^    struct ofp11_vendor_stats_msg vsm; \/* Vendor NX_VENDOR_ID. *\/$/;"	m	struct:nicira11_stats_msg	typeref:struct:nicira11_stats_msg::ofp11_vendor_stats_msg
vsnprintf	lib/stdio.c	24;"	d	file:
vsnprintf	lib/stdio.h	39;"	d
vsnprintf	lib/stdio.h	40;"	d
vsp_add	ofproto/ofproto-dpif.c	/^vsp_add(struct ofport_dpif *port, ofp_port_t realdev_ofp_port, int vid)$/;"	f	file:
vsp_adjusted	ofproto/ofproto-dpif-upcall.c	/^    bool vsp_adjusted;             \/* 'packet' and 'flow' were adjusted for$/;"	m	struct:upcall	file:
vsp_mutex	ofproto/ofproto-dpif.c	/^    struct ovs_mutex vsp_mutex;$/;"	m	struct:ofproto_dpif	typeref:struct:ofproto_dpif::ovs_mutex	file:
vsp_remove	ofproto/ofproto-dpif.c	/^vsp_remove(struct ofport_dpif *port)$/;"	f	file:
vswitch	python/ovstest/rpcserver.py	/^import vswitch$/;"	i
vswitchCfgMod	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def vswitchCfgMod(action_args):$/;"	f
vswitchCfgQuery	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def vswitchCfgQuery(action_args):$/;"	f
vswitchCfgQuery	xenserver/opt_xensource_libexec_InterfaceReconfigureVswitch.py	/^def vswitchCfgQuery(action_args):$/;"	f
vswitchCurrentControllers	xenserver/etc_xapi.d_plugins_openvswitch-cfg-update	/^def vswitchCurrentControllers():$/;"	f
vswitchd	vswitchd/ovs-vswitchd.c	/^VLOG_DEFINE_THIS_MODULE(vswitchd);$/;"	v
vswitchd_ovs_vswitchd_DEPENDENCIES	Makefile	/^vswitchd_ovs_vswitchd_DEPENDENCIES = ofproto\/libofproto.la \\$/;"	m
vswitchd_ovs_vswitchd_LDADD	Makefile	/^vswitchd_ovs_vswitchd_LDADD = \\$/;"	m
vswitchd_ovs_vswitchd_LDADD	vswitchd/automake.mk	/^vswitchd_ovs_vswitchd_LDADD = \\$/;"	m
vswitchd_ovs_vswitchd_LDFLAGS	Makefile	/^vswitchd_ovs_vswitchd_LDFLAGS = $(AM_LDFLAGS) $(DPDK_vswitchd_LDFLAGS)$/;"	m
vswitchd_ovs_vswitchd_LDFLAGS	vswitchd/automake.mk	/^vswitchd_ovs_vswitchd_LDFLAGS = $(AM_LDFLAGS) $(DPDK_vswitchd_LDFLAGS)$/;"	m
vswitchd_ovs_vswitchd_LINK	Makefile	/^vswitchd_ovs_vswitchd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
vswitchd_ovs_vswitchd_OBJECTS	Makefile	/^vswitchd_ovs_vswitchd_OBJECTS = $(am_vswitchd_ovs_vswitchd_OBJECTS)$/;"	m
vswitchd_ovs_vswitchd_SOURCES	Makefile	/^vswitchd_ovs_vswitchd_SOURCES = \\$/;"	m
vswitchd_ovs_vswitchd_SOURCES	vswitchd/automake.mk	/^vswitchd_ovs_vswitchd_SOURCES = \\$/;"	m
vsz	vswitchd/system-stats.c	/^    unsigned long int vsz;      \/* Virtual size, in kB. *\/$/;"	m	struct:process_info	file:
vsz	vswitchd/system-stats.c	/^    unsigned long int vsz;      \/* Virtual size, in kB. *\/$/;"	m	struct:raw_process_info	file:
vtep	ovn/controller-vtep/vtep.c	/^VLOG_DEFINE_THIS_MODULE(vtep);$/;"	v
vtep_cleanup	ovn/controller-vtep/vtep.c	/^vtep_cleanup(struct controller_vtep_ctx *ctx)$/;"	f
vtep_commands	vtep/vtep-ctl.c	/^static const struct ctl_command_syntax vtep_commands[] = {$/;"	v	typeref:struct:ctl_command_syntax	file:
vtep_ctl	vtep/ovs-vtep	/^def vtep_ctl(args):$/;"	f
vtep_ctl	vtep/vtep-ctl.c	/^VLOG_DEFINE_THIS_MODULE(vtep_ctl);$/;"	v
vtep_ctl_cmd_init	vtep/vtep-ctl.c	/^vtep_ctl_cmd_init(void)$/;"	f	file:
vtep_ctl_context	vtep/vtep-ctl.c	/^struct vtep_ctl_context {$/;"	s	file:
vtep_ctl_context_cast	vtep/vtep-ctl.c	/^vtep_ctl_context_cast(struct ctl_context *base)$/;"	f	file:
vtep_ctl_context_done	vtep/vtep-ctl.c	/^vtep_ctl_context_done(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
vtep_ctl_context_done_command	vtep/vtep-ctl.c	/^vtep_ctl_context_done_command(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
vtep_ctl_context_init	vtep/vtep-ctl.c	/^vtep_ctl_context_init(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
vtep_ctl_context_init_command	vtep/vtep-ctl.c	/^vtep_ctl_context_init_command(struct vtep_ctl_context *vtepctl_ctx,$/;"	f	file:
vtep_ctl_context_invalidate_cache	vtep/vtep-ctl.c	/^vtep_ctl_context_invalidate_cache(struct ctl_context *ctx)$/;"	f	file:
vtep_ctl_context_populate_cache	vtep/vtep-ctl.c	/^vtep_ctl_context_populate_cache(struct ctl_context *ctx)$/;"	f	file:
vtep_ctl_exit	vtep/vtep-ctl.c	/^vtep_ctl_exit(int status)$/;"	f	file:
vtep_ctl_lswitch	vtep/vtep-ctl.c	/^struct vtep_ctl_lswitch {$/;"	s	file:
vtep_ctl_mcast_mac	vtep/vtep-ctl.c	/^struct vtep_ctl_mcast_mac {$/;"	s	file:
vtep_ctl_ploc	vtep/vtep-ctl.c	/^struct vtep_ctl_ploc {$/;"	s	file:
vtep_ctl_port	vtep/vtep-ctl.c	/^struct vtep_ctl_port {$/;"	s	file:
vtep_ctl_pswitch	vtep/vtep-ctl.c	/^struct vtep_ctl_pswitch {$/;"	s	file:
vtep_delete_pswitch	vtep/vtep-ctl.c	/^vtep_delete_pswitch(const struct vteprec_global *vtep_global,$/;"	f	file:
vtep_global	vtep/vtep-ctl.c	/^    const struct vteprec_global *vtep_global;$/;"	m	struct:vtep_ctl_context	typeref:struct:vtep_ctl_context::vteprec_global	file:
vtep_idl	ovn/controller-vtep/ovn-controller-vtep.h	/^    struct ovsdb_idl *vtep_idl;$/;"	m	struct:controller_vtep_ctx	typeref:struct:controller_vtep_ctx::ovsdb_idl
vtep_idl_txn	ovn/controller-vtep/ovn-controller-vtep.h	/^    struct ovsdb_idl_txn *vtep_idl_txn;$/;"	m	struct:controller_vtep_ctx	typeref:struct:controller_vtep_ctx::ovsdb_idl_txn
vtep_insert_pswitch	vtep/vtep-ctl.c	/^vtep_insert_pswitch(const struct vteprec_global *vtep_global,$/;"	f	file:
vtep_libvtep_la_LDFLAGS	Makefile	/^vtep_libvtep_la_LDFLAGS = \\$/;"	m
vtep_libvtep_la_LDFLAGS	vtep/automake.mk	/^vtep_libvtep_la_LDFLAGS = \\$/;"	m
vtep_libvtep_la_LIBADD	Makefile	/^vtep_libvtep_la_LIBADD =$/;"	m
vtep_libvtep_la_LINK	Makefile	/^vtep_libvtep_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
vtep_libvtep_la_OBJECTS	Makefile	/^vtep_libvtep_la_OBJECTS = $(nodist_vtep_libvtep_la_OBJECTS)$/;"	m
vtep_logical_switches	ovn/lib/ovn-sb-idl.h	/^	char **vtep_logical_switches;$/;"	m	struct:sbrec_chassis
vtep_lswitch_cleanup	ovn/controller-vtep/vtep.c	/^vtep_lswitch_cleanup(struct ovsdb_idl *vtep_idl)$/;"	f	file:
vtep_lswitch_run	ovn/controller-vtep/vtep.c	/^vtep_lswitch_run(struct shash *vtep_pbs, struct sset *vtep_pswitches,$/;"	f	file:
vtep_macs_cleanup	ovn/controller-vtep/vtep.c	/^vtep_macs_cleanup(struct ovsdb_idl *vtep_idl)$/;"	f	file:
vtep_macs_run	ovn/controller-vtep/vtep.c	/^vtep_macs_run(struct ovsdb_idl_txn *vtep_idl_txn, struct shash *ucast_macs_rmts,$/;"	f	file:
vtep_remote	ovn/controller-vtep/ovn-controller-vtep.c	/^static char *vtep_remote;$/;"	v	file:
vtep_run	ovn/controller-vtep/vtep.c	/^vtep_run(struct controller_vtep_ctx *ctx)$/;"	f
vtep_vtep_ctl_DEPENDENCIES	Makefile	/^vtep_vtep_ctl_DEPENDENCIES = vtep\/libvtep.la lib\/libopenvswitch.la$/;"	m
vtep_vtep_ctl_LDADD	Makefile	/^vtep_vtep_ctl_LDADD = vtep\/libvtep.la lib\/libopenvswitch.la$/;"	m
vtep_vtep_ctl_LDADD	vtep/automake.mk	/^vtep_vtep_ctl_LDADD = vtep\/libvtep.la lib\/libopenvswitch.la$/;"	m
vtep_vtep_ctl_OBJECTS	Makefile	/^vtep_vtep_ctl_OBJECTS = $(am_vtep_vtep_ctl_OBJECTS)$/;"	m
vtep_vtep_ctl_SOURCES	Makefile	/^vtep_vtep_ctl_SOURCES = vtep\/vtep-ctl.c$/;"	m
vtep_vtep_ctl_SOURCES	vtep/automake.mk	/^vtep_vtep_ctl_SOURCES = vtep\/vtep-ctl.c$/;"	m
vteprec_acl	vtep/vtep-idl.h	/^struct vteprec_acl {$/;"	s
vteprec_acl_cast	vtep/vtep-idl.c	/^vteprec_acl_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_acl_col_acl_entries	vtep/vtep-idl.h	38;"	d
vteprec_acl_col_acl_fault_status	vtep/vtep-idl.h	37;"	d
vteprec_acl_col_acl_name	vtep/vtep-idl.h	39;"	d
vteprec_acl_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_acl_columns[VTEPREC_ACL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_acl_columns_init	vtep/vtep-idl.c	/^vteprec_acl_columns_init(void)$/;"	f	file:
vteprec_acl_delete	vtep/vtep-idl.c	/^vteprec_acl_delete(const struct vteprec_acl *row)$/;"	f
vteprec_acl_entry	vtep/vtep-idl.h	/^struct vteprec_acl_entry {$/;"	s
vteprec_acl_entry_cast	vtep/vtep-idl.c	/^vteprec_acl_entry_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_acl_entry_col_acle_fault_status	vtep/vtep-idl.h	179;"	d
vteprec_acl_entry_col_action	vtep/vtep-idl.h	181;"	d
vteprec_acl_entry_col_dest_ip	vtep/vtep-idl.h	190;"	d
vteprec_acl_entry_col_dest_mac	vtep/vtep-idl.h	183;"	d
vteprec_acl_entry_col_dest_mask	vtep/vtep-idl.h	176;"	d
vteprec_acl_entry_col_dest_port_max	vtep/vtep-idl.h	185;"	d
vteprec_acl_entry_col_dest_port_min	vtep/vtep-idl.h	184;"	d
vteprec_acl_entry_col_direction	vtep/vtep-idl.h	173;"	d
vteprec_acl_entry_col_ethertype	vtep/vtep-idl.h	178;"	d
vteprec_acl_entry_col_icmp_code	vtep/vtep-idl.h	171;"	d
vteprec_acl_entry_col_icmp_type	vtep/vtep-idl.h	188;"	d
vteprec_acl_entry_col_protocol	vtep/vtep-idl.h	175;"	d
vteprec_acl_entry_col_sequence	vtep/vtep-idl.h	177;"	d
vteprec_acl_entry_col_source_ip	vtep/vtep-idl.h	180;"	d
vteprec_acl_entry_col_source_mac	vtep/vtep-idl.h	186;"	d
vteprec_acl_entry_col_source_mask	vtep/vtep-idl.h	172;"	d
vteprec_acl_entry_col_source_port_max	vtep/vtep-idl.h	174;"	d
vteprec_acl_entry_col_source_port_min	vtep/vtep-idl.h	189;"	d
vteprec_acl_entry_col_tcp_flags	vtep/vtep-idl.h	182;"	d
vteprec_acl_entry_col_tcp_flags_mask	vtep/vtep-idl.h	187;"	d
vteprec_acl_entry_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_acl_entry_columns[VTEPREC_ACL_ENTRY_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_acl_entry_columns_init	vtep/vtep-idl.c	/^vteprec_acl_entry_columns_init(void)$/;"	f	file:
vteprec_acl_entry_delete	vtep/vtep-idl.c	/^vteprec_acl_entry_delete(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_first	vtep/vtep-idl.c	/^vteprec_acl_entry_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_acl_entry_get_acle_fault_status	vtep/vtep-idl.c	/^vteprec_acl_entry_get_acle_fault_status(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_action	vtep/vtep-idl.c	/^vteprec_acl_entry_get_action(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_dest_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_get_dest_ip(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_dest_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_get_dest_mac(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_dest_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_get_dest_mask(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_dest_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_get_dest_port_max(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_dest_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_get_dest_port_min(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_direction	vtep/vtep-idl.c	/^vteprec_acl_entry_get_direction(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_ethertype	vtep/vtep-idl.c	/^vteprec_acl_entry_get_ethertype(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_for_uuid	vtep/vtep-idl.c	/^vteprec_acl_entry_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_acl_entry_get_icmp_code	vtep/vtep-idl.c	/^vteprec_acl_entry_get_icmp_code(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_icmp_type	vtep/vtep-idl.c	/^vteprec_acl_entry_get_icmp_type(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_protocol	vtep/vtep-idl.c	/^vteprec_acl_entry_get_protocol(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_sequence	vtep/vtep-idl.c	/^vteprec_acl_entry_get_sequence(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_source_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_get_source_ip(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_source_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_get_source_mac(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_source_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_get_source_mask(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_source_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_get_source_port_max(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_source_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_get_source_port_min(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_tcp_flags	vtep/vtep-idl.c	/^vteprec_acl_entry_get_tcp_flags(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_get_tcp_flags_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_get_tcp_flags_mask(const struct vteprec_acl_entry *row,$/;"	f
vteprec_acl_entry_init	vtep/vtep-idl.c	/^vteprec_acl_entry_init(struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_init__	vtep/vtep-idl.c	/^vteprec_acl_entry_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_acl_entry_insert	vtep/vtep-idl.c	/^vteprec_acl_entry_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_acl_entry_next	vtep/vtep-idl.c	/^vteprec_acl_entry_next(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_parse_acle_fault_status	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_acle_fault_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_action	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_action(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_dest_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_dest_ip(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_dest_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_dest_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_dest_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_dest_mask(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_dest_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_dest_port_max(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_dest_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_dest_port_min(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_direction	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_direction(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_ethertype	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_ethertype(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_icmp_code	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_icmp_code(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_icmp_type	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_icmp_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_protocol	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_protocol(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_sequence	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_sequence(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_source_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_source_ip(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_source_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_source_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_source_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_source_mask(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_source_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_source_port_max(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_source_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_source_port_min(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_tcp_flags	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_tcp_flags(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_parse_tcp_flags_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_parse_tcp_flags_mask(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_entry_set_acle_fault_status	vtep/vtep-idl.c	/^vteprec_acl_entry_set_acle_fault_status(const struct vteprec_acl_entry *row, const char **acle_fault_status, size_t n_acle_fault_status)$/;"	f
vteprec_acl_entry_set_action	vtep/vtep-idl.c	/^vteprec_acl_entry_set_action(const struct vteprec_acl_entry *row, const char *action)$/;"	f
vteprec_acl_entry_set_dest_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_set_dest_ip(const struct vteprec_acl_entry *row, const char *dest_ip)$/;"	f
vteprec_acl_entry_set_dest_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_set_dest_mac(const struct vteprec_acl_entry *row, const char *dest_mac)$/;"	f
vteprec_acl_entry_set_dest_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_set_dest_mask(const struct vteprec_acl_entry *row, const char *dest_mask)$/;"	f
vteprec_acl_entry_set_dest_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_set_dest_port_max(const struct vteprec_acl_entry *row, const int64_t *dest_port_max, size_t n_dest_port_max)$/;"	f
vteprec_acl_entry_set_dest_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_set_dest_port_min(const struct vteprec_acl_entry *row, const int64_t *dest_port_min, size_t n_dest_port_min)$/;"	f
vteprec_acl_entry_set_direction	vtep/vtep-idl.c	/^vteprec_acl_entry_set_direction(const struct vteprec_acl_entry *row, const char *direction)$/;"	f
vteprec_acl_entry_set_ethertype	vtep/vtep-idl.c	/^vteprec_acl_entry_set_ethertype(const struct vteprec_acl_entry *row, const char *ethertype)$/;"	f
vteprec_acl_entry_set_icmp_code	vtep/vtep-idl.c	/^vteprec_acl_entry_set_icmp_code(const struct vteprec_acl_entry *row, const int64_t *icmp_code, size_t n_icmp_code)$/;"	f
vteprec_acl_entry_set_icmp_type	vtep/vtep-idl.c	/^vteprec_acl_entry_set_icmp_type(const struct vteprec_acl_entry *row, const int64_t *icmp_type, size_t n_icmp_type)$/;"	f
vteprec_acl_entry_set_protocol	vtep/vtep-idl.c	/^vteprec_acl_entry_set_protocol(const struct vteprec_acl_entry *row, const int64_t *protocol, size_t n_protocol)$/;"	f
vteprec_acl_entry_set_sequence	vtep/vtep-idl.c	/^vteprec_acl_entry_set_sequence(const struct vteprec_acl_entry *row, int64_t sequence)$/;"	f
vteprec_acl_entry_set_source_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_set_source_ip(const struct vteprec_acl_entry *row, const char *source_ip)$/;"	f
vteprec_acl_entry_set_source_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_set_source_mac(const struct vteprec_acl_entry *row, const char *source_mac)$/;"	f
vteprec_acl_entry_set_source_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_set_source_mask(const struct vteprec_acl_entry *row, const char *source_mask)$/;"	f
vteprec_acl_entry_set_source_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_set_source_port_max(const struct vteprec_acl_entry *row, const int64_t *source_port_max, size_t n_source_port_max)$/;"	f
vteprec_acl_entry_set_source_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_set_source_port_min(const struct vteprec_acl_entry *row, const int64_t *source_port_min, size_t n_source_port_min)$/;"	f
vteprec_acl_entry_set_tcp_flags	vtep/vtep-idl.c	/^vteprec_acl_entry_set_tcp_flags(const struct vteprec_acl_entry *row, const int64_t *tcp_flags, size_t n_tcp_flags)$/;"	f
vteprec_acl_entry_set_tcp_flags_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_set_tcp_flags_mask(const struct vteprec_acl_entry *row, const int64_t *tcp_flags_mask, size_t n_tcp_flags_mask)$/;"	f
vteprec_acl_entry_unparse_acle_fault_status	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_acle_fault_status(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_action	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_action(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_dest_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_dest_ip(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_dest_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_dest_mac(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_dest_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_dest_mask(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_dest_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_dest_port_max(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_dest_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_dest_port_min(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_direction	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_direction(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_ethertype	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_ethertype(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_icmp_code	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_icmp_code(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_icmp_type	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_icmp_type(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_protocol	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_protocol(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_sequence	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_sequence(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_source_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_source_ip(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_source_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_source_mac(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_source_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_source_mask(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_entry_unparse_source_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_source_port_max(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_source_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_source_port_min(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_tcp_flags	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_tcp_flags(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_unparse_tcp_flags_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_unparse_tcp_flags_mask(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_entry_verify_acle_fault_status	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_acle_fault_status(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_action	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_action(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_dest_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_dest_ip(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_dest_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_dest_mac(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_dest_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_dest_mask(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_dest_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_dest_port_max(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_dest_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_dest_port_min(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_direction	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_direction(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_ethertype	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_ethertype(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_icmp_code	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_icmp_code(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_icmp_type	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_icmp_type(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_protocol	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_protocol(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_sequence	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_sequence(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_source_ip	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_source_ip(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_source_mac	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_source_mac(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_source_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_source_mask(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_source_port_max	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_source_port_max(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_source_port_min	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_source_port_min(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_tcp_flags	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_tcp_flags(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_entry_verify_tcp_flags_mask	vtep/vtep-idl.c	/^vteprec_acl_entry_verify_tcp_flags_mask(const struct vteprec_acl_entry *row)$/;"	f
vteprec_acl_first	vtep/vtep-idl.c	/^vteprec_acl_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_acl_get_acl_entries	vtep/vtep-idl.c	/^vteprec_acl_get_acl_entries(const struct vteprec_acl *row,$/;"	f
vteprec_acl_get_acl_fault_status	vtep/vtep-idl.c	/^vteprec_acl_get_acl_fault_status(const struct vteprec_acl *row,$/;"	f
vteprec_acl_get_acl_name	vtep/vtep-idl.c	/^vteprec_acl_get_acl_name(const struct vteprec_acl *row,$/;"	f
vteprec_acl_get_for_uuid	vtep/vtep-idl.c	/^vteprec_acl_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_acl_init	vtep/vtep-idl.c	/^vteprec_acl_init(struct vteprec_acl *row)$/;"	f
vteprec_acl_init__	vtep/vtep-idl.c	/^vteprec_acl_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_acl_insert	vtep/vtep-idl.c	/^vteprec_acl_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_acl_next	vtep/vtep-idl.c	/^vteprec_acl_next(const struct vteprec_acl *row)$/;"	f
vteprec_acl_parse_acl_entries	vtep/vtep-idl.c	/^vteprec_acl_parse_acl_entries(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_parse_acl_fault_status	vtep/vtep-idl.c	/^vteprec_acl_parse_acl_fault_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_parse_acl_name	vtep/vtep-idl.c	/^vteprec_acl_parse_acl_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_acl_set_acl_entries	vtep/vtep-idl.c	/^vteprec_acl_set_acl_entries(const struct vteprec_acl *row, struct vteprec_acl_entry **acl_entries, size_t n_acl_entries)$/;"	f
vteprec_acl_set_acl_fault_status	vtep/vtep-idl.c	/^vteprec_acl_set_acl_fault_status(const struct vteprec_acl *row, const char **acl_fault_status, size_t n_acl_fault_status)$/;"	f
vteprec_acl_set_acl_name	vtep/vtep-idl.c	/^vteprec_acl_set_acl_name(const struct vteprec_acl *row, const char *acl_name)$/;"	f
vteprec_acl_unparse_acl_entries	vtep/vtep-idl.c	/^vteprec_acl_unparse_acl_entries(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_unparse_acl_fault_status	vtep/vtep-idl.c	/^vteprec_acl_unparse_acl_fault_status(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_acl_unparse_acl_name	vtep/vtep-idl.c	/^vteprec_acl_unparse_acl_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_acl_verify_acl_entries	vtep/vtep-idl.c	/^vteprec_acl_verify_acl_entries(const struct vteprec_acl *row)$/;"	f
vteprec_acl_verify_acl_fault_status	vtep/vtep-idl.c	/^vteprec_acl_verify_acl_fault_status(const struct vteprec_acl *row)$/;"	f
vteprec_acl_verify_acl_name	vtep/vtep-idl.c	/^vteprec_acl_verify_acl_name(const struct vteprec_acl *row)$/;"	f
vteprec_arp_sources_local	vtep/vtep-idl.h	/^struct vteprec_arp_sources_local {$/;"	s
vteprec_arp_sources_local_cast	vtep/vtep-idl.c	/^vteprec_arp_sources_local_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_arp_sources_local_col_locator	vtep/vtep-idl.h	291;"	d
vteprec_arp_sources_local_col_src_mac	vtep/vtep-idl.h	292;"	d
vteprec_arp_sources_local_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_arp_sources_local_columns[VTEPREC_ARP_SOURCES_LOCAL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_arp_sources_local_columns_init	vtep/vtep-idl.c	/^vteprec_arp_sources_local_columns_init(void)$/;"	f	file:
vteprec_arp_sources_local_delete	vtep/vtep-idl.c	/^vteprec_arp_sources_local_delete(const struct vteprec_arp_sources_local *row)$/;"	f
vteprec_arp_sources_local_first	vtep/vtep-idl.c	/^vteprec_arp_sources_local_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_arp_sources_local_get_for_uuid	vtep/vtep-idl.c	/^vteprec_arp_sources_local_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_arp_sources_local_get_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_local_get_locator(const struct vteprec_arp_sources_local *row,$/;"	f
vteprec_arp_sources_local_get_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_local_get_src_mac(const struct vteprec_arp_sources_local *row,$/;"	f
vteprec_arp_sources_local_init	vtep/vtep-idl.c	/^vteprec_arp_sources_local_init(struct vteprec_arp_sources_local *row)$/;"	f
vteprec_arp_sources_local_init__	vtep/vtep-idl.c	/^vteprec_arp_sources_local_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_arp_sources_local_insert	vtep/vtep-idl.c	/^vteprec_arp_sources_local_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_arp_sources_local_next	vtep/vtep-idl.c	/^vteprec_arp_sources_local_next(const struct vteprec_arp_sources_local *row)$/;"	f
vteprec_arp_sources_local_parse_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_local_parse_locator(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_arp_sources_local_parse_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_local_parse_src_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_arp_sources_local_set_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_local_set_locator(const struct vteprec_arp_sources_local *row, const struct vteprec_physical_locator *locator)$/;"	f
vteprec_arp_sources_local_set_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_local_set_src_mac(const struct vteprec_arp_sources_local *row, const char *src_mac)$/;"	f
vteprec_arp_sources_local_unparse_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_local_unparse_locator(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_arp_sources_local_unparse_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_local_unparse_src_mac(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_arp_sources_local_verify_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_local_verify_locator(const struct vteprec_arp_sources_local *row)$/;"	f
vteprec_arp_sources_local_verify_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_local_verify_src_mac(const struct vteprec_arp_sources_local *row)$/;"	f
vteprec_arp_sources_remote	vtep/vtep-idl.h	/^struct vteprec_arp_sources_remote {$/;"	s
vteprec_arp_sources_remote_cast	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_arp_sources_remote_col_locator	vtep/vtep-idl.h	339;"	d
vteprec_arp_sources_remote_col_src_mac	vtep/vtep-idl.h	340;"	d
vteprec_arp_sources_remote_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_arp_sources_remote_columns[VTEPREC_ARP_SOURCES_REMOTE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_arp_sources_remote_columns_init	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_columns_init(void)$/;"	f	file:
vteprec_arp_sources_remote_delete	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_delete(const struct vteprec_arp_sources_remote *row)$/;"	f
vteprec_arp_sources_remote_first	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_arp_sources_remote_get_for_uuid	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_arp_sources_remote_get_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_get_locator(const struct vteprec_arp_sources_remote *row,$/;"	f
vteprec_arp_sources_remote_get_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_get_src_mac(const struct vteprec_arp_sources_remote *row,$/;"	f
vteprec_arp_sources_remote_init	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_init(struct vteprec_arp_sources_remote *row)$/;"	f
vteprec_arp_sources_remote_init__	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_arp_sources_remote_insert	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_arp_sources_remote_next	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_next(const struct vteprec_arp_sources_remote *row)$/;"	f
vteprec_arp_sources_remote_parse_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_parse_locator(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_arp_sources_remote_parse_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_parse_src_mac(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_arp_sources_remote_set_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_set_locator(const struct vteprec_arp_sources_remote *row, const struct vteprec_physical_locator *locator)$/;"	f
vteprec_arp_sources_remote_set_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_set_src_mac(const struct vteprec_arp_sources_remote *row, const char *src_mac)$/;"	f
vteprec_arp_sources_remote_unparse_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_unparse_locator(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_arp_sources_remote_unparse_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_unparse_src_mac(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_arp_sources_remote_verify_locator	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_verify_locator(const struct vteprec_arp_sources_remote *row)$/;"	f
vteprec_arp_sources_remote_verify_src_mac	vtep/vtep-idl.c	/^vteprec_arp_sources_remote_verify_src_mac(const struct vteprec_arp_sources_remote *row)$/;"	f
vteprec_get_db_version	vtep/vtep-idl.c	/^vteprec_get_db_version(void)$/;"	f
vteprec_global	vtep/vtep-idl.h	/^struct vteprec_global {$/;"	s
vteprec_global_cast	vtep/vtep-idl.c	/^vteprec_global_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_global_col_managers	vtep/vtep-idl.h	390;"	d
vteprec_global_col_switches	vtep/vtep-idl.h	389;"	d
vteprec_global_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_global_columns[VTEPREC_GLOBAL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_global_columns_init	vtep/vtep-idl.c	/^vteprec_global_columns_init(void)$/;"	f	file:
vteprec_global_delete	vtep/vtep-idl.c	/^vteprec_global_delete(const struct vteprec_global *row)$/;"	f
vteprec_global_first	vtep/vtep-idl.c	/^vteprec_global_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_global_get_for_uuid	vtep/vtep-idl.c	/^vteprec_global_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_global_get_managers	vtep/vtep-idl.c	/^vteprec_global_get_managers(const struct vteprec_global *row,$/;"	f
vteprec_global_get_switches	vtep/vtep-idl.c	/^vteprec_global_get_switches(const struct vteprec_global *row,$/;"	f
vteprec_global_init	vtep/vtep-idl.c	/^vteprec_global_init(struct vteprec_global *row)$/;"	f
vteprec_global_init__	vtep/vtep-idl.c	/^vteprec_global_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_global_insert	vtep/vtep-idl.c	/^vteprec_global_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_global_next	vtep/vtep-idl.c	/^vteprec_global_next(const struct vteprec_global *row)$/;"	f
vteprec_global_parse_managers	vtep/vtep-idl.c	/^vteprec_global_parse_managers(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_global_parse_switches	vtep/vtep-idl.c	/^vteprec_global_parse_switches(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_global_set_managers	vtep/vtep-idl.c	/^vteprec_global_set_managers(const struct vteprec_global *row, struct vteprec_manager **managers, size_t n_managers)$/;"	f
vteprec_global_set_switches	vtep/vtep-idl.c	/^vteprec_global_set_switches(const struct vteprec_global *row, struct vteprec_physical_switch **switches, size_t n_switches)$/;"	f
vteprec_global_unparse_managers	vtep/vtep-idl.c	/^vteprec_global_unparse_managers(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_global_unparse_switches	vtep/vtep-idl.c	/^vteprec_global_unparse_switches(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_global_verify_managers	vtep/vtep-idl.c	/^vteprec_global_verify_managers(const struct vteprec_global *row)$/;"	f
vteprec_global_verify_switches	vtep/vtep-idl.c	/^vteprec_global_verify_switches(const struct vteprec_global *row)$/;"	f
vteprec_idl_class	vtep/vtep-idl.c	/^struct ovsdb_idl_class vteprec_idl_class = {$/;"	v	typeref:struct:ovsdb_idl_class
vteprec_init	vtep/vtep-idl.c	/^vteprec_init(void)$/;"	f
vteprec_logical_binding_stats	vtep/vtep-idl.h	/^struct vteprec_logical_binding_stats {$/;"	s
vteprec_logical_binding_stats_cast	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_logical_binding_stats_col_bytes_from_local	vtep/vtep-idl.h	446;"	d
vteprec_logical_binding_stats_col_bytes_to_local	vtep/vtep-idl.h	445;"	d
vteprec_logical_binding_stats_col_packets_from_local	vtep/vtep-idl.h	447;"	d
vteprec_logical_binding_stats_col_packets_to_local	vtep/vtep-idl.h	448;"	d
vteprec_logical_binding_stats_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_logical_binding_stats_columns[VTEPREC_LOGICAL_BINDING_STATS_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_logical_binding_stats_columns_init	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_columns_init(void)$/;"	f	file:
vteprec_logical_binding_stats_delete	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_delete(const struct vteprec_logical_binding_stats *row)$/;"	f
vteprec_logical_binding_stats_first	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_logical_binding_stats_get_bytes_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_get_bytes_from_local(const struct vteprec_logical_binding_stats *row,$/;"	f
vteprec_logical_binding_stats_get_bytes_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_get_bytes_to_local(const struct vteprec_logical_binding_stats *row,$/;"	f
vteprec_logical_binding_stats_get_for_uuid	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_logical_binding_stats_get_packets_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_get_packets_from_local(const struct vteprec_logical_binding_stats *row,$/;"	f
vteprec_logical_binding_stats_get_packets_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_get_packets_to_local(const struct vteprec_logical_binding_stats *row,$/;"	f
vteprec_logical_binding_stats_init	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_init(struct vteprec_logical_binding_stats *row)$/;"	f
vteprec_logical_binding_stats_init__	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_logical_binding_stats_insert	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_logical_binding_stats_next	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_next(const struct vteprec_logical_binding_stats *row)$/;"	f
vteprec_logical_binding_stats_parse_bytes_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_parse_bytes_from_local(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_binding_stats_parse_bytes_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_parse_bytes_to_local(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_binding_stats_parse_packets_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_parse_packets_from_local(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_binding_stats_parse_packets_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_parse_packets_to_local(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_binding_stats_set_bytes_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_set_bytes_from_local(const struct vteprec_logical_binding_stats *row, int64_t bytes_from_local)$/;"	f
vteprec_logical_binding_stats_set_bytes_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_set_bytes_to_local(const struct vteprec_logical_binding_stats *row, int64_t bytes_to_local)$/;"	f
vteprec_logical_binding_stats_set_packets_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_set_packets_from_local(const struct vteprec_logical_binding_stats *row, int64_t packets_from_local)$/;"	f
vteprec_logical_binding_stats_set_packets_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_set_packets_to_local(const struct vteprec_logical_binding_stats *row, int64_t packets_to_local)$/;"	f
vteprec_logical_binding_stats_unparse_bytes_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_unparse_bytes_from_local(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_binding_stats_unparse_bytes_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_unparse_bytes_to_local(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_binding_stats_unparse_packets_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_unparse_packets_from_local(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_binding_stats_unparse_packets_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_unparse_packets_to_local(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_binding_stats_verify_bytes_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_verify_bytes_from_local(const struct vteprec_logical_binding_stats *row)$/;"	f
vteprec_logical_binding_stats_verify_bytes_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_verify_bytes_to_local(const struct vteprec_logical_binding_stats *row)$/;"	f
vteprec_logical_binding_stats_verify_packets_from_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_verify_packets_from_local(const struct vteprec_logical_binding_stats *row)$/;"	f
vteprec_logical_binding_stats_verify_packets_to_local	vtep/vtep-idl.c	/^vteprec_logical_binding_stats_verify_packets_to_local(const struct vteprec_logical_binding_stats *row)$/;"	f
vteprec_logical_router	vtep/vtep-idl.h	/^struct vteprec_logical_router {$/;"	s
vteprec_logical_router_cast	vtep/vtep-idl.c	/^vteprec_logical_router_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_logical_router_col_LR_fault_status	vtep/vtep-idl.h	522;"	d
vteprec_logical_router_col_acl_binding	vtep/vtep-idl.h	525;"	d
vteprec_logical_router_col_description	vtep/vtep-idl.h	523;"	d
vteprec_logical_router_col_name	vtep/vtep-idl.h	527;"	d
vteprec_logical_router_col_static_routes	vtep/vtep-idl.h	524;"	d
vteprec_logical_router_col_switch_binding	vtep/vtep-idl.h	526;"	d
vteprec_logical_router_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_logical_router_columns[VTEPREC_LOGICAL_ROUTER_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_logical_router_columns_init	vtep/vtep-idl.c	/^vteprec_logical_router_columns_init(void)$/;"	f	file:
vteprec_logical_router_delete	vtep/vtep-idl.c	/^vteprec_logical_router_delete(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_first	vtep/vtep-idl.c	/^vteprec_logical_router_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_logical_router_get_LR_fault_status	vtep/vtep-idl.c	/^vteprec_logical_router_get_LR_fault_status(const struct vteprec_logical_router *row,$/;"	f
vteprec_logical_router_get_acl_binding	vtep/vtep-idl.c	/^vteprec_logical_router_get_acl_binding(const struct vteprec_logical_router *row,$/;"	f
vteprec_logical_router_get_description	vtep/vtep-idl.c	/^vteprec_logical_router_get_description(const struct vteprec_logical_router *row,$/;"	f
vteprec_logical_router_get_for_uuid	vtep/vtep-idl.c	/^vteprec_logical_router_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_logical_router_get_name	vtep/vtep-idl.c	/^vteprec_logical_router_get_name(const struct vteprec_logical_router *row,$/;"	f
vteprec_logical_router_get_static_routes	vtep/vtep-idl.c	/^vteprec_logical_router_get_static_routes(const struct vteprec_logical_router *row,$/;"	f
vteprec_logical_router_get_switch_binding	vtep/vtep-idl.c	/^vteprec_logical_router_get_switch_binding(const struct vteprec_logical_router *row,$/;"	f
vteprec_logical_router_init	vtep/vtep-idl.c	/^vteprec_logical_router_init(struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_init__	vtep/vtep-idl.c	/^vteprec_logical_router_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_logical_router_insert	vtep/vtep-idl.c	/^vteprec_logical_router_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_logical_router_next	vtep/vtep-idl.c	/^vteprec_logical_router_next(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_parse_LR_fault_status	vtep/vtep-idl.c	/^vteprec_logical_router_parse_LR_fault_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_router_parse_acl_binding	vtep/vtep-idl.c	/^vteprec_logical_router_parse_acl_binding(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_router_parse_description	vtep/vtep-idl.c	/^vteprec_logical_router_parse_description(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_router_parse_name	vtep/vtep-idl.c	/^vteprec_logical_router_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_router_parse_static_routes	vtep/vtep-idl.c	/^vteprec_logical_router_parse_static_routes(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_router_parse_switch_binding	vtep/vtep-idl.c	/^vteprec_logical_router_parse_switch_binding(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_router_set_LR_fault_status	vtep/vtep-idl.c	/^vteprec_logical_router_set_LR_fault_status(const struct vteprec_logical_router *row, const char **LR_fault_status, size_t n_LR_fault_status)$/;"	f
vteprec_logical_router_set_acl_binding	vtep/vtep-idl.c	/^vteprec_logical_router_set_acl_binding(const struct vteprec_logical_router *row, const char **key_acl_binding, struct vteprec_acl **value_acl_binding, size_t n_acl_binding)$/;"	f
vteprec_logical_router_set_description	vtep/vtep-idl.c	/^vteprec_logical_router_set_description(const struct vteprec_logical_router *row, const char *description)$/;"	f
vteprec_logical_router_set_name	vtep/vtep-idl.c	/^vteprec_logical_router_set_name(const struct vteprec_logical_router *row, const char *name)$/;"	f
vteprec_logical_router_set_static_routes	vtep/vtep-idl.c	/^vteprec_logical_router_set_static_routes(const struct vteprec_logical_router *row, const struct smap *static_routes)$/;"	f
vteprec_logical_router_set_switch_binding	vtep/vtep-idl.c	/^vteprec_logical_router_set_switch_binding(const struct vteprec_logical_router *row, const char **key_switch_binding, struct vteprec_logical_switch **value_switch_binding, size_t n_switch_binding)$/;"	f
vteprec_logical_router_unparse_LR_fault_status	vtep/vtep-idl.c	/^vteprec_logical_router_unparse_LR_fault_status(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_logical_router_unparse_acl_binding	vtep/vtep-idl.c	/^vteprec_logical_router_unparse_acl_binding(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_logical_router_unparse_description	vtep/vtep-idl.c	/^vteprec_logical_router_unparse_description(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_router_unparse_name	vtep/vtep-idl.c	/^vteprec_logical_router_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_router_unparse_static_routes	vtep/vtep-idl.c	/^vteprec_logical_router_unparse_static_routes(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_logical_router_unparse_switch_binding	vtep/vtep-idl.c	/^vteprec_logical_router_unparse_switch_binding(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_logical_router_verify_LR_fault_status	vtep/vtep-idl.c	/^vteprec_logical_router_verify_LR_fault_status(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_verify_acl_binding	vtep/vtep-idl.c	/^vteprec_logical_router_verify_acl_binding(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_verify_description	vtep/vtep-idl.c	/^vteprec_logical_router_verify_description(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_verify_name	vtep/vtep-idl.c	/^vteprec_logical_router_verify_name(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_verify_static_routes	vtep/vtep-idl.c	/^vteprec_logical_router_verify_static_routes(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_router_verify_switch_binding	vtep/vtep-idl.c	/^vteprec_logical_router_verify_switch_binding(const struct vteprec_logical_router *row)$/;"	f
vteprec_logical_switch	vtep/vtep-idl.h	/^struct vteprec_logical_switch {$/;"	s
vteprec_logical_switch_cast	vtep/vtep-idl.c	/^vteprec_logical_switch_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_logical_switch_col_description	vtep/vtep-idl.h	592;"	d
vteprec_logical_switch_col_name	vtep/vtep-idl.h	593;"	d
vteprec_logical_switch_col_tunnel_key	vtep/vtep-idl.h	591;"	d
vteprec_logical_switch_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_logical_switch_columns[VTEPREC_LOGICAL_SWITCH_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_logical_switch_columns_init	vtep/vtep-idl.c	/^vteprec_logical_switch_columns_init(void)$/;"	f	file:
vteprec_logical_switch_delete	vtep/vtep-idl.c	/^vteprec_logical_switch_delete(const struct vteprec_logical_switch *row)$/;"	f
vteprec_logical_switch_first	vtep/vtep-idl.c	/^vteprec_logical_switch_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_logical_switch_get_description	vtep/vtep-idl.c	/^vteprec_logical_switch_get_description(const struct vteprec_logical_switch *row,$/;"	f
vteprec_logical_switch_get_for_uuid	vtep/vtep-idl.c	/^vteprec_logical_switch_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_logical_switch_get_name	vtep/vtep-idl.c	/^vteprec_logical_switch_get_name(const struct vteprec_logical_switch *row,$/;"	f
vteprec_logical_switch_get_tunnel_key	vtep/vtep-idl.c	/^vteprec_logical_switch_get_tunnel_key(const struct vteprec_logical_switch *row,$/;"	f
vteprec_logical_switch_init	vtep/vtep-idl.c	/^vteprec_logical_switch_init(struct vteprec_logical_switch *row)$/;"	f
vteprec_logical_switch_init__	vtep/vtep-idl.c	/^vteprec_logical_switch_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_logical_switch_insert	vtep/vtep-idl.c	/^vteprec_logical_switch_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_logical_switch_next	vtep/vtep-idl.c	/^vteprec_logical_switch_next(const struct vteprec_logical_switch *row)$/;"	f
vteprec_logical_switch_parse_description	vtep/vtep-idl.c	/^vteprec_logical_switch_parse_description(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_switch_parse_name	vtep/vtep-idl.c	/^vteprec_logical_switch_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_switch_parse_tunnel_key	vtep/vtep-idl.c	/^vteprec_logical_switch_parse_tunnel_key(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_logical_switch_set_description	vtep/vtep-idl.c	/^vteprec_logical_switch_set_description(const struct vteprec_logical_switch *row, const char *description)$/;"	f
vteprec_logical_switch_set_name	vtep/vtep-idl.c	/^vteprec_logical_switch_set_name(const struct vteprec_logical_switch *row, const char *name)$/;"	f
vteprec_logical_switch_set_tunnel_key	vtep/vtep-idl.c	/^vteprec_logical_switch_set_tunnel_key(const struct vteprec_logical_switch *row, const int64_t *tunnel_key, size_t n_tunnel_key)$/;"	f
vteprec_logical_switch_unparse_description	vtep/vtep-idl.c	/^vteprec_logical_switch_unparse_description(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_switch_unparse_name	vtep/vtep-idl.c	/^vteprec_logical_switch_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_logical_switch_unparse_tunnel_key	vtep/vtep-idl.c	/^vteprec_logical_switch_unparse_tunnel_key(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_logical_switch_verify_description	vtep/vtep-idl.c	/^vteprec_logical_switch_verify_description(const struct vteprec_logical_switch *row)$/;"	f
vteprec_logical_switch_verify_name	vtep/vtep-idl.c	/^vteprec_logical_switch_verify_name(const struct vteprec_logical_switch *row)$/;"	f
vteprec_logical_switch_verify_tunnel_key	vtep/vtep-idl.c	/^vteprec_logical_switch_verify_tunnel_key(const struct vteprec_logical_switch *row)$/;"	f
vteprec_manager	vtep/vtep-idl.h	/^struct vteprec_manager {$/;"	s
vteprec_manager_cast	vtep/vtep-idl.c	/^vteprec_manager_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_manager_col_inactivity_probe	vtep/vtep-idl.h	665;"	d
vteprec_manager_col_is_connected	vtep/vtep-idl.h	666;"	d
vteprec_manager_col_max_backoff	vtep/vtep-idl.h	661;"	d
vteprec_manager_col_other_config	vtep/vtep-idl.h	664;"	d
vteprec_manager_col_status	vtep/vtep-idl.h	662;"	d
vteprec_manager_col_target	vtep/vtep-idl.h	663;"	d
vteprec_manager_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_manager_columns[VTEPREC_MANAGER_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_manager_columns_init	vtep/vtep-idl.c	/^vteprec_manager_columns_init(void)$/;"	f	file:
vteprec_manager_delete	vtep/vtep-idl.c	/^vteprec_manager_delete(const struct vteprec_manager *row)$/;"	f
vteprec_manager_first	vtep/vtep-idl.c	/^vteprec_manager_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_manager_get_for_uuid	vtep/vtep-idl.c	/^vteprec_manager_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_manager_get_inactivity_probe	vtep/vtep-idl.c	/^vteprec_manager_get_inactivity_probe(const struct vteprec_manager *row,$/;"	f
vteprec_manager_get_is_connected	vtep/vtep-idl.c	/^vteprec_manager_get_is_connected(const struct vteprec_manager *row,$/;"	f
vteprec_manager_get_max_backoff	vtep/vtep-idl.c	/^vteprec_manager_get_max_backoff(const struct vteprec_manager *row,$/;"	f
vteprec_manager_get_other_config	vtep/vtep-idl.c	/^vteprec_manager_get_other_config(const struct vteprec_manager *row,$/;"	f
vteprec_manager_get_status	vtep/vtep-idl.c	/^vteprec_manager_get_status(const struct vteprec_manager *row,$/;"	f
vteprec_manager_get_target	vtep/vtep-idl.c	/^vteprec_manager_get_target(const struct vteprec_manager *row,$/;"	f
vteprec_manager_init	vtep/vtep-idl.c	/^vteprec_manager_init(struct vteprec_manager *row)$/;"	f
vteprec_manager_init__	vtep/vtep-idl.c	/^vteprec_manager_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_manager_insert	vtep/vtep-idl.c	/^vteprec_manager_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_manager_next	vtep/vtep-idl.c	/^vteprec_manager_next(const struct vteprec_manager *row)$/;"	f
vteprec_manager_parse_inactivity_probe	vtep/vtep-idl.c	/^vteprec_manager_parse_inactivity_probe(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_manager_parse_is_connected	vtep/vtep-idl.c	/^vteprec_manager_parse_is_connected(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_manager_parse_max_backoff	vtep/vtep-idl.c	/^vteprec_manager_parse_max_backoff(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_manager_parse_other_config	vtep/vtep-idl.c	/^vteprec_manager_parse_other_config(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_manager_parse_status	vtep/vtep-idl.c	/^vteprec_manager_parse_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_manager_parse_target	vtep/vtep-idl.c	/^vteprec_manager_parse_target(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_manager_set_inactivity_probe	vtep/vtep-idl.c	/^vteprec_manager_set_inactivity_probe(const struct vteprec_manager *row, const int64_t *inactivity_probe, size_t n_inactivity_probe)$/;"	f
vteprec_manager_set_is_connected	vtep/vtep-idl.c	/^vteprec_manager_set_is_connected(const struct vteprec_manager *row, bool is_connected)$/;"	f
vteprec_manager_set_max_backoff	vtep/vtep-idl.c	/^vteprec_manager_set_max_backoff(const struct vteprec_manager *row, const int64_t *max_backoff, size_t n_max_backoff)$/;"	f
vteprec_manager_set_other_config	vtep/vtep-idl.c	/^vteprec_manager_set_other_config(const struct vteprec_manager *row, const struct smap *other_config)$/;"	f
vteprec_manager_set_status	vtep/vtep-idl.c	/^vteprec_manager_set_status(const struct vteprec_manager *row, const struct smap *status)$/;"	f
vteprec_manager_set_target	vtep/vtep-idl.c	/^vteprec_manager_set_target(const struct vteprec_manager *row, const char *target)$/;"	f
vteprec_manager_unparse_inactivity_probe	vtep/vtep-idl.c	/^vteprec_manager_unparse_inactivity_probe(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_manager_unparse_is_connected	vtep/vtep-idl.c	/^vteprec_manager_unparse_is_connected(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_manager_unparse_max_backoff	vtep/vtep-idl.c	/^vteprec_manager_unparse_max_backoff(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_manager_unparse_other_config	vtep/vtep-idl.c	/^vteprec_manager_unparse_other_config(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_manager_unparse_status	vtep/vtep-idl.c	/^vteprec_manager_unparse_status(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_manager_unparse_target	vtep/vtep-idl.c	/^vteprec_manager_unparse_target(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_manager_verify_inactivity_probe	vtep/vtep-idl.c	/^vteprec_manager_verify_inactivity_probe(const struct vteprec_manager *row)$/;"	f
vteprec_manager_verify_is_connected	vtep/vtep-idl.c	/^vteprec_manager_verify_is_connected(const struct vteprec_manager *row)$/;"	f
vteprec_manager_verify_max_backoff	vtep/vtep-idl.c	/^vteprec_manager_verify_max_backoff(const struct vteprec_manager *row)$/;"	f
vteprec_manager_verify_other_config	vtep/vtep-idl.c	/^vteprec_manager_verify_other_config(const struct vteprec_manager *row)$/;"	f
vteprec_manager_verify_status	vtep/vtep-idl.c	/^vteprec_manager_verify_status(const struct vteprec_manager *row)$/;"	f
vteprec_manager_verify_target	vtep/vtep-idl.c	/^vteprec_manager_verify_target(const struct vteprec_manager *row)$/;"	f
vteprec_mcast_macs_local	vtep/vtep-idl.h	/^struct vteprec_mcast_macs_local {$/;"	s
vteprec_mcast_macs_local_cast	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_mcast_macs_local_col_MAC	vtep/vtep-idl.h	734;"	d
vteprec_mcast_macs_local_col_ipaddr	vtep/vtep-idl.h	733;"	d
vteprec_mcast_macs_local_col_locator_set	vtep/vtep-idl.h	735;"	d
vteprec_mcast_macs_local_col_logical_switch	vtep/vtep-idl.h	736;"	d
vteprec_mcast_macs_local_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_mcast_macs_local_columns[VTEPREC_MCAST_MACS_LOCAL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_mcast_macs_local_columns_init	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_columns_init(void)$/;"	f	file:
vteprec_mcast_macs_local_delete	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_delete(const struct vteprec_mcast_macs_local *row)$/;"	f
vteprec_mcast_macs_local_first	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_mcast_macs_local_get_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_get_MAC(const struct vteprec_mcast_macs_local *row,$/;"	f
vteprec_mcast_macs_local_get_for_uuid	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_mcast_macs_local_get_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_get_ipaddr(const struct vteprec_mcast_macs_local *row,$/;"	f
vteprec_mcast_macs_local_get_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_get_locator_set(const struct vteprec_mcast_macs_local *row,$/;"	f
vteprec_mcast_macs_local_get_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_get_logical_switch(const struct vteprec_mcast_macs_local *row,$/;"	f
vteprec_mcast_macs_local_init	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_init(struct vteprec_mcast_macs_local *row)$/;"	f
vteprec_mcast_macs_local_init__	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_mcast_macs_local_insert	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_mcast_macs_local_next	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_next(const struct vteprec_mcast_macs_local *row)$/;"	f
vteprec_mcast_macs_local_parse_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_parse_MAC(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_local_parse_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_parse_ipaddr(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_local_parse_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_parse_locator_set(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_local_parse_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_parse_logical_switch(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_local_set_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_set_MAC(const struct vteprec_mcast_macs_local *row, const char *MAC)$/;"	f
vteprec_mcast_macs_local_set_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_set_ipaddr(const struct vteprec_mcast_macs_local *row, const char *ipaddr)$/;"	f
vteprec_mcast_macs_local_set_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_set_locator_set(const struct vteprec_mcast_macs_local *row, const struct vteprec_physical_locator_set *locator_set)$/;"	f
vteprec_mcast_macs_local_set_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_set_logical_switch(const struct vteprec_mcast_macs_local *row, const struct vteprec_logical_switch *logical_switch)$/;"	f
vteprec_mcast_macs_local_unparse_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_unparse_MAC(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_local_unparse_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_unparse_ipaddr(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_local_unparse_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_unparse_locator_set(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_local_unparse_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_unparse_logical_switch(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_local_verify_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_verify_MAC(const struct vteprec_mcast_macs_local *row)$/;"	f
vteprec_mcast_macs_local_verify_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_verify_ipaddr(const struct vteprec_mcast_macs_local *row)$/;"	f
vteprec_mcast_macs_local_verify_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_verify_locator_set(const struct vteprec_mcast_macs_local *row)$/;"	f
vteprec_mcast_macs_local_verify_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_local_verify_logical_switch(const struct vteprec_mcast_macs_local *row)$/;"	f
vteprec_mcast_macs_remote	vtep/vtep-idl.h	/^struct vteprec_mcast_macs_remote {$/;"	s
vteprec_mcast_macs_remote_cast	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_mcast_macs_remote_col_MAC	vtep/vtep-idl.h	798;"	d
vteprec_mcast_macs_remote_col_ipaddr	vtep/vtep-idl.h	797;"	d
vteprec_mcast_macs_remote_col_locator_set	vtep/vtep-idl.h	799;"	d
vteprec_mcast_macs_remote_col_logical_switch	vtep/vtep-idl.h	800;"	d
vteprec_mcast_macs_remote_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_mcast_macs_remote_columns[VTEPREC_MCAST_MACS_REMOTE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_mcast_macs_remote_columns_init	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_columns_init(void)$/;"	f	file:
vteprec_mcast_macs_remote_delete	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_delete(const struct vteprec_mcast_macs_remote *row)$/;"	f
vteprec_mcast_macs_remote_first	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_mcast_macs_remote_get_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_get_MAC(const struct vteprec_mcast_macs_remote *row,$/;"	f
vteprec_mcast_macs_remote_get_for_uuid	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_mcast_macs_remote_get_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_get_ipaddr(const struct vteprec_mcast_macs_remote *row,$/;"	f
vteprec_mcast_macs_remote_get_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_get_locator_set(const struct vteprec_mcast_macs_remote *row,$/;"	f
vteprec_mcast_macs_remote_get_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_get_logical_switch(const struct vteprec_mcast_macs_remote *row,$/;"	f
vteprec_mcast_macs_remote_init	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_init(struct vteprec_mcast_macs_remote *row)$/;"	f
vteprec_mcast_macs_remote_init__	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_mcast_macs_remote_insert	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_mcast_macs_remote_next	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_next(const struct vteprec_mcast_macs_remote *row)$/;"	f
vteprec_mcast_macs_remote_parse_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_parse_MAC(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_remote_parse_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_parse_ipaddr(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_remote_parse_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_parse_locator_set(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_remote_parse_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_parse_logical_switch(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_mcast_macs_remote_set_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_set_MAC(const struct vteprec_mcast_macs_remote *row, const char *MAC)$/;"	f
vteprec_mcast_macs_remote_set_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_set_ipaddr(const struct vteprec_mcast_macs_remote *row, const char *ipaddr)$/;"	f
vteprec_mcast_macs_remote_set_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_set_locator_set(const struct vteprec_mcast_macs_remote *row, const struct vteprec_physical_locator_set *locator_set)$/;"	f
vteprec_mcast_macs_remote_set_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_set_logical_switch(const struct vteprec_mcast_macs_remote *row, const struct vteprec_logical_switch *logical_switch)$/;"	f
vteprec_mcast_macs_remote_unparse_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_unparse_MAC(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_remote_unparse_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_unparse_ipaddr(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_remote_unparse_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_unparse_locator_set(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_remote_unparse_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_unparse_logical_switch(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_mcast_macs_remote_verify_MAC	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_verify_MAC(const struct vteprec_mcast_macs_remote *row)$/;"	f
vteprec_mcast_macs_remote_verify_ipaddr	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_verify_ipaddr(const struct vteprec_mcast_macs_remote *row)$/;"	f
vteprec_mcast_macs_remote_verify_locator_set	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_verify_locator_set(const struct vteprec_mcast_macs_remote *row)$/;"	f
vteprec_mcast_macs_remote_verify_logical_switch	vtep/vtep-idl.c	/^vteprec_mcast_macs_remote_verify_logical_switch(const struct vteprec_mcast_macs_remote *row)$/;"	f
vteprec_physical_locator	vtep/vtep-idl.h	/^struct vteprec_physical_locator {$/;"	s
vteprec_physical_locator_cast	vtep/vtep-idl.c	/^vteprec_physical_locator_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_locator_col_dst_ip	vtep/vtep-idl.h	853;"	d
vteprec_physical_locator_col_encapsulation_type	vtep/vtep-idl.h	854;"	d
vteprec_physical_locator_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_physical_locator_columns[VTEPREC_PHYSICAL_LOCATOR_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_physical_locator_columns_init	vtep/vtep-idl.c	/^vteprec_physical_locator_columns_init(void)$/;"	f	file:
vteprec_physical_locator_delete	vtep/vtep-idl.c	/^vteprec_physical_locator_delete(const struct vteprec_physical_locator *row)$/;"	f
vteprec_physical_locator_first	vtep/vtep-idl.c	/^vteprec_physical_locator_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_physical_locator_get_dst_ip	vtep/vtep-idl.c	/^vteprec_physical_locator_get_dst_ip(const struct vteprec_physical_locator *row,$/;"	f
vteprec_physical_locator_get_encapsulation_type	vtep/vtep-idl.c	/^vteprec_physical_locator_get_encapsulation_type(const struct vteprec_physical_locator *row,$/;"	f
vteprec_physical_locator_get_for_uuid	vtep/vtep-idl.c	/^vteprec_physical_locator_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_physical_locator_init	vtep/vtep-idl.c	/^vteprec_physical_locator_init(struct vteprec_physical_locator *row)$/;"	f
vteprec_physical_locator_init__	vtep/vtep-idl.c	/^vteprec_physical_locator_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_locator_insert	vtep/vtep-idl.c	/^vteprec_physical_locator_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_physical_locator_next	vtep/vtep-idl.c	/^vteprec_physical_locator_next(const struct vteprec_physical_locator *row)$/;"	f
vteprec_physical_locator_parse_dst_ip	vtep/vtep-idl.c	/^vteprec_physical_locator_parse_dst_ip(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_locator_parse_encapsulation_type	vtep/vtep-idl.c	/^vteprec_physical_locator_parse_encapsulation_type(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_locator_set	vtep/vtep-idl.h	/^struct vteprec_physical_locator_set {$/;"	s
vteprec_physical_locator_set_cast	vtep/vtep-idl.c	/^vteprec_physical_locator_set_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_locator_set_col_locators	vtep/vtep-idl.h	898;"	d
vteprec_physical_locator_set_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_physical_locator_set_columns[VTEPREC_PHYSICAL_LOCATOR_SET_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_physical_locator_set_columns_init	vtep/vtep-idl.c	/^vteprec_physical_locator_set_columns_init(void)$/;"	f	file:
vteprec_physical_locator_set_delete	vtep/vtep-idl.c	/^vteprec_physical_locator_set_delete(const struct vteprec_physical_locator_set *row)$/;"	f
vteprec_physical_locator_set_dst_ip	vtep/vtep-idl.c	/^vteprec_physical_locator_set_dst_ip(const struct vteprec_physical_locator *row, const char *dst_ip)$/;"	f
vteprec_physical_locator_set_encapsulation_type	vtep/vtep-idl.c	/^vteprec_physical_locator_set_encapsulation_type(const struct vteprec_physical_locator *row, const char *encapsulation_type)$/;"	f
vteprec_physical_locator_set_first	vtep/vtep-idl.c	/^vteprec_physical_locator_set_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_physical_locator_set_get_for_uuid	vtep/vtep-idl.c	/^vteprec_physical_locator_set_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_physical_locator_set_get_locators	vtep/vtep-idl.c	/^vteprec_physical_locator_set_get_locators(const struct vteprec_physical_locator_set *row,$/;"	f
vteprec_physical_locator_set_init	vtep/vtep-idl.c	/^vteprec_physical_locator_set_init(struct vteprec_physical_locator_set *row)$/;"	f
vteprec_physical_locator_set_init__	vtep/vtep-idl.c	/^vteprec_physical_locator_set_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_locator_set_insert	vtep/vtep-idl.c	/^vteprec_physical_locator_set_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_physical_locator_set_next	vtep/vtep-idl.c	/^vteprec_physical_locator_set_next(const struct vteprec_physical_locator_set *row)$/;"	f
vteprec_physical_locator_set_parse_locators	vtep/vtep-idl.c	/^vteprec_physical_locator_set_parse_locators(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_locator_set_set_locators	vtep/vtep-idl.c	/^vteprec_physical_locator_set_set_locators(const struct vteprec_physical_locator_set *row, struct vteprec_physical_locator **locators, size_t n_locators)$/;"	f
vteprec_physical_locator_set_unparse_locators	vtep/vtep-idl.c	/^vteprec_physical_locator_set_unparse_locators(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_locator_set_verify_locators	vtep/vtep-idl.c	/^vteprec_physical_locator_set_verify_locators(const struct vteprec_physical_locator_set *row)$/;"	f
vteprec_physical_locator_unparse_dst_ip	vtep/vtep-idl.c	/^vteprec_physical_locator_unparse_dst_ip(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_physical_locator_unparse_encapsulation_type	vtep/vtep-idl.c	/^vteprec_physical_locator_unparse_encapsulation_type(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_physical_locator_verify_dst_ip	vtep/vtep-idl.c	/^vteprec_physical_locator_verify_dst_ip(const struct vteprec_physical_locator *row)$/;"	f
vteprec_physical_locator_verify_encapsulation_type	vtep/vtep-idl.c	/^vteprec_physical_locator_verify_encapsulation_type(const struct vteprec_physical_locator *row)$/;"	f
vteprec_physical_port	vtep/vtep-idl.h	/^struct vteprec_physical_port {$/;"	s
vteprec_physical_port_cast	vtep/vtep-idl.c	/^vteprec_physical_port_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_port_col_acl_bindings	vtep/vtep-idl.h	969;"	d
vteprec_physical_port_col_description	vtep/vtep-idl.h	966;"	d
vteprec_physical_port_col_name	vtep/vtep-idl.h	967;"	d
vteprec_physical_port_col_port_fault_status	vtep/vtep-idl.h	965;"	d
vteprec_physical_port_col_vlan_bindings	vtep/vtep-idl.h	968;"	d
vteprec_physical_port_col_vlan_stats	vtep/vtep-idl.h	970;"	d
vteprec_physical_port_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_physical_port_columns[VTEPREC_PHYSICAL_PORT_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_physical_port_columns_init	vtep/vtep-idl.c	/^vteprec_physical_port_columns_init(void)$/;"	f	file:
vteprec_physical_port_delete	vtep/vtep-idl.c	/^vteprec_physical_port_delete(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_first	vtep/vtep-idl.c	/^vteprec_physical_port_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_physical_port_get_acl_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_get_acl_bindings(const struct vteprec_physical_port *row,$/;"	f
vteprec_physical_port_get_description	vtep/vtep-idl.c	/^vteprec_physical_port_get_description(const struct vteprec_physical_port *row,$/;"	f
vteprec_physical_port_get_for_uuid	vtep/vtep-idl.c	/^vteprec_physical_port_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_physical_port_get_name	vtep/vtep-idl.c	/^vteprec_physical_port_get_name(const struct vteprec_physical_port *row,$/;"	f
vteprec_physical_port_get_port_fault_status	vtep/vtep-idl.c	/^vteprec_physical_port_get_port_fault_status(const struct vteprec_physical_port *row,$/;"	f
vteprec_physical_port_get_vlan_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_get_vlan_bindings(const struct vteprec_physical_port *row,$/;"	f
vteprec_physical_port_get_vlan_stats	vtep/vtep-idl.c	/^vteprec_physical_port_get_vlan_stats(const struct vteprec_physical_port *row,$/;"	f
vteprec_physical_port_init	vtep/vtep-idl.c	/^vteprec_physical_port_init(struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_init__	vtep/vtep-idl.c	/^vteprec_physical_port_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_port_insert	vtep/vtep-idl.c	/^vteprec_physical_port_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_physical_port_next	vtep/vtep-idl.c	/^vteprec_physical_port_next(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_parse_acl_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_parse_acl_bindings(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_port_parse_description	vtep/vtep-idl.c	/^vteprec_physical_port_parse_description(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_port_parse_name	vtep/vtep-idl.c	/^vteprec_physical_port_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_port_parse_port_fault_status	vtep/vtep-idl.c	/^vteprec_physical_port_parse_port_fault_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_port_parse_vlan_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_parse_vlan_bindings(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_port_parse_vlan_stats	vtep/vtep-idl.c	/^vteprec_physical_port_parse_vlan_stats(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_port_set_acl_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_set_acl_bindings(const struct vteprec_physical_port *row, const int64_t *key_acl_bindings, struct vteprec_acl **value_acl_bindings, size_t n_acl_bindings)$/;"	f
vteprec_physical_port_set_description	vtep/vtep-idl.c	/^vteprec_physical_port_set_description(const struct vteprec_physical_port *row, const char *description)$/;"	f
vteprec_physical_port_set_name	vtep/vtep-idl.c	/^vteprec_physical_port_set_name(const struct vteprec_physical_port *row, const char *name)$/;"	f
vteprec_physical_port_set_port_fault_status	vtep/vtep-idl.c	/^vteprec_physical_port_set_port_fault_status(const struct vteprec_physical_port *row, const char **port_fault_status, size_t n_port_fault_status)$/;"	f
vteprec_physical_port_set_vlan_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_set_vlan_bindings(const struct vteprec_physical_port *row, const int64_t *key_vlan_bindings, struct vteprec_logical_switch **value_vlan_bindings, size_t n_vlan_bindings)$/;"	f
vteprec_physical_port_set_vlan_stats	vtep/vtep-idl.c	/^vteprec_physical_port_set_vlan_stats(const struct vteprec_physical_port *row, const int64_t *key_vlan_stats, struct vteprec_logical_binding_stats **value_vlan_stats, size_t n_vlan_stats)$/;"	f
vteprec_physical_port_unparse_acl_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_unparse_acl_bindings(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_port_unparse_description	vtep/vtep-idl.c	/^vteprec_physical_port_unparse_description(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_physical_port_unparse_name	vtep/vtep-idl.c	/^vteprec_physical_port_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_physical_port_unparse_port_fault_status	vtep/vtep-idl.c	/^vteprec_physical_port_unparse_port_fault_status(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_port_unparse_vlan_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_unparse_vlan_bindings(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_port_unparse_vlan_stats	vtep/vtep-idl.c	/^vteprec_physical_port_unparse_vlan_stats(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_port_verify_acl_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_verify_acl_bindings(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_verify_description	vtep/vtep-idl.c	/^vteprec_physical_port_verify_description(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_verify_name	vtep/vtep-idl.c	/^vteprec_physical_port_verify_name(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_verify_port_fault_status	vtep/vtep-idl.c	/^vteprec_physical_port_verify_port_fault_status(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_verify_vlan_bindings	vtep/vtep-idl.c	/^vteprec_physical_port_verify_vlan_bindings(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_port_verify_vlan_stats	vtep/vtep-idl.c	/^vteprec_physical_port_verify_vlan_stats(const struct vteprec_physical_port *row)$/;"	f
vteprec_physical_switch	vtep/vtep-idl.h	/^struct vteprec_physical_switch {$/;"	s
vteprec_physical_switch_cast	vtep/vtep-idl.c	/^vteprec_physical_switch_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_switch_col_description	vtep/vtep-idl.h	1055;"	d
vteprec_physical_switch_col_management_ips	vtep/vtep-idl.h	1054;"	d
vteprec_physical_switch_col_name	vtep/vtep-idl.h	1060;"	d
vteprec_physical_switch_col_ports	vtep/vtep-idl.h	1058;"	d
vteprec_physical_switch_col_switch_fault_status	vtep/vtep-idl.h	1057;"	d
vteprec_physical_switch_col_tunnel_ips	vtep/vtep-idl.h	1056;"	d
vteprec_physical_switch_col_tunnels	vtep/vtep-idl.h	1059;"	d
vteprec_physical_switch_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_physical_switch_columns[VTEPREC_PHYSICAL_SWITCH_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_physical_switch_columns_init	vtep/vtep-idl.c	/^vteprec_physical_switch_columns_init(void)$/;"	f	file:
vteprec_physical_switch_delete	vtep/vtep-idl.c	/^vteprec_physical_switch_delete(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_first	vtep/vtep-idl.c	/^vteprec_physical_switch_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_physical_switch_get_description	vtep/vtep-idl.c	/^vteprec_physical_switch_get_description(const struct vteprec_physical_switch *row,$/;"	f
vteprec_physical_switch_get_for_uuid	vtep/vtep-idl.c	/^vteprec_physical_switch_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_physical_switch_get_management_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_get_management_ips(const struct vteprec_physical_switch *row,$/;"	f
vteprec_physical_switch_get_name	vtep/vtep-idl.c	/^vteprec_physical_switch_get_name(const struct vteprec_physical_switch *row,$/;"	f
vteprec_physical_switch_get_ports	vtep/vtep-idl.c	/^vteprec_physical_switch_get_ports(const struct vteprec_physical_switch *row,$/;"	f
vteprec_physical_switch_get_switch_fault_status	vtep/vtep-idl.c	/^vteprec_physical_switch_get_switch_fault_status(const struct vteprec_physical_switch *row,$/;"	f
vteprec_physical_switch_get_tunnel_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_get_tunnel_ips(const struct vteprec_physical_switch *row,$/;"	f
vteprec_physical_switch_get_tunnels	vtep/vtep-idl.c	/^vteprec_physical_switch_get_tunnels(const struct vteprec_physical_switch *row,$/;"	f
vteprec_physical_switch_init	vtep/vtep-idl.c	/^vteprec_physical_switch_init(struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_init__	vtep/vtep-idl.c	/^vteprec_physical_switch_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_physical_switch_insert	vtep/vtep-idl.c	/^vteprec_physical_switch_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_physical_switch_next	vtep/vtep-idl.c	/^vteprec_physical_switch_next(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_parse_description	vtep/vtep-idl.c	/^vteprec_physical_switch_parse_description(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_switch_parse_management_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_parse_management_ips(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_switch_parse_name	vtep/vtep-idl.c	/^vteprec_physical_switch_parse_name(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_switch_parse_ports	vtep/vtep-idl.c	/^vteprec_physical_switch_parse_ports(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_switch_parse_switch_fault_status	vtep/vtep-idl.c	/^vteprec_physical_switch_parse_switch_fault_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_switch_parse_tunnel_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_parse_tunnel_ips(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_switch_parse_tunnels	vtep/vtep-idl.c	/^vteprec_physical_switch_parse_tunnels(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_physical_switch_set_description	vtep/vtep-idl.c	/^vteprec_physical_switch_set_description(const struct vteprec_physical_switch *row, const char *description)$/;"	f
vteprec_physical_switch_set_management_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_set_management_ips(const struct vteprec_physical_switch *row, const char **management_ips, size_t n_management_ips)$/;"	f
vteprec_physical_switch_set_name	vtep/vtep-idl.c	/^vteprec_physical_switch_set_name(const struct vteprec_physical_switch *row, const char *name)$/;"	f
vteprec_physical_switch_set_ports	vtep/vtep-idl.c	/^vteprec_physical_switch_set_ports(const struct vteprec_physical_switch *row, struct vteprec_physical_port **ports, size_t n_ports)$/;"	f
vteprec_physical_switch_set_switch_fault_status	vtep/vtep-idl.c	/^vteprec_physical_switch_set_switch_fault_status(const struct vteprec_physical_switch *row, const char **switch_fault_status, size_t n_switch_fault_status)$/;"	f
vteprec_physical_switch_set_tunnel_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_set_tunnel_ips(const struct vteprec_physical_switch *row, const char **tunnel_ips, size_t n_tunnel_ips)$/;"	f
vteprec_physical_switch_set_tunnels	vtep/vtep-idl.c	/^vteprec_physical_switch_set_tunnels(const struct vteprec_physical_switch *row, struct vteprec_tunnel **tunnels, size_t n_tunnels)$/;"	f
vteprec_physical_switch_unparse_description	vtep/vtep-idl.c	/^vteprec_physical_switch_unparse_description(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_physical_switch_unparse_management_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_unparse_management_ips(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_switch_unparse_name	vtep/vtep-idl.c	/^vteprec_physical_switch_unparse_name(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_physical_switch_unparse_ports	vtep/vtep-idl.c	/^vteprec_physical_switch_unparse_ports(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_switch_unparse_switch_fault_status	vtep/vtep-idl.c	/^vteprec_physical_switch_unparse_switch_fault_status(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_switch_unparse_tunnel_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_unparse_tunnel_ips(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_switch_unparse_tunnels	vtep/vtep-idl.c	/^vteprec_physical_switch_unparse_tunnels(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_physical_switch_verify_description	vtep/vtep-idl.c	/^vteprec_physical_switch_verify_description(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_verify_management_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_verify_management_ips(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_verify_name	vtep/vtep-idl.c	/^vteprec_physical_switch_verify_name(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_verify_ports	vtep/vtep-idl.c	/^vteprec_physical_switch_verify_ports(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_verify_switch_fault_status	vtep/vtep-idl.c	/^vteprec_physical_switch_verify_switch_fault_status(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_verify_tunnel_ips	vtep/vtep-idl.c	/^vteprec_physical_switch_verify_tunnel_ips(const struct vteprec_physical_switch *row)$/;"	f
vteprec_physical_switch_verify_tunnels	vtep/vtep-idl.c	/^vteprec_physical_switch_verify_tunnels(const struct vteprec_physical_switch *row)$/;"	f
vteprec_table_acl	vtep/vtep-idl.h	1335;"	d
vteprec_table_acl_entry	vtep/vtep-idl.h	1342;"	d
vteprec_table_arp_sources_local	vtep/vtep-idl.h	1350;"	d
vteprec_table_arp_sources_remote	vtep/vtep-idl.h	1349;"	d
vteprec_table_classes	vtep/vtep-idl.c	/^struct ovsdb_idl_table_class vteprec_table_classes[VTEPREC_N_TABLES] = {$/;"	v	typeref:struct:ovsdb_idl_table_class
vteprec_table_global	vtep/vtep-idl.h	1337;"	d
vteprec_table_logical_binding_stats	vtep/vtep-idl.h	1352;"	d
vteprec_table_logical_router	vtep/vtep-idl.h	1344;"	d
vteprec_table_logical_switch	vtep/vtep-idl.h	1347;"	d
vteprec_table_manager	vtep/vtep-idl.h	1345;"	d
vteprec_table_mcast_macs_local	vtep/vtep-idl.h	1341;"	d
vteprec_table_mcast_macs_remote	vtep/vtep-idl.h	1336;"	d
vteprec_table_physical_locator	vtep/vtep-idl.h	1338;"	d
vteprec_table_physical_locator_set	vtep/vtep-idl.h	1339;"	d
vteprec_table_physical_port	vtep/vtep-idl.h	1351;"	d
vteprec_table_physical_switch	vtep/vtep-idl.h	1343;"	d
vteprec_table_tunnel	vtep/vtep-idl.h	1340;"	d
vteprec_table_ucast_macs_local	vtep/vtep-idl.h	1346;"	d
vteprec_table_ucast_macs_remote	vtep/vtep-idl.h	1348;"	d
vteprec_tunnel	vtep/vtep-idl.h	/^struct vteprec_tunnel {$/;"	s
vteprec_tunnel_cast	vtep/vtep-idl.c	/^vteprec_tunnel_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_tunnel_col_bfd_config_local	vtep/vtep-idl.h	1139;"	d
vteprec_tunnel_col_bfd_config_remote	vtep/vtep-idl.h	1143;"	d
vteprec_tunnel_col_bfd_params	vtep/vtep-idl.h	1140;"	d
vteprec_tunnel_col_bfd_status	vtep/vtep-idl.h	1141;"	d
vteprec_tunnel_col_local	vtep/vtep-idl.h	1142;"	d
vteprec_tunnel_col_remote	vtep/vtep-idl.h	1138;"	d
vteprec_tunnel_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_tunnel_columns[VTEPREC_TUNNEL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_tunnel_columns_init	vtep/vtep-idl.c	/^vteprec_tunnel_columns_init(void)$/;"	f	file:
vteprec_tunnel_delete	vtep/vtep-idl.c	/^vteprec_tunnel_delete(const struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_first	vtep/vtep-idl.c	/^vteprec_tunnel_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_tunnel_get_bfd_config_local	vtep/vtep-idl.c	/^vteprec_tunnel_get_bfd_config_local(const struct vteprec_tunnel *row,$/;"	f
vteprec_tunnel_get_bfd_config_remote	vtep/vtep-idl.c	/^vteprec_tunnel_get_bfd_config_remote(const struct vteprec_tunnel *row,$/;"	f
vteprec_tunnel_get_bfd_params	vtep/vtep-idl.c	/^vteprec_tunnel_get_bfd_params(const struct vteprec_tunnel *row,$/;"	f
vteprec_tunnel_get_bfd_status	vtep/vtep-idl.c	/^vteprec_tunnel_get_bfd_status(const struct vteprec_tunnel *row,$/;"	f
vteprec_tunnel_get_for_uuid	vtep/vtep-idl.c	/^vteprec_tunnel_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_tunnel_get_local	vtep/vtep-idl.c	/^vteprec_tunnel_get_local(const struct vteprec_tunnel *row,$/;"	f
vteprec_tunnel_get_remote	vtep/vtep-idl.c	/^vteprec_tunnel_get_remote(const struct vteprec_tunnel *row,$/;"	f
vteprec_tunnel_init	vtep/vtep-idl.c	/^vteprec_tunnel_init(struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_init__	vtep/vtep-idl.c	/^vteprec_tunnel_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_tunnel_insert	vtep/vtep-idl.c	/^vteprec_tunnel_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_tunnel_next	vtep/vtep-idl.c	/^vteprec_tunnel_next(const struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_parse_bfd_config_local	vtep/vtep-idl.c	/^vteprec_tunnel_parse_bfd_config_local(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_tunnel_parse_bfd_config_remote	vtep/vtep-idl.c	/^vteprec_tunnel_parse_bfd_config_remote(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_tunnel_parse_bfd_params	vtep/vtep-idl.c	/^vteprec_tunnel_parse_bfd_params(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_tunnel_parse_bfd_status	vtep/vtep-idl.c	/^vteprec_tunnel_parse_bfd_status(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_tunnel_parse_local	vtep/vtep-idl.c	/^vteprec_tunnel_parse_local(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_tunnel_parse_remote	vtep/vtep-idl.c	/^vteprec_tunnel_parse_remote(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_tunnel_set_bfd_config_local	vtep/vtep-idl.c	/^vteprec_tunnel_set_bfd_config_local(const struct vteprec_tunnel *row, const struct smap *bfd_config_local)$/;"	f
vteprec_tunnel_set_bfd_config_remote	vtep/vtep-idl.c	/^vteprec_tunnel_set_bfd_config_remote(const struct vteprec_tunnel *row, const struct smap *bfd_config_remote)$/;"	f
vteprec_tunnel_set_bfd_params	vtep/vtep-idl.c	/^vteprec_tunnel_set_bfd_params(const struct vteprec_tunnel *row, const struct smap *bfd_params)$/;"	f
vteprec_tunnel_set_bfd_status	vtep/vtep-idl.c	/^vteprec_tunnel_set_bfd_status(const struct vteprec_tunnel *row, const struct smap *bfd_status)$/;"	f
vteprec_tunnel_set_local	vtep/vtep-idl.c	/^vteprec_tunnel_set_local(const struct vteprec_tunnel *row, const struct vteprec_physical_locator *local)$/;"	f
vteprec_tunnel_set_remote	vtep/vtep-idl.c	/^vteprec_tunnel_set_remote(const struct vteprec_tunnel *row, const struct vteprec_physical_locator *remote)$/;"	f
vteprec_tunnel_unparse_bfd_config_local	vtep/vtep-idl.c	/^vteprec_tunnel_unparse_bfd_config_local(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_tunnel_unparse_bfd_config_remote	vtep/vtep-idl.c	/^vteprec_tunnel_unparse_bfd_config_remote(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_tunnel_unparse_bfd_params	vtep/vtep-idl.c	/^vteprec_tunnel_unparse_bfd_params(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_tunnel_unparse_bfd_status	vtep/vtep-idl.c	/^vteprec_tunnel_unparse_bfd_status(struct ovsdb_idl_row *row_)$/;"	f	file:
vteprec_tunnel_unparse_local	vtep/vtep-idl.c	/^vteprec_tunnel_unparse_local(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_tunnel_unparse_remote	vtep/vtep-idl.c	/^vteprec_tunnel_unparse_remote(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_tunnel_verify_bfd_config_local	vtep/vtep-idl.c	/^vteprec_tunnel_verify_bfd_config_local(const struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_verify_bfd_config_remote	vtep/vtep-idl.c	/^vteprec_tunnel_verify_bfd_config_remote(const struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_verify_bfd_params	vtep/vtep-idl.c	/^vteprec_tunnel_verify_bfd_params(const struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_verify_bfd_status	vtep/vtep-idl.c	/^vteprec_tunnel_verify_bfd_status(const struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_verify_local	vtep/vtep-idl.c	/^vteprec_tunnel_verify_local(const struct vteprec_tunnel *row)$/;"	f
vteprec_tunnel_verify_remote	vtep/vtep-idl.c	/^vteprec_tunnel_verify_remote(const struct vteprec_tunnel *row)$/;"	f
vteprec_ucast_macs_local	vtep/vtep-idl.h	/^struct vteprec_ucast_macs_local {$/;"	s
vteprec_ucast_macs_local_cast	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_ucast_macs_local_col_MAC	vtep/vtep-idl.h	1211;"	d
vteprec_ucast_macs_local_col_ipaddr	vtep/vtep-idl.h	1212;"	d
vteprec_ucast_macs_local_col_locator	vtep/vtep-idl.h	1210;"	d
vteprec_ucast_macs_local_col_logical_switch	vtep/vtep-idl.h	1213;"	d
vteprec_ucast_macs_local_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_ucast_macs_local_columns[VTEPREC_UCAST_MACS_LOCAL_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_ucast_macs_local_columns_init	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_columns_init(void)$/;"	f	file:
vteprec_ucast_macs_local_delete	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_delete(const struct vteprec_ucast_macs_local *row)$/;"	f
vteprec_ucast_macs_local_first	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_ucast_macs_local_get_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_get_MAC(const struct vteprec_ucast_macs_local *row,$/;"	f
vteprec_ucast_macs_local_get_for_uuid	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_ucast_macs_local_get_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_get_ipaddr(const struct vteprec_ucast_macs_local *row,$/;"	f
vteprec_ucast_macs_local_get_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_get_locator(const struct vteprec_ucast_macs_local *row,$/;"	f
vteprec_ucast_macs_local_get_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_get_logical_switch(const struct vteprec_ucast_macs_local *row,$/;"	f
vteprec_ucast_macs_local_init	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_init(struct vteprec_ucast_macs_local *row)$/;"	f
vteprec_ucast_macs_local_init__	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_ucast_macs_local_insert	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_ucast_macs_local_next	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_next(const struct vteprec_ucast_macs_local *row)$/;"	f
vteprec_ucast_macs_local_parse_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_parse_MAC(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_local_parse_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_parse_ipaddr(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_local_parse_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_parse_locator(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_local_parse_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_parse_logical_switch(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_local_set_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_set_MAC(const struct vteprec_ucast_macs_local *row, const char *MAC)$/;"	f
vteprec_ucast_macs_local_set_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_set_ipaddr(const struct vteprec_ucast_macs_local *row, const char *ipaddr)$/;"	f
vteprec_ucast_macs_local_set_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_set_locator(const struct vteprec_ucast_macs_local *row, const struct vteprec_physical_locator *locator)$/;"	f
vteprec_ucast_macs_local_set_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_set_logical_switch(const struct vteprec_ucast_macs_local *row, const struct vteprec_logical_switch *logical_switch)$/;"	f
vteprec_ucast_macs_local_unparse_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_unparse_MAC(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_local_unparse_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_unparse_ipaddr(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_local_unparse_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_unparse_locator(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_local_unparse_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_unparse_logical_switch(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_local_verify_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_verify_MAC(const struct vteprec_ucast_macs_local *row)$/;"	f
vteprec_ucast_macs_local_verify_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_verify_ipaddr(const struct vteprec_ucast_macs_local *row)$/;"	f
vteprec_ucast_macs_local_verify_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_verify_locator(const struct vteprec_ucast_macs_local *row)$/;"	f
vteprec_ucast_macs_local_verify_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_local_verify_logical_switch(const struct vteprec_ucast_macs_local *row)$/;"	f
vteprec_ucast_macs_remote	vtep/vtep-idl.h	/^struct vteprec_ucast_macs_remote {$/;"	s
vteprec_ucast_macs_remote_cast	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_cast(const struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_ucast_macs_remote_col_MAC	vtep/vtep-idl.h	1275;"	d
vteprec_ucast_macs_remote_col_ipaddr	vtep/vtep-idl.h	1276;"	d
vteprec_ucast_macs_remote_col_locator	vtep/vtep-idl.h	1274;"	d
vteprec_ucast_macs_remote_col_logical_switch	vtep/vtep-idl.h	1277;"	d
vteprec_ucast_macs_remote_columns	vtep/vtep-idl.c	/^struct ovsdb_idl_column vteprec_ucast_macs_remote_columns[VTEPREC_UCAST_MACS_REMOTE_N_COLUMNS];$/;"	v	typeref:struct:ovsdb_idl_column
vteprec_ucast_macs_remote_columns_init	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_columns_init(void)$/;"	f	file:
vteprec_ucast_macs_remote_delete	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_delete(const struct vteprec_ucast_macs_remote *row)$/;"	f
vteprec_ucast_macs_remote_first	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_first(const struct ovsdb_idl *idl)$/;"	f
vteprec_ucast_macs_remote_get_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_get_MAC(const struct vteprec_ucast_macs_remote *row,$/;"	f
vteprec_ucast_macs_remote_get_for_uuid	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_get_for_uuid(const struct ovsdb_idl *idl, const struct uuid *uuid)$/;"	f
vteprec_ucast_macs_remote_get_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_get_ipaddr(const struct vteprec_ucast_macs_remote *row,$/;"	f
vteprec_ucast_macs_remote_get_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_get_locator(const struct vteprec_ucast_macs_remote *row,$/;"	f
vteprec_ucast_macs_remote_get_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_get_logical_switch(const struct vteprec_ucast_macs_remote *row,$/;"	f
vteprec_ucast_macs_remote_init	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_init(struct vteprec_ucast_macs_remote *row)$/;"	f
vteprec_ucast_macs_remote_init__	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_init__(struct ovsdb_idl_row *row)$/;"	f	file:
vteprec_ucast_macs_remote_insert	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_insert(struct ovsdb_idl_txn *txn)$/;"	f
vteprec_ucast_macs_remote_next	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_next(const struct vteprec_ucast_macs_remote *row)$/;"	f
vteprec_ucast_macs_remote_parse_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_parse_MAC(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_remote_parse_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_parse_ipaddr(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_remote_parse_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_parse_locator(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_remote_parse_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_parse_logical_switch(struct ovsdb_idl_row *row_, const struct ovsdb_datum *datum)$/;"	f	file:
vteprec_ucast_macs_remote_set_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_set_MAC(const struct vteprec_ucast_macs_remote *row, const char *MAC)$/;"	f
vteprec_ucast_macs_remote_set_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_set_ipaddr(const struct vteprec_ucast_macs_remote *row, const char *ipaddr)$/;"	f
vteprec_ucast_macs_remote_set_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_set_locator(const struct vteprec_ucast_macs_remote *row, const struct vteprec_physical_locator *locator)$/;"	f
vteprec_ucast_macs_remote_set_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_set_logical_switch(const struct vteprec_ucast_macs_remote *row, const struct vteprec_logical_switch *logical_switch)$/;"	f
vteprec_ucast_macs_remote_unparse_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_unparse_MAC(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_remote_unparse_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_unparse_ipaddr(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_remote_unparse_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_unparse_locator(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_remote_unparse_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_unparse_logical_switch(struct ovsdb_idl_row *row OVS_UNUSED)$/;"	f	file:
vteprec_ucast_macs_remote_verify_MAC	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_verify_MAC(const struct vteprec_ucast_macs_remote *row)$/;"	f
vteprec_ucast_macs_remote_verify_ipaddr	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_verify_ipaddr(const struct vteprec_ucast_macs_remote *row)$/;"	f
vteprec_ucast_macs_remote_verify_locator	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_verify_locator(const struct vteprec_ucast_macs_remote *row)$/;"	f
vteprec_ucast_macs_remote_verify_logical_switch	vtep/vtep-idl.c	/^vteprec_ucast_macs_remote_verify_logical_switch(const struct vteprec_ucast_macs_remote *row)$/;"	f
vx_flags	datapath/linux/compat/include/net/vxlan.h	/^	__u8	vx_flags;$/;"	m	struct:vxlanhdr_gbp
vx_flags	datapath/linux/compat/vxlan.c	/^	__be32 vx_flags;$/;"	m	struct:vxlanhdr	file:
vx_flags	datapath/linux/vxlan.c	/^	__be32 vx_flags;$/;"	m	struct:vxlanhdr	file:
vx_flags	lib/packets.h	/^    ovs_16aligned_be32 vx_flags;$/;"	m	struct:vxlanhdr
vx_vni	datapath/linux/compat/include/net/vxlan.h	/^	__be32	vx_vni;$/;"	m	struct:vxlanhdr_gbp
vx_vni	datapath/linux/compat/vxlan.c	/^	__be32 vx_vni;$/;"	m	struct:vxlanhdr	file:
vx_vni	datapath/linux/vxlan.c	/^	__be32 vx_vni;$/;"	m	struct:vxlanhdr	file:
vx_vni	lib/packets.h	/^    ovs_16aligned_be32 vx_vni;$/;"	m	struct:vxlanhdr
vxlanID	datapath-windows/ovsext/Vxlan.h	/^    UINT32  vxlanID:24;$/;"	m	struct:VXLANHdr
vxlan_build_gbp_hdr	datapath/linux/compat/vxlan.c	/^static void vxlan_build_gbp_hdr(struct vxlanhdr *vxh, u32 vxflags,$/;"	f	file:
vxlan_build_gbp_hdr	datapath/linux/vxlan.c	/^static void vxlan_build_gbp_hdr(struct vxlanhdr *vxh, u32 vxflags,$/;"	f	file:
vxlan_configure_exts	datapath/linux/vport-vxlan.c	/^static int vxlan_configure_exts(struct vport *vport, struct nlattr *attr)$/;"	f	file:
vxlan_configure_exts	datapath/vport-vxlan.c	/^static int vxlan_configure_exts(struct vport *vport, struct nlattr *attr)$/;"	f	file:
vxlan_create_sock	datapath/linux/compat/vxlan.c	/^static struct socket *vxlan_create_sock(struct net *net, bool ipv6,$/;"	f	file:
vxlan_create_sock	datapath/linux/vxlan.c	/^static struct socket *vxlan_create_sock(struct net *net, bool ipv6,$/;"	f	file:
vxlan_del_work	datapath/linux/compat/vxlan.c	/^static void vxlan_del_work(struct work_struct *work)$/;"	f	file:
vxlan_del_work	datapath/linux/vxlan.c	/^static void vxlan_del_work(struct work_struct *work)$/;"	f	file:
vxlan_ext_gbp	datapath/linux/vport-vxlan.c	/^static int vxlan_ext_gbp(struct sk_buff *skb)$/;"	f	file:
vxlan_ext_gbp	datapath/vport-vxlan.c	/^static int vxlan_ext_gbp(struct sk_buff *skb)$/;"	f	file:
vxlan_gbp_to_attr	lib/odp-util.c	/^vxlan_gbp_to_attr(struct ofpbuf *a, const void *data_)$/;"	f	file:
vxlan_get_egress_tun_info	datapath/linux/vport-vxlan.c	/^static int vxlan_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
vxlan_get_egress_tun_info	datapath/vport-vxlan.c	/^static int vxlan_get_egress_tun_info(struct vport *vport, struct sk_buff *skb,$/;"	f	file:
vxlan_get_name	datapath/linux/vport-vxlan.c	/^static const char *vxlan_get_name(const struct vport *vport)$/;"	f	file:
vxlan_get_name	datapath/vport-vxlan.c	/^static const char *vxlan_get_name(const struct vport *vport)$/;"	f	file:
vxlan_get_options	datapath/linux/vport-vxlan.c	/^static int vxlan_get_options(const struct vport *vport, struct sk_buff *skb)$/;"	f	file:
vxlan_get_options	datapath/vport-vxlan.c	/^static int vxlan_get_options(const struct vport *vport, struct sk_buff *skb)$/;"	f	file:
vxlan_metadata	datapath/linux/compat/include/net/vxlan.h	/^struct vxlan_metadata {$/;"	s
vxlan_opt_to_nlattr	datapath/flow_netlink.c	/^static int vxlan_opt_to_nlattr(struct sk_buff *skb,$/;"	f	file:
vxlan_opt_to_nlattr	datapath/linux/flow_netlink.c	/^static int vxlan_opt_to_nlattr(struct sk_buff *skb,$/;"	f	file:
vxlan_port	datapath/linux/vport-vxlan.c	/^struct vxlan_port {$/;"	s	file:
vxlan_port	datapath/vport-vxlan.c	/^struct vxlan_port {$/;"	s	file:
vxlan_rcv	datapath/linux/vport-vxlan.c	/^static void vxlan_rcv(struct vxlan_sock *vs, struct sk_buff *skb,$/;"	f	file:
vxlan_rcv	datapath/vport-vxlan.c	/^static void vxlan_rcv(struct vxlan_sock *vs, struct sk_buff *skb,$/;"	f	file:
vxlan_rcv_t	datapath/linux/compat/include/net/vxlan.h	/^typedef void (vxlan_rcv_t)(struct vxlan_sock *vh, struct sk_buff *skb,$/;"	t
vxlan_rcv_t	datapath/linux/compat/include/net/vxlan.h	120;"	d
vxlan_set_owner	datapath/linux/compat/vxlan.c	/^static void vxlan_set_owner(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
vxlan_set_owner	datapath/linux/vxlan.c	/^static void vxlan_set_owner(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
vxlan_sock	datapath/linux/compat/include/net/vxlan.h	/^struct vxlan_sock {$/;"	s
vxlan_sock	datapath/linux/compat/include/net/vxlan.h	117;"	d
vxlan_sock_add	datapath/linux/compat/include/net/vxlan.h	135;"	d
vxlan_sock_put	datapath/linux/compat/vxlan.c	/^static void vxlan_sock_put(struct sk_buff *skb)$/;"	f	file:
vxlan_sock_put	datapath/linux/vxlan.c	/^static void vxlan_sock_put(struct sk_buff *skb)$/;"	f	file:
vxlan_sock_release	datapath/linux/compat/include/net/vxlan.h	140;"	d
vxlan_socket_create	datapath/linux/compat/vxlan.c	/^static struct vxlan_sock *vxlan_socket_create(struct net *net, __be16 port,$/;"	f	file:
vxlan_socket_create	datapath/linux/vxlan.c	/^static struct vxlan_sock *vxlan_socket_create(struct net *net, __be16 port,$/;"	f	file:
vxlan_tnl_create	datapath/linux/vport-vxlan.c	/^static struct vport *vxlan_tnl_create(const struct vport_parms *parms)$/;"	f	file:
vxlan_tnl_create	datapath/vport-vxlan.c	/^static struct vport *vxlan_tnl_create(const struct vport_parms *parms)$/;"	f	file:
vxlan_tnl_destroy	datapath/linux/vport-vxlan.c	/^static void vxlan_tnl_destroy(struct vport *vport)$/;"	f	file:
vxlan_tnl_destroy	datapath/vport-vxlan.c	/^static void vxlan_tnl_destroy(struct vport *vport)$/;"	f	file:
vxlan_tnl_send	datapath/linux/vport-vxlan.c	/^static int vxlan_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
vxlan_tnl_send	datapath/vport-vxlan.c	/^static int vxlan_tnl_send(struct vport *vport, struct sk_buff *skb)$/;"	f	file:
vxlan_tun_opt_from_nlattr	datapath/flow_netlink.c	/^static int vxlan_tun_opt_from_nlattr(const struct nlattr *attr,$/;"	f	file:
vxlan_tun_opt_from_nlattr	datapath/linux/flow_netlink.c	/^static int vxlan_tun_opt_from_nlattr(const struct nlattr *attr,$/;"	f	file:
vxlan_udp_encap_recv	datapath/linux/compat/vxlan.c	/^static int vxlan_udp_encap_recv(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
vxlan_udp_encap_recv	datapath/linux/vxlan.c	/^static int vxlan_udp_encap_recv(struct sock *sk, struct sk_buff *skb)$/;"	f	file:
vxlan_vport	datapath/linux/vport-vxlan.c	/^static inline struct vxlan_port *vxlan_vport(const struct vport *vport)$/;"	f	file:
vxlan_vport	datapath/vport-vxlan.c	/^static inline struct vxlan_port *vxlan_vport(const struct vport *vport)$/;"	f	file:
vxlan_xmit_skb	datapath/linux/compat/include/net/vxlan.h	109;"	d
vxlan_xmit_skb	datapath/linux/compat/include/net/vxlan.h	143;"	d
vxlanhdr	datapath/linux/compat/vxlan.c	/^struct vxlanhdr {$/;"	s	file:
vxlanhdr	datapath/linux/vxlan.c	/^struct vxlanhdr {$/;"	s	file:
vxlanhdr	lib/packets.h	/^struct vxlanhdr {$/;"	s
vxlanhdr_gbp	datapath/linux/compat/include/net/vxlan.h	/^struct vxlanhdr_gbp {$/;"	s
wait	include/sparse/sys/wait.h	26;"	d
wait	include/sparse/sys/wait.h	27;"	d
wait	lib/dpif-provider.h	/^    void (*wait)(struct dpif *dpif);$/;"	m	struct:dpif_class
wait	lib/netdev-provider.h	/^    void (*wait)(void);$/;"	m	struct:netdev_class
wait	lib/stream-provider.h	/^    void (*wait)(struct pstream *pstream);$/;"	m	struct:pstream_class
wait	lib/stream-provider.h	/^    void (*wait)(struct stream *stream, enum stream_wait_type type);$/;"	m	struct:stream_class
wait	lib/vconn-provider.h	/^    void (*wait)(struct pvconn *pvconn);$/;"	m	struct:pvconn_class
wait	lib/vconn-provider.h	/^    void (*wait)(struct vconn *vconn, enum vconn_wait_type type);$/;"	m	struct:vconn_class
wait	ofproto/ofproto-dpif.c	/^wait(struct ofproto *ofproto_)$/;"	f	file:
wait	ofproto/ofproto-provider.h	/^    void (*wait)(struct ofproto *ofproto);$/;"	m	struct:ofproto_class
wait	python/ovs/db/idl.py	/^    def wait(self, poller):$/;"	m	class:Idl
wait	python/ovs/db/idl.py	/^    def wait(self, poller):$/;"	m	class:Transaction
wait	python/ovs/jsonrpc.py	/^    def wait(self, poller):$/;"	m	class:Connection
wait	python/ovs/jsonrpc.py	/^    def wait(self, poller):$/;"	m	class:Session
wait	python/ovs/reconnect.py	/^    def wait(self, poller, now):$/;"	m	class:Reconnect
wait	python/ovs/stream.py	/^    def wait(self, poller):$/;"	m	class:PassiveStream
wait	python/ovs/stream.py	/^    def wait(self, poller, wait):$/;"	m	class:Stream
wait	python/ovs/unixctl/server.py	/^    def wait(self, poller):$/;"	m	class:UnixctlServer
wait_auxdata	ovsdb/execution.c	/^struct wait_auxdata {$/;"	s	file:
wait_for_reload	utilities/ovs-vsctl.c	/^static bool wait_for_reload = true;$/;"	v	file:
wait_pid	tests/test-ovn.c	/^wait_pid(pid_t *pids, int *n)$/;"	f	file:
waiters	ovsdb/server.h	/^    struct hmap waiters;        \/* "ovsdb_lock_waiter *"s by lock name. *\/$/;"	m	struct:ovsdb_session	typeref:struct:ovsdb_session::hmap
waiters	ovsdb/server.h	/^    struct ovs_list waiters;     \/* Contains "struct ovsdb_lock_waiter"s. *\/$/;"	m	struct:ovsdb_lock	typeref:struct:ovsdb_lock::ovs_list
waitpid	include/sparse/sys/wait.h	30;"	d
waitpid	include/sparse/sys/wait.h	31;"	d
wall_clock	lib/timeval.c	/^static struct clock wall_clock;      \/* CLOCK_REALTIME. *\/$/;"	v	typeref:struct:clock	file:
want_mlockall	vswitchd/ovs-vswitchd.c	/^static bool want_mlockall;$/;"	v	file:
want_report	lib/memory.c	/^static bool want_report;$/;"	v	file:
want_to_poll_events	lib/stream-ssl.c	/^want_to_poll_events(int want)$/;"	f	file:
wanted_ports	vswitchd/bridge.c	/^    struct shash wanted_ports;$/;"	m	struct:bridge	typeref:struct:bridge::shash	file:
warn	build-aux/check-structs	/^def warn(msg):$/;"	f
warn	python/ovs/vlog.py	/^    def warn(self, message, **kwargs):$/;"	m	class:Vlog
warn	tests/test-rstp.c	/^warn(const char *message, ...)$/;"	f	file:
warn	tests/test-stp.c	/^warn(const char *message, ...)$/;"	f	file:
warn_is_enabled	python/ovs/vlog.py	/^    def warn_is_enabled(self):$/;"	m	class:Vlog
warnings	utilities/bugtool/ovs-bugtool	/^import warnings$/;"	i
warnx	lib/getopt_long.c	64;"	d	file:
warp	lib/timeval.c	/^    long long int warp;      \/* 'total_warp' offset done in steps of 'warp'. *\/$/;"	m	struct:large_warp	file:
was_mpls	ofproto/ofproto-dpif-xlate.c	/^    bool was_mpls;$/;"	m	struct:xlate_ctx	file:
watch	include/openflow/openflow-1.5.h	/^    ovs_be32         watch;   \/* The port or the group.  *\/$/;"	m	struct:ofp15_group_bucket_prop_watch
watch_group	include/openflow/openflow-1.1.h	/^    ovs_be32 watch_group;            \/* Group whose state affects whether this$/;"	m	struct:ofp11_bucket
watch_group	lib/ofp-util.h	/^    uint32_t watch_group;       \/* Group whose state affects whether this$/;"	m	struct:ofputil_bucket
watch_port	include/openflow/openflow-1.1.h	/^    ovs_be32 watch_port;             \/* Port whose state affects whether this$/;"	m	struct:ofp11_bucket
watch_port	lib/ofp-util.h	/^    ofp_port_t watch_port;      \/* Port whose state affects whether this bucket$/;"	m	struct:ofputil_bucket
watchdp	xenserver/etc_profile.d_openvswitch.sh	/^function watchdp {$/;"	f
watchdpflows	xenserver/etc_profile.d_openvswitch.sh	/^function watchdpflows {$/;"	f
watchflows	xenserver/etc_profile.d_openvswitch.sh	/^function watchflows {$/;"	f
wc	lib/learning-switch.c	/^    struct flow_wildcards wc;   \/* Wildcards to apply to flows. *\/$/;"	m	struct:lswitch	typeref:struct:lswitch::flow_wildcards	file:
wc	lib/match.h	/^    struct flow_wildcards wc;$/;"	m	struct:match	typeref:struct:match::flow_wildcards
wc	ofproto/ofproto-dpif-upcall.c	/^    struct flow_wildcards wc;      \/* Dependencies that megaflow must match. *\/$/;"	m	struct:upcall	typeref:struct:upcall::flow_wildcards	file:
wc	ofproto/ofproto-dpif-xlate.c	/^    struct flow_wildcards *wc;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::flow_wildcards	file:
wc	ofproto/ofproto-dpif-xlate.h	/^    struct flow_wildcards *wc;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::flow_wildcards
wc	ofproto/ofproto-dpif.c	/^    struct flow_wildcards wc;$/;"	m	struct:trace_ctx	typeref:struct:trace_ctx::flow_wildcards	file:
wc10	lib/ofp-util.c	/^    enum ofp10_flow_wildcards wc10;$/;"	m	struct:ofp10_wc_map	typeref:enum:ofp10_wc_map::ofp10_flow_wildcards	file:
wc11	lib/ofp-util.c	/^    enum ofp11_flow_match_fields wc11;$/;"	m	struct:ofp11_wc_map	typeref:enum:ofp11_wc_map::ofp11_flow_match_fields	file:
weak_ref	lib/ovsdb-data.h	/^    bool weak_ref;              \/* Parsed a weak reference to this row? *\/$/;"	m	struct:ovsdb_symbol
weak_ref_table	lib/db-ctl-base.h	/^struct weak_ref_table {$/;"	s
weak_schema	tests/testsuite	/^weak_schema () {$/;"	f
weight	include/openflow/openflow-1.1.h	/^    ovs_be16 weight;                 \/* Relative weight of bucket. Only$/;"	m	struct:ofp11_bucket
weight	include/openflow/openflow-1.5.h	/^    ovs_be16         weight;  \/* Relative weight of bucket. *\/$/;"	m	struct:ofp15_group_bucket_prop_weight
weight	lib/ofp-util.h	/^    uint16_t weight;            \/* Relative weight, for "select" groups. *\/$/;"	m	struct:ofputil_bucket
wevent	lib/daemon-windows.c	/^static HANDLE wevent;$/;"	v	file:
wevent	lib/fatal-signal.c	/^static HANDLE wevent;$/;"	v	file:
wevent	lib/poll-loop.c	/^    HANDLE wevent;              \/* Events for WaitForMultipleObjects(). *\/$/;"	m	struct:poll_node	file:
when	lib/timeval.c	/^    long long int when;         \/* Time that this sample was taken. *\/$/;"	m	struct:cpu_usage	file:
where	include/openvswitch/thread.h	/^    const char *where;          \/* NULL if and only if uninitialized. *\/$/;"	m	struct:ovs_mutex
where	lib/ovs-thread.h	/^    const char *where;          \/* NULL if and only if uninitialized. *\/$/;"	m	struct:ovs_rwlock
where	lib/poll-loop.c	/^    const char *where;          \/* Where poll_node was created. *\/$/;"	m	struct:poll_node	file:
where_uuid_equals	lib/ovsdb-idl.c	/^where_uuid_equals(const struct uuid *uuid)$/;"	f	file:
width	lib/util.c	/^    unsigned int width;$/;"	m	struct:scan_spec	file:
width	ovn/lib/expr.h	/^    int width;$/;"	m	struct:expr_symbol
wild_or_nonmatchable_fields	lib/ofp-util.c	/^wild_or_nonmatchable_fields(const struct ofputil_table_features *features)$/;"	f	file:
wildcard	lib/ofp-util.h	/^    struct mf_bitmap wildcard;  \/* Subset of 'match' that may be wildcarded. *\/$/;"	m	struct:ofputil_table_features	typeref:struct:ofputil_table_features::mf_bitmap
wildcard_extra_bits	tests/test-classifier.c	/^wildcard_extra_bits(struct flow_wildcards *mask)$/;"	f	file:
wildcards	include/openflow/openflow-1.0.h	/^    ovs_be32 wildcards;        \/* Wildcard fields. *\/$/;"	m	struct:ofp10_match
wildcards	include/openflow/openflow-1.0.h	/^    ovs_be32 wildcards;      \/* Bitmap of OFPFW10_* wildcards that are$/;"	m	struct:ofp10_table_stats
wildcards	include/openflow/openflow-1.1.h	/^    ovs_be32 wildcards;        \/* Wildcard fields. *\/$/;"	m	struct:ofp11_match
wildcards	include/openflow/openflow-1.1.h	/^    ovs_be32 wildcards;      \/* Bitmap of OFPFMF_* wildcards that are$/;"	m	struct:ofp11_table_stats
wildcards	include/openflow/openflow-1.2.h	/^    ovs_be64 wildcards;      \/* Bitmap of (1 << OFPXMT_*) wildcards that are$/;"	m	struct:ofp12_table_stats
wildcards	lib/learning-switch.h	/^    uint32_t wildcards;$/;"	m	struct:lswitch_config
wildcards	utilities/ovs-testcontroller.c	/^static uint32_t wildcards = 0;$/;"	v	file:
window	datapath-windows/ovsext/NetProto.h	/^   UINT16    window;$/;"	m	struct:TCPHdr
windows_open	lib/stream-tcp.c	/^windows_open(const char *name, char *suffix, struct stream **streamp,$/;"	f	file:
windows_stream_class	lib/stream-tcp.c	/^const struct stream_class windows_stream_class = {$/;"	v	typeref:struct:stream_class
wire_reason	ofproto/connmgr.c	/^wire_reason(struct ofconn *ofconn, const struct ofproto_packet_in *pin)$/;"	f	file:
without_constraints	python/ovs/db/types.py	/^    def without_constraints(self):$/;"	m	class:BaseType
word2	datapath/linux/vport-lisp.c	/^		} word2;$/;"	m	union:lisphdr::__anon53	typeref:struct:lisphdr::__anon53::__anon54	file:
word2	datapath/vport-lisp.c	/^		} word2;$/;"	m	union:lisphdr::__anon56	typeref:struct:lisphdr::__anon56::__anon57	file:
wrap_json	lib/ovsdb-data.c	/^wrap_json(const char *name, struct json *wrapped)$/;"	f	file:
wref_column	lib/db-ctl-base.h	/^    const struct ovsdb_idl_column *wref_column;$/;"	m	struct:weak_ref_table	typeref:struct:weak_ref_table::ovsdb_idl_column
wref_table	lib/db-ctl-base.h	/^    const struct weak_ref_table wref_table;$/;"	m	struct:cmd_show_table	typeref:struct:cmd_show_table::weak_ref_table
writable	lib/meta-flow.h	/^    bool writable;              \/* May be written by actions? *\/$/;"	m	struct:mf_field
write	lib/ofp-util.h	/^        } write, apply;$/;"	m	struct:ofputil_table_features::ofputil_table_instruction_features	typeref:struct:ofputil_table_features::ofputil_table_instruction_features::ofputil_table_action_features
write	utilities/bugtool/ovs-bugtool	/^    def write(self, s):$/;"	m	class:StringIOmtime
write	xenserver/opt_xensource_libexec_InterfaceReconfigure.py	/^    def write(self, args):$/;"	m	class:ConfigurationFile
write_actions	include/openflow/openflow-1.1.h	/^    ovs_be32 write_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp11_table_stats
write_actions	include/openflow/openflow-1.2.h	/^    ovs_be32 write_actions;  \/* Bitmap of OFPAT_* that are supported$/;"	m	struct:ofp12_table_stats
write_bool_column	ovsdb/ovsdb-server.c	/^write_bool_column(struct ovsdb_row *row, const char *column_name, bool value)$/;"	f	file:
write_error	ovsdb/log.c	/^    bool write_error;$/;"	m	struct:ovsdb_log	file:
write_fully	lib/socket-util.c	/^write_fully(int fd, const void *p_, size_t size, size_t *bytes_written)$/;"	f
write_fully	python/ovs/socket_util.py	/^def write_fully(fd, buf):$/;"	f
write_handle	lib/daemon-windows.c	/^static HANDLE write_handle;  \/* End of pipe to write to parent. *\/$/;"	v	file:
write_setfields	include/openflow/openflow-1.2.h	/^    ovs_be64 write_setfields;\/* Bitmap of (1 << OFPXMT_*) header fields that$/;"	m	struct:ofp12_table_stats
write_string_string_column	ovsdb/ovsdb-server.c	/^write_string_string_column(struct ovsdb_row *row, const char *column_name,$/;"	f	file:
written	lib/ovsdb-idl-provider.h	/^    unsigned long int *written; \/* Bitmap of columns from "new" to write. *\/$/;"	m	struct:ovsdb_idl_row
x2nrealloc	lib/util.c	/^x2nrealloc(void *p, size_t *n, size_t s)$/;"	f
xapi_down	xenserver/usr_share_openvswitch_scripts_ovs-xapi-sync	/^xapi_down = False$/;"	v
xapi_local	tests/MockXenAPI.py	/^def xapi_local():$/;"	f
xasprintf	lib/util.c	/^xasprintf(const char *format, ...)$/;"	f
xastrftime_msec	lib/dynamic-string.c	/^xastrftime_msec(const char *template, long long int when, bool utc)$/;"	f
xbridge	ofproto/ofproto-dpif-xlate.c	/^    const struct xbridge *xbridge;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::xbridge	file:
xbridge	ofproto/ofproto-dpif-xlate.c	/^    struct xbridge *xbridge;         \/* Parent bridge. *\/$/;"	m	struct:xport	typeref:struct:xport::xbridge	file:
xbridge	ofproto/ofproto-dpif-xlate.c	/^    struct xbridge *xbridge;       \/* Parent xbridge. *\/$/;"	m	struct:xbundle	typeref:struct:xbundle::xbridge	file:
xbridge	ofproto/ofproto-dpif-xlate.c	/^struct xbridge {$/;"	s	file:
xbridge_lookup	ofproto/ofproto-dpif-xlate.c	/^xbridge_lookup(struct xlate_cfg *xcfg, const struct ofproto_dpif *ofproto)$/;"	f	file:
xbridges	ofproto/ofproto-dpif-xlate.c	/^    struct hmap xbridges;$/;"	m	struct:xlate_cfg	typeref:struct:xlate_cfg::hmap	file:
xbundle	ofproto/ofproto-dpif-xlate.c	/^    struct xbundle *xbundle;         \/* Parent xbundle or null. *\/$/;"	m	struct:xport	typeref:struct:xport::xbundle	file:
xbundle	ofproto/ofproto-dpif-xlate.c	/^struct xbundle {$/;"	s	file:
xbundle_includes_vlan	ofproto/ofproto-dpif-xlate.c	/^xbundle_includes_vlan(const struct xbundle *xbundle, uint16_t vlan)$/;"	f	file:
xbundle_lookup	ofproto/ofproto-dpif-xlate.c	/^xbundle_lookup(struct xlate_cfg *xcfg, const struct ofbundle *ofbundle)$/;"	f	file:
xbundle_mirror_dst	ofproto/ofproto-dpif-xlate.c	/^xbundle_mirror_dst(const struct xbridge *xbridge, struct xbundle *xbundle)$/;"	f	file:
xbundle_mirror_out	ofproto/ofproto-dpif-xlate.c	/^xbundle_mirror_out(const struct xbridge *xbridge, struct xbundle *xbundle)$/;"	f	file:
xbundle_mirror_src	ofproto/ofproto-dpif-xlate.c	/^xbundle_mirror_src(const struct xbridge *xbridge, struct xbundle *xbundle)$/;"	f	file:
xbundle_trunks_vlan	ofproto/ofproto-dpif-xlate.c	/^xbundle_trunks_vlan(const struct xbundle *bundle, uint16_t vlan)$/;"	f	file:
xbundles	ofproto/ofproto-dpif-xlate.c	/^    struct hmap xbundles;$/;"	m	struct:xlate_cfg	typeref:struct:xlate_cfg::hmap	file:
xbundles	ofproto/ofproto-dpif-xlate.c	/^    struct ovs_list xbundles;     \/* Owned xbundles. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::ovs_list	file:
xc_entry	ofproto/ofproto-dpif-xlate.c	/^struct xc_entry {$/;"	s	file:
xc_type	ofproto/ofproto-dpif-xlate.c	/^enum xc_type {$/;"	g	file:
xcache	ofproto/ofproto-dpif-xlate.h	/^    struct xlate_cache *xcache;$/;"	m	struct:xlate_in	typeref:struct:xlate_in::xlate_cache
xcalloc	lib/util.c	/^xcalloc(size_t count, size_t size)$/;"	f
xclock_gettime	lib/timeval.c	/^xclock_gettime(clock_t id, struct timespec *ts)$/;"	f
xenserver	vswitchd/xenserver.c	/^VLOG_DEFINE_THIS_MODULE(xenserver);$/;"	v
xenserver_get_host_uuid	vswitchd/xenserver.c	/^xenserver_get_host_uuid(void)$/;"	f
xfork	lib/ovs-thread.h	517;"	d
xfork_at	lib/ovs-thread.c	/^xfork_at(const char *where)$/;"	f
xgetfiletime	lib/timeval.c	/^xgetfiletime(void)$/;"	f	file:
xgettimeofday	lib/timeval.c	/^xgettimeofday(struct timeval *tv)$/;"	f
xid	datapath/actions.c	/^  u32 xid;$/;"	m	struct:dhcphdr	file:
xid	datapath/linux/actions.c	/^  u32 xid;$/;"	m	struct:dhcphdr	file:
xid	include/openflow/nicira-ext.h	/^    ovs_be32 xid;               \/* Controller-specified xid from flow_mod. *\/$/;"	m	struct:nx_flow_update_abbrev
xid	include/openflow/openflow-common.h	/^    ovs_be32 xid;       \/* Transaction id associated with this packet.$/;"	m	struct:ofp_header
xid	lib/dhcp.h	/^    ovs_be32 xid;               \/* Transaction ID. *\/$/;"	m	struct:dhcp_header
xid	lib/ofp-util.h	/^    ovs_be32 xid;$/;"	m	struct:ofputil_flow_update
xid	lib/ofp-util.h	/^    ovs_be32 xid;$/;"	m	struct:ofputil_requestforward
xid	ovn/controller/ofctrl.c	/^static ovs_be32 xid, xid2;$/;"	v	file:
xid2	ovn/controller/ofctrl.c	/^static ovs_be32 xid, xid2;$/;"	v	file:
xin	ofproto/ofproto-dpif-xlate.c	/^    struct xlate_in *xin;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::xlate_in	file:
xin	ofproto/ofproto-dpif.c	/^    struct xlate_in xin;$/;"	m	struct:trace_ctx	typeref:struct:trace_ctx::xlate_in	file:
xlate_action_set	ofproto/ofproto-dpif-xlate.c	/^xlate_action_set(struct xlate_ctx *ctx)$/;"	f	file:
xlate_actions	ofproto/ofproto-dpif-xlate.c	/^COVERAGE_DEFINE(xlate_actions);$/;"	v
xlate_actions	ofproto/ofproto-dpif-xlate.c	/^xlate_actions(struct xlate_in *xin, struct xlate_out *xout)$/;"	f
xlate_actions_for_side_effects	ofproto/ofproto-dpif-xlate.c	/^xlate_actions_for_side_effects(struct xlate_in *xin)$/;"	f
xlate_actions_oversize	ofproto/ofproto-dpif-xlate.c	/^COVERAGE_DEFINE(xlate_actions_oversize);$/;"	v
xlate_actions_too_many_output	ofproto/ofproto-dpif-xlate.c	/^COVERAGE_DEFINE(xlate_actions_too_many_output);$/;"	v
xlate_all_group	ofproto/ofproto-dpif-xlate.c	/^xlate_all_group(struct xlate_ctx *ctx, struct group_dpif *group)$/;"	f	file:
xlate_bond_recirc	ofproto/ofproto-dpif-xlate.c	/^struct xlate_bond_recirc {$/;"	s	file:
xlate_bundle_action	ofproto/ofproto-dpif-xlate.c	/^xlate_bundle_action(struct xlate_ctx *ctx,$/;"	f	file:
xlate_bundle_remove	ofproto/ofproto-dpif-xlate.c	/^xlate_bundle_remove(struct ofbundle *ofbundle)$/;"	f
xlate_bundle_set	ofproto/ofproto-dpif-xlate.c	/^xlate_bundle_set(struct ofproto_dpif *ofproto, struct ofbundle *ofbundle,$/;"	f
xlate_cache	ofproto/ofproto-dpif-xlate.c	/^struct xlate_cache {$/;"	s	file:
xlate_cache_add_entry	ofproto/ofproto-dpif-xlate.c	/^xlate_cache_add_entry(struct xlate_cache *xcache, enum xc_type type)$/;"	f	file:
xlate_cache_clear	ofproto/ofproto-dpif-xlate.c	/^xlate_cache_clear(struct xlate_cache *xcache)$/;"	f
xlate_cache_clear_netflow	ofproto/ofproto-dpif-xlate.c	/^xlate_cache_clear_netflow(struct netflow *netflow, struct flow *flow)$/;"	f	file:
xlate_cache_delete	ofproto/ofproto-dpif-xlate.c	/^xlate_cache_delete(struct xlate_cache *xcache)$/;"	f
xlate_cache_netdev	ofproto/ofproto-dpif-xlate.c	/^xlate_cache_netdev(struct xc_entry *entry, const struct dpif_flow_stats *stats)$/;"	f	file:
xlate_cache_new	ofproto/ofproto-dpif-xlate.c	/^xlate_cache_new(void)$/;"	f
xlate_cache_normal	ofproto/ofproto-dpif-xlate.c	/^xlate_cache_normal(struct ofproto_dpif *ofproto, struct flow *flow, int vlan)$/;"	f	file:
xlate_cfg	ofproto/ofproto-dpif-xlate.c	/^struct xlate_cfg {$/;"	s	file:
xlate_commit_actions	ofproto/ofproto-dpif-xlate.c	/^xlate_commit_actions(struct xlate_ctx *ctx)$/;"	f	file:
xlate_ctx	ofproto/ofproto-dpif-xlate.c	/^struct xlate_ctx {$/;"	s	file:
xlate_default_select_group	ofproto/ofproto-dpif-xlate.c	/^xlate_default_select_group(struct xlate_ctx *ctx, struct group_dpif *group)$/;"	f	file:
xlate_dev_unref	ofproto/ofproto-dpif-xlate.c	/^xlate_dev_unref(struct xc_entry *entry)$/;"	f	file:
xlate_enqueue_action	ofproto/ofproto-dpif-xlate.c	/^xlate_enqueue_action(struct xlate_ctx *ctx,$/;"	f	file:
xlate_ff_group	ofproto/ofproto-dpif-xlate.c	/^xlate_ff_group(struct xlate_ctx *ctx, struct group_dpif *group)$/;"	f	file:
xlate_fin_timeout	ofproto/ofproto-dpif-xlate.c	/^xlate_fin_timeout(struct xlate_ctx *ctx,$/;"	f	file:
xlate_fin_timeout__	ofproto/ofproto-dpif-xlate.c	/^xlate_fin_timeout__(struct rule_dpif *rule, uint16_t tcp_flags,$/;"	f	file:
xlate_group_action	ofproto/ofproto-dpif-xlate.c	/^xlate_group_action(struct xlate_ctx *ctx, uint32_t group_id)$/;"	f	file:
xlate_group_action__	ofproto/ofproto-dpif-xlate.c	/^xlate_group_action__(struct xlate_ctx *ctx, struct group_dpif *group)$/;"	f	file:
xlate_group_bucket	ofproto/ofproto-dpif-xlate.c	/^xlate_group_bucket(struct xlate_ctx *ctx, struct ofputil_bucket *bucket)$/;"	f	file:
xlate_group_stats	ofproto/ofproto-dpif-xlate.c	/^xlate_group_stats(struct xlate_ctx *ctx, struct group_dpif *group,$/;"	f	file:
xlate_hash_fields_select_group	ofproto/ofproto-dpif-xlate.c	/^xlate_hash_fields_select_group(struct xlate_ctx *ctx, struct group_dpif *group)$/;"	f	file:
xlate_in	ofproto/ofproto-dpif-xlate.h	/^struct xlate_in {$/;"	s
xlate_in_init	ofproto/ofproto-dpif-xlate.c	/^xlate_in_init(struct xlate_in *xin, struct ofproto_dpif *ofproto,$/;"	f
xlate_learn_action	ofproto/ofproto-dpif-xlate.c	/^xlate_learn_action(struct xlate_ctx *ctx, const struct ofpact_learn *learn)$/;"	f	file:
xlate_learn_action__	ofproto/ofproto-dpif-xlate.c	/^xlate_learn_action__(struct xlate_ctx *ctx, const struct ofpact_learn *learn,$/;"	f	file:
xlate_lookup	ofproto/ofproto-dpif-xlate.c	/^xlate_lookup(const struct dpif_backer *backer, const struct flow *flow,$/;"	f
xlate_lookup_ofproto	ofproto/ofproto-dpif-xlate.c	/^xlate_lookup_ofproto(const struct dpif_backer *backer, const struct flow *flow,$/;"	f
xlate_lookup_ofproto_	ofproto/ofproto-dpif-xlate.c	/^xlate_lookup_ofproto_(const struct dpif_backer *backer, const struct flow *flow,$/;"	f	file:
xlate_normal	ofproto/ofproto-dpif-xlate.c	/^xlate_normal(struct xlate_ctx *ctx)$/;"	f	file:
xlate_normal_flood	ofproto/ofproto-dpif-xlate.c	/^xlate_normal_flood(struct xlate_ctx *ctx, struct xbundle *in_xbundle,$/;"	f	file:
xlate_ofpact_resubmit	ofproto/ofproto-dpif-xlate.c	/^xlate_ofpact_resubmit(struct xlate_ctx *ctx,$/;"	f	file:
xlate_ofport_remove	ofproto/ofproto-dpif-xlate.c	/^xlate_ofport_remove(struct ofport_dpif *ofport)$/;"	f
xlate_ofport_set	ofproto/ofproto-dpif-xlate.c	/^xlate_ofport_set(struct ofproto_dpif *ofproto, struct ofbundle *ofbundle,$/;"	f
xlate_ofproto_set	ofproto/ofproto-dpif-xlate.c	/^xlate_ofproto_set(struct ofproto_dpif *ofproto, const char *name,$/;"	f
xlate_out	ofproto/ofproto-dpif-xlate.h	/^struct xlate_out {$/;"	s
xlate_out_add_recirc	ofproto/ofproto-dpif-xlate.h	/^xlate_out_add_recirc(struct xlate_out *xout, uint32_t id)$/;"	f
xlate_out_free_recircs	ofproto/ofproto-dpif-xlate.h	/^xlate_out_free_recircs(struct xlate_out *xout)$/;"	f
xlate_out_get_recircs	ofproto/ofproto-dpif-xlate.h	/^xlate_out_get_recircs(const struct xlate_out *xout)$/;"	f
xlate_out_take_recircs	ofproto/ofproto-dpif-xlate.h	/^xlate_out_take_recircs(struct xlate_out *xout)$/;"	f
xlate_out_uninit	ofproto/ofproto-dpif-xlate.c	/^xlate_out_uninit(struct xlate_out *xout)$/;"	f
xlate_output_action	ofproto/ofproto-dpif-xlate.c	/^xlate_output_action(struct xlate_ctx *ctx,$/;"	f	file:
xlate_output_reg_action	ofproto/ofproto-dpif-xlate.c	/^xlate_output_reg_action(struct xlate_ctx *ctx,$/;"	f	file:
xlate_push_stats	ofproto/ofproto-dpif-xlate.c	/^xlate_push_stats(struct xlate_cache *xcache,$/;"	f
xlate_recursively	ofproto/ofproto-dpif-xlate.c	/^xlate_recursively(struct xlate_ctx *ctx, struct rule_dpif *rule)$/;"	f	file:
xlate_remove_ofproto	ofproto/ofproto-dpif-xlate.c	/^xlate_remove_ofproto(struct ofproto_dpif *ofproto)$/;"	f
xlate_report	ofproto/ofproto-dpif-xlate.c	/^xlate_report(struct xlate_ctx *ctx, const char *format, ...)$/;"	f	file:
xlate_report_actions	ofproto/ofproto-dpif-xlate.c	/^xlate_report_actions(struct xlate_ctx *ctx, const char *title,$/;"	f	file:
xlate_resubmit_resource_check	ofproto/ofproto-dpif-xlate.c	/^xlate_resubmit_resource_check(struct xlate_ctx *ctx)$/;"	f	file:
xlate_sample_action	ofproto/ofproto-dpif-xlate.c	/^xlate_sample_action(struct xlate_ctx *ctx,$/;"	f	file:
xlate_select_group	ofproto/ofproto-dpif-xlate.c	/^xlate_select_group(struct xlate_ctx *ctx, struct group_dpif *group)$/;"	f	file:
xlate_send_packet	ofproto/ofproto-dpif-xlate.c	/^xlate_send_packet(const struct ofport_dpif *ofport, struct dp_packet *packet)$/;"	f
xlate_set_queue_action	ofproto/ofproto-dpif-xlate.c	/^xlate_set_queue_action(struct xlate_ctx *ctx, uint32_t queue_id)$/;"	f	file:
xlate_table_action	ofproto/ofproto-dpif-xlate.c	/^xlate_table_action(struct xlate_ctx *ctx, ofp_port_t in_port, uint8_t table_id,$/;"	f	file:
xlate_txn_commit	ofproto/ofproto-dpif-xlate.c	/^xlate_txn_commit(void)$/;"	f
xlate_txn_start	ofproto/ofproto-dpif-xlate.c	/^xlate_txn_start(void)$/;"	f
xlate_wc_finish	ofproto/ofproto-dpif-xlate.c	/^xlate_wc_finish(struct xlate_ctx *ctx)$/;"	f	file:
xlate_wc_init	ofproto/ofproto-dpif-xlate.c	/^xlate_wc_init(struct xlate_ctx *ctx)$/;"	f	file:
xlate_write_actions	ofproto/ofproto-dpif-xlate.c	/^xlate_write_actions(struct xlate_ctx *ctx, const struct ofpact *a)$/;"	f	file:
xlate_xbridge_copy	ofproto/ofproto-dpif-xlate.c	/^xlate_xbridge_copy(struct xbridge *xbridge)$/;"	f	file:
xlate_xbridge_init	ofproto/ofproto-dpif-xlate.c	/^xlate_xbridge_init(struct xlate_cfg *xcfg, struct xbridge *xbridge)$/;"	f	file:
xlate_xbridge_remove	ofproto/ofproto-dpif-xlate.c	/^xlate_xbridge_remove(struct xlate_cfg *xcfg, struct xbridge *xbridge)$/;"	f	file:
xlate_xbridge_set	ofproto/ofproto-dpif-xlate.c	/^xlate_xbridge_set(struct xbridge *xbridge,$/;"	f	file:
xlate_xbundle_copy	ofproto/ofproto-dpif-xlate.c	/^xlate_xbundle_copy(struct xbridge *xbridge, struct xbundle *xbundle)$/;"	f	file:
xlate_xbundle_init	ofproto/ofproto-dpif-xlate.c	/^xlate_xbundle_init(struct xlate_cfg *xcfg, struct xbundle *xbundle)$/;"	f	file:
xlate_xbundle_remove	ofproto/ofproto-dpif-xlate.c	/^xlate_xbundle_remove(struct xlate_cfg *xcfg, struct xbundle *xbundle)$/;"	f	file:
xlate_xbundle_set	ofproto/ofproto-dpif-xlate.c	/^xlate_xbundle_set(struct xbundle *xbundle,$/;"	f	file:
xlate_xcfg_free	ofproto/ofproto-dpif-xlate.c	/^xlate_xcfg_free(struct xlate_cfg *xcfg)$/;"	f	file:
xlate_xport_copy	ofproto/ofproto-dpif-xlate.c	/^xlate_xport_copy(struct xbridge *xbridge, struct xbundle *xbundle,$/;"	f	file:
xlate_xport_init	ofproto/ofproto-dpif-xlate.c	/^xlate_xport_init(struct xlate_cfg *xcfg, struct xport *xport)$/;"	f	file:
xlate_xport_remove	ofproto/ofproto-dpif-xlate.c	/^xlate_xport_remove(struct xlate_cfg *xcfg, struct xport *xport)$/;"	f	file:
xlate_xport_set	ofproto/ofproto-dpif-xlate.c	/^xlate_xport_set(struct xport *xport, odp_port_t odp_port,$/;"	f	file:
xmalloc	lib/util.c	/^xmalloc(size_t size)$/;"	f
xmalloc_cacheline	lib/util.c	/^xmalloc_cacheline(size_t size)$/;"	f
xmemdup	lib/util.c	/^xmemdup(const void *p_, size_t size)$/;"	f
xmemdup0	lib/util.c	/^xmemdup0(const char *p_, size_t length)$/;"	f
xml	build-aux/xml2nroff	/^import xml.dom.minidom$/;"	i
xml	ofproto/ipfix-gen-entities	/^import xml.sax$/;"	i
xml	ofproto/ipfix-gen-entities	/^import xml.sax.handler$/;"	i
xml	ovsdb/ovsdb-doc	/^import xml.dom.minidom$/;"	i
xmlrpc	python/ovstest/rpcserver.py	/^from twisted.web import xmlrpc$/;"	i
xmlrpc_add_port_to_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_add_port_to_bridge(self, bridge, port):$/;"	m	class:TestArena
xmlrpc_close_tcp_listener	python/ovstest/rpcserver.py	/^    def xmlrpc_close_tcp_listener(self, handle):$/;"	m	class:TestArena
xmlrpc_close_tcp_sender	python/ovstest/rpcserver.py	/^    def xmlrpc_close_tcp_sender(self, handle):$/;"	m	class:TestArena
xmlrpc_close_udp_listener	python/ovstest/rpcserver.py	/^    def xmlrpc_close_udp_listener(self, handle):$/;"	m	class:TestArena
xmlrpc_close_udp_sender	python/ovstest/rpcserver.py	/^    def xmlrpc_close_udp_sender(self, handle):$/;"	m	class:TestArena
xmlrpc_create_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_create_bridge(self, brname):$/;"	m	class:TestArena
xmlrpc_create_tcp_listener	python/ovstest/rpcserver.py	/^    def xmlrpc_create_tcp_listener(self, port):$/;"	m	class:TestArena
xmlrpc_create_tcp_sender	python/ovstest/rpcserver.py	/^    def xmlrpc_create_tcp_sender(self, his_ip, his_port, duration):$/;"	m	class:TestArena
xmlrpc_create_test_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_create_test_bridge(self, bridge, iface):$/;"	m	class:TestArena
xmlrpc_create_udp_listener	python/ovstest/rpcserver.py	/^    def xmlrpc_create_udp_listener(self, port):$/;"	m	class:TestArena
xmlrpc_create_udp_sender	python/ovstest/rpcserver.py	/^    def xmlrpc_create_udp_sender(self, host, count, size, duration):$/;"	m	class:TestArena
xmlrpc_del_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_del_bridge(self, brname):$/;"	m	class:TestArena
xmlrpc_del_port_from_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_del_port_from_bridge(self, port):$/;"	m	class:TestArena
xmlrpc_del_test_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_del_test_bridge(self, bridge, iface):$/;"	m	class:TestArena
xmlrpc_get_driver	python/ovstest/rpcserver.py	/^    def xmlrpc_get_driver(self, iface):$/;"	m	class:TestArena
xmlrpc_get_iface_from_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_get_iface_from_bridge(self, brname):$/;"	m	class:TestArena
xmlrpc_get_interface	python/ovstest/rpcserver.py	/^    def xmlrpc_get_interface(self, address):$/;"	m	class:TestArena
xmlrpc_get_interface_from_routing_decision	python/ovstest/rpcserver.py	/^    def xmlrpc_get_interface_from_routing_decision(self, ip):$/;"	m	class:TestArena
xmlrpc_get_interface_mtu	python/ovstest/rpcserver.py	/^    def xmlrpc_get_interface_mtu(self, iface):$/;"	m	class:TestArena
xmlrpc_get_my_address	python/ovstest/rpcserver.py	/^    def xmlrpc_get_my_address(self):$/;"	m	class:TestArena
xmlrpc_get_my_address_from	python/ovstest/rpcserver.py	/^    def xmlrpc_get_my_address_from(self, his_ip, his_port):$/;"	m	class:TestArena
xmlrpc_get_tcp_listener_results	python/ovstest/rpcserver.py	/^    def xmlrpc_get_tcp_listener_results(self, handle):$/;"	m	class:TestArena
xmlrpc_get_tcp_sender_results	python/ovstest/rpcserver.py	/^    def xmlrpc_get_tcp_sender_results(self, handle):$/;"	m	class:TestArena
xmlrpc_get_udp_listener_results	python/ovstest/rpcserver.py	/^    def xmlrpc_get_udp_listener_results(self, handle):$/;"	m	class:TestArena
xmlrpc_get_udp_sender_results	python/ovstest/rpcserver.py	/^    def xmlrpc_get_udp_sender_results(self, handle):$/;"	m	class:TestArena
xmlrpc_interface_assign_ip	python/ovstest/rpcserver.py	/^    def xmlrpc_interface_assign_ip(self, iface, ip_address, mask):$/;"	m	class:TestArena
xmlrpc_interface_up	python/ovstest/rpcserver.py	/^    def xmlrpc_interface_up(self, iface):$/;"	m	class:TestArena
xmlrpc_is_ovs_bridge	python/ovstest/rpcserver.py	/^    def xmlrpc_is_ovs_bridge(self, bridge):$/;"	m	class:TestArena
xmlrpc_ovs_vsctl_set	python/ovstest/rpcserver.py	/^    def xmlrpc_ovs_vsctl_set(self, table, record, column, key, value):$/;"	m	class:TestArena
xmlrpc_uname	python/ovstest/rpcserver.py	/^    def xmlrpc_uname(self):$/;"	m	class:TestArena
xmlrpclib	python/ovstest/rpcserver.py	/^import xmlrpclib$/;"	i
xmlrpclib	python/ovstest/util.py	/^import xmlrpclib$/;"	i
xmlrpclib	utilities/ovs-l3ping	/^import xmlrpclib$/;"	i
xmlrpclib	utilities/ovs-test	/^import xmlrpclib$/;"	i
xout	ofproto/ofproto-dpif-upcall.c	/^    struct xlate_out xout;         \/* Result of xlate_actions(). *\/$/;"	m	struct:upcall	typeref:struct:upcall::xlate_out	file:
xout	ofproto/ofproto-dpif-xlate.c	/^    struct xlate_out *xout;$/;"	m	struct:xlate_ctx	typeref:struct:xlate_ctx::xlate_out	file:
xout	ofproto/ofproto-dpif.c	/^    struct xlate_out xout;$/;"	m	struct:trace_ctx	typeref:struct:trace_ctx::xlate_out	file:
xout_initialized	ofproto/ofproto-dpif-upcall.c	/^    bool xout_initialized;         \/* True if 'xout' must be uninitialized. *\/$/;"	m	struct:upcall	file:
xpipe	lib/socket-util-unix.c	/^xpipe(int fds[2])$/;"	f
xpipe_nonblocking	lib/socket-util-unix.c	/^xpipe_nonblocking(int fds[2])$/;"	f
xport	ofproto/ofproto-dpif-xlate.c	/^struct xport {$/;"	s	file:
xport_get_rstp_port_state	ofproto/ofproto-dpif-xlate.c	/^xport_get_rstp_port_state(const struct xport *xport)$/;"	f	file:
xport_get_stp_port	ofproto/ofproto-dpif-xlate.c	/^xport_get_stp_port(const struct xport *xport)$/;"	f	file:
xport_lookup	ofproto/ofproto-dpif-xlate.c	/^xport_lookup(struct xlate_cfg *xcfg, const struct ofport_dpif *ofport)$/;"	f	file:
xport_rstp_forward_state	ofproto/ofproto-dpif-xlate.c	/^xport_rstp_forward_state(const struct xport *xport)$/;"	f	file:
xport_rstp_learn_state	ofproto/ofproto-dpif-xlate.c	/^xport_rstp_learn_state(const struct xport *xport)$/;"	f	file:
xport_rstp_should_manage_bpdu	ofproto/ofproto-dpif-xlate.c	/^xport_rstp_should_manage_bpdu(const struct xport *xport)$/;"	f	file:
xport_stp_forward_state	ofproto/ofproto-dpif-xlate.c	/^xport_stp_forward_state(const struct xport *xport)$/;"	f	file:
xport_stp_learn_state	ofproto/ofproto-dpif-xlate.c	/^xport_stp_learn_state(const struct xport *xport)$/;"	f	file:
xport_stp_should_forward_bpdu	ofproto/ofproto-dpif-xlate.c	/^xport_stp_should_forward_bpdu(const struct xport *xport)$/;"	f	file:
xports	ofproto/ofproto-dpif-xlate.c	/^    struct hmap xports;           \/* Indexed by ofp_port. *\/$/;"	m	struct:xbridge	typeref:struct:xbridge::hmap	file:
xports	ofproto/ofproto-dpif-xlate.c	/^    struct hmap xports;$/;"	m	struct:xlate_cfg	typeref:struct:xlate_cfg::hmap	file:
xports	ofproto/ofproto-dpif-xlate.c	/^    struct ovs_list xports;        \/* Contains "struct xport"s. *\/$/;"	m	struct:xbundle	typeref:struct:xbundle::ovs_list	file:
xreadlink	lib/util.c	/^xreadlink(const char *filename)$/;"	f	file:
xrealloc	lib/util.c	/^xrealloc(void *p, size_t size)$/;"	f
xset_nonblocking	lib/socket-util.c	/^xset_nonblocking(int fd)$/;"	f
xsigaction	lib/signals.c	/^xsigaction(int signum, const struct sigaction *new, struct sigaction *old)$/;"	f
xsleep	lib/util.c	/^xsleep(unsigned int seconds)$/;"	f
xstrdup	lib/util.c	/^xstrdup(const char *s)$/;"	f
xvasprintf	lib/util.c	/^xvasprintf(const char *format, va_list args)$/;"	f
xzalloc	lib/util.c	/^xzalloc(size_t size)$/;"	f
xzalloc_cacheline	lib/util.c	/^xzalloc_cacheline(size_t size)$/;"	f
yes	utilities/bugtool/ovs-bugtool	/^def yes(prompt):$/;"	f
yiaddr	datapath/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::	file:
yiaddr	datapath/linux/actions.c	/^  struct in_addr ciaddr, yiaddr, siaddr, giaddr;$/;"	m	struct:dhcphdr	typeref:struct:dhcphdr::	file:
yiaddr	lib/dhcp.h	/^    ovs_be32 yiaddr;            \/* Client ("your") IP address. *\/$/;"	m	struct:dhcp_header
your_disc	lib/bfd.c	/^    ovs_be32 your_disc;   \/* Your discriminator. *\/$/;"	m	struct:msg	file:
z1	lib/lacp.c	/^    uint8_t z1[3];            \/* Reserved.  Always 0. *\/$/;"	m	struct:lacp_pdu	file:
z2	lib/lacp.c	/^    uint8_t z2[3];            \/* Reserved.  Always 0. *\/$/;"	m	struct:lacp_pdu	file:
z3	lib/lacp.c	/^    uint8_t z3[64];           \/* Combination of several fields.  Always 0. *\/$/;"	m	struct:lacp_pdu	file:
zero	datapath-windows/ovsext/NetProto.h	/^   UINT8    zero;$/;"	m	struct:PseudoHdr
zero	datapath-windows/ovsext/NetProto.h	/^   UINT8    zero;$/;"	m	struct:PseudoHdrIPv6
zero	include/openflow/nicira-ext.h	/^    uint8_t zero[6];            \/* Must be zero. *\/$/;"	m	struct:nx_controller_id
zero	lib/ofp-actions.c	/^    uint8_t zero;                   \/* Must be zero. *\/$/;"	m	struct:nx_action_controller	file:
zero	lib/ofp-actions.c	/^    uint8_t zero[4];            \/* Reserved. Must be zero. *\/$/;"	m	struct:nx_action_bundle	file:
zero	lib/ofp-actions.c	/^    uint8_t zero[6];            \/* Reserved, must be zero. *\/$/;"	m	struct:nx_action_output_reg	file:
zero	python/ovs/ovsuuid.py	/^def zero():$/;"	f
zeroActionLen	datapath-windows/ovsext/Actions.c	/^    UINT32 zeroActionLen;$/;"	m	struct:_OVS_ACTION_STATS	file:
zeroNBLCount	datapath-windows/ovsext/BufferMgmt.h	/^    LONG          zeroNBLCount;$/;"	m	struct:_OVS_NBL_POOL
zeroSizePool	datapath-windows/ovsext/BufferMgmt.h	/^    NDIS_HANDLE   zeroSizePool;  \/\/ no data, NBL + NB + Context$/;"	m	struct:_OVS_NBL_POOL
zero_rightmost_1bit	lib/util.h	/^zero_rightmost_1bit(uintmax_t x)$/;"	f
zero_statistics	lib/dpctl.h	/^    bool zero_statistics;$/;"	m	struct:dpctl_params
zeros	include/openflow/nicira-ext.h	/^    uint8_t zeros[5];           \/* Align to 64 bits (must be zero). *\/$/;"	m	struct:nx_flow_monitor_request
zeros	lib/ofp-actions.c	/^    uint8_t zeros[4];           \/* Must be zero. *\/$/;"	m	struct:nx_action_cnt_ids	file:
zeros	lib/ofp-actions.c	/^    uint8_t zeros[6];               \/* Must be zero. *\/$/;"	m	struct:nx_action_write_metadata	file:
zipfile	utilities/bugtool/ovs-bugtool	/^import zipfile$/;"	i
zone_imm	lib/ofp-actions.c	/^        ovs_be16 zone_imm;      \/* Immediate value for zone. *\/$/;"	m	union:nx_action_conntrack::__anon127	file:
zone_ofs_nbits	lib/ofp-actions.c	/^        ovs_be16 zone_ofs_nbits;\/* Range to use from source field. *\/$/;"	m	union:nx_action_conntrack::__anon127	file:
zone_src	lib/ofp-actions.c	/^    ovs_be32 zone_src;          \/* Connection tracking context. *\/$/;"	m	struct:nx_action_conntrack	file:
